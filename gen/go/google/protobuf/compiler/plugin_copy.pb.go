// Code generated by protoc-gen-go-copy. DO NOT EDIT.
// source: google/protobuf/compiler/plugin.proto

package pluginpb

import "google.golang.org/protobuf/types/descriptorpb"

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *Version) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *Version:
		x.Major = v.GetMajor()
		x.Minor = v.GetMinor()
		x.Patch = v.GetPatch()
		x.Suffix = v.GetSuffix()
	default:
		if v, ok := v.(interface{ GetMajor() *rune }); ok {
			x.Major = v.GetMajor()
		}
		if v, ok := v.(interface{ GetMinor() *rune }); ok {
			x.Minor = v.GetMinor()
		}
		if v, ok := v.(interface{ GetPatch() *rune }); ok {
			x.Patch = v.GetPatch()
		}
		if v, ok := v.(interface{ GetSuffix() *string }); ok {
			x.Suffix = v.GetSuffix()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *Version) Proto_ShallowClone() (c *Version) {
	if x != nil {
		c = new(Version)
		c.Major = x.Major
		c.Minor = x.Minor
		c.Patch = x.Patch
		c.Suffix = x.Suffix
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *CodeGeneratorRequest) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *CodeGeneratorRequest:
		x.FileToGenerate = v.GetFileToGenerate()
		x.Parameter = v.GetParameter()
		x.ProtoFile = v.GetProtoFile()
		x.CompilerVersion = v.GetCompilerVersion()
	default:
		if v, ok := v.(interface{ GetFileToGenerate() []string }); ok {
			x.FileToGenerate = v.GetFileToGenerate()
		}
		if v, ok := v.(interface{ GetParameter() *string }); ok {
			x.Parameter = v.GetParameter()
		}
		if v, ok := v.(interface {
			GetProtoFile() []*descriptorpb.FileDescriptorProto
		}); ok {
			x.ProtoFile = v.GetProtoFile()
		}
		if v, ok := v.(interface{ GetCompilerVersion() *Version }); ok {
			x.CompilerVersion = v.GetCompilerVersion()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *CodeGeneratorRequest) Proto_ShallowClone() (c *CodeGeneratorRequest) {
	if x != nil {
		c = new(CodeGeneratorRequest)
		c.FileToGenerate = x.FileToGenerate
		c.Parameter = x.Parameter
		c.ProtoFile = x.ProtoFile
		c.CompilerVersion = x.CompilerVersion
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *CodeGeneratorResponse) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *CodeGeneratorResponse:
		x.Error = v.GetError()
		x.SupportedFeatures = v.GetSupportedFeatures()
		x.File = v.GetFile()
	default:
		if v, ok := v.(interface{ GetError() *string }); ok {
			x.Error = v.GetError()
		}
		if v, ok := v.(interface{ GetSupportedFeatures() *uint64 }); ok {
			x.SupportedFeatures = v.GetSupportedFeatures()
		}
		if v, ok := v.(interface {
			GetFile() []*CodeGeneratorResponse_File
		}); ok {
			x.File = v.GetFile()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *CodeGeneratorResponse) Proto_ShallowClone() (c *CodeGeneratorResponse) {
	if x != nil {
		c = new(CodeGeneratorResponse)
		c.Error = x.Error
		c.SupportedFeatures = x.SupportedFeatures
		c.File = x.File
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *CodeGeneratorResponse_File) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *CodeGeneratorResponse_File:
		x.Name = v.GetName()
		x.InsertionPoint = v.GetInsertionPoint()
		x.Content = v.GetContent()
		x.GeneratedCodeInfo = v.GetGeneratedCodeInfo()
	default:
		if v, ok := v.(interface{ GetName() *string }); ok {
			x.Name = v.GetName()
		}
		if v, ok := v.(interface{ GetInsertionPoint() *string }); ok {
			x.InsertionPoint = v.GetInsertionPoint()
		}
		if v, ok := v.(interface{ GetContent() *string }); ok {
			x.Content = v.GetContent()
		}
		if v, ok := v.(interface {
			GetGeneratedCodeInfo() *descriptorpb.GeneratedCodeInfo
		}); ok {
			x.GeneratedCodeInfo = v.GetGeneratedCodeInfo()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *CodeGeneratorResponse_File) Proto_ShallowClone() (c *CodeGeneratorResponse_File) {
	if x != nil {
		c = new(CodeGeneratorResponse_File)
		c.Name = x.Name
		c.InsertionPoint = x.InsertionPoint
		c.Content = x.Content
		c.GeneratedCodeInfo = x.GeneratedCodeInfo
	}
	return
}
