// Code generated by protoc-gen-go-copy. DO NOT EDIT.
// source: google/type/phone_number.proto

package phone_number

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *PhoneNumber) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *PhoneNumber:
		x.Kind = v.GetKind()
		x.Extension = v.GetExtension()
	default:
		if v, ok := v.(interface{ GetKind() isPhoneNumber_Kind }); ok {
			x.Kind = v.GetKind()
		} else {
			func() {
				if v, ok := v.(interface{ GetE164Number() string }); ok {
					var defaultValue string
					if v := v.GetE164Number(); v != defaultValue {
						x.Kind = &PhoneNumber_E164Number{E164Number: v}
						return
					}
				}
				if v, ok := v.(interface{ GetShortCode() *PhoneNumber_ShortCode }); ok {
					var defaultValue *PhoneNumber_ShortCode
					if v := v.GetShortCode(); v != defaultValue {
						x.Kind = &PhoneNumber_ShortCode_{ShortCode: v}
						return
					}
				}
			}()
		}
		if v, ok := v.(interface{ GetExtension() string }); ok {
			x.Extension = v.GetExtension()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *PhoneNumber) Proto_ShallowClone() (c *PhoneNumber) {
	if x != nil {
		c = new(PhoneNumber)
		c.Kind = x.Kind
		c.Extension = x.Extension
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *PhoneNumber_ShortCode) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *PhoneNumber_ShortCode:
		x.RegionCode = v.GetRegionCode()
		x.Number = v.GetNumber()
	default:
		if v, ok := v.(interface{ GetRegionCode() string }); ok {
			x.RegionCode = v.GetRegionCode()
		}
		if v, ok := v.(interface{ GetNumber() string }); ok {
			x.Number = v.GetNumber()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *PhoneNumber_ShortCode) Proto_ShallowClone() (c *PhoneNumber_ShortCode) {
	if x != nil {
		c = new(PhoneNumber_ShortCode)
		c.RegionCode = x.RegionCode
		c.Number = x.Number
	}
	return
}
