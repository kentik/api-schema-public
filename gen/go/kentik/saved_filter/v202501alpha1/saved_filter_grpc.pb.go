// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: kentik/saved_filter/v202501alpha1/saved_filter.proto

package saved_filter

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	SavedFilterService_CreateSavedFilter_FullMethodName   = "/kentik.saved_filter.v202501alpha1.SavedFilterService/CreateSavedFilter"
	SavedFilterService_ListSavedFilters_FullMethodName    = "/kentik.saved_filter.v202501alpha1.SavedFilterService/ListSavedFilters"
	SavedFilterService_ListSavedFiltersAll_FullMethodName = "/kentik.saved_filter.v202501alpha1.SavedFilterService/ListSavedFiltersAll"
	SavedFilterService_GetSavedFilter_FullMethodName      = "/kentik.saved_filter.v202501alpha1.SavedFilterService/GetSavedFilter"
	SavedFilterService_UpdateSavedFilter_FullMethodName   = "/kentik.saved_filter.v202501alpha1.SavedFilterService/UpdateSavedFilter"
	SavedFilterService_DeleteSavedFilter_FullMethodName   = "/kentik.saved_filter.v202501alpha1.SavedFilterService/DeleteSavedFilter"
)

// SavedFilterServiceClient is the client API for SavedFilterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SavedFilterServiceClient interface {
	CreateSavedFilter(ctx context.Context, in *CreateSavedFilterRequest, opts ...grpc.CallOption) (*CreateSavedFilterResponse, error)
	ListSavedFilters(ctx context.Context, in *ListSavedFiltersRequest, opts ...grpc.CallOption) (*ListSavedFiltersResponse, error)
	ListSavedFiltersAll(ctx context.Context, in *ListSavedFiltersAllRequest, opts ...grpc.CallOption) (*ListSavedFiltersAllResponse, error)
	GetSavedFilter(ctx context.Context, in *GetSavedFilterRequest, opts ...grpc.CallOption) (*GetSavedFilterResponse, error)
	UpdateSavedFilter(ctx context.Context, in *UpdateSavedFilterRequest, opts ...grpc.CallOption) (*UpdateSavedFilterResponse, error)
	DeleteSavedFilter(ctx context.Context, in *DeleteSavedFilterRequest, opts ...grpc.CallOption) (*DeleteSavedFilterResponse, error)
}

type savedFilterServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSavedFilterServiceClient(cc grpc.ClientConnInterface) SavedFilterServiceClient {
	return &savedFilterServiceClient{cc}
}

func (c *savedFilterServiceClient) CreateSavedFilter(ctx context.Context, in *CreateSavedFilterRequest, opts ...grpc.CallOption) (*CreateSavedFilterResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateSavedFilterResponse)
	err := c.cc.Invoke(ctx, SavedFilterService_CreateSavedFilter_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *savedFilterServiceClient) ListSavedFilters(ctx context.Context, in *ListSavedFiltersRequest, opts ...grpc.CallOption) (*ListSavedFiltersResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListSavedFiltersResponse)
	err := c.cc.Invoke(ctx, SavedFilterService_ListSavedFilters_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *savedFilterServiceClient) ListSavedFiltersAll(ctx context.Context, in *ListSavedFiltersAllRequest, opts ...grpc.CallOption) (*ListSavedFiltersAllResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListSavedFiltersAllResponse)
	err := c.cc.Invoke(ctx, SavedFilterService_ListSavedFiltersAll_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *savedFilterServiceClient) GetSavedFilter(ctx context.Context, in *GetSavedFilterRequest, opts ...grpc.CallOption) (*GetSavedFilterResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetSavedFilterResponse)
	err := c.cc.Invoke(ctx, SavedFilterService_GetSavedFilter_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *savedFilterServiceClient) UpdateSavedFilter(ctx context.Context, in *UpdateSavedFilterRequest, opts ...grpc.CallOption) (*UpdateSavedFilterResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateSavedFilterResponse)
	err := c.cc.Invoke(ctx, SavedFilterService_UpdateSavedFilter_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *savedFilterServiceClient) DeleteSavedFilter(ctx context.Context, in *DeleteSavedFilterRequest, opts ...grpc.CallOption) (*DeleteSavedFilterResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteSavedFilterResponse)
	err := c.cc.Invoke(ctx, SavedFilterService_DeleteSavedFilter_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SavedFilterServiceServer is the server API for SavedFilterService service.
// All implementations should embed UnimplementedSavedFilterServiceServer
// for forward compatibility.
type SavedFilterServiceServer interface {
	CreateSavedFilter(context.Context, *CreateSavedFilterRequest) (*CreateSavedFilterResponse, error)
	ListSavedFilters(context.Context, *ListSavedFiltersRequest) (*ListSavedFiltersResponse, error)
	ListSavedFiltersAll(context.Context, *ListSavedFiltersAllRequest) (*ListSavedFiltersAllResponse, error)
	GetSavedFilter(context.Context, *GetSavedFilterRequest) (*GetSavedFilterResponse, error)
	UpdateSavedFilter(context.Context, *UpdateSavedFilterRequest) (*UpdateSavedFilterResponse, error)
	DeleteSavedFilter(context.Context, *DeleteSavedFilterRequest) (*DeleteSavedFilterResponse, error)
}

// UnimplementedSavedFilterServiceServer should be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedSavedFilterServiceServer struct{}

func (UnimplementedSavedFilterServiceServer) CreateSavedFilter(context.Context, *CreateSavedFilterRequest) (*CreateSavedFilterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSavedFilter not implemented")
}
func (UnimplementedSavedFilterServiceServer) ListSavedFilters(context.Context, *ListSavedFiltersRequest) (*ListSavedFiltersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSavedFilters not implemented")
}
func (UnimplementedSavedFilterServiceServer) ListSavedFiltersAll(context.Context, *ListSavedFiltersAllRequest) (*ListSavedFiltersAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSavedFiltersAll not implemented")
}
func (UnimplementedSavedFilterServiceServer) GetSavedFilter(context.Context, *GetSavedFilterRequest) (*GetSavedFilterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSavedFilter not implemented")
}
func (UnimplementedSavedFilterServiceServer) UpdateSavedFilter(context.Context, *UpdateSavedFilterRequest) (*UpdateSavedFilterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSavedFilter not implemented")
}
func (UnimplementedSavedFilterServiceServer) DeleteSavedFilter(context.Context, *DeleteSavedFilterRequest) (*DeleteSavedFilterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSavedFilter not implemented")
}
func (UnimplementedSavedFilterServiceServer) testEmbeddedByValue() {}

// UnsafeSavedFilterServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SavedFilterServiceServer will
// result in compilation errors.
type UnsafeSavedFilterServiceServer interface {
	mustEmbedUnimplementedSavedFilterServiceServer()
}

func RegisterSavedFilterServiceServer(s grpc.ServiceRegistrar, srv SavedFilterServiceServer) {
	// If the following call pancis, it indicates UnimplementedSavedFilterServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&SavedFilterService_ServiceDesc, srv)
}

func _SavedFilterService_CreateSavedFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSavedFilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SavedFilterServiceServer).CreateSavedFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SavedFilterService_CreateSavedFilter_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SavedFilterServiceServer).CreateSavedFilter(ctx, req.(*CreateSavedFilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SavedFilterService_ListSavedFilters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSavedFiltersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SavedFilterServiceServer).ListSavedFilters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SavedFilterService_ListSavedFilters_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SavedFilterServiceServer).ListSavedFilters(ctx, req.(*ListSavedFiltersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SavedFilterService_ListSavedFiltersAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSavedFiltersAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SavedFilterServiceServer).ListSavedFiltersAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SavedFilterService_ListSavedFiltersAll_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SavedFilterServiceServer).ListSavedFiltersAll(ctx, req.(*ListSavedFiltersAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SavedFilterService_GetSavedFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSavedFilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SavedFilterServiceServer).GetSavedFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SavedFilterService_GetSavedFilter_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SavedFilterServiceServer).GetSavedFilter(ctx, req.(*GetSavedFilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SavedFilterService_UpdateSavedFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSavedFilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SavedFilterServiceServer).UpdateSavedFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SavedFilterService_UpdateSavedFilter_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SavedFilterServiceServer).UpdateSavedFilter(ctx, req.(*UpdateSavedFilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SavedFilterService_DeleteSavedFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSavedFilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SavedFilterServiceServer).DeleteSavedFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SavedFilterService_DeleteSavedFilter_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SavedFilterServiceServer).DeleteSavedFilter(ctx, req.(*DeleteSavedFilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SavedFilterService_ServiceDesc is the grpc.ServiceDesc for SavedFilterService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SavedFilterService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "kentik.saved_filter.v202501alpha1.SavedFilterService",
	HandlerType: (*SavedFilterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSavedFilter",
			Handler:    _SavedFilterService_CreateSavedFilter_Handler,
		},
		{
			MethodName: "ListSavedFilters",
			Handler:    _SavedFilterService_ListSavedFilters_Handler,
		},
		{
			MethodName: "ListSavedFiltersAll",
			Handler:    _SavedFilterService_ListSavedFiltersAll_Handler,
		},
		{
			MethodName: "GetSavedFilter",
			Handler:    _SavedFilterService_GetSavedFilter_Handler,
		},
		{
			MethodName: "UpdateSavedFilter",
			Handler:    _SavedFilterService_UpdateSavedFilter_Handler,
		},
		{
			MethodName: "DeleteSavedFilter",
			Handler:    _SavedFilterService_DeleteSavedFilter_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kentik/saved_filter/v202501alpha1/saved_filter.proto",
}
