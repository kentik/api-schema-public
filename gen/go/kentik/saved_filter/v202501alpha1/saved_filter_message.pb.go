// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: kentik/saved_filter/v202501alpha1/saved_filter_message.proto

package saved_filter

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FilterField int32

const (
	FilterField_FILTER_FIELD_UNSPECIFIED                    FilterField = 0
	FilterField_FILTER_FIELD_DST_AS                         FilterField = 1 // default value
	FilterField_FILTER_FIELD_DST_NEXTHOP_AS                 FilterField = 2
	FilterField_FILTER_FIELD_DST_SECOND_ASN                 FilterField = 3
	FilterField_FILTER_FIELD_DST_THIRD_ASN                  FilterField = 4
	FilterField_FILTER_FIELD_DST_BGP_ASPATH                 FilterField = 5
	FilterField_FILTER_FIELD_DST_BGP_COMMUNITY              FilterField = 6
	FilterField_FILTER_FIELD_DST_ETH_MAC                    FilterField = 7
	FilterField_FILTER_FIELD_DST_FLOW_TAGS                  FilterField = 8
	FilterField_FILTER_FIELD_DST_GEO                        FilterField = 9
	FilterField_FILTER_FIELD_DST_GEO_REGION                 FilterField = 10
	FilterField_FILTER_FIELD_DST_GEO_CITY                   FilterField = 11
	FilterField_FILTER_FIELD_DST_ROUTE_LENGTH               FilterField = 12
	FilterField_FILTER_FIELD_INET_DST_ADDR                  FilterField = 13
	FilterField_FILTER_FIELD_IPV4_DST_ROUTE_PREFIX          FilterField = 14
	FilterField_FILTER_FIELD_IPV4_DST_NEXT_HOP              FilterField = 15
	FilterField_FILTER_FIELD_L4_DST_PORT                    FilterField = 16
	FilterField_FILTER_FIELD_OUTPUT_PORT                    FilterField = 17
	FilterField_FILTER_FIELD_I_OUTPUT_SNMP_ALIAS            FilterField = 18
	FilterField_FILTER_FIELD_I_OUTPUT_INTERFACE_DESCRIPTION FilterField = 19
	FilterField_FILTER_FIELD_SRC_AS                         FilterField = 20
	FilterField_FILTER_FIELD_SRC_NEXTHOP_AS                 FilterField = 21
	FilterField_FILTER_FIELD_SRC_SECOND_ASN                 FilterField = 22
	FilterField_FILTER_FIELD_SRC_THIRD_ASN                  FilterField = 23
	FilterField_FILTER_FIELD_SRC_BGP_ASPATH                 FilterField = 24
	FilterField_FILTER_FIELD_SRC_BGP_COMMUNITY              FilterField = 25
	FilterField_FILTER_FIELD_SRC_ETH_MAC                    FilterField = 26
	FilterField_FILTER_FIELD_SRC_FLOW_TAGS                  FilterField = 27
	FilterField_FILTER_FIELD_SRC_GEO                        FilterField = 28
	FilterField_FILTER_FIELD_SRC_GEO_REGION                 FilterField = 29
	FilterField_FILTER_FIELD_SRC_GEO_CITY                   FilterField = 30
	FilterField_FILTER_FIELD_SRC_ROUTE_LENGTH               FilterField = 31
	FilterField_FILTER_FIELD_INET_SRC_ADDR                  FilterField = 32
	FilterField_FILTER_FIELD_IPV4_SRC_ROUTE_PREFIX          FilterField = 33
	FilterField_FILTER_FIELD_IPV4_SRC_NEXT_HOP              FilterField = 34
	FilterField_FILTER_FIELD_L4_SRC_PORT                    FilterField = 35
	FilterField_FILTER_FIELD_INPUT_PORT                     FilterField = 36
	FilterField_FILTER_FIELD_I_INPUT_SNMP_ALIAS             FilterField = 37
	FilterField_FILTER_FIELD_I_INPUT_INTERFACE_DESCRIPTION  FilterField = 38
	FilterField_FILTER_FIELD_BOTH_PKTS                      FilterField = 39
	FilterField_FILTER_FIELD_I_DEVICE_NAME                  FilterField = 40
	FilterField_FILTER_FIELD_PROTOCOL                       FilterField = 41
	FilterField_FILTER_FIELD_TCP_FLAGS                      FilterField = 42
	FilterField_FILTER_FIELD_TCP_FLAGS_RAW                  FilterField = 43
	FilterField_FILTER_FIELD_TCP_RETRANSMIT                 FilterField = 44
	FilterField_FILTER_FIELD_TOS                            FilterField = 45
	FilterField_FILTER_FIELD_VLAN_IN                        FilterField = 46
	FilterField_FILTER_FIELD_VLAN_OUT                       FilterField = 47
)

// Enum value maps for FilterField.
var (
	FilterField_name = map[int32]string{
		0:  "FILTER_FIELD_UNSPECIFIED",
		1:  "FILTER_FIELD_DST_AS",
		2:  "FILTER_FIELD_DST_NEXTHOP_AS",
		3:  "FILTER_FIELD_DST_SECOND_ASN",
		4:  "FILTER_FIELD_DST_THIRD_ASN",
		5:  "FILTER_FIELD_DST_BGP_ASPATH",
		6:  "FILTER_FIELD_DST_BGP_COMMUNITY",
		7:  "FILTER_FIELD_DST_ETH_MAC",
		8:  "FILTER_FIELD_DST_FLOW_TAGS",
		9:  "FILTER_FIELD_DST_GEO",
		10: "FILTER_FIELD_DST_GEO_REGION",
		11: "FILTER_FIELD_DST_GEO_CITY",
		12: "FILTER_FIELD_DST_ROUTE_LENGTH",
		13: "FILTER_FIELD_INET_DST_ADDR",
		14: "FILTER_FIELD_IPV4_DST_ROUTE_PREFIX",
		15: "FILTER_FIELD_IPV4_DST_NEXT_HOP",
		16: "FILTER_FIELD_L4_DST_PORT",
		17: "FILTER_FIELD_OUTPUT_PORT",
		18: "FILTER_FIELD_I_OUTPUT_SNMP_ALIAS",
		19: "FILTER_FIELD_I_OUTPUT_INTERFACE_DESCRIPTION",
		20: "FILTER_FIELD_SRC_AS",
		21: "FILTER_FIELD_SRC_NEXTHOP_AS",
		22: "FILTER_FIELD_SRC_SECOND_ASN",
		23: "FILTER_FIELD_SRC_THIRD_ASN",
		24: "FILTER_FIELD_SRC_BGP_ASPATH",
		25: "FILTER_FIELD_SRC_BGP_COMMUNITY",
		26: "FILTER_FIELD_SRC_ETH_MAC",
		27: "FILTER_FIELD_SRC_FLOW_TAGS",
		28: "FILTER_FIELD_SRC_GEO",
		29: "FILTER_FIELD_SRC_GEO_REGION",
		30: "FILTER_FIELD_SRC_GEO_CITY",
		31: "FILTER_FIELD_SRC_ROUTE_LENGTH",
		32: "FILTER_FIELD_INET_SRC_ADDR",
		33: "FILTER_FIELD_IPV4_SRC_ROUTE_PREFIX",
		34: "FILTER_FIELD_IPV4_SRC_NEXT_HOP",
		35: "FILTER_FIELD_L4_SRC_PORT",
		36: "FILTER_FIELD_INPUT_PORT",
		37: "FILTER_FIELD_I_INPUT_SNMP_ALIAS",
		38: "FILTER_FIELD_I_INPUT_INTERFACE_DESCRIPTION",
		39: "FILTER_FIELD_BOTH_PKTS",
		40: "FILTER_FIELD_I_DEVICE_NAME",
		41: "FILTER_FIELD_PROTOCOL",
		42: "FILTER_FIELD_TCP_FLAGS",
		43: "FILTER_FIELD_TCP_FLAGS_RAW",
		44: "FILTER_FIELD_TCP_RETRANSMIT",
		45: "FILTER_FIELD_TOS",
		46: "FILTER_FIELD_VLAN_IN",
		47: "FILTER_FIELD_VLAN_OUT",
	}
	FilterField_value = map[string]int32{
		"FILTER_FIELD_UNSPECIFIED":                    0,
		"FILTER_FIELD_DST_AS":                         1,
		"FILTER_FIELD_DST_NEXTHOP_AS":                 2,
		"FILTER_FIELD_DST_SECOND_ASN":                 3,
		"FILTER_FIELD_DST_THIRD_ASN":                  4,
		"FILTER_FIELD_DST_BGP_ASPATH":                 5,
		"FILTER_FIELD_DST_BGP_COMMUNITY":              6,
		"FILTER_FIELD_DST_ETH_MAC":                    7,
		"FILTER_FIELD_DST_FLOW_TAGS":                  8,
		"FILTER_FIELD_DST_GEO":                        9,
		"FILTER_FIELD_DST_GEO_REGION":                 10,
		"FILTER_FIELD_DST_GEO_CITY":                   11,
		"FILTER_FIELD_DST_ROUTE_LENGTH":               12,
		"FILTER_FIELD_INET_DST_ADDR":                  13,
		"FILTER_FIELD_IPV4_DST_ROUTE_PREFIX":          14,
		"FILTER_FIELD_IPV4_DST_NEXT_HOP":              15,
		"FILTER_FIELD_L4_DST_PORT":                    16,
		"FILTER_FIELD_OUTPUT_PORT":                    17,
		"FILTER_FIELD_I_OUTPUT_SNMP_ALIAS":            18,
		"FILTER_FIELD_I_OUTPUT_INTERFACE_DESCRIPTION": 19,
		"FILTER_FIELD_SRC_AS":                         20,
		"FILTER_FIELD_SRC_NEXTHOP_AS":                 21,
		"FILTER_FIELD_SRC_SECOND_ASN":                 22,
		"FILTER_FIELD_SRC_THIRD_ASN":                  23,
		"FILTER_FIELD_SRC_BGP_ASPATH":                 24,
		"FILTER_FIELD_SRC_BGP_COMMUNITY":              25,
		"FILTER_FIELD_SRC_ETH_MAC":                    26,
		"FILTER_FIELD_SRC_FLOW_TAGS":                  27,
		"FILTER_FIELD_SRC_GEO":                        28,
		"FILTER_FIELD_SRC_GEO_REGION":                 29,
		"FILTER_FIELD_SRC_GEO_CITY":                   30,
		"FILTER_FIELD_SRC_ROUTE_LENGTH":               31,
		"FILTER_FIELD_INET_SRC_ADDR":                  32,
		"FILTER_FIELD_IPV4_SRC_ROUTE_PREFIX":          33,
		"FILTER_FIELD_IPV4_SRC_NEXT_HOP":              34,
		"FILTER_FIELD_L4_SRC_PORT":                    35,
		"FILTER_FIELD_INPUT_PORT":                     36,
		"FILTER_FIELD_I_INPUT_SNMP_ALIAS":             37,
		"FILTER_FIELD_I_INPUT_INTERFACE_DESCRIPTION":  38,
		"FILTER_FIELD_BOTH_PKTS":                      39,
		"FILTER_FIELD_I_DEVICE_NAME":                  40,
		"FILTER_FIELD_PROTOCOL":                       41,
		"FILTER_FIELD_TCP_FLAGS":                      42,
		"FILTER_FIELD_TCP_FLAGS_RAW":                  43,
		"FILTER_FIELD_TCP_RETRANSMIT":                 44,
		"FILTER_FIELD_TOS":                            45,
		"FILTER_FIELD_VLAN_IN":                        46,
		"FILTER_FIELD_VLAN_OUT":                       47,
	}
)

func (x FilterField) Enum() *FilterField {
	p := new(FilterField)
	*p = x
	return p
}

func (x FilterField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterField) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_enumTypes[0].Descriptor()
}

func (FilterField) Type() protoreflect.EnumType {
	return &file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_enumTypes[0]
}

func (x FilterField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterField.Descriptor instead.
func (FilterField) EnumDescriptor() ([]byte, []int) {
	return file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_rawDescGZIP(), []int{0}
}

type FilterOperator int32

const (
	FilterOperator_FILTER_OPERATOR_UNSPECIFIED        FilterOperator = 0
	FilterOperator_FILTER_OPERATOR_EQUAL              FilterOperator = 1 // "=", default value
	FilterOperator_FILTER_OPERATOR_NOT_EQUAL          FilterOperator = 2 // "<>"
	FilterOperator_FILTER_OPERATOR_CONTAINS           FilterOperator = 3 // "ILIKE"
	FilterOperator_FILTER_OPERATOR_NOT_CONTAINS       FilterOperator = 4 // "NOT ILIKE"
	FilterOperator_FILTER_OPERATOR_REGEX_CONTAINS     FilterOperator = 5 // "~"
	FilterOperator_FILTER_OPERATOR_REGEX_NOT_CONTAINS FilterOperator = 6 // "!~"
	FilterOperator_FILTER_OPERATOR_GREATER_THAN       FilterOperator = 7 // ">"
	FilterOperator_FILTER_OPERATOR_LESS_THAN          FilterOperator = 8 // "<"
	FilterOperator_FILTER_OPERATOR_BITWISE_AND        FilterOperator = 9 // "&"
)

// Enum value maps for FilterOperator.
var (
	FilterOperator_name = map[int32]string{
		0: "FILTER_OPERATOR_UNSPECIFIED",
		1: "FILTER_OPERATOR_EQUAL",
		2: "FILTER_OPERATOR_NOT_EQUAL",
		3: "FILTER_OPERATOR_CONTAINS",
		4: "FILTER_OPERATOR_NOT_CONTAINS",
		5: "FILTER_OPERATOR_REGEX_CONTAINS",
		6: "FILTER_OPERATOR_REGEX_NOT_CONTAINS",
		7: "FILTER_OPERATOR_GREATER_THAN",
		8: "FILTER_OPERATOR_LESS_THAN",
		9: "FILTER_OPERATOR_BITWISE_AND",
	}
	FilterOperator_value = map[string]int32{
		"FILTER_OPERATOR_UNSPECIFIED":        0,
		"FILTER_OPERATOR_EQUAL":              1,
		"FILTER_OPERATOR_NOT_EQUAL":          2,
		"FILTER_OPERATOR_CONTAINS":           3,
		"FILTER_OPERATOR_NOT_CONTAINS":       4,
		"FILTER_OPERATOR_REGEX_CONTAINS":     5,
		"FILTER_OPERATOR_REGEX_NOT_CONTAINS": 6,
		"FILTER_OPERATOR_GREATER_THAN":       7,
		"FILTER_OPERATOR_LESS_THAN":          8,
		"FILTER_OPERATOR_BITWISE_AND":        9,
	}
)

func (x FilterOperator) Enum() *FilterOperator {
	p := new(FilterOperator)
	*p = x
	return p
}

func (x FilterOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_enumTypes[1].Descriptor()
}

func (FilterOperator) Type() protoreflect.EnumType {
	return &file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_enumTypes[1]
}

func (x FilterOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterOperator.Descriptor instead.
func (FilterOperator) EnumDescriptor() ([]byte, []int) {
	return file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_rawDescGZIP(), []int{1}
}

type FilterLevel int32

const (
	FilterLevel_FILTER_LEVEL_UNSPECIFIED FilterLevel = 0
	FilterLevel_FILTER_LEVEL_COMPANY     FilterLevel = 1
	FilterLevel_FILTER_LEVEL_GLOBAL      FilterLevel = 2
	FilterLevel_FILTER_LEVEL_USER        FilterLevel = 3
)

// Enum value maps for FilterLevel.
var (
	FilterLevel_name = map[int32]string{
		0: "FILTER_LEVEL_UNSPECIFIED",
		1: "FILTER_LEVEL_COMPANY",
		2: "FILTER_LEVEL_GLOBAL",
		3: "FILTER_LEVEL_USER",
	}
	FilterLevel_value = map[string]int32{
		"FILTER_LEVEL_UNSPECIFIED": 0,
		"FILTER_LEVEL_COMPANY":     1,
		"FILTER_LEVEL_GLOBAL":      2,
		"FILTER_LEVEL_USER":        3,
	}
)

func (x FilterLevel) Enum() *FilterLevel {
	p := new(FilterLevel)
	*p = x
	return p
}

func (x FilterLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_enumTypes[2].Descriptor()
}

func (FilterLevel) Type() protoreflect.EnumType {
	return &file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_enumTypes[2]
}

func (x FilterLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterLevel.Descriptor instead.
func (FilterLevel) EnumDescriptor() ([]byte, []int) {
	return file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_rawDescGZIP(), []int{2}
}

type SavedFilterFilter struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	FilterField       FilterField            `protobuf:"varint,1,opt,name=filter_field,json=filterField,proto3,enum=kentik.saved_filter.v202501alpha1.FilterField" json:"filter_field,omitempty"`
	Operator          FilterOperator         `protobuf:"varint,2,opt,name=operator,proto3,enum=kentik.saved_filter.v202501alpha1.FilterOperator" json:"operator,omitempty"`
	FilterValue       string                 `protobuf:"bytes,3,opt,name=filter_value,json=filterValue,proto3" json:"filter_value,omitempty"`
	FilterFieldString string                 `protobuf:"bytes,4,opt,name=filter_field_string,json=filterFieldString,proto3" json:"filter_field_string,omitempty"`
	Metric            string                 `protobuf:"bytes,5,opt,name=metric,proto3" json:"metric,omitempty"`
	Aggregate         string                 `protobuf:"bytes,6,opt,name=aggregate,proto3" json:"aggregate,omitempty"`
	RightFilterField  string                 `protobuf:"bytes,7,opt,name=right_filter_field,json=rightFilterField,proto3" json:"right_filter_field,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SavedFilterFilter) Reset() {
	*x = SavedFilterFilter{}
	mi := &file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SavedFilterFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavedFilterFilter) ProtoMessage() {}

func (x *SavedFilterFilter) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavedFilterFilter.ProtoReflect.Descriptor instead.
func (*SavedFilterFilter) Descriptor() ([]byte, []int) {
	return file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_rawDescGZIP(), []int{0}
}

func (x *SavedFilterFilter) GetFilterField() FilterField {
	if x != nil {
		return x.FilterField
	}
	return FilterField_FILTER_FIELD_UNSPECIFIED
}

func (x *SavedFilterFilter) GetOperator() FilterOperator {
	if x != nil {
		return x.Operator
	}
	return FilterOperator_FILTER_OPERATOR_UNSPECIFIED
}

func (x *SavedFilterFilter) GetFilterValue() string {
	if x != nil {
		return x.FilterValue
	}
	return ""
}

func (x *SavedFilterFilter) GetFilterFieldString() string {
	if x != nil {
		return x.FilterFieldString
	}
	return ""
}

func (x *SavedFilterFilter) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *SavedFilterFilter) GetAggregate() string {
	if x != nil {
		return x.Aggregate
	}
	return ""
}

func (x *SavedFilterFilter) GetRightFilterField() string {
	if x != nil {
		return x.RightFilterField
	}
	return ""
}

type SavedFilterFilterId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilterId      string                 `protobuf:"bytes,1,opt,name=filter_id,json=filterId,proto3" json:"filter_id,omitempty"`
	IsNot         bool                   `protobuf:"varint,2,opt,name=is_not,json=isNot,proto3" json:"is_not,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SavedFilterFilterId) Reset() {
	*x = SavedFilterFilterId{}
	mi := &file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SavedFilterFilterId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavedFilterFilterId) ProtoMessage() {}

func (x *SavedFilterFilterId) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavedFilterFilterId.ProtoReflect.Descriptor instead.
func (*SavedFilterFilterId) Descriptor() ([]byte, []int) {
	return file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_rawDescGZIP(), []int{1}
}

func (x *SavedFilterFilterId) GetFilterId() string {
	if x != nil {
		return x.FilterId
	}
	return ""
}

func (x *SavedFilterFilterId) GetIsNot() bool {
	if x != nil {
		return x.IsNot
	}
	return false
}

type SavedFilterFilterGroup struct {
	state              protoimpl.MessageState    `protogen:"open.v1"`
	Any                bool                      `protobuf:"varint,1,opt,name=any,proto3" json:"any,omitempty"`
	Filters            []*SavedFilterFilter      `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	Not                bool                      `protobuf:"varint,3,opt,name=not,proto3" json:"not,omitempty"`
	SavedFilterIds     []*SavedFilterFilterId    `protobuf:"bytes,4,rep,name=saved_filter_ids,json=savedFilterIds,proto3" json:"saved_filter_ids,omitempty"`
	NestedFilterGroups []*SavedFilterFilterGroup `protobuf:"bytes,5,rep,name=nested_filter_groups,json=nestedFilterGroups,proto3" json:"nested_filter_groups,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SavedFilterFilterGroup) Reset() {
	*x = SavedFilterFilterGroup{}
	mi := &file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SavedFilterFilterGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavedFilterFilterGroup) ProtoMessage() {}

func (x *SavedFilterFilterGroup) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavedFilterFilterGroup.ProtoReflect.Descriptor instead.
func (*SavedFilterFilterGroup) Descriptor() ([]byte, []int) {
	return file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_rawDescGZIP(), []int{2}
}

func (x *SavedFilterFilterGroup) GetAny() bool {
	if x != nil {
		return x.Any
	}
	return false
}

func (x *SavedFilterFilterGroup) GetFilters() []*SavedFilterFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *SavedFilterFilterGroup) GetNot() bool {
	if x != nil {
		return x.Not
	}
	return false
}

func (x *SavedFilterFilterGroup) GetSavedFilterIds() []*SavedFilterFilterId {
	if x != nil {
		return x.SavedFilterIds
	}
	return nil
}

func (x *SavedFilterFilterGroup) GetNestedFilterGroups() []*SavedFilterFilterGroup {
	if x != nil {
		return x.NestedFilterGroups
	}
	return nil
}

type SavedFilterFilters struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Any           bool                      `protobuf:"varint,1,opt,name=any,proto3" json:"any,omitempty"`
	FilterGroups  []*SavedFilterFilterGroup `protobuf:"bytes,2,rep,name=filter_groups,json=filterGroups,proto3" json:"filter_groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SavedFilterFilters) Reset() {
	*x = SavedFilterFilters{}
	mi := &file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SavedFilterFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavedFilterFilters) ProtoMessage() {}

func (x *SavedFilterFilters) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavedFilterFilters.ProtoReflect.Descriptor instead.
func (*SavedFilterFilters) Descriptor() ([]byte, []int) {
	return file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_rawDescGZIP(), []int{3}
}

func (x *SavedFilterFilters) GetAny() bool {
	if x != nil {
		return x.Any
	}
	return false
}

func (x *SavedFilterFilters) GetFilterGroups() []*SavedFilterFilterGroup {
	if x != nil {
		return x.FilterGroups
	}
	return nil
}

type SavedFilter struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FilterName        string                 `protobuf:"bytes,2,opt,name=filter_name,json=filterName,proto3" json:"filter_name,omitempty"`
	FilterDescription string                 `protobuf:"bytes,3,opt,name=filter_description,json=filterDescription,proto3" json:"filter_description,omitempty"`
	Filters           *SavedFilterFilters    `protobuf:"bytes,4,opt,name=filters,proto3" json:"filters,omitempty"`
	FilterLevel       FilterLevel            `protobuf:"varint,5,opt,name=filter_level,json=filterLevel,proto3,enum=kentik.saved_filter.v202501alpha1.FilterLevel" json:"filter_level,omitempty"`
	CreatedDate       *timestamppb.Timestamp `protobuf:"bytes,26,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	UpdatedDate       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_date,json=updatedDate,proto3" json:"updated_date,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SavedFilter) Reset() {
	*x = SavedFilter{}
	mi := &file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SavedFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavedFilter) ProtoMessage() {}

func (x *SavedFilter) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavedFilter.ProtoReflect.Descriptor instead.
func (*SavedFilter) Descriptor() ([]byte, []int) {
	return file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_rawDescGZIP(), []int{4}
}

func (x *SavedFilter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SavedFilter) GetFilterName() string {
	if x != nil {
		return x.FilterName
	}
	return ""
}

func (x *SavedFilter) GetFilterDescription() string {
	if x != nil {
		return x.FilterDescription
	}
	return ""
}

func (x *SavedFilter) GetFilters() *SavedFilterFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *SavedFilter) GetFilterLevel() FilterLevel {
	if x != nil {
		return x.FilterLevel
	}
	return FilterLevel_FILTER_LEVEL_UNSPECIFIED
}

func (x *SavedFilter) GetCreatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *SavedFilter) GetUpdatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedDate
	}
	return nil
}

var File_kentik_saved_filter_v202501alpha1_saved_filter_message_proto protoreflect.FileDescriptor

const file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_rawDesc = "" +
	"\n" +
	"<kentik/saved_filter/v202501alpha1/saved_filter_message.proto\x12!kentik.saved_filter.v202501alpha1\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x82\x05\n" +
	"\x11SavedFilterFilter\x12|\n" +
	"\ffilter_field\x18\x01 \x01(\x0e2..kentik.saved_filter.v202501alpha1.FilterFieldB)\x92A&2$A field operand. Defaults to DST_AS.R\vfilterField\x12y\n" +
	"\boperator\x18\x02 \x01(\x0e21.kentik.saved_filter.v202501alpha1.FilterOperatorB*\x92A'2%Equality operator. Defaults to EQUAL.R\boperator\x12N\n" +
	"\ffilter_value\x18\x03 \x01(\tB+\x92A(2&Value to perform equality comparisons.R\vfilterValue\x12[\n" +
	"\x13filter_field_string\x18\x04 \x01(\tB+\x92A(2&String representation of filter field.R\x11filterFieldString\x12D\n" +
	"\x06metric\x18\x05 \x01(\tB,\x92A)2'Filter field as metric for data series.R\x06metric\x128\n" +
	"\taggregate\x18\x06 \x01(\tB\x1a\x92A\x172\x15Aggregating function.R\taggregate\x12G\n" +
	"\x12right_filter_field\x18\a \x01(\tB\x19\x92A\x162\x14Right field operand.R\x10rightFilterField\"\xa2\x01\n" +
	"\x13SavedFilterFilterId\x12?\n" +
	"\tfilter_id\x18\x01 \x01(\tB\"\x92A\x1f2\x1dID of reference saved filter.R\bfilterId\x12J\n" +
	"\x06is_not\x18\x02 \x01(\bB3\x92A02.Include/Exclude of the reference saved filter.R\x05isNot\"\x8d\x05\n" +
	"\x16SavedFilterFilterGroup\x12s\n" +
	"\x03any\x18\x01 \x01(\bBa\x92A^2\\Whether to require matches against ALL or ANY filter. Defaults to requiring a match for all.R\x03any\x12p\n" +
	"\afilters\x18\x02 \x03(\v24.kentik.saved_filter.v202501alpha1.SavedFilterFilterB \x92A\x1d2\x1bFilters to operate against.R\afilters\x12S\n" +
	"\x03not\x18\x03 \x01(\bBA\x92A>2<Whether or not to NOT() the filter group. Defaults to false.R\x03not\x12\xa5\x01\n" +
	"\x10saved_filter_ids\x18\x04 \x03(\v26.kentik.saved_filter.v202501alpha1.SavedFilterFilterIdBC\x92A@2>Include reference of other saved filters in this filter group.R\x0esavedFilterIds\x12\x8e\x01\n" +
	"\x14nested_filter_groups\x18\x05 \x03(\v29.kentik.saved_filter.v202501alpha1.SavedFilterFilterGroupB!\x92A\x1e2\x1cInclude nested filter group.R\x12nestedFilterGroups\"\xc2\x02\n" +
	"\x12SavedFilterFilters\x12s\n" +
	"\x03any\x18\x01 \x01(\bBa\x92A^2\\Whether to require matches against ALL or ANY filter. Defaults to requiring a match for all.R\x03any\x12\xb6\x01\n" +
	"\rfilter_groups\x18\x02 \x03(\v29.kentik.saved_filter.v202501alpha1.SavedFilterFilterGroupBV\x92AP2NIndividual groups of filters. This allows matches of e.g. ANY(ALL(x), ANY(y)).\xe0A\x02R\ffilterGroups\"\x9b\a\n" +
	"\vSavedFilter\x12?\n" +
	"\x02id\x18\x01 \x01(\tB/\x92A)2'Unique identifier for the saved filter.\xe0A\x03R\x02id\x12M\n" +
	"\vfilter_name\x18\x02 \x01(\tB,\x92A&2$An unique name for the saved filter.\xe0A\x02R\n" +
	"filterName\x12S\n" +
	"\x12filter_description\x18\x03 \x01(\tB$\x92A!2\x1fThe saved filter's description.R\x11filterDescription\x12\x8c\x01\n" +
	"\afilters\x18\x04 \x01(\v25.kentik.saved_filter.v202501alpha1.SavedFilterFiltersB;\x92A826Configuration values for the use of this saved filter.R\afilters\x12\xad\x02\n" +
	"\ffilter_level\x18\x05 \x01(\x0e2..kentik.saved_filter.v202501alpha1.FilterLevelB\xd9\x01\x92A\xd5\x012\xd2\x01The scope across which the shared filter is available: user (personal only), company (organization-wide), or global (Kentik-provided preset) \n" +
	"Note: User and global saved filters are not yet supported by the APIR\vfilterLevel\x12o\n" +
	"\fcreated_date\x18\x1a \x01(\v2\x1a.google.protobuf.TimestampB0\x92A*2(Date-time of populator creation, in UTC.\xe0A\x03R\vcreatedDate\x12w\n" +
	"\fupdated_date\x18\a \x01(\v2\x1a.google.protobuf.TimestampB8\x92A220Date-time of most-recent populator edit, in UTC.\xe0A\x03R\vupdatedDate*\x9b\f\n" +
	"\vFilterField\x12\x1c\n" +
	"\x18FILTER_FIELD_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13FILTER_FIELD_DST_AS\x10\x01\x12\x1f\n" +
	"\x1bFILTER_FIELD_DST_NEXTHOP_AS\x10\x02\x12\x1f\n" +
	"\x1bFILTER_FIELD_DST_SECOND_ASN\x10\x03\x12\x1e\n" +
	"\x1aFILTER_FIELD_DST_THIRD_ASN\x10\x04\x12\x1f\n" +
	"\x1bFILTER_FIELD_DST_BGP_ASPATH\x10\x05\x12\"\n" +
	"\x1eFILTER_FIELD_DST_BGP_COMMUNITY\x10\x06\x12\x1c\n" +
	"\x18FILTER_FIELD_DST_ETH_MAC\x10\a\x12\x1e\n" +
	"\x1aFILTER_FIELD_DST_FLOW_TAGS\x10\b\x12\x18\n" +
	"\x14FILTER_FIELD_DST_GEO\x10\t\x12\x1f\n" +
	"\x1bFILTER_FIELD_DST_GEO_REGION\x10\n" +
	"\x12\x1d\n" +
	"\x19FILTER_FIELD_DST_GEO_CITY\x10\v\x12!\n" +
	"\x1dFILTER_FIELD_DST_ROUTE_LENGTH\x10\f\x12\x1e\n" +
	"\x1aFILTER_FIELD_INET_DST_ADDR\x10\r\x12&\n" +
	"\"FILTER_FIELD_IPV4_DST_ROUTE_PREFIX\x10\x0e\x12\"\n" +
	"\x1eFILTER_FIELD_IPV4_DST_NEXT_HOP\x10\x0f\x12\x1c\n" +
	"\x18FILTER_FIELD_L4_DST_PORT\x10\x10\x12\x1c\n" +
	"\x18FILTER_FIELD_OUTPUT_PORT\x10\x11\x12$\n" +
	" FILTER_FIELD_I_OUTPUT_SNMP_ALIAS\x10\x12\x12/\n" +
	"+FILTER_FIELD_I_OUTPUT_INTERFACE_DESCRIPTION\x10\x13\x12\x17\n" +
	"\x13FILTER_FIELD_SRC_AS\x10\x14\x12\x1f\n" +
	"\x1bFILTER_FIELD_SRC_NEXTHOP_AS\x10\x15\x12\x1f\n" +
	"\x1bFILTER_FIELD_SRC_SECOND_ASN\x10\x16\x12\x1e\n" +
	"\x1aFILTER_FIELD_SRC_THIRD_ASN\x10\x17\x12\x1f\n" +
	"\x1bFILTER_FIELD_SRC_BGP_ASPATH\x10\x18\x12\"\n" +
	"\x1eFILTER_FIELD_SRC_BGP_COMMUNITY\x10\x19\x12\x1c\n" +
	"\x18FILTER_FIELD_SRC_ETH_MAC\x10\x1a\x12\x1e\n" +
	"\x1aFILTER_FIELD_SRC_FLOW_TAGS\x10\x1b\x12\x18\n" +
	"\x14FILTER_FIELD_SRC_GEO\x10\x1c\x12\x1f\n" +
	"\x1bFILTER_FIELD_SRC_GEO_REGION\x10\x1d\x12\x1d\n" +
	"\x19FILTER_FIELD_SRC_GEO_CITY\x10\x1e\x12!\n" +
	"\x1dFILTER_FIELD_SRC_ROUTE_LENGTH\x10\x1f\x12\x1e\n" +
	"\x1aFILTER_FIELD_INET_SRC_ADDR\x10 \x12&\n" +
	"\"FILTER_FIELD_IPV4_SRC_ROUTE_PREFIX\x10!\x12\"\n" +
	"\x1eFILTER_FIELD_IPV4_SRC_NEXT_HOP\x10\"\x12\x1c\n" +
	"\x18FILTER_FIELD_L4_SRC_PORT\x10#\x12\x1b\n" +
	"\x17FILTER_FIELD_INPUT_PORT\x10$\x12#\n" +
	"\x1fFILTER_FIELD_I_INPUT_SNMP_ALIAS\x10%\x12.\n" +
	"*FILTER_FIELD_I_INPUT_INTERFACE_DESCRIPTION\x10&\x12\x1a\n" +
	"\x16FILTER_FIELD_BOTH_PKTS\x10'\x12\x1e\n" +
	"\x1aFILTER_FIELD_I_DEVICE_NAME\x10(\x12\x19\n" +
	"\x15FILTER_FIELD_PROTOCOL\x10)\x12\x1a\n" +
	"\x16FILTER_FIELD_TCP_FLAGS\x10*\x12\x1e\n" +
	"\x1aFILTER_FIELD_TCP_FLAGS_RAW\x10+\x12\x1f\n" +
	"\x1bFILTER_FIELD_TCP_RETRANSMIT\x10,\x12\x14\n" +
	"\x10FILTER_FIELD_TOS\x10-\x12\x18\n" +
	"\x14FILTER_FIELD_VLAN_IN\x10.\x12\x19\n" +
	"\x15FILTER_FIELD_VLAN_OUT\x10/*\xd9\x02\n" +
	"\x0eFilterOperator\x12\x1f\n" +
	"\x1bFILTER_OPERATOR_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15FILTER_OPERATOR_EQUAL\x10\x01\x12\x1d\n" +
	"\x19FILTER_OPERATOR_NOT_EQUAL\x10\x02\x12\x1c\n" +
	"\x18FILTER_OPERATOR_CONTAINS\x10\x03\x12 \n" +
	"\x1cFILTER_OPERATOR_NOT_CONTAINS\x10\x04\x12\"\n" +
	"\x1eFILTER_OPERATOR_REGEX_CONTAINS\x10\x05\x12&\n" +
	"\"FILTER_OPERATOR_REGEX_NOT_CONTAINS\x10\x06\x12 \n" +
	"\x1cFILTER_OPERATOR_GREATER_THAN\x10\a\x12\x1d\n" +
	"\x19FILTER_OPERATOR_LESS_THAN\x10\b\x12\x1f\n" +
	"\x1bFILTER_OPERATOR_BITWISE_AND\x10\t*u\n" +
	"\vFilterLevel\x12\x1c\n" +
	"\x18FILTER_LEVEL_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14FILTER_LEVEL_COMPANY\x10\x01\x12\x17\n" +
	"\x13FILTER_LEVEL_GLOBAL\x10\x02\x12\x15\n" +
	"\x11FILTER_LEVEL_USER\x10\x03B[ZYgithub.com/kentik/api-schema-public/gen/go/kentik/saved_filter/v202501alpha1;saved_filterb\x06proto3"

var (
	file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_rawDescOnce sync.Once
	file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_rawDescData []byte
)

func file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_rawDescGZIP() []byte {
	file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_rawDescOnce.Do(func() {
		file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_rawDesc), len(file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_rawDesc)))
	})
	return file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_rawDescData
}

var file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_goTypes = []any{
	(FilterField)(0),               // 0: kentik.saved_filter.v202501alpha1.FilterField
	(FilterOperator)(0),            // 1: kentik.saved_filter.v202501alpha1.FilterOperator
	(FilterLevel)(0),               // 2: kentik.saved_filter.v202501alpha1.FilterLevel
	(*SavedFilterFilter)(nil),      // 3: kentik.saved_filter.v202501alpha1.SavedFilterFilter
	(*SavedFilterFilterId)(nil),    // 4: kentik.saved_filter.v202501alpha1.SavedFilterFilterId
	(*SavedFilterFilterGroup)(nil), // 5: kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup
	(*SavedFilterFilters)(nil),     // 6: kentik.saved_filter.v202501alpha1.SavedFilterFilters
	(*SavedFilter)(nil),            // 7: kentik.saved_filter.v202501alpha1.SavedFilter
	(*timestamppb.Timestamp)(nil),  // 8: google.protobuf.Timestamp
}
var file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_depIdxs = []int32{
	0,  // 0: kentik.saved_filter.v202501alpha1.SavedFilterFilter.filter_field:type_name -> kentik.saved_filter.v202501alpha1.FilterField
	1,  // 1: kentik.saved_filter.v202501alpha1.SavedFilterFilter.operator:type_name -> kentik.saved_filter.v202501alpha1.FilterOperator
	3,  // 2: kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup.filters:type_name -> kentik.saved_filter.v202501alpha1.SavedFilterFilter
	4,  // 3: kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup.saved_filter_ids:type_name -> kentik.saved_filter.v202501alpha1.SavedFilterFilterId
	5,  // 4: kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup.nested_filter_groups:type_name -> kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup
	5,  // 5: kentik.saved_filter.v202501alpha1.SavedFilterFilters.filter_groups:type_name -> kentik.saved_filter.v202501alpha1.SavedFilterFilterGroup
	6,  // 6: kentik.saved_filter.v202501alpha1.SavedFilter.filters:type_name -> kentik.saved_filter.v202501alpha1.SavedFilterFilters
	2,  // 7: kentik.saved_filter.v202501alpha1.SavedFilter.filter_level:type_name -> kentik.saved_filter.v202501alpha1.FilterLevel
	8,  // 8: kentik.saved_filter.v202501alpha1.SavedFilter.created_date:type_name -> google.protobuf.Timestamp
	8,  // 9: kentik.saved_filter.v202501alpha1.SavedFilter.updated_date:type_name -> google.protobuf.Timestamp
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_init() }
func file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_init() {
	if File_kentik_saved_filter_v202501alpha1_saved_filter_message_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_rawDesc), len(file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_goTypes,
		DependencyIndexes: file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_depIdxs,
		EnumInfos:         file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_enumTypes,
		MessageInfos:      file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_msgTypes,
	}.Build()
	File_kentik_saved_filter_v202501alpha1_saved_filter_message_proto = out.File
	file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_goTypes = nil
	file_kentik_saved_filter_v202501alpha1_saved_filter_message_proto_depIdxs = nil
}
