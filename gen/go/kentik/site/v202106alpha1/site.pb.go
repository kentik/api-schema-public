// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: kentik/site/v202106alpha1/site.proto

package site

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/kentik/api-schema-public/gen/go/kentik/core/v202012alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	latlng "google.golang.org/genproto/googleapis/type/latlng"
	postaladdress "google.golang.org/genproto/googleapis/type/postaladdress"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SiteType int32

const (
	SiteType_SITE_TYPE_UNSPECIFIED  SiteType = 0
	SiteType_SITE_TYPE_DATA_CENTER  SiteType = 1
	SiteType_SITE_TYPE_CLOUD        SiteType = 2
	SiteType_SITE_TYPE_BRANCH       SiteType = 3
	SiteType_SITE_TYPE_CONNECTIVITY SiteType = 4
	SiteType_SITE_TYPE_CUSTOMER     SiteType = 5
	SiteType_SITE_TYPE_OTHER        SiteType = 6
)

// Enum value maps for SiteType.
var (
	SiteType_name = map[int32]string{
		0: "SITE_TYPE_UNSPECIFIED",
		1: "SITE_TYPE_DATA_CENTER",
		2: "SITE_TYPE_CLOUD",
		3: "SITE_TYPE_BRANCH",
		4: "SITE_TYPE_CONNECTIVITY",
		5: "SITE_TYPE_CUSTOMER",
		6: "SITE_TYPE_OTHER",
	}
	SiteType_value = map[string]int32{
		"SITE_TYPE_UNSPECIFIED":  0,
		"SITE_TYPE_DATA_CENTER":  1,
		"SITE_TYPE_CLOUD":        2,
		"SITE_TYPE_BRANCH":       3,
		"SITE_TYPE_CONNECTIVITY": 4,
		"SITE_TYPE_CUSTOMER":     5,
		"SITE_TYPE_OTHER":        6,
	}
)

func (x SiteType) Enum() *SiteType {
	p := new(SiteType)
	*p = x
	return p
}

func (x SiteType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SiteType) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_site_v202106alpha1_site_proto_enumTypes[0].Descriptor()
}

func (SiteType) Type() protoreflect.EnumType {
	return &file_kentik_site_v202106alpha1_site_proto_enumTypes[0]
}

func (x SiteType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SiteType.Descriptor instead.
func (SiteType) EnumDescriptor() ([]byte, []int) {
	return file_kentik_site_v202106alpha1_site_proto_rawDescGZIP(), []int{0}
}

// Site IP Classification
type SiteIpClassification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfrastructureNetworks []string `protobuf:"bytes,1,rep,name=infrastructure_networks,json=infrastructureNetworks,proto3" json:"infrastructure_networks,omitempty"`
	UserAccessNetworks     []string `protobuf:"bytes,2,rep,name=user_access_networks,json=userAccessNetworks,proto3" json:"user_access_networks,omitempty"`
	OtherIps               []string `protobuf:"bytes,3,rep,name=other_ips,json=otherIps,proto3" json:"other_ips,omitempty"`
}

func (x *SiteIpClassification) Reset() {
	*x = SiteIpClassification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteIpClassification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteIpClassification) ProtoMessage() {}

func (x *SiteIpClassification) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteIpClassification.ProtoReflect.Descriptor instead.
func (*SiteIpClassification) Descriptor() ([]byte, []int) {
	return file_kentik_site_v202106alpha1_site_proto_rawDescGZIP(), []int{0}
}

func (x *SiteIpClassification) GetInfrastructureNetworks() []string {
	if x != nil {
		return x.InfrastructureNetworks
	}
	return nil
}

func (x *SiteIpClassification) GetUserAccessNetworks() []string {
	if x != nil {
		return x.UserAccessNetworks
	}
	return nil
}

func (x *SiteIpClassification) GetOtherIps() []string {
	if x != nil {
		return x.OtherIps
	}
	return nil
}

type SubLayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DeviceIds []string `protobuf:"bytes,2,rep,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty"`
}

func (x *SubLayer) Reset() {
	*x = SubLayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubLayer) ProtoMessage() {}

func (x *SubLayer) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubLayer.ProtoReflect.Descriptor instead.
func (*SubLayer) Descriptor() ([]byte, []int) {
	return file_kentik_site_v202106alpha1_site_proto_rawDescGZIP(), []int{1}
}

func (x *SubLayer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SubLayer) GetDeviceIds() []string {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

type Layer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubLayers []*SubLayer `protobuf:"bytes,1,rep,name=sub_layers,json=subLayers,proto3" json:"sub_layers,omitempty"`
}

func (x *Layer) Reset() {
	*x = Layer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Layer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Layer) ProtoMessage() {}

func (x *Layer) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Layer.ProtoReflect.Descriptor instead.
func (*Layer) Descriptor() ([]byte, []int) {
	return file_kentik_site_v202106alpha1_site_proto_rawDescGZIP(), []int{2}
}

func (x *Layer) GetSubLayers() []*SubLayer {
	if x != nil {
		return x.SubLayers
	}
	return nil
}

type Site struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title          string                       `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Coordinate     *latlng.LatLng               `protobuf:"bytes,4,opt,name=coordinate,proto3" json:"coordinate,omitempty"`
	Address        *postaladdress.PostalAddress `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	Type           SiteType                     `protobuf:"varint,6,opt,name=type,proto3,enum=kentik.site.v202106alpha1.SiteType" json:"type,omitempty"`
	Classification *SiteIpClassification        `protobuf:"bytes,7,opt,name=classification,proto3" json:"classification,omitempty"`
	Architecture   []*Layer                     `protobuf:"bytes,8,rep,name=architecture,proto3" json:"architecture,omitempty"`
}

func (x *Site) Reset() {
	*x = Site{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Site) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Site) ProtoMessage() {}

func (x *Site) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Site.ProtoReflect.Descriptor instead.
func (*Site) Descriptor() ([]byte, []int) {
	return file_kentik_site_v202106alpha1_site_proto_rawDescGZIP(), []int{3}
}

func (x *Site) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Site) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Site) GetCoordinate() *latlng.LatLng {
	if x != nil {
		return x.Coordinate
	}
	return nil
}

func (x *Site) GetAddress() *postaladdress.PostalAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Site) GetType() SiteType {
	if x != nil {
		return x.Type
	}
	return SiteType_SITE_TYPE_UNSPECIFIED
}

func (x *Site) GetClassification() *SiteIpClassification {
	if x != nil {
		return x.Classification
	}
	return nil
}

func (x *Site) GetArchitecture() []*Layer {
	if x != nil {
		return x.Architecture
	}
	return nil
}

type ListSiteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListSiteRequest) Reset() {
	*x = ListSiteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSiteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSiteRequest) ProtoMessage() {}

func (x *ListSiteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSiteRequest.ProtoReflect.Descriptor instead.
func (*ListSiteRequest) Descriptor() ([]byte, []int) {
	return file_kentik_site_v202106alpha1_site_proto_rawDescGZIP(), []int{4}
}

type ListSiteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sites        []*Site `protobuf:"bytes,1,rep,name=sites,proto3" json:"sites,omitempty"`
	InvalidCount uint32  `protobuf:"varint,2,opt,name=invalid_count,json=invalidCount,proto3" json:"invalid_count,omitempty"`
}

func (x *ListSiteResponse) Reset() {
	*x = ListSiteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSiteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSiteResponse) ProtoMessage() {}

func (x *ListSiteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSiteResponse.ProtoReflect.Descriptor instead.
func (*ListSiteResponse) Descriptor() ([]byte, []int) {
	return file_kentik_site_v202106alpha1_site_proto_rawDescGZIP(), []int{5}
}

func (x *ListSiteResponse) GetSites() []*Site {
	if x != nil {
		return x.Sites
	}
	return nil
}

func (x *ListSiteResponse) GetInvalidCount() uint32 {
	if x != nil {
		return x.InvalidCount
	}
	return 0
}

type GetSiteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSiteRequest) Reset() {
	*x = GetSiteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSiteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSiteRequest) ProtoMessage() {}

func (x *GetSiteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSiteRequest.ProtoReflect.Descriptor instead.
func (*GetSiteRequest) Descriptor() ([]byte, []int) {
	return file_kentik_site_v202106alpha1_site_proto_rawDescGZIP(), []int{6}
}

func (x *GetSiteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSiteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Site *Site `protobuf:"bytes,1,opt,name=site,proto3" json:"site,omitempty"`
}

func (x *GetSiteResponse) Reset() {
	*x = GetSiteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSiteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSiteResponse) ProtoMessage() {}

func (x *GetSiteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSiteResponse.ProtoReflect.Descriptor instead.
func (*GetSiteResponse) Descriptor() ([]byte, []int) {
	return file_kentik_site_v202106alpha1_site_proto_rawDescGZIP(), []int{7}
}

func (x *GetSiteResponse) GetSite() *Site {
	if x != nil {
		return x.Site
	}
	return nil
}

type CreateSiteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Site *Site `protobuf:"bytes,1,opt,name=site,proto3" json:"site,omitempty"`
}

func (x *CreateSiteRequest) Reset() {
	*x = CreateSiteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSiteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSiteRequest) ProtoMessage() {}

func (x *CreateSiteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSiteRequest.ProtoReflect.Descriptor instead.
func (*CreateSiteRequest) Descriptor() ([]byte, []int) {
	return file_kentik_site_v202106alpha1_site_proto_rawDescGZIP(), []int{8}
}

func (x *CreateSiteRequest) GetSite() *Site {
	if x != nil {
		return x.Site
	}
	return nil
}

type CreateSiteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Site *Site `protobuf:"bytes,1,opt,name=site,proto3" json:"site,omitempty"`
}

func (x *CreateSiteResponse) Reset() {
	*x = CreateSiteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSiteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSiteResponse) ProtoMessage() {}

func (x *CreateSiteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSiteResponse.ProtoReflect.Descriptor instead.
func (*CreateSiteResponse) Descriptor() ([]byte, []int) {
	return file_kentik_site_v202106alpha1_site_proto_rawDescGZIP(), []int{9}
}

func (x *CreateSiteResponse) GetSite() *Site {
	if x != nil {
		return x.Site
	}
	return nil
}

type UpdateSiteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Site *Site `protobuf:"bytes,1,opt,name=site,proto3" json:"site,omitempty"`
}

func (x *UpdateSiteRequest) Reset() {
	*x = UpdateSiteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSiteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSiteRequest) ProtoMessage() {}

func (x *UpdateSiteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSiteRequest.ProtoReflect.Descriptor instead.
func (*UpdateSiteRequest) Descriptor() ([]byte, []int) {
	return file_kentik_site_v202106alpha1_site_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateSiteRequest) GetSite() *Site {
	if x != nil {
		return x.Site
	}
	return nil
}

type UpdateSiteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Site *Site `protobuf:"bytes,1,opt,name=site,proto3" json:"site,omitempty"`
}

func (x *UpdateSiteResponse) Reset() {
	*x = UpdateSiteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSiteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSiteResponse) ProtoMessage() {}

func (x *UpdateSiteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSiteResponse.ProtoReflect.Descriptor instead.
func (*UpdateSiteResponse) Descriptor() ([]byte, []int) {
	return file_kentik_site_v202106alpha1_site_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateSiteResponse) GetSite() *Site {
	if x != nil {
		return x.Site
	}
	return nil
}

type DeleteSiteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteSiteRequest) Reset() {
	*x = DeleteSiteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSiteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSiteRequest) ProtoMessage() {}

func (x *DeleteSiteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSiteRequest.ProtoReflect.Descriptor instead.
func (*DeleteSiteRequest) Descriptor() ([]byte, []int) {
	return file_kentik_site_v202106alpha1_site_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteSiteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteSiteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSiteResponse) Reset() {
	*x = DeleteSiteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSiteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSiteResponse) ProtoMessage() {}

func (x *DeleteSiteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_site_v202106alpha1_site_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSiteResponse.ProtoReflect.Descriptor instead.
func (*DeleteSiteResponse) Descriptor() ([]byte, []int) {
	return file_kentik_site_v202106alpha1_site_proto_rawDescGZIP(), []int{13}
}

var File_kentik_site_v202106alpha1_site_proto protoreflect.FileDescriptor

var file_kentik_site_v202106alpha1_site_proto_rawDesc = []byte{
	0x0a, 0x24, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x2f, 0x76, 0x32,
	0x30, 0x32, 0x31, 0x30, 0x36, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x73, 0x69, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x73,
	0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x36, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x6c, 0x61, 0x74, 0x6c, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f,
	0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x30, 0x31, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x9e, 0x01, 0x0a, 0x14, 0x53, 0x69, 0x74, 0x65, 0x49, 0x70, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x17, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x16, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x69,
	0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49,
	0x70, 0x73, 0x22, 0x3d, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x73, 0x22, 0x4b, 0x0a, 0x05, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x0a, 0x73, 0x75,
	0x62, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x30,
	0x32, 0x31, 0x30, 0x36, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x4c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x09, 0x73, 0x75, 0x62, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0xf5,
	0x02, 0x0a, 0x04, 0x53, 0x69, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x33, 0x0a,
	0x0a, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x4c, 0x61, 0x74, 0x4c, 0x6e, 0x67, 0x52, 0x0a, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e,
	0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x36, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x57, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6b, 0x65, 0x6e, 0x74,
	0x69, 0x6b, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x36, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x49, 0x70, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0c, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x76,
	0x32, 0x30, 0x32, 0x31, 0x30, 0x36, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x11, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6e, 0x0a, 0x10, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a,
	0x05, 0x73, 0x69, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b,
	0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31,
	0x30, 0x36, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x69, 0x74, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x69, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x04, 0x73, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b,
	0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31,
	0x30, 0x36, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x52, 0x04, 0x73,
	0x69, 0x74, 0x65, 0x22, 0x48, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x73, 0x69, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e,
	0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x36, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x52, 0x04, 0x73, 0x69, 0x74, 0x65, 0x22, 0x49, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x73, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x2e,
	0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x36, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x69,
	0x74, 0x65, 0x52, 0x04, 0x73, 0x69, 0x74, 0x65, 0x22, 0x48, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a,
	0x04, 0x73, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x65,
	0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30,
	0x36, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x52, 0x04, 0x73, 0x69,
	0x74, 0x65, 0x22, 0x49, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x73, 0x69, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e,
	0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x36, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x52, 0x04, 0x73, 0x69, 0x74, 0x65, 0x22, 0x23, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0xb4, 0x01, 0x0a, 0x08, 0x53, 0x69, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x49, 0x54, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x19, 0x0a, 0x15, 0x53, 0x49, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53,
	0x49, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x10, 0x02,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x49, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x52,
	0x41, 0x4e, 0x43, 0x48, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x49, 0x54, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59,
	0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x49, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x45, 0x52, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x49,
	0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x06, 0x32,
	0xd8, 0x09, 0x0a, 0x0b, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0xcd, 0x01, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x6b,
	0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31,
	0x30, 0x36, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69,
	0x6b, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x36, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x92, 0x41, 0x31, 0x12, 0x0b, 0x4c, 0x69, 0x73, 0x74,
	0x20, 0x73, 0x69, 0x74, 0x65, 0x73, 0x2e, 0x1a, 0x18, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73,
	0x20, 0x61, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x69, 0x74, 0x65, 0x73,
	0x2e, 0x2a, 0x08, 0x53, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0xf2, 0xd7, 0x02, 0x0f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x2f, 0x76, 0x32, 0x30, 0x32,
	0x31, 0x30, 0x36, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x12,
	0xea, 0x01, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x53, 0x69, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x6b, 0x65,
	0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30,
	0x36, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e,
	0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x36, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x87, 0x01, 0x92, 0x41, 0x4b, 0x12, 0x0b, 0x47, 0x65, 0x74, 0x20, 0x61, 0x20,
	0x73, 0x69, 0x74, 0x65, 0x2e, 0x1a, 0x33, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x69,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x61, 0x62, 0x6f, 0x75, 0x74,
	0x20, 0x61, 0x20, 0x73, 0x69, 0x74, 0x65, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x49, 0x44, 0x2e, 0x2a, 0x07, 0x53, 0x69, 0x74, 0x65,
	0x47, 0x65, 0x74, 0xf2, 0xd7, 0x02, 0x0f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x69, 0x74,
	0x65, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x73,
	0x69, 0x74, 0x65, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x36, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xf1, 0x01, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x6b, 0x65,
	0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30,
	0x36, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6b, 0x65, 0x6e, 0x74,
	0x69, 0x6b, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x36, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x85, 0x01, 0x92, 0x41, 0x4a, 0x12, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x61, 0x20, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x1a, 0x2c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x61, 0x20, 0x73, 0x69, 0x74, 0x65, 0x20, 0x66, 0x72,
	0x6f, 0x6d, 0x20, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x20, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x73, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x2a, 0x0a, 0x53, 0x69,
	0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0xf2, 0xd7, 0x02, 0x10, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1e, 0x22, 0x19, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30,
	0x36, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x3a, 0x01, 0x2a,
	0x12, 0x85, 0x02, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x74, 0x65, 0x12,
	0x2c, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32,
	0x30, 0x32, 0x31, 0x30, 0x36, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x30, 0x32,
	0x31, 0x30, 0x36, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x99, 0x01, 0x92,
	0x41, 0x54, 0x12, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x61, 0x20, 0x73, 0x69, 0x74,
	0x65, 0x2e, 0x1a, 0x36, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x65, 0x6e, 0x74, 0x69, 0x72, 0x65, 0x20, 0x73, 0x69, 0x74, 0x65, 0x20, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x20, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x69, 0x64, 0x2e, 0x2a, 0x0a, 0x53, 0x69, 0x74, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0xf2, 0xd7, 0x02, 0x10, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x73, 0x69, 0x74, 0x65, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28,
	0x1a, 0x23, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x36, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x73, 0x69, 0x74,
	0x65, 0x2e, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0xe9, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x69, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b,
	0x2e, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x36, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x73,
	0x69, 0x74, 0x65, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x36, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7e, 0x92, 0x41, 0x41, 0x12, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x20, 0x61, 0x20, 0x73, 0x69, 0x74, 0x65, 0x2e, 0x1a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x69, 0x74, 0x65, 0x20, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x69, 0x64, 0x2e, 0x2a, 0x0a,
	0x53, 0x69, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0xf2, 0xd7, 0x02, 0x10, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x20, 0x2a, 0x1e, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x2f, 0x76, 0x32, 0x30, 0x32,
	0x31, 0x30, 0x36, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x1a, 0x24, 0xca, 0x41, 0x13, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0xea, 0xd7, 0x02, 0x0a,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x42, 0xb8, 0x02, 0x5a, 0x42, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b,
	0x2f, 0x61, 0x70, 0x69, 0x2d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x67, 0x6f, 0x2f, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x2f, 0x76,
	0x32, 0x30, 0x32, 0x31, 0x30, 0x36, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x73, 0x69, 0x74,
	0x65, 0x92, 0x41, 0xf0, 0x01, 0x12, 0x32, 0x0a, 0x08, 0x53, 0x69, 0x74, 0x65, 0x20, 0x41, 0x50,
	0x49, 0x22, 0x18, 0x0a, 0x16, 0x4b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x20, 0x41, 0x50, 0x49, 0x20,
	0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x32, 0x0c, 0x32, 0x30, 0x32,
	0x31, 0x30, 0x36, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2a, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e,
	0x5a, 0x44, 0x0a, 0x1e, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x15, 0x08, 0x02, 0x1a,
	0x0f, 0x58, 0x2d, 0x43, 0x48, 0x2d, 0x41, 0x75, 0x74, 0x68, 0x2d, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x20, 0x02, 0x0a, 0x22, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x08, 0x02, 0x1a,
	0x13, 0x58, 0x2d, 0x43, 0x48, 0x2d, 0x41, 0x75, 0x74, 0x68, 0x2d, 0x41, 0x50, 0x49, 0x2d, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x02, 0x62, 0x16, 0x0a, 0x09, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x00, 0x0a, 0x09, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x00, 0x72, 0x35,
	0x0a, 0x16, 0x4d, 0x6f, 0x72, 0x65, 0x20, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x20, 0x4b, 0x65, 0x6e,
	0x74, 0x69, 0x6b, 0x20, 0x41, 0x50, 0x49, 0x73, 0x12, 0x1b, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a,
	0x2f, 0x2f, 0x64, 0x6f, 0x63, 0x73, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kentik_site_v202106alpha1_site_proto_rawDescOnce sync.Once
	file_kentik_site_v202106alpha1_site_proto_rawDescData = file_kentik_site_v202106alpha1_site_proto_rawDesc
)

func file_kentik_site_v202106alpha1_site_proto_rawDescGZIP() []byte {
	file_kentik_site_v202106alpha1_site_proto_rawDescOnce.Do(func() {
		file_kentik_site_v202106alpha1_site_proto_rawDescData = protoimpl.X.CompressGZIP(file_kentik_site_v202106alpha1_site_proto_rawDescData)
	})
	return file_kentik_site_v202106alpha1_site_proto_rawDescData
}

var file_kentik_site_v202106alpha1_site_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_kentik_site_v202106alpha1_site_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_kentik_site_v202106alpha1_site_proto_goTypes = []interface{}{
	(SiteType)(0),                       // 0: kentik.site.v202106alpha1.SiteType
	(*SiteIpClassification)(nil),        // 1: kentik.site.v202106alpha1.SiteIpClassification
	(*SubLayer)(nil),                    // 2: kentik.site.v202106alpha1.SubLayer
	(*Layer)(nil),                       // 3: kentik.site.v202106alpha1.Layer
	(*Site)(nil),                        // 4: kentik.site.v202106alpha1.Site
	(*ListSiteRequest)(nil),             // 5: kentik.site.v202106alpha1.ListSiteRequest
	(*ListSiteResponse)(nil),            // 6: kentik.site.v202106alpha1.ListSiteResponse
	(*GetSiteRequest)(nil),              // 7: kentik.site.v202106alpha1.GetSiteRequest
	(*GetSiteResponse)(nil),             // 8: kentik.site.v202106alpha1.GetSiteResponse
	(*CreateSiteRequest)(nil),           // 9: kentik.site.v202106alpha1.CreateSiteRequest
	(*CreateSiteResponse)(nil),          // 10: kentik.site.v202106alpha1.CreateSiteResponse
	(*UpdateSiteRequest)(nil),           // 11: kentik.site.v202106alpha1.UpdateSiteRequest
	(*UpdateSiteResponse)(nil),          // 12: kentik.site.v202106alpha1.UpdateSiteResponse
	(*DeleteSiteRequest)(nil),           // 13: kentik.site.v202106alpha1.DeleteSiteRequest
	(*DeleteSiteResponse)(nil),          // 14: kentik.site.v202106alpha1.DeleteSiteResponse
	(*latlng.LatLng)(nil),               // 15: google.type.LatLng
	(*postaladdress.PostalAddress)(nil), // 16: google.type.PostalAddress
}
var file_kentik_site_v202106alpha1_site_proto_depIdxs = []int32{
	2,  // 0: kentik.site.v202106alpha1.Layer.sub_layers:type_name -> kentik.site.v202106alpha1.SubLayer
	15, // 1: kentik.site.v202106alpha1.Site.coordinate:type_name -> google.type.LatLng
	16, // 2: kentik.site.v202106alpha1.Site.address:type_name -> google.type.PostalAddress
	0,  // 3: kentik.site.v202106alpha1.Site.type:type_name -> kentik.site.v202106alpha1.SiteType
	1,  // 4: kentik.site.v202106alpha1.Site.classification:type_name -> kentik.site.v202106alpha1.SiteIpClassification
	3,  // 5: kentik.site.v202106alpha1.Site.architecture:type_name -> kentik.site.v202106alpha1.Layer
	4,  // 6: kentik.site.v202106alpha1.ListSiteResponse.sites:type_name -> kentik.site.v202106alpha1.Site
	4,  // 7: kentik.site.v202106alpha1.GetSiteResponse.site:type_name -> kentik.site.v202106alpha1.Site
	4,  // 8: kentik.site.v202106alpha1.CreateSiteRequest.site:type_name -> kentik.site.v202106alpha1.Site
	4,  // 9: kentik.site.v202106alpha1.CreateSiteResponse.site:type_name -> kentik.site.v202106alpha1.Site
	4,  // 10: kentik.site.v202106alpha1.UpdateSiteRequest.site:type_name -> kentik.site.v202106alpha1.Site
	4,  // 11: kentik.site.v202106alpha1.UpdateSiteResponse.site:type_name -> kentik.site.v202106alpha1.Site
	5,  // 12: kentik.site.v202106alpha1.SiteService.ListSite:input_type -> kentik.site.v202106alpha1.ListSiteRequest
	7,  // 13: kentik.site.v202106alpha1.SiteService.GetSite:input_type -> kentik.site.v202106alpha1.GetSiteRequest
	9,  // 14: kentik.site.v202106alpha1.SiteService.CreateSite:input_type -> kentik.site.v202106alpha1.CreateSiteRequest
	11, // 15: kentik.site.v202106alpha1.SiteService.UpdateSite:input_type -> kentik.site.v202106alpha1.UpdateSiteRequest
	13, // 16: kentik.site.v202106alpha1.SiteService.DeleteSite:input_type -> kentik.site.v202106alpha1.DeleteSiteRequest
	6,  // 17: kentik.site.v202106alpha1.SiteService.ListSite:output_type -> kentik.site.v202106alpha1.ListSiteResponse
	8,  // 18: kentik.site.v202106alpha1.SiteService.GetSite:output_type -> kentik.site.v202106alpha1.GetSiteResponse
	10, // 19: kentik.site.v202106alpha1.SiteService.CreateSite:output_type -> kentik.site.v202106alpha1.CreateSiteResponse
	12, // 20: kentik.site.v202106alpha1.SiteService.UpdateSite:output_type -> kentik.site.v202106alpha1.UpdateSiteResponse
	14, // 21: kentik.site.v202106alpha1.SiteService.DeleteSite:output_type -> kentik.site.v202106alpha1.DeleteSiteResponse
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_kentik_site_v202106alpha1_site_proto_init() }
func file_kentik_site_v202106alpha1_site_proto_init() {
	if File_kentik_site_v202106alpha1_site_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kentik_site_v202106alpha1_site_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteIpClassification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_site_v202106alpha1_site_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubLayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_site_v202106alpha1_site_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Layer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_site_v202106alpha1_site_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Site); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_site_v202106alpha1_site_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSiteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_site_v202106alpha1_site_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSiteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_site_v202106alpha1_site_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSiteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_site_v202106alpha1_site_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSiteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_site_v202106alpha1_site_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSiteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_site_v202106alpha1_site_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSiteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_site_v202106alpha1_site_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSiteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_site_v202106alpha1_site_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSiteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_site_v202106alpha1_site_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSiteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_site_v202106alpha1_site_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSiteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kentik_site_v202106alpha1_site_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kentik_site_v202106alpha1_site_proto_goTypes,
		DependencyIndexes: file_kentik_site_v202106alpha1_site_proto_depIdxs,
		EnumInfos:         file_kentik_site_v202106alpha1_site_proto_enumTypes,
		MessageInfos:      file_kentik_site_v202106alpha1_site_proto_msgTypes,
	}.Build()
	File_kentik_site_v202106alpha1_site_proto = out.File
	file_kentik_site_v202106alpha1_site_proto_rawDesc = nil
	file_kentik_site_v202106alpha1_site_proto_goTypes = nil
	file_kentik_site_v202106alpha1_site_proto_depIdxs = nil
}
