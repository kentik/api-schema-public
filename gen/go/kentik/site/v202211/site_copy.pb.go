// Code generated by protoc-gen-go-copy. DO NOT EDIT.
// source: kentik/site/v202211/site.proto

package site

import "google.golang.org/protobuf/types/known/timestamppb"

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *SiteIpAddressClassification) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *SiteIpAddressClassification:
		x.InfrastructureNetworks = v.GetInfrastructureNetworks()
		x.UserAccessNetworks = v.GetUserAccessNetworks()
		x.OtherNetworks = v.GetOtherNetworks()
	default:
		if v, ok := v.(interface{ GetInfrastructureNetworks() []string }); ok {
			x.InfrastructureNetworks = v.GetInfrastructureNetworks()
		}
		if v, ok := v.(interface{ GetUserAccessNetworks() []string }); ok {
			x.UserAccessNetworks = v.GetUserAccessNetworks()
		}
		if v, ok := v.(interface{ GetOtherNetworks() []string }); ok {
			x.OtherNetworks = v.GetOtherNetworks()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *SiteIpAddressClassification) Proto_ShallowClone() (c *SiteIpAddressClassification) {
	if x != nil {
		c = new(SiteIpAddressClassification)
		c.InfrastructureNetworks = x.InfrastructureNetworks
		c.UserAccessNetworks = x.UserAccessNetworks
		c.OtherNetworks = x.OtherNetworks
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *Layer) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *Layer:
		x.Name = v.GetName()
		x.DeviceIds = v.GetDeviceIds()
	default:
		if v, ok := v.(interface{ GetName() string }); ok {
			x.Name = v.GetName()
		}
		if v, ok := v.(interface{ GetDeviceIds() []string }); ok {
			x.DeviceIds = v.GetDeviceIds()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *Layer) Proto_ShallowClone() (c *Layer) {
	if x != nil {
		c = new(Layer)
		c.Name = x.Name
		c.DeviceIds = x.DeviceIds
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *LayerSet) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *LayerSet:
		x.Layers = v.GetLayers()
	default:
		if v, ok := v.(interface{ GetLayers() []*Layer }); ok {
			x.Layers = v.GetLayers()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *LayerSet) Proto_ShallowClone() (c *LayerSet) {
	if x != nil {
		c = new(LayerSet)
		c.Layers = x.Layers
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *PostalAddress) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *PostalAddress:
		x.Address = v.GetAddress()
		x.City = v.GetCity()
		x.Region = v.GetRegion()
		x.PostalCode = v.GetPostalCode()
		x.Country = v.GetCountry()
	default:
		if v, ok := v.(interface{ GetAddress() string }); ok {
			x.Address = v.GetAddress()
		}
		if v, ok := v.(interface{ GetCity() string }); ok {
			x.City = v.GetCity()
		}
		if v, ok := v.(interface{ GetRegion() string }); ok {
			x.Region = v.GetRegion()
		}
		if v, ok := v.(interface{ GetPostalCode() string }); ok {
			x.PostalCode = v.GetPostalCode()
		}
		if v, ok := v.(interface{ GetCountry() string }); ok {
			x.Country = v.GetCountry()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *PostalAddress) Proto_ShallowClone() (c *PostalAddress) {
	if x != nil {
		c = new(PostalAddress)
		c.Address = x.Address
		c.City = x.City
		c.Region = x.Region
		c.PostalCode = x.PostalCode
		c.Country = x.Country
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *Site) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *Site:
		x.Id = v.GetId()
		x.Title = v.GetTitle()
		x.Lat = v.GetLat()
		x.Lon = v.GetLon()
		x.PostalAddress = v.GetPostalAddress()
		x.Type = v.GetType()
		x.AddressClassification = v.GetAddressClassification()
		x.Architecture = v.GetArchitecture()
		x.SiteMarket = v.GetSiteMarket()
	default:
		if v, ok := v.(interface{ GetId() string }); ok {
			x.Id = v.GetId()
		}
		if v, ok := v.(interface{ GetTitle() string }); ok {
			x.Title = v.GetTitle()
		}
		if v, ok := v.(interface{ GetLat() float64 }); ok {
			x.Lat = v.GetLat()
		}
		if v, ok := v.(interface{ GetLon() float64 }); ok {
			x.Lon = v.GetLon()
		}
		if v, ok := v.(interface{ GetPostalAddress() *PostalAddress }); ok {
			x.PostalAddress = v.GetPostalAddress()
		}
		if v, ok := v.(interface{ GetType() SiteType }); ok {
			x.Type = v.GetType()
		}
		if v, ok := v.(interface {
			GetAddressClassification() *SiteIpAddressClassification
		}); ok {
			x.AddressClassification = v.GetAddressClassification()
		}
		if v, ok := v.(interface{ GetArchitecture() []*LayerSet }); ok {
			x.Architecture = v.GetArchitecture()
		}
		if v, ok := v.(interface{ GetSiteMarket() string }); ok {
			x.SiteMarket = v.GetSiteMarket()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *Site) Proto_ShallowClone() (c *Site) {
	if x != nil {
		c = new(Site)
		c.Id = x.Id
		c.Title = x.Title
		c.Lat = x.Lat
		c.Lon = x.Lon
		c.PostalAddress = x.PostalAddress
		c.Type = x.Type
		c.AddressClassification = x.AddressClassification
		c.Architecture = x.Architecture
		c.SiteMarket = x.SiteMarket
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *ListSitesRequest) Proto_ShallowCopy(v interface{}) {
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *ListSitesRequest) Proto_ShallowClone() (c *ListSitesRequest) {
	if x != nil {
		c = new(ListSitesRequest)
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *ListSitesResponse) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *ListSitesResponse:
		x.Sites = v.GetSites()
		x.InvalidCount = v.GetInvalidCount()
	default:
		if v, ok := v.(interface{ GetSites() []*Site }); ok {
			x.Sites = v.GetSites()
		}
		if v, ok := v.(interface{ GetInvalidCount() uint32 }); ok {
			x.InvalidCount = v.GetInvalidCount()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *ListSitesResponse) Proto_ShallowClone() (c *ListSitesResponse) {
	if x != nil {
		c = new(ListSitesResponse)
		c.Sites = x.Sites
		c.InvalidCount = x.InvalidCount
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *GetSiteRequest) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *GetSiteRequest:
		x.Id = v.GetId()
	default:
		if v, ok := v.(interface{ GetId() string }); ok {
			x.Id = v.GetId()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *GetSiteRequest) Proto_ShallowClone() (c *GetSiteRequest) {
	if x != nil {
		c = new(GetSiteRequest)
		c.Id = x.Id
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *GetSiteResponse) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *GetSiteResponse:
		x.Site = v.GetSite()
	default:
		if v, ok := v.(interface{ GetSite() *Site }); ok {
			x.Site = v.GetSite()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *GetSiteResponse) Proto_ShallowClone() (c *GetSiteResponse) {
	if x != nil {
		c = new(GetSiteResponse)
		c.Site = x.Site
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *CreateSiteRequest) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *CreateSiteRequest:
		x.Site = v.GetSite()
	default:
		if v, ok := v.(interface{ GetSite() *Site }); ok {
			x.Site = v.GetSite()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *CreateSiteRequest) Proto_ShallowClone() (c *CreateSiteRequest) {
	if x != nil {
		c = new(CreateSiteRequest)
		c.Site = x.Site
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *CreateSiteResponse) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *CreateSiteResponse:
		x.Site = v.GetSite()
	default:
		if v, ok := v.(interface{ GetSite() *Site }); ok {
			x.Site = v.GetSite()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *CreateSiteResponse) Proto_ShallowClone() (c *CreateSiteResponse) {
	if x != nil {
		c = new(CreateSiteResponse)
		c.Site = x.Site
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *UpdateSiteRequest) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *UpdateSiteRequest:
		x.Site = v.GetSite()
	default:
		if v, ok := v.(interface{ GetSite() *Site }); ok {
			x.Site = v.GetSite()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *UpdateSiteRequest) Proto_ShallowClone() (c *UpdateSiteRequest) {
	if x != nil {
		c = new(UpdateSiteRequest)
		c.Site = x.Site
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *UpdateSiteResponse) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *UpdateSiteResponse:
		x.Site = v.GetSite()
	default:
		if v, ok := v.(interface{ GetSite() *Site }); ok {
			x.Site = v.GetSite()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *UpdateSiteResponse) Proto_ShallowClone() (c *UpdateSiteResponse) {
	if x != nil {
		c = new(UpdateSiteResponse)
		c.Site = x.Site
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *DeleteSiteRequest) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *DeleteSiteRequest:
		x.Id = v.GetId()
	default:
		if v, ok := v.(interface{ GetId() string }); ok {
			x.Id = v.GetId()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *DeleteSiteRequest) Proto_ShallowClone() (c *DeleteSiteRequest) {
	if x != nil {
		c = new(DeleteSiteRequest)
		c.Id = x.Id
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *DeleteSiteResponse) Proto_ShallowCopy(v interface{}) {
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *DeleteSiteResponse) Proto_ShallowClone() (c *DeleteSiteResponse) {
	if x != nil {
		c = new(DeleteSiteResponse)
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *SiteMarket) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *SiteMarket:
		x.Id = v.GetId()
		x.Name = v.GetName()
		x.Description = v.GetDescription()
		x.NumberOfSites = v.GetNumberOfSites()
		x.Cdate = v.GetCdate()
		x.Edate = v.GetEdate()
	default:
		if v, ok := v.(interface{ GetId() string }); ok {
			x.Id = v.GetId()
		}
		if v, ok := v.(interface{ GetName() string }); ok {
			x.Name = v.GetName()
		}
		if v, ok := v.(interface{ GetDescription() string }); ok {
			x.Description = v.GetDescription()
		}
		if v, ok := v.(interface{ GetNumberOfSites() uint32 }); ok {
			x.NumberOfSites = v.GetNumberOfSites()
		}
		if v, ok := v.(interface{ GetCdate() *timestamppb.Timestamp }); ok {
			x.Cdate = v.GetCdate()
		}
		if v, ok := v.(interface{ GetEdate() *timestamppb.Timestamp }); ok {
			x.Edate = v.GetEdate()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *SiteMarket) Proto_ShallowClone() (c *SiteMarket) {
	if x != nil {
		c = new(SiteMarket)
		c.Id = x.Id
		c.Name = x.Name
		c.Description = x.Description
		c.NumberOfSites = x.NumberOfSites
		c.Cdate = x.Cdate
		c.Edate = x.Edate
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *ListSiteMarketsRequest) Proto_ShallowCopy(v interface{}) {
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *ListSiteMarketsRequest) Proto_ShallowClone() (c *ListSiteMarketsRequest) {
	if x != nil {
		c = new(ListSiteMarketsRequest)
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *ListSiteMarketsResponse) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *ListSiteMarketsResponse:
		x.SiteMarkets = v.GetSiteMarkets()
		x.InvalidCount = v.GetInvalidCount()
	default:
		if v, ok := v.(interface{ GetSiteMarkets() []*SiteMarket }); ok {
			x.SiteMarkets = v.GetSiteMarkets()
		}
		if v, ok := v.(interface{ GetInvalidCount() uint32 }); ok {
			x.InvalidCount = v.GetInvalidCount()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *ListSiteMarketsResponse) Proto_ShallowClone() (c *ListSiteMarketsResponse) {
	if x != nil {
		c = new(ListSiteMarketsResponse)
		c.SiteMarkets = x.SiteMarkets
		c.InvalidCount = x.InvalidCount
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *GetSiteMarketRequest) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *GetSiteMarketRequest:
		x.Id = v.GetId()
	default:
		if v, ok := v.(interface{ GetId() string }); ok {
			x.Id = v.GetId()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *GetSiteMarketRequest) Proto_ShallowClone() (c *GetSiteMarketRequest) {
	if x != nil {
		c = new(GetSiteMarketRequest)
		c.Id = x.Id
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *GetSiteMarketResponse) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *GetSiteMarketResponse:
		x.SiteMarket = v.GetSiteMarket()
	default:
		if v, ok := v.(interface{ GetSiteMarket() *SiteMarket }); ok {
			x.SiteMarket = v.GetSiteMarket()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *GetSiteMarketResponse) Proto_ShallowClone() (c *GetSiteMarketResponse) {
	if x != nil {
		c = new(GetSiteMarketResponse)
		c.SiteMarket = x.SiteMarket
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *CreateSiteMarketRequest) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *CreateSiteMarketRequest:
		x.SiteMarket = v.GetSiteMarket()
	default:
		if v, ok := v.(interface{ GetSiteMarket() *SiteMarket }); ok {
			x.SiteMarket = v.GetSiteMarket()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *CreateSiteMarketRequest) Proto_ShallowClone() (c *CreateSiteMarketRequest) {
	if x != nil {
		c = new(CreateSiteMarketRequest)
		c.SiteMarket = x.SiteMarket
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *CreateSiteMarketResponse) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *CreateSiteMarketResponse:
		x.SiteMarket = v.GetSiteMarket()
	default:
		if v, ok := v.(interface{ GetSiteMarket() *SiteMarket }); ok {
			x.SiteMarket = v.GetSiteMarket()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *CreateSiteMarketResponse) Proto_ShallowClone() (c *CreateSiteMarketResponse) {
	if x != nil {
		c = new(CreateSiteMarketResponse)
		c.SiteMarket = x.SiteMarket
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *UpdateSiteMarketRequest) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *UpdateSiteMarketRequest:
		x.SiteMarket = v.GetSiteMarket()
	default:
		if v, ok := v.(interface{ GetSiteMarket() *SiteMarket }); ok {
			x.SiteMarket = v.GetSiteMarket()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *UpdateSiteMarketRequest) Proto_ShallowClone() (c *UpdateSiteMarketRequest) {
	if x != nil {
		c = new(UpdateSiteMarketRequest)
		c.SiteMarket = x.SiteMarket
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *UpdateSiteMarketResponse) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *UpdateSiteMarketResponse:
		x.SiteMarket = v.GetSiteMarket()
	default:
		if v, ok := v.(interface{ GetSiteMarket() *SiteMarket }); ok {
			x.SiteMarket = v.GetSiteMarket()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *UpdateSiteMarketResponse) Proto_ShallowClone() (c *UpdateSiteMarketResponse) {
	if x != nil {
		c = new(UpdateSiteMarketResponse)
		c.SiteMarket = x.SiteMarket
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *DeleteSiteMarketRequest) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *DeleteSiteMarketRequest:
		x.Id = v.GetId()
	default:
		if v, ok := v.(interface{ GetId() string }); ok {
			x.Id = v.GetId()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *DeleteSiteMarketRequest) Proto_ShallowClone() (c *DeleteSiteMarketRequest) {
	if x != nil {
		c = new(DeleteSiteMarketRequest)
		c.Id = x.Id
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *DeleteSiteMarketResponse) Proto_ShallowCopy(v interface{}) {
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *DeleteSiteMarketResponse) Proto_ShallowClone() (c *DeleteSiteMarketResponse) {
	if x != nil {
		c = new(DeleteSiteMarketResponse)
	}
	return
}
