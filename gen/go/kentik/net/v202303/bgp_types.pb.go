// Common BGP data types

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        (unknown)
// source: kentik/net/v202303/bgp_types.proto

package kentik_api

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// {{.Name}}
type Afi int32

const (
	Afi_AFI_UNSPECIFIED Afi = 0
	Afi_AFI_IP4         Afi = 1
	Afi_AFI_IP6         Afi = 2
)

// Enum value maps for Afi.
var (
	Afi_name = map[int32]string{
		0: "AFI_UNSPECIFIED",
		1: "AFI_IP4",
		2: "AFI_IP6",
	}
	Afi_value = map[string]int32{
		"AFI_UNSPECIFIED": 0,
		"AFI_IP4":         1,
		"AFI_IP6":         2,
	}
)

func (x Afi) Enum() *Afi {
	p := new(Afi)
	*p = x
	return p
}

func (x Afi) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Afi) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_net_v202303_bgp_types_proto_enumTypes[0].Descriptor()
}

func (Afi) Type() protoreflect.EnumType {
	return &file_kentik_net_v202303_bgp_types_proto_enumTypes[0]
}

func (x Afi) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Afi.Descriptor instead.
func (Afi) EnumDescriptor() ([]byte, []int) {
	return file_kentik_net_v202303_bgp_types_proto_rawDescGZIP(), []int{0}
}

// {{.Name}}
type Safi int32

const (
	Safi_SAFI_UNSPECIFIED Safi = 0
	Safi_SAFI_UNICAST     Safi = 1
	Safi_SAFI_MPLS        Safi = 4
	Safi_SAFI_L3VPN       Safi = 128
)

// Enum value maps for Safi.
var (
	Safi_name = map[int32]string{
		0:   "SAFI_UNSPECIFIED",
		1:   "SAFI_UNICAST",
		4:   "SAFI_MPLS",
		128: "SAFI_L3VPN",
	}
	Safi_value = map[string]int32{
		"SAFI_UNSPECIFIED": 0,
		"SAFI_UNICAST":     1,
		"SAFI_MPLS":        4,
		"SAFI_L3VPN":       128,
	}
)

func (x Safi) Enum() *Safi {
	p := new(Safi)
	*p = x
	return p
}

func (x Safi) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Safi) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_net_v202303_bgp_types_proto_enumTypes[1].Descriptor()
}

func (Safi) Type() protoreflect.EnumType {
	return &file_kentik_net_v202303_bgp_types_proto_enumTypes[1]
}

func (x Safi) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Safi.Descriptor instead.
func (Safi) EnumDescriptor() ([]byte, []int) {
	return file_kentik_net_v202303_bgp_types_proto_rawDescGZIP(), []int{1}
}

// {{.Name}}
type RpkiStatus int32

const (
	// Invalid value.
	RpkiStatus_RPKI_STATUS_UNSPECIFIED RpkiStatus = 0
	// No matching ROAs found for the prefix.
	RpkiStatus_RPKI_STATUS_NOT_FOUND RpkiStatus = 1
	// Explicitly invalid prefix matching ROA
	RpkiStatus_RPKI_STATUS_EXPLICIT_INVALID RpkiStatus = 2
	// Prefix format not suitable for validation
	RpkiStatus_RPKI_STATUS_INVALID_PREFIX RpkiStatus = 3
	// Prefix origin does not match any matching ROA
	RpkiStatus_RPKI_STATUS_INVALID RpkiStatus = 4
	// Prefix origin matches an ROA
	RpkiStatus_RPKI_STATUS_VALID RpkiStatus = 5
	// Error during validation
	RpkiStatus_RPKI_STATUS_ERROR RpkiStatus = 8
)

// Enum value maps for RpkiStatus.
var (
	RpkiStatus_name = map[int32]string{
		0: "RPKI_STATUS_UNSPECIFIED",
		1: "RPKI_STATUS_NOT_FOUND",
		2: "RPKI_STATUS_EXPLICIT_INVALID",
		3: "RPKI_STATUS_INVALID_PREFIX",
		4: "RPKI_STATUS_INVALID",
		5: "RPKI_STATUS_VALID",
		8: "RPKI_STATUS_ERROR",
	}
	RpkiStatus_value = map[string]int32{
		"RPKI_STATUS_UNSPECIFIED":      0,
		"RPKI_STATUS_NOT_FOUND":        1,
		"RPKI_STATUS_EXPLICIT_INVALID": 2,
		"RPKI_STATUS_INVALID_PREFIX":   3,
		"RPKI_STATUS_INVALID":          4,
		"RPKI_STATUS_VALID":            5,
		"RPKI_STATUS_ERROR":            8,
	}
)

func (x RpkiStatus) Enum() *RpkiStatus {
	p := new(RpkiStatus)
	*p = x
	return p
}

func (x RpkiStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpkiStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_net_v202303_bgp_types_proto_enumTypes[2].Descriptor()
}

func (RpkiStatus) Type() protoreflect.EnumType {
	return &file_kentik_net_v202303_bgp_types_proto_enumTypes[2]
}

func (x RpkiStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpkiStatus.Descriptor instead.
func (RpkiStatus) EnumDescriptor() ([]byte, []int) {
	return file_kentik_net_v202303_bgp_types_proto_rawDescGZIP(), []int{2}
}

// {{.Name}}
type VantagePoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dataset   string `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Collector string `protobuf:"bytes,2,opt,name=collector,proto3" json:"collector,omitempty"`
	PeerAsn   uint32 `protobuf:"varint,3,opt,name=peer_asn,json=peerAsn,proto3" json:"peer_asn,omitempty"`
	PeerIp    string `protobuf:"bytes,4,opt,name=peer_ip,json=peerIp,proto3" json:"peer_ip,omitempty"`
}

func (x *VantagePoint) Reset() {
	*x = VantagePoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_net_v202303_bgp_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VantagePoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VantagePoint) ProtoMessage() {}

func (x *VantagePoint) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_net_v202303_bgp_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VantagePoint.ProtoReflect.Descriptor instead.
func (*VantagePoint) Descriptor() ([]byte, []int) {
	return file_kentik_net_v202303_bgp_types_proto_rawDescGZIP(), []int{0}
}

func (x *VantagePoint) GetDataset() string {
	if x != nil {
		return x.Dataset
	}
	return ""
}

func (x *VantagePoint) GetCollector() string {
	if x != nil {
		return x.Collector
	}
	return ""
}

func (x *VantagePoint) GetPeerAsn() uint32 {
	if x != nil {
		return x.PeerAsn
	}
	return 0
}

func (x *VantagePoint) GetPeerIp() string {
	if x != nil {
		return x.PeerIp
	}
	return ""
}

var File_kentik_net_v202303_bgp_types_proto protoreflect.FileDescriptor

var file_kentik_net_v202303_bgp_types_proto_rawDesc = []byte{
	0x0a, 0x22, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x6e, 0x65, 0x74, 0x2f, 0x76, 0x32, 0x30,
	0x32, 0x33, 0x30, 0x33, 0x2f, 0x62, 0x67, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x6e, 0x65, 0x74,
	0x2e, 0x76, 0x32, 0x30, 0x32, 0x33, 0x30, 0x33, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd4, 0x02, 0x0a, 0x0c, 0x56, 0x61,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x07, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0x92, 0x41, 0x20,
	0x32, 0x1e, 0x4e, 0x61, 0x6d, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x73, 0x65, 0x74,
	0xe2, 0x41, 0x01, 0x03, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x3c, 0x0a,
	0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x1e, 0x92, 0x41, 0x17, 0x32, 0x15, 0x4e, 0x61, 0x6d, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0xe2, 0x41, 0x01, 0x03,
	0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x5e, 0x0a, 0x08, 0x70,
	0x65, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x43, 0x92,
	0x41, 0x3c, 0x32, 0x3a, 0x41, 0x53, 0x4e, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70,
	0x65, 0x65, 0x72, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x73, 0x20, 0x42, 0x47, 0x50, 0x20, 0x64, 0x61, 0x74, 0x61, 0xe2, 0x41,
	0x01, 0x03, 0x52, 0x07, 0x70, 0x65, 0x65, 0x72, 0x41, 0x73, 0x6e, 0x12, 0x63, 0x0a, 0x07, 0x70,
	0x65, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x4a, 0x92, 0x41,
	0x43, 0x32, 0x41, 0x49, 0x50, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x65, 0x65, 0x72, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x77,
	0x68, 0x69, 0x63, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x20, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x73, 0x20, 0x42, 0x47, 0x50, 0x20,
	0x64, 0x61, 0x74, 0x61, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x70,
	0x2a, 0x34, 0x0a, 0x03, 0x41, 0x66, 0x69, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x46, 0x49, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x41, 0x46, 0x49, 0x5f, 0x49, 0x50, 0x34, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x46, 0x49,
	0x5f, 0x49, 0x50, 0x36, 0x10, 0x02, 0x2a, 0x4e, 0x0a, 0x04, 0x53, 0x61, 0x66, 0x69, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x41, 0x46, 0x49, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x41, 0x46, 0x49, 0x5f, 0x55, 0x4e, 0x49,
	0x43, 0x41, 0x53, 0x54, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x41, 0x46, 0x49, 0x5f, 0x4d,
	0x50, 0x4c, 0x53, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0a, 0x53, 0x41, 0x46, 0x49, 0x5f, 0x4c, 0x33,
	0x56, 0x50, 0x4e, 0x10, 0x80, 0x01, 0x2a, 0xcd, 0x01, 0x0a, 0x0a, 0x52, 0x70, 0x6b, 0x69, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x50, 0x4b, 0x49, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x50, 0x4b, 0x49, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x20, 0x0a,
	0x1c, 0x52, 0x50, 0x4b, 0x49, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x58, 0x50,
	0x4c, 0x49, 0x43, 0x49, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x02, 0x12,
	0x1e, 0x0a, 0x1a, 0x52, 0x50, 0x4b, 0x49, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x50, 0x52, 0x45, 0x46, 0x49, 0x58, 0x10, 0x03, 0x12,
	0x17, 0x0a, 0x13, 0x52, 0x50, 0x4b, 0x49, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x50, 0x4b, 0x49,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x05, 0x12,
	0x15, 0x0a, 0x11, 0x52, 0x50, 0x4b, 0x49, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x08, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2d,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x67, 0x6f,
	0x2f, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x6e, 0x65, 0x74, 0x2f, 0x76, 0x32, 0x30, 0x32,
	0x33, 0x30, 0x33, 0x3b, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x5f, 0x61, 0x70, 0x69, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kentik_net_v202303_bgp_types_proto_rawDescOnce sync.Once
	file_kentik_net_v202303_bgp_types_proto_rawDescData = file_kentik_net_v202303_bgp_types_proto_rawDesc
)

func file_kentik_net_v202303_bgp_types_proto_rawDescGZIP() []byte {
	file_kentik_net_v202303_bgp_types_proto_rawDescOnce.Do(func() {
		file_kentik_net_v202303_bgp_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_kentik_net_v202303_bgp_types_proto_rawDescData)
	})
	return file_kentik_net_v202303_bgp_types_proto_rawDescData
}

var file_kentik_net_v202303_bgp_types_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_kentik_net_v202303_bgp_types_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_kentik_net_v202303_bgp_types_proto_goTypes = []interface{}{
	(Afi)(0),             // 0: kentik.net.v202303.Afi
	(Safi)(0),            // 1: kentik.net.v202303.Safi
	(RpkiStatus)(0),      // 2: kentik.net.v202303.RpkiStatus
	(*VantagePoint)(nil), // 3: kentik.net.v202303.VantagePoint
}
var file_kentik_net_v202303_bgp_types_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_kentik_net_v202303_bgp_types_proto_init() }
func file_kentik_net_v202303_bgp_types_proto_init() {
	if File_kentik_net_v202303_bgp_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kentik_net_v202303_bgp_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VantagePoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kentik_net_v202303_bgp_types_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kentik_net_v202303_bgp_types_proto_goTypes,
		DependencyIndexes: file_kentik_net_v202303_bgp_types_proto_depIdxs,
		EnumInfos:         file_kentik_net_v202303_bgp_types_proto_enumTypes,
		MessageInfos:      file_kentik_net_v202303_bgp_types_proto_msgTypes,
	}.Build()
	File_kentik_net_v202303_bgp_types_proto = out.File
	file_kentik_net_v202303_bgp_types_proto_rawDesc = nil
	file_kentik_net_v202303_bgp_types_proto_goTypes = nil
	file_kentik_net_v202303_bgp_types_proto_depIdxs = nil
}
