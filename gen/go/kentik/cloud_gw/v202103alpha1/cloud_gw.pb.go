// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: kentik/cloud_gw/v202103alpha1/cloud_gw.proto

package cloudgw

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	http_over_grpc "github.com/kentik/api-schema-public/gen/go/grpc/http_over_grpc"
	_ "github.com/kentik/api-schema-public/gen/go/kentik/core/v202012alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LoginAwsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *LoginAwsRequest) Reset() {
	*x = LoginAwsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginAwsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginAwsRequest) ProtoMessage() {}

func (x *LoginAwsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginAwsRequest.ProtoReflect.Descriptor instead.
func (*LoginAwsRequest) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{0}
}

func (x *LoginAwsRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type LoginAwsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LoginAwsResponse) Reset() {
	*x = LoginAwsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginAwsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginAwsResponse) ProtoMessage() {}

func (x *LoginAwsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginAwsResponse.ProtoReflect.Descriptor instead.
func (*LoginAwsResponse) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{1}
}

// cid from headers / context
type ProxyAwsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region      string                              `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	HttpRequest *http_over_grpc.HTTPOverGRPCRequest `protobuf:"bytes,3,opt,name=http_request,json=httpRequest,proto3" json:"http_request,omitempty"`
}

func (x *ProxyAwsRequest) Reset() {
	*x = ProxyAwsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyAwsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyAwsRequest) ProtoMessage() {}

func (x *ProxyAwsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyAwsRequest.ProtoReflect.Descriptor instead.
func (*ProxyAwsRequest) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{2}
}

func (x *ProxyAwsRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ProxyAwsRequest) GetHttpRequest() *http_over_grpc.HTTPOverGRPCRequest {
	if x != nil {
		return x.HttpRequest
	}
	return nil
}

type ProxyAwsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// HTTPOverGRPCResponse http_over_grpc_response = 1;
	HttpResponse *http_over_grpc.HTTPOverGRPCReply `protobuf:"bytes,2,opt,name=http_response,json=httpResponse,proto3" json:"http_response,omitempty"`
}

func (x *ProxyAwsResponse) Reset() {
	*x = ProxyAwsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyAwsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyAwsResponse) ProtoMessage() {}

func (x *ProxyAwsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyAwsResponse.ProtoReflect.Descriptor instead.
func (*ProxyAwsResponse) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{3}
}

func (x *ProxyAwsResponse) GetHttpResponse() *http_over_grpc.HTTPOverGRPCReply {
	if x != nil {
		return x.HttpResponse
	}
	return nil
}

type ListAwsRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAwsRolesRequest) Reset() {
	*x = ListAwsRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAwsRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAwsRolesRequest) ProtoMessage() {}

func (x *ListAwsRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAwsRolesRequest.ProtoReflect.Descriptor instead.
func (*ListAwsRolesRequest) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{4}
}

type ListAwsRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key is cid
	CompanyRoles map[int32]*CompanyRoles `protobuf:"bytes,1,rep,name=company_roles,json=companyRoles,proto3" json:"company_roles,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListAwsRolesResponse) Reset() {
	*x = ListAwsRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAwsRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAwsRolesResponse) ProtoMessage() {}

func (x *ListAwsRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAwsRolesResponse.ProtoReflect.Descriptor instead.
func (*ListAwsRolesResponse) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{5}
}

func (x *ListAwsRolesResponse) GetCompanyRoles() map[int32]*CompanyRoles {
	if x != nil {
		return x.CompanyRoles
	}
	return nil
}

// Very similar to ListAwsRolesResponse.  Could later add a flag that allows a
// partial update, instead of a full list, but for now we expect a complete
// list each time.
type SendAwsRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key is cid
	CompanyRoles map[int32]*CompanyRoles `protobuf:"bytes,1,rep,name=company_roles,json=companyRoles,proto3" json:"company_roles,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SendAwsRolesRequest) Reset() {
	*x = SendAwsRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendAwsRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAwsRolesRequest) ProtoMessage() {}

func (x *SendAwsRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAwsRolesRequest.ProtoReflect.Descriptor instead.
func (*SendAwsRolesRequest) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{6}
}

func (x *SendAwsRolesRequest) GetCompanyRoles() map[int32]*CompanyRoles {
	if x != nil {
		return x.CompanyRoles
	}
	return nil
}

type SendAwsRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendAwsRolesResponse) Reset() {
	*x = SendAwsRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendAwsRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAwsRolesResponse) ProtoMessage() {}

func (x *SendAwsRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAwsRolesResponse.ProtoReflect.Descriptor instead.
func (*SendAwsRolesResponse) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{7}
}

type CompanyRoles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key is region
	RegionRoles map[string]*RoleList `protobuf:"bytes,1,rep,name=region_roles,json=regionRoles,proto3" json:"region_roles,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CompanyRoles) Reset() {
	*x = CompanyRoles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyRoles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyRoles) ProtoMessage() {}

func (x *CompanyRoles) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyRoles.ProtoReflect.Descriptor instead.
func (*CompanyRoles) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{8}
}

func (x *CompanyRoles) GetRegionRoles() map[string]*RoleList {
	if x != nil {
		return x.RegionRoles
	}
	return nil
}

type RoleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles []string `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *RoleList) Reset() {
	*x = RoleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleList) ProtoMessage() {}

func (x *RoleList) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleList.ProtoReflect.Descriptor instead.
func (*RoleList) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{9}
}

func (x *RoleList) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type GetAwsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAwsRequest) Reset() {
	*x = GetAwsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAwsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAwsRequest) ProtoMessage() {}

func (x *GetAwsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAwsRequest.ProtoReflect.Descriptor instead.
func (*GetAwsRequest) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{10}
}

type GetAwsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId   int64                               `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	HttpRequest *http_over_grpc.HTTPOverGRPCRequest `protobuf:"bytes,2,opt,name=http_request,json=httpRequest,proto3" json:"http_request,omitempty"`
}

func (x *GetAwsResponse) Reset() {
	*x = GetAwsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAwsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAwsResponse) ProtoMessage() {}

func (x *GetAwsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAwsResponse.ProtoReflect.Descriptor instead.
func (*GetAwsResponse) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{11}
}

func (x *GetAwsResponse) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *GetAwsResponse) GetHttpRequest() *http_over_grpc.HTTPOverGRPCRequest {
	if x != nil {
		return x.HttpRequest
	}
	return nil
}

type SendAwsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId    int64                             `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	HttpResponse *http_over_grpc.HTTPOverGRPCReply `protobuf:"bytes,2,opt,name=http_response,json=httpResponse,proto3" json:"http_response,omitempty"`
}

func (x *SendAwsRequest) Reset() {
	*x = SendAwsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendAwsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAwsRequest) ProtoMessage() {}

func (x *SendAwsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAwsRequest.ProtoReflect.Descriptor instead.
func (*SendAwsRequest) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{12}
}

func (x *SendAwsRequest) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *SendAwsRequest) GetHttpResponse() *http_over_grpc.HTTPOverGRPCReply {
	if x != nil {
		return x.HttpResponse
	}
	return nil
}

type SendAwsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendAwsResponse) Reset() {
	*x = SendAwsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendAwsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAwsResponse) ProtoMessage() {}

func (x *SendAwsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAwsResponse.ProtoReflect.Descriptor instead.
func (*SendAwsResponse) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{13}
}

type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{14}
}

func (x *Header) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Header) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_kentik_cloud_gw_v202103alpha1_cloud_gw_proto protoreflect.FileDescriptor

var file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67,
	0x77, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d,
	0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e,
	0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x30, 0x31, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b,
	0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x32, 0x30, 0x32,
	0x30, 0x31, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x2f, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x29, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x77,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x22, 0x12, 0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x76, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x41, 0x77, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x4b, 0x0a, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x68, 0x74, 0x74,
	0x70, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x54, 0x54, 0x50,
	0x4f, 0x76, 0x65, 0x72, 0x47, 0x52, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0b, 0x68, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5f, 0x0a, 0x10,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x41, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4b, 0x0a, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x68,
	0x74, 0x74, 0x70, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x54,
	0x54, 0x50, 0x4f, 0x76, 0x65, 0x72, 0x47, 0x52, 0x50, 0x43, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52,
	0x0c, 0x68, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x77, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0xf0, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x77, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a,
	0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x77, 0x73, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x1a, 0x6c, 0x0a, 0x11, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x41, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67,
	0x77, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xee, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64,
	0x41, 0x77, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x69, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x77, 0x73, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x1a, 0x6c, 0x0a, 0x11, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x41, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x67, 0x77, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64,
	0x41, 0x77, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x12, 0x5f, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30,
	0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x1a, 0x67, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30,
	0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x20, 0x0a, 0x08, 0x52,
	0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x0f, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x41, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7c,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x4b, 0x0a, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x68, 0x74, 0x74,
	0x70, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x54, 0x54, 0x50,
	0x4f, 0x76, 0x65, 0x72, 0x47, 0x52, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0b, 0x68, 0x74, 0x74, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7c, 0x0a, 0x0e,
	0x53, 0x65, 0x6e, 0x64, 0x41, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x4b, 0x0a,
	0x0d, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70,
	0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x4f,
	0x76, 0x65, 0x72, 0x47, 0x52, 0x50, 0x43, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x0c, 0x68, 0x74,
	0x74, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x65,
	0x6e, 0x64, 0x41, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x0a,
	0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x32, 0xc2, 0x03, 0x0a, 0x14, 0x41, 0x77, 0x73, 0x47, 0x77, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xba, 0x01, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x41, 0x77, 0x73, 0x12, 0x2e, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30,
	0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x41, 0x77, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30,
	0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x41, 0x77, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0xf2, 0xd7, 0x02, 0x14, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x3a, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x22, 0x2a, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x5f, 0x67, 0x77, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x61, 0x77, 0x73, 0x2f, 0x7b, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0xbe, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x77, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x32, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69,
	0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31,
	0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x77, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6b,
	0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x76,
	0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x77, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x45, 0xf2, 0xd7, 0x02, 0x13, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x5f, 0x67, 0x77, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28,
	0x12, 0x26, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2f, 0x76, 0x32, 0x30, 0x32,
	0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x61,
	0x77, 0x73, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x1a, 0x2c, 0xca, 0x41, 0x17, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b,
	0x2e, 0x63, 0x6f, 0x6d, 0xea, 0xd7, 0x02, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x32, 0xfb, 0x05, 0x0a, 0x14, 0x41, 0x77, 0x73, 0x47, 0x77,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0xb7, 0x01, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x77, 0x73, 0x12, 0x2e, 0x2e, 0x6b,
	0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x76,
	0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x41, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6b,
	0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x76,
	0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x41, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0xf2,
	0xd7, 0x02, 0x14, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67,
	0x77, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x77, 0x73,
	0x2f, 0x7b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x7d, 0x12, 0xa6, 0x01, 0x0a, 0x06, 0x47, 0x65,
	0x74, 0x41, 0x77, 0x73, 0x12, 0x2c, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x67, 0x77, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x3f, 0xf2, 0xd7, 0x02, 0x14, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x5f, 0x67, 0x77, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x21, 0x12, 0x1f, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2f, 0x76, 0x32, 0x30,
	0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x61,
	0x77, 0x73, 0x12, 0xba, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x77, 0x73, 0x12, 0x2d,
	0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77,
	0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x41, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e,
	0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x41, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0xf2,
	0xd7, 0x02, 0x14, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67,
	0x77, 0x3a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x22, 0x2d, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x77, 0x73, 0x2f,
	0x7b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12,
	0xc2, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x77, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x12, 0x32, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x67, 0x77, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x77, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x77, 0x73, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0xf2, 0xd7, 0x02, 0x14, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x3a, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x22, 0x26, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x67, 0x77, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x77, 0x73, 0x5f, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x3a, 0x01, 0x2a, 0x42, 0xdc, 0x02, 0x5a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x6b, 0x65, 0x6e,
	0x74, 0x69, 0x6b, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2f, 0x76, 0x32, 0x30,
	0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x67, 0x77, 0x92, 0x41, 0x8d, 0x02, 0x12, 0x4f, 0x0a, 0x0c, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x20,
	0x47, 0x57, 0x20, 0x41, 0x50, 0x49, 0x22, 0x37, 0x0a, 0x16, 0x4b, 0x65, 0x6e, 0x74, 0x69, 0x6b,
	0x20, 0x41, 0x50, 0x49, 0x20, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x1d, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x32,
	0x06, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x2a, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x44,
	0x0a, 0x1e, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x15, 0x08, 0x02, 0x1a, 0x0f, 0x58,
	0x2d, 0x43, 0x48, 0x2d, 0x41, 0x75, 0x74, 0x68, 0x2d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x20, 0x02,
	0x0a, 0x22, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x08, 0x02, 0x1a, 0x13, 0x58,
	0x2d, 0x43, 0x48, 0x2d, 0x41, 0x75, 0x74, 0x68, 0x2d, 0x41, 0x50, 0x49, 0x2d, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x20, 0x02, 0x62, 0x16, 0x0a, 0x09, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x00, 0x0a, 0x09, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x00, 0x72, 0x35, 0x0a, 0x16,
	0x4d, 0x6f, 0x72, 0x65, 0x20, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x20, 0x4b, 0x65, 0x6e, 0x74, 0x69,
	0x6b, 0x20, 0x41, 0x50, 0x49, 0x73, 0x12, 0x1b, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f,
	0x64, 0x6f, 0x63, 0x73, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescOnce sync.Once
	file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescData = file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDesc
)

func file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP() []byte {
	file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescOnce.Do(func() {
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescData = protoimpl.X.CompressGZIP(file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescData)
	})
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescData
}

var file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_goTypes = []interface{}{
	(*LoginAwsRequest)(nil),      // 0: kentik.cloud_gw.v202103alpha1.LoginAwsRequest
	(*LoginAwsResponse)(nil),     // 1: kentik.cloud_gw.v202103alpha1.LoginAwsResponse
	(*ProxyAwsRequest)(nil),      // 2: kentik.cloud_gw.v202103alpha1.ProxyAwsRequest
	(*ProxyAwsResponse)(nil),     // 3: kentik.cloud_gw.v202103alpha1.ProxyAwsResponse
	(*ListAwsRolesRequest)(nil),  // 4: kentik.cloud_gw.v202103alpha1.ListAwsRolesRequest
	(*ListAwsRolesResponse)(nil), // 5: kentik.cloud_gw.v202103alpha1.ListAwsRolesResponse
	(*SendAwsRolesRequest)(nil),  // 6: kentik.cloud_gw.v202103alpha1.SendAwsRolesRequest
	(*SendAwsRolesResponse)(nil), // 7: kentik.cloud_gw.v202103alpha1.SendAwsRolesResponse
	(*CompanyRoles)(nil),         // 8: kentik.cloud_gw.v202103alpha1.CompanyRoles
	(*RoleList)(nil),             // 9: kentik.cloud_gw.v202103alpha1.RoleList
	(*GetAwsRequest)(nil),        // 10: kentik.cloud_gw.v202103alpha1.GetAwsRequest
	(*GetAwsResponse)(nil),       // 11: kentik.cloud_gw.v202103alpha1.GetAwsResponse
	(*SendAwsRequest)(nil),       // 12: kentik.cloud_gw.v202103alpha1.SendAwsRequest
	(*SendAwsResponse)(nil),      // 13: kentik.cloud_gw.v202103alpha1.SendAwsResponse
	(*Header)(nil),               // 14: kentik.cloud_gw.v202103alpha1.Header
	nil,                          // 15: kentik.cloud_gw.v202103alpha1.ListAwsRolesResponse.CompanyRolesEntry
	nil,                          // 16: kentik.cloud_gw.v202103alpha1.SendAwsRolesRequest.CompanyRolesEntry
	nil,                          // 17: kentik.cloud_gw.v202103alpha1.CompanyRoles.RegionRolesEntry
	(*http_over_grpc.HTTPOverGRPCRequest)(nil), // 18: grpc.http_over_grpc.HTTPOverGRPCRequest
	(*http_over_grpc.HTTPOverGRPCReply)(nil),   // 19: grpc.http_over_grpc.HTTPOverGRPCReply
}
var file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_depIdxs = []int32{
	18, // 0: kentik.cloud_gw.v202103alpha1.ProxyAwsRequest.http_request:type_name -> grpc.http_over_grpc.HTTPOverGRPCRequest
	19, // 1: kentik.cloud_gw.v202103alpha1.ProxyAwsResponse.http_response:type_name -> grpc.http_over_grpc.HTTPOverGRPCReply
	15, // 2: kentik.cloud_gw.v202103alpha1.ListAwsRolesResponse.company_roles:type_name -> kentik.cloud_gw.v202103alpha1.ListAwsRolesResponse.CompanyRolesEntry
	16, // 3: kentik.cloud_gw.v202103alpha1.SendAwsRolesRequest.company_roles:type_name -> kentik.cloud_gw.v202103alpha1.SendAwsRolesRequest.CompanyRolesEntry
	17, // 4: kentik.cloud_gw.v202103alpha1.CompanyRoles.region_roles:type_name -> kentik.cloud_gw.v202103alpha1.CompanyRoles.RegionRolesEntry
	18, // 5: kentik.cloud_gw.v202103alpha1.GetAwsResponse.http_request:type_name -> grpc.http_over_grpc.HTTPOverGRPCRequest
	19, // 6: kentik.cloud_gw.v202103alpha1.SendAwsRequest.http_response:type_name -> grpc.http_over_grpc.HTTPOverGRPCReply
	8,  // 7: kentik.cloud_gw.v202103alpha1.ListAwsRolesResponse.CompanyRolesEntry.value:type_name -> kentik.cloud_gw.v202103alpha1.CompanyRoles
	8,  // 8: kentik.cloud_gw.v202103alpha1.SendAwsRolesRequest.CompanyRolesEntry.value:type_name -> kentik.cloud_gw.v202103alpha1.CompanyRoles
	9,  // 9: kentik.cloud_gw.v202103alpha1.CompanyRoles.RegionRolesEntry.value:type_name -> kentik.cloud_gw.v202103alpha1.RoleList
	2,  // 10: kentik.cloud_gw.v202103alpha1.AwsGwInternalService.ProxyAws:input_type -> kentik.cloud_gw.v202103alpha1.ProxyAwsRequest
	4,  // 11: kentik.cloud_gw.v202103alpha1.AwsGwInternalService.ListAwsRoles:input_type -> kentik.cloud_gw.v202103alpha1.ListAwsRolesRequest
	0,  // 12: kentik.cloud_gw.v202103alpha1.AwsGwExternalService.LoginAws:input_type -> kentik.cloud_gw.v202103alpha1.LoginAwsRequest
	10, // 13: kentik.cloud_gw.v202103alpha1.AwsGwExternalService.GetAws:input_type -> kentik.cloud_gw.v202103alpha1.GetAwsRequest
	12, // 14: kentik.cloud_gw.v202103alpha1.AwsGwExternalService.SendAws:input_type -> kentik.cloud_gw.v202103alpha1.SendAwsRequest
	6,  // 15: kentik.cloud_gw.v202103alpha1.AwsGwExternalService.SendAwsRoles:input_type -> kentik.cloud_gw.v202103alpha1.SendAwsRolesRequest
	3,  // 16: kentik.cloud_gw.v202103alpha1.AwsGwInternalService.ProxyAws:output_type -> kentik.cloud_gw.v202103alpha1.ProxyAwsResponse
	5,  // 17: kentik.cloud_gw.v202103alpha1.AwsGwInternalService.ListAwsRoles:output_type -> kentik.cloud_gw.v202103alpha1.ListAwsRolesResponse
	1,  // 18: kentik.cloud_gw.v202103alpha1.AwsGwExternalService.LoginAws:output_type -> kentik.cloud_gw.v202103alpha1.LoginAwsResponse
	11, // 19: kentik.cloud_gw.v202103alpha1.AwsGwExternalService.GetAws:output_type -> kentik.cloud_gw.v202103alpha1.GetAwsResponse
	13, // 20: kentik.cloud_gw.v202103alpha1.AwsGwExternalService.SendAws:output_type -> kentik.cloud_gw.v202103alpha1.SendAwsResponse
	7,  // 21: kentik.cloud_gw.v202103alpha1.AwsGwExternalService.SendAwsRoles:output_type -> kentik.cloud_gw.v202103alpha1.SendAwsRolesResponse
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_init() }
func file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_init() {
	if File_kentik_cloud_gw_v202103alpha1_cloud_gw_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginAwsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginAwsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyAwsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyAwsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAwsRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAwsRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendAwsRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendAwsRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyRoles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAwsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAwsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendAwsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendAwsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_goTypes,
		DependencyIndexes: file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_depIdxs,
		MessageInfos:      file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes,
	}.Build()
	File_kentik_cloud_gw_v202103alpha1_cloud_gw_proto = out.File
	file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDesc = nil
	file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_goTypes = nil
	file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_depIdxs = nil
}
