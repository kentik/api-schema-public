// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: kentik/cloud_gw/v202103alpha1/cloud_gw.proto

package cloudgw

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	http_over_grpc "github.com/kentik/api-schema-public/gen/go/grpc/http_over_grpc"
	_ "github.com/kentik/api-schema-public/gen/go/kentik/core/v202012alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LoginAWSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *LoginAWSRequest) Reset() {
	*x = LoginAWSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginAWSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginAWSRequest) ProtoMessage() {}

func (x *LoginAWSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginAWSRequest.ProtoReflect.Descriptor instead.
func (*LoginAWSRequest) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{0}
}

func (x *LoginAWSRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type LoginAWSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LoginAWSResponse) Reset() {
	*x = LoginAWSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginAWSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginAWSResponse) ProtoMessage() {}

func (x *LoginAWSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginAWSResponse.ProtoReflect.Descriptor instead.
func (*LoginAWSResponse) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{1}
}

// cid from headers / context
type ProxyAWSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// HTTPOverGRPCRequest http_over_grpc_request = 2;
	HttpOverGrpcRequest *http_over_grpc.HTTPOverGRPCRequest `protobuf:"bytes,2,opt,name=http_over_grpc_request,json=httpOverGrpcRequest,proto3" json:"http_over_grpc_request,omitempty"`
}

func (x *ProxyAWSRequest) Reset() {
	*x = ProxyAWSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyAWSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyAWSRequest) ProtoMessage() {}

func (x *ProxyAWSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyAWSRequest.ProtoReflect.Descriptor instead.
func (*ProxyAWSRequest) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{2}
}

func (x *ProxyAWSRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ProxyAWSRequest) GetHttpOverGrpcRequest() *http_over_grpc.HTTPOverGRPCRequest {
	if x != nil {
		return x.HttpOverGrpcRequest
	}
	return nil
}

type ProxyAWSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// HTTPOverGRPCResponse http_over_grpc_response = 1;
	HttpOverGrpcReply *http_over_grpc.HTTPOverGRPCReply `protobuf:"bytes,2,opt,name=http_over_grpc_reply,json=httpOverGrpcReply,proto3" json:"http_over_grpc_reply,omitempty"`
}

func (x *ProxyAWSResponse) Reset() {
	*x = ProxyAWSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyAWSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyAWSResponse) ProtoMessage() {}

func (x *ProxyAWSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyAWSResponse.ProtoReflect.Descriptor instead.
func (*ProxyAWSResponse) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{3}
}

func (x *ProxyAWSResponse) GetHttpOverGrpcReply() *http_over_grpc.HTTPOverGRPCReply {
	if x != nil {
		return x.HttpOverGrpcReply
	}
	return nil
}

type GetAWSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAWSRequest) Reset() {
	*x = GetAWSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAWSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAWSRequest) ProtoMessage() {}

func (x *GetAWSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAWSRequest.ProtoReflect.Descriptor instead.
func (*GetAWSRequest) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{4}
}

type GetAWSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId       int64            `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	ProxyAwsRequest *ProxyAWSRequest `protobuf:"bytes,2,opt,name=proxy_aws_request,json=proxyAwsRequest,proto3" json:"proxy_aws_request,omitempty"`
}

func (x *GetAWSResponse) Reset() {
	*x = GetAWSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAWSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAWSResponse) ProtoMessage() {}

func (x *GetAWSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAWSResponse.ProtoReflect.Descriptor instead.
func (*GetAWSResponse) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{5}
}

func (x *GetAWSResponse) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *GetAWSResponse) GetProxyAwsRequest() *ProxyAWSRequest {
	if x != nil {
		return x.ProxyAwsRequest
	}
	return nil
}

type SendAWSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId       int64            `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	ProxyAwsRequest *ProxyAWSRequest `protobuf:"bytes,2,opt,name=proxy_aws_request,json=proxyAwsRequest,proto3" json:"proxy_aws_request,omitempty"`
}

func (x *SendAWSRequest) Reset() {
	*x = SendAWSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendAWSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAWSRequest) ProtoMessage() {}

func (x *SendAWSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAWSRequest.ProtoReflect.Descriptor instead.
func (*SendAWSRequest) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{6}
}

func (x *SendAWSRequest) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *SendAWSRequest) GetProxyAwsRequest() *ProxyAWSRequest {
	if x != nil {
		return x.ProxyAwsRequest
	}
	return nil
}

type SendAWSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendAWSResponse) Reset() {
	*x = SendAWSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendAWSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAWSResponse) ProtoMessage() {}

func (x *SendAWSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAWSResponse.ProtoReflect.Descriptor instead.
func (*SendAWSResponse) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{7}
}

type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP(), []int{8}
}

func (x *Header) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Header) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_kentik_cloud_gw_v202103alpha1_cloud_gw_proto protoreflect.FileDescriptor

var file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67,
	0x77, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d,
	0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e,
	0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x30, 0x31, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b,
	0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x32, 0x30, 0x32,
	0x30, 0x31, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x2f, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x29, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x57,
	0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x22, 0x12, 0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x57, 0x53, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x41, 0x57,
	0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x5d, 0x0a, 0x16, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6f, 0x76, 0x65,
	0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x4f, 0x76, 0x65, 0x72, 0x47,
	0x52, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x13, 0x68, 0x74, 0x74, 0x70,
	0x4f, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x6b, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x41, 0x57, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x14, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6f, 0x76, 0x65, 0x72,
	0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x4f, 0x76, 0x65, 0x72,
	0x47, 0x52, 0x50, 0x43, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x11, 0x68, 0x74, 0x74, 0x70, 0x4f,
	0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x0f, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x41, 0x57, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8b, 0x01,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x57, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x5a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x61, 0x77, 0x73, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x65, 0x6e,
	0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x76, 0x32, 0x30,
	0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x41, 0x57, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x41, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x0e,
	0x53, 0x65, 0x6e, 0x64, 0x41, 0x57, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x5a, 0x0a,
	0x11, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x61, 0x77, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69,
	0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31,
	0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x41, 0x57,
	0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x41,
	0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x65, 0x6e,
	0x64, 0x41, 0x57, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x0a, 0x06,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x32, 0xf7, 0x01, 0x0a, 0x14, 0x41, 0x57, 0x53, 0x47, 0x57, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xb0, 0x01, 0x0a, 0x08, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x41, 0x57, 0x53, 0x12, 0x2e, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x41, 0x57, 0x53, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x41, 0x57, 0x53, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0xf2, 0xd7, 0x02, 0x13, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x3a, 0x72, 0x65, 0x61, 0x64,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x22, 0x21, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67,
	0x77, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x61, 0x77, 0x73, 0x3a, 0x01, 0x2a, 0x1a, 0x2c, 0xca, 0x41,
	0x17, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6b, 0x65,
	0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0xea, 0xd7, 0x02, 0x0e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x32, 0x9d, 0x04, 0x0a, 0x14, 0x41,
	0x57, 0x53, 0x47, 0x57, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0xad, 0x01, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x57, 0x53,
	0x12, 0x2e, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x67, 0x77, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x57, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x67, 0x77, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x57, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x40, 0xf2, 0xd7, 0x02, 0x13, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x5f, 0x67, 0x77, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23,
	0x12, 0x21, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2f, 0x76, 0x32, 0x30, 0x32,
	0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x61, 0x77, 0x73, 0x12, 0xa5, 0x01, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x57, 0x53, 0x12, 0x2c,
	0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77,
	0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x57, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6b,
	0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x76,
	0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x57, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0xf2, 0xd7, 0x02,
	0x13, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x3a,
	0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x5f, 0x67, 0x77, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x77, 0x73, 0x12, 0xac, 0x01, 0x0a, 0x07,
	0x53, 0x65, 0x6e, 0x64, 0x41, 0x57, 0x53, 0x12, 0x2d, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30,
	0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x57, 0x53, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x57, 0x53, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0xf2, 0xd7, 0x02, 0x13, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x67, 0x77,
	0x2f, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x73,
	0x65, 0x6e, 0x64, 0x5f, 0x61, 0x77, 0x73, 0x3a, 0x01, 0x2a, 0x42, 0xdc, 0x02, 0x5a, 0x49, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b,
	0x2f, 0x61, 0x70, 0x69, 0x2d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x67, 0x6f, 0x2f, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x67, 0x77, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x3b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x67, 0x77, 0x92, 0x41, 0x8d, 0x02, 0x12, 0x4f, 0x0a, 0x0c,
	0x43, 0x4c, 0x4f, 0x55, 0x44, 0x20, 0x47, 0x57, 0x20, 0x41, 0x50, 0x49, 0x22, 0x37, 0x0a, 0x16,
	0x4b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x20, 0x41, 0x50, 0x49, 0x20, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x65, 0x6e, 0x74, 0x69,
	0x6b, 0x2f, 0x61, 0x70, 0x69, 0x32, 0x06, 0x32, 0x30, 0x32, 0x31, 0x30, 0x33, 0x2a, 0x01, 0x02,
	0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73,
	0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x44, 0x0a, 0x1e, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x15, 0x08, 0x02, 0x1a, 0x0f, 0x58, 0x2d, 0x43, 0x48, 0x2d, 0x41, 0x75, 0x74, 0x68, 0x2d, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x20, 0x02, 0x0a, 0x22, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x19, 0x08, 0x02, 0x1a, 0x13, 0x58, 0x2d, 0x43, 0x48, 0x2d, 0x41, 0x75, 0x74, 0x68, 0x2d, 0x41,
	0x50, 0x49, 0x2d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x02, 0x62, 0x16, 0x0a, 0x09, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x00, 0x0a, 0x09, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x00, 0x72, 0x35, 0x0a, 0x16, 0x4d, 0x6f, 0x72, 0x65, 0x20, 0x61, 0x62, 0x6f, 0x75, 0x74,
	0x20, 0x4b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x20, 0x41, 0x50, 0x49, 0x73, 0x12, 0x1b, 0x68, 0x74,
	0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x64, 0x6f, 0x63, 0x73, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69,
	0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescOnce sync.Once
	file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescData = file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDesc
)

func file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescGZIP() []byte {
	file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescOnce.Do(func() {
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescData = protoimpl.X.CompressGZIP(file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescData)
	})
	return file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDescData
}

var file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_goTypes = []interface{}{
	(*LoginAWSRequest)(nil),                    // 0: kentik.cloud_gw.v202103alpha1.LoginAWSRequest
	(*LoginAWSResponse)(nil),                   // 1: kentik.cloud_gw.v202103alpha1.LoginAWSResponse
	(*ProxyAWSRequest)(nil),                    // 2: kentik.cloud_gw.v202103alpha1.ProxyAWSRequest
	(*ProxyAWSResponse)(nil),                   // 3: kentik.cloud_gw.v202103alpha1.ProxyAWSResponse
	(*GetAWSRequest)(nil),                      // 4: kentik.cloud_gw.v202103alpha1.GetAWSRequest
	(*GetAWSResponse)(nil),                     // 5: kentik.cloud_gw.v202103alpha1.GetAWSResponse
	(*SendAWSRequest)(nil),                     // 6: kentik.cloud_gw.v202103alpha1.SendAWSRequest
	(*SendAWSResponse)(nil),                    // 7: kentik.cloud_gw.v202103alpha1.SendAWSResponse
	(*Header)(nil),                             // 8: kentik.cloud_gw.v202103alpha1.Header
	(*http_over_grpc.HTTPOverGRPCRequest)(nil), // 9: grpc.http_over_grpc.HTTPOverGRPCRequest
	(*http_over_grpc.HTTPOverGRPCReply)(nil),   // 10: grpc.http_over_grpc.HTTPOverGRPCReply
}
var file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_depIdxs = []int32{
	9,  // 0: kentik.cloud_gw.v202103alpha1.ProxyAWSRequest.http_over_grpc_request:type_name -> grpc.http_over_grpc.HTTPOverGRPCRequest
	10, // 1: kentik.cloud_gw.v202103alpha1.ProxyAWSResponse.http_over_grpc_reply:type_name -> grpc.http_over_grpc.HTTPOverGRPCReply
	2,  // 2: kentik.cloud_gw.v202103alpha1.GetAWSResponse.proxy_aws_request:type_name -> kentik.cloud_gw.v202103alpha1.ProxyAWSRequest
	2,  // 3: kentik.cloud_gw.v202103alpha1.SendAWSRequest.proxy_aws_request:type_name -> kentik.cloud_gw.v202103alpha1.ProxyAWSRequest
	2,  // 4: kentik.cloud_gw.v202103alpha1.AWSGWInternalService.ProxyAWS:input_type -> kentik.cloud_gw.v202103alpha1.ProxyAWSRequest
	0,  // 5: kentik.cloud_gw.v202103alpha1.AWSGWExternalService.LoginAWS:input_type -> kentik.cloud_gw.v202103alpha1.LoginAWSRequest
	4,  // 6: kentik.cloud_gw.v202103alpha1.AWSGWExternalService.GetAWS:input_type -> kentik.cloud_gw.v202103alpha1.GetAWSRequest
	6,  // 7: kentik.cloud_gw.v202103alpha1.AWSGWExternalService.SendAWS:input_type -> kentik.cloud_gw.v202103alpha1.SendAWSRequest
	3,  // 8: kentik.cloud_gw.v202103alpha1.AWSGWInternalService.ProxyAWS:output_type -> kentik.cloud_gw.v202103alpha1.ProxyAWSResponse
	1,  // 9: kentik.cloud_gw.v202103alpha1.AWSGWExternalService.LoginAWS:output_type -> kentik.cloud_gw.v202103alpha1.LoginAWSResponse
	5,  // 10: kentik.cloud_gw.v202103alpha1.AWSGWExternalService.GetAWS:output_type -> kentik.cloud_gw.v202103alpha1.GetAWSResponse
	7,  // 11: kentik.cloud_gw.v202103alpha1.AWSGWExternalService.SendAWS:output_type -> kentik.cloud_gw.v202103alpha1.SendAWSResponse
	8,  // [8:12] is the sub-list for method output_type
	4,  // [4:8] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_init() }
func file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_init() {
	if File_kentik_cloud_gw_v202103alpha1_cloud_gw_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginAWSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginAWSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyAWSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyAWSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAWSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAWSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendAWSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendAWSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_goTypes,
		DependencyIndexes: file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_depIdxs,
		MessageInfos:      file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_msgTypes,
	}.Build()
	File_kentik_cloud_gw_v202103alpha1_cloud_gw_proto = out.File
	file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_rawDesc = nil
	file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_goTypes = nil
	file_kentik_cloud_gw_v202103alpha1_cloud_gw_proto_depIdxs = nil
}
