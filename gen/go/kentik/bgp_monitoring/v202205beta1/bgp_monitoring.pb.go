// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: kentik/bgp_monitoring/v202205beta1/bgp_monitoring.proto

package bgp_monitoring

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	v2023031 "github.com/kentik/api-schema-public/gen/go/kentik/core/v202303"
	v202303 "github.com/kentik/api-schema-public/gen/go/kentik/net/v202303"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BgpMonitorStatus int32

const (
	BgpMonitorStatus_BGP_MONITOR_STATUS_UNSPECIFIED BgpMonitorStatus = 0 // Invalid value.
	BgpMonitorStatus_BGP_MONITOR_STATUS_ACTIVE      BgpMonitorStatus = 1 // Monitor is active.
	BgpMonitorStatus_BGP_MONITOR_STATUS_PAUSED      BgpMonitorStatus = 2 // Monitor is paused.
	BgpMonitorStatus_BGP_MONITOR_STATUS_DELETED     BgpMonitorStatus = 3 // Monitor is deleted. Not settable via SetMonitorStatus.
)

// Enum value maps for BgpMonitorStatus.
var (
	BgpMonitorStatus_name = map[int32]string{
		0: "BGP_MONITOR_STATUS_UNSPECIFIED",
		1: "BGP_MONITOR_STATUS_ACTIVE",
		2: "BGP_MONITOR_STATUS_PAUSED",
		3: "BGP_MONITOR_STATUS_DELETED",
	}
	BgpMonitorStatus_value = map[string]int32{
		"BGP_MONITOR_STATUS_UNSPECIFIED": 0,
		"BGP_MONITOR_STATUS_ACTIVE":      1,
		"BGP_MONITOR_STATUS_PAUSED":      2,
		"BGP_MONITOR_STATUS_DELETED":     3,
	}
)

func (x BgpMonitorStatus) Enum() *BgpMonitorStatus {
	p := new(BgpMonitorStatus)
	*p = x
	return p
}

func (x BgpMonitorStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BgpMonitorStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_enumTypes[0].Descriptor()
}

func (BgpMonitorStatus) Type() protoreflect.EnumType {
	return &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_enumTypes[0]
}

func (x BgpMonitorStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BgpMonitorStatus.Descriptor instead.
func (BgpMonitorStatus) EnumDescriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{0}
}

type BgpMetricType int32

const (
	BgpMetricType_BGP_METRIC_TYPE_UNSPECIFIED  BgpMetricType = 0 // Invalid value.
	BgpMetricType_BGP_METRIC_TYPE_REACHABILITY BgpMetricType = 1
	BgpMetricType_BGP_METRIC_TYPE_PATH_CHANGES BgpMetricType = 2
)

// Enum value maps for BgpMetricType.
var (
	BgpMetricType_name = map[int32]string{
		0: "BGP_METRIC_TYPE_UNSPECIFIED",
		1: "BGP_METRIC_TYPE_REACHABILITY",
		2: "BGP_METRIC_TYPE_PATH_CHANGES",
	}
	BgpMetricType_value = map[string]int32{
		"BGP_METRIC_TYPE_UNSPECIFIED":  0,
		"BGP_METRIC_TYPE_REACHABILITY": 1,
		"BGP_METRIC_TYPE_PATH_CHANGES": 2,
	}
)

func (x BgpMetricType) Enum() *BgpMetricType {
	p := new(BgpMetricType)
	*p = x
	return p
}

func (x BgpMetricType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BgpMetricType) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_enumTypes[1].Descriptor()
}

func (BgpMetricType) Type() protoreflect.EnumType {
	return &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_enumTypes[1]
}

func (x BgpMetricType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BgpMetricType.Descriptor instead.
func (BgpMetricType) EnumDescriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{1}
}

type Nlri struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Afi   v202303.Afi            `protobuf:"varint,1,opt,name=afi,proto3,enum=kentik.net.v202303.Afi" json:"afi,omitempty"`
	Safi  v202303.Safi           `protobuf:"varint,2,opt,name=safi,proto3,enum=kentik.net.v202303.Safi" json:"safi,omitempty"`
	// Types that are valid to be assigned to Type:
	//
	//	*Nlri_Prefix
	Type          isNlri_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Nlri) Reset() {
	*x = Nlri{}
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Nlri) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nlri) ProtoMessage() {}

func (x *Nlri) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nlri.ProtoReflect.Descriptor instead.
func (*Nlri) Descriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{0}
}

func (x *Nlri) GetAfi() v202303.Afi {
	if x != nil {
		return x.Afi
	}
	return v202303.Afi(0)
}

func (x *Nlri) GetSafi() v202303.Safi {
	if x != nil {
		return x.Safi
	}
	return v202303.Safi(0)
}

func (x *Nlri) GetType() isNlri_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Nlri) GetPrefix() string {
	if x != nil {
		if x, ok := x.Type.(*Nlri_Prefix); ok {
			return x.Prefix
		}
	}
	return ""
}

type isNlri_Type interface {
	isNlri_Type()
}

type Nlri_Prefix struct {
	Prefix string `protobuf:"bytes,3,opt,name=prefix,proto3,oneof"`
}

func (*Nlri_Prefix) isNlri_Type() {}

type BgpHealthSettings struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	ReachabilityWarning  float32                `protobuf:"fixed32,1,opt,name=reachability_warning,json=reachabilityWarning,proto3" json:"reachability_warning,omitempty"`
	ReachabilityCritical float32                `protobuf:"fixed32,2,opt,name=reachability_critical,json=reachabilityCritical,proto3" json:"reachability_critical,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *BgpHealthSettings) Reset() {
	*x = BgpHealthSettings{}
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpHealthSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpHealthSettings) ProtoMessage() {}

func (x *BgpHealthSettings) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpHealthSettings.ProtoReflect.Descriptor instead.
func (*BgpHealthSettings) Descriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{1}
}

func (x *BgpHealthSettings) GetReachabilityWarning() float32 {
	if x != nil {
		return x.ReachabilityWarning
	}
	return 0
}

func (x *BgpHealthSettings) GetReachabilityCritical() float32 {
	if x != nil {
		return x.ReachabilityCritical
	}
	return 0
}

type BgpMonitorSettings struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	AllowedAsns            []uint32               `protobuf:"varint,1,rep,packed,name=allowed_asns,json=allowedAsns,proto3" json:"allowed_asns,omitempty"`
	Targets                []*Nlri                `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty"`
	CheckRpki              bool                   `protobuf:"varint,3,opt,name=check_rpki,json=checkRpki,proto3" json:"check_rpki,omitempty"`
	IncludeCoveredPrefixes bool                   `protobuf:"varint,4,opt,name=include_covered_prefixes,json=includeCoveredPrefixes,proto3" json:"include_covered_prefixes,omitempty"`
	HealthSettings         *BgpHealthSettings     `protobuf:"bytes,5,opt,name=health_settings,json=healthSettings,proto3" json:"health_settings,omitempty"`
	NotificationChannels   []string               `protobuf:"bytes,6,rep,name=notification_channels,json=notificationChannels,proto3" json:"notification_channels,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *BgpMonitorSettings) Reset() {
	*x = BgpMonitorSettings{}
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpMonitorSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpMonitorSettings) ProtoMessage() {}

func (x *BgpMonitorSettings) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpMonitorSettings.ProtoReflect.Descriptor instead.
func (*BgpMonitorSettings) Descriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{2}
}

func (x *BgpMonitorSettings) GetAllowedAsns() []uint32 {
	if x != nil {
		return x.AllowedAsns
	}
	return nil
}

func (x *BgpMonitorSettings) GetTargets() []*Nlri {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *BgpMonitorSettings) GetCheckRpki() bool {
	if x != nil {
		return x.CheckRpki
	}
	return false
}

func (x *BgpMonitorSettings) GetIncludeCoveredPrefixes() bool {
	if x != nil {
		return x.IncludeCoveredPrefixes
	}
	return false
}

func (x *BgpMonitorSettings) GetHealthSettings() *BgpHealthSettings {
	if x != nil {
		return x.HealthSettings
	}
	return nil
}

func (x *BgpMonitorSettings) GetNotificationChannels() []string {
	if x != nil {
		return x.NotificationChannels
	}
	return nil
}

type BgpMonitor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status        BgpMonitorStatus       `protobuf:"varint,3,opt,name=status,proto3,enum=kentik.bgp_monitoring.v202205beta1.BgpMonitorStatus" json:"status,omitempty"`
	Settings      *BgpMonitorSettings    `protobuf:"bytes,4,opt,name=settings,proto3" json:"settings,omitempty"`
	Cdate         *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=cdate,proto3" json:"cdate,omitempty"`
	Edate         *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=edate,proto3" json:"edate,omitempty"`
	CreatedBy     *v2023031.UserInfo     `protobuf:"bytes,7,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	LastUpdatedBy *v2023031.UserInfo     `protobuf:"bytes,8,opt,name=last_updated_by,json=lastUpdatedBy,proto3" json:"last_updated_by,omitempty"`
	Labels        []string               `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpMonitor) Reset() {
	*x = BgpMonitor{}
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpMonitor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpMonitor) ProtoMessage() {}

func (x *BgpMonitor) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpMonitor.ProtoReflect.Descriptor instead.
func (*BgpMonitor) Descriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{3}
}

func (x *BgpMonitor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BgpMonitor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BgpMonitor) GetStatus() BgpMonitorStatus {
	if x != nil {
		return x.Status
	}
	return BgpMonitorStatus_BGP_MONITOR_STATUS_UNSPECIFIED
}

func (x *BgpMonitor) GetSettings() *BgpMonitorSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *BgpMonitor) GetCdate() *timestamppb.Timestamp {
	if x != nil {
		return x.Cdate
	}
	return nil
}

func (x *BgpMonitor) GetEdate() *timestamppb.Timestamp {
	if x != nil {
		return x.Edate
	}
	return nil
}

func (x *BgpMonitor) GetCreatedBy() *v2023031.UserInfo {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *BgpMonitor) GetLastUpdatedBy() *v2023031.UserInfo {
	if x != nil {
		return x.LastUpdatedBy
	}
	return nil
}

func (x *BgpMonitor) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type RouteInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nlri          *Nlri                  `protobuf:"bytes,1,opt,name=nlri,proto3" json:"nlri,omitempty"`
	OriginAsn     uint32                 `protobuf:"varint,2,opt,name=origin_asn,json=originAsn,proto3" json:"origin_asn,omitempty"`
	AsPath        []string               `protobuf:"bytes,3,rep,name=as_path,json=asPath,proto3" json:"as_path,omitempty"`
	VantagePoint  *v202303.VantagePoint  `protobuf:"bytes,4,opt,name=vantage_point,json=vantagePoint,proto3" json:"vantage_point,omitempty"`
	RpkiStatus    v202303.RpkiStatus     `protobuf:"varint,5,opt,name=rpki_status,json=rpkiStatus,proto3,enum=kentik.net.v202303.RpkiStatus" json:"rpki_status,omitempty"`
	Nexthop       string                 `protobuf:"bytes,6,opt,name=nexthop,proto3" json:"nexthop,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RouteInfo) Reset() {
	*x = RouteInfo{}
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteInfo) ProtoMessage() {}

func (x *RouteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteInfo.ProtoReflect.Descriptor instead.
func (*RouteInfo) Descriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{4}
}

func (x *RouteInfo) GetNlri() *Nlri {
	if x != nil {
		return x.Nlri
	}
	return nil
}

func (x *RouteInfo) GetOriginAsn() uint32 {
	if x != nil {
		return x.OriginAsn
	}
	return 0
}

func (x *RouteInfo) GetAsPath() []string {
	if x != nil {
		return x.AsPath
	}
	return nil
}

func (x *RouteInfo) GetVantagePoint() *v202303.VantagePoint {
	if x != nil {
		return x.VantagePoint
	}
	return nil
}

func (x *RouteInfo) GetRpkiStatus() v202303.RpkiStatus {
	if x != nil {
		return x.RpkiStatus
	}
	return v202303.RpkiStatus(0)
}

func (x *RouteInfo) GetNexthop() string {
	if x != nil {
		return x.Nexthop
	}
	return ""
}

type BgpMetric struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Nlri      *Nlri                  `protobuf:"bytes,2,opt,name=nlri,proto3" json:"nlri,omitempty"`
	// Types that are valid to be assigned to Type:
	//
	//	*BgpMetric_Reachability
	//	*BgpMetric_PathChanges
	Type          isBgpMetric_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BgpMetric) Reset() {
	*x = BgpMetric{}
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BgpMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BgpMetric) ProtoMessage() {}

func (x *BgpMetric) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BgpMetric.ProtoReflect.Descriptor instead.
func (*BgpMetric) Descriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{5}
}

func (x *BgpMetric) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *BgpMetric) GetNlri() *Nlri {
	if x != nil {
		return x.Nlri
	}
	return nil
}

func (x *BgpMetric) GetType() isBgpMetric_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *BgpMetric) GetReachability() float32 {
	if x != nil {
		if x, ok := x.Type.(*BgpMetric_Reachability); ok {
			return x.Reachability
		}
	}
	return 0
}

func (x *BgpMetric) GetPathChanges() uint32 {
	if x != nil {
		if x, ok := x.Type.(*BgpMetric_PathChanges); ok {
			return x.PathChanges
		}
	}
	return 0
}

type isBgpMetric_Type interface {
	isBgpMetric_Type()
}

type BgpMetric_Reachability struct {
	// percentage of vantage points reporting the prefix reachable
	Reachability float32 `protobuf:"fixed32,3,opt,name=reachability,proto3,oneof"`
}

type BgpMetric_PathChanges struct {
	// number of AS path changes for the prefix across all vantage points in the queried time period
	PathChanges uint32 `protobuf:"varint,5,opt,name=path_changes,json=pathChanges,proto3,oneof"`
}

func (*BgpMetric_Reachability) isBgpMetric_Type() {}

func (*BgpMetric_PathChanges) isBgpMetric_Type() {}

// Admin Service
type ListMonitorsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMonitorsRequest) Reset() {
	*x = ListMonitorsRequest{}
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMonitorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMonitorsRequest) ProtoMessage() {}

func (x *ListMonitorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMonitorsRequest.ProtoReflect.Descriptor instead.
func (*ListMonitorsRequest) Descriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{6}
}

type ListMonitorsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Monitors      []*BgpMonitor          `protobuf:"bytes,1,rep,name=monitors,proto3" json:"monitors,omitempty"`
	InvalidCount  uint32                 `protobuf:"varint,2,opt,name=invalid_count,json=invalidCount,proto3" json:"invalid_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMonitorsResponse) Reset() {
	*x = ListMonitorsResponse{}
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMonitorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMonitorsResponse) ProtoMessage() {}

func (x *ListMonitorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMonitorsResponse.ProtoReflect.Descriptor instead.
func (*ListMonitorsResponse) Descriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{7}
}

func (x *ListMonitorsResponse) GetMonitors() []*BgpMonitor {
	if x != nil {
		return x.Monitors
	}
	return nil
}

func (x *ListMonitorsResponse) GetInvalidCount() uint32 {
	if x != nil {
		return x.InvalidCount
	}
	return 0
}

type CreateMonitorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Monitor       *BgpMonitor            `protobuf:"bytes,1,opt,name=monitor,proto3" json:"monitor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMonitorRequest) Reset() {
	*x = CreateMonitorRequest{}
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMonitorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMonitorRequest) ProtoMessage() {}

func (x *CreateMonitorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMonitorRequest.ProtoReflect.Descriptor instead.
func (*CreateMonitorRequest) Descriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{8}
}

func (x *CreateMonitorRequest) GetMonitor() *BgpMonitor {
	if x != nil {
		return x.Monitor
	}
	return nil
}

type CreateMonitorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Monitor       *BgpMonitor            `protobuf:"bytes,1,opt,name=monitor,proto3" json:"monitor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMonitorResponse) Reset() {
	*x = CreateMonitorResponse{}
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMonitorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMonitorResponse) ProtoMessage() {}

func (x *CreateMonitorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMonitorResponse.ProtoReflect.Descriptor instead.
func (*CreateMonitorResponse) Descriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{9}
}

func (x *CreateMonitorResponse) GetMonitor() *BgpMonitor {
	if x != nil {
		return x.Monitor
	}
	return nil
}

type GetMonitorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMonitorRequest) Reset() {
	*x = GetMonitorRequest{}
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMonitorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonitorRequest) ProtoMessage() {}

func (x *GetMonitorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonitorRequest.ProtoReflect.Descriptor instead.
func (*GetMonitorRequest) Descriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{10}
}

func (x *GetMonitorRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetMonitorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Monitor       *BgpMonitor            `protobuf:"bytes,1,opt,name=monitor,proto3" json:"monitor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMonitorResponse) Reset() {
	*x = GetMonitorResponse{}
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMonitorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonitorResponse) ProtoMessage() {}

func (x *GetMonitorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonitorResponse.ProtoReflect.Descriptor instead.
func (*GetMonitorResponse) Descriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{11}
}

func (x *GetMonitorResponse) GetMonitor() *BgpMonitor {
	if x != nil {
		return x.Monitor
	}
	return nil
}

type UpdateMonitorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Monitor       *BgpMonitor            `protobuf:"bytes,1,opt,name=monitor,proto3" json:"monitor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMonitorRequest) Reset() {
	*x = UpdateMonitorRequest{}
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMonitorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMonitorRequest) ProtoMessage() {}

func (x *UpdateMonitorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMonitorRequest.ProtoReflect.Descriptor instead.
func (*UpdateMonitorRequest) Descriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateMonitorRequest) GetMonitor() *BgpMonitor {
	if x != nil {
		return x.Monitor
	}
	return nil
}

type UpdateMonitorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Monitor       *BgpMonitor            `protobuf:"bytes,1,opt,name=monitor,proto3" json:"monitor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMonitorResponse) Reset() {
	*x = UpdateMonitorResponse{}
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMonitorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMonitorResponse) ProtoMessage() {}

func (x *UpdateMonitorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMonitorResponse.ProtoReflect.Descriptor instead.
func (*UpdateMonitorResponse) Descriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateMonitorResponse) GetMonitor() *BgpMonitor {
	if x != nil {
		return x.Monitor
	}
	return nil
}

type DeleteMonitorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMonitorRequest) Reset() {
	*x = DeleteMonitorRequest{}
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMonitorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMonitorRequest) ProtoMessage() {}

func (x *DeleteMonitorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMonitorRequest.ProtoReflect.Descriptor instead.
func (*DeleteMonitorRequest) Descriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteMonitorRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteMonitorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMonitorResponse) Reset() {
	*x = DeleteMonitorResponse{}
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMonitorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMonitorResponse) ProtoMessage() {}

func (x *DeleteMonitorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMonitorResponse.ProtoReflect.Descriptor instead.
func (*DeleteMonitorResponse) Descriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{15}
}

type SetMonitorStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        BgpMonitorStatus       `protobuf:"varint,2,opt,name=status,proto3,enum=kentik.bgp_monitoring.v202205beta1.BgpMonitorStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetMonitorStatusRequest) Reset() {
	*x = SetMonitorStatusRequest{}
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetMonitorStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMonitorStatusRequest) ProtoMessage() {}

func (x *SetMonitorStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMonitorStatusRequest.ProtoReflect.Descriptor instead.
func (*SetMonitorStatusRequest) Descriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{16}
}

func (x *SetMonitorStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetMonitorStatusRequest) GetStatus() BgpMonitorStatus {
	if x != nil {
		return x.Status
	}
	return BgpMonitorStatus_BGP_MONITOR_STATUS_UNSPECIFIED
}

type SetMonitorStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetMonitorStatusResponse) Reset() {
	*x = SetMonitorStatusResponse{}
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetMonitorStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMonitorStatusResponse) ProtoMessage() {}

func (x *SetMonitorStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMonitorStatusResponse.ProtoReflect.Descriptor instead.
func (*SetMonitorStatusResponse) Descriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{17}
}

type GetMetricsForTargetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Start of the time interval for this query.
	StartTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// End of the time interval for this query.
	EndTime        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Target         *Nlri                  `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	IncludeCovered bool                   `protobuf:"varint,4,opt,name=include_covered,json=includeCovered,proto3" json:"include_covered,omitempty"`
	Metrics        []BgpMetricType        `protobuf:"varint,5,rep,packed,name=metrics,proto3,enum=kentik.bgp_monitoring.v202205beta1.BgpMetricType" json:"metrics,omitempty"` // list of metric types to return
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetMetricsForTargetRequest) Reset() {
	*x = GetMetricsForTargetRequest{}
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetricsForTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricsForTargetRequest) ProtoMessage() {}

func (x *GetMetricsForTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricsForTargetRequest.ProtoReflect.Descriptor instead.
func (*GetMetricsForTargetRequest) Descriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{18}
}

func (x *GetMetricsForTargetRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetMetricsForTargetRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetMetricsForTargetRequest) GetTarget() *Nlri {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *GetMetricsForTargetRequest) GetIncludeCovered() bool {
	if x != nil {
		return x.IncludeCovered
	}
	return false
}

func (x *GetMetricsForTargetRequest) GetMetrics() []BgpMetricType {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type GetMetricsForTargetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metrics       []*BgpMetric           `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetricsForTargetResponse) Reset() {
	*x = GetMetricsForTargetResponse{}
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetricsForTargetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetricsForTargetResponse) ProtoMessage() {}

func (x *GetMetricsForTargetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetricsForTargetResponse.ProtoReflect.Descriptor instead.
func (*GetMetricsForTargetResponse) Descriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{19}
}

func (x *GetMetricsForTargetResponse) GetMetrics() []*BgpMetric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type GetRoutesForTargetRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Time           *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"` // reference time for route information snapshot
	Target         *Nlri                  `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	IncludeCovered bool                   `protobuf:"varint,4,opt,name=include_covered,json=includeCovered,proto3" json:"include_covered,omitempty"`
	CheckRpki      bool                   `protobuf:"varint,5,opt,name=check_rpki,json=checkRpki,proto3" json:"check_rpki,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetRoutesForTargetRequest) Reset() {
	*x = GetRoutesForTargetRequest{}
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoutesForTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoutesForTargetRequest) ProtoMessage() {}

func (x *GetRoutesForTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoutesForTargetRequest.ProtoReflect.Descriptor instead.
func (*GetRoutesForTargetRequest) Descriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{20}
}

func (x *GetRoutesForTargetRequest) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *GetRoutesForTargetRequest) GetTarget() *Nlri {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *GetRoutesForTargetRequest) GetIncludeCovered() bool {
	if x != nil {
		return x.IncludeCovered
	}
	return false
}

func (x *GetRoutesForTargetRequest) GetCheckRpki() bool {
	if x != nil {
		return x.CheckRpki
	}
	return false
}

type GetRoutesForTargetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Routes        []*RouteInfo           `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	AsNames       map[uint32]string      `protobuf:"bytes,5,rep,name=as_names,json=asNames,proto3" json:"as_names,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // lookaside map of AS number -> AS name mappings
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRoutesForTargetResponse) Reset() {
	*x = GetRoutesForTargetResponse{}
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoutesForTargetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoutesForTargetResponse) ProtoMessage() {}

func (x *GetRoutesForTargetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoutesForTargetResponse.ProtoReflect.Descriptor instead.
func (*GetRoutesForTargetResponse) Descriptor() ([]byte, []int) {
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP(), []int{21}
}

func (x *GetRoutesForTargetResponse) GetRoutes() []*RouteInfo {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *GetRoutesForTargetResponse) GetAsNames() map[uint32]string {
	if x != nil {
		return x.AsNames
	}
	return nil
}

var File_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto protoreflect.FileDescriptor

const file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDesc = "" +
	"\n" +
	"7kentik/bgp_monitoring/v202205beta1/bgp_monitoring.proto\x12\"kentik.bgp_monitoring.v202205beta1\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a%kentik/core/v202303/annotations.proto\x1a#kentik/core/v202303/user_info.proto\x1a\"kentik/net/v202303/bgp_types.proto\"\x81\x01\n" +
	"\x04Nlri\x12)\n" +
	"\x03afi\x18\x01 \x01(\x0e2\x17.kentik.net.v202303.AfiR\x03afi\x12,\n" +
	"\x04safi\x18\x02 \x01(\x0e2\x18.kentik.net.v202303.SafiR\x04safi\x12\x18\n" +
	"\x06prefix\x18\x03 \x01(\tH\x00R\x06prefixB\x06\n" +
	"\x04type\"{\n" +
	"\x11BgpHealthSettings\x121\n" +
	"\x14reachability_warning\x18\x01 \x01(\x02R\x13reachabilityWarning\x123\n" +
	"\x15reachability_critical\x18\x02 \x01(\x02R\x14reachabilityCritical\"\xe9\x02\n" +
	"\x12BgpMonitorSettings\x12!\n" +
	"\fallowed_asns\x18\x01 \x03(\rR\vallowedAsns\x12B\n" +
	"\atargets\x18\x02 \x03(\v2(.kentik.bgp_monitoring.v202205beta1.NlriR\atargets\x12\x1d\n" +
	"\n" +
	"check_rpki\x18\x03 \x01(\bR\tcheckRpki\x128\n" +
	"\x18include_covered_prefixes\x18\x04 \x01(\bR\x16includeCoveredPrefixes\x12^\n" +
	"\x0fhealth_settings\x18\x05 \x01(\v25.kentik.bgp_monitoring.v202205beta1.BgpHealthSettingsR\x0ehealthSettings\x123\n" +
	"\x15notification_channels\x18\x06 \x03(\tR\x14notificationChannels\"\xd3\x03\n" +
	"\n" +
	"BgpMonitor\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12L\n" +
	"\x06status\x18\x03 \x01(\x0e24.kentik.bgp_monitoring.v202205beta1.BgpMonitorStatusR\x06status\x12R\n" +
	"\bsettings\x18\x04 \x01(\v26.kentik.bgp_monitoring.v202205beta1.BgpMonitorSettingsR\bsettings\x120\n" +
	"\x05cdate\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x05cdate\x120\n" +
	"\x05edate\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x05edate\x12<\n" +
	"\n" +
	"created_by\x18\a \x01(\v2\x1d.kentik.core.v202303.UserInfoR\tcreatedBy\x12E\n" +
	"\x0flast_updated_by\x18\b \x01(\v2\x1d.kentik.core.v202303.UserInfoR\rlastUpdatedBy\x12\x16\n" +
	"\x06labels\x18\t \x03(\tR\x06labels\"\xce\x03\n" +
	"\tRouteInfo\x12<\n" +
	"\x04nlri\x18\x01 \x01(\v2(.kentik.bgp_monitoring.v202205beta1.NlriR\x04nlri\x12U\n" +
	"\n" +
	"origin_asn\x18\x02 \x01(\rB6\x92A321The autonomous system number originating the NLRIR\toriginAsn\x12P\n" +
	"\aas_path\x18\x03 \x03(\tB7\x92A422AS path observed at the vantage point for the NLRIR\x06asPath\x12\x7f\n" +
	"\rvantage_point\x18\x04 \x01(\v2 .kentik.net.v202303.VantagePointB8\x92A523Name of the vantage point providing the observationR\fvantagePoint\x12?\n" +
	"\vrpki_status\x18\x05 \x01(\x0e2\x1e.kentik.net.v202303.RpkiStatusR\n" +
	"rpkiStatus\x12\x18\n" +
	"\anexthop\x18\x06 \x01(\tR\anexthop\"\xd6\x01\n" +
	"\tBgpMetric\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12<\n" +
	"\x04nlri\x18\x02 \x01(\v2(.kentik.bgp_monitoring.v202205beta1.NlriR\x04nlri\x12$\n" +
	"\freachability\x18\x03 \x01(\x02H\x00R\freachability\x12#\n" +
	"\fpath_changes\x18\x05 \x01(\rH\x00R\vpathChangesB\x06\n" +
	"\x04type\"\x15\n" +
	"\x13ListMonitorsRequest\"\x87\x01\n" +
	"\x14ListMonitorsResponse\x12J\n" +
	"\bmonitors\x18\x01 \x03(\v2..kentik.bgp_monitoring.v202205beta1.BgpMonitorR\bmonitors\x12#\n" +
	"\rinvalid_count\x18\x02 \x01(\rR\finvalidCount\"`\n" +
	"\x14CreateMonitorRequest\x12H\n" +
	"\amonitor\x18\x01 \x01(\v2..kentik.bgp_monitoring.v202205beta1.BgpMonitorR\amonitor\"a\n" +
	"\x15CreateMonitorResponse\x12H\n" +
	"\amonitor\x18\x01 \x01(\v2..kentik.bgp_monitoring.v202205beta1.BgpMonitorR\amonitor\"#\n" +
	"\x11GetMonitorRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"^\n" +
	"\x12GetMonitorResponse\x12H\n" +
	"\amonitor\x18\x01 \x01(\v2..kentik.bgp_monitoring.v202205beta1.BgpMonitorR\amonitor\"`\n" +
	"\x14UpdateMonitorRequest\x12H\n" +
	"\amonitor\x18\x01 \x01(\v2..kentik.bgp_monitoring.v202205beta1.BgpMonitorR\amonitor\"a\n" +
	"\x15UpdateMonitorResponse\x12H\n" +
	"\amonitor\x18\x01 \x01(\v2..kentik.bgp_monitoring.v202205beta1.BgpMonitorR\amonitor\"&\n" +
	"\x14DeleteMonitorRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x17\n" +
	"\x15DeleteMonitorResponse\"w\n" +
	"\x17SetMonitorStatusRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12L\n" +
	"\x06status\x18\x02 \x01(\x0e24.kentik.bgp_monitoring.v202205beta1.BgpMonitorStatusR\x06status\"\x1a\n" +
	"\x18SetMonitorStatusResponse\"\xc6\x02\n" +
	"\x1aGetMetricsForTargetRequest\x129\n" +
	"\n" +
	"start_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12@\n" +
	"\x06target\x18\x03 \x01(\v2(.kentik.bgp_monitoring.v202205beta1.NlriR\x06target\x12'\n" +
	"\x0finclude_covered\x18\x04 \x01(\bR\x0eincludeCovered\x12K\n" +
	"\ametrics\x18\x05 \x03(\x0e21.kentik.bgp_monitoring.v202205beta1.BgpMetricTypeR\ametrics\"f\n" +
	"\x1bGetMetricsForTargetResponse\x12G\n" +
	"\ametrics\x18\x01 \x03(\v2-.kentik.bgp_monitoring.v202205beta1.BgpMetricR\ametrics\"\xd5\x01\n" +
	"\x19GetRoutesForTargetRequest\x12.\n" +
	"\x04time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x12@\n" +
	"\x06target\x18\x02 \x01(\v2(.kentik.bgp_monitoring.v202205beta1.NlriR\x06target\x12'\n" +
	"\x0finclude_covered\x18\x04 \x01(\bR\x0eincludeCovered\x12\x1d\n" +
	"\n" +
	"check_rpki\x18\x05 \x01(\bR\tcheckRpki\"\x87\x02\n" +
	"\x1aGetRoutesForTargetResponse\x12E\n" +
	"\x06routes\x18\x01 \x03(\v2-.kentik.bgp_monitoring.v202205beta1.RouteInfoR\x06routes\x12f\n" +
	"\bas_names\x18\x05 \x03(\v2K.kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetResponse.AsNamesEntryR\aasNames\x1a:\n" +
	"\fAsNamesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\x94\x01\n" +
	"\x10BgpMonitorStatus\x12\"\n" +
	"\x1eBGP_MONITOR_STATUS_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19BGP_MONITOR_STATUS_ACTIVE\x10\x01\x12\x1d\n" +
	"\x19BGP_MONITOR_STATUS_PAUSED\x10\x02\x12\x1e\n" +
	"\x1aBGP_MONITOR_STATUS_DELETED\x10\x03*t\n" +
	"\rBgpMetricType\x12\x1f\n" +
	"\x1bBGP_METRIC_TYPE_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cBGP_METRIC_TYPE_REACHABILITY\x10\x01\x12 \n" +
	"\x1cBGP_METRIC_TYPE_PATH_CHANGES\x10\x022\xcc\x0e\n" +
	"\x19BgpMonitoringAdminService\x12\x90\x02\n" +
	"\fListMonitors\x127.kentik.bgp_monitoring.v202205beta1.ListMonitorsRequest\x1a8.kentik.bgp_monitoring.v202205beta1.ListMonitorsResponse\"\x8c\x01\x92AC\x12\x12List BGP Monitors.\x1a\x1fReturns a list of BGP monitors.*\fMonitorsList\xf2\xd7\x02\x15admin.synthetics:read\x82\xd3\xe4\x93\x02'\x12%/bgp_monitoring/v202205beta1/monitors\x12\xd0\x01\n" +
	"\rCreateMonitor\x128.kentik.bgp_monitoring.v202205beta1.CreateMonitorRequest\x1a9.kentik.bgp_monitoring.v202205beta1.CreateMonitorResponse\"J\xf2\xd7\x02\x16admin.synthetics:write\x82\xd3\xe4\x93\x02*:\x01*\"%/bgp_monitoring/v202205beta1/monitors\x12\xaf\x02\n" +
	"\n" +
	"GetMonitor\x125.kentik.bgp_monitoring.v202205beta1.GetMonitorRequest\x1a6.kentik.bgp_monitoring.v202205beta1.GetMonitorResponse\"\xb1\x01\x92Ac\x12\x1eGet BGP Monitor configuration.\x1a5Return configuration of BGP monitor with specific ID.*\n" +
	"MonitorGet\xf2\xd7\x02\x15admin.synthetics:read\x82\xd3\xe4\x93\x02,\x12*/bgp_monitoring/v202205beta1/monitors/{id}\x12\xf2\x02\n" +
	"\rUpdateMonitor\x128.kentik.bgp_monitoring.v202205beta1.UpdateMonitorRequest\x1a9.kentik.bgp_monitoring.v202205beta1.UpdateMonitorResponse\"\xeb\x01\x92A\x90\x01\x12!Update BGP Monitor configuration.\x1a\\Update configuration of BGP monitor with specific ID. Returns updated monitor configuration.*\rMonitorUpdate\xf2\xd7\x02\x16admin.synthetics:write\x82\xd3\xe4\x93\x027:\x01*\x1a2/bgp_monitoring/v202205beta1/monitors/{monitor.id}\x12\xa6\x02\n" +
	"\rDeleteMonitor\x128.kentik.bgp_monitoring.v202205beta1.DeleteMonitorRequest\x1a9.kentik.bgp_monitoring.v202205beta1.DeleteMonitorResponse\"\x9f\x01\x92AP\x12\x13Delete BGP Monitor.\x1a*Delete BGP monitor with  with specific ID.*\rMonitorDelete\xf2\xd7\x02\x16admin.synthetics:write\x82\xd3\xe4\x93\x02,**/bgp_monitoring/v202205beta1/monitors/{id}\x12\xc8\x02\n" +
	"\x10SetMonitorStatus\x12;.kentik.bgp_monitoring.v202205beta1.SetMonitorStatusRequest\x1a<.kentik.bgp_monitoring.v202205beta1.SetMonitorStatusResponse\"\xb8\x01\x92A_\x12\x1aSet status of BGP monitor.\x1a/Set the status of BGP monitor with specific ID.*\x10SetMonitorStatus\xf2\xd7\x02\x16admin.synthetics:write\x82\xd3\xe4\x93\x026:\x01*\x1a1/bgp_monitoring/v202205beta1/monitors/{id}/status\x1a.\xcaA\x13grpc.api.kentik.com\xea\xd7\x02\x10admin.synthetics\x90\xd8\x02\x032\x9a\x06\n" +
	"\x18BgpMonitoringDataService\x12\xeb\x02\n" +
	"\x13GetMetricsForTarget\x12>.kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest\x1a?.kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetResponse\"\xd2\x01\x92A\x8c\x01\x12-Get metrics for a single BGP target (prefix).\x1aFRetrieve metric data for single BGP target (prefix) and time interval.*\x13GetMetricsForTarget\xf2\xd7\x02\x0fsynthetics:read\x82\xd3\xe4\x93\x02):\x01*\"$/bgp_monitoring/v202205beta1/metrics\x12\xe5\x02\n" +
	"\x12GetRoutesForTarget\x12=.kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetRequest\x1a>.kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetResponse\"\xcf\x01\x92A\x8a\x01\x12*Get routes for single BGP target (prefix).\x1aHRetrieve route information for signle BGP target (prefix) and timestamp.*\x12GetRoutesForTarget\xf2\xd7\x02\x0fsynthetics:read\x82\xd3\xe4\x93\x02(:\x01*\"#/bgp_monitoring/v202205beta1/routes\x1a(\xcaA\x13grpc.api.kentik.com\xea\xd7\x02\n" +
	"synthetics\x90\xd8\x02\x03B\xff\x03\x92A\x9d\x03\x12\xb6\x01\n" +
	"\x12BGP Monitoring API\x12K--- This API has been deprecated and will be removed in the near future ---\"E\n" +
	"\x16Kentik API Engineering\x12+https://github.com/kentik/api-schema-public2\fv202205beta1*\x01\x022\x10application/json:\x10application/jsonZD\n" +
	"\x1e\n" +
	"\x05email\x12\x15\b\x02\x1a\x0fX-CH-Auth-Email \x02\n" +
	"\"\n" +
	"\x05token\x12\x19\b\x02\x1a\x13X-CH-Auth-API-Token \x02b\x16\n" +
	"\t\n" +
	"\x05email\x12\x00\n" +
	"\t\n" +
	"\x05token\x12\x00r]\n" +
	"%General information about Kentik APIs\x124https://kb.kentik.com/v0/Ab09.htm#Ab09-APIs_OverviewZ\\github.com/kentik/api-schema-public/gen/go/kentik/bgp_monitoring/v202205beta1;bgp_monitoringb\x06proto3"

var (
	file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescOnce sync.Once
	file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescData []byte
)

func file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescGZIP() []byte {
	file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescOnce.Do(func() {
		file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDesc), len(file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDesc)))
	})
	return file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDescData
}

var file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_goTypes = []any{
	(BgpMonitorStatus)(0),               // 0: kentik.bgp_monitoring.v202205beta1.BgpMonitorStatus
	(BgpMetricType)(0),                  // 1: kentik.bgp_monitoring.v202205beta1.BgpMetricType
	(*Nlri)(nil),                        // 2: kentik.bgp_monitoring.v202205beta1.Nlri
	(*BgpHealthSettings)(nil),           // 3: kentik.bgp_monitoring.v202205beta1.BgpHealthSettings
	(*BgpMonitorSettings)(nil),          // 4: kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings
	(*BgpMonitor)(nil),                  // 5: kentik.bgp_monitoring.v202205beta1.BgpMonitor
	(*RouteInfo)(nil),                   // 6: kentik.bgp_monitoring.v202205beta1.RouteInfo
	(*BgpMetric)(nil),                   // 7: kentik.bgp_monitoring.v202205beta1.BgpMetric
	(*ListMonitorsRequest)(nil),         // 8: kentik.bgp_monitoring.v202205beta1.ListMonitorsRequest
	(*ListMonitorsResponse)(nil),        // 9: kentik.bgp_monitoring.v202205beta1.ListMonitorsResponse
	(*CreateMonitorRequest)(nil),        // 10: kentik.bgp_monitoring.v202205beta1.CreateMonitorRequest
	(*CreateMonitorResponse)(nil),       // 11: kentik.bgp_monitoring.v202205beta1.CreateMonitorResponse
	(*GetMonitorRequest)(nil),           // 12: kentik.bgp_monitoring.v202205beta1.GetMonitorRequest
	(*GetMonitorResponse)(nil),          // 13: kentik.bgp_monitoring.v202205beta1.GetMonitorResponse
	(*UpdateMonitorRequest)(nil),        // 14: kentik.bgp_monitoring.v202205beta1.UpdateMonitorRequest
	(*UpdateMonitorResponse)(nil),       // 15: kentik.bgp_monitoring.v202205beta1.UpdateMonitorResponse
	(*DeleteMonitorRequest)(nil),        // 16: kentik.bgp_monitoring.v202205beta1.DeleteMonitorRequest
	(*DeleteMonitorResponse)(nil),       // 17: kentik.bgp_monitoring.v202205beta1.DeleteMonitorResponse
	(*SetMonitorStatusRequest)(nil),     // 18: kentik.bgp_monitoring.v202205beta1.SetMonitorStatusRequest
	(*SetMonitorStatusResponse)(nil),    // 19: kentik.bgp_monitoring.v202205beta1.SetMonitorStatusResponse
	(*GetMetricsForTargetRequest)(nil),  // 20: kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest
	(*GetMetricsForTargetResponse)(nil), // 21: kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetResponse
	(*GetRoutesForTargetRequest)(nil),   // 22: kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetRequest
	(*GetRoutesForTargetResponse)(nil),  // 23: kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetResponse
	nil,                                 // 24: kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetResponse.AsNamesEntry
	(v202303.Afi)(0),                    // 25: kentik.net.v202303.Afi
	(v202303.Safi)(0),                   // 26: kentik.net.v202303.Safi
	(*timestamppb.Timestamp)(nil),       // 27: google.protobuf.Timestamp
	(*v2023031.UserInfo)(nil),           // 28: kentik.core.v202303.UserInfo
	(*v202303.VantagePoint)(nil),        // 29: kentik.net.v202303.VantagePoint
	(v202303.RpkiStatus)(0),             // 30: kentik.net.v202303.RpkiStatus
}
var file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_depIdxs = []int32{
	25, // 0: kentik.bgp_monitoring.v202205beta1.Nlri.afi:type_name -> kentik.net.v202303.Afi
	26, // 1: kentik.bgp_monitoring.v202205beta1.Nlri.safi:type_name -> kentik.net.v202303.Safi
	2,  // 2: kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.targets:type_name -> kentik.bgp_monitoring.v202205beta1.Nlri
	3,  // 3: kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings.health_settings:type_name -> kentik.bgp_monitoring.v202205beta1.BgpHealthSettings
	0,  // 4: kentik.bgp_monitoring.v202205beta1.BgpMonitor.status:type_name -> kentik.bgp_monitoring.v202205beta1.BgpMonitorStatus
	4,  // 5: kentik.bgp_monitoring.v202205beta1.BgpMonitor.settings:type_name -> kentik.bgp_monitoring.v202205beta1.BgpMonitorSettings
	27, // 6: kentik.bgp_monitoring.v202205beta1.BgpMonitor.cdate:type_name -> google.protobuf.Timestamp
	27, // 7: kentik.bgp_monitoring.v202205beta1.BgpMonitor.edate:type_name -> google.protobuf.Timestamp
	28, // 8: kentik.bgp_monitoring.v202205beta1.BgpMonitor.created_by:type_name -> kentik.core.v202303.UserInfo
	28, // 9: kentik.bgp_monitoring.v202205beta1.BgpMonitor.last_updated_by:type_name -> kentik.core.v202303.UserInfo
	2,  // 10: kentik.bgp_monitoring.v202205beta1.RouteInfo.nlri:type_name -> kentik.bgp_monitoring.v202205beta1.Nlri
	29, // 11: kentik.bgp_monitoring.v202205beta1.RouteInfo.vantage_point:type_name -> kentik.net.v202303.VantagePoint
	30, // 12: kentik.bgp_monitoring.v202205beta1.RouteInfo.rpki_status:type_name -> kentik.net.v202303.RpkiStatus
	27, // 13: kentik.bgp_monitoring.v202205beta1.BgpMetric.timestamp:type_name -> google.protobuf.Timestamp
	2,  // 14: kentik.bgp_monitoring.v202205beta1.BgpMetric.nlri:type_name -> kentik.bgp_monitoring.v202205beta1.Nlri
	5,  // 15: kentik.bgp_monitoring.v202205beta1.ListMonitorsResponse.monitors:type_name -> kentik.bgp_monitoring.v202205beta1.BgpMonitor
	5,  // 16: kentik.bgp_monitoring.v202205beta1.CreateMonitorRequest.monitor:type_name -> kentik.bgp_monitoring.v202205beta1.BgpMonitor
	5,  // 17: kentik.bgp_monitoring.v202205beta1.CreateMonitorResponse.monitor:type_name -> kentik.bgp_monitoring.v202205beta1.BgpMonitor
	5,  // 18: kentik.bgp_monitoring.v202205beta1.GetMonitorResponse.monitor:type_name -> kentik.bgp_monitoring.v202205beta1.BgpMonitor
	5,  // 19: kentik.bgp_monitoring.v202205beta1.UpdateMonitorRequest.monitor:type_name -> kentik.bgp_monitoring.v202205beta1.BgpMonitor
	5,  // 20: kentik.bgp_monitoring.v202205beta1.UpdateMonitorResponse.monitor:type_name -> kentik.bgp_monitoring.v202205beta1.BgpMonitor
	0,  // 21: kentik.bgp_monitoring.v202205beta1.SetMonitorStatusRequest.status:type_name -> kentik.bgp_monitoring.v202205beta1.BgpMonitorStatus
	27, // 22: kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.start_time:type_name -> google.protobuf.Timestamp
	27, // 23: kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.end_time:type_name -> google.protobuf.Timestamp
	2,  // 24: kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.target:type_name -> kentik.bgp_monitoring.v202205beta1.Nlri
	1,  // 25: kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest.metrics:type_name -> kentik.bgp_monitoring.v202205beta1.BgpMetricType
	7,  // 26: kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetResponse.metrics:type_name -> kentik.bgp_monitoring.v202205beta1.BgpMetric
	27, // 27: kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetRequest.time:type_name -> google.protobuf.Timestamp
	2,  // 28: kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetRequest.target:type_name -> kentik.bgp_monitoring.v202205beta1.Nlri
	6,  // 29: kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetResponse.routes:type_name -> kentik.bgp_monitoring.v202205beta1.RouteInfo
	24, // 30: kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetResponse.as_names:type_name -> kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetResponse.AsNamesEntry
	8,  // 31: kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService.ListMonitors:input_type -> kentik.bgp_monitoring.v202205beta1.ListMonitorsRequest
	10, // 32: kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService.CreateMonitor:input_type -> kentik.bgp_monitoring.v202205beta1.CreateMonitorRequest
	12, // 33: kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService.GetMonitor:input_type -> kentik.bgp_monitoring.v202205beta1.GetMonitorRequest
	14, // 34: kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService.UpdateMonitor:input_type -> kentik.bgp_monitoring.v202205beta1.UpdateMonitorRequest
	16, // 35: kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService.DeleteMonitor:input_type -> kentik.bgp_monitoring.v202205beta1.DeleteMonitorRequest
	18, // 36: kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService.SetMonitorStatus:input_type -> kentik.bgp_monitoring.v202205beta1.SetMonitorStatusRequest
	20, // 37: kentik.bgp_monitoring.v202205beta1.BgpMonitoringDataService.GetMetricsForTarget:input_type -> kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetRequest
	22, // 38: kentik.bgp_monitoring.v202205beta1.BgpMonitoringDataService.GetRoutesForTarget:input_type -> kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetRequest
	9,  // 39: kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService.ListMonitors:output_type -> kentik.bgp_monitoring.v202205beta1.ListMonitorsResponse
	11, // 40: kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService.CreateMonitor:output_type -> kentik.bgp_monitoring.v202205beta1.CreateMonitorResponse
	13, // 41: kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService.GetMonitor:output_type -> kentik.bgp_monitoring.v202205beta1.GetMonitorResponse
	15, // 42: kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService.UpdateMonitor:output_type -> kentik.bgp_monitoring.v202205beta1.UpdateMonitorResponse
	17, // 43: kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService.DeleteMonitor:output_type -> kentik.bgp_monitoring.v202205beta1.DeleteMonitorResponse
	19, // 44: kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService.SetMonitorStatus:output_type -> kentik.bgp_monitoring.v202205beta1.SetMonitorStatusResponse
	21, // 45: kentik.bgp_monitoring.v202205beta1.BgpMonitoringDataService.GetMetricsForTarget:output_type -> kentik.bgp_monitoring.v202205beta1.GetMetricsForTargetResponse
	23, // 46: kentik.bgp_monitoring.v202205beta1.BgpMonitoringDataService.GetRoutesForTarget:output_type -> kentik.bgp_monitoring.v202205beta1.GetRoutesForTargetResponse
	39, // [39:47] is the sub-list for method output_type
	31, // [31:39] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_init() }
func file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_init() {
	if File_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto != nil {
		return
	}
	file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[0].OneofWrappers = []any{
		(*Nlri_Prefix)(nil),
	}
	file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes[5].OneofWrappers = []any{
		(*BgpMetric_Reachability)(nil),
		(*BgpMetric_PathChanges)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDesc), len(file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_goTypes,
		DependencyIndexes: file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_depIdxs,
		EnumInfos:         file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_enumTypes,
		MessageInfos:      file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_msgTypes,
	}.Build()
	File_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto = out.File
	file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_goTypes = nil
	file_kentik_bgp_monitoring_v202205beta1_bgp_monitoring_proto_depIdxs = nil
}
