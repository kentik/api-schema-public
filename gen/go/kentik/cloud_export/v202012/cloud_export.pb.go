// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: kentik/cloud_export/v202012/cloud_export.proto

package cloud_export

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/kentik/api-schema-public/gen/go/kentik/core/v202012"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CloudExport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CompanyId uint64 `protobuf:"varint,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	UserId    uint64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Enabled   bool   `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Types that are assignable to Properties:
	//	*CloudExport_Aws
	//	*CloudExport_Azure
	//	*CloudExport_Gcp
	Properties    isCloudExport_Properties `protobuf_oneof:"properties"`
	BgpProperties *BGPProperties           `protobuf:"bytes,9,opt,name=bgp_properties,json=bgpProperties,proto3" json:"bgp_properties,omitempty"`
}

func (x *CloudExport) Reset() {
	*x = CloudExport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudExport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudExport) ProtoMessage() {}

func (x *CloudExport) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudExport.ProtoReflect.Descriptor instead.
func (*CloudExport) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_export_v202012_cloud_export_proto_rawDescGZIP(), []int{0}
}

func (x *CloudExport) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CloudExport) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

func (x *CloudExport) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CloudExport) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CloudExport) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (m *CloudExport) GetProperties() isCloudExport_Properties {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (x *CloudExport) GetAws() *AwsProperties {
	if x, ok := x.GetProperties().(*CloudExport_Aws); ok {
		return x.Aws
	}
	return nil
}

func (x *CloudExport) GetAzure() *AzureProperties {
	if x, ok := x.GetProperties().(*CloudExport_Azure); ok {
		return x.Azure
	}
	return nil
}

func (x *CloudExport) GetGcp() *GcpProperties {
	if x, ok := x.GetProperties().(*CloudExport_Gcp); ok {
		return x.Gcp
	}
	return nil
}

func (x *CloudExport) GetBgpProperties() *BGPProperties {
	if x != nil {
		return x.BgpProperties
	}
	return nil
}

type isCloudExport_Properties interface {
	isCloudExport_Properties()
}

type CloudExport_Aws struct {
	Aws *AwsProperties `protobuf:"bytes,8,opt,name=aws,proto3,oneof"`
}

type CloudExport_Azure struct {
	Azure *AzureProperties `protobuf:"bytes,7,opt,name=azure,proto3,oneof"`
}

type CloudExport_Gcp struct {
	Gcp *GcpProperties `protobuf:"bytes,6,opt,name=gcp,proto3,oneof"`
}

func (*CloudExport_Aws) isCloudExport_Properties() {}

func (*CloudExport_Azure) isCloudExport_Properties() {}

func (*CloudExport_Gcp) isCloudExport_Properties() {}

type AwsProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket          string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	IamRoleArn      string `protobuf:"bytes,2,opt,name=iam_role_arn,json=iamRoleArn,proto3" json:"iam_role_arn,omitempty"`
	Region          string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	DeleteAfterRead bool   `protobuf:"varint,4,opt,name=delete_after_read,json=deleteAfterRead,proto3" json:"delete_after_read,omitempty"`
}

func (x *AwsProperties) Reset() {
	*x = AwsProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwsProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsProperties) ProtoMessage() {}

func (x *AwsProperties) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsProperties.ProtoReflect.Descriptor instead.
func (*AwsProperties) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_export_v202012_cloud_export_proto_rawDescGZIP(), []int{1}
}

func (x *AwsProperties) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *AwsProperties) GetIamRoleArn() string {
	if x != nil {
		return x.IamRoleArn
	}
	return ""
}

func (x *AwsProperties) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AwsProperties) GetDeleteAfterRead() bool {
	if x != nil {
		return x.DeleteAfterRead
	}
	return false
}

type AzureProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AzureProperties) Reset() {
	*x = AzureProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AzureProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzureProperties) ProtoMessage() {}

func (x *AzureProperties) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AzureProperties.ProtoReflect.Descriptor instead.
func (*AzureProperties) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_export_v202012_cloud_export_proto_rawDescGZIP(), []int{2}
}

type GcpProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project      string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Subscription string `protobuf:"bytes,2,opt,name=subscription,proto3" json:"subscription,omitempty"`
}

func (x *GcpProperties) Reset() {
	*x = GcpProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GcpProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GcpProperties) ProtoMessage() {}

func (x *GcpProperties) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GcpProperties.ProtoReflect.Descriptor instead.
func (*GcpProperties) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_export_v202012_cloud_export_proto_rawDescGZIP(), []int{3}
}

func (x *GcpProperties) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *GcpProperties) GetSubscription() string {
	if x != nil {
		return x.Subscription
	}
	return ""
}

type BGPProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplyBgp       bool   `protobuf:"varint,1,opt,name=apply_bgp,json=applyBgp,proto3" json:"apply_bgp,omitempty"`
	DeviceBgpType  string `protobuf:"bytes,2,opt,name=device_bgp_type,json=deviceBgpType,proto3" json:"device_bgp_type,omitempty"`
	UseBgpDeviceId bool   `protobuf:"varint,3,opt,name=use_bgp_device_id,json=useBgpDeviceId,proto3" json:"use_bgp_device_id,omitempty"`
}

func (x *BGPProperties) Reset() {
	*x = BGPProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BGPProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BGPProperties) ProtoMessage() {}

func (x *BGPProperties) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BGPProperties.ProtoReflect.Descriptor instead.
func (*BGPProperties) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_export_v202012_cloud_export_proto_rawDescGZIP(), []int{4}
}

func (x *BGPProperties) GetApplyBgp() bool {
	if x != nil {
		return x.ApplyBgp
	}
	return false
}

func (x *BGPProperties) GetDeviceBgpType() string {
	if x != nil {
		return x.DeviceBgpType
	}
	return ""
}

func (x *BGPProperties) GetUseBgpDeviceId() bool {
	if x != nil {
		return x.UseBgpDeviceId
	}
	return false
}

type CreateCloudExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Export *CloudExport `protobuf:"bytes,1,opt,name=export,proto3" json:"export,omitempty"`
}

func (x *CreateCloudExportRequest) Reset() {
	*x = CreateCloudExportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCloudExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCloudExportRequest) ProtoMessage() {}

func (x *CreateCloudExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCloudExportRequest.ProtoReflect.Descriptor instead.
func (*CreateCloudExportRequest) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_export_v202012_cloud_export_proto_rawDescGZIP(), []int{5}
}

func (x *CreateCloudExportRequest) GetExport() *CloudExport {
	if x != nil {
		return x.Export
	}
	return nil
}

type CreateCloudExportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Export *CloudExport `protobuf:"bytes,1,opt,name=export,proto3" json:"export,omitempty"`
}

func (x *CreateCloudExportResponse) Reset() {
	*x = CreateCloudExportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCloudExportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCloudExportResponse) ProtoMessage() {}

func (x *CreateCloudExportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCloudExportResponse.ProtoReflect.Descriptor instead.
func (*CreateCloudExportResponse) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_export_v202012_cloud_export_proto_rawDescGZIP(), []int{6}
}

func (x *CreateCloudExportResponse) GetExport() *CloudExport {
	if x != nil {
		return x.Export
	}
	return nil
}

type GetCloudExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCloudExportRequest) Reset() {
	*x = GetCloudExportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCloudExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCloudExportRequest) ProtoMessage() {}

func (x *GetCloudExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCloudExportRequest.ProtoReflect.Descriptor instead.
func (*GetCloudExportRequest) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_export_v202012_cloud_export_proto_rawDescGZIP(), []int{7}
}

func (x *GetCloudExportRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCloudExportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Export *CloudExport `protobuf:"bytes,1,opt,name=export,proto3" json:"export,omitempty"`
}

func (x *GetCloudExportResponse) Reset() {
	*x = GetCloudExportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCloudExportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCloudExportResponse) ProtoMessage() {}

func (x *GetCloudExportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCloudExportResponse.ProtoReflect.Descriptor instead.
func (*GetCloudExportResponse) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_export_v202012_cloud_export_proto_rawDescGZIP(), []int{8}
}

func (x *GetCloudExportResponse) GetExport() *CloudExport {
	if x != nil {
		return x.Export
	}
	return nil
}

type UpdateCloudExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Export     *CloudExport           `protobuf:"bytes,1,opt,name=export,proto3" json:"export,omitempty"`
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateCloudExportRequest) Reset() {
	*x = UpdateCloudExportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCloudExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCloudExportRequest) ProtoMessage() {}

func (x *UpdateCloudExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCloudExportRequest.ProtoReflect.Descriptor instead.
func (*UpdateCloudExportRequest) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_export_v202012_cloud_export_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateCloudExportRequest) GetExport() *CloudExport {
	if x != nil {
		return x.Export
	}
	return nil
}

func (x *UpdateCloudExportRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type UpdateCloudExportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Export *CloudExport `protobuf:"bytes,1,opt,name=export,proto3" json:"export,omitempty"`
}

func (x *UpdateCloudExportResponse) Reset() {
	*x = UpdateCloudExportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCloudExportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCloudExportResponse) ProtoMessage() {}

func (x *UpdateCloudExportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCloudExportResponse.ProtoReflect.Descriptor instead.
func (*UpdateCloudExportResponse) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_export_v202012_cloud_export_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateCloudExportResponse) GetExport() *CloudExport {
	if x != nil {
		return x.Export
	}
	return nil
}

type DeleteCloudExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCloudExportRequest) Reset() {
	*x = DeleteCloudExportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCloudExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCloudExportRequest) ProtoMessage() {}

func (x *DeleteCloudExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCloudExportRequest.ProtoReflect.Descriptor instead.
func (*DeleteCloudExportRequest) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_export_v202012_cloud_export_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteCloudExportRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteCloudExportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCloudExportResponse) Reset() {
	*x = DeleteCloudExportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCloudExportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCloudExportResponse) ProtoMessage() {}

func (x *DeleteCloudExportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCloudExportResponse.ProtoReflect.Descriptor instead.
func (*DeleteCloudExportResponse) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_export_v202012_cloud_export_proto_rawDescGZIP(), []int{12}
}

type AwsCloudCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AwsCloudCheckRequest) Reset() {
	*x = AwsCloudCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwsCloudCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsCloudCheckRequest) ProtoMessage() {}

func (x *AwsCloudCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsCloudCheckRequest.ProtoReflect.Descriptor instead.
func (*AwsCloudCheckRequest) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_export_v202012_cloud_export_proto_rawDescGZIP(), []int{13}
}

type AwsCloudCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Region string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Role   string `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *AwsCloudCheckResponse) Reset() {
	*x = AwsCloudCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwsCloudCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsCloudCheckResponse) ProtoMessage() {}

func (x *AwsCloudCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsCloudCheckResponse.ProtoReflect.Descriptor instead.
func (*AwsCloudCheckResponse) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_export_v202012_cloud_export_proto_rawDescGZIP(), []int{14}
}

func (x *AwsCloudCheckResponse) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *AwsCloudCheckResponse) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AwsCloudCheckResponse) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type AzureCloudCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// companyID looks mandatory
	CompanyId uint64 `protobuf:"varint,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"` // params as in https://azure.kntk.cloud/api/azure/check
}

func (x *AzureCloudCheckRequest) Reset() {
	*x = AzureCloudCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AzureCloudCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzureCloudCheckRequest) ProtoMessage() {}

func (x *AzureCloudCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AzureCloudCheckRequest.ProtoReflect.Descriptor instead.
func (*AzureCloudCheckRequest) Descriptor() ([]byte, []int) {
	return file_kentik_cloud_export_v202012_cloud_export_proto_rawDescGZIP(), []int{15}
}

func (x *AzureCloudCheckRequest) GetCompanyId() uint64 {
	if x != nil {
		return x.CompanyId
	}
	return 0
}

var File_kentik_cloud_export_v202012_cloud_export_proto protoreflect.FileDescriptor

var file_kentik_cloud_export_v202012_cloud_export_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x65,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x30, 0x31, 0x32, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1b, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x65,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x30, 0x31, 0x32, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x30, 0x31, 0x32, 0x2f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x03, 0x0a, 0x0b, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x3e,
	0x0a, 0x03, 0x61, 0x77, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x65,
	0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x30, 0x31, 0x32, 0x2e, 0x41, 0x77, 0x73, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x48, 0x00, 0x52, 0x03, 0x61, 0x77, 0x73, 0x12, 0x44,
	0x0a, 0x05, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x65, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x30, 0x31, 0x32, 0x2e, 0x41, 0x7a, 0x75, 0x72,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x48, 0x00, 0x52, 0x05, 0x61,
	0x7a, 0x75, 0x72, 0x65, 0x12, 0x3e, 0x0a, 0x03, 0x67, 0x63, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x30, 0x31, 0x32, 0x2e,
	0x47, 0x63, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x48, 0x00, 0x52,
	0x03, 0x67, 0x63, 0x70, 0x12, 0x51, 0x0a, 0x0e, 0x62, 0x67, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b,
	0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x30, 0x31, 0x32, 0x2e, 0x42, 0x47, 0x50, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0d, 0x62, 0x67, 0x70, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x0d, 0x41, 0x77, 0x73, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x20, 0x0a, 0x0c, 0x69, 0x61, 0x6d, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x72, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x61, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x72,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x61, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x4d, 0x0a, 0x0d, 0x47, 0x63, 0x70, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7f, 0x0a, 0x0d, 0x42, 0x47, 0x50, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x6c,
	0x79, 0x5f, 0x62, 0x67, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x70, 0x70,
	0x6c, 0x79, 0x42, 0x67, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x62, 0x67, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x67, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a,
	0x11, 0x75, 0x73, 0x65, 0x5f, 0x62, 0x67, 0x70, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x42, 0x67, 0x70,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x30,
	0x31, 0x32, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x06,
	0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x5d, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x30, 0x31,
	0x32, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x06, 0x65,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5a,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69,
	0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76,
	0x32, 0x30, 0x32, 0x30, 0x31, 0x32, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x99, 0x01, 0x0a, 0x18, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x32,
	0x30, 0x32, 0x30, 0x31, 0x32, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x5d, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x30, 0x31,
	0x32, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x06, 0x65,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x2a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x1b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16,
	0x0a, 0x14, 0x41, 0x77, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5b, 0x0a, 0x15, 0x41, 0x77, 0x73, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x22, 0x37, 0x0a, 0x16, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x32, 0xd6, 0x05, 0x0a,
	0x17, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9f, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x35,
	0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x65, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x30, 0x31, 0x32, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x32, 0x30, 0x32,
	0x30, 0x31, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x30, 0x31, 0x32, 0x2f,
	0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x9f, 0x01, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x32, 0x2e,
	0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x65, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x30, 0x31, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x30, 0x31, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c,
	0x2f, 0x76, 0x32, 0x30, 0x32, 0x30, 0x31, 0x32, 0x2f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x2f, 0x7b, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xab, 0x01, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x35, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x30, 0x31, 0x32,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6b, 0x65, 0x6e, 0x74,
	0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x76, 0x32, 0x30, 0x32, 0x30, 0x31, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x32, 0x1c, 0x2f, 0x76, 0x32, 0x30, 0x32,
	0x30, 0x31, 0x32, 0x2f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x7b, 0x65, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x84, 0x01, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x35, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x30, 0x31, 0x32, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x32,
	0x30, 0x32, 0x30, 0x31, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x1a, 0x42, 0xca, 0x41, 0x1b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6f,
	0x6d, 0xd2, 0x41, 0x21, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x61, 0x70, 0x69, 0x2e,
	0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x42, 0x9d, 0x03, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2d,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x6b, 0x65,
	0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x30, 0x31, 0x32, 0x3b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x92, 0x41, 0xcb, 0x02, 0x12, 0x59, 0x0a, 0x16, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x20, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x20, 0x41, 0x50, 0x49, 0x22, 0x37, 0x0a, 0x16, 0x4b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x20, 0x41,
	0x50, 0x49, 0x20, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1d,
	0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x32, 0x06, 0x32,
	0x30, 0x32, 0x30, 0x31, 0x32, 0x2a, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x5c, 0x0a, 0x30,
	0x0a, 0x13, 0x58, 0x2d, 0x43, 0x48, 0x2d, 0x41, 0x75, 0x74, 0x68, 0x2d, 0x41, 0x50, 0x49, 0x2d,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x08, 0x02, 0x1a, 0x13, 0x58, 0x2d, 0x43, 0x48, 0x2d,
	0x41, 0x75, 0x74, 0x68, 0x2d, 0x41, 0x50, 0x49, 0x2d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x02,
	0x0a, 0x28, 0x0a, 0x0f, 0x58, 0x2d, 0x43, 0x48, 0x2d, 0x41, 0x75, 0x74, 0x68, 0x2d, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x15, 0x08, 0x02, 0x1a, 0x0f, 0x58, 0x2d, 0x43, 0x48, 0x2d, 0x41, 0x75,
	0x74, 0x68, 0x2d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x20, 0x02, 0x62, 0x32, 0x0a, 0x17, 0x0a, 0x13,
	0x58, 0x2d, 0x43, 0x48, 0x2d, 0x41, 0x75, 0x74, 0x68, 0x2d, 0x41, 0x50, 0x49, 0x2d, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x00, 0x0a, 0x17, 0x0a, 0x13, 0x58, 0x2d, 0x43, 0x48, 0x2d, 0x41, 0x75,
	0x74, 0x68, 0x2d, 0x41, 0x50, 0x49, 0x2d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x00, 0x72, 0x35,
	0x0a, 0x16, 0x4d, 0x6f, 0x72, 0x65, 0x20, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x20, 0x4b, 0x65, 0x6e,
	0x74, 0x69, 0x6b, 0x20, 0x41, 0x50, 0x49, 0x73, 0x12, 0x1b, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a,
	0x2f, 0x2f, 0x64, 0x6f, 0x63, 0x73, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kentik_cloud_export_v202012_cloud_export_proto_rawDescOnce sync.Once
	file_kentik_cloud_export_v202012_cloud_export_proto_rawDescData = file_kentik_cloud_export_v202012_cloud_export_proto_rawDesc
)

func file_kentik_cloud_export_v202012_cloud_export_proto_rawDescGZIP() []byte {
	file_kentik_cloud_export_v202012_cloud_export_proto_rawDescOnce.Do(func() {
		file_kentik_cloud_export_v202012_cloud_export_proto_rawDescData = protoimpl.X.CompressGZIP(file_kentik_cloud_export_v202012_cloud_export_proto_rawDescData)
	})
	return file_kentik_cloud_export_v202012_cloud_export_proto_rawDescData
}

var file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_kentik_cloud_export_v202012_cloud_export_proto_goTypes = []interface{}{
	(*CloudExport)(nil),               // 0: kentik.cloud_export.v202012.CloudExport
	(*AwsProperties)(nil),             // 1: kentik.cloud_export.v202012.AwsProperties
	(*AzureProperties)(nil),           // 2: kentik.cloud_export.v202012.AzureProperties
	(*GcpProperties)(nil),             // 3: kentik.cloud_export.v202012.GcpProperties
	(*BGPProperties)(nil),             // 4: kentik.cloud_export.v202012.BGPProperties
	(*CreateCloudExportRequest)(nil),  // 5: kentik.cloud_export.v202012.CreateCloudExportRequest
	(*CreateCloudExportResponse)(nil), // 6: kentik.cloud_export.v202012.CreateCloudExportResponse
	(*GetCloudExportRequest)(nil),     // 7: kentik.cloud_export.v202012.GetCloudExportRequest
	(*GetCloudExportResponse)(nil),    // 8: kentik.cloud_export.v202012.GetCloudExportResponse
	(*UpdateCloudExportRequest)(nil),  // 9: kentik.cloud_export.v202012.UpdateCloudExportRequest
	(*UpdateCloudExportResponse)(nil), // 10: kentik.cloud_export.v202012.UpdateCloudExportResponse
	(*DeleteCloudExportRequest)(nil),  // 11: kentik.cloud_export.v202012.DeleteCloudExportRequest
	(*DeleteCloudExportResponse)(nil), // 12: kentik.cloud_export.v202012.DeleteCloudExportResponse
	(*AwsCloudCheckRequest)(nil),      // 13: kentik.cloud_export.v202012.AwsCloudCheckRequest
	(*AwsCloudCheckResponse)(nil),     // 14: kentik.cloud_export.v202012.AwsCloudCheckResponse
	(*AzureCloudCheckRequest)(nil),    // 15: kentik.cloud_export.v202012.AzureCloudCheckRequest
	(*fieldmaskpb.FieldMask)(nil),     // 16: google.protobuf.FieldMask
}
var file_kentik_cloud_export_v202012_cloud_export_proto_depIdxs = []int32{
	1,  // 0: kentik.cloud_export.v202012.CloudExport.aws:type_name -> kentik.cloud_export.v202012.AwsProperties
	2,  // 1: kentik.cloud_export.v202012.CloudExport.azure:type_name -> kentik.cloud_export.v202012.AzureProperties
	3,  // 2: kentik.cloud_export.v202012.CloudExport.gcp:type_name -> kentik.cloud_export.v202012.GcpProperties
	4,  // 3: kentik.cloud_export.v202012.CloudExport.bgp_properties:type_name -> kentik.cloud_export.v202012.BGPProperties
	0,  // 4: kentik.cloud_export.v202012.CreateCloudExportRequest.export:type_name -> kentik.cloud_export.v202012.CloudExport
	0,  // 5: kentik.cloud_export.v202012.CreateCloudExportResponse.export:type_name -> kentik.cloud_export.v202012.CloudExport
	0,  // 6: kentik.cloud_export.v202012.GetCloudExportResponse.export:type_name -> kentik.cloud_export.v202012.CloudExport
	0,  // 7: kentik.cloud_export.v202012.UpdateCloudExportRequest.export:type_name -> kentik.cloud_export.v202012.CloudExport
	16, // 8: kentik.cloud_export.v202012.UpdateCloudExportRequest.update_mask:type_name -> google.protobuf.FieldMask
	0,  // 9: kentik.cloud_export.v202012.UpdateCloudExportResponse.export:type_name -> kentik.cloud_export.v202012.CloudExport
	5,  // 10: kentik.cloud_export.v202012.CloudExportAdminService.CreateCloudExport:input_type -> kentik.cloud_export.v202012.CreateCloudExportRequest
	7,  // 11: kentik.cloud_export.v202012.CloudExportAdminService.GetCloudExport:input_type -> kentik.cloud_export.v202012.GetCloudExportRequest
	9,  // 12: kentik.cloud_export.v202012.CloudExportAdminService.UpdateCloudExport:input_type -> kentik.cloud_export.v202012.UpdateCloudExportRequest
	11, // 13: kentik.cloud_export.v202012.CloudExportAdminService.DeleteCloudExport:input_type -> kentik.cloud_export.v202012.DeleteCloudExportRequest
	6,  // 14: kentik.cloud_export.v202012.CloudExportAdminService.CreateCloudExport:output_type -> kentik.cloud_export.v202012.CreateCloudExportResponse
	8,  // 15: kentik.cloud_export.v202012.CloudExportAdminService.GetCloudExport:output_type -> kentik.cloud_export.v202012.GetCloudExportResponse
	10, // 16: kentik.cloud_export.v202012.CloudExportAdminService.UpdateCloudExport:output_type -> kentik.cloud_export.v202012.UpdateCloudExportResponse
	12, // 17: kentik.cloud_export.v202012.CloudExportAdminService.DeleteCloudExport:output_type -> kentik.cloud_export.v202012.DeleteCloudExportResponse
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_kentik_cloud_export_v202012_cloud_export_proto_init() }
func file_kentik_cloud_export_v202012_cloud_export_proto_init() {
	if File_kentik_cloud_export_v202012_cloud_export_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudExport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwsProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AzureProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GcpProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BGPProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCloudExportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCloudExportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCloudExportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCloudExportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCloudExportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCloudExportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCloudExportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCloudExportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwsCloudCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwsCloudCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AzureCloudCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*CloudExport_Aws)(nil),
		(*CloudExport_Azure)(nil),
		(*CloudExport_Gcp)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kentik_cloud_export_v202012_cloud_export_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kentik_cloud_export_v202012_cloud_export_proto_goTypes,
		DependencyIndexes: file_kentik_cloud_export_v202012_cloud_export_proto_depIdxs,
		MessageInfos:      file_kentik_cloud_export_v202012_cloud_export_proto_msgTypes,
	}.Build()
	File_kentik_cloud_export_v202012_cloud_export_proto = out.File
	file_kentik_cloud_export_v202012_cloud_export_proto_rawDesc = nil
	file_kentik_cloud_export_v202012_cloud_export_proto_goTypes = nil
	file_kentik_cloud_export_v202012_cloud_export_proto_depIdxs = nil
}
