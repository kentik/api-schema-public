// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: kentik/interface/v202108alpha1/interface.proto

package iface

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/kentik/api-schema-public/gen/go/kentik/core/v202303"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConnectivityType int32

const (
	ConnectivityType_CONNECTIVITY_TYPE_UNSPECIFIED              ConnectivityType = 0
	ConnectivityType_CONNECTIVITY_TYPE_AGGREGATION_INTERCONNECT ConnectivityType = 1
	ConnectivityType_CONNECTIVITY_TYPE_AVAILABLE                ConnectivityType = 2
	ConnectivityType_CONNECTIVITY_TYPE_BACKBONE                 ConnectivityType = 3
	ConnectivityType_CONNECTIVITY_TYPE_CLOUD_INTERCONNECT       ConnectivityType = 4
	ConnectivityType_CONNECTIVITY_TYPE_CUSTOMER                 ConnectivityType = 5
	ConnectivityType_CONNECTIVITY_TYPE_DATACENTER_FABRIC        ConnectivityType = 6
	ConnectivityType_CONNECTIVITY_TYPE_DATACENTER_INTERCONNECT  ConnectivityType = 7
	ConnectivityType_CONNECTIVITY_TYPE_EMBEDDED_CACHE           ConnectivityType = 8
	ConnectivityType_CONNECTIVITY_TYPE_FREE_PNI                 ConnectivityType = 9
	ConnectivityType_CONNECTIVITY_TYPE_HOST                     ConnectivityType = 10
	ConnectivityType_CONNECTIVITY_TYPE_IX                       ConnectivityType = 11
	ConnectivityType_CONNECTIVITY_TYPE_OTHER                    ConnectivityType = 12
	ConnectivityType_CONNECTIVITY_TYPE_PAID_PNI                 ConnectivityType = 13
	ConnectivityType_CONNECTIVITY_TYPE_RESERVED                 ConnectivityType = 14
	ConnectivityType_CONNECTIVITY_TYPE_TRANSIT                  ConnectivityType = 15
	ConnectivityType_CONNECTIVITY_TYPE_VIRTUAL_CROSS_CONNECT    ConnectivityType = 16
	ConnectivityType_CONNECTIVITY_TYPE_IPX_INTERCONNECT         ConnectivityType = 17
	ConnectivityType_CONNECTIVITY_TYPE_SIP_INTERCONNECT         ConnectivityType = 18
	ConnectivityType_CONNECTIVITY_TYPE_DDOS_EXT                 ConnectivityType = 19
	ConnectivityType_CONNECTIVITY_TYPE_DDOS_INT                 ConnectivityType = 20
	ConnectivityType_CONNECTIVITY_TYPE_MGT                      ConnectivityType = 21
)

// Enum value maps for ConnectivityType.
var (
	ConnectivityType_name = map[int32]string{
		0:  "CONNECTIVITY_TYPE_UNSPECIFIED",
		1:  "CONNECTIVITY_TYPE_AGGREGATION_INTERCONNECT",
		2:  "CONNECTIVITY_TYPE_AVAILABLE",
		3:  "CONNECTIVITY_TYPE_BACKBONE",
		4:  "CONNECTIVITY_TYPE_CLOUD_INTERCONNECT",
		5:  "CONNECTIVITY_TYPE_CUSTOMER",
		6:  "CONNECTIVITY_TYPE_DATACENTER_FABRIC",
		7:  "CONNECTIVITY_TYPE_DATACENTER_INTERCONNECT",
		8:  "CONNECTIVITY_TYPE_EMBEDDED_CACHE",
		9:  "CONNECTIVITY_TYPE_FREE_PNI",
		10: "CONNECTIVITY_TYPE_HOST",
		11: "CONNECTIVITY_TYPE_IX",
		12: "CONNECTIVITY_TYPE_OTHER",
		13: "CONNECTIVITY_TYPE_PAID_PNI",
		14: "CONNECTIVITY_TYPE_RESERVED",
		15: "CONNECTIVITY_TYPE_TRANSIT",
		16: "CONNECTIVITY_TYPE_VIRTUAL_CROSS_CONNECT",
		17: "CONNECTIVITY_TYPE_IPX_INTERCONNECT",
		18: "CONNECTIVITY_TYPE_SIP_INTERCONNECT",
		19: "CONNECTIVITY_TYPE_DDOS_EXT",
		20: "CONNECTIVITY_TYPE_DDOS_INT",
		21: "CONNECTIVITY_TYPE_MGT",
	}
	ConnectivityType_value = map[string]int32{
		"CONNECTIVITY_TYPE_UNSPECIFIED":              0,
		"CONNECTIVITY_TYPE_AGGREGATION_INTERCONNECT": 1,
		"CONNECTIVITY_TYPE_AVAILABLE":                2,
		"CONNECTIVITY_TYPE_BACKBONE":                 3,
		"CONNECTIVITY_TYPE_CLOUD_INTERCONNECT":       4,
		"CONNECTIVITY_TYPE_CUSTOMER":                 5,
		"CONNECTIVITY_TYPE_DATACENTER_FABRIC":        6,
		"CONNECTIVITY_TYPE_DATACENTER_INTERCONNECT":  7,
		"CONNECTIVITY_TYPE_EMBEDDED_CACHE":           8,
		"CONNECTIVITY_TYPE_FREE_PNI":                 9,
		"CONNECTIVITY_TYPE_HOST":                     10,
		"CONNECTIVITY_TYPE_IX":                       11,
		"CONNECTIVITY_TYPE_OTHER":                    12,
		"CONNECTIVITY_TYPE_PAID_PNI":                 13,
		"CONNECTIVITY_TYPE_RESERVED":                 14,
		"CONNECTIVITY_TYPE_TRANSIT":                  15,
		"CONNECTIVITY_TYPE_VIRTUAL_CROSS_CONNECT":    16,
		"CONNECTIVITY_TYPE_IPX_INTERCONNECT":         17,
		"CONNECTIVITY_TYPE_SIP_INTERCONNECT":         18,
		"CONNECTIVITY_TYPE_DDOS_EXT":                 19,
		"CONNECTIVITY_TYPE_DDOS_INT":                 20,
		"CONNECTIVITY_TYPE_MGT":                      21,
	}
)

func (x ConnectivityType) Enum() *ConnectivityType {
	p := new(ConnectivityType)
	*p = x
	return p
}

func (x ConnectivityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectivityType) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_interface_v202108alpha1_interface_proto_enumTypes[0].Descriptor()
}

func (ConnectivityType) Type() protoreflect.EnumType {
	return &file_kentik_interface_v202108alpha1_interface_proto_enumTypes[0]
}

func (x ConnectivityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectivityType.Descriptor instead.
func (ConnectivityType) EnumDescriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{0}
}

type NetworkBoundary int32

const (
	NetworkBoundary_NETWORK_BOUNDARY_UNSPECIFIED NetworkBoundary = 0
	NetworkBoundary_NETWORK_BOUNDARY_AUTO        NetworkBoundary = 1
	NetworkBoundary_NETWORK_BOUNDARY_INTERNAL    NetworkBoundary = 2
	NetworkBoundary_NETWORK_BOUNDARY_EXTERNAL    NetworkBoundary = 3
	NetworkBoundary_NETWORK_BOUNDARY_NONE        NetworkBoundary = 4
)

// Enum value maps for NetworkBoundary.
var (
	NetworkBoundary_name = map[int32]string{
		0: "NETWORK_BOUNDARY_UNSPECIFIED",
		1: "NETWORK_BOUNDARY_AUTO",
		2: "NETWORK_BOUNDARY_INTERNAL",
		3: "NETWORK_BOUNDARY_EXTERNAL",
		4: "NETWORK_BOUNDARY_NONE",
	}
	NetworkBoundary_value = map[string]int32{
		"NETWORK_BOUNDARY_UNSPECIFIED": 0,
		"NETWORK_BOUNDARY_AUTO":        1,
		"NETWORK_BOUNDARY_INTERNAL":    2,
		"NETWORK_BOUNDARY_EXTERNAL":    3,
		"NETWORK_BOUNDARY_NONE":        4,
	}
)

func (x NetworkBoundary) Enum() *NetworkBoundary {
	p := new(NetworkBoundary)
	*p = x
	return p
}

func (x NetworkBoundary) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkBoundary) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_interface_v202108alpha1_interface_proto_enumTypes[1].Descriptor()
}

func (NetworkBoundary) Type() protoreflect.EnumType {
	return &file_kentik_interface_v202108alpha1_interface_proto_enumTypes[1]
}

func (x NetworkBoundary) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NetworkBoundary.Descriptor instead.
func (NetworkBoundary) EnumDescriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{1}
}

type IpFilter int32

const (
	IpFilter_IP_FILTER_UNSPECIFIED IpFilter = 0
	IpFilter_IP_FILTER_PRIVATE     IpFilter = 1
	IpFilter_IP_FILTER_PUBLIC      IpFilter = 2
	IpFilter_IP_FILTER_UNSET       IpFilter = 3
)

// Enum value maps for IpFilter.
var (
	IpFilter_name = map[int32]string{
		0: "IP_FILTER_UNSPECIFIED",
		1: "IP_FILTER_PRIVATE",
		2: "IP_FILTER_PUBLIC",
		3: "IP_FILTER_UNSET",
	}
	IpFilter_value = map[string]int32{
		"IP_FILTER_UNSPECIFIED": 0,
		"IP_FILTER_PRIVATE":     1,
		"IP_FILTER_PUBLIC":      2,
		"IP_FILTER_UNSET":       3,
	}
)

func (x IpFilter) Enum() *IpFilter {
	p := new(IpFilter)
	*p = x
	return p
}

func (x IpFilter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IpFilter) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_interface_v202108alpha1_interface_proto_enumTypes[2].Descriptor()
}

func (IpFilter) Type() protoreflect.EnumType {
	return &file_kentik_interface_v202108alpha1_interface_proto_enumTypes[2]
}

func (x IpFilter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IpFilter.Descriptor instead.
func (IpFilter) EnumDescriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{2}
}

type MatchAttribute int32

const (
	MatchAttribute_MATCH_ATTRIBUTE_UNSPECIFIED           MatchAttribute = 0
	MatchAttribute_MATCH_ATTRIBUTE_INTERFACE_DESCRIPTION MatchAttribute = 1
	MatchAttribute_MATCH_ATTRIBUTE_SNMP_ALIAS            MatchAttribute = 2
	MatchAttribute_MATCH_ATTRIBUTE_INTERFACE_IP          MatchAttribute = 3
)

// Enum value maps for MatchAttribute.
var (
	MatchAttribute_name = map[int32]string{
		0: "MATCH_ATTRIBUTE_UNSPECIFIED",
		1: "MATCH_ATTRIBUTE_INTERFACE_DESCRIPTION",
		2: "MATCH_ATTRIBUTE_SNMP_ALIAS",
		3: "MATCH_ATTRIBUTE_INTERFACE_IP",
	}
	MatchAttribute_value = map[string]int32{
		"MATCH_ATTRIBUTE_UNSPECIFIED":           0,
		"MATCH_ATTRIBUTE_INTERFACE_DESCRIPTION": 1,
		"MATCH_ATTRIBUTE_SNMP_ALIAS":            2,
		"MATCH_ATTRIBUTE_INTERFACE_IP":          3,
	}
)

func (x MatchAttribute) Enum() *MatchAttribute {
	p := new(MatchAttribute)
	*p = x
	return p
}

func (x MatchAttribute) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MatchAttribute) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_interface_v202108alpha1_interface_proto_enumTypes[3].Descriptor()
}

func (MatchAttribute) Type() protoreflect.EnumType {
	return &file_kentik_interface_v202108alpha1_interface_proto_enumTypes[3]
}

func (x MatchAttribute) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MatchAttribute.Descriptor instead.
func (MatchAttribute) EnumDescriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{3}
}

type Operator int32

const (
	Operator_OPERATOR_UNSPECIFIED         Operator = 0
	Operator_OPERATOR_EQUALS              Operator = 1
	Operator_OPERATOR_CONTAINS            Operator = 2
	Operator_OPERATOR_REGEX               Operator = 3
	Operator_OPERATOR_CONTAINED_IN_SUBNET Operator = 4
	Operator_OPERATOR_IS_PUBLIC_IP        Operator = 5
	Operator_OPERATOR_IS_PRIVATE_IP       Operator = 6
	Operator_OPERATOR_NO_IP               Operator = 7
)

// Enum value maps for Operator.
var (
	Operator_name = map[int32]string{
		0: "OPERATOR_UNSPECIFIED",
		1: "OPERATOR_EQUALS",
		2: "OPERATOR_CONTAINS",
		3: "OPERATOR_REGEX",
		4: "OPERATOR_CONTAINED_IN_SUBNET",
		5: "OPERATOR_IS_PUBLIC_IP",
		6: "OPERATOR_IS_PRIVATE_IP",
		7: "OPERATOR_NO_IP",
	}
	Operator_value = map[string]int32{
		"OPERATOR_UNSPECIFIED":         0,
		"OPERATOR_EQUALS":              1,
		"OPERATOR_CONTAINS":            2,
		"OPERATOR_REGEX":               3,
		"OPERATOR_CONTAINED_IN_SUBNET": 4,
		"OPERATOR_IS_PUBLIC_IP":        5,
		"OPERATOR_IS_PRIVATE_IP":       6,
		"OPERATOR_NO_IP":               7,
	}
)

func (x Operator) Enum() *Operator {
	p := new(Operator)
	*p = x
	return p
}

func (x Operator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Operator) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_interface_v202108alpha1_interface_proto_enumTypes[4].Descriptor()
}

func (Operator) Type() protoreflect.EnumType {
	return &file_kentik_interface_v202108alpha1_interface_proto_enumTypes[4]
}

func (x Operator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Operator.Descriptor instead.
func (Operator) EnumDescriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{4}
}

type Interface struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of interface.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of device with this interface.
	DeviceId string `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// SNMP ID.
	SnmpId string `protobuf:"bytes,3,opt,name=snmp_id,json=snmpId,proto3" json:"snmp_id,omitempty"`
	// Network speed in Mbps.
	SnmpSpeed int32 `protobuf:"varint,4,opt,name=snmp_speed,json=snmpSpeed,proto3" json:"snmp_speed,omitempty"`
	// Snmp Type.
	SnmpType int32 `protobuf:"varint,5,opt,name=snmp_type,json=snmpType,proto3" json:"snmp_type,omitempty"`
	// Interface alias.
	SnmpAlias string `protobuf:"bytes,6,opt,name=snmp_alias,json=snmpAlias,proto3" json:"snmp_alias,omitempty"`
	// IP of interface.
	InterfaceIp string `protobuf:"bytes,7,opt,name=interface_ip,json=interfaceIp,proto3" json:"interface_ip,omitempty"`
	// Readable string description of interface.
	InterfaceDescription string `protobuf:"bytes,8,opt,name=interface_description,json=interfaceDescription,proto3" json:"interface_description,omitempty"`
	// Create timestamp.
	Cdate *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=cdate,proto3" json:"cdate,omitempty"`
	// Update Timestamp.
	Edate *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=edate,proto3" json:"edate,omitempty"`
	// Subnet mask.
	InterfaceIpNetmask string `protobuf:"bytes,11,opt,name=interface_ip_netmask,json=interfaceIpNetmask,proto3" json:"interface_ip_netmask,omitempty"`
	// Type of network connectivity type.
	ConnectivityType ConnectivityType `protobuf:"varint,12,opt,name=connectivity_type,json=connectivityType,proto3,enum=kentik.interface.v202108alpha1.ConnectivityType" json:"connectivity_type,omitempty"`
	// Type of network boundary.
	NetworkBoundary NetworkBoundary `protobuf:"varint,13,opt,name=network_boundary,json=networkBoundary,proto3,enum=kentik.interface.v202108alpha1.NetworkBoundary" json:"network_boundary,omitempty"`
	// Top asn hops.
	TopNexthopAsns []int32 `protobuf:"varint,14,rep,packed,name=top_nexthop_asns,json=topNexthopAsns,proto3" json:"top_nexthop_asns,omitempty"`
	// Network provider.
	Provider string `protobuf:"bytes,15,opt,name=provider,proto3" json:"provider,omitempty"`
	// Interface KVs.
	InterfaceKvs map[string]string `protobuf:"bytes,16,rep,name=interface_kvs,json=interfaceKvs,proto3" json:"interface_kvs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Interface Tags.
	InterfaceTags map[string]string `protobuf:"bytes,17,rep,name=interface_tags,json=interfaceTags,proto3" json:"interface_tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Interface Status.
	InterfaceStatus string `protobuf:"bytes,18,opt,name=interface_status,json=interfaceStatus,proto3" json:"interface_status,omitempty"`
	// Extra Interface Info.
	ExtraInfo map[string]string `protobuf:"bytes,19,rep,name=extra_info,json=extraInfo,proto3" json:"extra_info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Initial SMNP ID.
	InitialSnmpId string `protobuf:"bytes,20,opt,name=initial_snmp_id,json=initialSnmpId,proto3" json:"initial_snmp_id,omitempty"`
	// Initial Interface Alias.
	InitialSnmpAlias string `protobuf:"bytes,21,opt,name=initial_snmp_alias,json=initialSnmpAlias,proto3" json:"initial_snmp_alias,omitempty"`
	// Initial Interface Description.
	InitialInterfaceDescription string `protobuf:"bytes,22,opt,name=initial_interface_description,json=initialInterfaceDescription,proto3" json:"initial_interface_description,omitempty"`
	// Inital Network speed in Mbps.
	InitialSnmpSpeed int32 `protobuf:"varint,23,opt,name=initial_snmp_speed,json=initialSnmpSpeed,proto3" json:"initial_snmp_speed,omitempty"`
	// Secondary Interface IP.
	SecondaryIps string `protobuf:"bytes,24,opt,name=secondary_ips,json=secondaryIps,proto3" json:"secondary_ips,omitempty"`
	// Initial type of network connectivity type.
	InitialConnectivityType ConnectivityType `protobuf:"varint,25,opt,name=initial_connectivity_type,json=initialConnectivityType,proto3,enum=kentik.interface.v202108alpha1.ConnectivityType" json:"initial_connectivity_type,omitempty"`
	// Initial type of network boundary.
	InitialNetworkBoundary NetworkBoundary `protobuf:"varint,26,opt,name=initial_network_boundary,json=initialNetworkBoundary,proto3,enum=kentik.interface.v202108alpha1.NetworkBoundary" json:"initial_network_boundary,omitempty"`
	// Initial Network provider.
	InitialProvider string `protobuf:"bytes,27,opt,name=initial_provider,json=initialProvider,proto3" json:"initial_provider,omitempty"`
	// VRF ID
	VrfId string `protobuf:"bytes,28,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	// VRF
	Vrf           map[string]string `protobuf:"bytes,29,rep,name=vrf,proto3" json:"vrf,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Interface) Reset() {
	*x = Interface{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Interface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface) ProtoMessage() {}

func (x *Interface) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface.ProtoReflect.Descriptor instead.
func (*Interface) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{0}
}

func (x *Interface) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Interface) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *Interface) GetSnmpId() string {
	if x != nil {
		return x.SnmpId
	}
	return ""
}

func (x *Interface) GetSnmpSpeed() int32 {
	if x != nil {
		return x.SnmpSpeed
	}
	return 0
}

func (x *Interface) GetSnmpType() int32 {
	if x != nil {
		return x.SnmpType
	}
	return 0
}

func (x *Interface) GetSnmpAlias() string {
	if x != nil {
		return x.SnmpAlias
	}
	return ""
}

func (x *Interface) GetInterfaceIp() string {
	if x != nil {
		return x.InterfaceIp
	}
	return ""
}

func (x *Interface) GetInterfaceDescription() string {
	if x != nil {
		return x.InterfaceDescription
	}
	return ""
}

func (x *Interface) GetCdate() *timestamppb.Timestamp {
	if x != nil {
		return x.Cdate
	}
	return nil
}

func (x *Interface) GetEdate() *timestamppb.Timestamp {
	if x != nil {
		return x.Edate
	}
	return nil
}

func (x *Interface) GetInterfaceIpNetmask() string {
	if x != nil {
		return x.InterfaceIpNetmask
	}
	return ""
}

func (x *Interface) GetConnectivityType() ConnectivityType {
	if x != nil {
		return x.ConnectivityType
	}
	return ConnectivityType_CONNECTIVITY_TYPE_UNSPECIFIED
}

func (x *Interface) GetNetworkBoundary() NetworkBoundary {
	if x != nil {
		return x.NetworkBoundary
	}
	return NetworkBoundary_NETWORK_BOUNDARY_UNSPECIFIED
}

func (x *Interface) GetTopNexthopAsns() []int32 {
	if x != nil {
		return x.TopNexthopAsns
	}
	return nil
}

func (x *Interface) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *Interface) GetInterfaceKvs() map[string]string {
	if x != nil {
		return x.InterfaceKvs
	}
	return nil
}

func (x *Interface) GetInterfaceTags() map[string]string {
	if x != nil {
		return x.InterfaceTags
	}
	return nil
}

func (x *Interface) GetInterfaceStatus() string {
	if x != nil {
		return x.InterfaceStatus
	}
	return ""
}

func (x *Interface) GetExtraInfo() map[string]string {
	if x != nil {
		return x.ExtraInfo
	}
	return nil
}

func (x *Interface) GetInitialSnmpId() string {
	if x != nil {
		return x.InitialSnmpId
	}
	return ""
}

func (x *Interface) GetInitialSnmpAlias() string {
	if x != nil {
		return x.InitialSnmpAlias
	}
	return ""
}

func (x *Interface) GetInitialInterfaceDescription() string {
	if x != nil {
		return x.InitialInterfaceDescription
	}
	return ""
}

func (x *Interface) GetInitialSnmpSpeed() int32 {
	if x != nil {
		return x.InitialSnmpSpeed
	}
	return 0
}

func (x *Interface) GetSecondaryIps() string {
	if x != nil {
		return x.SecondaryIps
	}
	return ""
}

func (x *Interface) GetInitialConnectivityType() ConnectivityType {
	if x != nil {
		return x.InitialConnectivityType
	}
	return ConnectivityType_CONNECTIVITY_TYPE_UNSPECIFIED
}

func (x *Interface) GetInitialNetworkBoundary() NetworkBoundary {
	if x != nil {
		return x.InitialNetworkBoundary
	}
	return NetworkBoundary_NETWORK_BOUNDARY_UNSPECIFIED
}

func (x *Interface) GetInitialProvider() string {
	if x != nil {
		return x.InitialProvider
	}
	return ""
}

func (x *Interface) GetVrfId() string {
	if x != nil {
		return x.VrfId
	}
	return ""
}

func (x *Interface) GetVrf() map[string]string {
	if x != nil {
		return x.Vrf
	}
	return nil
}

type InterfaceClassification struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Classified       bool                   `protobuf:"varint,1,opt,name=classified,proto3" json:"classified,omitempty"`
	ConnectivityType ConnectivityType       `protobuf:"varint,2,opt,name=connectivity_type,json=connectivityType,proto3,enum=kentik.interface.v202108alpha1.ConnectivityType" json:"connectivity_type,omitempty"`
	NetworkBoundary  NetworkBoundary        `protobuf:"varint,3,opt,name=network_boundary,json=networkBoundary,proto3,enum=kentik.interface.v202108alpha1.NetworkBoundary" json:"network_boundary,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *InterfaceClassification) Reset() {
	*x = InterfaceClassification{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterfaceClassification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceClassification) ProtoMessage() {}

func (x *InterfaceClassification) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceClassification.ProtoReflect.Descriptor instead.
func (*InterfaceClassification) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{1}
}

func (x *InterfaceClassification) GetClassified() bool {
	if x != nil {
		return x.Classified
	}
	return false
}

func (x *InterfaceClassification) GetConnectivityType() ConnectivityType {
	if x != nil {
		return x.ConnectivityType
	}
	return ConnectivityType_CONNECTIVITY_TYPE_UNSPECIFIED
}

func (x *InterfaceClassification) GetNetworkBoundary() NetworkBoundary {
	if x != nil {
		return x.NetworkBoundary
	}
	return NetworkBoundary_NETWORK_BOUNDARY_UNSPECIFIED
}

type ClassifyCounter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	ExternalCount int32                  `protobuf:"varint,2,opt,name=external_count,json=externalCount,proto3" json:"external_count,omitempty"`
	FreePniCount  int32                  `protobuf:"varint,3,opt,name=free_pni_count,json=freePniCount,proto3" json:"free_pni_count,omitempty"`
	IxCount       int32                  `protobuf:"varint,4,opt,name=ix_count,json=ixCount,proto3" json:"ix_count,omitempty"`
	ProviderCount int32                  `protobuf:"varint,5,opt,name=provider_count,json=providerCount,proto3" json:"provider_count,omitempty"`
	TransitCount  int32                  `protobuf:"varint,6,opt,name=transit_count,json=transitCount,proto3" json:"transit_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClassifyCounter) Reset() {
	*x = ClassifyCounter{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClassifyCounter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassifyCounter) ProtoMessage() {}

func (x *ClassifyCounter) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassifyCounter.ProtoReflect.Descriptor instead.
func (*ClassifyCounter) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{2}
}

func (x *ClassifyCounter) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ClassifyCounter) GetExternalCount() int32 {
	if x != nil {
		return x.ExternalCount
	}
	return 0
}

func (x *ClassifyCounter) GetFreePniCount() int32 {
	if x != nil {
		return x.FreePniCount
	}
	return 0
}

func (x *ClassifyCounter) GetIxCount() int32 {
	if x != nil {
		return x.IxCount
	}
	return 0
}

func (x *ClassifyCounter) GetProviderCount() int32 {
	if x != nil {
		return x.ProviderCount
	}
	return 0
}

func (x *ClassifyCounter) GetTransitCount() int32 {
	if x != nil {
		return x.TransitCount
	}
	return 0
}

type InterfaceClassifyInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DeviceId       string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	SnmpId         string                 `protobuf:"bytes,2,opt,name=snmp_id,json=snmpId,proto3" json:"snmp_id,omitempty"`
	SnmpAlias      string                 `protobuf:"bytes,3,opt,name=snmp_alias,json=snmpAlias,proto3" json:"snmp_alias,omitempty"`
	InterfaceIp    string                 `protobuf:"bytes,4,opt,name=interface_ip,json=interfaceIp,proto3" json:"interface_ip,omitempty"`
	InterfaceIpAsn string                 `protobuf:"bytes,5,opt,name=interface_ip_asn,json=interfaceIpAsn,proto3" json:"interface_ip_asn,omitempty"`
	IsInternalIp   bool                   `protobuf:"varint,6,opt,name=is_internal_ip,json=isInternalIp,proto3" json:"is_internal_ip,omitempty"`
	IsInternalAsn  bool                   `protobuf:"varint,7,opt,name=is_internal_asn,json=isInternalAsn,proto3" json:"is_internal_asn,omitempty"`
	TopNexthopAsns []string               `protobuf:"bytes,8,rep,name=top_nexthop_asns,json=topNexthopAsns,proto3" json:"top_nexthop_asns,omitempty"`
	PdbGlobalName  string                 `protobuf:"bytes,9,opt,name=pdb_global_name,json=pdbGlobalName,proto3" json:"pdb_global_name,omitempty"`
	// current classification
	AutoClassification *InterfaceClassification `protobuf:"bytes,10,opt,name=auto_classification,json=autoClassification,proto3" json:"auto_classification,omitempty"`
	// previous classification
	PreviousClassification       *InterfaceClassification `protobuf:"bytes,11,opt,name=previous_classification,json=previousClassification,proto3" json:"previous_classification,omitempty"`
	Provider                     string                   `protobuf:"bytes,12,opt,name=provider,proto3" json:"provider,omitempty"`
	NetworkBoundaryConfidence    int32                    `protobuf:"varint,13,opt,name=network_boundary_confidence,json=networkBoundaryConfidence,proto3" json:"network_boundary_confidence,omitempty"`
	ConnectivityTypeConfidence   int32                    `protobuf:"varint,14,opt,name=connectivity_type_confidence,json=connectivityTypeConfidence,proto3" json:"connectivity_type_confidence,omitempty"`
	ProviderConfidence           int32                    `protobuf:"varint,15,opt,name=provider_confidence,json=providerConfidence,proto3" json:"provider_confidence,omitempty"`
	AutoClassifiedProvider       bool                     `protobuf:"varint,16,opt,name=auto_classified_provider,json=autoClassifiedProvider,proto3" json:"auto_classified_provider,omitempty"`
	PreviouslyClassifiedProvider string                   `protobuf:"bytes,17,opt,name=previously_classified_provider,json=previouslyClassifiedProvider,proto3" json:"previously_classified_provider,omitempty"`
	PreviouslyClassifiedExternal bool                     `protobuf:"varint,18,opt,name=previously_classified_external,json=previouslyClassifiedExternal,proto3" json:"previously_classified_external,omitempty"`
	IpAsnMatched                 bool                     `protobuf:"varint,19,opt,name=ip_asn_matched,json=ipAsnMatched,proto3" json:"ip_asn_matched,omitempty"`
	IxMatched                    bool                     `protobuf:"varint,20,opt,name=ix_matched,json=ixMatched,proto3" json:"ix_matched,omitempty"`
	NexthopMatched               bool                     `protobuf:"varint,21,opt,name=nexthop_matched,json=nexthopMatched,proto3" json:"nexthop_matched,omitempty"`
	ConnectivityTypeMatched      bool                     `protobuf:"varint,22,opt,name=connectivity_type_matched,json=connectivityTypeMatched,proto3" json:"connectivity_type_matched,omitempty"`
	ProviderMatched              bool                     `protobuf:"varint,23,opt,name=provider_matched,json=providerMatched,proto3" json:"provider_matched,omitempty"`
	ChangedClassification        bool                     `protobuf:"varint,24,opt,name=changed_classification,json=changedClassification,proto3" json:"changed_classification,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *InterfaceClassifyInfo) Reset() {
	*x = InterfaceClassifyInfo{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterfaceClassifyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceClassifyInfo) ProtoMessage() {}

func (x *InterfaceClassifyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceClassifyInfo.ProtoReflect.Descriptor instead.
func (*InterfaceClassifyInfo) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{3}
}

func (x *InterfaceClassifyInfo) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *InterfaceClassifyInfo) GetSnmpId() string {
	if x != nil {
		return x.SnmpId
	}
	return ""
}

func (x *InterfaceClassifyInfo) GetSnmpAlias() string {
	if x != nil {
		return x.SnmpAlias
	}
	return ""
}

func (x *InterfaceClassifyInfo) GetInterfaceIp() string {
	if x != nil {
		return x.InterfaceIp
	}
	return ""
}

func (x *InterfaceClassifyInfo) GetInterfaceIpAsn() string {
	if x != nil {
		return x.InterfaceIpAsn
	}
	return ""
}

func (x *InterfaceClassifyInfo) GetIsInternalIp() bool {
	if x != nil {
		return x.IsInternalIp
	}
	return false
}

func (x *InterfaceClassifyInfo) GetIsInternalAsn() bool {
	if x != nil {
		return x.IsInternalAsn
	}
	return false
}

func (x *InterfaceClassifyInfo) GetTopNexthopAsns() []string {
	if x != nil {
		return x.TopNexthopAsns
	}
	return nil
}

func (x *InterfaceClassifyInfo) GetPdbGlobalName() string {
	if x != nil {
		return x.PdbGlobalName
	}
	return ""
}

func (x *InterfaceClassifyInfo) GetAutoClassification() *InterfaceClassification {
	if x != nil {
		return x.AutoClassification
	}
	return nil
}

func (x *InterfaceClassifyInfo) GetPreviousClassification() *InterfaceClassification {
	if x != nil {
		return x.PreviousClassification
	}
	return nil
}

func (x *InterfaceClassifyInfo) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *InterfaceClassifyInfo) GetNetworkBoundaryConfidence() int32 {
	if x != nil {
		return x.NetworkBoundaryConfidence
	}
	return 0
}

func (x *InterfaceClassifyInfo) GetConnectivityTypeConfidence() int32 {
	if x != nil {
		return x.ConnectivityTypeConfidence
	}
	return 0
}

func (x *InterfaceClassifyInfo) GetProviderConfidence() int32 {
	if x != nil {
		return x.ProviderConfidence
	}
	return 0
}

func (x *InterfaceClassifyInfo) GetAutoClassifiedProvider() bool {
	if x != nil {
		return x.AutoClassifiedProvider
	}
	return false
}

func (x *InterfaceClassifyInfo) GetPreviouslyClassifiedProvider() string {
	if x != nil {
		return x.PreviouslyClassifiedProvider
	}
	return ""
}

func (x *InterfaceClassifyInfo) GetPreviouslyClassifiedExternal() bool {
	if x != nil {
		return x.PreviouslyClassifiedExternal
	}
	return false
}

func (x *InterfaceClassifyInfo) GetIpAsnMatched() bool {
	if x != nil {
		return x.IpAsnMatched
	}
	return false
}

func (x *InterfaceClassifyInfo) GetIxMatched() bool {
	if x != nil {
		return x.IxMatched
	}
	return false
}

func (x *InterfaceClassifyInfo) GetNexthopMatched() bool {
	if x != nil {
		return x.NexthopMatched
	}
	return false
}

func (x *InterfaceClassifyInfo) GetConnectivityTypeMatched() bool {
	if x != nil {
		return x.ConnectivityTypeMatched
	}
	return false
}

func (x *InterfaceClassifyInfo) GetProviderMatched() bool {
	if x != nil {
		return x.ProviderMatched
	}
	return false
}

func (x *InterfaceClassifyInfo) GetChangedClassification() bool {
	if x != nil {
		return x.ChangedClassification
	}
	return false
}

type DeviceClassifyInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of device.
	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// Total number of interfaces for this device.
	TotalInterfaces int32 `protobuf:"varint,2,opt,name=total_interfaces,json=totalInterfaces,proto3" json:"total_interfaces,omitempty"`
	// previously_classified_ counts.
	PreviouslyClassifiedCounter *ClassifyCounter `protobuf:"bytes,3,opt,name=previously_classified_counter,json=previouslyClassifiedCounter,proto3" json:"previously_classified_counter,omitempty"`
	// auto_classified_ counts.
	AutoClassifiedCounter        *ClassifyCounter `protobuf:"bytes,4,opt,name=auto_classified_counter,json=autoClassifiedCounter,proto3" json:"auto_classified_counter,omitempty"`
	ChangedClassificationCount   int32            `protobuf:"varint,15,opt,name=changed_classification_count,json=changedClassificationCount,proto3" json:"changed_classification_count,omitempty"`
	IpAsnMatchedCount            int32            `protobuf:"varint,16,opt,name=ip_asn_matched_count,json=ipAsnMatchedCount,proto3" json:"ip_asn_matched_count,omitempty"`
	IxMatchedCount               int32            `protobuf:"varint,17,opt,name=ix_matched_count,json=ixMatchedCount,proto3" json:"ix_matched_count,omitempty"`
	NexthopMatchedCount          int32            `protobuf:"varint,18,opt,name=nexthop_matched_count,json=nexthopMatchedCount,proto3" json:"nexthop_matched_count,omitempty"`
	ConnectivityTypeMatchedCount int32            `protobuf:"varint,19,opt,name=connectivity_type_matched_count,json=connectivityTypeMatchedCount,proto3" json:"connectivity_type_matched_count,omitempty"`
	ProviderMatchedCount         int32            `protobuf:"varint,20,opt,name=provider_matched_count,json=providerMatchedCount,proto3" json:"provider_matched_count,omitempty"`
	// List of interfaces.
	Interfaces    []*InterfaceClassifyInfo `protobuf:"bytes,21,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceClassifyInfo) Reset() {
	*x = DeviceClassifyInfo{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceClassifyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceClassifyInfo) ProtoMessage() {}

func (x *DeviceClassifyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceClassifyInfo.ProtoReflect.Descriptor instead.
func (*DeviceClassifyInfo) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{4}
}

func (x *DeviceClassifyInfo) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceClassifyInfo) GetTotalInterfaces() int32 {
	if x != nil {
		return x.TotalInterfaces
	}
	return 0
}

func (x *DeviceClassifyInfo) GetPreviouslyClassifiedCounter() *ClassifyCounter {
	if x != nil {
		return x.PreviouslyClassifiedCounter
	}
	return nil
}

func (x *DeviceClassifyInfo) GetAutoClassifiedCounter() *ClassifyCounter {
	if x != nil {
		return x.AutoClassifiedCounter
	}
	return nil
}

func (x *DeviceClassifyInfo) GetChangedClassificationCount() int32 {
	if x != nil {
		return x.ChangedClassificationCount
	}
	return 0
}

func (x *DeviceClassifyInfo) GetIpAsnMatchedCount() int32 {
	if x != nil {
		return x.IpAsnMatchedCount
	}
	return 0
}

func (x *DeviceClassifyInfo) GetIxMatchedCount() int32 {
	if x != nil {
		return x.IxMatchedCount
	}
	return 0
}

func (x *DeviceClassifyInfo) GetNexthopMatchedCount() int32 {
	if x != nil {
		return x.NexthopMatchedCount
	}
	return 0
}

func (x *DeviceClassifyInfo) GetConnectivityTypeMatchedCount() int32 {
	if x != nil {
		return x.ConnectivityTypeMatchedCount
	}
	return 0
}

func (x *DeviceClassifyInfo) GetProviderMatchedCount() int32 {
	if x != nil {
		return x.ProviderMatchedCount
	}
	return 0
}

func (x *DeviceClassifyInfo) GetInterfaces() []*InterfaceClassifyInfo {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

// Supports multiple search criteria. Fields are combined to AND statements to perform search.
type InterfaceFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Search text match in interface description and alias.
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// Search by device ID.
	DeviceIds []string `protobuf:"bytes,2,rep,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty"`
	// Search by type of interface connectivity.
	ConnectivityTypes []ConnectivityType `protobuf:"varint,3,rep,packed,name=connectivity_types,json=connectivityTypes,proto3,enum=kentik.interface.v202108alpha1.ConnectivityType" json:"connectivity_types,omitempty"`
	// Search by type of network boundary.
	NetworkBoundaries []NetworkBoundary `protobuf:"varint,4,rep,packed,name=network_boundaries,json=networkBoundaries,proto3,enum=kentik.interface.v202108alpha1.NetworkBoundary" json:"network_boundaries,omitempty"`
	// Search by provider
	Providers []string `protobuf:"bytes,5,rep,name=providers,proto3" json:"providers,omitempty"`
	// SNMP speed in Mbps
	SnmpSpeeds []int32 `protobuf:"varint,6,rep,packed,name=snmp_speeds,json=snmpSpeeds,proto3" json:"snmp_speeds,omitempty"`
	// Search by ip address.
	IpTypes       []IpFilter `protobuf:"varint,7,rep,packed,name=ip_types,json=ipTypes,proto3,enum=kentik.interface.v202108alpha1.IpFilter" json:"ip_types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InterfaceFilter) Reset() {
	*x = InterfaceFilter{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterfaceFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceFilter) ProtoMessage() {}

func (x *InterfaceFilter) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceFilter.ProtoReflect.Descriptor instead.
func (*InterfaceFilter) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{5}
}

func (x *InterfaceFilter) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *InterfaceFilter) GetDeviceIds() []string {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

func (x *InterfaceFilter) GetConnectivityTypes() []ConnectivityType {
	if x != nil {
		return x.ConnectivityTypes
	}
	return nil
}

func (x *InterfaceFilter) GetNetworkBoundaries() []NetworkBoundary {
	if x != nil {
		return x.NetworkBoundaries
	}
	return nil
}

func (x *InterfaceFilter) GetProviders() []string {
	if x != nil {
		return x.Providers
	}
	return nil
}

func (x *InterfaceFilter) GetSnmpSpeeds() []int32 {
	if x != nil {
		return x.SnmpSpeeds
	}
	return nil
}

func (x *InterfaceFilter) GetIpTypes() []IpFilter {
	if x != nil {
		return x.IpTypes
	}
	return nil
}

type AutoClassifyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutoClassifyRequest) Reset() {
	*x = AutoClassifyRequest{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoClassifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoClassifyRequest) ProtoMessage() {}

func (x *AutoClassifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoClassifyRequest.ProtoReflect.Descriptor instead.
func (*AutoClassifyRequest) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{6}
}

type AutoClassifyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Percent of all interfaces taht are auto calssified.
	PercAutoClassified              float64 `protobuf:"fixed64,1,opt,name=perc_auto_classified,json=percAutoClassified,proto3" json:"perc_auto_classified,omitempty"`
	NetChangedTransit               int32   `protobuf:"varint,2,opt,name=net_changed_transit,json=netChangedTransit,proto3" json:"net_changed_transit,omitempty"`
	NetChangedIx                    int32   `protobuf:"varint,3,opt,name=net_changed_ix,json=netChangedIx,proto3" json:"net_changed_ix,omitempty"`
	NetChangedProvider              int32   `protobuf:"varint,4,opt,name=net_changed_provider,json=netChangedProvider,proto3" json:"net_changed_provider,omitempty"`
	TotalChangedClassificationCount int32   `protobuf:"varint,5,opt,name=total_changed_classification_count,json=totalChangedClassificationCount,proto3" json:"total_changed_classification_count,omitempty"`
	TotalAutoClassifyCount          int32   `protobuf:"varint,6,opt,name=total_auto_classify_count,json=totalAutoClassifyCount,proto3" json:"total_auto_classify_count,omitempty"`
	// total_auto_classify_ counts.
	TotalAutoClassifyCounter *ClassifyCounter `protobuf:"bytes,7,opt,name=total_auto_classify_counter,json=totalAutoClassifyCounter,proto3" json:"total_auto_classify_counter,omitempty"`
	// total_previous_ counts.
	TotalPreviousCounter *ClassifyCounter `protobuf:"bytes,8,opt,name=total_previous_counter,json=totalPreviousCounter,proto3" json:"total_previous_counter,omitempty"`
	// Total number of interfaces.
	TotalInterfaces int32 `protobuf:"varint,17,opt,name=total_interfaces,json=totalInterfaces,proto3" json:"total_interfaces,omitempty"`
	// List of devices.
	Devices       []*DeviceClassifyInfo `protobuf:"bytes,18,rep,name=devices,proto3" json:"devices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutoClassifyResponse) Reset() {
	*x = AutoClassifyResponse{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoClassifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoClassifyResponse) ProtoMessage() {}

func (x *AutoClassifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoClassifyResponse.ProtoReflect.Descriptor instead.
func (*AutoClassifyResponse) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{7}
}

func (x *AutoClassifyResponse) GetPercAutoClassified() float64 {
	if x != nil {
		return x.PercAutoClassified
	}
	return 0
}

func (x *AutoClassifyResponse) GetNetChangedTransit() int32 {
	if x != nil {
		return x.NetChangedTransit
	}
	return 0
}

func (x *AutoClassifyResponse) GetNetChangedIx() int32 {
	if x != nil {
		return x.NetChangedIx
	}
	return 0
}

func (x *AutoClassifyResponse) GetNetChangedProvider() int32 {
	if x != nil {
		return x.NetChangedProvider
	}
	return 0
}

func (x *AutoClassifyResponse) GetTotalChangedClassificationCount() int32 {
	if x != nil {
		return x.TotalChangedClassificationCount
	}
	return 0
}

func (x *AutoClassifyResponse) GetTotalAutoClassifyCount() int32 {
	if x != nil {
		return x.TotalAutoClassifyCount
	}
	return 0
}

func (x *AutoClassifyResponse) GetTotalAutoClassifyCounter() *ClassifyCounter {
	if x != nil {
		return x.TotalAutoClassifyCounter
	}
	return nil
}

func (x *AutoClassifyResponse) GetTotalPreviousCounter() *ClassifyCounter {
	if x != nil {
		return x.TotalPreviousCounter
	}
	return nil
}

func (x *AutoClassifyResponse) GetTotalInterfaces() int32 {
	if x != nil {
		return x.TotalInterfaces
	}
	return 0
}

func (x *AutoClassifyResponse) GetDevices() []*DeviceClassifyInfo {
	if x != nil {
		return x.Devices
	}
	return nil
}

// Set connection type, network boundary, and provider of interface id(s) specified.
type ManualClassifyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Interface ids to set the properties.
	InterfaceIds []string `protobuf:"bytes,1,rep,name=interface_ids,json=interfaceIds,proto3" json:"interface_ids,omitempty"`
	// Connection type enum.
	ConnectivityType ConnectivityType `protobuf:"varint,2,opt,name=connectivity_type,json=connectivityType,proto3,enum=kentik.interface.v202108alpha1.ConnectivityType" json:"connectivity_type,omitempty"`
	// Network boundary enum.
	NetworkBoundary NetworkBoundary `protobuf:"varint,3,opt,name=network_boundary,json=networkBoundary,proto3,enum=kentik.interface.v202108alpha1.NetworkBoundary" json:"network_boundary,omitempty"`
	// Network provider.
	Provider      string `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManualClassifyRequest) Reset() {
	*x = ManualClassifyRequest{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManualClassifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualClassifyRequest) ProtoMessage() {}

func (x *ManualClassifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualClassifyRequest.ProtoReflect.Descriptor instead.
func (*ManualClassifyRequest) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{8}
}

func (x *ManualClassifyRequest) GetInterfaceIds() []string {
	if x != nil {
		return x.InterfaceIds
	}
	return nil
}

func (x *ManualClassifyRequest) GetConnectivityType() ConnectivityType {
	if x != nil {
		return x.ConnectivityType
	}
	return ConnectivityType_CONNECTIVITY_TYPE_UNSPECIFIED
}

func (x *ManualClassifyRequest) GetNetworkBoundary() NetworkBoundary {
	if x != nil {
		return x.NetworkBoundary
	}
	return NetworkBoundary_NETWORK_BOUNDARY_UNSPECIFIED
}

func (x *ManualClassifyRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type ManualClassifyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceIds     []string               `protobuf:"bytes,1,rep,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManualClassifyResponse) Reset() {
	*x = ManualClassifyResponse{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManualClassifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualClassifyResponse) ProtoMessage() {}

func (x *ManualClassifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualClassifyResponse.ProtoReflect.Descriptor instead.
func (*ManualClassifyResponse) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{9}
}

func (x *ManualClassifyResponse) GetDeviceIds() []string {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

type ListInterfaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filters       *InterfaceFilter       `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListInterfaceRequest) Reset() {
	*x = ListInterfaceRequest{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInterfaceRequest) ProtoMessage() {}

func (x *ListInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInterfaceRequest.ProtoReflect.Descriptor instead.
func (*ListInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{10}
}

func (x *ListInterfaceRequest) GetFilters() *InterfaceFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ListInterfaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Interfaces    []*Interface           `protobuf:"bytes,1,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	InvalidCount  int32                  `protobuf:"varint,3,opt,name=invalid_count,json=invalidCount,proto3" json:"invalid_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListInterfaceResponse) Reset() {
	*x = ListInterfaceResponse{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListInterfaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInterfaceResponse) ProtoMessage() {}

func (x *ListInterfaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInterfaceResponse.ProtoReflect.Descriptor instead.
func (*ListInterfaceResponse) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{11}
}

func (x *ListInterfaceResponse) GetInterfaces() []*Interface {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *ListInterfaceResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListInterfaceResponse) GetInvalidCount() int32 {
	if x != nil {
		return x.InvalidCount
	}
	return 0
}

type GetInterfaceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of interface.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInterfaceRequest) Reset() {
	*x = GetInterfaceRequest{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInterfaceRequest) ProtoMessage() {}

func (x *GetInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInterfaceRequest.ProtoReflect.Descriptor instead.
func (*GetInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{12}
}

func (x *GetInterfaceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetInterfaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Interface     *Interface             `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInterfaceResponse) Reset() {
	*x = GetInterfaceResponse{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInterfaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInterfaceResponse) ProtoMessage() {}

func (x *GetInterfaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInterfaceResponse.ProtoReflect.Descriptor instead.
func (*GetInterfaceResponse) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{13}
}

func (x *GetInterfaceResponse) GetInterface() *Interface {
	if x != nil {
		return x.Interface
	}
	return nil
}

type CreateInterfaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Interface     *Interface             `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateInterfaceRequest) Reset() {
	*x = CreateInterfaceRequest{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInterfaceRequest) ProtoMessage() {}

func (x *CreateInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInterfaceRequest.ProtoReflect.Descriptor instead.
func (*CreateInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{14}
}

func (x *CreateInterfaceRequest) GetInterface() *Interface {
	if x != nil {
		return x.Interface
	}
	return nil
}

type CreateInterfaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Interface     *Interface             `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateInterfaceResponse) Reset() {
	*x = CreateInterfaceResponse{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateInterfaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInterfaceResponse) ProtoMessage() {}

func (x *CreateInterfaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInterfaceResponse.ProtoReflect.Descriptor instead.
func (*CreateInterfaceResponse) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{15}
}

func (x *CreateInterfaceResponse) GetInterface() *Interface {
	if x != nil {
		return x.Interface
	}
	return nil
}

type UpdateInterfaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Interface     *Interface             `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateInterfaceRequest) Reset() {
	*x = UpdateInterfaceRequest{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInterfaceRequest) ProtoMessage() {}

func (x *UpdateInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInterfaceRequest.ProtoReflect.Descriptor instead.
func (*UpdateInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateInterfaceRequest) GetInterface() *Interface {
	if x != nil {
		return x.Interface
	}
	return nil
}

type UpdateInterfaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Interface     *Interface             `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateInterfaceResponse) Reset() {
	*x = UpdateInterfaceResponse{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateInterfaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInterfaceResponse) ProtoMessage() {}

func (x *UpdateInterfaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInterfaceResponse.ProtoReflect.Descriptor instead.
func (*UpdateInterfaceResponse) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateInterfaceResponse) GetInterface() *Interface {
	if x != nil {
		return x.Interface
	}
	return nil
}

type DeleteInterfaceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of interface.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteInterfaceRequest) Reset() {
	*x = DeleteInterfaceRequest{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInterfaceRequest) ProtoMessage() {}

func (x *DeleteInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInterfaceRequest.ProtoReflect.Descriptor instead.
func (*DeleteInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteInterfaceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteInterfaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteInterfaceResponse) Reset() {
	*x = DeleteInterfaceResponse{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteInterfaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInterfaceResponse) ProtoMessage() {}

func (x *DeleteInterfaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInterfaceResponse.ProtoReflect.Descriptor instead.
func (*DeleteInterfaceResponse) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{19}
}

type Match struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Attribute to match.
	MatchAttribute MatchAttribute `protobuf:"varint,1,opt,name=match_attribute,json=matchAttribute,proto3,enum=kentik.interface.v202108alpha1.MatchAttribute" json:"match_attribute,omitempty"`
	// Match operation.
	MatchOperator Operator `protobuf:"varint,2,opt,name=match_operator,json=matchOperator,proto3,enum=kentik.interface.v202108alpha1.Operator" json:"match_operator,omitempty"`
	// Value to match by.
	Pattern       string `protobuf:"bytes,3,opt,name=pattern,proto3" json:"pattern,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Match) Reset() {
	*x = Match{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Match) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Match) ProtoMessage() {}

func (x *Match) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Match.ProtoReflect.Descriptor instead.
func (*Match) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{20}
}

func (x *Match) GetMatchAttribute() MatchAttribute {
	if x != nil {
		return x.MatchAttribute
	}
	return MatchAttribute_MATCH_ATTRIBUTE_UNSPECIFIED
}

func (x *Match) GetMatchOperator() Operator {
	if x != nil {
		return x.MatchOperator
	}
	return Operator_OPERATOR_UNSPECIFIED
}

func (x *Match) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

// Set the values of the interface property base on match rule defintion. Requires explicit input value, empty string is allow.
type Action struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Set type of connection.
	SetConnectivityType ConnectivityType `protobuf:"varint,1,opt,name=set_connectivity_type,json=setConnectivityType,proto3,enum=kentik.interface.v202108alpha1.ConnectivityType" json:"set_connectivity_type,omitempty"`
	// Set network boundary.
	SetNetworkBoundary NetworkBoundary `protobuf:"varint,2,opt,name=set_network_boundary,json=setNetworkBoundary,proto3,enum=kentik.interface.v202108alpha1.NetworkBoundary" json:"set_network_boundary,omitempty"`
	// Set ASNs.
	SetConnectedAsns string `protobuf:"bytes,3,opt,name=set_connected_asns,json=setConnectedAsns,proto3" json:"set_connected_asns,omitempty"`
	// List of providers available.
	SetProvider   string `protobuf:"bytes,4,opt,name=set_provider,json=setProvider,proto3" json:"set_provider,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Action) Reset() {
	*x = Action{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{21}
}

func (x *Action) GetSetConnectivityType() ConnectivityType {
	if x != nil {
		return x.SetConnectivityType
	}
	return ConnectivityType_CONNECTIVITY_TYPE_UNSPECIFIED
}

func (x *Action) GetSetNetworkBoundary() NetworkBoundary {
	if x != nil {
		return x.SetNetworkBoundary
	}
	return NetworkBoundary_NETWORK_BOUNDARY_UNSPECIFIED
}

func (x *Action) GetSetConnectedAsns() string {
	if x != nil {
		return x.SetConnectedAsns
	}
	return ""
}

func (x *Action) GetSetProvider() string {
	if x != nil {
		return x.SetProvider
	}
	return ""
}

type DeviceFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AllDevices    bool                   `protobuf:"varint,1,opt,name=all_devices,json=allDevices,proto3" json:"all_devices,omitempty"`
	DeviceName    []string               `protobuf:"bytes,2,rep,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	DeviceLabels  []string               `protobuf:"bytes,3,rep,name=device_labels,json=deviceLabels,proto3" json:"device_labels,omitempty"`
	DeviceRules   []string               `protobuf:"bytes,4,rep,name=device_rules,json=deviceRules,proto3" json:"device_rules,omitempty"`
	DeviceTypes   []string               `protobuf:"bytes,5,rep,name=device_types,json=deviceTypes,proto3" json:"device_types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceFilter) Reset() {
	*x = DeviceFilter{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceFilter) ProtoMessage() {}

func (x *DeviceFilter) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceFilter.ProtoReflect.Descriptor instead.
func (*DeviceFilter) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{22}
}

func (x *DeviceFilter) GetAllDevices() bool {
	if x != nil {
		return x.AllDevices
	}
	return false
}

func (x *DeviceFilter) GetDeviceName() []string {
	if x != nil {
		return x.DeviceName
	}
	return nil
}

func (x *DeviceFilter) GetDeviceLabels() []string {
	if x != nil {
		return x.DeviceLabels
	}
	return nil
}

func (x *DeviceFilter) GetDeviceRules() []string {
	if x != nil {
		return x.DeviceRules
	}
	return nil
}

func (x *DeviceFilter) GetDeviceTypes() []string {
	if x != nil {
		return x.DeviceTypes
	}
	return nil
}

type Rule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of interface rule.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Is this rule enable.
	Enabled bool `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Rank order for apply list of rules.
	Rank int32 `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`
	// Rule match criteria.
	MatchClause *Match `protobuf:"bytes,4,opt,name=match_clause,json=matchClause,proto3" json:"match_clause,omitempty"`
	// Action for match rule.
	ActionSet *Action `protobuf:"bytes,5,opt,name=action_set,json=actionSet,proto3" json:"action_set,omitempty"`
	// Create timestamp.
	Cdate *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=cdate,proto3" json:"cdate,omitempty"`
	// Update timestamp.
	Edate *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=edate,proto3" json:"edate,omitempty"`
	// Device inclusive filters.
	IncludedDevices *DeviceFilter `protobuf:"bytes,8,opt,name=included_devices,json=includedDevices,proto3" json:"included_devices,omitempty"`
	// Device exclusive filters.
	ExcludedDevices *DeviceFilter `protobuf:"bytes,9,opt,name=excluded_devices,json=excludedDevices,proto3" json:"excluded_devices,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Rule) Reset() {
	*x = Rule{}
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_interface_v202108alpha1_interface_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP(), []int{23}
}

func (x *Rule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Rule) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Rule) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *Rule) GetMatchClause() *Match {
	if x != nil {
		return x.MatchClause
	}
	return nil
}

func (x *Rule) GetActionSet() *Action {
	if x != nil {
		return x.ActionSet
	}
	return nil
}

func (x *Rule) GetCdate() *timestamppb.Timestamp {
	if x != nil {
		return x.Cdate
	}
	return nil
}

func (x *Rule) GetEdate() *timestamppb.Timestamp {
	if x != nil {
		return x.Edate
	}
	return nil
}

func (x *Rule) GetIncludedDevices() *DeviceFilter {
	if x != nil {
		return x.IncludedDevices
	}
	return nil
}

func (x *Rule) GetExcludedDevices() *DeviceFilter {
	if x != nil {
		return x.ExcludedDevices
	}
	return nil
}

var File_kentik_interface_v202108alpha1_interface_proto protoreflect.FileDescriptor

const file_kentik_interface_v202108alpha1_interface_proto_rawDesc = "" +
	"\n" +
	".kentik/interface/v202108alpha1/interface.proto\x12\x1ekentik.interface.v202108alpha1\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a%kentik/core/v202303/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xad\x0e\n" +
	"\tInterface\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tdevice_id\x18\x02 \x01(\tR\bdeviceId\x12\x17\n" +
	"\asnmp_id\x18\x03 \x01(\tR\x06snmpId\x12\x1d\n" +
	"\n" +
	"snmp_speed\x18\x04 \x01(\x05R\tsnmpSpeed\x12\x1b\n" +
	"\tsnmp_type\x18\x05 \x01(\x05R\bsnmpType\x12\x1d\n" +
	"\n" +
	"snmp_alias\x18\x06 \x01(\tR\tsnmpAlias\x12!\n" +
	"\finterface_ip\x18\a \x01(\tR\vinterfaceIp\x123\n" +
	"\x15interface_description\x18\b \x01(\tR\x14interfaceDescription\x120\n" +
	"\x05cdate\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\x05cdate\x120\n" +
	"\x05edate\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\x05edate\x120\n" +
	"\x14interface_ip_netmask\x18\v \x01(\tR\x12interfaceIpNetmask\x12]\n" +
	"\x11connectivity_type\x18\f \x01(\x0e20.kentik.interface.v202108alpha1.ConnectivityTypeR\x10connectivityType\x12Z\n" +
	"\x10network_boundary\x18\r \x01(\x0e2/.kentik.interface.v202108alpha1.NetworkBoundaryR\x0fnetworkBoundary\x12(\n" +
	"\x10top_nexthop_asns\x18\x0e \x03(\x05R\x0etopNexthopAsns\x12\x1a\n" +
	"\bprovider\x18\x0f \x01(\tR\bprovider\x12`\n" +
	"\rinterface_kvs\x18\x10 \x03(\v2;.kentik.interface.v202108alpha1.Interface.InterfaceKvsEntryR\finterfaceKvs\x12c\n" +
	"\x0einterface_tags\x18\x11 \x03(\v2<.kentik.interface.v202108alpha1.Interface.InterfaceTagsEntryR\rinterfaceTags\x12)\n" +
	"\x10interface_status\x18\x12 \x01(\tR\x0finterfaceStatus\x12W\n" +
	"\n" +
	"extra_info\x18\x13 \x03(\v28.kentik.interface.v202108alpha1.Interface.ExtraInfoEntryR\textraInfo\x12&\n" +
	"\x0finitial_snmp_id\x18\x14 \x01(\tR\rinitialSnmpId\x12,\n" +
	"\x12initial_snmp_alias\x18\x15 \x01(\tR\x10initialSnmpAlias\x12B\n" +
	"\x1dinitial_interface_description\x18\x16 \x01(\tR\x1binitialInterfaceDescription\x12,\n" +
	"\x12initial_snmp_speed\x18\x17 \x01(\x05R\x10initialSnmpSpeed\x12#\n" +
	"\rsecondary_ips\x18\x18 \x01(\tR\fsecondaryIps\x12l\n" +
	"\x19initial_connectivity_type\x18\x19 \x01(\x0e20.kentik.interface.v202108alpha1.ConnectivityTypeR\x17initialConnectivityType\x12i\n" +
	"\x18initial_network_boundary\x18\x1a \x01(\x0e2/.kentik.interface.v202108alpha1.NetworkBoundaryR\x16initialNetworkBoundary\x12)\n" +
	"\x10initial_provider\x18\x1b \x01(\tR\x0finitialProvider\x12\x15\n" +
	"\x06vrf_id\x18\x1c \x01(\tR\x05vrfId\x12D\n" +
	"\x03vrf\x18\x1d \x03(\v22.kentik.interface.v202108alpha1.Interface.VrfEntryR\x03vrf\x1a?\n" +
	"\x11InterfaceKvsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a@\n" +
	"\x12InterfaceTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a<\n" +
	"\x0eExtraInfoEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a6\n" +
	"\bVrfEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf4\x01\n" +
	"\x17InterfaceClassification\x12\x1e\n" +
	"\n" +
	"classified\x18\x01 \x01(\bR\n" +
	"classified\x12]\n" +
	"\x11connectivity_type\x18\x02 \x01(\x0e20.kentik.interface.v202108alpha1.ConnectivityTypeR\x10connectivityType\x12Z\n" +
	"\x10network_boundary\x18\x03 \x01(\x0e2/.kentik.interface.v202108alpha1.NetworkBoundaryR\x0fnetworkBoundary\"\xdb\x01\n" +
	"\x0fClassifyCounter\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\x12%\n" +
	"\x0eexternal_count\x18\x02 \x01(\x05R\rexternalCount\x12$\n" +
	"\x0efree_pni_count\x18\x03 \x01(\x05R\ffreePniCount\x12\x19\n" +
	"\bix_count\x18\x04 \x01(\x05R\aixCount\x12%\n" +
	"\x0eprovider_count\x18\x05 \x01(\x05R\rproviderCount\x12#\n" +
	"\rtransit_count\x18\x06 \x01(\x05R\ftransitCount\"\xd6\t\n" +
	"\x15InterfaceClassifyInfo\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x17\n" +
	"\asnmp_id\x18\x02 \x01(\tR\x06snmpId\x12\x1d\n" +
	"\n" +
	"snmp_alias\x18\x03 \x01(\tR\tsnmpAlias\x12!\n" +
	"\finterface_ip\x18\x04 \x01(\tR\vinterfaceIp\x12(\n" +
	"\x10interface_ip_asn\x18\x05 \x01(\tR\x0einterfaceIpAsn\x12$\n" +
	"\x0eis_internal_ip\x18\x06 \x01(\bR\fisInternalIp\x12&\n" +
	"\x0fis_internal_asn\x18\a \x01(\bR\risInternalAsn\x12(\n" +
	"\x10top_nexthop_asns\x18\b \x03(\tR\x0etopNexthopAsns\x12&\n" +
	"\x0fpdb_global_name\x18\t \x01(\tR\rpdbGlobalName\x12h\n" +
	"\x13auto_classification\x18\n" +
	" \x01(\v27.kentik.interface.v202108alpha1.InterfaceClassificationR\x12autoClassification\x12p\n" +
	"\x17previous_classification\x18\v \x01(\v27.kentik.interface.v202108alpha1.InterfaceClassificationR\x16previousClassification\x12\x1a\n" +
	"\bprovider\x18\f \x01(\tR\bprovider\x12>\n" +
	"\x1bnetwork_boundary_confidence\x18\r \x01(\x05R\x19networkBoundaryConfidence\x12@\n" +
	"\x1cconnectivity_type_confidence\x18\x0e \x01(\x05R\x1aconnectivityTypeConfidence\x12/\n" +
	"\x13provider_confidence\x18\x0f \x01(\x05R\x12providerConfidence\x128\n" +
	"\x18auto_classified_provider\x18\x10 \x01(\bR\x16autoClassifiedProvider\x12D\n" +
	"\x1epreviously_classified_provider\x18\x11 \x01(\tR\x1cpreviouslyClassifiedProvider\x12D\n" +
	"\x1epreviously_classified_external\x18\x12 \x01(\bR\x1cpreviouslyClassifiedExternal\x12$\n" +
	"\x0eip_asn_matched\x18\x13 \x01(\bR\fipAsnMatched\x12\x1d\n" +
	"\n" +
	"ix_matched\x18\x14 \x01(\bR\tixMatched\x12'\n" +
	"\x0fnexthop_matched\x18\x15 \x01(\bR\x0enexthopMatched\x12:\n" +
	"\x19connectivity_type_matched\x18\x16 \x01(\bR\x17connectivityTypeMatched\x12)\n" +
	"\x10provider_matched\x18\x17 \x01(\bR\x0fproviderMatched\x125\n" +
	"\x16changed_classification\x18\x18 \x01(\bR\x15changedClassification\"\xdf\x05\n" +
	"\x12DeviceClassifyInfo\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12)\n" +
	"\x10total_interfaces\x18\x02 \x01(\x05R\x0ftotalInterfaces\x12s\n" +
	"\x1dpreviously_classified_counter\x18\x03 \x01(\v2/.kentik.interface.v202108alpha1.ClassifyCounterR\x1bpreviouslyClassifiedCounter\x12g\n" +
	"\x17auto_classified_counter\x18\x04 \x01(\v2/.kentik.interface.v202108alpha1.ClassifyCounterR\x15autoClassifiedCounter\x12@\n" +
	"\x1cchanged_classification_count\x18\x0f \x01(\x05R\x1achangedClassificationCount\x12/\n" +
	"\x14ip_asn_matched_count\x18\x10 \x01(\x05R\x11ipAsnMatchedCount\x12(\n" +
	"\x10ix_matched_count\x18\x11 \x01(\x05R\x0eixMatchedCount\x122\n" +
	"\x15nexthop_matched_count\x18\x12 \x01(\x05R\x13nexthopMatchedCount\x12E\n" +
	"\x1fconnectivity_type_matched_count\x18\x13 \x01(\x05R\x1cconnectivityTypeMatchedCount\x124\n" +
	"\x16provider_matched_count\x18\x14 \x01(\x05R\x14providerMatchedCount\x12U\n" +
	"\n" +
	"interfaces\x18\x15 \x03(\v25.kentik.interface.v202108alpha1.InterfaceClassifyInfoR\n" +
	"interfaces\"\x89\x03\n" +
	"\x0fInterfaceFilter\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x1d\n" +
	"\n" +
	"device_ids\x18\x02 \x03(\tR\tdeviceIds\x12_\n" +
	"\x12connectivity_types\x18\x03 \x03(\x0e20.kentik.interface.v202108alpha1.ConnectivityTypeR\x11connectivityTypes\x12^\n" +
	"\x12network_boundaries\x18\x04 \x03(\x0e2/.kentik.interface.v202108alpha1.NetworkBoundaryR\x11networkBoundaries\x12\x1c\n" +
	"\tproviders\x18\x05 \x03(\tR\tproviders\x12\x1f\n" +
	"\vsnmp_speeds\x18\x06 \x03(\x05R\n" +
	"snmpSpeeds\x12C\n" +
	"\bip_types\x18\a \x03(\x0e2(.kentik.interface.v202108alpha1.IpFilterR\aipTypes\"\x15\n" +
	"\x13AutoClassifyRequest\"\xa8\x05\n" +
	"\x14AutoClassifyResponse\x120\n" +
	"\x14perc_auto_classified\x18\x01 \x01(\x01R\x12percAutoClassified\x12.\n" +
	"\x13net_changed_transit\x18\x02 \x01(\x05R\x11netChangedTransit\x12$\n" +
	"\x0enet_changed_ix\x18\x03 \x01(\x05R\fnetChangedIx\x120\n" +
	"\x14net_changed_provider\x18\x04 \x01(\x05R\x12netChangedProvider\x12K\n" +
	"\"total_changed_classification_count\x18\x05 \x01(\x05R\x1ftotalChangedClassificationCount\x129\n" +
	"\x19total_auto_classify_count\x18\x06 \x01(\x05R\x16totalAutoClassifyCount\x12n\n" +
	"\x1btotal_auto_classify_counter\x18\a \x01(\v2/.kentik.interface.v202108alpha1.ClassifyCounterR\x18totalAutoClassifyCounter\x12e\n" +
	"\x16total_previous_counter\x18\b \x01(\v2/.kentik.interface.v202108alpha1.ClassifyCounterR\x14totalPreviousCounter\x12)\n" +
	"\x10total_interfaces\x18\x11 \x01(\x05R\x0ftotalInterfaces\x12L\n" +
	"\adevices\x18\x12 \x03(\v22.kentik.interface.v202108alpha1.DeviceClassifyInfoR\adevices\"\x93\x02\n" +
	"\x15ManualClassifyRequest\x12#\n" +
	"\rinterface_ids\x18\x01 \x03(\tR\finterfaceIds\x12]\n" +
	"\x11connectivity_type\x18\x02 \x01(\x0e20.kentik.interface.v202108alpha1.ConnectivityTypeR\x10connectivityType\x12Z\n" +
	"\x10network_boundary\x18\x03 \x01(\x0e2/.kentik.interface.v202108alpha1.NetworkBoundaryR\x0fnetworkBoundary\x12\x1a\n" +
	"\bprovider\x18\x04 \x01(\tR\bprovider\"7\n" +
	"\x16ManualClassifyResponse\x12\x1d\n" +
	"\n" +
	"device_ids\x18\x01 \x03(\tR\tdeviceIds\"a\n" +
	"\x14ListInterfaceRequest\x12I\n" +
	"\afilters\x18\x01 \x01(\v2/.kentik.interface.v202108alpha1.InterfaceFilterR\afilters\"\xa8\x01\n" +
	"\x15ListInterfaceResponse\x12I\n" +
	"\n" +
	"interfaces\x18\x01 \x03(\v2).kentik.interface.v202108alpha1.InterfaceR\n" +
	"interfaces\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12#\n" +
	"\rinvalid_count\x18\x03 \x01(\x05R\finvalidCount\"%\n" +
	"\x13GetInterfaceRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"_\n" +
	"\x14GetInterfaceResponse\x12G\n" +
	"\tinterface\x18\x01 \x01(\v2).kentik.interface.v202108alpha1.InterfaceR\tinterface\"a\n" +
	"\x16CreateInterfaceRequest\x12G\n" +
	"\tinterface\x18\x01 \x01(\v2).kentik.interface.v202108alpha1.InterfaceR\tinterface\"b\n" +
	"\x17CreateInterfaceResponse\x12G\n" +
	"\tinterface\x18\x01 \x01(\v2).kentik.interface.v202108alpha1.InterfaceR\tinterface\"a\n" +
	"\x16UpdateInterfaceRequest\x12G\n" +
	"\tinterface\x18\x01 \x01(\v2).kentik.interface.v202108alpha1.InterfaceR\tinterface\"b\n" +
	"\x17UpdateInterfaceResponse\x12G\n" +
	"\tinterface\x18\x01 \x01(\v2).kentik.interface.v202108alpha1.InterfaceR\tinterface\"(\n" +
	"\x16DeleteInterfaceRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x19\n" +
	"\x17DeleteInterfaceResponse\"\xcb\x01\n" +
	"\x05Match\x12W\n" +
	"\x0fmatch_attribute\x18\x01 \x01(\x0e2..kentik.interface.v202108alpha1.MatchAttributeR\x0ematchAttribute\x12O\n" +
	"\x0ematch_operator\x18\x02 \x01(\x0e2(.kentik.interface.v202108alpha1.OperatorR\rmatchOperator\x12\x18\n" +
	"\apattern\x18\x03 \x01(\tR\apattern\"\xa2\x02\n" +
	"\x06Action\x12d\n" +
	"\x15set_connectivity_type\x18\x01 \x01(\x0e20.kentik.interface.v202108alpha1.ConnectivityTypeR\x13setConnectivityType\x12a\n" +
	"\x14set_network_boundary\x18\x02 \x01(\x0e2/.kentik.interface.v202108alpha1.NetworkBoundaryR\x12setNetworkBoundary\x12,\n" +
	"\x12set_connected_asns\x18\x03 \x01(\tR\x10setConnectedAsns\x12!\n" +
	"\fset_provider\x18\x04 \x01(\tR\vsetProvider\"\xbb\x01\n" +
	"\fDeviceFilter\x12\x1f\n" +
	"\vall_devices\x18\x01 \x01(\bR\n" +
	"allDevices\x12\x1f\n" +
	"\vdevice_name\x18\x02 \x03(\tR\n" +
	"deviceName\x12#\n" +
	"\rdevice_labels\x18\x03 \x03(\tR\fdeviceLabels\x12!\n" +
	"\fdevice_rules\x18\x04 \x03(\tR\vdeviceRules\x12!\n" +
	"\fdevice_types\x18\x05 \x03(\tR\vdeviceTypes\"\xeb\x03\n" +
	"\x04Rule\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aenabled\x18\x02 \x01(\bR\aenabled\x12\x12\n" +
	"\x04rank\x18\x03 \x01(\x05R\x04rank\x12H\n" +
	"\fmatch_clause\x18\x04 \x01(\v2%.kentik.interface.v202108alpha1.MatchR\vmatchClause\x12E\n" +
	"\n" +
	"action_set\x18\x05 \x01(\v2&.kentik.interface.v202108alpha1.ActionR\tactionSet\x120\n" +
	"\x05cdate\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x05cdate\x120\n" +
	"\x05edate\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x05edate\x12W\n" +
	"\x10included_devices\x18\b \x01(\v2,.kentik.interface.v202108alpha1.DeviceFilterR\x0fincludedDevices\x12W\n" +
	"\x10excluded_devices\x18\t \x01(\v2,.kentik.interface.v202108alpha1.DeviceFilterR\x0fexcludedDevices*\x98\x06\n" +
	"\x10ConnectivityType\x12!\n" +
	"\x1dCONNECTIVITY_TYPE_UNSPECIFIED\x10\x00\x12.\n" +
	"*CONNECTIVITY_TYPE_AGGREGATION_INTERCONNECT\x10\x01\x12\x1f\n" +
	"\x1bCONNECTIVITY_TYPE_AVAILABLE\x10\x02\x12\x1e\n" +
	"\x1aCONNECTIVITY_TYPE_BACKBONE\x10\x03\x12(\n" +
	"$CONNECTIVITY_TYPE_CLOUD_INTERCONNECT\x10\x04\x12\x1e\n" +
	"\x1aCONNECTIVITY_TYPE_CUSTOMER\x10\x05\x12'\n" +
	"#CONNECTIVITY_TYPE_DATACENTER_FABRIC\x10\x06\x12-\n" +
	")CONNECTIVITY_TYPE_DATACENTER_INTERCONNECT\x10\a\x12$\n" +
	" CONNECTIVITY_TYPE_EMBEDDED_CACHE\x10\b\x12\x1e\n" +
	"\x1aCONNECTIVITY_TYPE_FREE_PNI\x10\t\x12\x1a\n" +
	"\x16CONNECTIVITY_TYPE_HOST\x10\n" +
	"\x12\x18\n" +
	"\x14CONNECTIVITY_TYPE_IX\x10\v\x12\x1b\n" +
	"\x17CONNECTIVITY_TYPE_OTHER\x10\f\x12\x1e\n" +
	"\x1aCONNECTIVITY_TYPE_PAID_PNI\x10\r\x12\x1e\n" +
	"\x1aCONNECTIVITY_TYPE_RESERVED\x10\x0e\x12\x1d\n" +
	"\x19CONNECTIVITY_TYPE_TRANSIT\x10\x0f\x12+\n" +
	"'CONNECTIVITY_TYPE_VIRTUAL_CROSS_CONNECT\x10\x10\x12&\n" +
	"\"CONNECTIVITY_TYPE_IPX_INTERCONNECT\x10\x11\x12&\n" +
	"\"CONNECTIVITY_TYPE_SIP_INTERCONNECT\x10\x12\x12\x1e\n" +
	"\x1aCONNECTIVITY_TYPE_DDOS_EXT\x10\x13\x12\x1e\n" +
	"\x1aCONNECTIVITY_TYPE_DDOS_INT\x10\x14\x12\x19\n" +
	"\x15CONNECTIVITY_TYPE_MGT\x10\x15*\xa7\x01\n" +
	"\x0fNetworkBoundary\x12 \n" +
	"\x1cNETWORK_BOUNDARY_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15NETWORK_BOUNDARY_AUTO\x10\x01\x12\x1d\n" +
	"\x19NETWORK_BOUNDARY_INTERNAL\x10\x02\x12\x1d\n" +
	"\x19NETWORK_BOUNDARY_EXTERNAL\x10\x03\x12\x19\n" +
	"\x15NETWORK_BOUNDARY_NONE\x10\x04*g\n" +
	"\bIpFilter\x12\x19\n" +
	"\x15IP_FILTER_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11IP_FILTER_PRIVATE\x10\x01\x12\x14\n" +
	"\x10IP_FILTER_PUBLIC\x10\x02\x12\x13\n" +
	"\x0fIP_FILTER_UNSET\x10\x03*\x9e\x01\n" +
	"\x0eMatchAttribute\x12\x1f\n" +
	"\x1bMATCH_ATTRIBUTE_UNSPECIFIED\x10\x00\x12)\n" +
	"%MATCH_ATTRIBUTE_INTERFACE_DESCRIPTION\x10\x01\x12\x1e\n" +
	"\x1aMATCH_ATTRIBUTE_SNMP_ALIAS\x10\x02\x12 \n" +
	"\x1cMATCH_ATTRIBUTE_INTERFACE_IP\x10\x03*\xd1\x01\n" +
	"\bOperator\x12\x18\n" +
	"\x14OPERATOR_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fOPERATOR_EQUALS\x10\x01\x12\x15\n" +
	"\x11OPERATOR_CONTAINS\x10\x02\x12\x12\n" +
	"\x0eOPERATOR_REGEX\x10\x03\x12 \n" +
	"\x1cOPERATOR_CONTAINED_IN_SUBNET\x10\x04\x12\x19\n" +
	"\x15OPERATOR_IS_PUBLIC_IP\x10\x05\x12\x1a\n" +
	"\x16OPERATOR_IS_PRIVATE_IP\x10\x06\x12\x12\n" +
	"\x0eOPERATOR_NO_IP\x10\a2\xc5\x0e\n" +
	"\x10InterfaceService\x12\xa7\x02\n" +
	"\x0eManualClassify\x125.kentik.interface.v202108alpha1.ManualClassifyRequest\x1a6.kentik.interface.v202108alpha1.ManualClassifyResponse\"\xa5\x01\x92AV\x12\x19Manual Classify Interface\x1a)Manually set interface(s) classification.*\x0eManualClassify\xf2\xd7\x02\x15admin.interface:write\x82\xd3\xe4\x93\x02-:\x01*\"(/interface/v202108alpha1/manual_classify\x12\xa0\x02\n" +
	"\rListInterface\x124.kentik.interface.v202108alpha1.ListInterfaceRequest\x1a5.kentik.interface.v202108alpha1.ListInterfaceResponse\"\xa1\x01\x92A[\x12\x17Fetch Search Interfaces\x1a1Return list of interfaces matches search critera.*\rListInterface\xf2\xd7\x02\x14admin.interface:read\x82\xd3\xe4\x93\x02%\x12#/interface/v202108alpha1/interfaces\x12\xa1\x02\n" +
	"\fGetInterface\x123.kentik.interface.v202108alpha1.GetInterfaceRequest\x1a4.kentik.interface.v202108alpha1.GetInterfaceResponse\"\xa5\x01\x92AZ\x12\x10Get a interface.\x1a8Returns information about a interface specified with ID.*\fInterfaceGet\xf2\xd7\x02\x14admin.interface:read\x82\xd3\xe4\x93\x02*\x12(/interface/v202108alpha1/interfaces/{id}\x12\xa8\x02\n" +
	"\x0fCreateInterface\x126.kentik.interface.v202108alpha1.CreateInterfaceRequest\x1a7.kentik.interface.v202108alpha1.CreateInterfaceResponse\"\xa3\x01\x92AY\x12\x13Create a interface.\x1a1Create a interface from request. returns created.*\x0fInterfaceCreate\xf2\xd7\x02\x15admin.interface:write\x82\xd3\xe4\x93\x02(:\x01*\"#/interface/v202108alpha1/interfaces\x12\xc1\x02\n" +
	"\x0fUpdateInterface\x126.kentik.interface.v202108alpha1.UpdateInterfaceRequest\x1a7.kentik.interface.v202108alpha1.UpdateInterfaceResponse\"\xbc\x01\x92Ac\x12\x13Update a interface.\x1a;Replaces the entire interface attributes specified with id.*\x0fInterfaceUpdate\xf2\xd7\x02\x15admin.interface:write\x82\xd3\xe4\x93\x027:\x01*\x1a2/interface/v202108alpha1/interfaces/{interface.id}\x12\xa1\x02\n" +
	"\x0fDeleteInterface\x126.kentik.interface.v202108alpha1.DeleteInterfaceRequest\x1a7.kentik.interface.v202108alpha1.DeleteInterfaceResponse\"\x9c\x01\x92AP\x12\x13Delete a interface.\x1a(Deletes the interface specified with id.*\x0fInterfaceDelete\xf2\xd7\x02\x15admin.interface:write\x82\xd3\xe4\x93\x02**(/interface/v202108alpha1/interfaces/{id}\x1a-\xcaA\x13grpc.api.kentik.com\xea\xd7\x02\x0fadmin.interface\x90\xd8\x02\x03B\xca\x02\x92A\xf5\x01\x127\n" +
	"\rInterface API\"\x18\n" +
	"\x16Kentik API Engineering2\f202108alpha1*\x01\x022\x10application/json:\x10application/jsonZD\n" +
	"\x1e\n" +
	"\x05email\x12\x15\b\x02\x1a\x0fX-CH-Auth-Email \x02\n" +
	"\"\n" +
	"\x05token\x12\x19\b\x02\x1a\x13X-CH-Auth-API-Token \x02b\x16\n" +
	"\t\n" +
	"\x05email\x12\x00\n" +
	"\t\n" +
	"\x05token\x12\x00r5\n" +
	"\x16More about Kentik APIs\x12\x1bhttps://docs.kentik.com/apiZOgithub.com/kentik/api-schema-public/gen/go/kentik/interface/v202108alpha1;ifaceb\x06proto3"

var (
	file_kentik_interface_v202108alpha1_interface_proto_rawDescOnce sync.Once
	file_kentik_interface_v202108alpha1_interface_proto_rawDescData []byte
)

func file_kentik_interface_v202108alpha1_interface_proto_rawDescGZIP() []byte {
	file_kentik_interface_v202108alpha1_interface_proto_rawDescOnce.Do(func() {
		file_kentik_interface_v202108alpha1_interface_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kentik_interface_v202108alpha1_interface_proto_rawDesc), len(file_kentik_interface_v202108alpha1_interface_proto_rawDesc)))
	})
	return file_kentik_interface_v202108alpha1_interface_proto_rawDescData
}

var file_kentik_interface_v202108alpha1_interface_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_kentik_interface_v202108alpha1_interface_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_kentik_interface_v202108alpha1_interface_proto_goTypes = []any{
	(ConnectivityType)(0),           // 0: kentik.interface.v202108alpha1.ConnectivityType
	(NetworkBoundary)(0),            // 1: kentik.interface.v202108alpha1.NetworkBoundary
	(IpFilter)(0),                   // 2: kentik.interface.v202108alpha1.IpFilter
	(MatchAttribute)(0),             // 3: kentik.interface.v202108alpha1.MatchAttribute
	(Operator)(0),                   // 4: kentik.interface.v202108alpha1.Operator
	(*Interface)(nil),               // 5: kentik.interface.v202108alpha1.Interface
	(*InterfaceClassification)(nil), // 6: kentik.interface.v202108alpha1.InterfaceClassification
	(*ClassifyCounter)(nil),         // 7: kentik.interface.v202108alpha1.ClassifyCounter
	(*InterfaceClassifyInfo)(nil),   // 8: kentik.interface.v202108alpha1.InterfaceClassifyInfo
	(*DeviceClassifyInfo)(nil),      // 9: kentik.interface.v202108alpha1.DeviceClassifyInfo
	(*InterfaceFilter)(nil),         // 10: kentik.interface.v202108alpha1.InterfaceFilter
	(*AutoClassifyRequest)(nil),     // 11: kentik.interface.v202108alpha1.AutoClassifyRequest
	(*AutoClassifyResponse)(nil),    // 12: kentik.interface.v202108alpha1.AutoClassifyResponse
	(*ManualClassifyRequest)(nil),   // 13: kentik.interface.v202108alpha1.ManualClassifyRequest
	(*ManualClassifyResponse)(nil),  // 14: kentik.interface.v202108alpha1.ManualClassifyResponse
	(*ListInterfaceRequest)(nil),    // 15: kentik.interface.v202108alpha1.ListInterfaceRequest
	(*ListInterfaceResponse)(nil),   // 16: kentik.interface.v202108alpha1.ListInterfaceResponse
	(*GetInterfaceRequest)(nil),     // 17: kentik.interface.v202108alpha1.GetInterfaceRequest
	(*GetInterfaceResponse)(nil),    // 18: kentik.interface.v202108alpha1.GetInterfaceResponse
	(*CreateInterfaceRequest)(nil),  // 19: kentik.interface.v202108alpha1.CreateInterfaceRequest
	(*CreateInterfaceResponse)(nil), // 20: kentik.interface.v202108alpha1.CreateInterfaceResponse
	(*UpdateInterfaceRequest)(nil),  // 21: kentik.interface.v202108alpha1.UpdateInterfaceRequest
	(*UpdateInterfaceResponse)(nil), // 22: kentik.interface.v202108alpha1.UpdateInterfaceResponse
	(*DeleteInterfaceRequest)(nil),  // 23: kentik.interface.v202108alpha1.DeleteInterfaceRequest
	(*DeleteInterfaceResponse)(nil), // 24: kentik.interface.v202108alpha1.DeleteInterfaceResponse
	(*Match)(nil),                   // 25: kentik.interface.v202108alpha1.Match
	(*Action)(nil),                  // 26: kentik.interface.v202108alpha1.Action
	(*DeviceFilter)(nil),            // 27: kentik.interface.v202108alpha1.DeviceFilter
	(*Rule)(nil),                    // 28: kentik.interface.v202108alpha1.Rule
	nil,                             // 29: kentik.interface.v202108alpha1.Interface.InterfaceKvsEntry
	nil,                             // 30: kentik.interface.v202108alpha1.Interface.InterfaceTagsEntry
	nil,                             // 31: kentik.interface.v202108alpha1.Interface.ExtraInfoEntry
	nil,                             // 32: kentik.interface.v202108alpha1.Interface.VrfEntry
	(*timestamppb.Timestamp)(nil),   // 33: google.protobuf.Timestamp
}
var file_kentik_interface_v202108alpha1_interface_proto_depIdxs = []int32{
	33, // 0: kentik.interface.v202108alpha1.Interface.cdate:type_name -> google.protobuf.Timestamp
	33, // 1: kentik.interface.v202108alpha1.Interface.edate:type_name -> google.protobuf.Timestamp
	0,  // 2: kentik.interface.v202108alpha1.Interface.connectivity_type:type_name -> kentik.interface.v202108alpha1.ConnectivityType
	1,  // 3: kentik.interface.v202108alpha1.Interface.network_boundary:type_name -> kentik.interface.v202108alpha1.NetworkBoundary
	29, // 4: kentik.interface.v202108alpha1.Interface.interface_kvs:type_name -> kentik.interface.v202108alpha1.Interface.InterfaceKvsEntry
	30, // 5: kentik.interface.v202108alpha1.Interface.interface_tags:type_name -> kentik.interface.v202108alpha1.Interface.InterfaceTagsEntry
	31, // 6: kentik.interface.v202108alpha1.Interface.extra_info:type_name -> kentik.interface.v202108alpha1.Interface.ExtraInfoEntry
	0,  // 7: kentik.interface.v202108alpha1.Interface.initial_connectivity_type:type_name -> kentik.interface.v202108alpha1.ConnectivityType
	1,  // 8: kentik.interface.v202108alpha1.Interface.initial_network_boundary:type_name -> kentik.interface.v202108alpha1.NetworkBoundary
	32, // 9: kentik.interface.v202108alpha1.Interface.vrf:type_name -> kentik.interface.v202108alpha1.Interface.VrfEntry
	0,  // 10: kentik.interface.v202108alpha1.InterfaceClassification.connectivity_type:type_name -> kentik.interface.v202108alpha1.ConnectivityType
	1,  // 11: kentik.interface.v202108alpha1.InterfaceClassification.network_boundary:type_name -> kentik.interface.v202108alpha1.NetworkBoundary
	6,  // 12: kentik.interface.v202108alpha1.InterfaceClassifyInfo.auto_classification:type_name -> kentik.interface.v202108alpha1.InterfaceClassification
	6,  // 13: kentik.interface.v202108alpha1.InterfaceClassifyInfo.previous_classification:type_name -> kentik.interface.v202108alpha1.InterfaceClassification
	7,  // 14: kentik.interface.v202108alpha1.DeviceClassifyInfo.previously_classified_counter:type_name -> kentik.interface.v202108alpha1.ClassifyCounter
	7,  // 15: kentik.interface.v202108alpha1.DeviceClassifyInfo.auto_classified_counter:type_name -> kentik.interface.v202108alpha1.ClassifyCounter
	8,  // 16: kentik.interface.v202108alpha1.DeviceClassifyInfo.interfaces:type_name -> kentik.interface.v202108alpha1.InterfaceClassifyInfo
	0,  // 17: kentik.interface.v202108alpha1.InterfaceFilter.connectivity_types:type_name -> kentik.interface.v202108alpha1.ConnectivityType
	1,  // 18: kentik.interface.v202108alpha1.InterfaceFilter.network_boundaries:type_name -> kentik.interface.v202108alpha1.NetworkBoundary
	2,  // 19: kentik.interface.v202108alpha1.InterfaceFilter.ip_types:type_name -> kentik.interface.v202108alpha1.IpFilter
	7,  // 20: kentik.interface.v202108alpha1.AutoClassifyResponse.total_auto_classify_counter:type_name -> kentik.interface.v202108alpha1.ClassifyCounter
	7,  // 21: kentik.interface.v202108alpha1.AutoClassifyResponse.total_previous_counter:type_name -> kentik.interface.v202108alpha1.ClassifyCounter
	9,  // 22: kentik.interface.v202108alpha1.AutoClassifyResponse.devices:type_name -> kentik.interface.v202108alpha1.DeviceClassifyInfo
	0,  // 23: kentik.interface.v202108alpha1.ManualClassifyRequest.connectivity_type:type_name -> kentik.interface.v202108alpha1.ConnectivityType
	1,  // 24: kentik.interface.v202108alpha1.ManualClassifyRequest.network_boundary:type_name -> kentik.interface.v202108alpha1.NetworkBoundary
	10, // 25: kentik.interface.v202108alpha1.ListInterfaceRequest.filters:type_name -> kentik.interface.v202108alpha1.InterfaceFilter
	5,  // 26: kentik.interface.v202108alpha1.ListInterfaceResponse.interfaces:type_name -> kentik.interface.v202108alpha1.Interface
	5,  // 27: kentik.interface.v202108alpha1.GetInterfaceResponse.interface:type_name -> kentik.interface.v202108alpha1.Interface
	5,  // 28: kentik.interface.v202108alpha1.CreateInterfaceRequest.interface:type_name -> kentik.interface.v202108alpha1.Interface
	5,  // 29: kentik.interface.v202108alpha1.CreateInterfaceResponse.interface:type_name -> kentik.interface.v202108alpha1.Interface
	5,  // 30: kentik.interface.v202108alpha1.UpdateInterfaceRequest.interface:type_name -> kentik.interface.v202108alpha1.Interface
	5,  // 31: kentik.interface.v202108alpha1.UpdateInterfaceResponse.interface:type_name -> kentik.interface.v202108alpha1.Interface
	3,  // 32: kentik.interface.v202108alpha1.Match.match_attribute:type_name -> kentik.interface.v202108alpha1.MatchAttribute
	4,  // 33: kentik.interface.v202108alpha1.Match.match_operator:type_name -> kentik.interface.v202108alpha1.Operator
	0,  // 34: kentik.interface.v202108alpha1.Action.set_connectivity_type:type_name -> kentik.interface.v202108alpha1.ConnectivityType
	1,  // 35: kentik.interface.v202108alpha1.Action.set_network_boundary:type_name -> kentik.interface.v202108alpha1.NetworkBoundary
	25, // 36: kentik.interface.v202108alpha1.Rule.match_clause:type_name -> kentik.interface.v202108alpha1.Match
	26, // 37: kentik.interface.v202108alpha1.Rule.action_set:type_name -> kentik.interface.v202108alpha1.Action
	33, // 38: kentik.interface.v202108alpha1.Rule.cdate:type_name -> google.protobuf.Timestamp
	33, // 39: kentik.interface.v202108alpha1.Rule.edate:type_name -> google.protobuf.Timestamp
	27, // 40: kentik.interface.v202108alpha1.Rule.included_devices:type_name -> kentik.interface.v202108alpha1.DeviceFilter
	27, // 41: kentik.interface.v202108alpha1.Rule.excluded_devices:type_name -> kentik.interface.v202108alpha1.DeviceFilter
	13, // 42: kentik.interface.v202108alpha1.InterfaceService.ManualClassify:input_type -> kentik.interface.v202108alpha1.ManualClassifyRequest
	15, // 43: kentik.interface.v202108alpha1.InterfaceService.ListInterface:input_type -> kentik.interface.v202108alpha1.ListInterfaceRequest
	17, // 44: kentik.interface.v202108alpha1.InterfaceService.GetInterface:input_type -> kentik.interface.v202108alpha1.GetInterfaceRequest
	19, // 45: kentik.interface.v202108alpha1.InterfaceService.CreateInterface:input_type -> kentik.interface.v202108alpha1.CreateInterfaceRequest
	21, // 46: kentik.interface.v202108alpha1.InterfaceService.UpdateInterface:input_type -> kentik.interface.v202108alpha1.UpdateInterfaceRequest
	23, // 47: kentik.interface.v202108alpha1.InterfaceService.DeleteInterface:input_type -> kentik.interface.v202108alpha1.DeleteInterfaceRequest
	14, // 48: kentik.interface.v202108alpha1.InterfaceService.ManualClassify:output_type -> kentik.interface.v202108alpha1.ManualClassifyResponse
	16, // 49: kentik.interface.v202108alpha1.InterfaceService.ListInterface:output_type -> kentik.interface.v202108alpha1.ListInterfaceResponse
	18, // 50: kentik.interface.v202108alpha1.InterfaceService.GetInterface:output_type -> kentik.interface.v202108alpha1.GetInterfaceResponse
	20, // 51: kentik.interface.v202108alpha1.InterfaceService.CreateInterface:output_type -> kentik.interface.v202108alpha1.CreateInterfaceResponse
	22, // 52: kentik.interface.v202108alpha1.InterfaceService.UpdateInterface:output_type -> kentik.interface.v202108alpha1.UpdateInterfaceResponse
	24, // 53: kentik.interface.v202108alpha1.InterfaceService.DeleteInterface:output_type -> kentik.interface.v202108alpha1.DeleteInterfaceResponse
	48, // [48:54] is the sub-list for method output_type
	42, // [42:48] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_kentik_interface_v202108alpha1_interface_proto_init() }
func file_kentik_interface_v202108alpha1_interface_proto_init() {
	if File_kentik_interface_v202108alpha1_interface_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kentik_interface_v202108alpha1_interface_proto_rawDesc), len(file_kentik_interface_v202108alpha1_interface_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kentik_interface_v202108alpha1_interface_proto_goTypes,
		DependencyIndexes: file_kentik_interface_v202108alpha1_interface_proto_depIdxs,
		EnumInfos:         file_kentik_interface_v202108alpha1_interface_proto_enumTypes,
		MessageInfos:      file_kentik_interface_v202108alpha1_interface_proto_msgTypes,
	}.Build()
	File_kentik_interface_v202108alpha1_interface_proto = out.File
	file_kentik_interface_v202108alpha1_interface_proto_goTypes = nil
	file_kentik_interface_v202108alpha1_interface_proto_depIdxs = nil
}
