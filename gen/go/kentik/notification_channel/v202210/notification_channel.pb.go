// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: kentik/notification_channel/v202210/notification_channel.proto

package notification_channel

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/kentik/api-schema-public/gen/go/kentik/core/v202303"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// {{.Name}}
type ChannelType int32

const (
	// Invalid value.
	ChannelType_CHANNEL_TYPE_UNSPECIFIED ChannelType = 0
	// XMATTERS platform
	ChannelType_CHANNEL_TYPE_XMATTERS ChannelType = 1
	// Slack channel
	ChannelType_CHANNEL_TYPE_SLACK ChannelType = 2
	// ServiceNow platform
	ChannelType_CHANNEL_TYPE_SERVICENOW ChannelType = 3
	// Syslog server
	ChannelType_CHANNEL_TYPE_SYSLOG ChannelType = 4
	// Atlassian Opsgenie
	ChannelType_CHANNEL_TYPE_OPSGENIE ChannelType = 5
	// Custom REST webhook
	ChannelType_CHANNEL_TYPE_CUSTOM_WEBHOOK ChannelType = 6
	// Splunk platform
	ChannelType_CHANNEL_TYPE_SPLUNK ChannelType = 7
	// Microsoft Teams channel
	ChannelType_CHANNEL_TYPE_MSTEAMS ChannelType = 8
	// webhook with JSON payload
	ChannelType_CHANNEL_TYPE_JSON ChannelType = 9
	// E-mail
	ChannelType_CHANNEL_TYPE_EMAIL ChannelType = 10
	// Splunk On-Call (formerly VictorOps)
	ChannelType_CHANNEL_TYPE_VICTOROPS ChannelType = 11
	// Pagerduty platform
	ChannelType_CHANNEL_TYPE_PAGERDUTY ChannelType = 12
)

// Enum value maps for ChannelType.
var (
	ChannelType_name = map[int32]string{
		0:  "CHANNEL_TYPE_UNSPECIFIED",
		1:  "CHANNEL_TYPE_XMATTERS",
		2:  "CHANNEL_TYPE_SLACK",
		3:  "CHANNEL_TYPE_SERVICENOW",
		4:  "CHANNEL_TYPE_SYSLOG",
		5:  "CHANNEL_TYPE_OPSGENIE",
		6:  "CHANNEL_TYPE_CUSTOM_WEBHOOK",
		7:  "CHANNEL_TYPE_SPLUNK",
		8:  "CHANNEL_TYPE_MSTEAMS",
		9:  "CHANNEL_TYPE_JSON",
		10: "CHANNEL_TYPE_EMAIL",
		11: "CHANNEL_TYPE_VICTOROPS",
		12: "CHANNEL_TYPE_PAGERDUTY",
	}
	ChannelType_value = map[string]int32{
		"CHANNEL_TYPE_UNSPECIFIED":    0,
		"CHANNEL_TYPE_XMATTERS":       1,
		"CHANNEL_TYPE_SLACK":          2,
		"CHANNEL_TYPE_SERVICENOW":     3,
		"CHANNEL_TYPE_SYSLOG":         4,
		"CHANNEL_TYPE_OPSGENIE":       5,
		"CHANNEL_TYPE_CUSTOM_WEBHOOK": 6,
		"CHANNEL_TYPE_SPLUNK":         7,
		"CHANNEL_TYPE_MSTEAMS":        8,
		"CHANNEL_TYPE_JSON":           9,
		"CHANNEL_TYPE_EMAIL":          10,
		"CHANNEL_TYPE_VICTOROPS":      11,
		"CHANNEL_TYPE_PAGERDUTY":      12,
	}
)

func (x ChannelType) Enum() *ChannelType {
	p := new(ChannelType)
	*p = x
	return p
}

func (x ChannelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChannelType) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_notification_channel_v202210_notification_channel_proto_enumTypes[0].Descriptor()
}

func (ChannelType) Type() protoreflect.EnumType {
	return &file_kentik_notification_channel_v202210_notification_channel_proto_enumTypes[0]
}

func (x ChannelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChannelType.Descriptor instead.
func (ChannelType) EnumDescriptor() ([]byte, []int) {
	return file_kentik_notification_channel_v202210_notification_channel_proto_rawDescGZIP(), []int{0}
}

// {{.Name}}
type NotificationChannel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          ChannelType            `protobuf:"varint,3,opt,name=type,proto3,enum=kentik.notification_channel.v202210.ChannelType" json:"type,omitempty"`
	Enabled       bool                   `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Cdate         *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=cdate,proto3" json:"cdate,omitempty"`
	Edate         *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=edate,proto3" json:"edate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationChannel) Reset() {
	*x = NotificationChannel{}
	mi := &file_kentik_notification_channel_v202210_notification_channel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationChannel) ProtoMessage() {}

func (x *NotificationChannel) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_notification_channel_v202210_notification_channel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationChannel.ProtoReflect.Descriptor instead.
func (*NotificationChannel) Descriptor() ([]byte, []int) {
	return file_kentik_notification_channel_v202210_notification_channel_proto_rawDescGZIP(), []int{0}
}

func (x *NotificationChannel) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NotificationChannel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NotificationChannel) GetType() ChannelType {
	if x != nil {
		return x.Type
	}
	return ChannelType_CHANNEL_TYPE_UNSPECIFIED
}

func (x *NotificationChannel) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *NotificationChannel) GetCdate() *timestamppb.Timestamp {
	if x != nil {
		return x.Cdate
	}
	return nil
}

func (x *NotificationChannel) GetEdate() *timestamppb.Timestamp {
	if x != nil {
		return x.Edate
	}
	return nil
}

// {{.Name}}
type ListNotificationChannelsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotificationChannelsRequest) Reset() {
	*x = ListNotificationChannelsRequest{}
	mi := &file_kentik_notification_channel_v202210_notification_channel_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationChannelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationChannelsRequest) ProtoMessage() {}

func (x *ListNotificationChannelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_notification_channel_v202210_notification_channel_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationChannelsRequest.ProtoReflect.Descriptor instead.
func (*ListNotificationChannelsRequest) Descriptor() ([]byte, []int) {
	return file_kentik_notification_channel_v202210_notification_channel_proto_rawDescGZIP(), []int{1}
}

// {{.Name}}
type ListNotificationChannelsResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	NotificationChannels []*NotificationChannel `protobuf:"bytes,1,rep,name=notification_channels,json=notificationChannels,proto3" json:"notification_channels,omitempty"`
	InvalidCount         int32                  `protobuf:"varint,2,opt,name=invalid_count,json=invalidCount,proto3" json:"invalid_count,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ListNotificationChannelsResponse) Reset() {
	*x = ListNotificationChannelsResponse{}
	mi := &file_kentik_notification_channel_v202210_notification_channel_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationChannelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationChannelsResponse) ProtoMessage() {}

func (x *ListNotificationChannelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_notification_channel_v202210_notification_channel_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationChannelsResponse.ProtoReflect.Descriptor instead.
func (*ListNotificationChannelsResponse) Descriptor() ([]byte, []int) {
	return file_kentik_notification_channel_v202210_notification_channel_proto_rawDescGZIP(), []int{2}
}

func (x *ListNotificationChannelsResponse) GetNotificationChannels() []*NotificationChannel {
	if x != nil {
		return x.NotificationChannels
	}
	return nil
}

func (x *ListNotificationChannelsResponse) GetInvalidCount() int32 {
	if x != nil {
		return x.InvalidCount
	}
	return 0
}

// {{.Name}}
type GetNotificationChannelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationChannelRequest) Reset() {
	*x = GetNotificationChannelRequest{}
	mi := &file_kentik_notification_channel_v202210_notification_channel_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationChannelRequest) ProtoMessage() {}

func (x *GetNotificationChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_notification_channel_v202210_notification_channel_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationChannelRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationChannelRequest) Descriptor() ([]byte, []int) {
	return file_kentik_notification_channel_v202210_notification_channel_proto_rawDescGZIP(), []int{3}
}

func (x *GetNotificationChannelRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// {{.Name}}
type GetNotificationChannelResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	NotificationChannel *NotificationChannel   `protobuf:"bytes,1,opt,name=notification_channel,json=notificationChannel,proto3" json:"notification_channel,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetNotificationChannelResponse) Reset() {
	*x = GetNotificationChannelResponse{}
	mi := &file_kentik_notification_channel_v202210_notification_channel_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationChannelResponse) ProtoMessage() {}

func (x *GetNotificationChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_notification_channel_v202210_notification_channel_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationChannelResponse.ProtoReflect.Descriptor instead.
func (*GetNotificationChannelResponse) Descriptor() ([]byte, []int) {
	return file_kentik_notification_channel_v202210_notification_channel_proto_rawDescGZIP(), []int{4}
}

func (x *GetNotificationChannelResponse) GetNotificationChannel() *NotificationChannel {
	if x != nil {
		return x.NotificationChannel
	}
	return nil
}

// {{.Name}}
type SearchNotificationChannelsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NamePattern     string                 `protobuf:"bytes,1,opt,name=name_pattern,json=namePattern,proto3" json:"name_pattern,omitempty"`
	Types           []ChannelType          `protobuf:"varint,2,rep,packed,name=types,proto3,enum=kentik.notification_channel.v202210.ChannelType" json:"types,omitempty"`
	IncludeDisabled bool                   `protobuf:"varint,3,opt,name=include_disabled,json=includeDisabled,proto3" json:"include_disabled,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SearchNotificationChannelsRequest) Reset() {
	*x = SearchNotificationChannelsRequest{}
	mi := &file_kentik_notification_channel_v202210_notification_channel_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchNotificationChannelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchNotificationChannelsRequest) ProtoMessage() {}

func (x *SearchNotificationChannelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_notification_channel_v202210_notification_channel_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchNotificationChannelsRequest.ProtoReflect.Descriptor instead.
func (*SearchNotificationChannelsRequest) Descriptor() ([]byte, []int) {
	return file_kentik_notification_channel_v202210_notification_channel_proto_rawDescGZIP(), []int{5}
}

func (x *SearchNotificationChannelsRequest) GetNamePattern() string {
	if x != nil {
		return x.NamePattern
	}
	return ""
}

func (x *SearchNotificationChannelsRequest) GetTypes() []ChannelType {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *SearchNotificationChannelsRequest) GetIncludeDisabled() bool {
	if x != nil {
		return x.IncludeDisabled
	}
	return false
}

// {{.Name}}
type SearchNotificationChannelsResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	NotificationChannels []*NotificationChannel `protobuf:"bytes,1,rep,name=notification_channels,json=notificationChannels,proto3" json:"notification_channels,omitempty"`
	InvalidCount         int32                  `protobuf:"varint,2,opt,name=invalid_count,json=invalidCount,proto3" json:"invalid_count,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SearchNotificationChannelsResponse) Reset() {
	*x = SearchNotificationChannelsResponse{}
	mi := &file_kentik_notification_channel_v202210_notification_channel_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchNotificationChannelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchNotificationChannelsResponse) ProtoMessage() {}

func (x *SearchNotificationChannelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_notification_channel_v202210_notification_channel_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchNotificationChannelsResponse.ProtoReflect.Descriptor instead.
func (*SearchNotificationChannelsResponse) Descriptor() ([]byte, []int) {
	return file_kentik_notification_channel_v202210_notification_channel_proto_rawDescGZIP(), []int{6}
}

func (x *SearchNotificationChannelsResponse) GetNotificationChannels() []*NotificationChannel {
	if x != nil {
		return x.NotificationChannels
	}
	return nil
}

func (x *SearchNotificationChannelsResponse) GetInvalidCount() int32 {
	if x != nil {
		return x.InvalidCount
	}
	return 0
}

var File_kentik_notification_channel_v202210_notification_channel_proto protoreflect.FileDescriptor

const file_kentik_notification_channel_v202210_notification_channel_proto_rawDesc = "" +
	"\n" +
	">kentik/notification_channel/v202210/notification_channel.proto\x12#kentik.notification_channel.v202210\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a%kentik/core/v202303/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xe1\x03\n" +
	"\x13NotificationChannel\x128\n" +
	"\x02id\x18\x01 \x01(\tB(\x92A\"2 Unique identifier of the channel\xe0A\x03R\x02id\x12=\n" +
	"\x04name\x18\x02 \x01(\tB)\x92A#2!User selected name of the channel\xe0A\x03R\x04name\x12g\n" +
	"\x04type\x18\x03 \x01(\x0e20.kentik.notification_channel.v202210.ChannelTypeB!\x92A\x1b2\x19Notification channel type\xe0A\x03R\x04type\x127\n" +
	"\aenabled\x18\x04 \x01(\bB\x1d\x92A\x172\x15Administrative status\xe0A\x03R\aenabled\x12R\n" +
	"\x05cdate\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampB \x92A\x1a2\x18Creation timestamp (UTC)\xe0A\x03R\x05cdate\x12[\n" +
	"\x05edate\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampB)\x92A#2!Last modification timestamp (UTC)\xe0A\x03R\x05edate\"!\n" +
	"\x1fListNotificationChannelsRequest\"\xbd\x02\n" +
	" ListNotificationChannelsResponse\x12\x94\x01\n" +
	"\x15notification_channels\x18\x01 \x03(\v28.kentik.notification_channel.v202210.NotificationChannelB%\x92A\x1f2\x1dList of notification channels\xe0A\x03R\x14notificationChannels\x12\x81\x01\n" +
	"\rinvalid_count\x18\x02 \x01(\x05B\\\x92AV2TNumber of invalid entries that were not included in the list (should be always zero)\xe0A\x03R\finvalidCount\"L\n" +
	"\x1dGetNotificationChannelRequest\x12+\n" +
	"\x02id\x18\x01 \x01(\tB\x1b\x92A\x152\x13Request channel ID.\xe0A\x03R\x02id\"\xb7\x01\n" +
	"\x1eGetNotificationChannelResponse\x12\x94\x01\n" +
	"\x14notification_channel\x18\x01 \x01(\v28.kentik.notification_channel.v202210.NotificationChannelB'\x92A!2\x1fData for the requested channel.\xe0A\x03R\x13notificationChannel\"\x85\x04\n" +
	"!SearchNotificationChannelsRequest\x12\xe3\x01\n" +
	"\fname_pattern\x18\x01 \x01(\tB\xbf\x01\x92A\xbb\x012\xb8\x01Regular expression pattern for matching the name attribute of channels. Empty string matches any name, otherwise the regular expression must consume all characters in the channel name.R\vnamePattern\x12\x9b\x01\n" +
	"\x05types\x18\x02 \x03(\x0e20.kentik.notification_channel.v202210.ChannelTypeBS\x92AP2NList of ChannelType enum values to match. Empty list matches any channel type.R\x05types\x12\\\n" +
	"\x10include_disabled\x18\x03 \x01(\bB1\x92A.2%Include disabled channels in results.:\x05falseR\x0fincludeDisabled\"\xc9\x02\n" +
	"\"SearchNotificationChannelsResponse\x12\x9e\x01\n" +
	"\x15notification_channels\x18\x01 \x03(\v28.kentik.notification_channel.v202210.NotificationChannelB/\x92A)2'List of matching notification channels.\xe0A\x03R\x14notificationChannels\x12\x81\x01\n" +
	"\rinvalid_count\x18\x02 \x01(\x05B\\\x92AV2TNumber of invalid entries that were not included in the list (should be always zero)\xe0A\x03R\finvalidCount*\xea\x02\n" +
	"\vChannelType\x12\x1c\n" +
	"\x18CHANNEL_TYPE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15CHANNEL_TYPE_XMATTERS\x10\x01\x12\x16\n" +
	"\x12CHANNEL_TYPE_SLACK\x10\x02\x12\x1b\n" +
	"\x17CHANNEL_TYPE_SERVICENOW\x10\x03\x12\x17\n" +
	"\x13CHANNEL_TYPE_SYSLOG\x10\x04\x12\x19\n" +
	"\x15CHANNEL_TYPE_OPSGENIE\x10\x05\x12\x1f\n" +
	"\x1bCHANNEL_TYPE_CUSTOM_WEBHOOK\x10\x06\x12\x17\n" +
	"\x13CHANNEL_TYPE_SPLUNK\x10\a\x12\x18\n" +
	"\x14CHANNEL_TYPE_MSTEAMS\x10\b\x12\x15\n" +
	"\x11CHANNEL_TYPE_JSON\x10\t\x12\x16\n" +
	"\x12CHANNEL_TYPE_EMAIL\x10\n" +
	"\x12\x1a\n" +
	"\x16CHANNEL_TYPE_VICTOROPS\x10\v\x12\x1a\n" +
	"\x16CHANNEL_TYPE_PAGERDUTY\x10\f2\xb1\v\n" +
	"\x1aNotificationChannelService\x12\x82\x03\n" +
	"\x18ListNotificationChannels\x12D.kentik.notification_channel.v202210.ListNotificationChannelsRequest\x1aE.kentik.notification_channel.v202210.ListNotificationChannelsResponse\"\xd8\x01\x92Aw\x12$List available notification channels\x1a5Returns list of all configured notification channels.*\x18ListNotificationChannels\xf2\xd7\x02\x1fadmin.notification_channel:read\x82\xd3\xe4\x93\x025\x123/notification_channel/v202210/notification_channels\x12\x95\x03\n" +
	"\x16GetNotificationChannel\x12B.kentik.notification_channel.v202210.GetNotificationChannelRequest\x1aC.kentik.notification_channel.v202210.GetNotificationChannelResponse\"\xf1\x01\x92A\x8a\x01\x12,Get information about a notification channel\x1aBReturns information about a notification channel with specific ID.*\x16GetNotificationChannel\xf2\xd7\x02\x1fadmin.notification_channel:read\x82\xd3\xe4\x93\x02:\x128/notification_channel/v202210/notification_channels/{id}\x12\xbb\x04\n" +
	"\x1aSearchNotificationChannels\x12F.kentik.notification_channel.v202210.SearchNotificationChannelsRequest\x1aG.kentik.notification_channel.v202210.SearchNotificationChannelsResponse\"\x8b\x03\x92A\x9f\x02\x121Retrieve notification channels matching criteria.\x1a\xcd\x01Returns list of all notification channels matching request criteria. Match criteria are treated as a logical AND, i.e. all provided criteria must match in order for an entry to be included in the response.*\x1aSearchNotificationChannels\xf2\xd7\x02\x1fadmin.notification_channel:read\x82\xd3\xe4\x93\x02?:\x01*\":/notification_channel/v202210/notification_channels/search\x1a8\xcaA\x13grpc.api.kentik.com\xea\xd7\x02\x1aadmin.notification_channel\x90\xd8\x02\x03B\xbd\n" +
	"\x92A\xd4\t\x12\x95\b\n" +
	"\x18Notification Channel API\x12\xa8\a# Overview\n" +
	"The Notification Channel APIs enable you to retrieve IDs for the channels in your organization's collection of notification channels (see [Notifications](https://kb.kentik.com/v4/Cb24.htm)). Each channel includes a channel type (e.g. email, Slack, PagerDuty, etc.) and a set of targets (recipients). Using the ID of a given channel, you can assign a set of recipients to receive notifications from Kentik alerts and synthetic tests, including those generated by the [Synthetics Monitoring APIs](https://kb.kentik.com/v0/Oa09.htm) and [BGP Monitoring APIs](https://kb.kentik.com/v0/Oa07.htm).\n" +
	"\n" +
	"Both REST endpoints and gRPC RPCs are provided.\n" +
	"# Limitations\n" +
	"The use of this API is currently subject to the following limitations:\n" +
	"* **Read-only**: Creation, modification, and deletion of channels is not supported.\n" +
	"* **No v3 channels**: No support is (or will be) provided for notification channels created in Kentik's v3 portal.\n" +
	"\"E\n" +
	"\x16Kentik API Engineering\x12+https://github.com/kentik/api-schema-public2\av202210*\x01\x022\x10application/json:\x10application/jsonZD\n" +
	"\x1e\n" +
	"\x05email\x12\x15\b\x02\x1a\x0fX-CH-Auth-Email \x02\n" +
	"\"\n" +
	"\x05token\x12\x19\b\x02\x1a\x13X-CH-Auth-API-Token \x02b\x16\n" +
	"\t\n" +
	"\x05email\x12\x00\n" +
	"\t\n" +
	"\x05token\x12\x00r5\n" +
	"\x16More about Kentik APIs\x12\x1bhttps://docs.kentik.com/apiZcgithub.com/kentik/api-schema-public/gen/go/kentik/notification_channel/v202210;notification_channelb\x06proto3"

var (
	file_kentik_notification_channel_v202210_notification_channel_proto_rawDescOnce sync.Once
	file_kentik_notification_channel_v202210_notification_channel_proto_rawDescData []byte
)

func file_kentik_notification_channel_v202210_notification_channel_proto_rawDescGZIP() []byte {
	file_kentik_notification_channel_v202210_notification_channel_proto_rawDescOnce.Do(func() {
		file_kentik_notification_channel_v202210_notification_channel_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kentik_notification_channel_v202210_notification_channel_proto_rawDesc), len(file_kentik_notification_channel_v202210_notification_channel_proto_rawDesc)))
	})
	return file_kentik_notification_channel_v202210_notification_channel_proto_rawDescData
}

var file_kentik_notification_channel_v202210_notification_channel_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_kentik_notification_channel_v202210_notification_channel_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_kentik_notification_channel_v202210_notification_channel_proto_goTypes = []any{
	(ChannelType)(0),                           // 0: kentik.notification_channel.v202210.ChannelType
	(*NotificationChannel)(nil),                // 1: kentik.notification_channel.v202210.NotificationChannel
	(*ListNotificationChannelsRequest)(nil),    // 2: kentik.notification_channel.v202210.ListNotificationChannelsRequest
	(*ListNotificationChannelsResponse)(nil),   // 3: kentik.notification_channel.v202210.ListNotificationChannelsResponse
	(*GetNotificationChannelRequest)(nil),      // 4: kentik.notification_channel.v202210.GetNotificationChannelRequest
	(*GetNotificationChannelResponse)(nil),     // 5: kentik.notification_channel.v202210.GetNotificationChannelResponse
	(*SearchNotificationChannelsRequest)(nil),  // 6: kentik.notification_channel.v202210.SearchNotificationChannelsRequest
	(*SearchNotificationChannelsResponse)(nil), // 7: kentik.notification_channel.v202210.SearchNotificationChannelsResponse
	(*timestamppb.Timestamp)(nil),              // 8: google.protobuf.Timestamp
}
var file_kentik_notification_channel_v202210_notification_channel_proto_depIdxs = []int32{
	0,  // 0: kentik.notification_channel.v202210.NotificationChannel.type:type_name -> kentik.notification_channel.v202210.ChannelType
	8,  // 1: kentik.notification_channel.v202210.NotificationChannel.cdate:type_name -> google.protobuf.Timestamp
	8,  // 2: kentik.notification_channel.v202210.NotificationChannel.edate:type_name -> google.protobuf.Timestamp
	1,  // 3: kentik.notification_channel.v202210.ListNotificationChannelsResponse.notification_channels:type_name -> kentik.notification_channel.v202210.NotificationChannel
	1,  // 4: kentik.notification_channel.v202210.GetNotificationChannelResponse.notification_channel:type_name -> kentik.notification_channel.v202210.NotificationChannel
	0,  // 5: kentik.notification_channel.v202210.SearchNotificationChannelsRequest.types:type_name -> kentik.notification_channel.v202210.ChannelType
	1,  // 6: kentik.notification_channel.v202210.SearchNotificationChannelsResponse.notification_channels:type_name -> kentik.notification_channel.v202210.NotificationChannel
	2,  // 7: kentik.notification_channel.v202210.NotificationChannelService.ListNotificationChannels:input_type -> kentik.notification_channel.v202210.ListNotificationChannelsRequest
	4,  // 8: kentik.notification_channel.v202210.NotificationChannelService.GetNotificationChannel:input_type -> kentik.notification_channel.v202210.GetNotificationChannelRequest
	6,  // 9: kentik.notification_channel.v202210.NotificationChannelService.SearchNotificationChannels:input_type -> kentik.notification_channel.v202210.SearchNotificationChannelsRequest
	3,  // 10: kentik.notification_channel.v202210.NotificationChannelService.ListNotificationChannels:output_type -> kentik.notification_channel.v202210.ListNotificationChannelsResponse
	5,  // 11: kentik.notification_channel.v202210.NotificationChannelService.GetNotificationChannel:output_type -> kentik.notification_channel.v202210.GetNotificationChannelResponse
	7,  // 12: kentik.notification_channel.v202210.NotificationChannelService.SearchNotificationChannels:output_type -> kentik.notification_channel.v202210.SearchNotificationChannelsResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_kentik_notification_channel_v202210_notification_channel_proto_init() }
func file_kentik_notification_channel_v202210_notification_channel_proto_init() {
	if File_kentik_notification_channel_v202210_notification_channel_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kentik_notification_channel_v202210_notification_channel_proto_rawDesc), len(file_kentik_notification_channel_v202210_notification_channel_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kentik_notification_channel_v202210_notification_channel_proto_goTypes,
		DependencyIndexes: file_kentik_notification_channel_v202210_notification_channel_proto_depIdxs,
		EnumInfos:         file_kentik_notification_channel_v202210_notification_channel_proto_enumTypes,
		MessageInfos:      file_kentik_notification_channel_v202210_notification_channel_proto_msgTypes,
	}.Build()
	File_kentik_notification_channel_v202210_notification_channel_proto = out.File
	file_kentik_notification_channel_v202210_notification_channel_proto_goTypes = nil
	file_kentik_notification_channel_v202210_notification_channel_proto_depIdxs = nil
}
