// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: kentik/deviceconf/v202511/config.proto

package deviceconf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigEncoding int32

const (
	ConfigEncoding_CONFIG_ENCODING_UNSPECIFIED ConfigEncoding = 0
	ConfigEncoding_CONFIG_ENCODING_PLAIN       ConfigEncoding = 1
	ConfigEncoding_CONFIG_ENCODING_BZIP2       ConfigEncoding = 2
)

// Enum value maps for ConfigEncoding.
var (
	ConfigEncoding_name = map[int32]string{
		0: "CONFIG_ENCODING_UNSPECIFIED",
		1: "CONFIG_ENCODING_PLAIN",
		2: "CONFIG_ENCODING_BZIP2",
	}
	ConfigEncoding_value = map[string]int32{
		"CONFIG_ENCODING_UNSPECIFIED": 0,
		"CONFIG_ENCODING_PLAIN":       1,
		"CONFIG_ENCODING_BZIP2":       2,
	}
)

func (x ConfigEncoding) Enum() *ConfigEncoding {
	p := new(ConfigEncoding)
	*p = x
	return p
}

func (x ConfigEncoding) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigEncoding) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_deviceconf_v202511_config_proto_enumTypes[0].Descriptor()
}

func (ConfigEncoding) Type() protoreflect.EnumType {
	return &file_kentik_deviceconf_v202511_config_proto_enumTypes[0]
}

func (x ConfigEncoding) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigEncoding.Descriptor instead.
func (ConfigEncoding) EnumDescriptor() ([]byte, []int) {
	return file_kentik_deviceconf_v202511_config_proto_rawDescGZIP(), []int{0}
}

type Revision struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // incremented for each different configuration fetched from the device
	LastFetched   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=last_fetched,json=lastFetched,proto3" json:"last_fetched,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Revision) Reset() {
	*x = Revision{}
	mi := &file_kentik_deviceconf_v202511_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Revision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Revision) ProtoMessage() {}

func (x *Revision) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_deviceconf_v202511_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Revision.ProtoReflect.Descriptor instead.
func (*Revision) Descriptor() ([]byte, []int) {
	return file_kentik_deviceconf_v202511_config_proto_rawDescGZIP(), []int{0}
}

func (x *Revision) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Revision) GetLastFetched() *timestamppb.Timestamp {
	if x != nil {
		return x.LastFetched
	}
	return nil
}

type Snapshot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"` // Agent that fetched the configuration
	DeviceId      string                 `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Revision      *Revision              `protobuf:"bytes,3,opt,name=revision,proto3" json:"revision,omitempty"`
	FetchError    bool                   `protobuf:"varint,4,opt,name=fetch_error,json=fetchError,proto3" json:"fetch_error,omitempty"` // error message is in config_data if true
	Encoding      ConfigEncoding         `protobuf:"varint,5,opt,name=encoding,proto3,enum=kentik.deviceconf.v202511.ConfigEncoding" json:"encoding,omitempty"`
	ConfigData    []byte                 `protobuf:"bytes,6,opt,name=config_data,json=configData,proto3" json:"config_data,omitempty"`
	Digest        string                 `protobuf:"bytes,7,opt,name=digest,proto3" json:"digest,omitempty"` // SHA256 digest of config_data
	DiffData      []byte                 `protobuf:"bytes,8,opt,name=diff_data,json=diffData,proto3" json:"diff_data,omitempty"`
	DiffRevision  *Revision              `protobuf:"bytes,9,opt,name=diff_revision,json=diffRevision,proto3" json:"diff_revision,omitempty"`
	FirstFetched  *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=first_fetched,json=firstFetched,proto3" json:"first_fetched,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Snapshot) Reset() {
	*x = Snapshot{}
	mi := &file_kentik_deviceconf_v202511_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Snapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Snapshot) ProtoMessage() {}

func (x *Snapshot) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_deviceconf_v202511_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Snapshot.ProtoReflect.Descriptor instead.
func (*Snapshot) Descriptor() ([]byte, []int) {
	return file_kentik_deviceconf_v202511_config_proto_rawDescGZIP(), []int{1}
}

func (x *Snapshot) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *Snapshot) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *Snapshot) GetRevision() *Revision {
	if x != nil {
		return x.Revision
	}
	return nil
}

func (x *Snapshot) GetFetchError() bool {
	if x != nil {
		return x.FetchError
	}
	return false
}

func (x *Snapshot) GetEncoding() ConfigEncoding {
	if x != nil {
		return x.Encoding
	}
	return ConfigEncoding_CONFIG_ENCODING_UNSPECIFIED
}

func (x *Snapshot) GetConfigData() []byte {
	if x != nil {
		return x.ConfigData
	}
	return nil
}

func (x *Snapshot) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *Snapshot) GetDiffData() []byte {
	if x != nil {
		return x.DiffData
	}
	return nil
}

func (x *Snapshot) GetDiffRevision() *Revision {
	if x != nil {
		return x.DiffRevision
	}
	return nil
}

func (x *Snapshot) GetFirstFetched() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstFetched
	}
	return nil
}

var File_kentik_deviceconf_v202511_config_proto protoreflect.FileDescriptor

const file_kentik_deviceconf_v202511_config_proto_rawDesc = "" +
	"\n" +
	"&kentik/deviceconf/v202511/config.proto\x12\x19kentik.deviceconf.v202511\x1a\x1fgoogle/protobuf/timestamp.proto\"Y\n" +
	"\bRevision\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12=\n" +
	"\flast_fetched\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\vlastFetched\"\xcc\x03\n" +
	"\bSnapshot\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x1b\n" +
	"\tdevice_id\x18\x02 \x01(\tR\bdeviceId\x12?\n" +
	"\brevision\x18\x03 \x01(\v2#.kentik.deviceconf.v202511.RevisionR\brevision\x12\x1f\n" +
	"\vfetch_error\x18\x04 \x01(\bR\n" +
	"fetchError\x12E\n" +
	"\bencoding\x18\x05 \x01(\x0e2).kentik.deviceconf.v202511.ConfigEncodingR\bencoding\x12\x1f\n" +
	"\vconfig_data\x18\x06 \x01(\fR\n" +
	"configData\x12\x16\n" +
	"\x06digest\x18\a \x01(\tR\x06digest\x12\x1b\n" +
	"\tdiff_data\x18\b \x01(\fR\bdiffData\x12H\n" +
	"\rdiff_revision\x18\t \x01(\v2#.kentik.deviceconf.v202511.RevisionR\fdiffRevision\x12?\n" +
	"\rfirst_fetched\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\ffirstFetched*g\n" +
	"\x0eConfigEncoding\x12\x1f\n" +
	"\x1bCONFIG_ENCODING_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15CONFIG_ENCODING_PLAIN\x10\x01\x12\x19\n" +
	"\x15CONFIG_ENCODING_BZIP2\x10\x02BQZOgithub.com/kentik/api-schema-public/gen/go/kentik/deviceconf/v202511;deviceconfb\x06proto3"

var (
	file_kentik_deviceconf_v202511_config_proto_rawDescOnce sync.Once
	file_kentik_deviceconf_v202511_config_proto_rawDescData []byte
)

func file_kentik_deviceconf_v202511_config_proto_rawDescGZIP() []byte {
	file_kentik_deviceconf_v202511_config_proto_rawDescOnce.Do(func() {
		file_kentik_deviceconf_v202511_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kentik_deviceconf_v202511_config_proto_rawDesc), len(file_kentik_deviceconf_v202511_config_proto_rawDesc)))
	})
	return file_kentik_deviceconf_v202511_config_proto_rawDescData
}

var file_kentik_deviceconf_v202511_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_kentik_deviceconf_v202511_config_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_kentik_deviceconf_v202511_config_proto_goTypes = []any{
	(ConfigEncoding)(0),           // 0: kentik.deviceconf.v202511.ConfigEncoding
	(*Revision)(nil),              // 1: kentik.deviceconf.v202511.Revision
	(*Snapshot)(nil),              // 2: kentik.deviceconf.v202511.Snapshot
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_kentik_deviceconf_v202511_config_proto_depIdxs = []int32{
	3, // 0: kentik.deviceconf.v202511.Revision.last_fetched:type_name -> google.protobuf.Timestamp
	1, // 1: kentik.deviceconf.v202511.Snapshot.revision:type_name -> kentik.deviceconf.v202511.Revision
	0, // 2: kentik.deviceconf.v202511.Snapshot.encoding:type_name -> kentik.deviceconf.v202511.ConfigEncoding
	1, // 3: kentik.deviceconf.v202511.Snapshot.diff_revision:type_name -> kentik.deviceconf.v202511.Revision
	3, // 4: kentik.deviceconf.v202511.Snapshot.first_fetched:type_name -> google.protobuf.Timestamp
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_kentik_deviceconf_v202511_config_proto_init() }
func file_kentik_deviceconf_v202511_config_proto_init() {
	if File_kentik_deviceconf_v202511_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kentik_deviceconf_v202511_config_proto_rawDesc), len(file_kentik_deviceconf_v202511_config_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kentik_deviceconf_v202511_config_proto_goTypes,
		DependencyIndexes: file_kentik_deviceconf_v202511_config_proto_depIdxs,
		EnumInfos:         file_kentik_deviceconf_v202511_config_proto_enumTypes,
		MessageInfos:      file_kentik_deviceconf_v202511_config_proto_msgTypes,
	}.Build()
	File_kentik_deviceconf_v202511_config_proto = out.File
	file_kentik_deviceconf_v202511_config_proto_goTypes = nil
	file_kentik_deviceconf_v202511_config_proto_depIdxs = nil
}
