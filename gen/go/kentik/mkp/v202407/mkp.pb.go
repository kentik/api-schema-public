// My Kentik Portal management

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: kentik/mkp/v202407/mkp.proto

package mkp

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/kentik/api-schema-public/gen/go/kentik/core/v202303"
	v202211 "github.com/kentik/api-schema-public/gen/go/kentik/user/v202211"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// {{.Name}}
type Alert struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Saved            bool                   `protobuf:"varint,1,opt,name=saved,proto3" json:"saved,omitempty"`
	PolicyId         string                 `protobuf:"bytes,2,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	Thresholds       []*Threshold           `protobuf:"bytes,3,rep,name=thresholds,proto3" json:"thresholds,omitempty"`
	PrimaryMetric    string                 `protobuf:"bytes,4,opt,name=primary_metric,json=primaryMetric,proto3" json:"primary_metric,omitempty"`
	SecondaryMetrics []string               `protobuf:"bytes,5,rep,name=secondary_metrics,json=secondaryMetrics,proto3" json:"secondary_metrics,omitempty"`
	IsTemplate       bool                   `protobuf:"varint,6,opt,name=is_template,json=isTemplate,proto3" json:"is_template,omitempty"`
	SubpolicyId      string                 `protobuf:"bytes,7,opt,name=subpolicy_id,json=subpolicyId,proto3" json:"subpolicy_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Alert) Reset() {
	*x = Alert{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert) ProtoMessage() {}

func (x *Alert) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert.ProtoReflect.Descriptor instead.
func (*Alert) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{0}
}

func (x *Alert) GetSaved() bool {
	if x != nil {
		return x.Saved
	}
	return false
}

func (x *Alert) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *Alert) GetThresholds() []*Threshold {
	if x != nil {
		return x.Thresholds
	}
	return nil
}

func (x *Alert) GetPrimaryMetric() string {
	if x != nil {
		return x.PrimaryMetric
	}
	return ""
}

func (x *Alert) GetSecondaryMetrics() []string {
	if x != nil {
		return x.SecondaryMetrics
	}
	return nil
}

func (x *Alert) GetIsTemplate() bool {
	if x != nil {
		return x.IsTemplate
	}
	return false
}

func (x *Alert) GetSubpolicyId() string {
	if x != nil {
		return x.SubpolicyId
	}
	return ""
}

// {{.Name}}
type Asset struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reports       []*Asset_Report        `protobuf:"bytes,1,rep,name=reports,proto3" json:"reports,omitempty"`
	DefaultReport *Asset_Report          `protobuf:"bytes,2,opt,name=default_report,json=defaultReport,proto3" json:"default_report,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Asset) Reset() {
	*x = Asset{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{1}
}

func (x *Asset) GetReports() []*Asset_Report {
	if x != nil {
		return x.Reports
	}
	return nil
}

func (x *Asset) GetDefaultReport() *Asset_Report {
	if x != nil {
		return x.DefaultReport
	}
	return nil
}

// {{.Name}}
type Threshold struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	Id                           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Activate                     *Activate              `protobuf:"bytes,2,opt,name=activate,proto3" json:"activate,omitempty"`
	Severity                     string                 `protobuf:"bytes,3,opt,name=severity,proto3" json:"severity,omitempty"`
	Conditions                   []*Condition           `protobuf:"bytes,4,rep,name=conditions,proto3" json:"conditions,omitempty"`
	Mitigations                  []*Mitigation          `protobuf:"bytes,5,rep,name=mitigations,proto3" json:"mitigations,omitempty"`
	NotificationChannels         []*NotificationChannel `protobuf:"bytes,6,rep,name=notification_channels,json=notificationChannels,proto3" json:"notification_channels,omitempty"`
	ThresholdAckRequired         bool                   `protobuf:"varint,7,opt,name=threshold_ack_required,json=thresholdAckRequired,proto3" json:"threshold_ack_required,omitempty"`
	EnableTenantNotifications    bool                   `protobuf:"varint,8,opt,name=enable_tenant_notifications,json=enableTenantNotifications,proto3" json:"enable_tenant_notifications,omitempty"`
	ReceiveLandlordNotifications bool                   `protobuf:"varint,9,opt,name=receive_landlord_notifications,json=receiveLandlordNotifications,proto3" json:"receive_landlord_notifications,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *Threshold) Reset() {
	*x = Threshold{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Threshold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Threshold) ProtoMessage() {}

func (x *Threshold) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Threshold.ProtoReflect.Descriptor instead.
func (*Threshold) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{2}
}

func (x *Threshold) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Threshold) GetActivate() *Activate {
	if x != nil {
		return x.Activate
	}
	return nil
}

func (x *Threshold) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *Threshold) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *Threshold) GetMitigations() []*Mitigation {
	if x != nil {
		return x.Mitigations
	}
	return nil
}

func (x *Threshold) GetNotificationChannels() []*NotificationChannel {
	if x != nil {
		return x.NotificationChannels
	}
	return nil
}

func (x *Threshold) GetThresholdAckRequired() bool {
	if x != nil {
		return x.ThresholdAckRequired
	}
	return false
}

func (x *Threshold) GetEnableTenantNotifications() bool {
	if x != nil {
		return x.EnableTenantNotifications
	}
	return false
}

func (x *Threshold) GetReceiveLandlordNotifications() bool {
	if x != nil {
		return x.ReceiveLandlordNotifications
	}
	return false
}

// {{.Name}}
type Activate struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Times              uint32                 `protobuf:"varint,1,opt,name=times,proto3" json:"times,omitempty"`
	Operator           string                 `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	TimeWindowSeconds  uint32                 `protobuf:"varint,3,opt,name=time_window_seconds,json=timeWindowSeconds,proto3" json:"time_window_seconds,omitempty"`
	GracePeriodSeconds uint32                 `protobuf:"varint,4,opt,name=grace_period_seconds,json=gracePeriodSeconds,proto3" json:"grace_period_seconds,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Activate) Reset() {
	*x = Activate{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Activate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activate) ProtoMessage() {}

func (x *Activate) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activate.ProtoReflect.Descriptor instead.
func (*Activate) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{3}
}

func (x *Activate) GetTimes() uint32 {
	if x != nil {
		return x.Times
	}
	return 0
}

func (x *Activate) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *Activate) GetTimeWindowSeconds() uint32 {
	if x != nil {
		return x.TimeWindowSeconds
	}
	return 0
}

func (x *Activate) GetGracePeriodSeconds() uint32 {
	if x != nil {
		return x.GracePeriodSeconds
	}
	return 0
}

// {{.Name}}
type Condition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Metric        string                 `protobuf:"bytes,3,opt,name=metric,proto3" json:"metric,omitempty"`
	Operator      string                 `protobuf:"bytes,4,opt,name=operator,proto3" json:"operator,omitempty"`
	ValueType     string                 `protobuf:"bytes,5,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
	ValueSelect   string                 `protobuf:"bytes,6,opt,name=value_select,json=valueSelect,proto3" json:"value_select,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Condition) Reset() {
	*x = Condition{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{4}
}

func (x *Condition) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Condition) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Condition) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *Condition) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *Condition) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

func (x *Condition) GetValueSelect() string {
	if x != nil {
		return x.ValueSelect
	}
	return ""
}

// {{.Name}}
type Mitigation struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Id                    string                 `protobuf:"bytes,13,opt,name=id,proto3" json:"id,omitempty"`
	Status                string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	CompanyId             string                 `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	PairingId             string                 `protobuf:"bytes,3,opt,name=pairing_id,json=pairingId,proto3" json:"pairing_id,omitempty"`
	ThresholdId           string                 `protobuf:"bytes,4,opt,name=threshold_id,json=thresholdId,proto3" json:"threshold_id,omitempty"`
	IsMethodOverridable   bool                   `protobuf:"varint,5,opt,name=is_method_overridable,json=isMethodOverridable,proto3" json:"is_method_overridable,omitempty"`
	MitigationApplyType   string                 `protobuf:"bytes,6,opt,name=mitigation_apply_type,json=mitigationApplyType,proto3" json:"mitigation_apply_type,omitempty"`
	MitigationClearType   string                 `protobuf:"bytes,7,opt,name=mitigation_clear_type,json=mitigationClearType,proto3" json:"mitigation_clear_type,omitempty"`
	MitigationApplyTimer  uint32                 `protobuf:"varint,8,opt,name=mitigation_apply_timer,json=mitigationApplyTimer,proto3" json:"mitigation_apply_timer,omitempty"`
	MitigationClearTimer  uint32                 `protobuf:"varint,9,opt,name=mitigation_clear_timer,json=mitigationClearTimer,proto3" json:"mitigation_clear_timer,omitempty"`
	IsPlatformOverridable bool                   `protobuf:"varint,10,opt,name=is_platform_overridable,json=isPlatformOverridable,proto3" json:"is_platform_overridable,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Mitigation) Reset() {
	*x = Mitigation{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mitigation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mitigation) ProtoMessage() {}

func (x *Mitigation) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mitigation.ProtoReflect.Descriptor instead.
func (*Mitigation) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{5}
}

func (x *Mitigation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Mitigation) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Mitigation) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *Mitigation) GetPairingId() string {
	if x != nil {
		return x.PairingId
	}
	return ""
}

func (x *Mitigation) GetThresholdId() string {
	if x != nil {
		return x.ThresholdId
	}
	return ""
}

func (x *Mitigation) GetIsMethodOverridable() bool {
	if x != nil {
		return x.IsMethodOverridable
	}
	return false
}

func (x *Mitigation) GetMitigationApplyType() string {
	if x != nil {
		return x.MitigationApplyType
	}
	return ""
}

func (x *Mitigation) GetMitigationClearType() string {
	if x != nil {
		return x.MitigationClearType
	}
	return ""
}

func (x *Mitigation) GetMitigationApplyTimer() uint32 {
	if x != nil {
		return x.MitigationApplyTimer
	}
	return 0
}

func (x *Mitigation) GetMitigationClearTimer() uint32 {
	if x != nil {
		return x.MitigationClearTimer
	}
	return 0
}

func (x *Mitigation) GetIsPlatformOverridable() bool {
	if x != nil {
		return x.IsPlatformOverridable
	}
	return false
}

// {{.Name}}
type NotificationChannel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationChannel) Reset() {
	*x = NotificationChannel{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationChannel) ProtoMessage() {}

func (x *NotificationChannel) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationChannel.ProtoReflect.Descriptor instead.
func (*NotificationChannel) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{6}
}

func (x *NotificationChannel) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// {{.Name}}
type TenantLink struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PivotTemplateId  string                 `protobuf:"bytes,2,opt,name=pivot_template_id,json=pivotTemplateId,proto3" json:"pivot_template_id,omitempty"`
	PivotUserGroupId string                 `protobuf:"bytes,3,opt,name=pivot_user_group_id,json=pivotUserGroupId,proto3" json:"pivot_user_group_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TenantLink) Reset() {
	*x = TenantLink{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TenantLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantLink) ProtoMessage() {}

func (x *TenantLink) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantLink.ProtoReflect.Descriptor instead.
func (*TenantLink) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{7}
}

func (x *TenantLink) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TenantLink) GetPivotTemplateId() string {
	if x != nil {
		return x.PivotTemplateId
	}
	return ""
}

func (x *TenantLink) GetPivotUserGroupId() string {
	if x != nil {
		return x.PivotUserGroupId
	}
	return ""
}

// {{.Name}}
type Package struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CompanyId     string                 `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Icon          string                 `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	Color         string                 `protobuf:"bytes,6,opt,name=color,proto3" json:"color,omitempty"`
	Alerts        []*Alert               `protobuf:"bytes,7,rep,name=alerts,proto3" json:"alerts,omitempty"`
	Assets        *Asset                 `protobuf:"bytes,8,opt,name=assets,proto3" json:"assets,omitempty"`
	IsDefault     bool                   `protobuf:"varint,9,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	Tenants       []*TenantLink          `protobuf:"bytes,10,rep,name=tenants,proto3" json:"tenants,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Package) Reset() {
	*x = Package{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Package) ProtoMessage() {}

func (x *Package) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Package.ProtoReflect.Descriptor instead.
func (*Package) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{8}
}

func (x *Package) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Package) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *Package) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Package) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Package) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Package) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Package) GetAlerts() []*Alert {
	if x != nil {
		return x.Alerts
	}
	return nil
}

func (x *Package) GetAssets() *Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *Package) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *Package) GetTenants() []*TenantLink {
	if x != nil {
		return x.Tenants
	}
	return nil
}

// {{.Name}}
type CustomDimension struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dimension     string                 `protobuf:"bytes,1,opt,name=dimension,proto3" json:"dimension,omitempty"`
	Populator     string                 `protobuf:"bytes,2,opt,name=populator,proto3" json:"populator,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CustomDimension) Reset() {
	*x = CustomDimension{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomDimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomDimension) ProtoMessage() {}

func (x *CustomDimension) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomDimension.ProtoReflect.Descriptor instead.
func (*CustomDimension) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{9}
}

func (x *CustomDimension) GetDimension() string {
	if x != nil {
		return x.Dimension
	}
	return ""
}

func (x *CustomDimension) GetPopulator() string {
	if x != nil {
		return x.Populator
	}
	return ""
}

// {{.Name}}
type Devices struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AllDevices    bool                   `protobuf:"varint,1,opt,name=all_devices,json=allDevices,proto3" json:"all_devices,omitempty"`
	DeviceTypes   []string               `protobuf:"bytes,2,rep,name=device_types,json=deviceTypes,proto3" json:"device_types,omitempty"`
	DeviceLabels  []uint32               `protobuf:"varint,3,rep,packed,name=device_labels,json=deviceLabels,proto3" json:"device_labels,omitempty"`
	DeviceSites   []uint32               `protobuf:"varint,4,rep,packed,name=device_sites,json=deviceSites,proto3" json:"device_sites,omitempty"`
	DeviceName    []string               `protobuf:"bytes,5,rep,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Devices) Reset() {
	*x = Devices{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Devices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Devices) ProtoMessage() {}

func (x *Devices) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Devices.ProtoReflect.Descriptor instead.
func (*Devices) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{10}
}

func (x *Devices) GetAllDevices() bool {
	if x != nil {
		return x.AllDevices
	}
	return false
}

func (x *Devices) GetDeviceTypes() []string {
	if x != nil {
		return x.DeviceTypes
	}
	return nil
}

func (x *Devices) GetDeviceLabels() []uint32 {
	if x != nil {
		return x.DeviceLabels
	}
	return nil
}

func (x *Devices) GetDeviceSites() []uint32 {
	if x != nil {
		return x.DeviceSites
	}
	return nil
}

func (x *Devices) GetDeviceName() []string {
	if x != nil {
		return x.DeviceName
	}
	return nil
}

// {{.Name}}
type FilterField struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilterField   string                 `protobuf:"bytes,1,opt,name=filter_field,json=filterField,proto3" json:"filter_field,omitempty"`
	Operator      string                 `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	FilterValue   string                 `protobuf:"bytes,3,opt,name=filter_value,json=filterValue,proto3" json:"filter_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterField) Reset() {
	*x = FilterField{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterField) ProtoMessage() {}

func (x *FilterField) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterField.ProtoReflect.Descriptor instead.
func (*FilterField) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{11}
}

func (x *FilterField) GetFilterField() string {
	if x != nil {
		return x.FilterField
	}
	return ""
}

func (x *FilterField) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *FilterField) GetFilterValue() string {
	if x != nil {
		return x.FilterValue
	}
	return ""
}

// {{.Name}}
type Filter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Named         bool                   `protobuf:"varint,2,opt,name=named,proto3" json:"named,omitempty"`
	Connector     string                 `protobuf:"bytes,3,opt,name=connector,proto3" json:"connector,omitempty"`
	Not           bool                   `protobuf:"varint,4,opt,name=not,proto3" json:"not,omitempty"`
	AutoAdded     string                 `protobuf:"bytes,5,opt,name=auto_added,json=autoAdded,proto3" json:"auto_added,omitempty"`
	SavedFilters  []string               `protobuf:"bytes,6,rep,name=saved_filters,json=savedFilters,proto3" json:"saved_filters,omitempty"`
	Filters       []*FilterField         `protobuf:"bytes,7,rep,name=filters,proto3" json:"filters,omitempty"`
	FilterGroups  []*Filter              `protobuf:"bytes,8,rep,name=filter_groups,json=filterGroups,proto3" json:"filter_groups,omitempty"`
	Metric        []string               `protobuf:"bytes,9,rep,name=metric,proto3" json:"metric,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Filter) Reset() {
	*x = Filter{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{12}
}

func (x *Filter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Filter) GetNamed() bool {
	if x != nil {
		return x.Named
	}
	return false
}

func (x *Filter) GetConnector() string {
	if x != nil {
		return x.Connector
	}
	return ""
}

func (x *Filter) GetNot() bool {
	if x != nil {
		return x.Not
	}
	return false
}

func (x *Filter) GetAutoAdded() string {
	if x != nil {
		return x.AutoAdded
	}
	return ""
}

func (x *Filter) GetSavedFilters() []string {
	if x != nil {
		return x.SavedFilters
	}
	return nil
}

func (x *Filter) GetFilters() []*FilterField {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *Filter) GetFilterGroups() []*Filter {
	if x != nil {
		return x.FilterGroups
	}
	return nil
}

func (x *Filter) GetMetric() []string {
	if x != nil {
		return x.Metric
	}
	return nil
}

// {{.Name}}
type Tenant struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CompanyId   string                 `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Name        string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Type        string                 `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Enabled     bool                   `protobuf:"varint,6,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// config object
	Alerts           []*Alert           `protobuf:"bytes,7,rep,name=alerts,proto3" json:"alerts,omitempty"`
	Assets           *Asset             `protobuf:"bytes,15,opt,name=assets,proto3" json:"assets,omitempty"`
	Asn              string             `protobuf:"bytes,8,opt,name=asn,proto3" json:"asn,omitempty"`
	Cidr             string             `protobuf:"bytes,9,opt,name=cidr,proto3" json:"cidr,omitempty"`
	CustomDimensions []*CustomDimension `protobuf:"bytes,10,rep,name=custom_dimensions,json=customDimensions,proto3" json:"custom_dimensions,omitempty"`
	Devices          *Devices           `protobuf:"bytes,11,opt,name=devices,proto3" json:"devices,omitempty"`
	Filters          *Filter            `protobuf:"bytes,12,opt,name=filters,proto3" json:"filters,omitempty"`
	InterfaceName    string             `protobuf:"bytes,13,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	SnmpAlias        string             `protobuf:"bytes,14,opt,name=snmp_alias,json=snmpAlias,proto3" json:"snmp_alias,omitempty"`
	Packages         []*Package         `protobuf:"bytes,16,rep,name=packages,proto3" json:"packages,omitempty"`
	Users            []*v202211.User    `protobuf:"bytes,17,rep,name=users,proto3" json:"users,omitempty"`
	TemplateId       string             `protobuf:"bytes,18,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Tenant) Reset() {
	*x = Tenant{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tenant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tenant) ProtoMessage() {}

func (x *Tenant) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tenant.ProtoReflect.Descriptor instead.
func (*Tenant) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{13}
}

func (x *Tenant) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Tenant) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *Tenant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tenant) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Tenant) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Tenant) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Tenant) GetAlerts() []*Alert {
	if x != nil {
		return x.Alerts
	}
	return nil
}

func (x *Tenant) GetAssets() *Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *Tenant) GetAsn() string {
	if x != nil {
		return x.Asn
	}
	return ""
}

func (x *Tenant) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *Tenant) GetCustomDimensions() []*CustomDimension {
	if x != nil {
		return x.CustomDimensions
	}
	return nil
}

func (x *Tenant) GetDevices() *Devices {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *Tenant) GetFilters() *Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *Tenant) GetInterfaceName() string {
	if x != nil {
		return x.InterfaceName
	}
	return ""
}

func (x *Tenant) GetSnmpAlias() string {
	if x != nil {
		return x.SnmpAlias
	}
	return ""
}

func (x *Tenant) GetPackages() []*Package {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *Tenant) GetUsers() []*v202211.User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *Tenant) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

// {{.Name}}
type ListPackageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPackageRequest) Reset() {
	*x = ListPackageRequest{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPackageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPackageRequest) ProtoMessage() {}

func (x *ListPackageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPackageRequest.ProtoReflect.Descriptor instead.
func (*ListPackageRequest) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{14}
}

// {{.Name}}
type ListPackageResponse struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Packages []*Package             `protobuf:"bytes,1,rep,name=packages,proto3" json:"packages,omitempty"`
	// The number of invalid packages, for troubleshooting. Should be zero.
	InvalidCount  uint32 `protobuf:"varint,2,opt,name=invalid_count,json=invalidCount,proto3" json:"invalid_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPackageResponse) Reset() {
	*x = ListPackageResponse{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPackageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPackageResponse) ProtoMessage() {}

func (x *ListPackageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPackageResponse.ProtoReflect.Descriptor instead.
func (*ListPackageResponse) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{15}
}

func (x *ListPackageResponse) GetPackages() []*Package {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *ListPackageResponse) GetInvalidCount() uint32 {
	if x != nil {
		return x.InvalidCount
	}
	return 0
}

// {{.Name}}
type GetPackageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPackageRequest) Reset() {
	*x = GetPackageRequest{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPackageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackageRequest) ProtoMessage() {}

func (x *GetPackageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackageRequest.ProtoReflect.Descriptor instead.
func (*GetPackageRequest) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{16}
}

func (x *GetPackageRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// {{.Name}}
type GetPackageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Package       *Package               `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPackageResponse) Reset() {
	*x = GetPackageResponse{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPackageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPackageResponse) ProtoMessage() {}

func (x *GetPackageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPackageResponse.ProtoReflect.Descriptor instead.
func (*GetPackageResponse) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{17}
}

func (x *GetPackageResponse) GetPackage() *Package {
	if x != nil {
		return x.Package
	}
	return nil
}

// {{.Name}}
type CreatePackageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Package       *Package               `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePackageRequest) Reset() {
	*x = CreatePackageRequest{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePackageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePackageRequest) ProtoMessage() {}

func (x *CreatePackageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePackageRequest.ProtoReflect.Descriptor instead.
func (*CreatePackageRequest) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{18}
}

func (x *CreatePackageRequest) GetPackage() *Package {
	if x != nil {
		return x.Package
	}
	return nil
}

// {{.Name}}
type CreatePackageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Package       *Package               `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePackageResponse) Reset() {
	*x = CreatePackageResponse{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePackageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePackageResponse) ProtoMessage() {}

func (x *CreatePackageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePackageResponse.ProtoReflect.Descriptor instead.
func (*CreatePackageResponse) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{19}
}

func (x *CreatePackageResponse) GetPackage() *Package {
	if x != nil {
		return x.Package
	}
	return nil
}

// {{.Name}}
type UpdatePackageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Package       *Package               `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePackageRequest) Reset() {
	*x = UpdatePackageRequest{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePackageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePackageRequest) ProtoMessage() {}

func (x *UpdatePackageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePackageRequest.ProtoReflect.Descriptor instead.
func (*UpdatePackageRequest) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{20}
}

func (x *UpdatePackageRequest) GetPackage() *Package {
	if x != nil {
		return x.Package
	}
	return nil
}

// {{.Name}}
type UpdatePackageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Package       *Package               `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePackageResponse) Reset() {
	*x = UpdatePackageResponse{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePackageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePackageResponse) ProtoMessage() {}

func (x *UpdatePackageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePackageResponse.ProtoReflect.Descriptor instead.
func (*UpdatePackageResponse) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{21}
}

func (x *UpdatePackageResponse) GetPackage() *Package {
	if x != nil {
		return x.Package
	}
	return nil
}

// {{.Name}}
type DeletePackageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePackageRequest) Reset() {
	*x = DeletePackageRequest{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePackageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePackageRequest) ProtoMessage() {}

func (x *DeletePackageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePackageRequest.ProtoReflect.Descriptor instead.
func (*DeletePackageRequest) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{22}
}

func (x *DeletePackageRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// {{.Name}}
type DeletePackageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePackageResponse) Reset() {
	*x = DeletePackageResponse{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePackageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePackageResponse) ProtoMessage() {}

func (x *DeletePackageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePackageResponse.ProtoReflect.Descriptor instead.
func (*DeletePackageResponse) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{23}
}

// {{.Name}}
type ListTenantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTenantRequest) Reset() {
	*x = ListTenantRequest{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTenantRequest) ProtoMessage() {}

func (x *ListTenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTenantRequest.ProtoReflect.Descriptor instead.
func (*ListTenantRequest) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{24}
}

// {{.Name}}
type ListTenantResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tenants       []*Tenant              `protobuf:"bytes,1,rep,name=tenants,proto3" json:"tenants,omitempty"`
	InvalidCount  uint32                 `protobuf:"varint,2,opt,name=invalid_count,json=invalidCount,proto3" json:"invalid_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTenantResponse) Reset() {
	*x = ListTenantResponse{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTenantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTenantResponse) ProtoMessage() {}

func (x *ListTenantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTenantResponse.ProtoReflect.Descriptor instead.
func (*ListTenantResponse) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{25}
}

func (x *ListTenantResponse) GetTenants() []*Tenant {
	if x != nil {
		return x.Tenants
	}
	return nil
}

func (x *ListTenantResponse) GetInvalidCount() uint32 {
	if x != nil {
		return x.InvalidCount
	}
	return 0
}

// {{.Name}}
type GetTenantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTenantRequest) Reset() {
	*x = GetTenantRequest{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTenantRequest) ProtoMessage() {}

func (x *GetTenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTenantRequest.ProtoReflect.Descriptor instead.
func (*GetTenantRequest) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{26}
}

func (x *GetTenantRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// {{.Name}}
type GetTenantResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tenant        *Tenant                `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTenantResponse) Reset() {
	*x = GetTenantResponse{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTenantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTenantResponse) ProtoMessage() {}

func (x *GetTenantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTenantResponse.ProtoReflect.Descriptor instead.
func (*GetTenantResponse) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{27}
}

func (x *GetTenantResponse) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

// {{.Name}}
type CreateTenantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tenant        *Tenant                `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTenantRequest) Reset() {
	*x = CreateTenantRequest{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTenantRequest) ProtoMessage() {}

func (x *CreateTenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTenantRequest.ProtoReflect.Descriptor instead.
func (*CreateTenantRequest) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{28}
}

func (x *CreateTenantRequest) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

// {{.Name}}
type CreateTenantResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tenant        *Tenant                `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTenantResponse) Reset() {
	*x = CreateTenantResponse{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTenantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTenantResponse) ProtoMessage() {}

func (x *CreateTenantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTenantResponse.ProtoReflect.Descriptor instead.
func (*CreateTenantResponse) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{29}
}

func (x *CreateTenantResponse) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

// {{.Name}}
type UpdateTenantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tenant        *Tenant                `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTenantRequest) Reset() {
	*x = UpdateTenantRequest{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTenantRequest) ProtoMessage() {}

func (x *UpdateTenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTenantRequest.ProtoReflect.Descriptor instead.
func (*UpdateTenantRequest) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateTenantRequest) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

// {{.Name}}
type UpdateTenantResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tenant        *Tenant                `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTenantResponse) Reset() {
	*x = UpdateTenantResponse{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTenantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTenantResponse) ProtoMessage() {}

func (x *UpdateTenantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTenantResponse.ProtoReflect.Descriptor instead.
func (*UpdateTenantResponse) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateTenantResponse) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

// {{.Name}}
type DeleteTenantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTenantRequest) Reset() {
	*x = DeleteTenantRequest{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTenantRequest) ProtoMessage() {}

func (x *DeleteTenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTenantRequest.ProtoReflect.Descriptor instead.
func (*DeleteTenantRequest) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteTenantRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// {{.Name}}
type DeleteTenantResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTenantResponse) Reset() {
	*x = DeleteTenantResponse{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTenantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTenantResponse) ProtoMessage() {}

func (x *DeleteTenantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTenantResponse.ProtoReflect.Descriptor instead.
func (*DeleteTenantResponse) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{33}
}

type Asset_Report struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Asset_Report) Reset() {
	*x = Asset_Report{}
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Asset_Report) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset_Report) ProtoMessage() {}

func (x *Asset_Report) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_mkp_v202407_mkp_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset_Report.ProtoReflect.Descriptor instead.
func (*Asset_Report) Descriptor() ([]byte, []int) {
	return file_kentik_mkp_v202407_mkp_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Asset_Report) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Asset_Report) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

var File_kentik_mkp_v202407_mkp_proto protoreflect.FileDescriptor

const file_kentik_mkp_v202407_mkp_proto_rawDesc = "" +
	"\n" +
	"\x1ckentik/mkp/v202407/mkp.proto\x12\x12kentik.mkp.v202407\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a%kentik/core/v202303/annotations.proto\x1a\x1ekentik/user/v202211/user.proto\"\x91\x02\n" +
	"\x05Alert\x12\x14\n" +
	"\x05saved\x18\x01 \x01(\bR\x05saved\x12\x1b\n" +
	"\tpolicy_id\x18\x02 \x01(\tR\bpolicyId\x12=\n" +
	"\n" +
	"thresholds\x18\x03 \x03(\v2\x1d.kentik.mkp.v202407.ThresholdR\n" +
	"thresholds\x12%\n" +
	"\x0eprimary_metric\x18\x04 \x01(\tR\rprimaryMetric\x12+\n" +
	"\x11secondary_metrics\x18\x05 \x03(\tR\x10secondaryMetrics\x12\x1f\n" +
	"\vis_template\x18\x06 \x01(\bR\n" +
	"isTemplate\x12!\n" +
	"\fsubpolicy_id\x18\a \x01(\tR\vsubpolicyId\"\xba\x01\n" +
	"\x05Asset\x12:\n" +
	"\areports\x18\x01 \x03(\v2 .kentik.mkp.v202407.Asset.ReportR\areports\x12G\n" +
	"\x0edefault_report\x18\x02 \x01(\v2 .kentik.mkp.v202407.Asset.ReportR\rdefaultReport\x1a,\n" +
	"\x06Report\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\"\x8c\x04\n" +
	"\tThreshold\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x128\n" +
	"\bactivate\x18\x02 \x01(\v2\x1c.kentik.mkp.v202407.ActivateR\bactivate\x12\x1a\n" +
	"\bseverity\x18\x03 \x01(\tR\bseverity\x12=\n" +
	"\n" +
	"conditions\x18\x04 \x03(\v2\x1d.kentik.mkp.v202407.ConditionR\n" +
	"conditions\x12@\n" +
	"\vmitigations\x18\x05 \x03(\v2\x1e.kentik.mkp.v202407.MitigationR\vmitigations\x12\\\n" +
	"\x15notification_channels\x18\x06 \x03(\v2'.kentik.mkp.v202407.NotificationChannelR\x14notificationChannels\x124\n" +
	"\x16threshold_ack_required\x18\a \x01(\bR\x14thresholdAckRequired\x12>\n" +
	"\x1benable_tenant_notifications\x18\b \x01(\bR\x19enableTenantNotifications\x12D\n" +
	"\x1ereceive_landlord_notifications\x18\t \x01(\bR\x1creceiveLandlordNotifications\"\x9e\x01\n" +
	"\bActivate\x12\x14\n" +
	"\x05times\x18\x01 \x01(\rR\x05times\x12\x1a\n" +
	"\boperator\x18\x02 \x01(\tR\boperator\x12.\n" +
	"\x13time_window_seconds\x18\x03 \x01(\rR\x11timeWindowSeconds\x120\n" +
	"\x14grace_period_seconds\x18\x04 \x01(\rR\x12gracePeriodSeconds\"\xab\x01\n" +
	"\tCondition\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12\x16\n" +
	"\x06metric\x18\x03 \x01(\tR\x06metric\x12\x1a\n" +
	"\boperator\x18\x04 \x01(\tR\boperator\x12\x1d\n" +
	"\n" +
	"value_type\x18\x05 \x01(\tR\tvalueType\x12!\n" +
	"\fvalue_select\x18\x06 \x01(\tR\vvalueSelect\"\xd5\x03\n" +
	"\n" +
	"Mitigation\x12\x0e\n" +
	"\x02id\x18\r \x01(\tR\x02id\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"company_id\x18\x02 \x01(\tR\tcompanyId\x12\x1d\n" +
	"\n" +
	"pairing_id\x18\x03 \x01(\tR\tpairingId\x12!\n" +
	"\fthreshold_id\x18\x04 \x01(\tR\vthresholdId\x122\n" +
	"\x15is_method_overridable\x18\x05 \x01(\bR\x13isMethodOverridable\x122\n" +
	"\x15mitigation_apply_type\x18\x06 \x01(\tR\x13mitigationApplyType\x122\n" +
	"\x15mitigation_clear_type\x18\a \x01(\tR\x13mitigationClearType\x124\n" +
	"\x16mitigation_apply_timer\x18\b \x01(\rR\x14mitigationApplyTimer\x124\n" +
	"\x16mitigation_clear_timer\x18\t \x01(\rR\x14mitigationClearTimer\x126\n" +
	"\x17is_platform_overridable\x18\n" +
	" \x01(\bR\x15isPlatformOverridable\"%\n" +
	"\x13NotificationChannel\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"w\n" +
	"\n" +
	"TenantLink\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12*\n" +
	"\x11pivot_template_id\x18\x02 \x01(\tR\x0fpivotTemplateId\x12-\n" +
	"\x13pivot_user_group_id\x18\x03 \x01(\tR\x10pivotUserGroupId\"\xda\x05\n" +
	"\aPackage\x12H\n" +
	"\x02id\x18\x01 \x01(\tB8\x92A220Unique system assigned identifier of the package\xe0A\x03R\x02id\x12K\n" +
	"\n" +
	"company_id\x18\x02 \x01(\tB,\x92A&2$Company id of the associated package\xe0A\x03R\tcompanyId\x124\n" +
	"\x04name\x18\x03 \x01(\tB \x92A\x1a2\x18Name of package template\xe0A\x03R\x04name\x12I\n" +
	"\vdescription\x18\x04 \x01(\tB'\x92A!2\x1fDescription of package template\xe0A\x03R\vdescription\x12+\n" +
	"\x04icon\x18\x05 \x01(\tB\x17\x92A\x112\x0fIcon to display\xe0A\x03R\x04icon\x12+\n" +
	"\x05color\x18\x06 \x01(\tB\x15\x92A\x0f2\rColor of Icon\xe0A\x03R\x05color\x12X\n" +
	"\x06alerts\x18\a \x03(\v2\x19.kentik.mkp.v202407.AlertB%\x92A\x1f2\x1dAlert thresholds and policies\xe0A\x03R\x06alerts\x12l\n" +
	"\x06assets\x18\b \x01(\v2\x19.kentik.mkp.v202407.AssetB9\x92A321Views and Dashboards associated with the package.\xe0A\x03R\x06assets\x12:\n" +
	"\n" +
	"is_default\x18\t \x01(\bB\x1b\x92A\x152\x13Is default template\xe0A\x03R\tisDefault\x12Y\n" +
	"\atenants\x18\n" +
	" \x03(\v2\x1e.kentik.mkp.v202407.TenantLinkB\x1f\x92A\x192\x17Tenant link information\xe0A\x03R\atenants\"M\n" +
	"\x0fCustomDimension\x12\x1c\n" +
	"\tdimension\x18\x01 \x01(\tR\tdimension\x12\x1c\n" +
	"\tpopulator\x18\x02 \x01(\tR\tpopulator\"\xb6\x01\n" +
	"\aDevices\x12\x1f\n" +
	"\vall_devices\x18\x01 \x01(\bR\n" +
	"allDevices\x12!\n" +
	"\fdevice_types\x18\x02 \x03(\tR\vdeviceTypes\x12#\n" +
	"\rdevice_labels\x18\x03 \x03(\rR\fdeviceLabels\x12!\n" +
	"\fdevice_sites\x18\x04 \x03(\rR\vdeviceSites\x12\x1f\n" +
	"\vdevice_name\x18\x05 \x03(\tR\n" +
	"deviceName\"o\n" +
	"\vFilterField\x12!\n" +
	"\ffilter_field\x18\x01 \x01(\tR\vfilterField\x12\x1a\n" +
	"\boperator\x18\x02 \x01(\tR\boperator\x12!\n" +
	"\ffilter_value\x18\x03 \x01(\tR\vfilterValue\"\xba\x02\n" +
	"\x06Filter\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05named\x18\x02 \x01(\bR\x05named\x12\x1c\n" +
	"\tconnector\x18\x03 \x01(\tR\tconnector\x12\x10\n" +
	"\x03not\x18\x04 \x01(\bR\x03not\x12\x1d\n" +
	"\n" +
	"auto_added\x18\x05 \x01(\tR\tautoAdded\x12#\n" +
	"\rsaved_filters\x18\x06 \x03(\tR\fsavedFilters\x129\n" +
	"\afilters\x18\a \x03(\v2\x1f.kentik.mkp.v202407.FilterFieldR\afilters\x12?\n" +
	"\rfilter_groups\x18\b \x03(\v2\x1a.kentik.mkp.v202407.FilterR\ffilterGroups\x12\x16\n" +
	"\x06metric\x18\t \x03(\tR\x06metric\"\xc9\n" +
	"\n" +
	"\x06Tenant\x12G\n" +
	"\x02id\x18\x01 \x01(\tB7\x92A12/Unique system assigned identifier of the tenant\xe0A\x03R\x02id\x12K\n" +
	"\n" +
	"company_id\x18\x02 \x01(\tB,\x92A&2$Company id of the associated package\xe0A\x03R\tcompanyId\x12*\n" +
	"\x04name\x18\x03 \x01(\tB\x16\x92A\x102\x0eName of tenant\xe0A\x03R\x04name\x12?\n" +
	"\vdescription\x18\x04 \x01(\tB\x1d\x92A\x172\x15Description of tenant\xe0A\x03R\vdescription\x12%\n" +
	"\x04type\x18\x05 \x01(\tB\x11\x92A\v2\tSubtenant\xe0A\x03R\x04type\x12;\n" +
	"\aenabled\x18\x06 \x01(\bB!\x92A\x1b2\x19Is tenant actively enable\xe0A\x03R\aenabled\x12X\n" +
	"\x06alerts\x18\a \x03(\v2\x19.kentik.mkp.v202407.AlertB%\x92A\x1f2\x1dAlert thresholds and policies\xe0A\x03R\x06alerts\x12j\n" +
	"\x06assets\x18\x0f \x01(\v2\x19.kentik.mkp.v202407.AssetB7\x92A12/Views and Dashboards associated with the tenant\xe0A\x03R\x06assets\x12*\n" +
	"\x03asn\x18\b \x01(\tB\x18\x92A\x122\x10ASN data source.\xe0A\x03R\x03asn\x12-\n" +
	"\x04cidr\x18\t \x01(\tB\x19\x92A\x132\x11CIDR data source.\xe0A\x03R\x04cidr\x12v\n" +
	"\x11custom_dimensions\x18\n" +
	" \x03(\v2#.kentik.mkp.v202407.CustomDimensionB$\x92A\x1e2\x1cCustom dimension data source\xe0A\x03R\x10customDimensions\x12R\n" +
	"\adevices\x18\v \x01(\v2\x1b.kentik.mkp.v202407.DevicesB\x1b\x92A\x152\x13Device data source.\xe0A\x03R\adevices\x12R\n" +
	"\afilters\x18\f \x01(\v2\x1a.kentik.mkp.v202407.FilterB\x1c\x92A\x162\x14Data source filters.\xe0A\x03R\afilters\x12E\n" +
	"\x0einterface_name\x18\r \x01(\tB\x1e\x92A\x182\x16Interface data source.\xe0A\x03R\rinterfaceName\x128\n" +
	"\n" +
	"snmp_alias\x18\x0e \x01(\tB\x19\x92A\x132\x11SNMP data source.\xe0A\x03R\tsnmpAlias\x12e\n" +
	"\bpackages\x18\x10 \x03(\v2\x1b.kentik.mkp.v202407.PackageB,\x92A&2$Packages associated with the tenant.\xe0A\x03R\bpackages\x12Z\n" +
	"\x05users\x18\x11 \x03(\v2\x19.kentik.user.v202211.UserB)\x92A#2!Users associated with the tenant.\xe0A\x03R\x05users\x12S\n" +
	"\vtemplate_id\x18\x12 \x01(\tB2\x92A,2*Package template ID to assign with tenant.\xe0A\x03R\n" +
	"templateId\"\x14\n" +
	"\x12ListPackageRequest\"s\n" +
	"\x13ListPackageResponse\x127\n" +
	"\bpackages\x18\x01 \x03(\v2\x1b.kentik.mkp.v202407.PackageR\bpackages\x12#\n" +
	"\rinvalid_count\x18\x02 \x01(\rR\finvalidCount\"#\n" +
	"\x11GetPackageRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"K\n" +
	"\x12GetPackageResponse\x125\n" +
	"\apackage\x18\x01 \x01(\v2\x1b.kentik.mkp.v202407.PackageR\apackage\"M\n" +
	"\x14CreatePackageRequest\x125\n" +
	"\apackage\x18\x01 \x01(\v2\x1b.kentik.mkp.v202407.PackageR\apackage\"N\n" +
	"\x15CreatePackageResponse\x125\n" +
	"\apackage\x18\x01 \x01(\v2\x1b.kentik.mkp.v202407.PackageR\apackage\"M\n" +
	"\x14UpdatePackageRequest\x125\n" +
	"\apackage\x18\x01 \x01(\v2\x1b.kentik.mkp.v202407.PackageR\apackage\"N\n" +
	"\x15UpdatePackageResponse\x125\n" +
	"\apackage\x18\x01 \x01(\v2\x1b.kentik.mkp.v202407.PackageR\apackage\"&\n" +
	"\x14DeletePackageRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x17\n" +
	"\x15DeletePackageResponse\"\x13\n" +
	"\x11ListTenantRequest\"o\n" +
	"\x12ListTenantResponse\x124\n" +
	"\atenants\x18\x01 \x03(\v2\x1a.kentik.mkp.v202407.TenantR\atenants\x12#\n" +
	"\rinvalid_count\x18\x02 \x01(\rR\finvalidCount\"\"\n" +
	"\x10GetTenantRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"G\n" +
	"\x11GetTenantResponse\x122\n" +
	"\x06tenant\x18\x01 \x01(\v2\x1a.kentik.mkp.v202407.TenantR\x06tenant\"I\n" +
	"\x13CreateTenantRequest\x122\n" +
	"\x06tenant\x18\x01 \x01(\v2\x1a.kentik.mkp.v202407.TenantR\x06tenant\"J\n" +
	"\x14CreateTenantResponse\x122\n" +
	"\x06tenant\x18\x01 \x01(\v2\x1a.kentik.mkp.v202407.TenantR\x06tenant\"I\n" +
	"\x13UpdateTenantRequest\x122\n" +
	"\x06tenant\x18\x01 \x01(\v2\x1a.kentik.mkp.v202407.TenantR\x06tenant\"J\n" +
	"\x14UpdateTenantResponse\x122\n" +
	"\x06tenant\x18\x01 \x01(\v2\x1a.kentik.mkp.v202407.TenantR\x06tenant\"%\n" +
	"\x13DeleteTenantRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x16\n" +
	"\x14DeleteTenantResponse2\xf7\t\n" +
	"\x0ePackageService\x12\xd4\x01\n" +
	"\vListPackage\x12&.kentik.mkp.v202407.ListPackageRequest\x1a'.kentik.mkp.v202407.ListPackageResponse\"t\x92AB\x12\x12List MKP packages.\x1a\x1fReturns a list of MKP packages.*\vPackageList\xf2\xd7\x02\x0eadmin.mkp:read\x82\xd3\xe4\x93\x02\x17\x12\x15/mkp/v202407/packages\x12\xfa\x01\n" +
	"\n" +
	"GetPackage\x12%.kentik.mkp.v202407.GetPackageRequest\x1a&.kentik.mkp.v202407.GetPackageResponse\"\x9c\x01\x92Ae\x12!Get information aboout a package.\x1a4Returns information about package specified with ID.*\n" +
	"PackageGet\xf2\xd7\x02\x0eadmin.mkp:read\x82\xd3\xe4\x93\x02\x1c\x12\x1a/mkp/v202407/packages/{id}\x12\xff\x01\n" +
	"\rCreatePackage\x12(.kentik.mkp.v202407.CreatePackageRequest\x1a).kentik.mkp.v202407.CreatePackageResponse\"\x98\x01\x92Ab\x12\x1aCreate a package template.\x1a5Create package from request. returns created package.*\rPackageCreate\xf2\xd7\x02\x0fadmin.mkp:write\x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/mkp/v202407/packages\x12\xfa\x01\n" +
	"\rUpdatePackage\x12(.kentik.mkp.v202407.UpdatePackageRequest\x1a).kentik.mkp.v202407.UpdatePackageResponse\"\x93\x01\x92AP\x12\x11Update a package.\x1a,Update package attributes specified with id.*\rPackageUpdate\xf2\xd7\x02\x0fadmin.mkp:write\x82\xd3\xe4\x93\x02':\x01*\x1a\"/mkp/v202407/packages/{package.id}\x12\xe9\x01\n" +
	"\rDeletePackage\x12(.kentik.mkp.v202407.DeletePackageRequest\x1a).kentik.mkp.v202407.DeletePackageResponse\"\x82\x01\x92AJ\x12\x11Delete a package.\x1a&Deletes the package specified with id.*\rPackageDelete\xf2\xd7\x02\x0fadmin.mkp:write\x82\xd3\xe4\x93\x02\x1c*\x1a/mkp/v202407/packages/{id}\x1a&\xcaA\x12mkp.api.kentik.com\xea\xd7\x02\tadmin.mkp\x90\xd8\x02\x032\xc8\t\n" +
	"\rTenantService\x12\xcd\x01\n" +
	"\n" +
	"ListTenant\x12%.kentik.mkp.v202407.ListTenantRequest\x1a&.kentik.mkp.v202407.ListTenantResponse\"p\x92A?\x12\x11List MKP tenants.\x1a\x1eReturns a list of MKP tenants.*\n" +
	"TenantList\xf2\xd7\x02\x0eadmin.mkp:read\x82\xd3\xe4\x93\x02\x16\x12\x14/mkp/v202407/tenants\x12\xf4\x01\n" +
	"\tGetTenant\x12$.kentik.mkp.v202407.GetTenantRequest\x1a%.kentik.mkp.v202407.GetTenantResponse\"\x99\x01\x92Ac\x12 Get information aboout a tenant.\x1a4Returns information about package specified with ID.*\tTenantGet\xf2\xd7\x02\x0eadmin.mkp:read\x82\xd3\xe4\x93\x02\x1b\x12\x19/mkp/v202407/tenants/{id}\x12\xee\x01\n" +
	"\fCreateTenant\x12'.kentik.mkp.v202407.CreateTenantRequest\x1a(.kentik.mkp.v202407.CreateTenantResponse\"\x8a\x01\x92AU\x12\x10Create a tenant.\x1a3Create tenant from request. returns created tenant.*\fTenantCreate\xf2\xd7\x02\x0fadmin.mkp:write\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/mkp/v202407/tenants\x12\xf2\x01\n" +
	"\fUpdateTenant\x12'.kentik.mkp.v202407.UpdateTenantRequest\x1a(.kentik.mkp.v202407.UpdateTenantResponse\"\x8e\x01\x92AM\x12\x10Update a tenant.\x1a+Update tenant attributes specified with id.*\fTenantUpdate\xf2\xd7\x02\x0fadmin.mkp:write\x82\xd3\xe4\x93\x02%:\x01*\x1a /mkp/v202407/tenants/{tenant.id}\x12\xe1\x01\n" +
	"\fDeleteTenant\x12'.kentik.mkp.v202407.DeleteTenantRequest\x1a(.kentik.mkp.v202407.DeleteTenantResponse\"~\x92AG\x12\x10Delete a tenant.\x1a%Deletes the tenant specified with id.*\fTenantDelete\xf2\xd7\x02\x0fadmin.mkp:write\x82\xd3\xe4\x93\x02\x1b*\x19/mkp/v202407/tenants/{id}\x1a&\xcaA\x12mkp.api.kentik.com\xea\xd7\x02\tadmin.mkp\x90\xd8\x02\x03B\xa1\x13\x92A\xda\x12\x12\x9b\x11\n" +
	"\aMKP API\x12\xbf\x10# Overview\n" +
	"My Kentik Portal API enables programmatic access to tenants and package templates.\n" +
	"| Endpoint | Purpose |\n" +
	"|-----------|---------|\n" +
	"| TenantService  | CRUD operations for MKP tenants. |\n" +
	"| PackageService | CRUD operations for MKP templates. |\n" +
	"\n" +
	"Both REST endpoint and gRPC RPCs are provided.\n" +
	"\n" +
	"\n" +
	" # Tenant Attributes and Settings\n" +
	"| Attribute | Access | Purpose |\n" +
	"|-----------|--------|---------|\n" +
	"| id | RO | System-generated unique identifier of the tenant |\n" +
	"| company_id | RO | System-generated unique identifier of the company |\n" +
	"| name | RW | User specified name for the tenant |\n" +
	"| description | RW | User specified description for the tenant |\n" +
	"| type | RO | subtenant |\n" +
	"| enabled | RW | User specified tenant active status |\n" +
	"| cdate | RO | Creation timestamp |\n" +
	"| edate | RO | Last-modification timestamp |\n" +
	"| alerts | RO | Alert policy configurations |\n" +
	"| assets | RW | dashboard, views, and templates associate with tenant |\n" +
	"| asn | RW | ASN data source |\n" +
	"| cidr | RW | CIDR data source |\n" +
	"| custom_dimensions | RW | Custom dimension data source |\n" +
	"| devices | RW | Devices data source |\n" +
	"| filters | RW | Data source filters |\n" +
	"| interface_name | RW | Interface source filters |\n" +
	"| snmp_alias | RW | SNMP source filters |\n" +
	"| packages | RO | Package templates use by the tenant |\n" +
	"| users | RO | Users assign to the tenant |\n" +
	"| template_id | WO | Update tenant's packages setting with package/template id |\n" +
	"\n" +
	"\n" +
	" # Package Attributes and Settings\n" +
	"| Attribute | Access | Purpose |\n" +
	"|-----------|--------|---------|\n" +
	"| id | RO | System-generated unique identifier of the package |\n" +
	"| company_id | RO | System-generated unique identifier of the company |\n" +
	"| name | RW | User specified name for the package template |\n" +
	"| description | RW | User specified description for the package template |\n" +
	"| icon | RO | User specified icon |\n" +
	"| color | RW | User specified color of icon |\n" +
	"| alerts | RO | Alert policy configurations |\n" +
	"| assets | RW | dashboard, views, and templates associate with tenant |\n" +
	"| is_default | RW | Default package template to include for new tenant |\n" +
	"| tenants | RO | Tenants using this package template |\n" +
	"\n" +
	"\n" +
	"\"E\n" +
	"\x16Kentik API Engineering\x12+https://github.com/kentik/api-schema-public2\av202407*\x01\x022\x10application/json:\x10application/jsonZD\n" +
	"\x1e\n" +
	"\x05email\x12\x15\b\x02\x1a\x0fX-CH-Auth-Email \x02\n" +
	"\"\n" +
	"\x05token\x12\x19\b\x02\x1a\x13X-CH-Auth-API-Token \x02b\x16\n" +
	"\t\n" +
	"\x05email\x12\x00\n" +
	"\t\n" +
	"\x05token\x12\x00r5\n" +
	"\x16More about Kentik APIs\x12\x1bhttps://docs.kentik.com/apiZAgithub.com/kentik/api-schema-public/gen/go/kentik/mkp/v202407;mkpb\x06proto3"

var (
	file_kentik_mkp_v202407_mkp_proto_rawDescOnce sync.Once
	file_kentik_mkp_v202407_mkp_proto_rawDescData []byte
)

func file_kentik_mkp_v202407_mkp_proto_rawDescGZIP() []byte {
	file_kentik_mkp_v202407_mkp_proto_rawDescOnce.Do(func() {
		file_kentik_mkp_v202407_mkp_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kentik_mkp_v202407_mkp_proto_rawDesc), len(file_kentik_mkp_v202407_mkp_proto_rawDesc)))
	})
	return file_kentik_mkp_v202407_mkp_proto_rawDescData
}

var file_kentik_mkp_v202407_mkp_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_kentik_mkp_v202407_mkp_proto_goTypes = []any{
	(*Alert)(nil),                 // 0: kentik.mkp.v202407.Alert
	(*Asset)(nil),                 // 1: kentik.mkp.v202407.Asset
	(*Threshold)(nil),             // 2: kentik.mkp.v202407.Threshold
	(*Activate)(nil),              // 3: kentik.mkp.v202407.Activate
	(*Condition)(nil),             // 4: kentik.mkp.v202407.Condition
	(*Mitigation)(nil),            // 5: kentik.mkp.v202407.Mitigation
	(*NotificationChannel)(nil),   // 6: kentik.mkp.v202407.NotificationChannel
	(*TenantLink)(nil),            // 7: kentik.mkp.v202407.TenantLink
	(*Package)(nil),               // 8: kentik.mkp.v202407.Package
	(*CustomDimension)(nil),       // 9: kentik.mkp.v202407.CustomDimension
	(*Devices)(nil),               // 10: kentik.mkp.v202407.Devices
	(*FilterField)(nil),           // 11: kentik.mkp.v202407.FilterField
	(*Filter)(nil),                // 12: kentik.mkp.v202407.Filter
	(*Tenant)(nil),                // 13: kentik.mkp.v202407.Tenant
	(*ListPackageRequest)(nil),    // 14: kentik.mkp.v202407.ListPackageRequest
	(*ListPackageResponse)(nil),   // 15: kentik.mkp.v202407.ListPackageResponse
	(*GetPackageRequest)(nil),     // 16: kentik.mkp.v202407.GetPackageRequest
	(*GetPackageResponse)(nil),    // 17: kentik.mkp.v202407.GetPackageResponse
	(*CreatePackageRequest)(nil),  // 18: kentik.mkp.v202407.CreatePackageRequest
	(*CreatePackageResponse)(nil), // 19: kentik.mkp.v202407.CreatePackageResponse
	(*UpdatePackageRequest)(nil),  // 20: kentik.mkp.v202407.UpdatePackageRequest
	(*UpdatePackageResponse)(nil), // 21: kentik.mkp.v202407.UpdatePackageResponse
	(*DeletePackageRequest)(nil),  // 22: kentik.mkp.v202407.DeletePackageRequest
	(*DeletePackageResponse)(nil), // 23: kentik.mkp.v202407.DeletePackageResponse
	(*ListTenantRequest)(nil),     // 24: kentik.mkp.v202407.ListTenantRequest
	(*ListTenantResponse)(nil),    // 25: kentik.mkp.v202407.ListTenantResponse
	(*GetTenantRequest)(nil),      // 26: kentik.mkp.v202407.GetTenantRequest
	(*GetTenantResponse)(nil),     // 27: kentik.mkp.v202407.GetTenantResponse
	(*CreateTenantRequest)(nil),   // 28: kentik.mkp.v202407.CreateTenantRequest
	(*CreateTenantResponse)(nil),  // 29: kentik.mkp.v202407.CreateTenantResponse
	(*UpdateTenantRequest)(nil),   // 30: kentik.mkp.v202407.UpdateTenantRequest
	(*UpdateTenantResponse)(nil),  // 31: kentik.mkp.v202407.UpdateTenantResponse
	(*DeleteTenantRequest)(nil),   // 32: kentik.mkp.v202407.DeleteTenantRequest
	(*DeleteTenantResponse)(nil),  // 33: kentik.mkp.v202407.DeleteTenantResponse
	(*Asset_Report)(nil),          // 34: kentik.mkp.v202407.Asset.Report
	(*v202211.User)(nil),          // 35: kentik.user.v202211.User
}
var file_kentik_mkp_v202407_mkp_proto_depIdxs = []int32{
	2,  // 0: kentik.mkp.v202407.Alert.thresholds:type_name -> kentik.mkp.v202407.Threshold
	34, // 1: kentik.mkp.v202407.Asset.reports:type_name -> kentik.mkp.v202407.Asset.Report
	34, // 2: kentik.mkp.v202407.Asset.default_report:type_name -> kentik.mkp.v202407.Asset.Report
	3,  // 3: kentik.mkp.v202407.Threshold.activate:type_name -> kentik.mkp.v202407.Activate
	4,  // 4: kentik.mkp.v202407.Threshold.conditions:type_name -> kentik.mkp.v202407.Condition
	5,  // 5: kentik.mkp.v202407.Threshold.mitigations:type_name -> kentik.mkp.v202407.Mitigation
	6,  // 6: kentik.mkp.v202407.Threshold.notification_channels:type_name -> kentik.mkp.v202407.NotificationChannel
	0,  // 7: kentik.mkp.v202407.Package.alerts:type_name -> kentik.mkp.v202407.Alert
	1,  // 8: kentik.mkp.v202407.Package.assets:type_name -> kentik.mkp.v202407.Asset
	7,  // 9: kentik.mkp.v202407.Package.tenants:type_name -> kentik.mkp.v202407.TenantLink
	11, // 10: kentik.mkp.v202407.Filter.filters:type_name -> kentik.mkp.v202407.FilterField
	12, // 11: kentik.mkp.v202407.Filter.filter_groups:type_name -> kentik.mkp.v202407.Filter
	0,  // 12: kentik.mkp.v202407.Tenant.alerts:type_name -> kentik.mkp.v202407.Alert
	1,  // 13: kentik.mkp.v202407.Tenant.assets:type_name -> kentik.mkp.v202407.Asset
	9,  // 14: kentik.mkp.v202407.Tenant.custom_dimensions:type_name -> kentik.mkp.v202407.CustomDimension
	10, // 15: kentik.mkp.v202407.Tenant.devices:type_name -> kentik.mkp.v202407.Devices
	12, // 16: kentik.mkp.v202407.Tenant.filters:type_name -> kentik.mkp.v202407.Filter
	8,  // 17: kentik.mkp.v202407.Tenant.packages:type_name -> kentik.mkp.v202407.Package
	35, // 18: kentik.mkp.v202407.Tenant.users:type_name -> kentik.user.v202211.User
	8,  // 19: kentik.mkp.v202407.ListPackageResponse.packages:type_name -> kentik.mkp.v202407.Package
	8,  // 20: kentik.mkp.v202407.GetPackageResponse.package:type_name -> kentik.mkp.v202407.Package
	8,  // 21: kentik.mkp.v202407.CreatePackageRequest.package:type_name -> kentik.mkp.v202407.Package
	8,  // 22: kentik.mkp.v202407.CreatePackageResponse.package:type_name -> kentik.mkp.v202407.Package
	8,  // 23: kentik.mkp.v202407.UpdatePackageRequest.package:type_name -> kentik.mkp.v202407.Package
	8,  // 24: kentik.mkp.v202407.UpdatePackageResponse.package:type_name -> kentik.mkp.v202407.Package
	13, // 25: kentik.mkp.v202407.ListTenantResponse.tenants:type_name -> kentik.mkp.v202407.Tenant
	13, // 26: kentik.mkp.v202407.GetTenantResponse.tenant:type_name -> kentik.mkp.v202407.Tenant
	13, // 27: kentik.mkp.v202407.CreateTenantRequest.tenant:type_name -> kentik.mkp.v202407.Tenant
	13, // 28: kentik.mkp.v202407.CreateTenantResponse.tenant:type_name -> kentik.mkp.v202407.Tenant
	13, // 29: kentik.mkp.v202407.UpdateTenantRequest.tenant:type_name -> kentik.mkp.v202407.Tenant
	13, // 30: kentik.mkp.v202407.UpdateTenantResponse.tenant:type_name -> kentik.mkp.v202407.Tenant
	14, // 31: kentik.mkp.v202407.PackageService.ListPackage:input_type -> kentik.mkp.v202407.ListPackageRequest
	16, // 32: kentik.mkp.v202407.PackageService.GetPackage:input_type -> kentik.mkp.v202407.GetPackageRequest
	18, // 33: kentik.mkp.v202407.PackageService.CreatePackage:input_type -> kentik.mkp.v202407.CreatePackageRequest
	20, // 34: kentik.mkp.v202407.PackageService.UpdatePackage:input_type -> kentik.mkp.v202407.UpdatePackageRequest
	22, // 35: kentik.mkp.v202407.PackageService.DeletePackage:input_type -> kentik.mkp.v202407.DeletePackageRequest
	24, // 36: kentik.mkp.v202407.TenantService.ListTenant:input_type -> kentik.mkp.v202407.ListTenantRequest
	26, // 37: kentik.mkp.v202407.TenantService.GetTenant:input_type -> kentik.mkp.v202407.GetTenantRequest
	28, // 38: kentik.mkp.v202407.TenantService.CreateTenant:input_type -> kentik.mkp.v202407.CreateTenantRequest
	30, // 39: kentik.mkp.v202407.TenantService.UpdateTenant:input_type -> kentik.mkp.v202407.UpdateTenantRequest
	32, // 40: kentik.mkp.v202407.TenantService.DeleteTenant:input_type -> kentik.mkp.v202407.DeleteTenantRequest
	15, // 41: kentik.mkp.v202407.PackageService.ListPackage:output_type -> kentik.mkp.v202407.ListPackageResponse
	17, // 42: kentik.mkp.v202407.PackageService.GetPackage:output_type -> kentik.mkp.v202407.GetPackageResponse
	19, // 43: kentik.mkp.v202407.PackageService.CreatePackage:output_type -> kentik.mkp.v202407.CreatePackageResponse
	21, // 44: kentik.mkp.v202407.PackageService.UpdatePackage:output_type -> kentik.mkp.v202407.UpdatePackageResponse
	23, // 45: kentik.mkp.v202407.PackageService.DeletePackage:output_type -> kentik.mkp.v202407.DeletePackageResponse
	25, // 46: kentik.mkp.v202407.TenantService.ListTenant:output_type -> kentik.mkp.v202407.ListTenantResponse
	27, // 47: kentik.mkp.v202407.TenantService.GetTenant:output_type -> kentik.mkp.v202407.GetTenantResponse
	29, // 48: kentik.mkp.v202407.TenantService.CreateTenant:output_type -> kentik.mkp.v202407.CreateTenantResponse
	31, // 49: kentik.mkp.v202407.TenantService.UpdateTenant:output_type -> kentik.mkp.v202407.UpdateTenantResponse
	33, // 50: kentik.mkp.v202407.TenantService.DeleteTenant:output_type -> kentik.mkp.v202407.DeleteTenantResponse
	41, // [41:51] is the sub-list for method output_type
	31, // [31:41] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_kentik_mkp_v202407_mkp_proto_init() }
func file_kentik_mkp_v202407_mkp_proto_init() {
	if File_kentik_mkp_v202407_mkp_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kentik_mkp_v202407_mkp_proto_rawDesc), len(file_kentik_mkp_v202407_mkp_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_kentik_mkp_v202407_mkp_proto_goTypes,
		DependencyIndexes: file_kentik_mkp_v202407_mkp_proto_depIdxs,
		MessageInfos:      file_kentik_mkp_v202407_mkp_proto_msgTypes,
	}.Build()
	File_kentik_mkp_v202407_mkp_proto = out.File
	file_kentik_mkp_v202407_mkp_proto_goTypes = nil
	file_kentik_mkp_v202407_mkp_proto_depIdxs = nil
}
