// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: kentik/diagnostic/v202501/diagnostic.proto

package diagnostic

import (
	_ "github.com/kentik/api-schema-public/gen/go/kentik/core/v202303"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EchoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EchoRequest) Reset() {
	*x = EchoRequest{}
	mi := &file_kentik_diagnostic_v202501_diagnostic_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoRequest) ProtoMessage() {}

func (x *EchoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_diagnostic_v202501_diagnostic_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoRequest.ProtoReflect.Descriptor instead.
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return file_kentik_diagnostic_v202501_diagnostic_proto_rawDescGZIP(), []int{0}
}

func (x *EchoRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type EchoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EchoResponse) Reset() {
	*x = EchoResponse{}
	mi := &file_kentik_diagnostic_v202501_diagnostic_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoResponse) ProtoMessage() {}

func (x *EchoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_diagnostic_v202501_diagnostic_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoResponse.ProtoReflect.Descriptor instead.
func (*EchoResponse) Descriptor() ([]byte, []int) {
	return file_kentik_diagnostic_v202501_diagnostic_proto_rawDescGZIP(), []int{1}
}

func (x *EchoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ChatRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	MessageId string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	// Types that are valid to be assigned to Msg:
	//
	//	*ChatRequest_EchoRequest
	//	*ChatRequest_EchoResponse
	Msg           isChatRequest_Msg `protobuf_oneof:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatRequest) Reset() {
	*x = ChatRequest{}
	mi := &file_kentik_diagnostic_v202501_diagnostic_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRequest) ProtoMessage() {}

func (x *ChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_diagnostic_v202501_diagnostic_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRequest.ProtoReflect.Descriptor instead.
func (*ChatRequest) Descriptor() ([]byte, []int) {
	return file_kentik_diagnostic_v202501_diagnostic_proto_rawDescGZIP(), []int{2}
}

func (x *ChatRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ChatRequest) GetMsg() isChatRequest_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *ChatRequest) GetEchoRequest() *EchoRequest {
	if x != nil {
		if x, ok := x.Msg.(*ChatRequest_EchoRequest); ok {
			return x.EchoRequest
		}
	}
	return nil
}

func (x *ChatRequest) GetEchoResponse() *EchoResponse {
	if x != nil {
		if x, ok := x.Msg.(*ChatRequest_EchoResponse); ok {
			return x.EchoResponse
		}
	}
	return nil
}

type isChatRequest_Msg interface {
	isChatRequest_Msg()
}

type ChatRequest_EchoRequest struct {
	EchoRequest *EchoRequest `protobuf:"bytes,2,opt,name=echo_request,json=echoRequest,proto3,oneof"`
}

type ChatRequest_EchoResponse struct {
	EchoResponse *EchoResponse `protobuf:"bytes,3,opt,name=echo_response,json=echoResponse,proto3,oneof"`
}

func (*ChatRequest_EchoRequest) isChatRequest_Msg() {}

func (*ChatRequest_EchoResponse) isChatRequest_Msg() {}

type ChatResponse struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	MessageId string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	// Types that are valid to be assigned to Msg:
	//
	//	*ChatResponse_EchoRequest
	//	*ChatResponse_EchoResponse
	Msg           isChatResponse_Msg `protobuf_oneof:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatResponse) Reset() {
	*x = ChatResponse{}
	mi := &file_kentik_diagnostic_v202501_diagnostic_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatResponse) ProtoMessage() {}

func (x *ChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_diagnostic_v202501_diagnostic_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatResponse.ProtoReflect.Descriptor instead.
func (*ChatResponse) Descriptor() ([]byte, []int) {
	return file_kentik_diagnostic_v202501_diagnostic_proto_rawDescGZIP(), []int{3}
}

func (x *ChatResponse) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ChatResponse) GetMsg() isChatResponse_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *ChatResponse) GetEchoRequest() *EchoRequest {
	if x != nil {
		if x, ok := x.Msg.(*ChatResponse_EchoRequest); ok {
			return x.EchoRequest
		}
	}
	return nil
}

func (x *ChatResponse) GetEchoResponse() *EchoResponse {
	if x != nil {
		if x, ok := x.Msg.(*ChatResponse_EchoResponse); ok {
			return x.EchoResponse
		}
	}
	return nil
}

type isChatResponse_Msg interface {
	isChatResponse_Msg()
}

type ChatResponse_EchoRequest struct {
	EchoRequest *EchoRequest `protobuf:"bytes,2,opt,name=echo_request,json=echoRequest,proto3,oneof"`
}

type ChatResponse_EchoResponse struct {
	EchoResponse *EchoResponse `protobuf:"bytes,3,opt,name=echo_response,json=echoResponse,proto3,oneof"`
}

func (*ChatResponse_EchoRequest) isChatResponse_Msg() {}

func (*ChatResponse_EchoResponse) isChatResponse_Msg() {}

var File_kentik_diagnostic_v202501_diagnostic_proto protoreflect.FileDescriptor

const file_kentik_diagnostic_v202501_diagnostic_proto_rawDesc = "" +
	"\n" +
	"*kentik/diagnostic/v202501/diagnostic.proto\x12\x19kentik.diagnostic.v202501\x1a\x17google/api/client.proto\x1a%kentik/core/v202303/annotations.proto\"'\n" +
	"\vEchoRequest\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"(\n" +
	"\fEchoResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\xd0\x01\n" +
	"\vChatRequest\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12K\n" +
	"\fecho_request\x18\x02 \x01(\v2&.kentik.diagnostic.v202501.EchoRequestH\x00R\vechoRequest\x12N\n" +
	"\recho_response\x18\x03 \x01(\v2'.kentik.diagnostic.v202501.EchoResponseH\x00R\fechoResponseB\x05\n" +
	"\x03msg\"\xd1\x01\n" +
	"\fChatResponse\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12K\n" +
	"\fecho_request\x18\x02 \x01(\v2&.kentik.diagnostic.v202501.EchoRequestH\x00R\vechoRequest\x12N\n" +
	"\recho_response\x18\x03 \x01(\v2'.kentik.diagnostic.v202501.EchoResponseH\x00R\fechoResponseB\x05\n" +
	"\x03msg2\xfd\x01\n" +
	"\x11DiagnosticService\x12c\n" +
	"\x04Echo\x12&.kentik.diagnostic.v202501.EchoRequest\x1a'.kentik.diagnostic.v202501.EchoResponse\"\n" +
	"\xf2\xd7\x02\x06PUBLIC\x12g\n" +
	"\x04Chat\x12&.kentik.diagnostic.v202501.ChatRequest\x1a'.kentik.diagnostic.v202501.ChatResponse\"\n" +
	"\xf2\xd7\x02\x06PUBLIC(\x010\x01\x1a\x1a\xcaA\x13grpc.api.kentik.com\x90\xd8\x02\x04BQZOgithub.com/kentik/api-schema-public/gen/go/kentik/diagnostic/v202501;diagnosticb\x06proto3"

var (
	file_kentik_diagnostic_v202501_diagnostic_proto_rawDescOnce sync.Once
	file_kentik_diagnostic_v202501_diagnostic_proto_rawDescData []byte
)

func file_kentik_diagnostic_v202501_diagnostic_proto_rawDescGZIP() []byte {
	file_kentik_diagnostic_v202501_diagnostic_proto_rawDescOnce.Do(func() {
		file_kentik_diagnostic_v202501_diagnostic_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kentik_diagnostic_v202501_diagnostic_proto_rawDesc), len(file_kentik_diagnostic_v202501_diagnostic_proto_rawDesc)))
	})
	return file_kentik_diagnostic_v202501_diagnostic_proto_rawDescData
}

var file_kentik_diagnostic_v202501_diagnostic_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_kentik_diagnostic_v202501_diagnostic_proto_goTypes = []any{
	(*EchoRequest)(nil),  // 0: kentik.diagnostic.v202501.EchoRequest
	(*EchoResponse)(nil), // 1: kentik.diagnostic.v202501.EchoResponse
	(*ChatRequest)(nil),  // 2: kentik.diagnostic.v202501.ChatRequest
	(*ChatResponse)(nil), // 3: kentik.diagnostic.v202501.ChatResponse
}
var file_kentik_diagnostic_v202501_diagnostic_proto_depIdxs = []int32{
	0, // 0: kentik.diagnostic.v202501.ChatRequest.echo_request:type_name -> kentik.diagnostic.v202501.EchoRequest
	1, // 1: kentik.diagnostic.v202501.ChatRequest.echo_response:type_name -> kentik.diagnostic.v202501.EchoResponse
	0, // 2: kentik.diagnostic.v202501.ChatResponse.echo_request:type_name -> kentik.diagnostic.v202501.EchoRequest
	1, // 3: kentik.diagnostic.v202501.ChatResponse.echo_response:type_name -> kentik.diagnostic.v202501.EchoResponse
	0, // 4: kentik.diagnostic.v202501.DiagnosticService.Echo:input_type -> kentik.diagnostic.v202501.EchoRequest
	2, // 5: kentik.diagnostic.v202501.DiagnosticService.Chat:input_type -> kentik.diagnostic.v202501.ChatRequest
	1, // 6: kentik.diagnostic.v202501.DiagnosticService.Echo:output_type -> kentik.diagnostic.v202501.EchoResponse
	3, // 7: kentik.diagnostic.v202501.DiagnosticService.Chat:output_type -> kentik.diagnostic.v202501.ChatResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_kentik_diagnostic_v202501_diagnostic_proto_init() }
func file_kentik_diagnostic_v202501_diagnostic_proto_init() {
	if File_kentik_diagnostic_v202501_diagnostic_proto != nil {
		return
	}
	file_kentik_diagnostic_v202501_diagnostic_proto_msgTypes[2].OneofWrappers = []any{
		(*ChatRequest_EchoRequest)(nil),
		(*ChatRequest_EchoResponse)(nil),
	}
	file_kentik_diagnostic_v202501_diagnostic_proto_msgTypes[3].OneofWrappers = []any{
		(*ChatResponse_EchoRequest)(nil),
		(*ChatResponse_EchoResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kentik_diagnostic_v202501_diagnostic_proto_rawDesc), len(file_kentik_diagnostic_v202501_diagnostic_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kentik_diagnostic_v202501_diagnostic_proto_goTypes,
		DependencyIndexes: file_kentik_diagnostic_v202501_diagnostic_proto_depIdxs,
		MessageInfos:      file_kentik_diagnostic_v202501_diagnostic_proto_msgTypes,
	}.Build()
	File_kentik_diagnostic_v202501_diagnostic_proto = out.File
	file_kentik_diagnostic_v202501_diagnostic_proto_goTypes = nil
	file_kentik_diagnostic_v202501_diagnostic_proto_depIdxs = nil
}
