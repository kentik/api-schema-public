// Code generated by protoc-gen-go-copy. DO NOT EDIT.
// source: kentik/kde/v202212/fastbit_result.proto

package kde

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *FastbitResult) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *FastbitResult:
		x.Int32Column = v.GetInt32Column()
		x.Int64Column = v.GetInt64Column()
		x.Uint32Column = v.GetUint32Column()
		x.Uint64Column = v.GetUint64Column()
		x.StringColumn = v.GetStringColumn()
		x.BytesColumn = v.GetBytesColumn()
		x.FloatColumn = v.GetFloatColumn()
		x.DoubleColumn = v.GetDoubleColumn()
		if v != nil {
			x.Params = v.Params
		} else {
			x.Params = nil
		}
	default:
		if v, ok := v.(interface {
			GetInt32Column() []*FastbitResult_Int32Column
		}); ok {
			x.Int32Column = v.GetInt32Column()
		}
		if v, ok := v.(interface {
			GetInt64Column() []*FastbitResult_Int64Column
		}); ok {
			x.Int64Column = v.GetInt64Column()
		}
		if v, ok := v.(interface {
			GetUint32Column() []*FastbitResult_UInt32Column
		}); ok {
			x.Uint32Column = v.GetUint32Column()
		}
		if v, ok := v.(interface {
			GetUint64Column() []*FastbitResult_UInt64Column
		}); ok {
			x.Uint64Column = v.GetUint64Column()
		}
		if v, ok := v.(interface {
			GetStringColumn() []*FastbitResult_StringColumn
		}); ok {
			x.StringColumn = v.GetStringColumn()
		}
		if v, ok := v.(interface {
			GetBytesColumn() []*FastbitResult_BytesColumn
		}); ok {
			x.BytesColumn = v.GetBytesColumn()
		}
		if v, ok := v.(interface {
			GetFloatColumn() []*FastbitResult_FloatColumn
		}); ok {
			x.FloatColumn = v.GetFloatColumn()
		}
		if v, ok := v.(interface {
			GetDoubleColumn() []*FastbitResult_DoubleColumn
		}); ok {
			x.DoubleColumn = v.GetDoubleColumn()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *FastbitResult) Proto_ShallowClone() (c *FastbitResult) {
	if x != nil {
		c = new(FastbitResult)
		c.Params = x.Params
		c.Int32Column = x.Int32Column
		c.Int64Column = x.Int64Column
		c.Uint32Column = x.Uint32Column
		c.Uint64Column = x.Uint64Column
		c.StringColumn = x.StringColumn
		c.BytesColumn = x.BytesColumn
		c.FloatColumn = x.FloatColumn
		c.DoubleColumn = x.DoubleColumn
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *FastbitResult_ColumnHeaderInfo) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *FastbitResult_ColumnHeaderInfo:
		if v != nil {
			x.Name = v.Name
			x.Position = v.Position
			x.Format = v.Format
			x.AggName = v.AggName
		} else {
			x.Name = nil
			x.Position = nil
			x.Format = nil
			x.AggName = nil
		}
	default:
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *FastbitResult_ColumnHeaderInfo) Proto_ShallowClone() (c *FastbitResult_ColumnHeaderInfo) {
	if x != nil {
		c = new(FastbitResult_ColumnHeaderInfo)
		c.Name = x.Name
		c.Position = x.Position
		c.Format = x.Format
		c.AggName = x.AggName
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *FastbitResult_InputParams) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *FastbitResult_InputParams:
		x.MemberId = v.GetMemberId()
		if v != nil {
			x.IOrderby = v.IOrderby
			x.IOffset = v.IOffset
			x.ILimit = v.ILimit
			x.IStartTime = v.IStartTime
			x.IEndTime = v.IEndTime
			x.IDeviceName = v.IDeviceName
			x.IDeviceId = v.IDeviceId
			x.ISqStart = v.ISqStart
			x.ISqEnd = v.ISqEnd
			x.IDuration = v.IDuration
			x.IDeviceSiteName = v.IDeviceSiteName
			x.IDeviceType = v.IDeviceType
			x.IDebugInfo = v.IDebugInfo
			x.UseMemberId = v.UseMemberId
		} else {
			x.IOrderby = nil
			x.IOffset = nil
			x.ILimit = nil
			x.IStartTime = nil
			x.IEndTime = nil
			x.IDeviceName = nil
			x.IDeviceId = nil
			x.ISqStart = nil
			x.ISqEnd = nil
			x.IDuration = nil
			x.IDeviceSiteName = nil
			x.IDeviceType = nil
			x.IDebugInfo = nil
			x.UseMemberId = nil
		}
	default:
		if v, ok := v.(interface {
			GetMemberId() map[int64]*FastbitResult_MemberId
		}); ok {
			x.MemberId = v.GetMemberId()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *FastbitResult_InputParams) Proto_ShallowClone() (c *FastbitResult_InputParams) {
	if x != nil {
		c = new(FastbitResult_InputParams)
		c.IOrderby = x.IOrderby
		c.IOffset = x.IOffset
		c.ILimit = x.ILimit
		c.IStartTime = x.IStartTime
		c.IEndTime = x.IEndTime
		c.IDeviceName = x.IDeviceName
		c.IDeviceId = x.IDeviceId
		c.ISqStart = x.ISqStart
		c.ISqEnd = x.ISqEnd
		c.IDuration = x.IDuration
		c.IDeviceSiteName = x.IDeviceSiteName
		c.IDeviceType = x.IDeviceType
		c.IDebugInfo = x.IDebugInfo
		c.UseMemberId = x.UseMemberId
		c.MemberId = x.MemberId
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *FastbitResult_MemberId) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *FastbitResult_MemberId:
		if v != nil {
			x.IDeviceName = v.IDeviceName
			x.IDeviceSiteName = v.IDeviceSiteName
			x.IDeviceType = v.IDeviceType
		} else {
			x.IDeviceName = nil
			x.IDeviceSiteName = nil
			x.IDeviceType = nil
		}
	default:
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *FastbitResult_MemberId) Proto_ShallowClone() (c *FastbitResult_MemberId) {
	if x != nil {
		c = new(FastbitResult_MemberId)
		c.IDeviceName = x.IDeviceName
		c.IDeviceSiteName = x.IDeviceSiteName
		c.IDeviceType = x.IDeviceType
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *FastbitResult_Int32Column) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *FastbitResult_Int32Column:
		x.Values = v.GetValues()
		if v != nil {
			x.Header = v.Header
		} else {
			x.Header = nil
		}
	default:
		if v, ok := v.(interface{ GetValues() []rune }); ok {
			x.Values = v.GetValues()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *FastbitResult_Int32Column) Proto_ShallowClone() (c *FastbitResult_Int32Column) {
	if x != nil {
		c = new(FastbitResult_Int32Column)
		c.Header = x.Header
		c.Values = x.Values
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *FastbitResult_Int64Column) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *FastbitResult_Int64Column:
		x.Values = v.GetValues()
		if v != nil {
			x.Header = v.Header
		} else {
			x.Header = nil
		}
	default:
		if v, ok := v.(interface{ GetValues() []int64 }); ok {
			x.Values = v.GetValues()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *FastbitResult_Int64Column) Proto_ShallowClone() (c *FastbitResult_Int64Column) {
	if x != nil {
		c = new(FastbitResult_Int64Column)
		c.Header = x.Header
		c.Values = x.Values
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *FastbitResult_UInt32Column) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *FastbitResult_UInt32Column:
		x.Values = v.GetValues()
		if v != nil {
			x.Header = v.Header
		} else {
			x.Header = nil
		}
	default:
		if v, ok := v.(interface{ GetValues() []uint32 }); ok {
			x.Values = v.GetValues()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *FastbitResult_UInt32Column) Proto_ShallowClone() (c *FastbitResult_UInt32Column) {
	if x != nil {
		c = new(FastbitResult_UInt32Column)
		c.Header = x.Header
		c.Values = x.Values
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *FastbitResult_UInt64Column) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *FastbitResult_UInt64Column:
		x.Values = v.GetValues()
		if v != nil {
			x.Header = v.Header
		} else {
			x.Header = nil
		}
	default:
		if v, ok := v.(interface{ GetValues() []uint64 }); ok {
			x.Values = v.GetValues()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *FastbitResult_UInt64Column) Proto_ShallowClone() (c *FastbitResult_UInt64Column) {
	if x != nil {
		c = new(FastbitResult_UInt64Column)
		c.Header = x.Header
		c.Values = x.Values
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *FastbitResult_StringColumn) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *FastbitResult_StringColumn:
		x.Values = v.GetValues()
		if v != nil {
			x.Header = v.Header
		} else {
			x.Header = nil
		}
	default:
		if v, ok := v.(interface{ GetValues() []string }); ok {
			x.Values = v.GetValues()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *FastbitResult_StringColumn) Proto_ShallowClone() (c *FastbitResult_StringColumn) {
	if x != nil {
		c = new(FastbitResult_StringColumn)
		c.Header = x.Header
		c.Values = x.Values
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *FastbitResult_BytesColumn) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *FastbitResult_BytesColumn:
		x.Values = v.GetValues()
		if v != nil {
			x.Header = v.Header
		} else {
			x.Header = nil
		}
	default:
		if v, ok := v.(interface{ GetValues() [][]byte }); ok {
			x.Values = v.GetValues()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *FastbitResult_BytesColumn) Proto_ShallowClone() (c *FastbitResult_BytesColumn) {
	if x != nil {
		c = new(FastbitResult_BytesColumn)
		c.Header = x.Header
		c.Values = x.Values
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *FastbitResult_FloatColumn) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *FastbitResult_FloatColumn:
		x.Values = v.GetValues()
		if v != nil {
			x.Header = v.Header
		} else {
			x.Header = nil
		}
	default:
		if v, ok := v.(interface{ GetValues() []float32 }); ok {
			x.Values = v.GetValues()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *FastbitResult_FloatColumn) Proto_ShallowClone() (c *FastbitResult_FloatColumn) {
	if x != nil {
		c = new(FastbitResult_FloatColumn)
		c.Header = x.Header
		c.Values = x.Values
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *FastbitResult_DoubleColumn) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *FastbitResult_DoubleColumn:
		x.Values = v.GetValues()
		if v != nil {
			x.Header = v.Header
		} else {
			x.Header = nil
		}
	default:
		if v, ok := v.(interface{ GetValues() []float64 }); ok {
			x.Values = v.GetValues()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *FastbitResult_DoubleColumn) Proto_ShallowClone() (c *FastbitResult_DoubleColumn) {
	if x != nil {
		c = new(FastbitResult_DoubleColumn)
		c.Header = x.Header
		c.Values = x.Values
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *FastbitResponse) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *FastbitResponse:
		if v != nil {
			x.Target = v.Target
			x.RequestId = v.RequestId
			x.Result = v.Result
			x.Error = v.Error
			x.RequestKey = v.RequestKey
			x.FromCache = v.FromCache
			x.NumResp = v.NumResp
			x.ThisResp = v.ThisResp
			x.MissingMds = v.MissingMds
			x.TooLargeEntity = v.TooLargeEntity
		} else {
			x.Target = nil
			x.RequestId = nil
			x.Result = nil
			x.Error = nil
			x.RequestKey = nil
			x.FromCache = nil
			x.NumResp = nil
			x.ThisResp = nil
			x.MissingMds = nil
			x.TooLargeEntity = nil
		}
	default:
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *FastbitResponse) Proto_ShallowClone() (c *FastbitResponse) {
	if x != nil {
		c = new(FastbitResponse)
		c.Target = x.Target
		c.RequestId = x.RequestId
		c.Result = x.Result
		c.Error = x.Error
		c.RequestKey = x.RequestKey
		c.FromCache = x.FromCache
		c.NumResp = x.NumResp
		c.ThisResp = x.ThisResp
		c.MissingMds = x.MissingMds
		c.TooLargeEntity = x.TooLargeEntity
	}
	return
}
