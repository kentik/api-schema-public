// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: kentik/capacity_plan/v202212/capacity_plan.proto

package capacity_plan

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/kentik/api-schema-public/gen/go/kentik/core/v202303"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// {{.Name}}
type Config struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Runout        *Config_RunoutConfig   `protobuf:"bytes,1,opt,name=runout,proto3" json:"runout,omitempty"`
	Utilization   *Config_UtilConfig     `protobuf:"bytes,2,opt,name=utilization,proto3" json:"utilization,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetRunout() *Config_RunoutConfig {
	if x != nil {
		return x.Runout
	}
	return nil
}

func (x *Config) GetUtilization() *Config_UtilConfig {
	if x != nil {
		return x.Utilization
	}
	return nil
}

// {{.Name}}
type SummaryStatus struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Runout        *SummaryStatus_RunoutStatus `protobuf:"bytes,1,opt,name=runout,proto3" json:"runout,omitempty"`
	Utilization   *SummaryStatus_UtilStatus   `protobuf:"bytes,2,opt,name=utilization,proto3" json:"utilization,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummaryStatus) Reset() {
	*x = SummaryStatus{}
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummaryStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryStatus) ProtoMessage() {}

func (x *SummaryStatus) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryStatus.ProtoReflect.Descriptor instead.
func (*SummaryStatus) Descriptor() ([]byte, []int) {
	return file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescGZIP(), []int{1}
}

func (x *SummaryStatus) GetRunout() *SummaryStatus_RunoutStatus {
	if x != nil {
		return x.Runout
	}
	return nil
}

func (x *SummaryStatus) GetUtilization() *SummaryStatus_UtilStatus {
	if x != nil {
		return x.Utilization
	}
	return nil
}

// {{.Name}}
type CapacitySummary struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Id            string                            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status        string                            `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Interfaces    *CapacitySummary_InterfacesDetail `protobuf:"bytes,5,opt,name=interfaces,proto3" json:"interfaces,omitempty"`
	Config        *Config                           `protobuf:"bytes,6,opt,name=config,proto3" json:"config,omitempty"`
	SummaryStatus *SummaryStatus                    `protobuf:"bytes,7,opt,name=summary_status,json=summaryStatus,proto3" json:"summary_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapacitySummary) Reset() {
	*x = CapacitySummary{}
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapacitySummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapacitySummary) ProtoMessage() {}

func (x *CapacitySummary) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapacitySummary.ProtoReflect.Descriptor instead.
func (*CapacitySummary) Descriptor() ([]byte, []int) {
	return file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescGZIP(), []int{2}
}

func (x *CapacitySummary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CapacitySummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CapacitySummary) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CapacitySummary) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CapacitySummary) GetInterfaces() *CapacitySummary_InterfacesDetail {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *CapacitySummary) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CapacitySummary) GetSummaryStatus() *SummaryStatus {
	if x != nil {
		return x.SummaryStatus
	}
	return nil
}

// {{.Name}}
type CapacityPlan struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Id            string                          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                          `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status        string                          `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Interfaces    []*CapacityPlan_InterfaceDetail `protobuf:"bytes,5,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	Config        *Config                         `protobuf:"bytes,6,opt,name=config,proto3" json:"config,omitempty"`
	SummaryStatus *SummaryStatus                  `protobuf:"bytes,7,opt,name=summary_status,json=summaryStatus,proto3" json:"summary_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapacityPlan) Reset() {
	*x = CapacityPlan{}
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapacityPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapacityPlan) ProtoMessage() {}

func (x *CapacityPlan) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapacityPlan.ProtoReflect.Descriptor instead.
func (*CapacityPlan) Descriptor() ([]byte, []int) {
	return file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescGZIP(), []int{3}
}

func (x *CapacityPlan) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CapacityPlan) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CapacityPlan) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CapacityPlan) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CapacityPlan) GetInterfaces() []*CapacityPlan_InterfaceDetail {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *CapacityPlan) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CapacityPlan) GetSummaryStatus() *SummaryStatus {
	if x != nil {
		return x.SummaryStatus
	}
	return nil
}

// {{.Name}}
type ListCapacitySummariesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCapacitySummariesRequest) Reset() {
	*x = ListCapacitySummariesRequest{}
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCapacitySummariesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCapacitySummariesRequest) ProtoMessage() {}

func (x *ListCapacitySummariesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCapacitySummariesRequest.ProtoReflect.Descriptor instead.
func (*ListCapacitySummariesRequest) Descriptor() ([]byte, []int) {
	return file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescGZIP(), []int{4}
}

// {{.Name}}
type ListCapacitySummariesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Capacity      []*CapacitySummary     `protobuf:"bytes,1,rep,name=capacity,proto3" json:"capacity,omitempty"`
	InvalidCount  uint32                 `protobuf:"varint,2,opt,name=invalid_count,json=invalidCount,proto3" json:"invalid_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCapacitySummariesResponse) Reset() {
	*x = ListCapacitySummariesResponse{}
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCapacitySummariesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCapacitySummariesResponse) ProtoMessage() {}

func (x *ListCapacitySummariesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCapacitySummariesResponse.ProtoReflect.Descriptor instead.
func (*ListCapacitySummariesResponse) Descriptor() ([]byte, []int) {
	return file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescGZIP(), []int{5}
}

func (x *ListCapacitySummariesResponse) GetCapacity() []*CapacitySummary {
	if x != nil {
		return x.Capacity
	}
	return nil
}

func (x *ListCapacitySummariesResponse) GetInvalidCount() uint32 {
	if x != nil {
		return x.InvalidCount
	}
	return 0
}

// {{.Name}}
type GetCapacitySummaryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCapacitySummaryRequest) Reset() {
	*x = GetCapacitySummaryRequest{}
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCapacitySummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCapacitySummaryRequest) ProtoMessage() {}

func (x *GetCapacitySummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCapacitySummaryRequest.ProtoReflect.Descriptor instead.
func (*GetCapacitySummaryRequest) Descriptor() ([]byte, []int) {
	return file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescGZIP(), []int{6}
}

func (x *GetCapacitySummaryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// {{.Name}}
type GetCapacitySummaryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Capacity      *CapacitySummary       `protobuf:"bytes,1,opt,name=capacity,proto3" json:"capacity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCapacitySummaryResponse) Reset() {
	*x = GetCapacitySummaryResponse{}
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCapacitySummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCapacitySummaryResponse) ProtoMessage() {}

func (x *GetCapacitySummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCapacitySummaryResponse.ProtoReflect.Descriptor instead.
func (*GetCapacitySummaryResponse) Descriptor() ([]byte, []int) {
	return file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescGZIP(), []int{7}
}

func (x *GetCapacitySummaryResponse) GetCapacity() *CapacitySummary {
	if x != nil {
		return x.Capacity
	}
	return nil
}

// {{.Name}}
type ListCapacityPlansRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCapacityPlansRequest) Reset() {
	*x = ListCapacityPlansRequest{}
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCapacityPlansRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCapacityPlansRequest) ProtoMessage() {}

func (x *ListCapacityPlansRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCapacityPlansRequest.ProtoReflect.Descriptor instead.
func (*ListCapacityPlansRequest) Descriptor() ([]byte, []int) {
	return file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescGZIP(), []int{8}
}

// {{.Name}}
type ListCapacityPlansResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Capacity      []*CapacityPlan        `protobuf:"bytes,1,rep,name=capacity,proto3" json:"capacity,omitempty"`
	InvalidCount  uint32                 `protobuf:"varint,2,opt,name=invalid_count,json=invalidCount,proto3" json:"invalid_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCapacityPlansResponse) Reset() {
	*x = ListCapacityPlansResponse{}
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCapacityPlansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCapacityPlansResponse) ProtoMessage() {}

func (x *ListCapacityPlansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCapacityPlansResponse.ProtoReflect.Descriptor instead.
func (*ListCapacityPlansResponse) Descriptor() ([]byte, []int) {
	return file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescGZIP(), []int{9}
}

func (x *ListCapacityPlansResponse) GetCapacity() []*CapacityPlan {
	if x != nil {
		return x.Capacity
	}
	return nil
}

func (x *ListCapacityPlansResponse) GetInvalidCount() uint32 {
	if x != nil {
		return x.InvalidCount
	}
	return 0
}

// {{.Name}}
type GetCapacityPlanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCapacityPlanRequest) Reset() {
	*x = GetCapacityPlanRequest{}
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCapacityPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCapacityPlanRequest) ProtoMessage() {}

func (x *GetCapacityPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCapacityPlanRequest.ProtoReflect.Descriptor instead.
func (*GetCapacityPlanRequest) Descriptor() ([]byte, []int) {
	return file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescGZIP(), []int{10}
}

func (x *GetCapacityPlanRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// {{.Name}}
type GetCapacityPlanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Capacity      *CapacityPlan          `protobuf:"bytes,1,opt,name=capacity,proto3" json:"capacity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCapacityPlanResponse) Reset() {
	*x = GetCapacityPlanResponse{}
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCapacityPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCapacityPlanResponse) ProtoMessage() {}

func (x *GetCapacityPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCapacityPlanResponse.ProtoReflect.Descriptor instead.
func (*GetCapacityPlanResponse) Descriptor() ([]byte, []int) {
	return file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescGZIP(), []int{11}
}

func (x *GetCapacityPlanResponse) GetCapacity() *CapacityPlan {
	if x != nil {
		return x.Capacity
	}
	return nil
}

// {{.Name}}
type Config_RunoutConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Strategy      string                 `protobuf:"bytes,1,opt,name=strategy,proto3" json:"strategy,omitempty"`
	WarnQty       *uint32                `protobuf:"varint,2,opt,name=warn_qty,json=warnQty,proto3,oneof" json:"warn_qty,omitempty"`
	CritQty       *uint32                `protobuf:"varint,3,opt,name=crit_qty,json=critQty,proto3,oneof" json:"crit_qty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config_RunoutConfig) Reset() {
	*x = Config_RunoutConfig{}
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config_RunoutConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_RunoutConfig) ProtoMessage() {}

func (x *Config_RunoutConfig) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_RunoutConfig.ProtoReflect.Descriptor instead.
func (*Config_RunoutConfig) Descriptor() ([]byte, []int) {
	return file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Config_RunoutConfig) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

func (x *Config_RunoutConfig) GetWarnQty() uint32 {
	if x != nil && x.WarnQty != nil {
		return *x.WarnQty
	}
	return 0
}

func (x *Config_RunoutConfig) GetCritQty() uint32 {
	if x != nil && x.CritQty != nil {
		return *x.CritQty
	}
	return 0
}

// {{.Name}}
type Config_UtilConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Aggregate     string                 `protobuf:"bytes,1,opt,name=aggregate,proto3" json:"aggregate,omitempty"`
	WarnPct       *uint32                `protobuf:"varint,2,opt,name=warn_pct,json=warnPct,proto3,oneof" json:"warn_pct,omitempty"`
	CritPct       *uint32                `protobuf:"varint,3,opt,name=crit_pct,json=critPct,proto3,oneof" json:"crit_pct,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config_UtilConfig) Reset() {
	*x = Config_UtilConfig{}
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config_UtilConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_UtilConfig) ProtoMessage() {}

func (x *Config_UtilConfig) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_UtilConfig.ProtoReflect.Descriptor instead.
func (*Config_UtilConfig) Descriptor() ([]byte, []int) {
	return file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Config_UtilConfig) GetAggregate() string {
	if x != nil {
		return x.Aggregate
	}
	return ""
}

func (x *Config_UtilConfig) GetWarnPct() uint32 {
	if x != nil && x.WarnPct != nil {
		return *x.WarnPct
	}
	return 0
}

func (x *Config_UtilConfig) GetCritPct() uint32 {
	if x != nil && x.CritPct != nil {
		return *x.CritPct
	}
	return 0
}

// {{.Name}}
type SummaryStatus_RunoutStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	EarliestDate  *uint64                `protobuf:"varint,2,opt,name=earliest_date,json=earliestDate,proto3,oneof" json:"earliest_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummaryStatus_RunoutStatus) Reset() {
	*x = SummaryStatus_RunoutStatus{}
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummaryStatus_RunoutStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryStatus_RunoutStatus) ProtoMessage() {}

func (x *SummaryStatus_RunoutStatus) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryStatus_RunoutStatus.ProtoReflect.Descriptor instead.
func (*SummaryStatus_RunoutStatus) Descriptor() ([]byte, []int) {
	return file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescGZIP(), []int{1, 0}
}

func (x *SummaryStatus_RunoutStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SummaryStatus_RunoutStatus) GetEarliestDate() uint64 {
	if x != nil && x.EarliestDate != nil {
		return *x.EarliestDate
	}
	return 0
}

// {{.Name}}
type SummaryStatus_UtilStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	HighestPct    *uint32                `protobuf:"varint,2,opt,name=highest_pct,json=highestPct,proto3,oneof" json:"highest_pct,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummaryStatus_UtilStatus) Reset() {
	*x = SummaryStatus_UtilStatus{}
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummaryStatus_UtilStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryStatus_UtilStatus) ProtoMessage() {}

func (x *SummaryStatus_UtilStatus) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryStatus_UtilStatus.ProtoReflect.Descriptor instead.
func (*SummaryStatus_UtilStatus) Descriptor() ([]byte, []int) {
	return file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescGZIP(), []int{1, 1}
}

func (x *SummaryStatus_UtilStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SummaryStatus_UtilStatus) GetHighestPct() uint32 {
	if x != nil && x.HighestPct != nil {
		return *x.HighestPct
	}
	return 0
}

// {{.Name}}
type CapacitySummary_InterfacesDetail struct {
	state            protoimpl.MessageState                         `protogen:"open.v1"`
	TotalCount       *uint32                                        `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3,oneof" json:"total_count,omitempty"`
	TotalCapacityBps *uint64                                        `protobuf:"varint,2,opt,name=total_capacity_bps,json=totalCapacityBps,proto3,oneof" json:"total_capacity_bps,omitempty"`
	Healthy          *CapacitySummary_InterfacesDetail_StatusDetail `protobuf:"bytes,3,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Warning          *CapacitySummary_InterfacesDetail_StatusDetail `protobuf:"bytes,4,opt,name=warning,proto3" json:"warning,omitempty"`
	Critical         *CapacitySummary_InterfacesDetail_StatusDetail `protobuf:"bytes,5,opt,name=critical,proto3" json:"critical,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CapacitySummary_InterfacesDetail) Reset() {
	*x = CapacitySummary_InterfacesDetail{}
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapacitySummary_InterfacesDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapacitySummary_InterfacesDetail) ProtoMessage() {}

func (x *CapacitySummary_InterfacesDetail) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapacitySummary_InterfacesDetail.ProtoReflect.Descriptor instead.
func (*CapacitySummary_InterfacesDetail) Descriptor() ([]byte, []int) {
	return file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CapacitySummary_InterfacesDetail) GetTotalCount() uint32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

func (x *CapacitySummary_InterfacesDetail) GetTotalCapacityBps() uint64 {
	if x != nil && x.TotalCapacityBps != nil {
		return *x.TotalCapacityBps
	}
	return 0
}

func (x *CapacitySummary_InterfacesDetail) GetHealthy() *CapacitySummary_InterfacesDetail_StatusDetail {
	if x != nil {
		return x.Healthy
	}
	return nil
}

func (x *CapacitySummary_InterfacesDetail) GetWarning() *CapacitySummary_InterfacesDetail_StatusDetail {
	if x != nil {
		return x.Warning
	}
	return nil
}

func (x *CapacitySummary_InterfacesDetail) GetCritical() *CapacitySummary_InterfacesDetail_StatusDetail {
	if x != nil {
		return x.Critical
	}
	return nil
}

// {{.Name}}
type CapacitySummary_InterfacesDetail_StatusDetail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bps           *uint64                `protobuf:"varint,1,opt,name=bps,proto3,oneof" json:"bps,omitempty"`
	Count         *uint32                `protobuf:"varint,2,opt,name=count,proto3,oneof" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapacitySummary_InterfacesDetail_StatusDetail) Reset() {
	*x = CapacitySummary_InterfacesDetail_StatusDetail{}
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapacitySummary_InterfacesDetail_StatusDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapacitySummary_InterfacesDetail_StatusDetail) ProtoMessage() {}

func (x *CapacitySummary_InterfacesDetail_StatusDetail) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapacitySummary_InterfacesDetail_StatusDetail.ProtoReflect.Descriptor instead.
func (*CapacitySummary_InterfacesDetail_StatusDetail) Descriptor() ([]byte, []int) {
	return file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescGZIP(), []int{2, 0, 0}
}

func (x *CapacitySummary_InterfacesDetail_StatusDetail) GetBps() uint64 {
	if x != nil && x.Bps != nil {
		return *x.Bps
	}
	return 0
}

func (x *CapacitySummary_InterfacesDetail_StatusDetail) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

// {{.Name}}
type CapacityPlan_InterfaceDetail struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	DeviceName         string                 `protobuf:"bytes,1,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	IntfName           string                 `protobuf:"bytes,2,opt,name=intf_name,json=intfName,proto3" json:"intf_name,omitempty"`
	IntfDescription    string                 `protobuf:"bytes,3,opt,name=intf_description,json=intfDescription,proto3" json:"intf_description,omitempty"`
	IntfCapacity       string                 `protobuf:"bytes,4,opt,name=intf_capacity,json=intfCapacity,proto3" json:"intf_capacity,omitempty"`
	NetworkBoundary    string                 `protobuf:"bytes,5,opt,name=network_boundary,json=networkBoundary,proto3" json:"network_boundary,omitempty"`
	ConnType           string                 `protobuf:"bytes,6,opt,name=conn_type,json=connType,proto3" json:"conn_type,omitempty"`
	Provider           string                 `protobuf:"bytes,7,opt,name=provider,proto3" json:"provider,omitempty"`
	UtilStatus         string                 `protobuf:"bytes,8,opt,name=util_status,json=utilStatus,proto3" json:"util_status,omitempty"`
	UtilOutMbps        string                 `protobuf:"bytes,9,opt,name=util_out_mbps,json=utilOutMbps,proto3" json:"util_out_mbps,omitempty"`
	UtilOutPct         string                 `protobuf:"bytes,10,opt,name=util_out_pct,json=utilOutPct,proto3" json:"util_out_pct,omitempty"`
	UtilInMbps         string                 `protobuf:"bytes,11,opt,name=util_in_mbps,json=utilInMbps,proto3" json:"util_in_mbps,omitempty"`
	UtilInPct          string                 `protobuf:"bytes,12,opt,name=util_in_pct,json=utilInPct,proto3" json:"util_in_pct,omitempty"`
	RunoutStatus       string                 `protobuf:"bytes,13,opt,name=runout_status,json=runoutStatus,proto3" json:"runout_status,omitempty"`
	RunoutInDate       string                 `protobuf:"bytes,14,opt,name=runout_in_date,json=runoutInDate,proto3" json:"runout_in_date,omitempty"`
	RunoutInVariation  string                 `protobuf:"bytes,15,opt,name=runout_in_variation,json=runoutInVariation,proto3" json:"runout_in_variation,omitempty"`
	RunoutOutDate      string                 `protobuf:"bytes,16,opt,name=runout_out_date,json=runoutOutDate,proto3" json:"runout_out_date,omitempty"`
	RunoutOutVariation string                 `protobuf:"bytes,17,opt,name=runout_out_variation,json=runoutOutVariation,proto3" json:"runout_out_variation,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CapacityPlan_InterfaceDetail) Reset() {
	*x = CapacityPlan_InterfaceDetail{}
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapacityPlan_InterfaceDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapacityPlan_InterfaceDetail) ProtoMessage() {}

func (x *CapacityPlan_InterfaceDetail) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapacityPlan_InterfaceDetail.ProtoReflect.Descriptor instead.
func (*CapacityPlan_InterfaceDetail) Descriptor() ([]byte, []int) {
	return file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CapacityPlan_InterfaceDetail) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *CapacityPlan_InterfaceDetail) GetIntfName() string {
	if x != nil {
		return x.IntfName
	}
	return ""
}

func (x *CapacityPlan_InterfaceDetail) GetIntfDescription() string {
	if x != nil {
		return x.IntfDescription
	}
	return ""
}

func (x *CapacityPlan_InterfaceDetail) GetIntfCapacity() string {
	if x != nil {
		return x.IntfCapacity
	}
	return ""
}

func (x *CapacityPlan_InterfaceDetail) GetNetworkBoundary() string {
	if x != nil {
		return x.NetworkBoundary
	}
	return ""
}

func (x *CapacityPlan_InterfaceDetail) GetConnType() string {
	if x != nil {
		return x.ConnType
	}
	return ""
}

func (x *CapacityPlan_InterfaceDetail) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *CapacityPlan_InterfaceDetail) GetUtilStatus() string {
	if x != nil {
		return x.UtilStatus
	}
	return ""
}

func (x *CapacityPlan_InterfaceDetail) GetUtilOutMbps() string {
	if x != nil {
		return x.UtilOutMbps
	}
	return ""
}

func (x *CapacityPlan_InterfaceDetail) GetUtilOutPct() string {
	if x != nil {
		return x.UtilOutPct
	}
	return ""
}

func (x *CapacityPlan_InterfaceDetail) GetUtilInMbps() string {
	if x != nil {
		return x.UtilInMbps
	}
	return ""
}

func (x *CapacityPlan_InterfaceDetail) GetUtilInPct() string {
	if x != nil {
		return x.UtilInPct
	}
	return ""
}

func (x *CapacityPlan_InterfaceDetail) GetRunoutStatus() string {
	if x != nil {
		return x.RunoutStatus
	}
	return ""
}

func (x *CapacityPlan_InterfaceDetail) GetRunoutInDate() string {
	if x != nil {
		return x.RunoutInDate
	}
	return ""
}

func (x *CapacityPlan_InterfaceDetail) GetRunoutInVariation() string {
	if x != nil {
		return x.RunoutInVariation
	}
	return ""
}

func (x *CapacityPlan_InterfaceDetail) GetRunoutOutDate() string {
	if x != nil {
		return x.RunoutOutDate
	}
	return ""
}

func (x *CapacityPlan_InterfaceDetail) GetRunoutOutVariation() string {
	if x != nil {
		return x.RunoutOutVariation
	}
	return ""
}

var File_kentik_capacity_plan_v202212_capacity_plan_proto protoreflect.FileDescriptor

const file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDesc = "" +
	"\n" +
	"0kentik/capacity_plan/v202212/capacity_plan.proto\x12\x1ckentik.capacity_plan.v202212\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a%kentik/core/v202303/annotations.proto\"\xd9\x05\n" +
	"\x06Config\x12g\n" +
	"\x06runout\x18\x01 \x01(\v21.kentik.capacity_plan.v202212.Config.RunoutConfigB\x1c\x92A\x162\x14Runout configuration\xe0A\x03R\x06runout\x12t\n" +
	"\vutilization\x18\x02 \x01(\v2/.kentik.capacity_plan.v202212.Config.UtilConfigB!\x92A\x1b2\x19Utilization configuration\xe0A\x03R\vutilization\x1a\xec\x01\n" +
	"\fRunoutConfig\x127\n" +
	"\bstrategy\x18\x01 \x01(\tB\x1b\x92A\x152\x13Strategy for runout\xe0A\x03R\bstrategy\x12C\n" +
	"\bwarn_qty\x18\x02 \x01(\rB#\x92A\x1d2\x1bWarning quantity for runout\xe0A\x03H\x00R\awarnQty\x88\x01\x01\x12D\n" +
	"\bcrit_qty\x18\x03 \x01(\rB$\x92A\x1e2\x1cCritical quantity for runout\xe0A\x03H\x01R\acritQty\x88\x01\x01B\v\n" +
	"\t_warn_qtyB\v\n" +
	"\t_crit_qty\x1a\x80\x02\n" +
	"\n" +
	"UtilConfig\x12?\n" +
	"\taggregate\x18\x01 \x01(\tB!\x92A\x1b2\x19Aggregate for utilization\xe0A\x03R\taggregate\x12J\n" +
	"\bwarn_pct\x18\x02 \x01(\rB*\x92A$2\"Warning percentage for utilization\xe0A\x03H\x00R\awarnPct\x88\x01\x01\x12K\n" +
	"\bcrit_pct\x18\x03 \x01(\rB+\x92A%2#Critical percentage for utilization\xe0A\x03H\x01R\acritPct\x88\x01\x01B\v\n" +
	"\t_warn_pctB\v\n" +
	"\t_crit_pct\"\xaf\x04\n" +
	"\rSummaryStatus\x12g\n" +
	"\x06runout\x18\x01 \x01(\v28.kentik.capacity_plan.v202212.SummaryStatus.RunoutStatusB\x15\x92A\x0f2\rRunout status\xe0A\x03R\x06runout\x12t\n" +
	"\vutilization\x18\x02 \x01(\v26.kentik.capacity_plan.v202212.SummaryStatus.UtilStatusB\x1a\x92A\x142\x12Utilization status\xe0A\x03R\vutilization\x1a\x9a\x01\n" +
	"\fRunoutStatus\x120\n" +
	"\x06status\x18\x01 \x01(\tB\x18\x92A\x122\x10Status of runout\xe0A\x03R\x06status\x12F\n" +
	"\rearliest_date\x18\x02 \x01(\x04B\x1c\x92A\x162\x14Earliest runout date\xe0A\x03H\x00R\fearliestDate\x88\x01\x01B\x10\n" +
	"\x0e_earliest_date\x1a\xa1\x01\n" +
	"\n" +
	"UtilStatus\x125\n" +
	"\x06status\x18\x01 \x01(\tB\x1d\x92A\x172\x15Status of utilization\xe0A\x03R\x06status\x12L\n" +
	"\vhighest_pct\x18\x02 \x01(\rB&\x92A 2\x1eHighest utilization percentage\xe0A\x03H\x00R\n" +
	"highestPct\x88\x01\x01B\x0e\n" +
	"\f_highest_pct\"\xc4\n" +
	"\n" +
	"\x0fCapacitySummary\x12+\n" +
	"\x02id\x18\x01 \x01(\tB\x1b\x92A\x152\x13ID of capacity plan\xe0A\x03R\x02id\x121\n" +
	"\x04name\x18\x02 \x01(\tB\x1d\x92A\x172\x15Name of capacity plan\xe0A\x03R\x04name\x12F\n" +
	"\vdescription\x18\x03 \x01(\tB$\x92A\x1e2\x1cDescription of capacity plan\xe0A\x03R\vdescription\x127\n" +
	"\x06status\x18\x04 \x01(\tB\x1f\x92A\x192\x17Status of capacity plan\xe0A\x03R\x06status\x12y\n" +
	"\n" +
	"interfaces\x18\x05 \x01(\v2>.kentik.capacity_plan.v202212.CapacitySummary.InterfacesDetailB\x19\x92A\x132\x11Interfaces detail\xe0A\x03R\n" +
	"interfaces\x12d\n" +
	"\x06config\x18\x06 \x01(\v2$.kentik.capacity_plan.v202212.ConfigB&\x92A 2\x1eConfiguration of capacity plan\xe0A\x03R\x06config\x12{\n" +
	"\x0esummary_status\x18\a \x01(\v2+.kentik.capacity_plan.v202212.SummaryStatusB'\x92A!2\x1fSummary status of capacity plan\xe0A\x03R\rsummaryStatus\x1a\xf1\x05\n" +
	"\x10InterfacesDetail\x12H\n" +
	"\vtotal_count\x18\x01 \x01(\rB\"\x92A\x1c2\x1aTotal number of interfaces\xe0A\x03H\x00R\n" +
	"totalCount\x88\x01\x01\x12P\n" +
	"\x12total_capacity_bps\x18\x02 \x01(\x04B\x1d\x92A\x172\x15Total capacity in bps\xe0A\x03H\x01R\x10totalCapacityBps\x88\x01\x01\x12\x81\x01\n" +
	"\ahealthy\x18\x03 \x01(\v2K.kentik.capacity_plan.v202212.CapacitySummary.InterfacesDetail.StatusDetailB\x1a\x92A\x142\x12Healthy interfaces\xe0A\x03R\ahealthy\x12\x81\x01\n" +
	"\awarning\x18\x04 \x01(\v2K.kentik.capacity_plan.v202212.CapacitySummary.InterfacesDetail.StatusDetailB\x1a\x92A\x142\x12Warning interfaces\xe0A\x03R\awarning\x12\x84\x01\n" +
	"\bcritical\x18\x05 \x01(\v2K.kentik.capacity_plan.v202212.CapacitySummary.InterfacesDetail.StatusDetailB\x1b\x92A\x152\x13Critical interfaces\xe0A\x03R\bcritical\x1a\x8a\x01\n" +
	"\fStatusDetail\x12/\n" +
	"\x03bps\x18\x01 \x01(\x04B\x18\x92A\x122\x10Bandwidth in bps\xe0A\x03H\x00R\x03bps\x88\x01\x01\x127\n" +
	"\x05count\x18\x02 \x01(\rB\x1c\x92A\x162\x14Number of interfaces\xe0A\x03H\x01R\x05count\x88\x01\x01B\x06\n" +
	"\x04_bpsB\b\n" +
	"\x06_countB\x0e\n" +
	"\f_total_countB\x15\n" +
	"\x13_total_capacity_bps\"\x9e\r\n" +
	"\fCapacityPlan\x12+\n" +
	"\x02id\x18\x01 \x01(\tB\x1b\x92A\x152\x13ID of capacity plan\xe0A\x03R\x02id\x121\n" +
	"\x04name\x18\x02 \x01(\tB\x1d\x92A\x172\x15Name of capacity plan\xe0A\x03R\x04name\x12F\n" +
	"\vdescription\x18\x03 \x01(\tB$\x92A\x1e2\x1cDescription of capacity plan\xe0A\x03R\vdescription\x127\n" +
	"\x06status\x18\x04 \x01(\tB\x1f\x92A\x192\x17Status of capacity plan\xe0A\x03R\x06status\x12v\n" +
	"\n" +
	"interfaces\x18\x05 \x03(\v2:.kentik.capacity_plan.v202212.CapacityPlan.InterfaceDetailB\x1a\x92A\x142\x12List of interfaces\xe0A\x03R\n" +
	"interfaces\x12d\n" +
	"\x06config\x18\x06 \x01(\v2$.kentik.capacity_plan.v202212.ConfigB&\x92A 2\x1eConfiguration of capacity plan\xe0A\x03R\x06config\x12{\n" +
	"\x0esummary_status\x18\a \x01(\v2+.kentik.capacity_plan.v202212.SummaryStatusB'\x92A!2\x1fSummary status of capacity plan\xe0A\x03R\rsummaryStatus\x1a\xd1\b\n" +
	"\x0fInterfaceDetail\x124\n" +
	"\vdevice_name\x18\x01 \x01(\tB\x13\x92A\r2\vDevice name\xe0A\x03R\n" +
	"deviceName\x123\n" +
	"\tintf_name\x18\x02 \x01(\tB\x16\x92A\x102\x0eInterface name\xe0A\x03R\bintfName\x12H\n" +
	"\x10intf_description\x18\x03 \x01(\tB\x1d\x92A\x172\x15Interface description\xe0A\x03R\x0fintfDescription\x12?\n" +
	"\rintf_capacity\x18\x04 \x01(\tB\x1a\x92A\x142\x12Interface capacity\xe0A\x03R\fintfCapacity\x12C\n" +
	"\x10network_boundary\x18\x05 \x01(\tB\x18\x92A\x122\x10Network boundary\xe0A\x03R\x0fnetworkBoundary\x126\n" +
	"\tconn_type\x18\x06 \x01(\tB\x19\x92A\x132\x11Connectivity type\xe0A\x03R\bconnType\x12,\n" +
	"\bprovider\x18\a \x01(\tB\x10\x92A\n" +
	"2\bProvider\xe0A\x03R\bprovider\x12;\n" +
	"\vutil_status\x18\b \x01(\tB\x1a\x92A\x142\x12Utilization status\xe0A\x03R\n" +
	"utilStatus\x12@\n" +
	"\rutil_out_mbps\x18\t \x01(\tB\x1c\x92A\x162\x14Utilization out mbps\xe0A\x03R\vutilOutMbps\x12D\n" +
	"\futil_out_pct\x18\n" +
	" \x01(\tB\"\x92A\x1c2\x1aUtilization out percentage\xe0A\x03R\n" +
	"utilOutPct\x12=\n" +
	"\futil_in_mbps\x18\v \x01(\tB\x1b\x92A\x152\x13Utilization in mbps\xe0A\x03R\n" +
	"utilInMbps\x12A\n" +
	"\vutil_in_pct\x18\f \x01(\tB!\x92A\x1b2\x19Utilization in percentage\xe0A\x03R\tutilInPct\x12:\n" +
	"\rrunout_status\x18\r \x01(\tB\x15\x92A\x0f2\rRunout status\xe0A\x03R\frunoutStatus\x12<\n" +
	"\x0erunout_in_date\x18\x0e \x01(\tB\x16\x92A\x102\x0eRunout in date\xe0A\x03R\frunoutInDate\x12K\n" +
	"\x13runout_in_variation\x18\x0f \x01(\tB\x1b\x92A\x152\x13Runout in variation\xe0A\x03R\x11runoutInVariation\x12?\n" +
	"\x0frunout_out_date\x18\x10 \x01(\tB\x17\x92A\x112\x0fRunout out date\xe0A\x03R\rrunoutOutDate\x12N\n" +
	"\x14runout_out_variation\x18\x11 \x01(\tB\x1c\x92A\x162\x14Runout out variation\xe0A\x03R\x12runoutOutVariation\"\x1e\n" +
	"\x1cListCapacitySummariesRequest\"\xf7\x01\n" +
	"\x1dListCapacitySummariesResponse\x12o\n" +
	"\bcapacity\x18\x01 \x03(\v2-.kentik.capacity_plan.v202212.CapacitySummaryB$\x92A!2\x1fList of capacity plan summariesR\bcapacity\x12e\n" +
	"\rinvalid_count\x18\x02 \x01(\rB@\x92A=2;Number of invalid entries encountered while collecting dataR\finvalidCount\"^\n" +
	"\x19GetCapacitySummaryRequest\x12A\n" +
	"\x02id\x18\x01 \x01(\tB1\x92A+2)ID of the requested capacity plan summary\xe0A\x02R\x02id\"\xa3\x01\n" +
	"\x1aGetCapacitySummaryResponse\x12\x84\x01\n" +
	"\bcapacity\x18\x01 \x01(\v2-.kentik.capacity_plan.v202212.CapacitySummaryB9\x92A624Configuration of the requested capacity plan summaryR\bcapacity\"\x1a\n" +
	"\x18ListCapacityPlansRequest\"\xe7\x01\n" +
	"\x19ListCapacityPlansResponse\x12c\n" +
	"\bcapacity\x18\x01 \x03(\v2*.kentik.capacity_plan.v202212.CapacityPlanB\x1b\x92A\x182\x16List of capacity plansR\bcapacity\x12e\n" +
	"\rinvalid_count\x18\x02 \x01(\rB@\x92A=2;Number of invalid entries encountered while collecting dataR\finvalidCount\"S\n" +
	"\x16GetCapacityPlanRequest\x129\n" +
	"\x02id\x18\x01 \x01(\tB)\x92A#2!ID of the requested capacity plan\xe0A\x02R\x02id\"\x94\x01\n" +
	"\x17GetCapacityPlanResponse\x12y\n" +
	"\bcapacity\x18\x01 \x01(\v2*.kentik.capacity_plan.v202212.CapacityPlanB1\x92A.2,Configuration of the requested capacity planR\bcapacity2\x9e\n" +
	"\n" +
	"\x13CapacityPlanService\x12\xc0\x02\n" +
	"\x15ListCapacitySummaries\x12:.kentik.capacity_plan.v202212.ListCapacitySummariesRequest\x1a;.kentik.capacity_plan.v202212.ListCapacitySummariesResponse\"\xad\x01\x92AZ\x12\x1cList all capacity summaries.\x1a#Returns list of capacity summaries.*\x15ListCapacitySummaries\xf2\xd7\x02\x18admin.capacity_plan:read\x82\xd3\xe4\x93\x02.\x12,/capacity_plan/v202212/capacity_plan/summary\x12\xc7\x02\n" +
	"\x12GetCapacitySummary\x127.kentik.capacity_plan.v202212.GetCapacitySummaryRequest\x1a8.kentik.capacity_plan.v202212.GetCapacitySummaryResponse\"\xbd\x01\x92Ae\x12\x1fRetrieve capacity plan summary.\x1a.Returns capacity plan summary specified by ID.*\x12GetCapacitySummary\xf2\xd7\x02\x18admin.capacity_plan:read\x82\xd3\xe4\x93\x023\x121/capacity_plan/v202212/capacity_plan/{id}/summary\x12\xa0\x02\n" +
	"\x11ListCapacityPlans\x126.kentik.capacity_plan.v202212.ListCapacityPlansRequest\x1a7.kentik.capacity_plan.v202212.ListCapacityPlansResponse\"\x99\x01\x92AN\x12\x18List all capacity plans.\x1a\x1fReturns list of capacity plans.*\x11ListCapacityPlans\xf2\xd7\x02\x18admin.capacity_plan:read\x82\xd3\xe4\x93\x02&\x12$/capacity_plan/v202212/capacity_plan\x12\xa3\x02\n" +
	"\x0fGetCapacityPlan\x124.kentik.capacity_plan.v202212.GetCapacityPlanRequest\x1a5.kentik.capacity_plan.v202212.GetCapacityPlanResponse\"\xa2\x01\x92AR\x12\x17Retrieve capacity plan.\x1a&Returns capacity plan specified by ID.*\x0fGetCapacityPlan\xf2\xd7\x02\x18admin.capacity_plan:read\x82\xd3\xe4\x93\x02+\x12)/capacity_plan/v202212/capacity_plan/{id}\x1a1\xcaA\x13grpc.api.kentik.com\xea\xd7\x02\x13admin.capacity_plan\x90\xd8\x02\x03B\xfe\x03\x92A\xa3\x03\x12\xbc\x01\n" +
	"\x11Capacity Plan API\x12W# Overview\n" +
	"The Capacity Plan API provides read-only access to configured capacity plans\"E\n" +
	"\x16Kentik API Engineering\x12+https://github.com/kentik/api-schema-public2\av202212*\x01\x022\x10application/json:\x10application/jsonZD\n" +
	"\x1e\n" +
	"\x05email\x12\x15\b\x02\x1a\x0fX-CH-Auth-Email \x02\n" +
	"\"\n" +
	"\x05token\x12\x19\b\x02\x1a\x13X-CH-Auth-API-Token \x02b\x16\n" +
	"\t\n" +
	"\x05email\x12\x00\n" +
	"\t\n" +
	"\x05token\x12\x00r]\n" +
	"%General information about Kentik APIs\x124https://kb.kentik.com/v0/Ab09.htm#Ab09-APIs_OverviewZUgithub.com/kentik/api-schema-public/gen/go/kentik/capacity_plan/v202212;capacity_planb\x06proto3"

var (
	file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescOnce sync.Once
	file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescData []byte
)

func file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescGZIP() []byte {
	file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescOnce.Do(func() {
		file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDesc), len(file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDesc)))
	})
	return file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDescData
}

var file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_kentik_capacity_plan_v202212_capacity_plan_proto_goTypes = []any{
	(*Config)(nil),                                        // 0: kentik.capacity_plan.v202212.Config
	(*SummaryStatus)(nil),                                 // 1: kentik.capacity_plan.v202212.SummaryStatus
	(*CapacitySummary)(nil),                               // 2: kentik.capacity_plan.v202212.CapacitySummary
	(*CapacityPlan)(nil),                                  // 3: kentik.capacity_plan.v202212.CapacityPlan
	(*ListCapacitySummariesRequest)(nil),                  // 4: kentik.capacity_plan.v202212.ListCapacitySummariesRequest
	(*ListCapacitySummariesResponse)(nil),                 // 5: kentik.capacity_plan.v202212.ListCapacitySummariesResponse
	(*GetCapacitySummaryRequest)(nil),                     // 6: kentik.capacity_plan.v202212.GetCapacitySummaryRequest
	(*GetCapacitySummaryResponse)(nil),                    // 7: kentik.capacity_plan.v202212.GetCapacitySummaryResponse
	(*ListCapacityPlansRequest)(nil),                      // 8: kentik.capacity_plan.v202212.ListCapacityPlansRequest
	(*ListCapacityPlansResponse)(nil),                     // 9: kentik.capacity_plan.v202212.ListCapacityPlansResponse
	(*GetCapacityPlanRequest)(nil),                        // 10: kentik.capacity_plan.v202212.GetCapacityPlanRequest
	(*GetCapacityPlanResponse)(nil),                       // 11: kentik.capacity_plan.v202212.GetCapacityPlanResponse
	(*Config_RunoutConfig)(nil),                           // 12: kentik.capacity_plan.v202212.Config.RunoutConfig
	(*Config_UtilConfig)(nil),                             // 13: kentik.capacity_plan.v202212.Config.UtilConfig
	(*SummaryStatus_RunoutStatus)(nil),                    // 14: kentik.capacity_plan.v202212.SummaryStatus.RunoutStatus
	(*SummaryStatus_UtilStatus)(nil),                      // 15: kentik.capacity_plan.v202212.SummaryStatus.UtilStatus
	(*CapacitySummary_InterfacesDetail)(nil),              // 16: kentik.capacity_plan.v202212.CapacitySummary.InterfacesDetail
	(*CapacitySummary_InterfacesDetail_StatusDetail)(nil), // 17: kentik.capacity_plan.v202212.CapacitySummary.InterfacesDetail.StatusDetail
	(*CapacityPlan_InterfaceDetail)(nil),                  // 18: kentik.capacity_plan.v202212.CapacityPlan.InterfaceDetail
}
var file_kentik_capacity_plan_v202212_capacity_plan_proto_depIdxs = []int32{
	12, // 0: kentik.capacity_plan.v202212.Config.runout:type_name -> kentik.capacity_plan.v202212.Config.RunoutConfig
	13, // 1: kentik.capacity_plan.v202212.Config.utilization:type_name -> kentik.capacity_plan.v202212.Config.UtilConfig
	14, // 2: kentik.capacity_plan.v202212.SummaryStatus.runout:type_name -> kentik.capacity_plan.v202212.SummaryStatus.RunoutStatus
	15, // 3: kentik.capacity_plan.v202212.SummaryStatus.utilization:type_name -> kentik.capacity_plan.v202212.SummaryStatus.UtilStatus
	16, // 4: kentik.capacity_plan.v202212.CapacitySummary.interfaces:type_name -> kentik.capacity_plan.v202212.CapacitySummary.InterfacesDetail
	0,  // 5: kentik.capacity_plan.v202212.CapacitySummary.config:type_name -> kentik.capacity_plan.v202212.Config
	1,  // 6: kentik.capacity_plan.v202212.CapacitySummary.summary_status:type_name -> kentik.capacity_plan.v202212.SummaryStatus
	18, // 7: kentik.capacity_plan.v202212.CapacityPlan.interfaces:type_name -> kentik.capacity_plan.v202212.CapacityPlan.InterfaceDetail
	0,  // 8: kentik.capacity_plan.v202212.CapacityPlan.config:type_name -> kentik.capacity_plan.v202212.Config
	1,  // 9: kentik.capacity_plan.v202212.CapacityPlan.summary_status:type_name -> kentik.capacity_plan.v202212.SummaryStatus
	2,  // 10: kentik.capacity_plan.v202212.ListCapacitySummariesResponse.capacity:type_name -> kentik.capacity_plan.v202212.CapacitySummary
	2,  // 11: kentik.capacity_plan.v202212.GetCapacitySummaryResponse.capacity:type_name -> kentik.capacity_plan.v202212.CapacitySummary
	3,  // 12: kentik.capacity_plan.v202212.ListCapacityPlansResponse.capacity:type_name -> kentik.capacity_plan.v202212.CapacityPlan
	3,  // 13: kentik.capacity_plan.v202212.GetCapacityPlanResponse.capacity:type_name -> kentik.capacity_plan.v202212.CapacityPlan
	17, // 14: kentik.capacity_plan.v202212.CapacitySummary.InterfacesDetail.healthy:type_name -> kentik.capacity_plan.v202212.CapacitySummary.InterfacesDetail.StatusDetail
	17, // 15: kentik.capacity_plan.v202212.CapacitySummary.InterfacesDetail.warning:type_name -> kentik.capacity_plan.v202212.CapacitySummary.InterfacesDetail.StatusDetail
	17, // 16: kentik.capacity_plan.v202212.CapacitySummary.InterfacesDetail.critical:type_name -> kentik.capacity_plan.v202212.CapacitySummary.InterfacesDetail.StatusDetail
	4,  // 17: kentik.capacity_plan.v202212.CapacityPlanService.ListCapacitySummaries:input_type -> kentik.capacity_plan.v202212.ListCapacitySummariesRequest
	6,  // 18: kentik.capacity_plan.v202212.CapacityPlanService.GetCapacitySummary:input_type -> kentik.capacity_plan.v202212.GetCapacitySummaryRequest
	8,  // 19: kentik.capacity_plan.v202212.CapacityPlanService.ListCapacityPlans:input_type -> kentik.capacity_plan.v202212.ListCapacityPlansRequest
	10, // 20: kentik.capacity_plan.v202212.CapacityPlanService.GetCapacityPlan:input_type -> kentik.capacity_plan.v202212.GetCapacityPlanRequest
	5,  // 21: kentik.capacity_plan.v202212.CapacityPlanService.ListCapacitySummaries:output_type -> kentik.capacity_plan.v202212.ListCapacitySummariesResponse
	7,  // 22: kentik.capacity_plan.v202212.CapacityPlanService.GetCapacitySummary:output_type -> kentik.capacity_plan.v202212.GetCapacitySummaryResponse
	9,  // 23: kentik.capacity_plan.v202212.CapacityPlanService.ListCapacityPlans:output_type -> kentik.capacity_plan.v202212.ListCapacityPlansResponse
	11, // 24: kentik.capacity_plan.v202212.CapacityPlanService.GetCapacityPlan:output_type -> kentik.capacity_plan.v202212.GetCapacityPlanResponse
	21, // [21:25] is the sub-list for method output_type
	17, // [17:21] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_kentik_capacity_plan_v202212_capacity_plan_proto_init() }
func file_kentik_capacity_plan_v202212_capacity_plan_proto_init() {
	if File_kentik_capacity_plan_v202212_capacity_plan_proto != nil {
		return
	}
	file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[12].OneofWrappers = []any{}
	file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[13].OneofWrappers = []any{}
	file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[14].OneofWrappers = []any{}
	file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[15].OneofWrappers = []any{}
	file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[16].OneofWrappers = []any{}
	file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes[17].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDesc), len(file_kentik_capacity_plan_v202212_capacity_plan_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kentik_capacity_plan_v202212_capacity_plan_proto_goTypes,
		DependencyIndexes: file_kentik_capacity_plan_v202212_capacity_plan_proto_depIdxs,
		MessageInfos:      file_kentik_capacity_plan_v202212_capacity_plan_proto_msgTypes,
	}.Build()
	File_kentik_capacity_plan_v202212_capacity_plan_proto = out.File
	file_kentik_capacity_plan_v202212_capacity_plan_proto_goTypes = nil
	file_kentik_capacity_plan_v202212_capacity_plan_proto_depIdxs = nil
}
