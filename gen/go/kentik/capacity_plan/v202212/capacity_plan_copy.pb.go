// Code generated by protoc-gen-go-copy. DO NOT EDIT.
// source: kentik/capacity_plan/v202212/capacity_plan.proto

package capacity_plan

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *Config) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *Config:
		x.Runout = v.GetRunout()
		x.Utilization = v.GetUtilization()
	default:
		if v, ok := v.(interface{ GetRunout() *Config_RunoutConfig }); ok {
			x.Runout = v.GetRunout()
		}
		if v, ok := v.(interface{ GetUtilization() *Config_UtilConfig }); ok {
			x.Utilization = v.GetUtilization()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *Config) Proto_ShallowClone() (c *Config) {
	if x != nil {
		c = new(Config)
		c.Runout = x.Runout
		c.Utilization = x.Utilization
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *Config_RunoutConfig) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *Config_RunoutConfig:
		x.Strategy = v.GetStrategy()
		if v != nil {
			x.WarnQty = v.WarnQty
			x.CritQty = v.CritQty
		} else {
			x.WarnQty = nil
			x.CritQty = nil
		}
	default:
		if v, ok := v.(interface{ GetStrategy() string }); ok {
			x.Strategy = v.GetStrategy()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *Config_RunoutConfig) Proto_ShallowClone() (c *Config_RunoutConfig) {
	if x != nil {
		c = new(Config_RunoutConfig)
		c.Strategy = x.Strategy
		c.WarnQty = x.WarnQty
		c.CritQty = x.CritQty
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *Config_UtilConfig) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *Config_UtilConfig:
		x.Aggregate = v.GetAggregate()
		if v != nil {
			x.WarnPct = v.WarnPct
			x.CritPct = v.CritPct
		} else {
			x.WarnPct = nil
			x.CritPct = nil
		}
	default:
		if v, ok := v.(interface{ GetAggregate() string }); ok {
			x.Aggregate = v.GetAggregate()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *Config_UtilConfig) Proto_ShallowClone() (c *Config_UtilConfig) {
	if x != nil {
		c = new(Config_UtilConfig)
		c.Aggregate = x.Aggregate
		c.WarnPct = x.WarnPct
		c.CritPct = x.CritPct
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *SummaryStatus) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *SummaryStatus:
		x.Runout = v.GetRunout()
		x.Utilization = v.GetUtilization()
	default:
		if v, ok := v.(interface {
			GetRunout() *SummaryStatus_RunoutStatus
		}); ok {
			x.Runout = v.GetRunout()
		}
		if v, ok := v.(interface {
			GetUtilization() *SummaryStatus_UtilStatus
		}); ok {
			x.Utilization = v.GetUtilization()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *SummaryStatus) Proto_ShallowClone() (c *SummaryStatus) {
	if x != nil {
		c = new(SummaryStatus)
		c.Runout = x.Runout
		c.Utilization = x.Utilization
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *SummaryStatus_RunoutStatus) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *SummaryStatus_RunoutStatus:
		x.Status = v.GetStatus()
		if v != nil {
			x.EarliestDate = v.EarliestDate
		} else {
			x.EarliestDate = nil
		}
	default:
		if v, ok := v.(interface{ GetStatus() string }); ok {
			x.Status = v.GetStatus()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *SummaryStatus_RunoutStatus) Proto_ShallowClone() (c *SummaryStatus_RunoutStatus) {
	if x != nil {
		c = new(SummaryStatus_RunoutStatus)
		c.Status = x.Status
		c.EarliestDate = x.EarliestDate
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *SummaryStatus_UtilStatus) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *SummaryStatus_UtilStatus:
		x.Status = v.GetStatus()
		if v != nil {
			x.HighestPct = v.HighestPct
		} else {
			x.HighestPct = nil
		}
	default:
		if v, ok := v.(interface{ GetStatus() string }); ok {
			x.Status = v.GetStatus()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *SummaryStatus_UtilStatus) Proto_ShallowClone() (c *SummaryStatus_UtilStatus) {
	if x != nil {
		c = new(SummaryStatus_UtilStatus)
		c.Status = x.Status
		c.HighestPct = x.HighestPct
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *CapacitySummary) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *CapacitySummary:
		x.Id = v.GetId()
		x.Name = v.GetName()
		x.Description = v.GetDescription()
		x.Status = v.GetStatus()
		x.Interfaces = v.GetInterfaces()
		x.Config = v.GetConfig()
		x.SummaryStatus = v.GetSummaryStatus()
	default:
		if v, ok := v.(interface{ GetId() string }); ok {
			x.Id = v.GetId()
		}
		if v, ok := v.(interface{ GetName() string }); ok {
			x.Name = v.GetName()
		}
		if v, ok := v.(interface{ GetDescription() string }); ok {
			x.Description = v.GetDescription()
		}
		if v, ok := v.(interface{ GetStatus() string }); ok {
			x.Status = v.GetStatus()
		}
		if v, ok := v.(interface {
			GetInterfaces() *CapacitySummary_InterfacesDetail
		}); ok {
			x.Interfaces = v.GetInterfaces()
		}
		if v, ok := v.(interface{ GetConfig() *Config }); ok {
			x.Config = v.GetConfig()
		}
		if v, ok := v.(interface{ GetSummaryStatus() *SummaryStatus }); ok {
			x.SummaryStatus = v.GetSummaryStatus()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *CapacitySummary) Proto_ShallowClone() (c *CapacitySummary) {
	if x != nil {
		c = new(CapacitySummary)
		c.Id = x.Id
		c.Name = x.Name
		c.Description = x.Description
		c.Status = x.Status
		c.Interfaces = x.Interfaces
		c.Config = x.Config
		c.SummaryStatus = x.SummaryStatus
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *CapacitySummary_InterfacesDetail) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *CapacitySummary_InterfacesDetail:
		x.Healthy = v.GetHealthy()
		x.Warning = v.GetWarning()
		x.Critical = v.GetCritical()
		if v != nil {
			x.TotalCount = v.TotalCount
			x.TotalCapacityBps = v.TotalCapacityBps
		} else {
			x.TotalCount = nil
			x.TotalCapacityBps = nil
		}
	default:
		if v, ok := v.(interface {
			GetHealthy() *CapacitySummary_InterfacesDetail_StatusDetail
		}); ok {
			x.Healthy = v.GetHealthy()
		}
		if v, ok := v.(interface {
			GetWarning() *CapacitySummary_InterfacesDetail_StatusDetail
		}); ok {
			x.Warning = v.GetWarning()
		}
		if v, ok := v.(interface {
			GetCritical() *CapacitySummary_InterfacesDetail_StatusDetail
		}); ok {
			x.Critical = v.GetCritical()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *CapacitySummary_InterfacesDetail) Proto_ShallowClone() (c *CapacitySummary_InterfacesDetail) {
	if x != nil {
		c = new(CapacitySummary_InterfacesDetail)
		c.TotalCount = x.TotalCount
		c.TotalCapacityBps = x.TotalCapacityBps
		c.Healthy = x.Healthy
		c.Warning = x.Warning
		c.Critical = x.Critical
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *CapacitySummary_InterfacesDetail_StatusDetail) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *CapacitySummary_InterfacesDetail_StatusDetail:
		if v != nil {
			x.Bps = v.Bps
			x.Count = v.Count
		} else {
			x.Bps = nil
			x.Count = nil
		}
	default:
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *CapacitySummary_InterfacesDetail_StatusDetail) Proto_ShallowClone() (c *CapacitySummary_InterfacesDetail_StatusDetail) {
	if x != nil {
		c = new(CapacitySummary_InterfacesDetail_StatusDetail)
		c.Bps = x.Bps
		c.Count = x.Count
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *CapacityPlan) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *CapacityPlan:
		x.Id = v.GetId()
		x.Name = v.GetName()
		x.Description = v.GetDescription()
		x.Status = v.GetStatus()
		x.Interfaces = v.GetInterfaces()
		x.Config = v.GetConfig()
		x.SummaryStatus = v.GetSummaryStatus()
	default:
		if v, ok := v.(interface{ GetId() string }); ok {
			x.Id = v.GetId()
		}
		if v, ok := v.(interface{ GetName() string }); ok {
			x.Name = v.GetName()
		}
		if v, ok := v.(interface{ GetDescription() string }); ok {
			x.Description = v.GetDescription()
		}
		if v, ok := v.(interface{ GetStatus() string }); ok {
			x.Status = v.GetStatus()
		}
		if v, ok := v.(interface {
			GetInterfaces() []*CapacityPlan_InterfaceDetail
		}); ok {
			x.Interfaces = v.GetInterfaces()
		}
		if v, ok := v.(interface{ GetConfig() *Config }); ok {
			x.Config = v.GetConfig()
		}
		if v, ok := v.(interface{ GetSummaryStatus() *SummaryStatus }); ok {
			x.SummaryStatus = v.GetSummaryStatus()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *CapacityPlan) Proto_ShallowClone() (c *CapacityPlan) {
	if x != nil {
		c = new(CapacityPlan)
		c.Id = x.Id
		c.Name = x.Name
		c.Description = x.Description
		c.Status = x.Status
		c.Interfaces = x.Interfaces
		c.Config = x.Config
		c.SummaryStatus = x.SummaryStatus
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *CapacityPlan_InterfaceDetail) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *CapacityPlan_InterfaceDetail:
		x.DeviceName = v.GetDeviceName()
		x.IntfName = v.GetIntfName()
		x.IntfDescription = v.GetIntfDescription()
		x.IntfCapacity = v.GetIntfCapacity()
		x.NetworkBoundary = v.GetNetworkBoundary()
		x.ConnType = v.GetConnType()
		x.Provider = v.GetProvider()
		x.UtilStatus = v.GetUtilStatus()
		x.UtilOutMbps = v.GetUtilOutMbps()
		x.UtilOutPct = v.GetUtilOutPct()
		x.UtilInMbps = v.GetUtilInMbps()
		x.UtilInPct = v.GetUtilInPct()
		x.RunoutStatus = v.GetRunoutStatus()
		x.RunoutInDate = v.GetRunoutInDate()
		x.RunoutInVariation = v.GetRunoutInVariation()
		x.RunoutOutDate = v.GetRunoutOutDate()
		x.RunoutOutVariation = v.GetRunoutOutVariation()
	default:
		if v, ok := v.(interface{ GetDeviceName() string }); ok {
			x.DeviceName = v.GetDeviceName()
		}
		if v, ok := v.(interface{ GetIntfName() string }); ok {
			x.IntfName = v.GetIntfName()
		}
		if v, ok := v.(interface{ GetIntfDescription() string }); ok {
			x.IntfDescription = v.GetIntfDescription()
		}
		if v, ok := v.(interface{ GetIntfCapacity() string }); ok {
			x.IntfCapacity = v.GetIntfCapacity()
		}
		if v, ok := v.(interface{ GetNetworkBoundary() string }); ok {
			x.NetworkBoundary = v.GetNetworkBoundary()
		}
		if v, ok := v.(interface{ GetConnType() string }); ok {
			x.ConnType = v.GetConnType()
		}
		if v, ok := v.(interface{ GetProvider() string }); ok {
			x.Provider = v.GetProvider()
		}
		if v, ok := v.(interface{ GetUtilStatus() string }); ok {
			x.UtilStatus = v.GetUtilStatus()
		}
		if v, ok := v.(interface{ GetUtilOutMbps() string }); ok {
			x.UtilOutMbps = v.GetUtilOutMbps()
		}
		if v, ok := v.(interface{ GetUtilOutPct() string }); ok {
			x.UtilOutPct = v.GetUtilOutPct()
		}
		if v, ok := v.(interface{ GetUtilInMbps() string }); ok {
			x.UtilInMbps = v.GetUtilInMbps()
		}
		if v, ok := v.(interface{ GetUtilInPct() string }); ok {
			x.UtilInPct = v.GetUtilInPct()
		}
		if v, ok := v.(interface{ GetRunoutStatus() string }); ok {
			x.RunoutStatus = v.GetRunoutStatus()
		}
		if v, ok := v.(interface{ GetRunoutInDate() string }); ok {
			x.RunoutInDate = v.GetRunoutInDate()
		}
		if v, ok := v.(interface{ GetRunoutInVariation() string }); ok {
			x.RunoutInVariation = v.GetRunoutInVariation()
		}
		if v, ok := v.(interface{ GetRunoutOutDate() string }); ok {
			x.RunoutOutDate = v.GetRunoutOutDate()
		}
		if v, ok := v.(interface{ GetRunoutOutVariation() string }); ok {
			x.RunoutOutVariation = v.GetRunoutOutVariation()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *CapacityPlan_InterfaceDetail) Proto_ShallowClone() (c *CapacityPlan_InterfaceDetail) {
	if x != nil {
		c = new(CapacityPlan_InterfaceDetail)
		c.DeviceName = x.DeviceName
		c.IntfName = x.IntfName
		c.IntfDescription = x.IntfDescription
		c.IntfCapacity = x.IntfCapacity
		c.NetworkBoundary = x.NetworkBoundary
		c.ConnType = x.ConnType
		c.Provider = x.Provider
		c.UtilStatus = x.UtilStatus
		c.UtilOutMbps = x.UtilOutMbps
		c.UtilOutPct = x.UtilOutPct
		c.UtilInMbps = x.UtilInMbps
		c.UtilInPct = x.UtilInPct
		c.RunoutStatus = x.RunoutStatus
		c.RunoutInDate = x.RunoutInDate
		c.RunoutInVariation = x.RunoutInVariation
		c.RunoutOutDate = x.RunoutOutDate
		c.RunoutOutVariation = x.RunoutOutVariation
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *ListCapacitySummariesRequest) Proto_ShallowCopy(v interface{}) {
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *ListCapacitySummariesRequest) Proto_ShallowClone() (c *ListCapacitySummariesRequest) {
	if x != nil {
		c = new(ListCapacitySummariesRequest)
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *ListCapacitySummariesResponse) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *ListCapacitySummariesResponse:
		x.Capacity = v.GetCapacity()
		x.InvalidCount = v.GetInvalidCount()
	default:
		if v, ok := v.(interface{ GetCapacity() []*CapacitySummary }); ok {
			x.Capacity = v.GetCapacity()
		}
		if v, ok := v.(interface{ GetInvalidCount() uint32 }); ok {
			x.InvalidCount = v.GetInvalidCount()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *ListCapacitySummariesResponse) Proto_ShallowClone() (c *ListCapacitySummariesResponse) {
	if x != nil {
		c = new(ListCapacitySummariesResponse)
		c.Capacity = x.Capacity
		c.InvalidCount = x.InvalidCount
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *GetCapacitySummaryRequest) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *GetCapacitySummaryRequest:
		x.Id = v.GetId()
	default:
		if v, ok := v.(interface{ GetId() string }); ok {
			x.Id = v.GetId()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *GetCapacitySummaryRequest) Proto_ShallowClone() (c *GetCapacitySummaryRequest) {
	if x != nil {
		c = new(GetCapacitySummaryRequest)
		c.Id = x.Id
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *GetCapacitySummaryResponse) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *GetCapacitySummaryResponse:
		x.Capacity = v.GetCapacity()
	default:
		if v, ok := v.(interface{ GetCapacity() *CapacitySummary }); ok {
			x.Capacity = v.GetCapacity()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *GetCapacitySummaryResponse) Proto_ShallowClone() (c *GetCapacitySummaryResponse) {
	if x != nil {
		c = new(GetCapacitySummaryResponse)
		c.Capacity = x.Capacity
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *ListCapacityPlansRequest) Proto_ShallowCopy(v interface{}) {
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *ListCapacityPlansRequest) Proto_ShallowClone() (c *ListCapacityPlansRequest) {
	if x != nil {
		c = new(ListCapacityPlansRequest)
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *ListCapacityPlansResponse) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *ListCapacityPlansResponse:
		x.Capacity = v.GetCapacity()
		x.InvalidCount = v.GetInvalidCount()
	default:
		if v, ok := v.(interface{ GetCapacity() []*CapacityPlan }); ok {
			x.Capacity = v.GetCapacity()
		}
		if v, ok := v.(interface{ GetInvalidCount() uint32 }); ok {
			x.InvalidCount = v.GetInvalidCount()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *ListCapacityPlansResponse) Proto_ShallowClone() (c *ListCapacityPlansResponse) {
	if x != nil {
		c = new(ListCapacityPlansResponse)
		c.Capacity = x.Capacity
		c.InvalidCount = x.InvalidCount
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *GetCapacityPlanRequest) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *GetCapacityPlanRequest:
		x.Id = v.GetId()
	default:
		if v, ok := v.(interface{ GetId() string }); ok {
			x.Id = v.GetId()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *GetCapacityPlanRequest) Proto_ShallowClone() (c *GetCapacityPlanRequest) {
	if x != nil {
		c = new(GetCapacityPlanRequest)
		c.Id = x.Id
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
// WARNING: Optional fields may be ignored, if v is not the receiver type.
func (x *GetCapacityPlanResponse) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *GetCapacityPlanResponse:
		x.Capacity = v.GetCapacity()
	default:
		if v, ok := v.(interface{ GetCapacity() *CapacityPlan }); ok {
			x.Capacity = v.GetCapacity()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *GetCapacityPlanResponse) Proto_ShallowClone() (c *GetCapacityPlanResponse) {
	if x != nil {
		c = new(GetCapacityPlanResponse)
		c.Capacity = x.Capacity
	}
	return
}
