// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: kentik/custom_dimension/v202411alpha1/custom_dimension.proto

package custom_dimension

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	CustomDimensionService_ListCustomDimensions_FullMethodName   = "/kentik.custom_dimension.v202411alpha1.CustomDimensionService/ListCustomDimensions"
	CustomDimensionService_GetCustomDimensionInfo_FullMethodName = "/kentik.custom_dimension.v202411alpha1.CustomDimensionService/GetCustomDimensionInfo"
	CustomDimensionService_CreateCustomDimension_FullMethodName  = "/kentik.custom_dimension.v202411alpha1.CustomDimensionService/CreateCustomDimension"
	CustomDimensionService_UpdateCustomDimension_FullMethodName  = "/kentik.custom_dimension.v202411alpha1.CustomDimensionService/UpdateCustomDimension"
	CustomDimensionService_DeleteCustomDimension_FullMethodName  = "/kentik.custom_dimension.v202411alpha1.CustomDimensionService/DeleteCustomDimension"
	CustomDimensionService_CreatePopulator_FullMethodName        = "/kentik.custom_dimension.v202411alpha1.CustomDimensionService/CreatePopulator"
	CustomDimensionService_UpdatePopulator_FullMethodName        = "/kentik.custom_dimension.v202411alpha1.CustomDimensionService/UpdatePopulator"
	CustomDimensionService_DeletePopulator_FullMethodName        = "/kentik.custom_dimension.v202411alpha1.CustomDimensionService/DeletePopulator"
)

// CustomDimensionServiceClient is the client API for CustomDimensionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CustomDimensionServiceClient interface {
	ListCustomDimensions(ctx context.Context, in *ListCustomDimensionsRequest, opts ...grpc.CallOption) (*ListCustomDimensionsResponse, error)
	GetCustomDimensionInfo(ctx context.Context, in *GetCustomDimensionInfoRequest, opts ...grpc.CallOption) (*GetCustomDimensionInfoResponse, error)
	CreateCustomDimension(ctx context.Context, in *CreateCustomDimensionRequest, opts ...grpc.CallOption) (*CreateCustomDimensionResponse, error)
	UpdateCustomDimension(ctx context.Context, in *UpdateCustomDimensionRequest, opts ...grpc.CallOption) (*UpdateCustomDimensionResponse, error)
	DeleteCustomDimension(ctx context.Context, in *DeleteCustomDimensionRequest, opts ...grpc.CallOption) (*DeleteCustomDimensionResponse, error)
	CreatePopulator(ctx context.Context, in *CreatePopulatorRequest, opts ...grpc.CallOption) (*CreatePopulatorResponse, error)
	UpdatePopulator(ctx context.Context, in *UpdatePopulatorRequest, opts ...grpc.CallOption) (*UpdatePopulatorResponse, error)
	DeletePopulator(ctx context.Context, in *DeletePopulatorRequest, opts ...grpc.CallOption) (*DeletePopulatorResponse, error)
}

type customDimensionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCustomDimensionServiceClient(cc grpc.ClientConnInterface) CustomDimensionServiceClient {
	return &customDimensionServiceClient{cc}
}

func (c *customDimensionServiceClient) ListCustomDimensions(ctx context.Context, in *ListCustomDimensionsRequest, opts ...grpc.CallOption) (*ListCustomDimensionsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListCustomDimensionsResponse)
	err := c.cc.Invoke(ctx, CustomDimensionService_ListCustomDimensions_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customDimensionServiceClient) GetCustomDimensionInfo(ctx context.Context, in *GetCustomDimensionInfoRequest, opts ...grpc.CallOption) (*GetCustomDimensionInfoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetCustomDimensionInfoResponse)
	err := c.cc.Invoke(ctx, CustomDimensionService_GetCustomDimensionInfo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customDimensionServiceClient) CreateCustomDimension(ctx context.Context, in *CreateCustomDimensionRequest, opts ...grpc.CallOption) (*CreateCustomDimensionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateCustomDimensionResponse)
	err := c.cc.Invoke(ctx, CustomDimensionService_CreateCustomDimension_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customDimensionServiceClient) UpdateCustomDimension(ctx context.Context, in *UpdateCustomDimensionRequest, opts ...grpc.CallOption) (*UpdateCustomDimensionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateCustomDimensionResponse)
	err := c.cc.Invoke(ctx, CustomDimensionService_UpdateCustomDimension_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customDimensionServiceClient) DeleteCustomDimension(ctx context.Context, in *DeleteCustomDimensionRequest, opts ...grpc.CallOption) (*DeleteCustomDimensionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteCustomDimensionResponse)
	err := c.cc.Invoke(ctx, CustomDimensionService_DeleteCustomDimension_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customDimensionServiceClient) CreatePopulator(ctx context.Context, in *CreatePopulatorRequest, opts ...grpc.CallOption) (*CreatePopulatorResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreatePopulatorResponse)
	err := c.cc.Invoke(ctx, CustomDimensionService_CreatePopulator_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customDimensionServiceClient) UpdatePopulator(ctx context.Context, in *UpdatePopulatorRequest, opts ...grpc.CallOption) (*UpdatePopulatorResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdatePopulatorResponse)
	err := c.cc.Invoke(ctx, CustomDimensionService_UpdatePopulator_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customDimensionServiceClient) DeletePopulator(ctx context.Context, in *DeletePopulatorRequest, opts ...grpc.CallOption) (*DeletePopulatorResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeletePopulatorResponse)
	err := c.cc.Invoke(ctx, CustomDimensionService_DeletePopulator_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomDimensionServiceServer is the server API for CustomDimensionService service.
// All implementations should embed UnimplementedCustomDimensionServiceServer
// for forward compatibility.
type CustomDimensionServiceServer interface {
	ListCustomDimensions(context.Context, *ListCustomDimensionsRequest) (*ListCustomDimensionsResponse, error)
	GetCustomDimensionInfo(context.Context, *GetCustomDimensionInfoRequest) (*GetCustomDimensionInfoResponse, error)
	CreateCustomDimension(context.Context, *CreateCustomDimensionRequest) (*CreateCustomDimensionResponse, error)
	UpdateCustomDimension(context.Context, *UpdateCustomDimensionRequest) (*UpdateCustomDimensionResponse, error)
	DeleteCustomDimension(context.Context, *DeleteCustomDimensionRequest) (*DeleteCustomDimensionResponse, error)
	CreatePopulator(context.Context, *CreatePopulatorRequest) (*CreatePopulatorResponse, error)
	UpdatePopulator(context.Context, *UpdatePopulatorRequest) (*UpdatePopulatorResponse, error)
	DeletePopulator(context.Context, *DeletePopulatorRequest) (*DeletePopulatorResponse, error)
}

// UnimplementedCustomDimensionServiceServer should be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedCustomDimensionServiceServer struct{}

func (UnimplementedCustomDimensionServiceServer) ListCustomDimensions(context.Context, *ListCustomDimensionsRequest) (*ListCustomDimensionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCustomDimensions not implemented")
}
func (UnimplementedCustomDimensionServiceServer) GetCustomDimensionInfo(context.Context, *GetCustomDimensionInfoRequest) (*GetCustomDimensionInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomDimensionInfo not implemented")
}
func (UnimplementedCustomDimensionServiceServer) CreateCustomDimension(context.Context, *CreateCustomDimensionRequest) (*CreateCustomDimensionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCustomDimension not implemented")
}
func (UnimplementedCustomDimensionServiceServer) UpdateCustomDimension(context.Context, *UpdateCustomDimensionRequest) (*UpdateCustomDimensionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCustomDimension not implemented")
}
func (UnimplementedCustomDimensionServiceServer) DeleteCustomDimension(context.Context, *DeleteCustomDimensionRequest) (*DeleteCustomDimensionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCustomDimension not implemented")
}
func (UnimplementedCustomDimensionServiceServer) CreatePopulator(context.Context, *CreatePopulatorRequest) (*CreatePopulatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePopulator not implemented")
}
func (UnimplementedCustomDimensionServiceServer) UpdatePopulator(context.Context, *UpdatePopulatorRequest) (*UpdatePopulatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePopulator not implemented")
}
func (UnimplementedCustomDimensionServiceServer) DeletePopulator(context.Context, *DeletePopulatorRequest) (*DeletePopulatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePopulator not implemented")
}
func (UnimplementedCustomDimensionServiceServer) testEmbeddedByValue() {}

// UnsafeCustomDimensionServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CustomDimensionServiceServer will
// result in compilation errors.
type UnsafeCustomDimensionServiceServer interface {
	mustEmbedUnimplementedCustomDimensionServiceServer()
}

func RegisterCustomDimensionServiceServer(s grpc.ServiceRegistrar, srv CustomDimensionServiceServer) {
	// If the following call pancis, it indicates UnimplementedCustomDimensionServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&CustomDimensionService_ServiceDesc, srv)
}

func _CustomDimensionService_ListCustomDimensions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCustomDimensionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomDimensionServiceServer).ListCustomDimensions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CustomDimensionService_ListCustomDimensions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomDimensionServiceServer).ListCustomDimensions(ctx, req.(*ListCustomDimensionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomDimensionService_GetCustomDimensionInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCustomDimensionInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomDimensionServiceServer).GetCustomDimensionInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CustomDimensionService_GetCustomDimensionInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomDimensionServiceServer).GetCustomDimensionInfo(ctx, req.(*GetCustomDimensionInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomDimensionService_CreateCustomDimension_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCustomDimensionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomDimensionServiceServer).CreateCustomDimension(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CustomDimensionService_CreateCustomDimension_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomDimensionServiceServer).CreateCustomDimension(ctx, req.(*CreateCustomDimensionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomDimensionService_UpdateCustomDimension_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCustomDimensionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomDimensionServiceServer).UpdateCustomDimension(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CustomDimensionService_UpdateCustomDimension_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomDimensionServiceServer).UpdateCustomDimension(ctx, req.(*UpdateCustomDimensionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomDimensionService_DeleteCustomDimension_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCustomDimensionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomDimensionServiceServer).DeleteCustomDimension(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CustomDimensionService_DeleteCustomDimension_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomDimensionServiceServer).DeleteCustomDimension(ctx, req.(*DeleteCustomDimensionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomDimensionService_CreatePopulator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePopulatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomDimensionServiceServer).CreatePopulator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CustomDimensionService_CreatePopulator_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomDimensionServiceServer).CreatePopulator(ctx, req.(*CreatePopulatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomDimensionService_UpdatePopulator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePopulatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomDimensionServiceServer).UpdatePopulator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CustomDimensionService_UpdatePopulator_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomDimensionServiceServer).UpdatePopulator(ctx, req.(*UpdatePopulatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomDimensionService_DeletePopulator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePopulatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomDimensionServiceServer).DeletePopulator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CustomDimensionService_DeletePopulator_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomDimensionServiceServer).DeletePopulator(ctx, req.(*DeletePopulatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CustomDimensionService_ServiceDesc is the grpc.ServiceDesc for CustomDimensionService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CustomDimensionService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "kentik.custom_dimension.v202411alpha1.CustomDimensionService",
	HandlerType: (*CustomDimensionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListCustomDimensions",
			Handler:    _CustomDimensionService_ListCustomDimensions_Handler,
		},
		{
			MethodName: "GetCustomDimensionInfo",
			Handler:    _CustomDimensionService_GetCustomDimensionInfo_Handler,
		},
		{
			MethodName: "CreateCustomDimension",
			Handler:    _CustomDimensionService_CreateCustomDimension_Handler,
		},
		{
			MethodName: "UpdateCustomDimension",
			Handler:    _CustomDimensionService_UpdateCustomDimension_Handler,
		},
		{
			MethodName: "DeleteCustomDimension",
			Handler:    _CustomDimensionService_DeleteCustomDimension_Handler,
		},
		{
			MethodName: "CreatePopulator",
			Handler:    _CustomDimensionService_CreatePopulator_Handler,
		},
		{
			MethodName: "UpdatePopulator",
			Handler:    _CustomDimensionService_UpdatePopulator_Handler,
		},
		{
			MethodName: "DeletePopulator",
			Handler:    _CustomDimensionService_DeletePopulator_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kentik/custom_dimension/v202411alpha1/custom_dimension.proto",
}
