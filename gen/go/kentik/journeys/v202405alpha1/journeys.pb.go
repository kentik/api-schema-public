// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        (unknown)
// source: kentik/journeys/v202405alpha1/journeys.proto

package journeys

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/kentik/api-schema-public/gen/go/kentik/core/v202303"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ResultType int32

const (
	ResultType_RESULT_TYPE_UNSPECIFIED     ResultType = 0
	ResultType_RESULT_TYPE_ERROR           ResultType = 1
	ResultType_RESULT_TYPE_DE_QUERY_OBJECT ResultType = 2
	ResultType_RESULT_TYPE_ME_QUERY_OBJECT ResultType = 3
	ResultType_RESULT_TYPE_KNOWLEDGE_BASE  ResultType = 4
)

// Enum value maps for ResultType.
var (
	ResultType_name = map[int32]string{
		0: "RESULT_TYPE_UNSPECIFIED",
		1: "RESULT_TYPE_ERROR",
		2: "RESULT_TYPE_DE_QUERY_OBJECT",
		3: "RESULT_TYPE_ME_QUERY_OBJECT",
		4: "RESULT_TYPE_KNOWLEDGE_BASE",
	}
	ResultType_value = map[string]int32{
		"RESULT_TYPE_UNSPECIFIED":     0,
		"RESULT_TYPE_ERROR":           1,
		"RESULT_TYPE_DE_QUERY_OBJECT": 2,
		"RESULT_TYPE_ME_QUERY_OBJECT": 3,
		"RESULT_TYPE_KNOWLEDGE_BASE":  4,
	}
)

func (x ResultType) Enum() *ResultType {
	p := new(ResultType)
	*p = x
	return p
}

func (x ResultType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResultType) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_journeys_v202405alpha1_journeys_proto_enumTypes[0].Descriptor()
}

func (ResultType) Type() protoreflect.EnumType {
	return &file_kentik_journeys_v202405alpha1_journeys_proto_enumTypes[0]
}

func (x ResultType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResultType.Descriptor instead.
func (ResultType) EnumDescriptor() ([]byte, []int) {
	return file_kentik_journeys_v202405alpha1_journeys_proto_rawDescGZIP(), []int{0}
}

type ResultFormat int32

const (
	ResultFormat_RESULT_FORMAT_UNSPECIFIED ResultFormat = 0
	ResultFormat_RESULT_FORMAT_JSON        ResultFormat = 1
	ResultFormat_RESULT_FORMAT_MARKDOWN    ResultFormat = 2
	ResultFormat_RESULT_FORMAT_PLAIN_TEXT  ResultFormat = 3
)

// Enum value maps for ResultFormat.
var (
	ResultFormat_name = map[int32]string{
		0: "RESULT_FORMAT_UNSPECIFIED",
		1: "RESULT_FORMAT_JSON",
		2: "RESULT_FORMAT_MARKDOWN",
		3: "RESULT_FORMAT_PLAIN_TEXT",
	}
	ResultFormat_value = map[string]int32{
		"RESULT_FORMAT_UNSPECIFIED": 0,
		"RESULT_FORMAT_JSON":        1,
		"RESULT_FORMAT_MARKDOWN":    2,
		"RESULT_FORMAT_PLAIN_TEXT":  3,
	}
)

func (x ResultFormat) Enum() *ResultFormat {
	p := new(ResultFormat)
	*p = x
	return p
}

func (x ResultFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResultFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_journeys_v202405alpha1_journeys_proto_enumTypes[1].Descriptor()
}

func (ResultFormat) Type() protoreflect.EnumType {
	return &file_kentik_journeys_v202405alpha1_journeys_proto_enumTypes[1]
}

func (x ResultFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResultFormat.Descriptor instead.
func (ResultFormat) EnumDescriptor() ([]byte, []int) {
	return file_kentik_journeys_v202405alpha1_journeys_proto_rawDescGZIP(), []int{1}
}

// {{.Name}}
type GetJourneysNlqRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prompt string `protobuf:"bytes,1,opt,name=prompt,proto3" json:"prompt,omitempty"`
}

func (x *GetJourneysNlqRequest) Reset() {
	*x = GetJourneysNlqRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_journeys_v202405alpha1_journeys_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJourneysNlqRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJourneysNlqRequest) ProtoMessage() {}

func (x *GetJourneysNlqRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_journeys_v202405alpha1_journeys_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJourneysNlqRequest.ProtoReflect.Descriptor instead.
func (*GetJourneysNlqRequest) Descriptor() ([]byte, []int) {
	return file_kentik_journeys_v202405alpha1_journeys_proto_rawDescGZIP(), []int{0}
}

func (x *GetJourneysNlqRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

// {{.Name}}
type GetJourneysNlqResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       string       `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	ResultType   ResultType   `protobuf:"varint,2,opt,name=result_type,json=resultType,proto3,enum=kentik.journeys.v202405alpha1.ResultType" json:"result_type,omitempty"`
	ResultFormat ResultFormat `protobuf:"varint,3,opt,name=result_format,json=resultFormat,proto3,enum=kentik.journeys.v202405alpha1.ResultFormat" json:"result_format,omitempty"`
}

func (x *GetJourneysNlqResponse) Reset() {
	*x = GetJourneysNlqResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_journeys_v202405alpha1_journeys_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJourneysNlqResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJourneysNlqResponse) ProtoMessage() {}

func (x *GetJourneysNlqResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_journeys_v202405alpha1_journeys_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJourneysNlqResponse.ProtoReflect.Descriptor instead.
func (*GetJourneysNlqResponse) Descriptor() ([]byte, []int) {
	return file_kentik_journeys_v202405alpha1_journeys_proto_rawDescGZIP(), []int{1}
}

func (x *GetJourneysNlqResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *GetJourneysNlqResponse) GetResultType() ResultType {
	if x != nil {
		return x.ResultType
	}
	return ResultType_RESULT_TYPE_UNSPECIFIED
}

func (x *GetJourneysNlqResponse) GetResultFormat() ResultFormat {
	if x != nil {
		return x.ResultFormat
	}
	return ResultFormat_RESULT_FORMAT_UNSPECIFIED
}

var File_kentik_journeys_v202405alpha1_journeys_proto protoreflect.FileDescriptor

var file_kentik_journeys_v202405alpha1_journeys_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79,
	0x73, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x34, 0x30, 0x35, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d,
	0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x73, 0x2e,
	0x76, 0x32, 0x30, 0x32, 0x34, 0x30, 0x35, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65,
	0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x33, 0x30, 0x33, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x73, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x73, 0x4e, 0x6c, 0x71, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x42, 0x92, 0x41, 0x3b, 0x32, 0x39, 0x54, 0x68, 0x65, 0x20,
	0x74, 0x65, 0x78, 0x74, 0x20, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x62,
	0x65, 0x20, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x61,
	0x20, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x73, 0x20, 0x4e, 0x4c, 0x51, 0x20, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x2e, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70,
	0x74, 0x22, 0xce, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79,
	0x73, 0x4e, 0x6c, 0x71, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x4a, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x6b, 0x65, 0x6e, 0x74,
	0x69, 0x6b, 0x2e, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x73, 0x2e, 0x76, 0x32, 0x30, 0x32,
	0x34, 0x30, 0x35, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x50, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b,
	0x2e, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x73, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x34, 0x30,
	0x35, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x2a, 0xa2, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x4f, 0x42,
	0x4a, 0x45, 0x43, 0x54, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x45, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x4f,
	0x42, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x45, 0x53, 0x55, 0x4c,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4b, 0x4e, 0x4f, 0x57, 0x4c, 0x45, 0x44, 0x47, 0x45,
	0x5f, 0x42, 0x41, 0x53, 0x45, 0x10, 0x04, 0x2a, 0x7f, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x53, 0x55, 0x4c,
	0x54, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54,
	0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x1a,
	0x0a, 0x16, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f,
	0x4d, 0x41, 0x52, 0x4b, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x45,
	0x53, 0x55, 0x4c, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x50, 0x4c, 0x41, 0x49,
	0x4e, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x03, 0x32, 0xe7, 0x02, 0x0a, 0x13, 0x4a, 0x6f, 0x75,
	0x72, 0x6e, 0x65, 0x79, 0x73, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0xa7, 0x02, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x73,
	0x4e, 0x6c, 0x71, 0x12, 0x34, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x6a, 0x6f, 0x75,
	0x72, 0x6e, 0x65, 0x79, 0x73, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x34, 0x30, 0x35, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x73, 0x4e,
	0x6c, 0x71, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6b, 0x65, 0x6e, 0x74,
	0x69, 0x6b, 0x2e, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x73, 0x2e, 0x76, 0x32, 0x30, 0x32,
	0x34, 0x30, 0x35, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x75,
	0x72, 0x6e, 0x65, 0x79, 0x73, 0x4e, 0x6c, 0x71, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xa7, 0x01, 0x92, 0x41, 0x65, 0x12, 0x17, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x73,
	0x20, 0x41, 0x49, 0x20, 0x4e, 0x4c, 0x51, 0x20, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a,
	0x3a, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x4e, 0x61, 0x74, 0x75, 0x72, 0x61, 0x6c,
	0x20, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x20, 0x28, 0x4e, 0x4c, 0x51, 0x29, 0x20,
	0x74, 0x6f, 0x20, 0x71, 0x75, 0x65, 0x72, 0x79, 0x20, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x0e, 0x47, 0x65, 0x74,
	0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x73, 0x4e, 0x6c, 0x71, 0xf2, 0xd7, 0x02, 0x0d, 0x6a,
	0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x73, 0x3a, 0x72, 0x65, 0x61, 0x64, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x28, 0x12, 0x26, 0x2f, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x73, 0x2f, 0x76, 0x32,
	0x30, 0x32, 0x34, 0x30, 0x35, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x47, 0x65, 0x74, 0x4a,
	0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x73, 0x4e, 0x6c, 0x71, 0x1a, 0x26, 0xca, 0x41, 0x13, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63,
	0x6f, 0x6d, 0xea, 0xd7, 0x02, 0x08, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x73, 0x90, 0xd8,
	0x02, 0x03, 0x42, 0x82, 0x04, 0x5a, 0x51, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67,
	0x6f, 0x2f, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79,
	0x73, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x34, 0x30, 0x35, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b,
	0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x73, 0x92, 0x41, 0xab, 0x03, 0x12, 0xc4, 0x01, 0x0a,
	0x13, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x73, 0x20, 0x41, 0x49, 0x20, 0x4e, 0x4c, 0x51,
	0x20, 0x41, 0x50, 0x49, 0x12, 0x57, 0x23, 0x20, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77,
	0x0a, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x73, 0x20, 0x41, 0x49, 0x20, 0x41, 0x50, 0x49,
	0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x73, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x20, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x20, 0x74, 0x6f,
	0x20, 0x4e, 0x61, 0x74, 0x75, 0x72, 0x61, 0x6c, 0x20, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x20, 0x28, 0x4e, 0x4c, 0x51, 0x29, 0x22, 0x45, 0x0a,
	0x16, 0x4b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x20, 0x41, 0x50, 0x49, 0x20, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x2b, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f,
	0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x65, 0x6e, 0x74,
	0x69, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2d, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x32, 0x0d, 0x76, 0x32, 0x30, 0x32, 0x34, 0x30, 0x35, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2a, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x44, 0x0a, 0x1e, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x15, 0x08, 0x02, 0x1a, 0x0f, 0x58, 0x2d, 0x43, 0x48, 0x2d,
	0x41, 0x75, 0x74, 0x68, 0x2d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x20, 0x02, 0x0a, 0x22, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x08, 0x02, 0x1a, 0x13, 0x58, 0x2d, 0x43, 0x48, 0x2d,
	0x41, 0x75, 0x74, 0x68, 0x2d, 0x41, 0x50, 0x49, 0x2d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x02,
	0x62, 0x16, 0x0a, 0x09, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x00, 0x0a, 0x09, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x00, 0x72, 0x5d, 0x0a, 0x25, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20,
	0x61, 0x62, 0x6f, 0x75, 0x74, 0x20, 0x4b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x20, 0x41, 0x50, 0x49,
	0x73, 0x12, 0x34, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x6b, 0x62, 0x2e, 0x6b, 0x65,
	0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x30, 0x2f, 0x41, 0x62, 0x30, 0x39,
	0x2e, 0x68, 0x74, 0x6d, 0x23, 0x41, 0x62, 0x30, 0x39, 0x2d, 0x41, 0x50, 0x49, 0x73, 0x5f, 0x4f,
	0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kentik_journeys_v202405alpha1_journeys_proto_rawDescOnce sync.Once
	file_kentik_journeys_v202405alpha1_journeys_proto_rawDescData = file_kentik_journeys_v202405alpha1_journeys_proto_rawDesc
)

func file_kentik_journeys_v202405alpha1_journeys_proto_rawDescGZIP() []byte {
	file_kentik_journeys_v202405alpha1_journeys_proto_rawDescOnce.Do(func() {
		file_kentik_journeys_v202405alpha1_journeys_proto_rawDescData = protoimpl.X.CompressGZIP(file_kentik_journeys_v202405alpha1_journeys_proto_rawDescData)
	})
	return file_kentik_journeys_v202405alpha1_journeys_proto_rawDescData
}

var file_kentik_journeys_v202405alpha1_journeys_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_kentik_journeys_v202405alpha1_journeys_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_kentik_journeys_v202405alpha1_journeys_proto_goTypes = []interface{}{
	(ResultType)(0),                // 0: kentik.journeys.v202405alpha1.ResultType
	(ResultFormat)(0),              // 1: kentik.journeys.v202405alpha1.ResultFormat
	(*GetJourneysNlqRequest)(nil),  // 2: kentik.journeys.v202405alpha1.GetJourneysNlqRequest
	(*GetJourneysNlqResponse)(nil), // 3: kentik.journeys.v202405alpha1.GetJourneysNlqResponse
}
var file_kentik_journeys_v202405alpha1_journeys_proto_depIdxs = []int32{
	0, // 0: kentik.journeys.v202405alpha1.GetJourneysNlqResponse.result_type:type_name -> kentik.journeys.v202405alpha1.ResultType
	1, // 1: kentik.journeys.v202405alpha1.GetJourneysNlqResponse.result_format:type_name -> kentik.journeys.v202405alpha1.ResultFormat
	2, // 2: kentik.journeys.v202405alpha1.JourneysDataService.GetJourneysNlq:input_type -> kentik.journeys.v202405alpha1.GetJourneysNlqRequest
	3, // 3: kentik.journeys.v202405alpha1.JourneysDataService.GetJourneysNlq:output_type -> kentik.journeys.v202405alpha1.GetJourneysNlqResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_kentik_journeys_v202405alpha1_journeys_proto_init() }
func file_kentik_journeys_v202405alpha1_journeys_proto_init() {
	if File_kentik_journeys_v202405alpha1_journeys_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kentik_journeys_v202405alpha1_journeys_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJourneysNlqRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_journeys_v202405alpha1_journeys_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJourneysNlqResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kentik_journeys_v202405alpha1_journeys_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kentik_journeys_v202405alpha1_journeys_proto_goTypes,
		DependencyIndexes: file_kentik_journeys_v202405alpha1_journeys_proto_depIdxs,
		EnumInfos:         file_kentik_journeys_v202405alpha1_journeys_proto_enumTypes,
		MessageInfos:      file_kentik_journeys_v202405alpha1_journeys_proto_msgTypes,
	}.Build()
	File_kentik_journeys_v202405alpha1_journeys_proto = out.File
	file_kentik_journeys_v202405alpha1_journeys_proto_rawDesc = nil
	file_kentik_journeys_v202405alpha1_journeys_proto_goTypes = nil
	file_kentik_journeys_v202405alpha1_journeys_proto_depIdxs = nil
}
