// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package pathfinder

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PathfinderAdminServiceClient is the client API for PathfinderAdminService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PathfinderAdminServiceClient interface {
	CreatePathfinderReport(ctx context.Context, in *CreatePathfinderReportRequest, opts ...grpc.CallOption) (*CreatePathfinderReportResponse, error)
}

type pathfinderAdminServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPathfinderAdminServiceClient(cc grpc.ClientConnInterface) PathfinderAdminServiceClient {
	return &pathfinderAdminServiceClient{cc}
}

func (c *pathfinderAdminServiceClient) CreatePathfinderReport(ctx context.Context, in *CreatePathfinderReportRequest, opts ...grpc.CallOption) (*CreatePathfinderReportResponse, error) {
	out := new(CreatePathfinderReportResponse)
	err := c.cc.Invoke(ctx, "/kentik.pathfinder.v202505beta1.PathfinderAdminService/CreatePathfinderReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PathfinderAdminServiceServer is the server API for PathfinderAdminService service.
// All implementations should embed UnimplementedPathfinderAdminServiceServer
// for forward compatibility
type PathfinderAdminServiceServer interface {
	CreatePathfinderReport(context.Context, *CreatePathfinderReportRequest) (*CreatePathfinderReportResponse, error)
}

// UnimplementedPathfinderAdminServiceServer should be embedded to have forward compatible implementations.
type UnimplementedPathfinderAdminServiceServer struct {
}

func (UnimplementedPathfinderAdminServiceServer) CreatePathfinderReport(context.Context, *CreatePathfinderReportRequest) (*CreatePathfinderReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePathfinderReport not implemented")
}

// UnsafePathfinderAdminServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PathfinderAdminServiceServer will
// result in compilation errors.
type UnsafePathfinderAdminServiceServer interface {
	mustEmbedUnimplementedPathfinderAdminServiceServer()
}

func RegisterPathfinderAdminServiceServer(s grpc.ServiceRegistrar, srv PathfinderAdminServiceServer) {
	s.RegisterService(&PathfinderAdminService_ServiceDesc, srv)
}

func _PathfinderAdminService_CreatePathfinderReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePathfinderReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PathfinderAdminServiceServer).CreatePathfinderReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kentik.pathfinder.v202505beta1.PathfinderAdminService/CreatePathfinderReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PathfinderAdminServiceServer).CreatePathfinderReport(ctx, req.(*CreatePathfinderReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PathfinderAdminService_ServiceDesc is the grpc.ServiceDesc for PathfinderAdminService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PathfinderAdminService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "kentik.pathfinder.v202505beta1.PathfinderAdminService",
	HandlerType: (*PathfinderAdminServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePathfinderReport",
			Handler:    _PathfinderAdminService_CreatePathfinderReport_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kentik/pathfinder/v202505beta1/pathfinder.proto",
}
