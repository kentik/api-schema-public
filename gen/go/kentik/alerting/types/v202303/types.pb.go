// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        (unknown)
// source: kentik/alerting/types/v202303/types.proto

package v202303

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Severity int32

const (
	Severity_SEVERITY_UNSPECIFIED Severity = 0
	Severity_SEVERITY_CLEAR       Severity = 1
	Severity_SEVERITY_MINOR       Severity = 10
	Severity_SEVERITY_WARNING     Severity = 20
	Severity_SEVERITY_MAJOR       Severity = 40
	Severity_SEVERITY_SEVERE      Severity = 70
	Severity_SEVERITY_CRITICAL    Severity = 90
)

// Enum value maps for Severity.
var (
	Severity_name = map[int32]string{
		0:  "SEVERITY_UNSPECIFIED",
		1:  "SEVERITY_CLEAR",
		10: "SEVERITY_MINOR",
		20: "SEVERITY_WARNING",
		40: "SEVERITY_MAJOR",
		70: "SEVERITY_SEVERE",
		90: "SEVERITY_CRITICAL",
	}
	Severity_value = map[string]int32{
		"SEVERITY_UNSPECIFIED": 0,
		"SEVERITY_CLEAR":       1,
		"SEVERITY_MINOR":       10,
		"SEVERITY_WARNING":     20,
		"SEVERITY_MAJOR":       40,
		"SEVERITY_SEVERE":      70,
		"SEVERITY_CRITICAL":    90,
	}
)

func (x Severity) Enum() *Severity {
	p := new(Severity)
	*p = x
	return p
}

func (x Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_alerting_types_v202303_types_proto_enumTypes[0].Descriptor()
}

func (Severity) Type() protoreflect.EnumType {
	return &file_kentik_alerting_types_v202303_types_proto_enumTypes[0]
}

func (x Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Severity.Descriptor instead.
func (Severity) EnumDescriptor() ([]byte, []int) {
	return file_kentik_alerting_types_v202303_types_proto_rawDescGZIP(), []int{0}
}

type SortOrder int32

const (
	SortOrder_SORT_ORDER_UNSPECIFIED SortOrder = 0
	SortOrder_SORT_ORDER_ASCENDING   SortOrder = 1
	SortOrder_SORT_ORDER_DESCENDING  SortOrder = 2
)

// Enum value maps for SortOrder.
var (
	SortOrder_name = map[int32]string{
		0: "SORT_ORDER_UNSPECIFIED",
		1: "SORT_ORDER_ASCENDING",
		2: "SORT_ORDER_DESCENDING",
	}
	SortOrder_value = map[string]int32{
		"SORT_ORDER_UNSPECIFIED": 0,
		"SORT_ORDER_ASCENDING":   1,
		"SORT_ORDER_DESCENDING":  2,
	}
)

func (x SortOrder) Enum() *SortOrder {
	p := new(SortOrder)
	*p = x
	return p
}

func (x SortOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_alerting_types_v202303_types_proto_enumTypes[1].Descriptor()
}

func (SortOrder) Type() protoreflect.EnumType {
	return &file_kentik_alerting_types_v202303_types_proto_enumTypes[1]
}

func (x SortOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortOrder.Descriptor instead.
func (SortOrder) EnumDescriptor() ([]byte, []int) {
	return file_kentik_alerting_types_v202303_types_proto_rawDescGZIP(), []int{1}
}

type MultiAttributeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	Filter  map[string]*AttributeFilter `protobuf:"bytes,1,rep,name=filter,proto3" json:"filter,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Filters []*KeyValueFilter           `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *MultiAttributeFilter) Reset() {
	*x = MultiAttributeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiAttributeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiAttributeFilter) ProtoMessage() {}

func (x *MultiAttributeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiAttributeFilter.ProtoReflect.Descriptor instead.
func (*MultiAttributeFilter) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_types_v202303_types_proto_rawDescGZIP(), []int{0}
}

// Deprecated: Do not use.
func (x *MultiAttributeFilter) GetFilter() map[string]*AttributeFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *MultiAttributeFilter) GetFilters() []*KeyValueFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type AttributeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Please note attribute filter operates on strings or stringified values
	Not bool `protobuf:"varint,1,opt,name=not,proto3" json:"not,omitempty"`
	// Types that are assignable to Value:
	//
	//	*AttributeFilter_Empty
	//	*AttributeFilter_Equals
	//	*AttributeFilter_StartsWith
	//	*AttributeFilter_EndsWith
	//	*AttributeFilter_Contains
	//	*AttributeFilter_In
	//	*AttributeFilter_Any
	Value isAttributeFilter_Value `protobuf_oneof:"value"`
}

func (x *AttributeFilter) Reset() {
	*x = AttributeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeFilter) ProtoMessage() {}

func (x *AttributeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeFilter.ProtoReflect.Descriptor instead.
func (*AttributeFilter) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_types_v202303_types_proto_rawDescGZIP(), []int{1}
}

func (x *AttributeFilter) GetNot() bool {
	if x != nil {
		return x.Not
	}
	return false
}

func (m *AttributeFilter) GetValue() isAttributeFilter_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *AttributeFilter) GetEmpty() bool {
	if x, ok := x.GetValue().(*AttributeFilter_Empty); ok {
		return x.Empty
	}
	return false
}

func (x *AttributeFilter) GetEquals() string {
	if x, ok := x.GetValue().(*AttributeFilter_Equals); ok {
		return x.Equals
	}
	return ""
}

func (x *AttributeFilter) GetStartsWith() string {
	if x, ok := x.GetValue().(*AttributeFilter_StartsWith); ok {
		return x.StartsWith
	}
	return ""
}

func (x *AttributeFilter) GetEndsWith() string {
	if x, ok := x.GetValue().(*AttributeFilter_EndsWith); ok {
		return x.EndsWith
	}
	return ""
}

func (x *AttributeFilter) GetContains() string {
	if x, ok := x.GetValue().(*AttributeFilter_Contains); ok {
		return x.Contains
	}
	return ""
}

func (x *AttributeFilter) GetIn() *AttributeFilter_StringArray {
	if x, ok := x.GetValue().(*AttributeFilter_In); ok {
		return x.In
	}
	return nil
}

func (x *AttributeFilter) GetAny() bool {
	if x, ok := x.GetValue().(*AttributeFilter_Any); ok {
		return x.Any
	}
	return false
}

type isAttributeFilter_Value interface {
	isAttributeFilter_Value()
}

type AttributeFilter_Empty struct {
	// Indicates that we want to check for an empty value.  To use empty this value MUST be set to
	// true.  Setting not to true enables us to look for "not-empty".
	Empty bool `protobuf:"varint,2,opt,name=empty,proto3,oneof"`
}

type AttributeFilter_Equals struct {
	Equals string `protobuf:"bytes,3,opt,name=equals,proto3,oneof"`
}

type AttributeFilter_StartsWith struct {
	StartsWith string `protobuf:"bytes,4,opt,name=starts_with,json=startsWith,proto3,oneof"`
}

type AttributeFilter_EndsWith struct {
	EndsWith string `protobuf:"bytes,5,opt,name=ends_with,json=endsWith,proto3,oneof"`
}

type AttributeFilter_Contains struct {
	Contains string `protobuf:"bytes,6,opt,name=contains,proto3,oneof"`
}

type AttributeFilter_In struct {
	In *AttributeFilter_StringArray `protobuf:"bytes,7,opt,name=in,proto3,oneof"`
}

type AttributeFilter_Any struct {
	// The equivalent of: value="*.  To use any this value MUST be set to true. Setting not to true
	// enables us to look for "not-anything", but that predicate does not make much sense.
	Any bool `protobuf:"varint,8,opt,name=any,proto3,oneof"`
}

func (*AttributeFilter_Empty) isAttributeFilter_Value() {}

func (*AttributeFilter_Equals) isAttributeFilter_Value() {}

func (*AttributeFilter_StartsWith) isAttributeFilter_Value() {}

func (*AttributeFilter_EndsWith) isAttributeFilter_Value() {}

func (*AttributeFilter_Contains) isAttributeFilter_Value() {}

func (*AttributeFilter_In) isAttributeFilter_Value() {}

func (*AttributeFilter_Any) isAttributeFilter_Value() {}

type SimpleAttributeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Please note simple attribute filter operates on strings or stringified values
	//
	// Types that are assignable to Value:
	//
	//	*SimpleAttributeFilter_Equals
	//	*SimpleAttributeFilter_StartsWith
	//	*SimpleAttributeFilter_EndsWith
	//	*SimpleAttributeFilter_Contains
	//	*SimpleAttributeFilter_In
	//	*SimpleAttributeFilter_Any
	Value isSimpleAttributeFilter_Value `protobuf_oneof:"value"`
}

func (x *SimpleAttributeFilter) Reset() {
	*x = SimpleAttributeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleAttributeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleAttributeFilter) ProtoMessage() {}

func (x *SimpleAttributeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleAttributeFilter.ProtoReflect.Descriptor instead.
func (*SimpleAttributeFilter) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_types_v202303_types_proto_rawDescGZIP(), []int{2}
}

func (m *SimpleAttributeFilter) GetValue() isSimpleAttributeFilter_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *SimpleAttributeFilter) GetEquals() string {
	if x, ok := x.GetValue().(*SimpleAttributeFilter_Equals); ok {
		return x.Equals
	}
	return ""
}

func (x *SimpleAttributeFilter) GetStartsWith() string {
	if x, ok := x.GetValue().(*SimpleAttributeFilter_StartsWith); ok {
		return x.StartsWith
	}
	return ""
}

func (x *SimpleAttributeFilter) GetEndsWith() string {
	if x, ok := x.GetValue().(*SimpleAttributeFilter_EndsWith); ok {
		return x.EndsWith
	}
	return ""
}

func (x *SimpleAttributeFilter) GetContains() string {
	if x, ok := x.GetValue().(*SimpleAttributeFilter_Contains); ok {
		return x.Contains
	}
	return ""
}

func (x *SimpleAttributeFilter) GetIn() *SimpleAttributeFilter_StringArray {
	if x, ok := x.GetValue().(*SimpleAttributeFilter_In); ok {
		return x.In
	}
	return nil
}

func (x *SimpleAttributeFilter) GetAny() bool {
	if x, ok := x.GetValue().(*SimpleAttributeFilter_Any); ok {
		return x.Any
	}
	return false
}

type isSimpleAttributeFilter_Value interface {
	isSimpleAttributeFilter_Value()
}

type SimpleAttributeFilter_Equals struct {
	Equals string `protobuf:"bytes,3,opt,name=equals,proto3,oneof"`
}

type SimpleAttributeFilter_StartsWith struct {
	StartsWith string `protobuf:"bytes,4,opt,name=starts_with,json=startsWith,proto3,oneof"`
}

type SimpleAttributeFilter_EndsWith struct {
	EndsWith string `protobuf:"bytes,5,opt,name=ends_with,json=endsWith,proto3,oneof"`
}

type SimpleAttributeFilter_Contains struct {
	Contains string `protobuf:"bytes,6,opt,name=contains,proto3,oneof"`
}

type SimpleAttributeFilter_In struct {
	In *SimpleAttributeFilter_StringArray `protobuf:"bytes,7,opt,name=in,proto3,oneof"`
}

type SimpleAttributeFilter_Any struct {
	// The equivalent of: value="*.  To use any this value MUST be set to true.
	Any bool `protobuf:"varint,8,opt,name=any,proto3,oneof"`
}

func (*SimpleAttributeFilter_Equals) isSimpleAttributeFilter_Value() {}

func (*SimpleAttributeFilter_StartsWith) isSimpleAttributeFilter_Value() {}

func (*SimpleAttributeFilter_EndsWith) isSimpleAttributeFilter_Value() {}

func (*SimpleAttributeFilter_Contains) isSimpleAttributeFilter_Value() {}

func (*SimpleAttributeFilter_In) isSimpleAttributeFilter_Value() {}

func (*SimpleAttributeFilter_Any) isSimpleAttributeFilter_Value() {}

type KeyValueFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key filtering definition is limited to the SimpleAttribute filter because the "not" and "empty"
	// filter options for Attribute filter do not make logical sense for keys.
	Key   *SimpleAttributeFilter `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *AttributeFilter       `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *KeyValueFilter) Reset() {
	*x = KeyValueFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValueFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValueFilter) ProtoMessage() {}

func (x *KeyValueFilter) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValueFilter.ProtoReflect.Descriptor instead.
func (*KeyValueFilter) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_types_v202303_types_proto_rawDescGZIP(), []int{3}
}

func (x *KeyValueFilter) GetKey() *SimpleAttributeFilter {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *KeyValueFilter) GetValue() *AttributeFilter {
	if x != nil {
		return x.Value
	}
	return nil
}

type PaginationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// limit is how many alarms to return at most
	Limit uint64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// offset is the offset into the list of alarms
	Offset            uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	IncludeTotalCount bool   `protobuf:"varint,3,opt,name=include_total_count,json=includeTotalCount,proto3" json:"include_total_count,omitempty"`
}

func (x *PaginationConfig) Reset() {
	*x = PaginationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationConfig) ProtoMessage() {}

func (x *PaginationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationConfig.ProtoReflect.Descriptor instead.
func (*PaginationConfig) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_types_v202303_types_proto_rawDescGZIP(), []int{4}
}

func (x *PaginationConfig) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PaginationConfig) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PaginationConfig) GetIncludeTotalCount() bool {
	if x != nil {
		return x.IncludeTotalCount
	}
	return false
}

type PaginationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount     uint64 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	HasMoreResults bool   `protobuf:"varint,2,opt,name=has_more_results,json=hasMoreResults,proto3" json:"has_more_results,omitempty"`
}

func (x *PaginationInfo) Reset() {
	*x = PaginationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationInfo) ProtoMessage() {}

func (x *PaginationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationInfo.ProtoReflect.Descriptor instead.
func (*PaginationInfo) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_types_v202303_types_proto_rawDescGZIP(), []int{5}
}

func (x *PaginationInfo) GetTotalCount() uint64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *PaginationInfo) GetHasMoreResults() bool {
	if x != nil {
		return x.HasMoreResults
	}
	return false
}

type SortingConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []*SortingField `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *SortingConfig) Reset() {
	*x = SortingConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortingConfig) ProtoMessage() {}

func (x *SortingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortingConfig.ProtoReflect.Descriptor instead.
func (*SortingConfig) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_types_v202303_types_proto_rawDescGZIP(), []int{6}
}

func (x *SortingConfig) GetFields() []*SortingField {
	if x != nil {
		return x.Fields
	}
	return nil
}

type SortingField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Order  SortOrder `protobuf:"varint,2,opt,name=order,proto3,enum=kentik.alerting.types.v202303.SortOrder" json:"order,omitempty"`
	Values []string  `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *SortingField) Reset() {
	*x = SortingField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortingField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortingField) ProtoMessage() {}

func (x *SortingField) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortingField.ProtoReflect.Descriptor instead.
func (*SortingField) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_types_v202303_types_proto_rawDescGZIP(), []int{7}
}

func (x *SortingField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SortingField) GetOrder() SortOrder {
	if x != nil {
		return x.Order
	}
	return SortOrder_SORT_ORDER_UNSPECIFIED
}

func (x *SortingField) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type TimeRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *TimeRange) Reset() {
	*x = TimeRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRange) ProtoMessage() {}

func (x *TimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRange.ProtoReflect.Descriptor instead.
func (*TimeRange) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_types_v202303_types_proto_rawDescGZIP(), []int{8}
}

func (x *TimeRange) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *TimeRange) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

type KeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value map[string]string `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *KeyValue) Reset() {
	*x = KeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValue) ProtoMessage() {}

func (x *KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValue.ProtoReflect.Descriptor instead.
func (*KeyValue) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_types_v202303_types_proto_rawDescGZIP(), []int{9}
}

func (x *KeyValue) GetValue() map[string]string {
	if x != nil {
		return x.Value
	}
	return nil
}

type AttributeFilter_StringArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *AttributeFilter_StringArray) Reset() {
	*x = AttributeFilter_StringArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributeFilter_StringArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeFilter_StringArray) ProtoMessage() {}

func (x *AttributeFilter_StringArray) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeFilter_StringArray.ProtoReflect.Descriptor instead.
func (*AttributeFilter_StringArray) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_types_v202303_types_proto_rawDescGZIP(), []int{1, 0}
}

func (x *AttributeFilter_StringArray) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type SimpleAttributeFilter_StringArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *SimpleAttributeFilter_StringArray) Reset() {
	*x = SimpleAttributeFilter_StringArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleAttributeFilter_StringArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleAttributeFilter_StringArray) ProtoMessage() {}

func (x *SimpleAttributeFilter_StringArray) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_types_v202303_types_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleAttributeFilter_StringArray.ProtoReflect.Descriptor instead.
func (*SimpleAttributeFilter_StringArray) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_types_v202303_types_proto_rawDescGZIP(), []int{2, 0}
}

func (x *SimpleAttributeFilter_StringArray) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_kentik_alerting_types_v202303_types_proto protoreflect.FileDescriptor

var file_kentik_alerting_types_v202303_types_proto_rawDesc = []byte{
	0x0a, 0x29, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x33, 0x30, 0x33, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x6b, 0x65, 0x6e,
	0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x33, 0x30, 0x33, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa7, 0x02, 0x0a, 0x14,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x5b, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x30,
	0x32, 0x33, 0x30, 0x33, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x47, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x33,
	0x30, 0x33, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x69, 0x0a, 0x0b, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x44, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x65, 0x6e,
	0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x33, 0x30, 0x33, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc7, 0x02, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x6f, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6e, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x06, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x73, 0x12, 0x21, 0x0a,
	0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68,
	0x12, 0x1d, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x73, 0x57, 0x69, 0x74, 0x68, 0x12,
	0x1c, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x4c, 0x0a,
	0x02, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6b, 0x65, 0x6e, 0x74,
	0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x33, 0x30, 0x33, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x48, 0x00, 0x52, 0x02, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x03, 0x61,
	0x6e, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x03, 0x61, 0x6e, 0x79, 0x1a,
	0x25, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0xa9, 0x02, 0x0a, 0x15, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x06, 0x65, 0x71, 0x75,
	0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x65, 0x71, 0x75,
	0x61, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x77, 0x69,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x77,
	0x69, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x65, 0x6e, 0x64,
	0x73, 0x57, 0x69, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x73, 0x12, 0x52, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x40, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x33, 0x30, 0x33, 0x2e,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x48, 0x00, 0x52, 0x02, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x03, 0x61, 0x6e, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x03, 0x61, 0x6e, 0x79, 0x1a, 0x25, 0x0a, 0x0b, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x0e,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x46,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6b, 0x65,
	0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x33, 0x30, 0x33, 0x2e, 0x53, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x44, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x32,
	0x30, 0x32, 0x33, 0x30, 0x33, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x70, 0x0a, 0x10,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2e,
	0x0a, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5b,
	0x0a, 0x0e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x73,
	0x4d, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x54, 0x0a, 0x0d, 0x53,
	0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x43, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6b,
	0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x33, 0x30, 0x33, 0x2e, 0x53, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x22, 0x7a, 0x0a, 0x0c, 0x53, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x30,
	0x32, 0x33, 0x30, 0x33, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x6b, 0x0a,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03,
	0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x08, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x32, 0x30, 0x32, 0x33, 0x30, 0x33, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x1a, 0x38, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0xa2, 0x01, 0x0a, 0x08,
	0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x45, 0x56, 0x45,
	0x52, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x43,
	0x4c, 0x45, 0x41, 0x52, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49,
	0x54, 0x59, 0x5f, 0x4d, 0x49, 0x4e, 0x4f, 0x52, 0x10, 0x0a, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x45,
	0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x14,
	0x12, 0x12, 0x0a, 0x0e, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4d, 0x41, 0x4a,
	0x4f, 0x52, 0x10, 0x28, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59,
	0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x45, 0x10, 0x46, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x56,
	0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x10, 0x5a,
	0x2a, 0x5c, 0x0a, 0x09, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x16, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x4f, 0x52,
	0x54, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e,
	0x47, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x4f, 0x52, 0x44, 0x45,
	0x52, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x42, 0x4a,
	0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x65, 0x6e,
	0x74, 0x69, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2d, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x6b, 0x65, 0x6e,
	0x74, 0x69, 0x6b, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x33, 0x30, 0x33, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_kentik_alerting_types_v202303_types_proto_rawDescOnce sync.Once
	file_kentik_alerting_types_v202303_types_proto_rawDescData = file_kentik_alerting_types_v202303_types_proto_rawDesc
)

func file_kentik_alerting_types_v202303_types_proto_rawDescGZIP() []byte {
	file_kentik_alerting_types_v202303_types_proto_rawDescOnce.Do(func() {
		file_kentik_alerting_types_v202303_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_kentik_alerting_types_v202303_types_proto_rawDescData)
	})
	return file_kentik_alerting_types_v202303_types_proto_rawDescData
}

var file_kentik_alerting_types_v202303_types_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_kentik_alerting_types_v202303_types_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_kentik_alerting_types_v202303_types_proto_goTypes = []interface{}{
	(Severity)(0),                             // 0: kentik.alerting.types.v202303.Severity
	(SortOrder)(0),                            // 1: kentik.alerting.types.v202303.SortOrder
	(*MultiAttributeFilter)(nil),              // 2: kentik.alerting.types.v202303.MultiAttributeFilter
	(*AttributeFilter)(nil),                   // 3: kentik.alerting.types.v202303.AttributeFilter
	(*SimpleAttributeFilter)(nil),             // 4: kentik.alerting.types.v202303.SimpleAttributeFilter
	(*KeyValueFilter)(nil),                    // 5: kentik.alerting.types.v202303.KeyValueFilter
	(*PaginationConfig)(nil),                  // 6: kentik.alerting.types.v202303.PaginationConfig
	(*PaginationInfo)(nil),                    // 7: kentik.alerting.types.v202303.PaginationInfo
	(*SortingConfig)(nil),                     // 8: kentik.alerting.types.v202303.SortingConfig
	(*SortingField)(nil),                      // 9: kentik.alerting.types.v202303.SortingField
	(*TimeRange)(nil),                         // 10: kentik.alerting.types.v202303.TimeRange
	(*KeyValue)(nil),                          // 11: kentik.alerting.types.v202303.KeyValue
	nil,                                       // 12: kentik.alerting.types.v202303.MultiAttributeFilter.FilterEntry
	(*AttributeFilter_StringArray)(nil),       // 13: kentik.alerting.types.v202303.AttributeFilter.StringArray
	(*SimpleAttributeFilter_StringArray)(nil), // 14: kentik.alerting.types.v202303.SimpleAttributeFilter.StringArray
	nil,                           // 15: kentik.alerting.types.v202303.KeyValue.ValueEntry
	(*timestamppb.Timestamp)(nil), // 16: google.protobuf.Timestamp
}
var file_kentik_alerting_types_v202303_types_proto_depIdxs = []int32{
	12, // 0: kentik.alerting.types.v202303.MultiAttributeFilter.filter:type_name -> kentik.alerting.types.v202303.MultiAttributeFilter.FilterEntry
	5,  // 1: kentik.alerting.types.v202303.MultiAttributeFilter.filters:type_name -> kentik.alerting.types.v202303.KeyValueFilter
	13, // 2: kentik.alerting.types.v202303.AttributeFilter.in:type_name -> kentik.alerting.types.v202303.AttributeFilter.StringArray
	14, // 3: kentik.alerting.types.v202303.SimpleAttributeFilter.in:type_name -> kentik.alerting.types.v202303.SimpleAttributeFilter.StringArray
	4,  // 4: kentik.alerting.types.v202303.KeyValueFilter.key:type_name -> kentik.alerting.types.v202303.SimpleAttributeFilter
	3,  // 5: kentik.alerting.types.v202303.KeyValueFilter.value:type_name -> kentik.alerting.types.v202303.AttributeFilter
	9,  // 6: kentik.alerting.types.v202303.SortingConfig.fields:type_name -> kentik.alerting.types.v202303.SortingField
	1,  // 7: kentik.alerting.types.v202303.SortingField.order:type_name -> kentik.alerting.types.v202303.SortOrder
	16, // 8: kentik.alerting.types.v202303.TimeRange.start:type_name -> google.protobuf.Timestamp
	16, // 9: kentik.alerting.types.v202303.TimeRange.end:type_name -> google.protobuf.Timestamp
	15, // 10: kentik.alerting.types.v202303.KeyValue.value:type_name -> kentik.alerting.types.v202303.KeyValue.ValueEntry
	3,  // 11: kentik.alerting.types.v202303.MultiAttributeFilter.FilterEntry.value:type_name -> kentik.alerting.types.v202303.AttributeFilter
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_kentik_alerting_types_v202303_types_proto_init() }
func file_kentik_alerting_types_v202303_types_proto_init() {
	if File_kentik_alerting_types_v202303_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kentik_alerting_types_v202303_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiAttributeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_alerting_types_v202303_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_alerting_types_v202303_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleAttributeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_alerting_types_v202303_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValueFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_alerting_types_v202303_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_alerting_types_v202303_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_alerting_types_v202303_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortingConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_alerting_types_v202303_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortingField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_alerting_types_v202303_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_alerting_types_v202303_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_alerting_types_v202303_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributeFilter_StringArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_alerting_types_v202303_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleAttributeFilter_StringArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kentik_alerting_types_v202303_types_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*AttributeFilter_Empty)(nil),
		(*AttributeFilter_Equals)(nil),
		(*AttributeFilter_StartsWith)(nil),
		(*AttributeFilter_EndsWith)(nil),
		(*AttributeFilter_Contains)(nil),
		(*AttributeFilter_In)(nil),
		(*AttributeFilter_Any)(nil),
	}
	file_kentik_alerting_types_v202303_types_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*SimpleAttributeFilter_Equals)(nil),
		(*SimpleAttributeFilter_StartsWith)(nil),
		(*SimpleAttributeFilter_EndsWith)(nil),
		(*SimpleAttributeFilter_Contains)(nil),
		(*SimpleAttributeFilter_In)(nil),
		(*SimpleAttributeFilter_Any)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kentik_alerting_types_v202303_types_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kentik_alerting_types_v202303_types_proto_goTypes,
		DependencyIndexes: file_kentik_alerting_types_v202303_types_proto_depIdxs,
		EnumInfos:         file_kentik_alerting_types_v202303_types_proto_enumTypes,
		MessageInfos:      file_kentik_alerting_types_v202303_types_proto_msgTypes,
	}.Build()
	File_kentik_alerting_types_v202303_types_proto = out.File
	file_kentik_alerting_types_v202303_types_proto_rawDesc = nil
	file_kentik_alerting_types_v202303_types_proto_goTypes = nil
	file_kentik_alerting_types_v202303_types_proto_depIdxs = nil
}
