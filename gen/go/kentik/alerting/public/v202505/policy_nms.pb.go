// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        (unknown)
// source: kentik/alerting/public/v202505/policy_nms.proto

package v202505

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/kentik/api-schema-public/gen/go/kentik/alerting/types/v202303"
	_ "github.com/kentik/api-schema-public/gen/go/kentik/alerting/types/v202506"
	_ "github.com/kentik/api-schema-public/gen/go/kentik/core/v202303"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/structpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type NmsPolicyLevelSettings_ClearType int32

const (
	NmsPolicyLevelSettings_CLEAR_TYPE_UNSPECIFIED NmsPolicyLevelSettings_ClearType = 0 // assumed CLEAR_TYPE_CLEAR_UNLESS_ACTIVATED if not specified
	// CLEAR_TYPE_CONDITIONAL = 1; we don't want to expose this yet, not implemented
	NmsPolicyLevelSettings_CLEAR_TYPE_CLEAR_MANUAL           NmsPolicyLevelSettings_ClearType = 2
	NmsPolicyLevelSettings_CLEAR_TYPE_CLEAR_UNLESS_ACTIVATED NmsPolicyLevelSettings_ClearType = 3
)

// Enum value maps for NmsPolicyLevelSettings_ClearType.
var (
	NmsPolicyLevelSettings_ClearType_name = map[int32]string{
		0: "CLEAR_TYPE_UNSPECIFIED",
		2: "CLEAR_TYPE_CLEAR_MANUAL",
		3: "CLEAR_TYPE_CLEAR_UNLESS_ACTIVATED",
	}
	NmsPolicyLevelSettings_ClearType_value = map[string]int32{
		"CLEAR_TYPE_UNSPECIFIED":            0,
		"CLEAR_TYPE_CLEAR_MANUAL":           2,
		"CLEAR_TYPE_CLEAR_UNLESS_ACTIVATED": 3,
	}
)

func (x NmsPolicyLevelSettings_ClearType) Enum() *NmsPolicyLevelSettings_ClearType {
	p := new(NmsPolicyLevelSettings_ClearType)
	*p = x
	return p
}

func (x NmsPolicyLevelSettings_ClearType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NmsPolicyLevelSettings_ClearType) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_alerting_public_v202505_policy_nms_proto_enumTypes[0].Descriptor()
}

func (NmsPolicyLevelSettings_ClearType) Type() protoreflect.EnumType {
	return &file_kentik_alerting_public_v202505_policy_nms_proto_enumTypes[0]
}

func (x NmsPolicyLevelSettings_ClearType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NmsPolicyLevelSettings_ClearType.Descriptor instead.
func (NmsPolicyLevelSettings_ClearType) EnumDescriptor() ([]byte, []int) {
	return file_kentik_alerting_public_v202505_policy_nms_proto_rawDescGZIP(), []int{1, 0}
}

type NmsPolicySettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// stay consistent with flow
	Dataset    *NmsPolicySettings_DatasetConfig    `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Evaluation *NmsPolicySettings_EvaluationConfig `protobuf:"bytes,2,opt,name=evaluation,proto3" json:"evaluation,omitempty"`
}

func (x *NmsPolicySettings) Reset() {
	*x = NmsPolicySettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_public_v202505_policy_nms_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NmsPolicySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NmsPolicySettings) ProtoMessage() {}

func (x *NmsPolicySettings) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_public_v202505_policy_nms_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NmsPolicySettings.ProtoReflect.Descriptor instead.
func (*NmsPolicySettings) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_public_v202505_policy_nms_proto_rawDescGZIP(), []int{0}
}

func (x *NmsPolicySettings) GetDataset() *NmsPolicySettings_DatasetConfig {
	if x != nil {
		return x.Dataset
	}
	return nil
}

func (x *NmsPolicySettings) GetEvaluation() *NmsPolicySettings_EvaluationConfig {
	if x != nil {
		return x.Evaluation
	}
	return nil
}

type NmsPolicyLevelSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activate    *NmsActivateOrClearConditions    `protobuf:"bytes,1,opt,name=activate,proto3" json:"activate,omitempty"`
	ClearType   NmsPolicyLevelSettings_ClearType `protobuf:"varint,2,opt,name=clear_type,json=clearType,proto3,enum=kentik.alerting.public.v202505.NmsPolicyLevelSettings_ClearType" json:"clear_type,omitempty"`
	Conditional *NmsActivateOrClearConditions    `protobuf:"bytes,3,opt,name=conditional,proto3" json:"conditional,omitempty"` // only used if clear_type == CONDITIONAL
}

func (x *NmsPolicyLevelSettings) Reset() {
	*x = NmsPolicyLevelSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_public_v202505_policy_nms_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NmsPolicyLevelSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NmsPolicyLevelSettings) ProtoMessage() {}

func (x *NmsPolicyLevelSettings) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_public_v202505_policy_nms_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NmsPolicyLevelSettings.ProtoReflect.Descriptor instead.
func (*NmsPolicyLevelSettings) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_public_v202505_policy_nms_proto_rawDescGZIP(), []int{1}
}

func (x *NmsPolicyLevelSettings) GetActivate() *NmsActivateOrClearConditions {
	if x != nil {
		return x.Activate
	}
	return nil
}

func (x *NmsPolicyLevelSettings) GetClearType() NmsPolicyLevelSettings_ClearType {
	if x != nil {
		return x.ClearType
	}
	return NmsPolicyLevelSettings_CLEAR_TYPE_UNSPECIFIED
}

func (x *NmsPolicyLevelSettings) GetConditional() *NmsActivateOrClearConditions {
	if x != nil {
		return x.Conditional
	}
	return nil
}

type NmsPolicySettings_DatasetConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sources          *PolicyDataSources `protobuf:"bytes,1,opt,name=sources,proto3" json:"sources,omitempty"` // device_selector internally and different mapping too
	Filters          *PolicyFilters     `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	Measurements     []string           `protobuf:"bytes,3,rep,name=measurements,proto3" json:"measurements,omitempty"`
	CustomDimensions []string           `protobuf:"bytes,4,rep,name=custom_dimensions,json=customDimensions,proto3" json:"custom_dimensions,omitempty"` // this might be irrelevant based on policy type - only applicable if custom type
}

func (x *NmsPolicySettings_DatasetConfig) Reset() {
	*x = NmsPolicySettings_DatasetConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_public_v202505_policy_nms_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NmsPolicySettings_DatasetConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NmsPolicySettings_DatasetConfig) ProtoMessage() {}

func (x *NmsPolicySettings_DatasetConfig) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_public_v202505_policy_nms_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NmsPolicySettings_DatasetConfig.ProtoReflect.Descriptor instead.
func (*NmsPolicySettings_DatasetConfig) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_public_v202505_policy_nms_proto_rawDescGZIP(), []int{0, 0}
}

func (x *NmsPolicySettings_DatasetConfig) GetSources() *PolicyDataSources {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *NmsPolicySettings_DatasetConfig) GetFilters() *PolicyFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *NmsPolicySettings_DatasetConfig) GetMeasurements() []string {
	if x != nil {
		return x.Measurements
	}
	return nil
}

func (x *NmsPolicySettings_DatasetConfig) GetCustomDimensions() []string {
	if x != nil {
		return x.CustomDimensions
	}
	return nil
}

type NmsPolicySettings_EvaluationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivationDelay *durationpb.Duration `protobuf:"bytes,1,opt,name=activation_delay,json=activationDelay,proto3" json:"activation_delay,omitempty"`
	ClearanceDelay  *durationpb.Duration `protobuf:"bytes,2,opt,name=clearance_delay,json=clearanceDelay,proto3" json:"clearance_delay,omitempty"`
}

func (x *NmsPolicySettings_EvaluationConfig) Reset() {
	*x = NmsPolicySettings_EvaluationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_public_v202505_policy_nms_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NmsPolicySettings_EvaluationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NmsPolicySettings_EvaluationConfig) ProtoMessage() {}

func (x *NmsPolicySettings_EvaluationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_public_v202505_policy_nms_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NmsPolicySettings_EvaluationConfig.ProtoReflect.Descriptor instead.
func (*NmsPolicySettings_EvaluationConfig) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_public_v202505_policy_nms_proto_rawDescGZIP(), []int{0, 1}
}

func (x *NmsPolicySettings_EvaluationConfig) GetActivationDelay() *durationpb.Duration {
	if x != nil {
		return x.ActivationDelay
	}
	return nil
}

func (x *NmsPolicySettings_EvaluationConfig) GetClearanceDelay() *durationpb.Duration {
	if x != nil {
		return x.ClearanceDelay
	}
	return nil
}

var File_kentik_alerting_public_v202505_policy_nms_proto protoreflect.FileDescriptor

var file_kentik_alerting_public_v202505_policy_nms_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35,
	0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x6e, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30,
	0x35, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x33, 0x30, 0x33, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x29, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x33, 0x30, 0x33, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6b, 0x65, 0x6e, 0x74,
	0x69, 0x6b, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x36, 0x2f, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f,
	0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x76, 0x32, 0x30,
	0x32, 0x35, 0x30, 0x35, 0x2f, 0x6e, 0x6d, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x76, 0x32,
	0x30, 0x32, 0x35, 0x30, 0x35, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x6b, 0x65, 0x6e, 0x74,
	0x69, 0x6b, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xea, 0x04, 0x0a, 0x11, 0x4e, 0x6d, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x59, 0x0a, 0x07, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x6b, 0x65, 0x6e,
	0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35, 0x2e, 0x4e, 0x6d, 0x73, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x12, 0x62, 0x0a, 0x0a, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69,
	0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35, 0x2e, 0x4e, 0x6d, 0x73, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x45, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x65, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xf6, 0x01, 0x0a, 0x0d, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4b, 0x0a, 0x07, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6b, 0x65,
	0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35, 0x2e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x07,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69,
	0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0x9c, 0x01, 0x0a, 0x10, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x44, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x42, 0x0a, 0x0f,
	0x63, 0x6c, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0e, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x61, 0x79,
	0x22, 0xa0, 0x03, 0x0a, 0x16, 0x4e, 0x6d, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x58, 0x0a, 0x08, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e,
	0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35, 0x2e, 0x4e,
	0x6d, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x08, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x5f, 0x0a, 0x0a, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x6b, 0x65, 0x6e, 0x74,
	0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35, 0x2e, 0x4e, 0x6d, 0x73, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x63, 0x6c, 0x65,
	0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5e, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x6b, 0x65,
	0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35, 0x2e, 0x4e, 0x6d, 0x73,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x22, 0x6b, 0x0a, 0x09, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x1b, 0x0a, 0x17, 0x43, 0x4c, 0x45, 0x41, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4c,
	0x45, 0x41, 0x52, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x25, 0x0a, 0x21,
	0x43, 0x4c, 0x45, 0x41, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4c, 0x45, 0x41, 0x52,
	0x5f, 0x55, 0x4e, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x45,
	0x44, 0x10, 0x03, 0x42, 0x4b, 0x5a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67,
	0x6f, 0x2f, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kentik_alerting_public_v202505_policy_nms_proto_rawDescOnce sync.Once
	file_kentik_alerting_public_v202505_policy_nms_proto_rawDescData = file_kentik_alerting_public_v202505_policy_nms_proto_rawDesc
)

func file_kentik_alerting_public_v202505_policy_nms_proto_rawDescGZIP() []byte {
	file_kentik_alerting_public_v202505_policy_nms_proto_rawDescOnce.Do(func() {
		file_kentik_alerting_public_v202505_policy_nms_proto_rawDescData = protoimpl.X.CompressGZIP(file_kentik_alerting_public_v202505_policy_nms_proto_rawDescData)
	})
	return file_kentik_alerting_public_v202505_policy_nms_proto_rawDescData
}

var file_kentik_alerting_public_v202505_policy_nms_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_kentik_alerting_public_v202505_policy_nms_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_kentik_alerting_public_v202505_policy_nms_proto_goTypes = []interface{}{
	(NmsPolicyLevelSettings_ClearType)(0),      // 0: kentik.alerting.public.v202505.NmsPolicyLevelSettings.ClearType
	(*NmsPolicySettings)(nil),                  // 1: kentik.alerting.public.v202505.NmsPolicySettings
	(*NmsPolicyLevelSettings)(nil),             // 2: kentik.alerting.public.v202505.NmsPolicyLevelSettings
	(*NmsPolicySettings_DatasetConfig)(nil),    // 3: kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig
	(*NmsPolicySettings_EvaluationConfig)(nil), // 4: kentik.alerting.public.v202505.NmsPolicySettings.EvaluationConfig
	(*NmsActivateOrClearConditions)(nil),       // 5: kentik.alerting.public.v202505.NmsActivateOrClearConditions
	(*PolicyDataSources)(nil),                  // 6: kentik.alerting.public.v202505.PolicyDataSources
	(*PolicyFilters)(nil),                      // 7: kentik.alerting.public.v202505.PolicyFilters
	(*durationpb.Duration)(nil),                // 8: google.protobuf.Duration
}
var file_kentik_alerting_public_v202505_policy_nms_proto_depIdxs = []int32{
	3, // 0: kentik.alerting.public.v202505.NmsPolicySettings.dataset:type_name -> kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig
	4, // 1: kentik.alerting.public.v202505.NmsPolicySettings.evaluation:type_name -> kentik.alerting.public.v202505.NmsPolicySettings.EvaluationConfig
	5, // 2: kentik.alerting.public.v202505.NmsPolicyLevelSettings.activate:type_name -> kentik.alerting.public.v202505.NmsActivateOrClearConditions
	0, // 3: kentik.alerting.public.v202505.NmsPolicyLevelSettings.clear_type:type_name -> kentik.alerting.public.v202505.NmsPolicyLevelSettings.ClearType
	5, // 4: kentik.alerting.public.v202505.NmsPolicyLevelSettings.conditional:type_name -> kentik.alerting.public.v202505.NmsActivateOrClearConditions
	6, // 5: kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.sources:type_name -> kentik.alerting.public.v202505.PolicyDataSources
	7, // 6: kentik.alerting.public.v202505.NmsPolicySettings.DatasetConfig.filters:type_name -> kentik.alerting.public.v202505.PolicyFilters
	8, // 7: kentik.alerting.public.v202505.NmsPolicySettings.EvaluationConfig.activation_delay:type_name -> google.protobuf.Duration
	8, // 8: kentik.alerting.public.v202505.NmsPolicySettings.EvaluationConfig.clearance_delay:type_name -> google.protobuf.Duration
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_kentik_alerting_public_v202505_policy_nms_proto_init() }
func file_kentik_alerting_public_v202505_policy_nms_proto_init() {
	if File_kentik_alerting_public_v202505_policy_nms_proto != nil {
		return
	}
	file_kentik_alerting_public_v202505_common_proto_init()
	file_kentik_alerting_public_v202505_nms_common_proto_init()
	file_kentik_alerting_public_v202505_policy_filters_proto_init()
	file_kentik_alerting_public_v202505_policy_datasources_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kentik_alerting_public_v202505_policy_nms_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NmsPolicySettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_alerting_public_v202505_policy_nms_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NmsPolicyLevelSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_alerting_public_v202505_policy_nms_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NmsPolicySettings_DatasetConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_alerting_public_v202505_policy_nms_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NmsPolicySettings_EvaluationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kentik_alerting_public_v202505_policy_nms_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kentik_alerting_public_v202505_policy_nms_proto_goTypes,
		DependencyIndexes: file_kentik_alerting_public_v202505_policy_nms_proto_depIdxs,
		EnumInfos:         file_kentik_alerting_public_v202505_policy_nms_proto_enumTypes,
		MessageInfos:      file_kentik_alerting_public_v202505_policy_nms_proto_msgTypes,
	}.Build()
	File_kentik_alerting_public_v202505_policy_nms_proto = out.File
	file_kentik_alerting_public_v202505_policy_nms_proto_rawDesc = nil
	file_kentik_alerting_public_v202505_policy_nms_proto_goTypes = nil
	file_kentik_alerting_public_v202505_policy_nms_proto_depIdxs = nil
}
