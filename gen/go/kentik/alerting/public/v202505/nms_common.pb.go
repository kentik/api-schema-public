// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        (unknown)
// source: kentik/alerting/public/v202505/nms_common.proto

package v202505

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/kentik/api-schema-public/gen/go/kentik/core/v202303"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type NmsConditionConnector int32

const (
	NmsConditionConnector_NMS_CONDITION_CONNECTOR_UNSPECIFIED NmsConditionConnector = 0
	// Any of the conditions must be true
	NmsConditionConnector_NMS_CONDITION_CONNECTOR_ANY NmsConditionConnector = 1
	// All of the conditions must be true
	NmsConditionConnector_NMS_CONDITION_CONNECTOR_ALL NmsConditionConnector = 2
)

// Enum value maps for NmsConditionConnector.
var (
	NmsConditionConnector_name = map[int32]string{
		0: "NMS_CONDITION_CONNECTOR_UNSPECIFIED",
		1: "NMS_CONDITION_CONNECTOR_ANY",
		2: "NMS_CONDITION_CONNECTOR_ALL",
	}
	NmsConditionConnector_value = map[string]int32{
		"NMS_CONDITION_CONNECTOR_UNSPECIFIED": 0,
		"NMS_CONDITION_CONNECTOR_ANY":         1,
		"NMS_CONDITION_CONNECTOR_ALL":         2,
	}
)

func (x NmsConditionConnector) Enum() *NmsConditionConnector {
	p := new(NmsConditionConnector)
	*p = x
	return p
}

func (x NmsConditionConnector) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NmsConditionConnector) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_alerting_public_v202505_nms_common_proto_enumTypes[0].Descriptor()
}

func (NmsConditionConnector) Type() protoreflect.EnumType {
	return &file_kentik_alerting_public_v202505_nms_common_proto_enumTypes[0]
}

func (x NmsConditionConnector) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NmsConditionConnector.Descriptor instead.
func (NmsConditionConnector) EnumDescriptor() ([]byte, []int) {
	return file_kentik_alerting_public_v202505_nms_common_proto_rawDescGZIP(), []int{0}
}

type NmsConditionOperator int32

const (
	NmsConditionOperator_NMS_CONDITION_OPERATOR_UNSPECIFIED NmsConditionOperator = 0
	// Equals
	NmsConditionOperator_NMS_CONDITION_OPERATOR_EQUALS NmsConditionOperator = 1
	// Less than
	NmsConditionOperator_NMS_CONDITION_OPERATOR_LESS_THAN NmsConditionOperator = 2
	// Greater than
	NmsConditionOperator_NMS_CONDITION_OPERATOR_GREATER_THAN NmsConditionOperator = 3
	// Less than or equals
	NmsConditionOperator_NMS_CONDITION_OPERATOR_LESS_THAN_OR_EQUALS NmsConditionOperator = 4
	// Greater than or equals
	NmsConditionOperator_NMS_CONDITION_OPERATOR_GREATER_THAN_OR_EQUALS NmsConditionOperator = 5
)

// Enum value maps for NmsConditionOperator.
var (
	NmsConditionOperator_name = map[int32]string{
		0: "NMS_CONDITION_OPERATOR_UNSPECIFIED",
		1: "NMS_CONDITION_OPERATOR_EQUALS",
		2: "NMS_CONDITION_OPERATOR_LESS_THAN",
		3: "NMS_CONDITION_OPERATOR_GREATER_THAN",
		4: "NMS_CONDITION_OPERATOR_LESS_THAN_OR_EQUALS",
		5: "NMS_CONDITION_OPERATOR_GREATER_THAN_OR_EQUALS",
	}
	NmsConditionOperator_value = map[string]int32{
		"NMS_CONDITION_OPERATOR_UNSPECIFIED":            0,
		"NMS_CONDITION_OPERATOR_EQUALS":                 1,
		"NMS_CONDITION_OPERATOR_LESS_THAN":              2,
		"NMS_CONDITION_OPERATOR_GREATER_THAN":           3,
		"NMS_CONDITION_OPERATOR_LESS_THAN_OR_EQUALS":    4,
		"NMS_CONDITION_OPERATOR_GREATER_THAN_OR_EQUALS": 5,
	}
)

func (x NmsConditionOperator) Enum() *NmsConditionOperator {
	p := new(NmsConditionOperator)
	*p = x
	return p
}

func (x NmsConditionOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NmsConditionOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_alerting_public_v202505_nms_common_proto_enumTypes[1].Descriptor()
}

func (NmsConditionOperator) Type() protoreflect.EnumType {
	return &file_kentik_alerting_public_v202505_nms_common_proto_enumTypes[1]
}

func (x NmsConditionOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NmsConditionOperator.Descriptor instead.
func (NmsConditionOperator) EnumDescriptor() ([]byte, []int) {
	return file_kentik_alerting_public_v202505_nms_common_proto_rawDescGZIP(), []int{1}
}

type NmsStateSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Not    bool     `protobuf:"varint,1,opt,name=not,proto3" json:"not,omitempty"`
	States []string `protobuf:"bytes,2,rep,name=states,proto3" json:"states,omitempty"`
}

func (x *NmsStateSet) Reset() {
	*x = NmsStateSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_public_v202505_nms_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NmsStateSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NmsStateSet) ProtoMessage() {}

func (x *NmsStateSet) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_public_v202505_nms_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NmsStateSet.ProtoReflect.Descriptor instead.
func (*NmsStateSet) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_public_v202505_nms_common_proto_rawDescGZIP(), []int{0}
}

func (x *NmsStateSet) GetNot() bool {
	if x != nil {
		return x.Not
	}
	return false
}

func (x *NmsStateSet) GetStates() []string {
	if x != nil {
		return x.States
	}
	return nil
}

type NmsCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Measurement string `protobuf:"bytes,1,opt,name=measurement,proto3" json:"measurement,omitempty"`
	Metric      string `protobuf:"bytes,2,opt,name=metric,proto3" json:"metric,omitempty"`
	// Types that are assignable to Settings:
	//
	//	*NmsCondition_Threshold
	//	*NmsCondition_StateChange
	//	*NmsCondition_StateInCondition
	Settings isNmsCondition_Settings `protobuf_oneof:"settings"`
}

func (x *NmsCondition) Reset() {
	*x = NmsCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_public_v202505_nms_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NmsCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NmsCondition) ProtoMessage() {}

func (x *NmsCondition) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_public_v202505_nms_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NmsCondition.ProtoReflect.Descriptor instead.
func (*NmsCondition) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_public_v202505_nms_common_proto_rawDescGZIP(), []int{1}
}

func (x *NmsCondition) GetMeasurement() string {
	if x != nil {
		return x.Measurement
	}
	return ""
}

func (x *NmsCondition) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (m *NmsCondition) GetSettings() isNmsCondition_Settings {
	if m != nil {
		return m.Settings
	}
	return nil
}

func (x *NmsCondition) GetThreshold() *NmsThresholdCondition {
	if x, ok := x.GetSettings().(*NmsCondition_Threshold); ok {
		return x.Threshold
	}
	return nil
}

func (x *NmsCondition) GetStateChange() *NmsStateChangeCondition {
	if x, ok := x.GetSettings().(*NmsCondition_StateChange); ok {
		return x.StateChange
	}
	return nil
}

func (x *NmsCondition) GetStateInCondition() *NmsStateSet {
	if x, ok := x.GetSettings().(*NmsCondition_StateInCondition); ok {
		return x.StateInCondition
	}
	return nil
}

type isNmsCondition_Settings interface {
	isNmsCondition_Settings()
}

type NmsCondition_Threshold struct {
	Threshold *NmsThresholdCondition `protobuf:"bytes,3,opt,name=threshold,proto3,oneof"`
}

type NmsCondition_StateChange struct {
	StateChange *NmsStateChangeCondition `protobuf:"bytes,4,opt,name=state_change,json=stateChange,proto3,oneof"`
}

type NmsCondition_StateInCondition struct {
	StateInCondition *NmsStateSet `protobuf:"bytes,5,opt,name=state_in_condition,json=stateInCondition,proto3,oneof"`
}

func (*NmsCondition_Threshold) isNmsCondition_Settings() {}

func (*NmsCondition_StateChange) isNmsCondition_Settings() {}

func (*NmsCondition_StateInCondition) isNmsCondition_Settings() {}

type NmsThresholdCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operator       NmsConditionOperator `protobuf:"varint,1,opt,name=operator,proto3,enum=kentik.alerting.public.v202505.NmsConditionOperator" json:"operator,omitempty"`
	ConditionValue string               `protobuf:"bytes,2,opt,name=condition_value,json=conditionValue,proto3" json:"condition_value,omitempty"`
}

func (x *NmsThresholdCondition) Reset() {
	*x = NmsThresholdCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_public_v202505_nms_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NmsThresholdCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NmsThresholdCondition) ProtoMessage() {}

func (x *NmsThresholdCondition) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_public_v202505_nms_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NmsThresholdCondition.ProtoReflect.Descriptor instead.
func (*NmsThresholdCondition) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_public_v202505_nms_common_proto_rawDescGZIP(), []int{2}
}

func (x *NmsThresholdCondition) GetOperator() NmsConditionOperator {
	if x != nil {
		return x.Operator
	}
	return NmsConditionOperator_NMS_CONDITION_OPERATOR_UNSPECIFIED
}

func (x *NmsThresholdCondition) GetConditionValue() string {
	if x != nil {
		return x.ConditionValue
	}
	return ""
}

type NmsStateChangeCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From *NmsStateSet `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To   *NmsStateSet `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *NmsStateChangeCondition) Reset() {
	*x = NmsStateChangeCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_public_v202505_nms_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NmsStateChangeCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NmsStateChangeCondition) ProtoMessage() {}

func (x *NmsStateChangeCondition) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_public_v202505_nms_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NmsStateChangeCondition.ProtoReflect.Descriptor instead.
func (*NmsStateChangeCondition) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_public_v202505_nms_common_proto_rawDescGZIP(), []int{3}
}

func (x *NmsStateChangeCondition) GetFrom() *NmsStateSet {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *NmsStateChangeCondition) GetTo() *NmsStateSet {
	if x != nil {
		return x.To
	}
	return nil
}

type NmsConditionGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connector       NmsConditionConnector `protobuf:"varint,1,opt,name=connector,proto3,enum=kentik.alerting.public.v202505.NmsConditionConnector" json:"connector,omitempty"`
	Not             bool                  `protobuf:"varint,2,opt,name=not,proto3" json:"not,omitempty"`
	Conditions      []*NmsCondition       `protobuf:"bytes,3,rep,name=conditions,proto3" json:"conditions,omitempty"`
	ConditionGroups []*NmsConditionGroup  `protobuf:"bytes,4,rep,name=condition_groups,json=conditionGroups,proto3" json:"condition_groups,omitempty"` // recursive
}

func (x *NmsConditionGroup) Reset() {
	*x = NmsConditionGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_public_v202505_nms_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NmsConditionGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NmsConditionGroup) ProtoMessage() {}

func (x *NmsConditionGroup) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_public_v202505_nms_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NmsConditionGroup.ProtoReflect.Descriptor instead.
func (*NmsConditionGroup) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_public_v202505_nms_common_proto_rawDescGZIP(), []int{4}
}

func (x *NmsConditionGroup) GetConnector() NmsConditionConnector {
	if x != nil {
		return x.Connector
	}
	return NmsConditionConnector_NMS_CONDITION_CONNECTOR_UNSPECIFIED
}

func (x *NmsConditionGroup) GetNot() bool {
	if x != nil {
		return x.Not
	}
	return false
}

func (x *NmsConditionGroup) GetConditions() []*NmsCondition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *NmsConditionGroup) GetConditionGroups() []*NmsConditionGroup {
	if x != nil {
		return x.ConditionGroups
	}
	return nil
}

type NmsActivateOrClearConditions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connector       NmsConditionConnector `protobuf:"varint,1,opt,name=connector,proto3,enum=kentik.alerting.public.v202505.NmsConditionConnector" json:"connector,omitempty"`
	ConditionGroups []*NmsConditionGroup  `protobuf:"bytes,2,rep,name=condition_groups,json=conditionGroups,proto3" json:"condition_groups,omitempty"`
}

func (x *NmsActivateOrClearConditions) Reset() {
	*x = NmsActivateOrClearConditions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_public_v202505_nms_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NmsActivateOrClearConditions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NmsActivateOrClearConditions) ProtoMessage() {}

func (x *NmsActivateOrClearConditions) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_public_v202505_nms_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NmsActivateOrClearConditions.ProtoReflect.Descriptor instead.
func (*NmsActivateOrClearConditions) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_public_v202505_nms_common_proto_rawDescGZIP(), []int{5}
}

func (x *NmsActivateOrClearConditions) GetConnector() NmsConditionConnector {
	if x != nil {
		return x.Connector
	}
	return NmsConditionConnector_NMS_CONDITION_CONNECTOR_UNSPECIFIED
}

func (x *NmsActivateOrClearConditions) GetConditionGroups() []*NmsConditionGroup {
	if x != nil {
		return x.ConditionGroups
	}
	return nil
}

var File_kentik_alerting_public_v202505_nms_common_proto protoreflect.FileDescriptor

var file_kentik_alerting_public_v202505_nms_common_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35,
	0x2f, 0x6e, 0x6d, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30,
	0x35, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x25, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x76, 0x32, 0x30, 0x32, 0x33, 0x30, 0x33, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x37, 0x0a, 0x0b, 0x4e, 0x6d, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x6f, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6e, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x22, 0xe6, 0x02, 0x0a, 0x0c, 0x4e, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x55, 0x0a,
	0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30,
	0x35, 0x2e, 0x4e, 0x6d, 0x73, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x12, 0x5c, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6b, 0x65, 0x6e,
	0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35, 0x2e, 0x4e, 0x6d, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x5b, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35, 0x2e,
	0x4e, 0x6d, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x10, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x0a, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x15,
	0x4e, 0x6d, 0x73, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35, 0x2e, 0x4e, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x97, 0x01, 0x0a, 0x17, 0x4e, 0x6d, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6b, 0x65, 0x6e,
	0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35, 0x2e, 0x4e, 0x6d, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x3b, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6b, 0x65, 0x6e, 0x74,
	0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35, 0x2e, 0x4e, 0x6d, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x52, 0x02, 0x74, 0x6f, 0x22, 0xa6, 0x02, 0x0a, 0x11, 0x4e,
	0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x53, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x30,
	0x32, 0x35, 0x30, 0x35, 0x2e, 0x4e, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x03, 0x6e, 0x6f, 0x74, 0x12, 0x4c, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6b, 0x65,
	0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35, 0x2e, 0x4e, 0x6d, 0x73,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5c, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35,
	0x2e, 0x4e, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x1c, 0x4e, 0x6d, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x53, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x2e, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35, 0x2e, 0x4e, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x5c, 0x0a, 0x10, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x30,
	0x32, 0x35, 0x30, 0x35, 0x2e, 0x4e, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2a, 0x82, 0x01, 0x0a, 0x15, 0x4e, 0x6d, 0x73, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x27, 0x0a, 0x23, 0x4e, 0x4d, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x4d,
	0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x4e,
	0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x41, 0x4e, 0x59, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x4e,
	0x4d, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4e,
	0x4e, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x02, 0x2a, 0x93, 0x02, 0x0a,
	0x14, 0x4e, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x22, 0x4e, 0x4d, 0x53, 0x5f, 0x43, 0x4f, 0x4e,
	0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x21, 0x0a,
	0x1d, 0x4e, 0x4d, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f,
	0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x01,
	0x12, 0x24, 0x0a, 0x20, 0x4e, 0x4d, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x4c, 0x45, 0x53, 0x53, 0x5f,
	0x54, 0x48, 0x41, 0x4e, 0x10, 0x02, 0x12, 0x27, 0x0a, 0x23, 0x4e, 0x4d, 0x53, 0x5f, 0x43, 0x4f,
	0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52,
	0x5f, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x48, 0x41, 0x4e, 0x10, 0x03, 0x12,
	0x2e, 0x0a, 0x2a, 0x4e, 0x4d, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x54,
	0x48, 0x41, 0x4e, 0x5f, 0x4f, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x04, 0x12,
	0x31, 0x0a, 0x2d, 0x4e, 0x4d, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45,
	0x52, 0x5f, 0x54, 0x48, 0x41, 0x4e, 0x5f, 0x4f, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53,
	0x10, 0x05, 0x42, 0x4b, 0x5a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f,
	0x2f, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kentik_alerting_public_v202505_nms_common_proto_rawDescOnce sync.Once
	file_kentik_alerting_public_v202505_nms_common_proto_rawDescData = file_kentik_alerting_public_v202505_nms_common_proto_rawDesc
)

func file_kentik_alerting_public_v202505_nms_common_proto_rawDescGZIP() []byte {
	file_kentik_alerting_public_v202505_nms_common_proto_rawDescOnce.Do(func() {
		file_kentik_alerting_public_v202505_nms_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_kentik_alerting_public_v202505_nms_common_proto_rawDescData)
	})
	return file_kentik_alerting_public_v202505_nms_common_proto_rawDescData
}

var file_kentik_alerting_public_v202505_nms_common_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_kentik_alerting_public_v202505_nms_common_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_kentik_alerting_public_v202505_nms_common_proto_goTypes = []interface{}{
	(NmsConditionConnector)(0),           // 0: kentik.alerting.public.v202505.NmsConditionConnector
	(NmsConditionOperator)(0),            // 1: kentik.alerting.public.v202505.NmsConditionOperator
	(*NmsStateSet)(nil),                  // 2: kentik.alerting.public.v202505.NmsStateSet
	(*NmsCondition)(nil),                 // 3: kentik.alerting.public.v202505.NmsCondition
	(*NmsThresholdCondition)(nil),        // 4: kentik.alerting.public.v202505.NmsThresholdCondition
	(*NmsStateChangeCondition)(nil),      // 5: kentik.alerting.public.v202505.NmsStateChangeCondition
	(*NmsConditionGroup)(nil),            // 6: kentik.alerting.public.v202505.NmsConditionGroup
	(*NmsActivateOrClearConditions)(nil), // 7: kentik.alerting.public.v202505.NmsActivateOrClearConditions
}
var file_kentik_alerting_public_v202505_nms_common_proto_depIdxs = []int32{
	4,  // 0: kentik.alerting.public.v202505.NmsCondition.threshold:type_name -> kentik.alerting.public.v202505.NmsThresholdCondition
	5,  // 1: kentik.alerting.public.v202505.NmsCondition.state_change:type_name -> kentik.alerting.public.v202505.NmsStateChangeCondition
	2,  // 2: kentik.alerting.public.v202505.NmsCondition.state_in_condition:type_name -> kentik.alerting.public.v202505.NmsStateSet
	1,  // 3: kentik.alerting.public.v202505.NmsThresholdCondition.operator:type_name -> kentik.alerting.public.v202505.NmsConditionOperator
	2,  // 4: kentik.alerting.public.v202505.NmsStateChangeCondition.from:type_name -> kentik.alerting.public.v202505.NmsStateSet
	2,  // 5: kentik.alerting.public.v202505.NmsStateChangeCondition.to:type_name -> kentik.alerting.public.v202505.NmsStateSet
	0,  // 6: kentik.alerting.public.v202505.NmsConditionGroup.connector:type_name -> kentik.alerting.public.v202505.NmsConditionConnector
	3,  // 7: kentik.alerting.public.v202505.NmsConditionGroup.conditions:type_name -> kentik.alerting.public.v202505.NmsCondition
	6,  // 8: kentik.alerting.public.v202505.NmsConditionGroup.condition_groups:type_name -> kentik.alerting.public.v202505.NmsConditionGroup
	0,  // 9: kentik.alerting.public.v202505.NmsActivateOrClearConditions.connector:type_name -> kentik.alerting.public.v202505.NmsConditionConnector
	6,  // 10: kentik.alerting.public.v202505.NmsActivateOrClearConditions.condition_groups:type_name -> kentik.alerting.public.v202505.NmsConditionGroup
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_kentik_alerting_public_v202505_nms_common_proto_init() }
func file_kentik_alerting_public_v202505_nms_common_proto_init() {
	if File_kentik_alerting_public_v202505_nms_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kentik_alerting_public_v202505_nms_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NmsStateSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_alerting_public_v202505_nms_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NmsCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_alerting_public_v202505_nms_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NmsThresholdCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_alerting_public_v202505_nms_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NmsStateChangeCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_alerting_public_v202505_nms_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NmsConditionGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_alerting_public_v202505_nms_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NmsActivateOrClearConditions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kentik_alerting_public_v202505_nms_common_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*NmsCondition_Threshold)(nil),
		(*NmsCondition_StateChange)(nil),
		(*NmsCondition_StateInCondition)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kentik_alerting_public_v202505_nms_common_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kentik_alerting_public_v202505_nms_common_proto_goTypes,
		DependencyIndexes: file_kentik_alerting_public_v202505_nms_common_proto_depIdxs,
		EnumInfos:         file_kentik_alerting_public_v202505_nms_common_proto_enumTypes,
		MessageInfos:      file_kentik_alerting_public_v202505_nms_common_proto_msgTypes,
	}.Build()
	File_kentik_alerting_public_v202505_nms_common_proto = out.File
	file_kentik_alerting_public_v202505_nms_common_proto_rawDesc = nil
	file_kentik_alerting_public_v202505_nms_common_proto_goTypes = nil
	file_kentik_alerting_public_v202505_nms_common_proto_depIdxs = nil
}
