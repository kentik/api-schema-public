// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        (unknown)
// source: kentik/alerting/public/v202505/common.proto

package v202505

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/kentik/api-schema-public/gen/go/kentik/core/v202303"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PolicyType int32

const (
	PolicyType_POLICY_TYPE_UNSPECIFIED PolicyType = 0
	// NMS Agent Policy
	PolicyType_POLICY_TYPE_AGENT PolicyType = 1
	// NMS Component Policy
	PolicyType_POLICY_TYPE_COMPONENT PolicyType = 2
	// NMS Device Policy
	PolicyType_POLICY_TYPE_DEVICE PolicyType = 4
	// NMS Event Policy
	PolicyType_POLICY_TYPE_EVENT PolicyType = 5
	// NMS Interface Policy
	PolicyType_POLICY_TYPE_INTERFACE PolicyType = 6
	// NMS Custom Policy
	PolicyType_POLICY_TYPE_CUSTOM PolicyType = 7
	// Flow Alerting Cloud Policy
	PolicyType_POLICY_TYPE_CLOUD PolicyType = 8
	// Flow Alerting Protect Policy
	PolicyType_POLICY_TYPE_PROTECT PolicyType = 9
	// Flow Alerting Traffic Policy
	PolicyType_POLICY_TYPE_TRAFFIC PolicyType = 10
	// Flow Alerting KMetrics Policy
	PolicyType_POLICY_TYPE_KMETRICS PolicyType = 11
)

// Enum value maps for PolicyType.
var (
	PolicyType_name = map[int32]string{
		0:  "POLICY_TYPE_UNSPECIFIED",
		1:  "POLICY_TYPE_AGENT",
		2:  "POLICY_TYPE_COMPONENT",
		4:  "POLICY_TYPE_DEVICE",
		5:  "POLICY_TYPE_EVENT",
		6:  "POLICY_TYPE_INTERFACE",
		7:  "POLICY_TYPE_CUSTOM",
		8:  "POLICY_TYPE_CLOUD",
		9:  "POLICY_TYPE_PROTECT",
		10: "POLICY_TYPE_TRAFFIC",
		11: "POLICY_TYPE_KMETRICS",
	}
	PolicyType_value = map[string]int32{
		"POLICY_TYPE_UNSPECIFIED": 0,
		"POLICY_TYPE_AGENT":       1,
		"POLICY_TYPE_COMPONENT":   2,
		"POLICY_TYPE_DEVICE":      4,
		"POLICY_TYPE_EVENT":       5,
		"POLICY_TYPE_INTERFACE":   6,
		"POLICY_TYPE_CUSTOM":      7,
		"POLICY_TYPE_CLOUD":       8,
		"POLICY_TYPE_PROTECT":     9,
		"POLICY_TYPE_TRAFFIC":     10,
		"POLICY_TYPE_KMETRICS":    11,
	}
)

func (x PolicyType) Enum() *PolicyType {
	p := new(PolicyType)
	*p = x
	return p
}

func (x PolicyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PolicyType) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_alerting_public_v202505_common_proto_enumTypes[0].Descriptor()
}

func (PolicyType) Type() protoreflect.EnumType {
	return &file_kentik_alerting_public_v202505_common_proto_enumTypes[0]
}

func (x PolicyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PolicyType.Descriptor instead.
func (PolicyType) EnumDescriptor() ([]byte, []int) {
	return file_kentik_alerting_public_v202505_common_proto_rawDescGZIP(), []int{0}
}

type ActivationMode int32

const (
	ActivationMode_ACTIVATION_MODE_UNSPECIFIED ActivationMode = 0
	// Rolling window activation algorithm
	ActivationMode_ACTIVATION_MODE_ROLLING_WINDOW ActivationMode = 1
	// Toggle activation (direct activate or clear)
	ActivationMode_ACTIVATION_MODE_TOGGLE ActivationMode = 2
)

// Enum value maps for ActivationMode.
var (
	ActivationMode_name = map[int32]string{
		0: "ACTIVATION_MODE_UNSPECIFIED",
		1: "ACTIVATION_MODE_ROLLING_WINDOW",
		2: "ACTIVATION_MODE_TOGGLE",
	}
	ActivationMode_value = map[string]int32{
		"ACTIVATION_MODE_UNSPECIFIED":    0,
		"ACTIVATION_MODE_ROLLING_WINDOW": 1,
		"ACTIVATION_MODE_TOGGLE":         2,
	}
)

func (x ActivationMode) Enum() *ActivationMode {
	p := new(ActivationMode)
	*p = x
	return p
}

func (x ActivationMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivationMode) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_alerting_public_v202505_common_proto_enumTypes[1].Descriptor()
}

func (ActivationMode) Type() protoreflect.EnumType {
	return &file_kentik_alerting_public_v202505_common_proto_enumTypes[1]
}

func (x ActivationMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActivationMode.Descriptor instead.
func (ActivationMode) EnumDescriptor() ([]byte, []int) {
	return file_kentik_alerting_public_v202505_common_proto_rawDescGZIP(), []int{1}
}

type AggregationType int32

const (
	AggregationType_AGGREGATION_TYPE_UNSPECIFIED AggregationType = 0
	// percentile aggregation P05
	AggregationType_AGGREGATION_TYPE_REL_P05 AggregationType = 1
	// percentile aggregation P10
	AggregationType_AGGREGATION_TYPE_REL_P10 AggregationType = 2
	// percentile aggregation P25
	AggregationType_AGGREGATION_TYPE_REL_P25 AggregationType = 3
	// percentile aggregation P50
	AggregationType_AGGREGATION_TYPE_REL_P50 AggregationType = 4
	// percentile aggregation P75
	AggregationType_AGGREGATION_TYPE_REL_P75 AggregationType = 5
	// percentile aggregation P80
	AggregationType_AGGREGATION_TYPE_REL_P80 AggregationType = 6
	// percentile aggregation P90
	AggregationType_AGGREGATION_TYPE_REL_P90 AggregationType = 7
	AggregationType_AGGREGATION_TYPE_REL_P95 AggregationType = 8
	// percentile aggregation P98
	AggregationType_AGGREGATION_TYPE_REL_P98 AggregationType = 9
	// percentile aggregation P99
	AggregationType_AGGREGATION_TYPE_REL_P99 AggregationType = 10
	// maximum
	AggregationType_AGGREGATION_TYPE_REL_MAX AggregationType = 11
	// minimum
	AggregationType_AGGREGATION_TYPE_REL_MIN AggregationType = 12
)

// Enum value maps for AggregationType.
var (
	AggregationType_name = map[int32]string{
		0:  "AGGREGATION_TYPE_UNSPECIFIED",
		1:  "AGGREGATION_TYPE_REL_P05",
		2:  "AGGREGATION_TYPE_REL_P10",
		3:  "AGGREGATION_TYPE_REL_P25",
		4:  "AGGREGATION_TYPE_REL_P50",
		5:  "AGGREGATION_TYPE_REL_P75",
		6:  "AGGREGATION_TYPE_REL_P80",
		7:  "AGGREGATION_TYPE_REL_P90",
		8:  "AGGREGATION_TYPE_REL_P95",
		9:  "AGGREGATION_TYPE_REL_P98",
		10: "AGGREGATION_TYPE_REL_P99",
		11: "AGGREGATION_TYPE_REL_MAX",
		12: "AGGREGATION_TYPE_REL_MIN",
	}
	AggregationType_value = map[string]int32{
		"AGGREGATION_TYPE_UNSPECIFIED": 0,
		"AGGREGATION_TYPE_REL_P05":     1,
		"AGGREGATION_TYPE_REL_P10":     2,
		"AGGREGATION_TYPE_REL_P25":     3,
		"AGGREGATION_TYPE_REL_P50":     4,
		"AGGREGATION_TYPE_REL_P75":     5,
		"AGGREGATION_TYPE_REL_P80":     6,
		"AGGREGATION_TYPE_REL_P90":     7,
		"AGGREGATION_TYPE_REL_P95":     8,
		"AGGREGATION_TYPE_REL_P98":     9,
		"AGGREGATION_TYPE_REL_P99":     10,
		"AGGREGATION_TYPE_REL_MAX":     11,
		"AGGREGATION_TYPE_REL_MIN":     12,
	}
)

func (x AggregationType) Enum() *AggregationType {
	p := new(AggregationType)
	*p = x
	return p
}

func (x AggregationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AggregationType) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_alerting_public_v202505_common_proto_enumTypes[2].Descriptor()
}

func (AggregationType) Type() protoreflect.EnumType {
	return &file_kentik_alerting_public_v202505_common_proto_enumTypes[2]
}

func (x AggregationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AggregationType.Descriptor instead.
func (AggregationType) EnumDescriptor() ([]byte, []int) {
	return file_kentik_alerting_public_v202505_common_proto_rawDescGZIP(), []int{2}
}

type MitigationType int32

const (
	MitigationType_MITIGATION_TYPE_UNSPECIFIED MitigationType = 0
	// Manual mitigation
	MitigationType_MITIGATION_TYPE_MANUAL MitigationType = 1
	// Automatic mitigation
	MitigationType_MITIGATION_TYPE_AUTO MitigationType = 2
)

// Enum value maps for MitigationType.
var (
	MitigationType_name = map[int32]string{
		0: "MITIGATION_TYPE_UNSPECIFIED",
		1: "MITIGATION_TYPE_MANUAL",
		2: "MITIGATION_TYPE_AUTO",
	}
	MitigationType_value = map[string]int32{
		"MITIGATION_TYPE_UNSPECIFIED": 0,
		"MITIGATION_TYPE_MANUAL":      1,
		"MITIGATION_TYPE_AUTO":        2,
	}
)

func (x MitigationType) Enum() *MitigationType {
	p := new(MitigationType)
	*p = x
	return p
}

func (x MitigationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MitigationType) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_alerting_public_v202505_common_proto_enumTypes[3].Descriptor()
}

func (MitigationType) Type() protoreflect.EnumType {
	return &file_kentik_alerting_public_v202505_common_proto_enumTypes[3]
}

func (x MitigationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MitigationType.Descriptor instead.
func (MitigationType) EnumDescriptor() ([]byte, []int) {
	return file_kentik_alerting_public_v202505_common_proto_rawDescGZIP(), []int{3}
}

type MitigationPlatformType int32

const (
	MitigationPlatformType_MITIGATION_PLATFORM_TYPE_UNSPECIFIED MitigationPlatformType = 0
	// A10 mitigation platform
	MitigationPlatformType_MITIGATION_PLATFORM_TYPE_A10 MitigationPlatformType = 1
	// FlowSpec mitigation platform
	MitigationPlatformType_MITIGATION_PLATFORM_TYPE_FLOWSPEC MitigationPlatformType = 2
	// Radware mitigation platform
	MitigationPlatformType_MITIGATION_PLATFORM_TYPE_RADWARE MitigationPlatformType = 3
	// RTBH mitigation platform
	MitigationPlatformType_MITIGATION_PLATFORM_TYPE_RTBH MitigationPlatformType = 4
	// CFMT mitigation platform
	MitigationPlatformType_MITIGATION_PLATFORM_TYPE_CFMT MitigationPlatformType = 5
	// Adaptive FlowSpec mitigation platform
	MitigationPlatformType_MITIGATION_PLATFORM_TYPE_ADAPTIVE_FLOWSPEC MitigationPlatformType = 6
)

// Enum value maps for MitigationPlatformType.
var (
	MitigationPlatformType_name = map[int32]string{
		0: "MITIGATION_PLATFORM_TYPE_UNSPECIFIED",
		1: "MITIGATION_PLATFORM_TYPE_A10",
		2: "MITIGATION_PLATFORM_TYPE_FLOWSPEC",
		3: "MITIGATION_PLATFORM_TYPE_RADWARE",
		4: "MITIGATION_PLATFORM_TYPE_RTBH",
		5: "MITIGATION_PLATFORM_TYPE_CFMT",
		6: "MITIGATION_PLATFORM_TYPE_ADAPTIVE_FLOWSPEC",
	}
	MitigationPlatformType_value = map[string]int32{
		"MITIGATION_PLATFORM_TYPE_UNSPECIFIED":       0,
		"MITIGATION_PLATFORM_TYPE_A10":               1,
		"MITIGATION_PLATFORM_TYPE_FLOWSPEC":          2,
		"MITIGATION_PLATFORM_TYPE_RADWARE":           3,
		"MITIGATION_PLATFORM_TYPE_RTBH":              4,
		"MITIGATION_PLATFORM_TYPE_CFMT":              5,
		"MITIGATION_PLATFORM_TYPE_ADAPTIVE_FLOWSPEC": 6,
	}
)

func (x MitigationPlatformType) Enum() *MitigationPlatformType {
	p := new(MitigationPlatformType)
	*p = x
	return p
}

func (x MitigationPlatformType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MitigationPlatformType) Descriptor() protoreflect.EnumDescriptor {
	return file_kentik_alerting_public_v202505_common_proto_enumTypes[4].Descriptor()
}

func (MitigationPlatformType) Type() protoreflect.EnumType {
	return &file_kentik_alerting_public_v202505_common_proto_enumTypes[4]
}

func (x MitigationPlatformType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MitigationPlatformType.Descriptor instead.
func (MitigationPlatformType) EnumDescriptor() ([]byte, []int) {
	return file_kentik_alerting_public_v202505_common_proto_rawDescGZIP(), []int{4}
}

type Source struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyType PolicyType `protobuf:"varint,1,opt,name=policy_type,json=policyType,proto3,enum=kentik.alerting.public.v202505.PolicyType" json:"policy_type,omitempty"`
	Id         string     `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Source) Reset() {
	*x = Source{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_public_v202505_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_public_v202505_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_public_v202505_common_proto_rawDescGZIP(), []int{0}
}

func (x *Source) GetPolicyType() PolicyType {
	if x != nil {
		return x.PolicyType
	}
	return PolicyType_POLICY_TYPE_UNSPECIFIED
}

func (x *Source) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type NotificationChannelAssociation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *NotificationChannelAssociation) Reset() {
	*x = NotificationChannelAssociation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_alerting_public_v202505_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationChannelAssociation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationChannelAssociation) ProtoMessage() {}

func (x *NotificationChannelAssociation) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_alerting_public_v202505_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationChannelAssociation.ProtoReflect.Descriptor instead.
func (*NotificationChannelAssociation) Descriptor() ([]byte, []int) {
	return file_kentik_alerting_public_v202505_common_proto_rawDescGZIP(), []int{1}
}

func (x *NotificationChannelAssociation) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

var File_kentik_alerting_public_v202505_common_proto protoreflect.FileDescriptor

var file_kentik_alerting_public_v202505_common_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x6b,
	0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25,
	0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x32, 0x30, 0x32,
	0x33, 0x30, 0x33, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xce, 0x01, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x68, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x76,
	0x32, 0x30, 0x32, 0x35, 0x30, 0x35, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x1b, 0x92, 0x41, 0x15, 0x32, 0x13, 0x54, 0x68, 0x65, 0x20, 0x74, 0x79, 0x70, 0x65,
	0x20, 0x6f, 0x66, 0x20, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0xe0, 0x41, 0x02, 0x52, 0x0a,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5a, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x4a, 0x92, 0x41, 0x44, 0x32, 0x42, 0x54, 0x68, 0x65,
	0x20, 0x49, 0x44, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2c, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x62, 0x65, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65,
	0x72, 0x20, 0x49, 0x44, 0x2c, 0x20, 0x55, 0x55, 0x49, 0x44, 0x20, 0x6f, 0x72, 0x20, 0x61, 0x6e,
	0x79, 0x20, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x20, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0xe0,
	0x41, 0x02, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6c, 0x0a, 0x1e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x73, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2b, 0x92, 0x41,
	0x25, 0x32, 0x23, 0x54, 0x68, 0x65, 0x20, 0x49, 0x44, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x2a, 0xa0, 0x02, 0x0a, 0x0a, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x41, 0x47, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x4f, 0x4c, 0x49, 0x43,
	0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54,
	0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x4f,
	0x4c, 0x49, 0x43, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10,
	0x05, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x10, 0x06, 0x12, 0x16, 0x0a, 0x12,
	0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x55, 0x53, 0x54,
	0x4f, 0x4d, 0x10, 0x07, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x10, 0x08, 0x12, 0x17, 0x0a, 0x13, 0x50,
	0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x45,
	0x43, 0x54, 0x10, 0x09, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x46, 0x46, 0x49, 0x43, 0x10, 0x0a, 0x12, 0x18, 0x0a,
	0x14, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4b, 0x4d, 0x45,
	0x54, 0x52, 0x49, 0x43, 0x53, 0x10, 0x0b, 0x2a, 0x71, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x4f,
	0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x1a,
	0x0a, 0x16, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x44,
	0x45, 0x5f, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x10, 0x02, 0x2a, 0x9b, 0x03, 0x0a, 0x0f, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x1c, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x1c, 0x0a, 0x18, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x4c, 0x5f, 0x50, 0x30, 0x35, 0x10, 0x01, 0x12, 0x1c,
	0x0a, 0x18, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x52, 0x45, 0x4c, 0x5f, 0x50, 0x31, 0x30, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18,
	0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x52, 0x45, 0x4c, 0x5f, 0x50, 0x32, 0x35, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x47,
	0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52,
	0x45, 0x4c, 0x5f, 0x50, 0x35, 0x30, 0x10, 0x04, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x47, 0x47, 0x52,
	0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x4c,
	0x5f, 0x50, 0x37, 0x35, 0x10, 0x05, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x4c, 0x5f, 0x50,
	0x38, 0x30, 0x10, 0x06, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x4c, 0x5f, 0x50, 0x39, 0x30,
	0x10, 0x07, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x4c, 0x5f, 0x50, 0x39, 0x35, 0x10, 0x08,
	0x12, 0x1c, 0x0a, 0x18, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x4c, 0x5f, 0x50, 0x39, 0x38, 0x10, 0x09, 0x12, 0x1c,
	0x0a, 0x18, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x52, 0x45, 0x4c, 0x5f, 0x50, 0x39, 0x39, 0x10, 0x0a, 0x12, 0x1c, 0x0a, 0x18,
	0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x52, 0x45, 0x4c, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x0b, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x47,
	0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52,
	0x45, 0x4c, 0x5f, 0x4d, 0x49, 0x4e, 0x10, 0x0c, 0x2a, 0x67, 0x0a, 0x0e, 0x4d, 0x69, 0x74, 0x69,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x4d, 0x49,
	0x54, 0x49, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x4d,
	0x49, 0x54, 0x49, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d,
	0x41, 0x4e, 0x55, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x49, 0x54, 0x49, 0x47,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x10,
	0x02, 0x2a, 0xa7, 0x02, 0x0a, 0x16, 0x4d, 0x69, 0x74, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x24,
	0x4d, 0x49, 0x54, 0x49, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x46,
	0x4f, 0x52, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x4d, 0x49, 0x54, 0x49, 0x47, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x41, 0x31, 0x30, 0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x4d, 0x49, 0x54, 0x49,
	0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x4c, 0x4f, 0x57, 0x53, 0x50, 0x45, 0x43, 0x10, 0x02, 0x12,
	0x24, 0x0a, 0x20, 0x4d, 0x49, 0x54, 0x49, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x4c,
	0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x41, 0x44, 0x57,
	0x41, 0x52, 0x45, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x4d, 0x49, 0x54, 0x49, 0x47, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x52, 0x54, 0x42, 0x48, 0x10, 0x04, 0x12, 0x21, 0x0a, 0x1d, 0x4d, 0x49, 0x54, 0x49,
	0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x46, 0x4d, 0x54, 0x10, 0x05, 0x12, 0x2e, 0x0a, 0x2a, 0x4d,
	0x49, 0x54, 0x49, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f,
	0x52, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x44, 0x41, 0x50, 0x54, 0x49, 0x56, 0x45,
	0x5f, 0x46, 0x4c, 0x4f, 0x57, 0x53, 0x50, 0x45, 0x43, 0x10, 0x06, 0x42, 0x4b, 0x5a, 0x49, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b,
	0x2f, 0x61, 0x70, 0x69, 0x2d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2d, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b,
	0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x2f, 0x76, 0x32, 0x30, 0x32, 0x35, 0x30, 0x35, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kentik_alerting_public_v202505_common_proto_rawDescOnce sync.Once
	file_kentik_alerting_public_v202505_common_proto_rawDescData = file_kentik_alerting_public_v202505_common_proto_rawDesc
)

func file_kentik_alerting_public_v202505_common_proto_rawDescGZIP() []byte {
	file_kentik_alerting_public_v202505_common_proto_rawDescOnce.Do(func() {
		file_kentik_alerting_public_v202505_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_kentik_alerting_public_v202505_common_proto_rawDescData)
	})
	return file_kentik_alerting_public_v202505_common_proto_rawDescData
}

var file_kentik_alerting_public_v202505_common_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_kentik_alerting_public_v202505_common_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_kentik_alerting_public_v202505_common_proto_goTypes = []interface{}{
	(PolicyType)(0),                        // 0: kentik.alerting.public.v202505.PolicyType
	(ActivationMode)(0),                    // 1: kentik.alerting.public.v202505.ActivationMode
	(AggregationType)(0),                   // 2: kentik.alerting.public.v202505.AggregationType
	(MitigationType)(0),                    // 3: kentik.alerting.public.v202505.MitigationType
	(MitigationPlatformType)(0),            // 4: kentik.alerting.public.v202505.MitigationPlatformType
	(*Source)(nil),                         // 5: kentik.alerting.public.v202505.Source
	(*NotificationChannelAssociation)(nil), // 6: kentik.alerting.public.v202505.NotificationChannelAssociation
}
var file_kentik_alerting_public_v202505_common_proto_depIdxs = []int32{
	0, // 0: kentik.alerting.public.v202505.Source.policy_type:type_name -> kentik.alerting.public.v202505.PolicyType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_kentik_alerting_public_v202505_common_proto_init() }
func file_kentik_alerting_public_v202505_common_proto_init() {
	if File_kentik_alerting_public_v202505_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kentik_alerting_public_v202505_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Source); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_alerting_public_v202505_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationChannelAssociation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kentik_alerting_public_v202505_common_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kentik_alerting_public_v202505_common_proto_goTypes,
		DependencyIndexes: file_kentik_alerting_public_v202505_common_proto_depIdxs,
		EnumInfos:         file_kentik_alerting_public_v202505_common_proto_enumTypes,
		MessageInfos:      file_kentik_alerting_public_v202505_common_proto_msgTypes,
	}.Build()
	File_kentik_alerting_public_v202505_common_proto = out.File
	file_kentik_alerting_public_v202505_common_proto_rawDesc = nil
	file_kentik_alerting_public_v202505_common_proto_goTypes = nil
	file_kentik_alerting_public_v202505_common_proto_depIdxs = nil
}
