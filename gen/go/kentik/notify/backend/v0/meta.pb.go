// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        (unknown)
// source: kentik/notify/backend/v0/meta.proto

package notify

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/kentik/api-schema-public/gen/go/kentik/core/v202012alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DatabasePoolSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxOpenConns           int32  `protobuf:"varint,1,opt,name=maxOpenConns,proto3" json:"maxOpenConns,omitempty"`
	MaxIdleConns           int32  `protobuf:"varint,2,opt,name=maxIdleConns,proto3" json:"maxIdleConns,omitempty"`
	ConnMaxLifeTimeSeconds uint32 `protobuf:"varint,3,opt,name=connMaxLifeTimeSeconds,proto3" json:"connMaxLifeTimeSeconds,omitempty"`
	ConnMaxIdleTimeSeconds uint32 `protobuf:"varint,4,opt,name=connMaxIdleTimeSeconds,proto3" json:"connMaxIdleTimeSeconds,omitempty"`
}

func (x *DatabasePoolSettings) Reset() {
	*x = DatabasePoolSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabasePoolSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabasePoolSettings) ProtoMessage() {}

func (x *DatabasePoolSettings) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabasePoolSettings.ProtoReflect.Descriptor instead.
func (*DatabasePoolSettings) Descriptor() ([]byte, []int) {
	return file_kentik_notify_backend_v0_meta_proto_rawDescGZIP(), []int{0}
}

func (x *DatabasePoolSettings) GetMaxOpenConns() int32 {
	if x != nil {
		return x.MaxOpenConns
	}
	return 0
}

func (x *DatabasePoolSettings) GetMaxIdleConns() int32 {
	if x != nil {
		return x.MaxIdleConns
	}
	return 0
}

func (x *DatabasePoolSettings) GetConnMaxLifeTimeSeconds() uint32 {
	if x != nil {
		return x.ConnMaxLifeTimeSeconds
	}
	return 0
}

func (x *DatabasePoolSettings) GetConnMaxIdleTimeSeconds() uint32 {
	if x != nil {
		return x.ConnMaxIdleTimeSeconds
	}
	return 0
}

// golang's sql.DBStats
type DatabaseStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxOpenConnections int32  `protobuf:"varint,1,opt,name=maxOpenConnections,proto3" json:"maxOpenConnections,omitempty"` // Maximum number of open connections to the database.
	OpenConnections    uint32 `protobuf:"varint,2,opt,name=openConnections,proto3" json:"openConnections,omitempty"`       // The number of established connections both in use and idle.
	InUse              uint32 `protobuf:"varint,3,opt,name=inUse,proto3" json:"inUse,omitempty"`                           // The number of connections currently in use.
	Idle               uint32 `protobuf:"varint,4,opt,name=idle,proto3" json:"idle,omitempty"`                             // The number of idle connections.
	// Counters
	WaitCount int64 `protobuf:"varint,5,opt,name=waitCount,proto3" json:"waitCount,omitempty"` // The total number of connections waited for.
	// NOTE: duration in go; just convert this to millis for simplicity
	WaitDurationMillis uint64 `protobuf:"varint,6,opt,name=waitDurationMillis,proto3" json:"waitDurationMillis,omitempty"` // The total time blocked waiting for a new connection. (converted to millis)
	MaxIdleClosed      int64  `protobuf:"varint,7,opt,name=maxIdleClosed,proto3" json:"maxIdleClosed,omitempty"`           // The total number of connections closed due to SetMaxIdleConns.
	MaxIdleTimeClosed  int64  `protobuf:"varint,8,opt,name=maxIdleTimeClosed,proto3" json:"maxIdleTimeClosed,omitempty"`   // The total number of connections closed due to SetConnMaxIdleTime.
	MaxLifetimeClosed  int64  `protobuf:"varint,9,opt,name=maxLifetimeClosed,proto3" json:"maxLifetimeClosed,omitempty"`   // The total number of connections closed due to SetConnMaxLifetime.
}

func (x *DatabaseStats) Reset() {
	*x = DatabaseStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseStats) ProtoMessage() {}

func (x *DatabaseStats) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseStats.ProtoReflect.Descriptor instead.
func (*DatabaseStats) Descriptor() ([]byte, []int) {
	return file_kentik_notify_backend_v0_meta_proto_rawDescGZIP(), []int{1}
}

func (x *DatabaseStats) GetMaxOpenConnections() int32 {
	if x != nil {
		return x.MaxOpenConnections
	}
	return 0
}

func (x *DatabaseStats) GetOpenConnections() uint32 {
	if x != nil {
		return x.OpenConnections
	}
	return 0
}

func (x *DatabaseStats) GetInUse() uint32 {
	if x != nil {
		return x.InUse
	}
	return 0
}

func (x *DatabaseStats) GetIdle() uint32 {
	if x != nil {
		return x.Idle
	}
	return 0
}

func (x *DatabaseStats) GetWaitCount() int64 {
	if x != nil {
		return x.WaitCount
	}
	return 0
}

func (x *DatabaseStats) GetWaitDurationMillis() uint64 {
	if x != nil {
		return x.WaitDurationMillis
	}
	return 0
}

func (x *DatabaseStats) GetMaxIdleClosed() int64 {
	if x != nil {
		return x.MaxIdleClosed
	}
	return 0
}

func (x *DatabaseStats) GetMaxIdleTimeClosed() int64 {
	if x != nil {
		return x.MaxIdleTimeClosed
	}
	return 0
}

func (x *DatabaseStats) GetMaxLifetimeClosed() int64 {
	if x != nil {
		return x.MaxLifetimeClosed
	}
	return 0
}

type GetDBPoolSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // dsn id, eg. "chwww-ro" or whatever
}

func (x *GetDBPoolSettingsRequest) Reset() {
	*x = GetDBPoolSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDBPoolSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDBPoolSettingsRequest) ProtoMessage() {}

func (x *GetDBPoolSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDBPoolSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetDBPoolSettingsRequest) Descriptor() ([]byte, []int) {
	return file_kentik_notify_backend_v0_meta_proto_rawDescGZIP(), []int{2}
}

func (x *GetDBPoolSettingsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDBPoolSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings *DatabasePoolSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *GetDBPoolSettingsResponse) Reset() {
	*x = GetDBPoolSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDBPoolSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDBPoolSettingsResponse) ProtoMessage() {}

func (x *GetDBPoolSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDBPoolSettingsResponse.ProtoReflect.Descriptor instead.
func (*GetDBPoolSettingsResponse) Descriptor() ([]byte, []int) {
	return file_kentik_notify_backend_v0_meta_proto_rawDescGZIP(), []int{3}
}

func (x *GetDBPoolSettingsResponse) GetSettings() *DatabasePoolSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type SetDBPoolSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // dsn id, eg. "chwww-ro" or whatever
	Settings *DatabasePoolSettings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *SetDBPoolSettingsRequest) Reset() {
	*x = SetDBPoolSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDBPoolSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDBPoolSettingsRequest) ProtoMessage() {}

func (x *SetDBPoolSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDBPoolSettingsRequest.ProtoReflect.Descriptor instead.
func (*SetDBPoolSettingsRequest) Descriptor() ([]byte, []int) {
	return file_kentik_notify_backend_v0_meta_proto_rawDescGZIP(), []int{4}
}

func (x *SetDBPoolSettingsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetDBPoolSettingsRequest) GetSettings() *DatabasePoolSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type SetDBPoolSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetDBPoolSettingsResponse) Reset() {
	*x = SetDBPoolSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDBPoolSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDBPoolSettingsResponse) ProtoMessage() {}

func (x *SetDBPoolSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDBPoolSettingsResponse.ProtoReflect.Descriptor instead.
func (*SetDBPoolSettingsResponse) Descriptor() ([]byte, []int) {
	return file_kentik_notify_backend_v0_meta_proto_rawDescGZIP(), []int{5}
}

type GetDBStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // dsn id, eg. "chwww-ro" or whatever
}

func (x *GetDBStatsRequest) Reset() {
	*x = GetDBStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDBStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDBStatsRequest) ProtoMessage() {}

func (x *GetDBStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDBStatsRequest.ProtoReflect.Descriptor instead.
func (*GetDBStatsRequest) Descriptor() ([]byte, []int) {
	return file_kentik_notify_backend_v0_meta_proto_rawDescGZIP(), []int{6}
}

func (x *GetDBStatsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDBStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stats *DatabaseStats `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *GetDBStatsResponse) Reset() {
	*x = GetDBStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDBStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDBStatsResponse) ProtoMessage() {}

func (x *GetDBStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDBStatsResponse.ProtoReflect.Descriptor instead.
func (*GetDBStatsResponse) Descriptor() ([]byte, []int) {
	return file_kentik_notify_backend_v0_meta_proto_rawDescGZIP(), []int{7}
}

func (x *GetDBStatsResponse) GetStats() *DatabaseStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type MetaEnvResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Env      map[string]string `protobuf:"bytes,1,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Redacted []string          `protobuf:"bytes,2,rep,name=redacted,proto3" json:"redacted,omitempty"`
}

func (x *MetaEnvResponse) Reset() {
	*x = MetaEnvResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaEnvResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaEnvResponse) ProtoMessage() {}

func (x *MetaEnvResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaEnvResponse.ProtoReflect.Descriptor instead.
func (*MetaEnvResponse) Descriptor() ([]byte, []int) {
	return file_kentik_notify_backend_v0_meta_proto_rawDescGZIP(), []int{8}
}

func (x *MetaEnvResponse) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *MetaEnvResponse) GetRedacted() []string {
	if x != nil {
		return x.Redacted
	}
	return nil
}

type LogLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogLevel string `protobuf:"bytes,1,opt,name=logLevel,proto3" json:"logLevel,omitempty"`
}

func (x *LogLevelRequest) Reset() {
	*x = LogLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogLevelRequest) ProtoMessage() {}

func (x *LogLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogLevelRequest.ProtoReflect.Descriptor instead.
func (*LogLevelRequest) Descriptor() ([]byte, []int) {
	return file_kentik_notify_backend_v0_meta_proto_rawDescGZIP(), []int{9}
}

func (x *LogLevelRequest) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

type LogLevelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogLevel        string `protobuf:"bytes,1,opt,name=logLevel,proto3" json:"logLevel,omitempty"`
	InitialLogLevel string `protobuf:"bytes,2,opt,name=initialLogLevel,proto3" json:"initialLogLevel,omitempty"`
}

func (x *LogLevelResponse) Reset() {
	*x = LogLevelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogLevelResponse) ProtoMessage() {}

func (x *LogLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogLevelResponse.ProtoReflect.Descriptor instead.
func (*LogLevelResponse) Descriptor() ([]byte, []int) {
	return file_kentik_notify_backend_v0_meta_proto_rawDescGZIP(), []int{10}
}

func (x *LogLevelResponse) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

func (x *LogLevelResponse) GetInitialLogLevel() string {
	if x != nil {
		return x.InitialLogLevel
	}
	return ""
}

type LogJSONModeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	JsonMode bool `protobuf:"varint,1,opt,name=jsonMode,proto3" json:"jsonMode,omitempty"`
}

func (x *LogJSONModeRequest) Reset() {
	*x = LogJSONModeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogJSONModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogJSONModeRequest) ProtoMessage() {}

func (x *LogJSONModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogJSONModeRequest.ProtoReflect.Descriptor instead.
func (*LogJSONModeRequest) Descriptor() ([]byte, []int) {
	return file_kentik_notify_backend_v0_meta_proto_rawDescGZIP(), []int{11}
}

// Deprecated: Do not use.
func (x *LogJSONModeRequest) GetJsonMode() bool {
	if x != nil {
		return x.JsonMode
	}
	return false
}

type LogJSONModeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	JsonMode bool `protobuf:"varint,1,opt,name=jsonMode,proto3" json:"jsonMode,omitempty"`
}

func (x *LogJSONModeResponse) Reset() {
	*x = LogJSONModeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogJSONModeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogJSONModeResponse) ProtoMessage() {}

func (x *LogJSONModeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kentik_notify_backend_v0_meta_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogJSONModeResponse.ProtoReflect.Descriptor instead.
func (*LogJSONModeResponse) Descriptor() ([]byte, []int) {
	return file_kentik_notify_backend_v0_meta_proto_rawDescGZIP(), []int{12}
}

// Deprecated: Do not use.
func (x *LogJSONModeResponse) GetJsonMode() bool {
	if x != nil {
		return x.JsonMode
	}
	return false
}

var File_kentik_notify_backend_v0_meta_proto protoreflect.FileDescriptor

var file_kentik_notify_backend_v0_meta_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2f,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x30, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x30, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x76, 0x32, 0x30, 0x32, 0x30, 0x31, 0x32, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xce, 0x01, 0x0a, 0x14, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x6d, 0x61, 0x78, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x6e, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x6e, 0x4d, 0x61, 0x78, 0x4c,
	0x69, 0x66, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x63, 0x6f, 0x6e, 0x6e, 0x4d, 0x61, 0x78, 0x4c, 0x69, 0x66,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x16,
	0x63, 0x6f, 0x6e, 0x6e, 0x4d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x63, 0x6f,
	0x6e, 0x6e, 0x4d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x22, 0xe3, 0x02, 0x0a, 0x0d, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x4f, 0x70, 0x65,
	0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x12, 0x6d, 0x61, 0x78, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x69, 0x64, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x61,
	0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x77,
	0x61, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x77, 0x61, 0x69, 0x74,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x77, 0x61, 0x69, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x49,
	0x64, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x2c,
	0x0a, 0x11, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x49, 0x64,
	0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11,
	0x6d, 0x61, 0x78, 0x4c, 0x69, 0x66, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x4c, 0x69, 0x66, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x44, 0x42, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x63, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x42, 0x50,
	0x6f, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x30, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x72, 0x0a, 0x18, 0x53,
	0x65, 0x74, 0x44, 0x42, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x46, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x65, 0x6e, 0x74,
	0x69, 0x6b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x30,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22,
	0x1b, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x44, 0x42, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x44, 0x42, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x4f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x42, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x30, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x0f, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x6e, 0x76, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x30, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x45,
	0x6e, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x6e, 0x76, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x61,
	0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x61,
	0x63, 0x74, 0x65, 0x64, 0x1a, 0x36, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2d, 0x0a, 0x0f,
	0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x58, 0x0a, 0x10, 0x4c,
	0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4c, 0x6f, 0x67,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x34, 0x0a, 0x12, 0x4c, 0x6f, 0x67, 0x4a, 0x53, 0x4f, 0x4e,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x6a,
	0x73, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x42, 0x02, 0x18,
	0x01, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x35, 0x0a, 0x13, 0x4c,
	0x6f, 0x67, 0x4a, 0x53, 0x4f, 0x4e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x42, 0x02, 0x18, 0x01, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x4d, 0x6f,
	0x64, 0x65, 0x32, 0x86, 0x09, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0xa6, 0x01, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x44, 0x42, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x2e, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x42, 0x50, 0x6f,
	0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x42, 0x50, 0x6f,
	0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x30, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x2f, 0x64, 0x62, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0xa6, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x44, 0x42, 0x50, 0x6f,
	0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2e, 0x2e, 0x6b, 0x65, 0x6e,
	0x74, 0x69, 0x6b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76,
	0x30, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x42, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6b, 0x65, 0x6e,
	0x74, 0x69, 0x6b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76,
	0x30, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x42, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2f, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x30, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x64, 0x62, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x8e, 0x01,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x44, 0x42, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x6b,
	0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x2e, 0x76, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x42, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x30, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x42, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x30, 0x2f, 0x6d, 0x65, 0x74, 0x61,
	0x2f, 0x64, 0x62, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x6c,
	0x0a, 0x06, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x25, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x30, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x45, 0x6e, 0x76, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12,
	0x1b, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x2f, 0x76, 0x30, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x65, 0x6e, 0x76, 0x12, 0x78, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x26, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x30, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2f, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x30, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x6c, 0x6f, 0x67,
	0x2f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x91, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4c, 0x6f,
	0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x25, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x30, 0x2e, 0x4c, 0x6f,
	0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x76, 0x30, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x1a, 0x21, 0x2f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76,
	0x30, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x6c, 0x6f, 0x67, 0x2f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x3a, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x80, 0x01, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x4c, 0x6f, 0x67, 0x4a, 0x53, 0x4f, 0x4e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x29, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x30, 0x2e, 0x4c, 0x6f, 0x67,
	0x4a, 0x53, 0x4f, 0x4e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2b, 0x88, 0x02, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x30, 0x2f,
	0x6d, 0x65, 0x74, 0x61, 0x2f, 0x6c, 0x6f, 0x67, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x95, 0x01,
	0x0a, 0x0e, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x4a, 0x53, 0x4f, 0x4e, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x28, 0x2e, 0x6b, 0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x30, 0x2e, 0x4c, 0x6f, 0x67, 0x4a, 0x53, 0x4f, 0x4e, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6b, 0x65, 0x6e,
	0x74, 0x69, 0x6b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76,
	0x30, 0x2e, 0x4c, 0x6f, 0x67, 0x4a, 0x53, 0x4f, 0x4e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x88, 0x02, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25,
	0x1a, 0x20, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2f, 0x76, 0x30, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x6c, 0x6f, 0x67, 0x2f, 0x6a, 0x73,
	0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x1a, 0x04, 0xf8, 0xd7, 0x02, 0x01, 0x42, 0x21, 0x5a, 0x1f, 0x6b,
	0x65, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2f, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x30, 0x3b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kentik_notify_backend_v0_meta_proto_rawDescOnce sync.Once
	file_kentik_notify_backend_v0_meta_proto_rawDescData = file_kentik_notify_backend_v0_meta_proto_rawDesc
)

func file_kentik_notify_backend_v0_meta_proto_rawDescGZIP() []byte {
	file_kentik_notify_backend_v0_meta_proto_rawDescOnce.Do(func() {
		file_kentik_notify_backend_v0_meta_proto_rawDescData = protoimpl.X.CompressGZIP(file_kentik_notify_backend_v0_meta_proto_rawDescData)
	})
	return file_kentik_notify_backend_v0_meta_proto_rawDescData
}

var file_kentik_notify_backend_v0_meta_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_kentik_notify_backend_v0_meta_proto_goTypes = []interface{}{
	(*DatabasePoolSettings)(nil),      // 0: kentik.api.notify.v0.DatabasePoolSettings
	(*DatabaseStats)(nil),             // 1: kentik.api.notify.v0.DatabaseStats
	(*GetDBPoolSettingsRequest)(nil),  // 2: kentik.api.notify.v0.GetDBPoolSettingsRequest
	(*GetDBPoolSettingsResponse)(nil), // 3: kentik.api.notify.v0.GetDBPoolSettingsResponse
	(*SetDBPoolSettingsRequest)(nil),  // 4: kentik.api.notify.v0.SetDBPoolSettingsRequest
	(*SetDBPoolSettingsResponse)(nil), // 5: kentik.api.notify.v0.SetDBPoolSettingsResponse
	(*GetDBStatsRequest)(nil),         // 6: kentik.api.notify.v0.GetDBStatsRequest
	(*GetDBStatsResponse)(nil),        // 7: kentik.api.notify.v0.GetDBStatsResponse
	(*MetaEnvResponse)(nil),           // 8: kentik.api.notify.v0.MetaEnvResponse
	(*LogLevelRequest)(nil),           // 9: kentik.api.notify.v0.LogLevelRequest
	(*LogLevelResponse)(nil),          // 10: kentik.api.notify.v0.LogLevelResponse
	(*LogJSONModeRequest)(nil),        // 11: kentik.api.notify.v0.LogJSONModeRequest
	(*LogJSONModeResponse)(nil),       // 12: kentik.api.notify.v0.LogJSONModeResponse
	nil,                               // 13: kentik.api.notify.v0.MetaEnvResponse.EnvEntry
	(*emptypb.Empty)(nil),             // 14: google.protobuf.Empty
}
var file_kentik_notify_backend_v0_meta_proto_depIdxs = []int32{
	0,  // 0: kentik.api.notify.v0.GetDBPoolSettingsResponse.settings:type_name -> kentik.api.notify.v0.DatabasePoolSettings
	0,  // 1: kentik.api.notify.v0.SetDBPoolSettingsRequest.settings:type_name -> kentik.api.notify.v0.DatabasePoolSettings
	1,  // 2: kentik.api.notify.v0.GetDBStatsResponse.stats:type_name -> kentik.api.notify.v0.DatabaseStats
	13, // 3: kentik.api.notify.v0.MetaEnvResponse.env:type_name -> kentik.api.notify.v0.MetaEnvResponse.EnvEntry
	2,  // 4: kentik.api.notify.v0.Meta.GetDBPoolSettings:input_type -> kentik.api.notify.v0.GetDBPoolSettingsRequest
	4,  // 5: kentik.api.notify.v0.Meta.SetDBPoolSettings:input_type -> kentik.api.notify.v0.SetDBPoolSettingsRequest
	6,  // 6: kentik.api.notify.v0.Meta.GetDBStats:input_type -> kentik.api.notify.v0.GetDBStatsRequest
	14, // 7: kentik.api.notify.v0.Meta.GetEnv:input_type -> google.protobuf.Empty
	14, // 8: kentik.api.notify.v0.Meta.GetLogLevel:input_type -> google.protobuf.Empty
	9,  // 9: kentik.api.notify.v0.Meta.SetLogLevel:input_type -> kentik.api.notify.v0.LogLevelRequest
	14, // 10: kentik.api.notify.v0.Meta.GetLogJSONMode:input_type -> google.protobuf.Empty
	11, // 11: kentik.api.notify.v0.Meta.SetLogJSONMode:input_type -> kentik.api.notify.v0.LogJSONModeRequest
	3,  // 12: kentik.api.notify.v0.Meta.GetDBPoolSettings:output_type -> kentik.api.notify.v0.GetDBPoolSettingsResponse
	5,  // 13: kentik.api.notify.v0.Meta.SetDBPoolSettings:output_type -> kentik.api.notify.v0.SetDBPoolSettingsResponse
	7,  // 14: kentik.api.notify.v0.Meta.GetDBStats:output_type -> kentik.api.notify.v0.GetDBStatsResponse
	8,  // 15: kentik.api.notify.v0.Meta.GetEnv:output_type -> kentik.api.notify.v0.MetaEnvResponse
	10, // 16: kentik.api.notify.v0.Meta.GetLogLevel:output_type -> kentik.api.notify.v0.LogLevelResponse
	10, // 17: kentik.api.notify.v0.Meta.SetLogLevel:output_type -> kentik.api.notify.v0.LogLevelResponse
	12, // 18: kentik.api.notify.v0.Meta.GetLogJSONMode:output_type -> kentik.api.notify.v0.LogJSONModeResponse
	12, // 19: kentik.api.notify.v0.Meta.SetLogJSONMode:output_type -> kentik.api.notify.v0.LogJSONModeResponse
	12, // [12:20] is the sub-list for method output_type
	4,  // [4:12] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_kentik_notify_backend_v0_meta_proto_init() }
func file_kentik_notify_backend_v0_meta_proto_init() {
	if File_kentik_notify_backend_v0_meta_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kentik_notify_backend_v0_meta_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabasePoolSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_notify_backend_v0_meta_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_notify_backend_v0_meta_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDBPoolSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_notify_backend_v0_meta_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDBPoolSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_notify_backend_v0_meta_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDBPoolSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_notify_backend_v0_meta_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDBPoolSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_notify_backend_v0_meta_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDBStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_notify_backend_v0_meta_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDBStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_notify_backend_v0_meta_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaEnvResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_notify_backend_v0_meta_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_notify_backend_v0_meta_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogLevelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_notify_backend_v0_meta_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogJSONModeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kentik_notify_backend_v0_meta_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogJSONModeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kentik_notify_backend_v0_meta_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kentik_notify_backend_v0_meta_proto_goTypes,
		DependencyIndexes: file_kentik_notify_backend_v0_meta_proto_depIdxs,
		MessageInfos:      file_kentik_notify_backend_v0_meta_proto_msgTypes,
	}.Build()
	File_kentik_notify_backend_v0_meta_proto = out.File
	file_kentik_notify_backend_v0_meta_proto_rawDesc = nil
	file_kentik_notify_backend_v0_meta_proto_goTypes = nil
	file_kentik_notify_backend_v0_meta_proto_depIdxs = nil
}
