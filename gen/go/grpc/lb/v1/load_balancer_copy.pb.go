// Code generated by protoc-gen-go-copy. DO NOT EDIT.
// source: grpc/lb/v1/load_balancer.proto

package grpc_lb_v1

import "google.golang.org/protobuf/types/known/durationpb"
import "google.golang.org/protobuf/types/known/timestamppb"

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *LoadBalanceRequest) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *LoadBalanceRequest:
		x.LoadBalanceRequestType = v.GetLoadBalanceRequestType()
	default:
		if v, ok := v.(interface {
			GetLoadBalanceRequestType() isLoadBalanceRequest_LoadBalanceRequestType
		}); ok {
			x.LoadBalanceRequestType = v.GetLoadBalanceRequestType()
		} else {
			func() {
				if v, ok := v.(interface {
					GetInitialRequest() *InitialLoadBalanceRequest
				}); ok {
					var defaultValue *InitialLoadBalanceRequest
					if v := v.GetInitialRequest(); v != defaultValue {
						x.LoadBalanceRequestType = &LoadBalanceRequest_InitialRequest{InitialRequest: v}
						return
					}
				}
				if v, ok := v.(interface{ GetClientStats() *ClientStats }); ok {
					var defaultValue *ClientStats
					if v := v.GetClientStats(); v != defaultValue {
						x.LoadBalanceRequestType = &LoadBalanceRequest_ClientStats{ClientStats: v}
						return
					}
				}
			}()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *LoadBalanceRequest) Proto_ShallowClone() (c *LoadBalanceRequest) {
	if x != nil {
		c = new(LoadBalanceRequest)
		c.LoadBalanceRequestType = x.LoadBalanceRequestType
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *InitialLoadBalanceRequest) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *InitialLoadBalanceRequest:
		x.Name = v.GetName()
	default:
		if v, ok := v.(interface{ GetName() string }); ok {
			x.Name = v.GetName()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *InitialLoadBalanceRequest) Proto_ShallowClone() (c *InitialLoadBalanceRequest) {
	if x != nil {
		c = new(InitialLoadBalanceRequest)
		c.Name = x.Name
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *ClientStatsPerToken) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *ClientStatsPerToken:
		x.LoadBalanceToken = v.GetLoadBalanceToken()
		x.NumCalls = v.GetNumCalls()
	default:
		if v, ok := v.(interface{ GetLoadBalanceToken() string }); ok {
			x.LoadBalanceToken = v.GetLoadBalanceToken()
		}
		if v, ok := v.(interface{ GetNumCalls() int64 }); ok {
			x.NumCalls = v.GetNumCalls()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *ClientStatsPerToken) Proto_ShallowClone() (c *ClientStatsPerToken) {
	if x != nil {
		c = new(ClientStatsPerToken)
		c.LoadBalanceToken = x.LoadBalanceToken
		c.NumCalls = x.NumCalls
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *ClientStats) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *ClientStats:
		x.Timestamp = v.GetTimestamp()
		x.NumCallsStarted = v.GetNumCallsStarted()
		x.NumCallsFinished = v.GetNumCallsFinished()
		x.NumCallsFinishedWithClientFailedToSend = v.GetNumCallsFinishedWithClientFailedToSend()
		x.NumCallsFinishedKnownReceived = v.GetNumCallsFinishedKnownReceived()
		x.CallsFinishedWithDrop = v.GetCallsFinishedWithDrop()
	default:
		if v, ok := v.(interface{ GetTimestamp() *timestamppb.Timestamp }); ok {
			x.Timestamp = v.GetTimestamp()
		}
		if v, ok := v.(interface{ GetNumCallsStarted() int64 }); ok {
			x.NumCallsStarted = v.GetNumCallsStarted()
		}
		if v, ok := v.(interface{ GetNumCallsFinished() int64 }); ok {
			x.NumCallsFinished = v.GetNumCallsFinished()
		}
		if v, ok := v.(interface{ GetNumCallsFinishedWithClientFailedToSend() int64 }); ok {
			x.NumCallsFinishedWithClientFailedToSend = v.GetNumCallsFinishedWithClientFailedToSend()
		}
		if v, ok := v.(interface{ GetNumCallsFinishedKnownReceived() int64 }); ok {
			x.NumCallsFinishedKnownReceived = v.GetNumCallsFinishedKnownReceived()
		}
		if v, ok := v.(interface{ GetCallsFinishedWithDrop() []*ClientStatsPerToken }); ok {
			x.CallsFinishedWithDrop = v.GetCallsFinishedWithDrop()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *ClientStats) Proto_ShallowClone() (c *ClientStats) {
	if x != nil {
		c = new(ClientStats)
		c.Timestamp = x.Timestamp
		c.NumCallsStarted = x.NumCallsStarted
		c.NumCallsFinished = x.NumCallsFinished
		c.NumCallsFinishedWithClientFailedToSend = x.NumCallsFinishedWithClientFailedToSend
		c.NumCallsFinishedKnownReceived = x.NumCallsFinishedKnownReceived
		c.CallsFinishedWithDrop = x.CallsFinishedWithDrop
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *LoadBalanceResponse) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *LoadBalanceResponse:
		x.LoadBalanceResponseType = v.GetLoadBalanceResponseType()
	default:
		if v, ok := v.(interface {
			GetLoadBalanceResponseType() isLoadBalanceResponse_LoadBalanceResponseType
		}); ok {
			x.LoadBalanceResponseType = v.GetLoadBalanceResponseType()
		} else {
			func() {
				if v, ok := v.(interface {
					GetInitialResponse() *InitialLoadBalanceResponse
				}); ok {
					var defaultValue *InitialLoadBalanceResponse
					if v := v.GetInitialResponse(); v != defaultValue {
						x.LoadBalanceResponseType = &LoadBalanceResponse_InitialResponse{InitialResponse: v}
						return
					}
				}
				if v, ok := v.(interface{ GetServerList() *ServerList }); ok {
					var defaultValue *ServerList
					if v := v.GetServerList(); v != defaultValue {
						x.LoadBalanceResponseType = &LoadBalanceResponse_ServerList{ServerList: v}
						return
					}
				}
				if v, ok := v.(interface{ GetFallbackResponse() *FallbackResponse }); ok {
					var defaultValue *FallbackResponse
					if v := v.GetFallbackResponse(); v != defaultValue {
						x.LoadBalanceResponseType = &LoadBalanceResponse_FallbackResponse{FallbackResponse: v}
						return
					}
				}
			}()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *LoadBalanceResponse) Proto_ShallowClone() (c *LoadBalanceResponse) {
	if x != nil {
		c = new(LoadBalanceResponse)
		c.LoadBalanceResponseType = x.LoadBalanceResponseType
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *InitialLoadBalanceResponse) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *InitialLoadBalanceResponse:
		x.LoadBalancerDelegate = v.GetLoadBalancerDelegate()
		x.ClientStatsReportInterval = v.GetClientStatsReportInterval()
	default:
		if v, ok := v.(interface{ GetLoadBalancerDelegate() string }); ok {
			x.LoadBalancerDelegate = v.GetLoadBalancerDelegate()
		}
		if v, ok := v.(interface{ GetClientStatsReportInterval() *durationpb.Duration }); ok {
			x.ClientStatsReportInterval = v.GetClientStatsReportInterval()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *InitialLoadBalanceResponse) Proto_ShallowClone() (c *InitialLoadBalanceResponse) {
	if x != nil {
		c = new(InitialLoadBalanceResponse)
		c.LoadBalancerDelegate = x.LoadBalancerDelegate
		c.ClientStatsReportInterval = x.ClientStatsReportInterval
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *ServerList) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *ServerList:
		x.Servers = v.GetServers()
	default:
		if v, ok := v.(interface{ GetServers() []*Server }); ok {
			x.Servers = v.GetServers()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *ServerList) Proto_ShallowClone() (c *ServerList) {
	if x != nil {
		c = new(ServerList)
		c.Servers = x.Servers
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *Server) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *Server:
		x.IpAddress = v.GetIpAddress()
		x.Port = v.GetPort()
		x.LoadBalanceToken = v.GetLoadBalanceToken()
		x.Drop = v.GetDrop()
	default:
		if v, ok := v.(interface{ GetIpAddress() []byte }); ok {
			x.IpAddress = v.GetIpAddress()
		}
		if v, ok := v.(interface{ GetPort() rune }); ok {
			x.Port = v.GetPort()
		}
		if v, ok := v.(interface{ GetLoadBalanceToken() string }); ok {
			x.LoadBalanceToken = v.GetLoadBalanceToken()
		}
		if v, ok := v.(interface{ GetDrop() bool }); ok {
			x.Drop = v.GetDrop()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *Server) Proto_ShallowClone() (c *Server) {
	if x != nil {
		c = new(Server)
		c.IpAddress = x.IpAddress
		c.Port = x.Port
		c.LoadBalanceToken = x.LoadBalanceToken
		c.Drop = x.Drop
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *FallbackResponse) Proto_ShallowCopy(v interface{}) {
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *FallbackResponse) Proto_ShallowClone() (c *FallbackResponse) {
	if x != nil {
		c = new(FallbackResponse)
	}
	return
}
