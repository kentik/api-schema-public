// Code generated by protoc-gen-go-copy. DO NOT EDIT.
// source: grpc/health/v1/health.proto

package grpc_health_v1

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *HealthCheckRequest) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *HealthCheckRequest:
		x.Service = v.GetService()
	default:
		if v, ok := v.(interface{ GetService() string }); ok {
			x.Service = v.GetService()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *HealthCheckRequest) Proto_ShallowClone() (c *HealthCheckRequest) {
	if x != nil {
		c = new(HealthCheckRequest)
		c.Service = x.Service
	}
	return
}

// Proto_ShallowCopy copies fields, from v to the receiver, using field getters.
// Note that v is of an arbitrary type, which may implement any number of the
// field getters, which are defined as any methods of the same signature as those
// generated for the receiver type, with a name starting with Get.
func (x *HealthCheckResponse) Proto_ShallowCopy(v interface{}) {
	switch v := v.(type) {
	case *HealthCheckResponse:
		x.Status = v.GetStatus()
	default:
		if v, ok := v.(interface {
			GetStatus() HealthCheckResponse_ServingStatus
		}); ok {
			x.Status = v.GetStatus()
		}
	}
}

// Proto_ShallowClone returns a shallow copy of the receiver or nil if it's nil.
func (x *HealthCheckResponse) Proto_ShallowClone() (c *HealthCheckResponse) {
	if x != nil {
		c = new(HealthCheckResponse)
		c.Status = x.Status
	}
	return
}
