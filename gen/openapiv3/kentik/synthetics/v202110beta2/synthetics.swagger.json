{
    "openapi": "3.0.0",
    "info": {
        "title": "Synthetics Monitoring API",
        "version": "202110beta2",
        "contact": {
            "name": "Kentik API Engineering",
            "url": "https://github.com/kentik/api"
        }
    },
    "tags": [
        {
            "name": "SyntheticsDataService"
        },
        {
            "name": "SyntheticsAdminService"
        }
    ],
    "paths": {
        "/synthetics/v202110beta2/agents": {
            "get": {
                "summary": "List Agents.",
                "description": "Returns a list of agents.",
                "operationId": "AgentsList",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v202110beta2ListAgentsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "SyntheticsAdminService"
                ]
            }
        },
        "/synthetics/v202110beta2/agents/{agent.id}": {
            "put": {
                "summary": "Update an agent.",
                "description": "Update configuration of a synthetics agent.",
                "operationId": "AgentUpdate",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v202110beta2UpdateAgentResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agent.id",
                        "description": "id of this agent.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v202110beta2UpdateAgentRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "SyntheticsAdminService"
                ]
            },
            "get": {
                "summary": "Get information about an agent.",
                "description": "Returns information about the agent specified with id.",
                "operationId": "AgentGet",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v202110beta2GetAgentResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agent.id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "SyntheticsAdminService"
                ]
            },
            "delete": {
                "summary": "Delete an agent.",
                "description": "Deletes the agent specified with id.",
                "operationId": "AgentDelete",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v202110beta2DeleteAgentResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agent.id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "SyntheticsAdminService"
                ]
            }
        },
        "/synthetics/v202110beta2/results/health": {
            "post": {
                "summary": "Get health status for synthetics test.",
                "description": "Get synthetics health test for login user. Also returns mesh data on request.",
                "operationId": "GetHealthForTests",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v202110beta2GetHealthForTestsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v202110beta2GetHealthForTestsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "SyntheticsDataService"
                ]
            }
        },
        "/synthetics/v202110beta2/results/trace": {
            "post": {
                "summary": "Get trace route data.",
                "description": "Get trace route data for the specific test id.",
                "operationId": "GetTraceForTest",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v202110beta2GetTraceForTestResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v202110beta2GetTraceForTestRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "SyntheticsDataService"
                ]
            }
        },
        "/synthetics/v202110beta2/tests": {
            "get": {
                "summary": "List Synthetics Tests.",
                "description": "Returns a list of syntehtics tests.",
                "operationId": "TestsList",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v202110beta2ListTestsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "SyntheticsAdminService"
                ]
            },
            "post": {
                "summary": "Create Synthetics Test.",
                "description": "Create synthetics test from request. Returns created test.",
                "operationId": "TestCreate",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v202110beta2CreateTestResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v202110beta2CreateTestRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "SyntheticsAdminService"
                ]
            }
        },
        "/synthetics/v202110beta2/tests/{id}": {
            "get": {
                "summary": "Get information about Synthetics Test.",
                "description": "Returns information about synthetics test specified with test ID.",
                "operationId": "TestGet",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v202110beta2GetTestResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "SyntheticsAdminService"
                ]
            },
            "delete": {
                "summary": "Delete an Synthetics Test.",
                "description": "Deletes the synthetics test specified with id.",
                "operationId": "TestDelete",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v202110beta2DeleteTestResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "SyntheticsAdminService"
                ]
            },
            "put": {
                "summary": "Update a Synthetics Test.",
                "description": "Updates configuration of a synthetic test.",
                "operationId": "TestUpdate",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v202110beta2UpdateTestResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v202110beta2UpdateTestRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "SyntheticsAdminService"
                ]
            }
        }
    },
    "security": [
        {
            "email": [],
            "token": []
        }
    ],
    "externalDocs": {
        "description": "More about Kentik APIs",
        "url": "https://docs.kentik.com/api"
    },
    "components": {
        "securitySchemes": {
            "email": {
                "type": "apiKey",
                "name": "X-CH-Auth-Email",
                "in": "header"
            },
            "token": {
                "type": "apiKey",
                "name": "X-CH-Auth-API-Token",
                "in": "header"
            }
        },
        "schemas": {
            "protobufAny": {
                "type": "object",
                "properties": {
                    "typeUrl": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string",
                        "format": "byte"
                    }
                }
            },
            "rpcStatus": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/protobufAny"
                        }
                    }
                }
            },
            "v202110beta2ASN": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "v202110beta2Agent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "id of this agent."
                    },
                    "siteName": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/v202110beta2AgentStatus"
                    },
                    "alias": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "os": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "lat": {
                        "type": "number",
                        "format": "double"
                    },
                    "long": {
                        "type": "number",
                        "format": "double"
                    },
                    "lastAuthed": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "family": {
                        "$ref": "#/components/schemas/v202110beta2IPFamily"
                    },
                    "asn": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "siteId": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "testIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "localIp": {
                        "type": "string"
                    },
                    "cloudRegion": {
                        "type": "string"
                    },
                    "cloudProvider": {
                        "type": "string"
                    },
                    "agentImpl": {
                        "$ref": "#/components/schemas/v202110beta2ImplementType"
                    }
                }
            },
            "v202110beta2AgentHealth": {
                "type": "object",
                "properties": {
                    "agent": {
                        "$ref": "#/components/schemas/v202110beta2Agent"
                    },
                    "health": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202110beta2HealthMoment"
                        }
                    },
                    "overallHealth": {
                        "$ref": "#/components/schemas/v202110beta2Health"
                    }
                }
            },
            "v202110beta2AgentStatus": {
                "type": "string",
                "enum": [
                    "AGENT_STATUS_UNSPECIFIED",
                    "AGENT_STATUS_OK",
                    "AGENT_STATUS_WAIT",
                    "AGENT_STATUS_DELETED"
                ],
                "default": "AGENT_STATUS_UNSPECIFIED"
            },
            "v202110beta2AgentTaskConfig": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "v202110beta2AgentTest": {
                "type": "object",
                "properties": {
                    "target": {
                        "type": "string"
                    }
                }
            },
            "v202110beta2City": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "v202110beta2Country": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "v202110beta2CreateTestRequest": {
                "type": "object",
                "properties": {
                    "test": {
                        "$ref": "#/components/schemas/v202110beta2Test"
                    }
                }
            },
            "v202110beta2CreateTestResponse": {
                "type": "object",
                "properties": {
                    "test": {
                        "$ref": "#/components/schemas/v202110beta2Test"
                    }
                }
            },
            "v202110beta2DNS": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "v202110beta2DNSRecord": {
                "type": "string",
                "enum": [
                    "DNS_RECORD_UNSPECIFIED",
                    "DNS_RECORD_A",
                    "DNS_RECORD_AAAA",
                    "DNS_RECORD_CNAME",
                    "DNS_RECORD_DNAME",
                    "DNS_RECORD_NS",
                    "DNS_RECORD_MX",
                    "DNS_RECORD_PTR",
                    "DNS_RECORD_SOA"
                ],
                "default": "DNS_RECORD_UNSPECIFIED"
            },
            "v202110beta2DNSTaskDefinition": {
                "type": "object",
                "properties": {
                    "target": {
                        "type": "string"
                    },
                    "period": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "expiry": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "port": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "type": {
                        "type": "string"
                    },
                    "resolver": {
                        "type": "string"
                    }
                }
            },
            "v202110beta2DeleteAgentResponse": {
                "type": "object"
            },
            "v202110beta2DeleteTestResponse": {
                "type": "object"
            },
            "v202110beta2DnsGridTest": {
                "type": "object",
                "properties": {
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "$ref": "#/components/schemas/v202110beta2DNSRecord"
                    },
                    "servers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "v202110beta2DnsTest": {
                "type": "object",
                "properties": {
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "$ref": "#/components/schemas/v202110beta2DNSRecord"
                    },
                    "servers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "v202110beta2FlowTest": {
                "type": "object",
                "properties": {
                    "target": {
                        "type": "string"
                    },
                    "targetRefreshIntervalMillis": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "maxTasks": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "type": {
                        "type": "string"
                    },
                    "inetDirection": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    }
                }
            },
            "v202110beta2Geo": {
                "type": "object",
                "properties": {
                    "country": {
                        "$ref": "#/components/schemas/v202110beta2Country"
                    },
                    "region": {
                        "$ref": "#/components/schemas/v202110beta2Region"
                    },
                    "city": {
                        "$ref": "#/components/schemas/v202110beta2City"
                    }
                }
            },
            "v202110beta2GetAgentResponse": {
                "type": "object",
                "properties": {
                    "agent": {
                        "$ref": "#/components/schemas/v202110beta2Agent"
                    }
                }
            },
            "v202110beta2GetHealthForTestsRequest": {
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of ids of the tests to get health for."
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start of the time interval for this query."
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "End of the time interval for this query."
                    },
                    "agentIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Optionally, only look at a subset of agents"
                    },
                    "taskIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Optionally only look at a subset of tasks -- this lets you limit targets."
                    },
                    "augment": {
                        "type": "boolean"
                    }
                }
            },
            "v202110beta2GetHealthForTestsResponse": {
                "type": "object",
                "properties": {
                    "health": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202110beta2TestHealth"
                        }
                    }
                }
            },
            "v202110beta2GetTestResponse": {
                "type": "object",
                "properties": {
                    "test": {
                        "$ref": "#/components/schemas/v202110beta2Test"
                    }
                }
            },
            "v202110beta2GetTraceForTestRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Test id"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start of the time interval for this query."
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "End of the time interval for this query."
                    },
                    "agentIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Optionally, limit the query to these agent ids"
                    },
                    "targetIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Optionally, limit the query to these destination IP addresses"
                    }
                }
            },
            "v202110beta2GetTraceForTestResponse": {
                "type": "object",
                "properties": {
                    "lookups": {
                        "$ref": "#/components/schemas/v202110beta2TracerouteLookup"
                    },
                    "traceRoutes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202110beta2TracerouteResult"
                        }
                    },
                    "traceRoutesInfo": {
                        "$ref": "#/components/schemas/v202110beta2TracerouteInfo"
                    }
                }
            },
            "v202110beta2HTTPConfig": {
                "type": "object",
                "properties": {
                    "method": {
                        "type": "string"
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "body": {
                        "type": "string"
                    },
                    "ignoreTlsErrors": {
                        "type": "boolean"
                    },
                    "cssSelectors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "v202110beta2HTTPTaskDefinition": {
                "type": "object",
                "properties": {
                    "target": {
                        "type": "string"
                    },
                    "period": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "expiry": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "v202110beta2Health": {
                "type": "object",
                "properties": {
                    "health": {
                        "type": "string"
                    },
                    "time": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "v202110beta2HealthMoment": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "srcIp": {
                        "type": "string"
                    },
                    "dstIp": {
                        "type": "string"
                    },
                    "packetLoss": {
                        "type": "number",
                        "format": "double"
                    },
                    "avgLatency": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "avgWeightedLatency": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "rollingAvgLatency": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "rollingStddevLatency": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "rollingAvgWeightedLatency": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "latencyHealth": {
                        "type": "string"
                    },
                    "packetLossHealth": {
                        "type": "string"
                    },
                    "overallHealth": {
                        "$ref": "#/components/schemas/v202110beta2Health"
                    },
                    "avgJitter": {
                        "type": "integer",
                        "format": "int64",
                        "title": "fields returned from backend grpc service"
                    },
                    "rollingAvgJitter": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "rollingStdJitter": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "jitterHealth": {
                        "type": "string"
                    },
                    "data": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "taskType": {
                        "type": "string"
                    }
                }
            },
            "v202110beta2HealthSettings": {
                "type": "object",
                "properties": {
                    "latencyCritical": {
                        "type": "number",
                        "format": "float"
                    },
                    "latencyWarning": {
                        "type": "number",
                        "format": "float"
                    },
                    "packetLossCritical": {
                        "type": "number",
                        "format": "float"
                    },
                    "packetLossWarning": {
                        "type": "number",
                        "format": "float"
                    },
                    "jitterCritical": {
                        "type": "number",
                        "format": "float"
                    },
                    "jitterWarning": {
                        "type": "number",
                        "format": "float"
                    },
                    "httpLatencyCritical": {
                        "type": "number",
                        "format": "float"
                    },
                    "httpLatencyWarning": {
                        "type": "number",
                        "format": "float"
                    },
                    "httpValidCodes": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "dnsValidCodes": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "latencyCriticalStddev": {
                        "type": "number",
                        "format": "float"
                    },
                    "latencyWarningStddev": {
                        "type": "number",
                        "format": "float"
                    },
                    "jitterCriticalStddev": {
                        "type": "number",
                        "format": "float"
                    },
                    "jitterWarningStddev": {
                        "type": "number",
                        "format": "float"
                    },
                    "httpLatencyCriticalStddev": {
                        "type": "number",
                        "format": "float"
                    },
                    "httpLatencyWarningStddev": {
                        "type": "number",
                        "format": "float"
                    },
                    "unhealthySubtestThreshold": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "v202110beta2HostnameTest": {
                "type": "object",
                "properties": {
                    "target": {
                        "type": "string"
                    }
                }
            },
            "v202110beta2IDByIP": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "ID value of type"
                    },
                    "ip": {
                        "type": "string",
                        "title": "IP address associate with IP"
                    }
                },
                "title": "ID type for the specified IP address"
            },
            "v202110beta2IPFamily": {
                "type": "string",
                "enum": [
                    "IP_FAMILY_UNSPECIFIED",
                    "IP_FAMILY_V4",
                    "IP_FAMILY_V6",
                    "IP_FAMILY_DUAL"
                ],
                "default": "IP_FAMILY_UNSPECIFIED"
            },
            "v202110beta2IPInfo": {
                "type": "object",
                "properties": {
                    "ip": {
                        "type": "string"
                    },
                    "asn": {
                        "$ref": "#/components/schemas/v202110beta2ASN"
                    },
                    "geo": {
                        "$ref": "#/components/schemas/v202110beta2Geo"
                    },
                    "dns": {
                        "$ref": "#/components/schemas/v202110beta2DNS"
                    },
                    "deviceId": {
                        "type": "string"
                    },
                    "siteId": {
                        "type": "string"
                    },
                    "egress": {
                        "type": "string"
                    }
                }
            },
            "v202110beta2ImplementType": {
                "type": "string",
                "enum": [
                    "IMPLEMENT_TYPE_UNSPECIFIED",
                    "IMPLEMENT_TYPE_RUST",
                    "IMPLEMENT_TYPE_NODE"
                ],
                "default": "IMPLEMENT_TYPE_UNSPECIFIED",
                "description": "Agent impl type determines global vs private agent to use for specific test types.\n\n - IMPLEMENT_TYPE_RUST: setup IP test against a NODE global agent will fail.\n - IMPLEMENT_TYPE_NODE: setup a page load test against a RUST global agent will fail."
            },
            "v202110beta2IpTest": {
                "type": "object",
                "properties": {
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "v202110beta2ListAgentsResponse": {
                "type": "object",
                "properties": {
                    "agents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202110beta2Agent"
                        }
                    },
                    "invalidCount": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "v202110beta2ListTestsResponse": {
                "type": "object",
                "properties": {
                    "tests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202110beta2Test"
                        }
                    },
                    "invalidCount": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "v202110beta2MeshColumn": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "alias": {
                        "type": "string"
                    },
                    "target": {
                        "type": "string"
                    },
                    "metrics": {
                        "$ref": "#/components/schemas/v202110beta2MeshMetrics"
                    },
                    "health": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202110beta2MeshMetrics"
                        }
                    }
                }
            },
            "v202110beta2MeshMetric": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "health": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "v202110beta2MeshMetrics": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "latency": {
                        "$ref": "#/components/schemas/v202110beta2MeshMetric"
                    },
                    "packetLoss": {
                        "$ref": "#/components/schemas/v202110beta2MeshMetric"
                    },
                    "jitter": {
                        "$ref": "#/components/schemas/v202110beta2MeshMetric"
                    }
                }
            },
            "v202110beta2MeshResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "localIp": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "alias": {
                        "type": "string"
                    },
                    "columns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202110beta2MeshColumn"
                        }
                    }
                }
            },
            "v202110beta2NetworkGridTest": {
                "type": "object",
                "properties": {
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "v202110beta2PageLoadTest": {
                "type": "object",
                "properties": {
                    "target": {
                        "type": "string"
                    },
                    "expiry": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "http": {
                        "$ref": "#/components/schemas/v202110beta2HTTPConfig"
                    }
                }
            },
            "v202110beta2PingTaskDefinition": {
                "type": "object",
                "properties": {
                    "target": {
                        "type": "string"
                    },
                    "period": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "expiry": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "protocol": {
                        "type": "string"
                    }
                }
            },
            "v202110beta2Region": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "v202110beta2ShakeTaskDefinition": {
                "type": "object",
                "properties": {
                    "target": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "period": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "expiry": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "v202110beta2Stats": {
                "type": "object",
                "properties": {
                    "average": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Average statistic"
                    },
                    "max": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Maximum statistic"
                    },
                    "total": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Total statistic"
                    }
                },
                "title": "Statistics for traceroute count"
            },
            "v202110beta2Task": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "testId": {
                        "type": "string"
                    },
                    "deviceId": {
                        "type": "string"
                    },
                    "state": {
                        "$ref": "#/components/schemas/v202110beta2TaskState"
                    },
                    "status": {
                        "type": "string"
                    },
                    "family": {
                        "$ref": "#/components/schemas/v202110beta2IPFamily"
                    },
                    "ping": {
                        "$ref": "#/components/schemas/v202110beta2PingTaskDefinition"
                    },
                    "traceroute": {
                        "$ref": "#/components/schemas/v202110beta2TraceTaskDefinition"
                    },
                    "http": {
                        "$ref": "#/components/schemas/v202110beta2HTTPTaskDefinition"
                    },
                    "dns": {
                        "$ref": "#/components/schemas/v202110beta2DNSTaskDefinition"
                    },
                    "shake": {
                        "$ref": "#/components/schemas/v202110beta2ShakeTaskDefinition"
                    }
                }
            },
            "v202110beta2TaskHealth": {
                "type": "object",
                "properties": {
                    "task": {
                        "$ref": "#/components/schemas/v202110beta2Task"
                    },
                    "agents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202110beta2AgentHealth"
                        }
                    },
                    "overallHealth": {
                        "$ref": "#/components/schemas/v202110beta2Health"
                    },
                    "targetAgent": {
                        "$ref": "#/components/schemas/v202110beta2Agent"
                    }
                }
            },
            "v202110beta2TaskState": {
                "type": "string",
                "enum": [
                    "TASK_STATE_UNSPECIFIED",
                    "TASK_STATE_CREATED",
                    "TASK_STATE_UPDATED",
                    "TASK_STATE_DELETED"
                ],
                "default": "TASK_STATE_UNSPECIFIED"
            },
            "v202110beta2Test": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/v202110beta2TestStatus"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/v202110beta2TestSettings"
                    },
                    "cdate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "edate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/v202110beta2UserInfo"
                    },
                    "lastUpdatedBy": {
                        "$ref": "#/components/schemas/v202110beta2UserInfo"
                    }
                }
            },
            "v202110beta2TestHealth": {
                "type": "object",
                "properties": {
                    "testId": {
                        "type": "string"
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202110beta2TaskHealth"
                        }
                    },
                    "overallHealth": {
                        "$ref": "#/components/schemas/v202110beta2Health"
                    },
                    "healthTs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202110beta2Health"
                        }
                    },
                    "agentTaskConfig": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202110beta2AgentTaskConfig"
                        }
                    },
                    "mesh": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202110beta2MeshResponse"
                        }
                    }
                }
            },
            "v202110beta2TestPingSettings": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "expiry": {
                        "type": "number",
                        "format": "float"
                    },
                    "delay": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "v202110beta2TestSettings": {
                "type": "object",
                "properties": {
                    "hostname": {
                        "$ref": "#/components/schemas/v202110beta2HostnameTest"
                    },
                    "ip": {
                        "$ref": "#/components/schemas/v202110beta2IpTest"
                    },
                    "agent": {
                        "$ref": "#/components/schemas/v202110beta2AgentTest"
                    },
                    "flow": {
                        "$ref": "#/components/schemas/v202110beta2FlowTest"
                    },
                    "dns": {
                        "$ref": "#/components/schemas/v202110beta2DnsTest"
                    },
                    "url": {
                        "$ref": "#/components/schemas/v202110beta2UrlTest"
                    },
                    "networkGrid": {
                        "$ref": "#/components/schemas/v202110beta2NetworkGridTest"
                    },
                    "pageLoad": {
                        "$ref": "#/components/schemas/v202110beta2PageLoadTest"
                    },
                    "dnsGrid": {
                        "$ref": "#/components/schemas/v202110beta2DnsGridTest"
                    },
                    "agentIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "healthSettings": {
                        "$ref": "#/components/schemas/v202110beta2HealthSettings"
                    },
                    "ping": {
                        "$ref": "#/components/schemas/v202110beta2TestPingSettings"
                    },
                    "trace": {
                        "$ref": "#/components/schemas/v202110beta2TestTraceSettings"
                    },
                    "period": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "family": {
                        "$ref": "#/components/schemas/v202110beta2IPFamily"
                    },
                    "notificationChannels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "v202110beta2TestStatus": {
                "type": "string",
                "enum": [
                    "TEST_STATUS_UNSPECIFIED",
                    "TEST_STATUS_ACTIVE",
                    "TEST_STATUS_PAUSED",
                    "TEST_STATUS_DELETED"
                ],
                "default": "TEST_STATUS_UNSPECIFIED"
            },
            "v202110beta2TestTraceSettings": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "expiry": {
                        "type": "number",
                        "format": "float"
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "delay": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "v202110beta2Trace": {
                "type": "object",
                "properties": {
                    "agentId": {
                        "type": "string",
                        "title": "ID of agent for the trace"
                    },
                    "agentIp": {
                        "type": "string",
                        "title": "IP of agent for the trace"
                    },
                    "targetIp": {
                        "type": "string",
                        "title": "Remote target IP"
                    },
                    "hopCount": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Number of hops for the trace"
                    },
                    "probes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202110beta2TraceProbe"
                        },
                        "title": "Probing info"
                    }
                },
                "title": "Trace detail"
            },
            "v202110beta2TraceHop": {
                "type": "object",
                "properties": {
                    "ttl": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "timeout": {
                        "type": "boolean"
                    },
                    "latency": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "minExpectedLatency": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "asn": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "site": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "region": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "target": {
                        "type": "boolean"
                    },
                    "traceEnd": {
                        "type": "boolean"
                    }
                }
            },
            "v202110beta2TraceProbe": {
                "type": "object",
                "properties": {
                    "asPath": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "title": "AS path"
                    },
                    "completed": {
                        "type": "boolean",
                        "title": "Completed probe"
                    },
                    "hopCount": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Hop count"
                    },
                    "regionPath": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Region path trace"
                    },
                    "sitePath": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "title": "Site path trace"
                    },
                    "hops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202110beta2TraceHop"
                        }
                    }
                },
                "title": "Probing detail"
            },
            "v202110beta2TraceTaskDefinition": {
                "type": "object",
                "properties": {
                    "target": {
                        "type": "string"
                    },
                    "period": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "expiry": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "v202110beta2TracerouteInfo": {
                "type": "object",
                "properties": {
                    "isTraceRoutesTruncated": {
                        "type": "boolean",
                        "title": "Indicate trace route is trunciated"
                    },
                    "maxAsnPathCount": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Maximum number of asn path"
                    },
                    "maxSitePathCount": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Maximum number of site path"
                    },
                    "maxRegionPathCount": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Maximum number of region path"
                    }
                },
                "title": "Traceroute info"
            },
            "v202110beta2TracerouteLookup": {
                "type": "object",
                "properties": {
                    "agentIdByIp": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202110beta2IDByIP"
                        },
                        "title": "Agent ID by IP"
                    },
                    "agents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202110beta2Agent"
                        },
                        "title": "Agents info"
                    },
                    "asns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202110beta2ASN"
                        },
                        "title": "ASN"
                    },
                    "deviceIdByIp": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202110beta2IDByIP"
                        },
                        "title": "Device ID by IP"
                    },
                    "siteIdByIp": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202110beta2IDByIP"
                        },
                        "title": "Site ID by IP"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202110beta2IPInfo"
                        },
                        "title": "IP Info"
                    }
                },
                "title": "Traceroute lookup info"
            },
            "v202110beta2TracerouteResult": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "traces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202110beta2Trace"
                        }
                    },
                    "hopCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "count": {
                        "$ref": "#/components/schemas/v202110beta2Stats"
                    },
                    "distance": {
                        "$ref": "#/components/schemas/v202110beta2Stats"
                    }
                }
            },
            "v202110beta2UpdateAgentRequest": {
                "type": "object",
                "properties": {
                    "agent": {
                        "$ref": "#/components/schemas/v202110beta2Agent"
                    }
                }
            },
            "v202110beta2UpdateAgentResponse": {
                "type": "object",
                "properties": {
                    "agent": {
                        "$ref": "#/components/schemas/v202110beta2Agent"
                    }
                }
            },
            "v202110beta2UpdateTestRequest": {
                "type": "object",
                "properties": {
                    "test": {
                        "$ref": "#/components/schemas/v202110beta2Test"
                    }
                }
            },
            "v202110beta2UpdateTestResponse": {
                "type": "object",
                "properties": {
                    "test": {
                        "$ref": "#/components/schemas/v202110beta2Test"
                    }
                }
            },
            "v202110beta2UrlTest": {
                "type": "object",
                "properties": {
                    "target": {
                        "type": "string"
                    },
                    "expiry": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "http": {
                        "$ref": "#/components/schemas/v202110beta2HTTPConfig"
                    }
                }
            },
            "v202110beta2UserInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "fullName": {
                        "type": "string"
                    }
                }
            }
        }
    }
}
