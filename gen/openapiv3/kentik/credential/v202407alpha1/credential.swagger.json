{
    "openapi": "3.0.0",
    "info": {
        "title": "Credentials Vault API",
        "description": "# Overview\nThe Credentials Vault API enables programmatic access to credential information in Kentik Credential Vault.\n",
        "version": "v202407alpha1",
        "contact": {
            "name": "Kentik API Engineering",
            "url": "https://github.com/kentik/api-schema-public"
        }
    },
    "tags": [
        {
            "name": "CredentialService"
        }
    ],
    "paths": {
        "/credential/v202407alpha1/group": {
            "get": {
                "summary": "List credential groups.",
                "description": "Returns list of credential group information in Kentik vault.",
                "operationId": "ListCredentialGroup",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v202407alpha1ListCredentialGroupResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "CredentialService"
                ]
            }
        },
        "/credential/v202407alpha1/group/{id}": {
            "get": {
                "summary": "Get a credential group by id.",
                "description": "Returns specific credential group information in Kentik vault.",
                "operationId": "GetCredentialGroup",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v202407alpha1GetCredentialGroupResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "CredentialService"
                ]
            }
        }
    },
    "security": [
        {
            "email": [],
            "token": []
        }
    ],
    "externalDocs": {
        "description": "General information about Kentik APIs",
        "url": "https://kb.kentik.com/v0/Ab09.htm#Ab09-APIs_Overview"
    },
    "components": {
        "securitySchemes": {
            "email": {
                "type": "apiKey",
                "name": "X-CH-Auth-Email",
                "in": "header"
            },
            "token": {
                "type": "apiKey",
                "name": "X-CH-Auth-API-Token",
                "in": "header"
            }
        },
        "schemas": {
            "protobufAny": {
                "type": "object",
                "properties": {
                    "typeUrl": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string",
                        "format": "byte"
                    }
                }
            },
            "rpcStatus": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/protobufAny"
                        }
                    }
                }
            },
            "v202211PermissionEntry": {
                "type": "object",
                "properties": {
                    "capability": {
                        "type": "string",
                        "description": "String identifying capability that is granted of denied",
                        "required": [
                            "capability"
                        ]
                    },
                    "allowed": {
                        "type": "boolean",
                        "description": "Flag indicating whether operation is allowed",
                        "required": [
                            "allowed"
                        ]
                    }
                },
                "title": "PermissionEntry",
                "required": [
                    "capability",
                    "allowed"
                ]
            },
            "v202211Role": {
                "type": "string",
                "enum": [
                    "ROLE_UNSPECIFIED",
                    "ROLE_MEMBER",
                    "ROLE_ADMINISTRATOR",
                    "ROLE_SUPER_ADMINISTRATOR"
                ],
                "default": "ROLE_UNSPECIFIED",
                "description": "- ROLE_UNSPECIFIED: Invalid value.\n - ROLE_MEMBER: Member\n - ROLE_ADMINISTRATOR: Administrator\n - ROLE_SUPER_ADMINISTRATOR: Super-administrator",
                "title": "Role"
            },
            "v202211User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "System generated unique identifier",
                        "readOnly": true
                    },
                    "userEmail": {
                        "type": "string",
                        "description": "User e-mail address (serves also as username)",
                        "required": [
                            "user_email"
                        ]
                    },
                    "userFullName": {
                        "type": "string",
                        "description": "Full name",
                        "required": [
                            "user_full_name"
                        ]
                    },
                    "role": {
                        "$ref": "#/components/schemas/v202211Role"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202211PermissionEntry"
                        },
                        "description": "Optional list of permissions granted to the user"
                    },
                    "filter": {
                        "type": "string",
                        "description": "Optional JSON string defining filter for objects visible to the user"
                    },
                    "lastLogin": {
                        "type": "string",
                        "format": "date-time",
                        "description": "UTC Timestamp of user's last login session",
                        "readOnly": true
                    },
                    "cdate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp (UTC)",
                        "readOnly": true
                    },
                    "edate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last modification timestamp (UTC)",
                        "readOnly": true
                    }
                },
                "title": "User",
                "required": [
                    "userEmail",
                    "userFullName",
                    "role"
                ]
            },
            "v202312alpha1Secret": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The secret's name",
                        "required": [
                            "name"
                        ]
                    },
                    "value": {
                        "type": "string",
                        "description": "The secret's actual value",
                        "required": [
                            "value"
                        ]
                    },
                    "version": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The secret's version",
                        "required": [
                            "version"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "description": "Purpose of this secret"
                    },
                    "type": {
                        "$ref": "#/components/schemas/v202312alpha1SecretType"
                    },
                    "id": {
                        "type": "string",
                        "description": "The secret's identifier",
                        "required": [
                            "id"
                        ]
                    }
                },
                "title": "Secret",
                "required": [
                    "name",
                    "value",
                    "version",
                    "id"
                ]
            },
            "v202312alpha1SecretType": {
                "type": "string",
                "enum": [
                    "SECRET_TYPE_UNSPECIFIED",
                    "SECRET_TYPE_BASIC_AUTH",
                    "SECRET_TYPE_SNMP_V1",
                    "SECRET_TYPE_SNMP_V2C",
                    "SECRET_TYPE_SNMP_V3",
                    "SECRET_TYPE_STREAMING_TELEMETRY",
                    "SECRET_TYPE_BGP_MD5",
                    "SECRET_TYPE_API_TOKEN",
                    "SECRET_TYPE_OTHER"
                ],
                "default": "SECRET_TYPE_UNSPECIFIED",
                "title": "SecretType"
            },
            "v202407alpha1CredentialGroup": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The secret's version",
                        "required": [
                            "version"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "description": "Purpose of this secret"
                    },
                    "type": {
                        "$ref": "#/components/schemas/v202312alpha1SecretType"
                    },
                    "cdate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "edate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/v202211User"
                    },
                    "credentials": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202312alpha1Secret"
                        }
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "version"
                ]
            },
            "v202407alpha1GetCredentialGroupResponse": {
                "type": "object",
                "properties": {
                    "group": {
                        "$ref": "#/components/schemas/v202407alpha1CredentialGroup"
                    }
                },
                "title": "GetCredentialGroupResponse"
            },
            "v202407alpha1ListCredentialGroupResponse": {
                "type": "object",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v202407alpha1CredentialGroup"
                        }
                    },
                    "invalidCount": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "title": "ListCredentialGroupResponse"
            }
        }
    }
}
