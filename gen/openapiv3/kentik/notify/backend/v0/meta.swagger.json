{
    "openapi": "3.0.0",
    "info": {
        "title": "kentik/notify/backend/v0/meta.proto",
        "version": "version not set"
    },
    "tags": [
        {
            "name": "Meta"
        }
    ],
    "paths": {
        "/notify/backend/v0/meta/db/{id}/settings": {
            "get": {
                "operationId": "Meta_SetDBPoolSettings",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0SetDBPoolSettingsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "settings.maxOpenConns",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "settings.maxIdleConns",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "settings.connMaxLifeTimeSeconds",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "settings.connMaxIdleTimeSeconds",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "tags": [
                    "Meta"
                ]
            }
        },
        "/notify/backend/v0/meta/db/{id}/stats": {
            "get": {
                "operationId": "Meta_GetDBStats",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0GetDBStatsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Meta"
                ]
            }
        },
        "/notify/backend/v0/meta/env": {
            "get": {
                "operationId": "Meta_GetEnv",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0MetaEnvResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Meta"
                ]
            }
        },
        "/notify/backend/v0/meta/log/json": {
            "get": {
                "summary": "deprecated",
                "operationId": "Meta_GetLogJSONMode",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0LogJSONModeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Meta"
                ]
            },
            "put": {
                "summary": "deprecated",
                "operationId": "Meta_SetLogJSONMode",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0LogJSONModeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v0LogJSONModeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Meta"
                ]
            }
        },
        "/notify/backend/v0/meta/log/level": {
            "get": {
                "operationId": "Meta_GetLogLevel",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0LogLevelResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Meta"
                ]
            },
            "put": {
                "operationId": "Meta_SetLogLevel",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v0LogLevelResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Meta"
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "protobufAny": {
                "type": "object",
                "properties": {
                    "typeUrl": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string",
                        "format": "byte"
                    }
                }
            },
            "rpcStatus": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/protobufAny"
                        }
                    }
                }
            },
            "v0DatabasePoolSettings": {
                "type": "object",
                "properties": {
                    "maxOpenConns": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maxIdleConns": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "connMaxLifeTimeSeconds": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "connMaxIdleTimeSeconds": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "v0DatabaseStats": {
                "type": "object",
                "properties": {
                    "maxOpenConnections": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "openConnections": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "inUse": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "idle": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "waitCount": {
                        "type": "string",
                        "format": "int64",
                        "title": "Counters"
                    },
                    "waitDurationMillis": {
                        "type": "string",
                        "format": "uint64",
                        "title": "NOTE: duration in go; just convert this to millis for simplicity"
                    },
                    "maxIdleClosed": {
                        "type": "string",
                        "format": "int64"
                    },
                    "maxIdleTimeClosed": {
                        "type": "string",
                        "format": "int64"
                    },
                    "maxLifetimeClosed": {
                        "type": "string",
                        "format": "int64"
                    }
                },
                "title": "golang's sql.DBStats"
            },
            "v0GetDBPoolSettingsResponse": {
                "type": "object",
                "properties": {
                    "settings": {
                        "$ref": "#/components/schemas/v0DatabasePoolSettings"
                    }
                }
            },
            "v0GetDBStatsResponse": {
                "type": "object",
                "properties": {
                    "stats": {
                        "$ref": "#/components/schemas/v0DatabaseStats"
                    }
                }
            },
            "v0LogJSONModeRequest": {
                "type": "object",
                "properties": {
                    "jsonMode": {
                        "type": "boolean"
                    }
                }
            },
            "v0LogJSONModeResponse": {
                "type": "object",
                "properties": {
                    "jsonMode": {
                        "type": "boolean"
                    }
                }
            },
            "v0LogLevelResponse": {
                "type": "object",
                "properties": {
                    "logLevel": {
                        "type": "string"
                    },
                    "initialLogLevel": {
                        "type": "string"
                    }
                }
            },
            "v0MetaEnvResponse": {
                "type": "object",
                "properties": {
                    "env": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "redacted": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "v0SetDBPoolSettingsResponse": {
                "type": "object"
            }
        }
    }
}
