# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: grpc/lb/v1/load_reporter.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.protobuf.duration_pb2
import grpc.lb.v1.load_reporter_pb2


class LoadReporterBase(abc.ABC):

    @abc.abstractmethod
    async def ReportLoad(self, stream: 'grpclib.server.Stream[grpc.lb.v1.load_reporter_pb2.LoadReportRequest, grpc.lb.v1.load_reporter_pb2.LoadReportResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/grpc.lb.v1.LoadReporter/ReportLoad': grpclib.const.Handler(
                self.ReportLoad,
                grpclib.const.Cardinality.STREAM_STREAM,
                grpc.lb.v1.load_reporter_pb2.LoadReportRequest,
                grpc.lb.v1.load_reporter_pb2.LoadReportResponse,
            ),
        }


class LoadReporterStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ReportLoad = grpclib.client.StreamStreamMethod(
            channel,
            '/grpc.lb.v1.LoadReporter/ReportLoad',
            grpc.lb.v1.load_reporter_pb2.LoadReportRequest,
            grpc.lb.v1.load_reporter_pb2.LoadReportResponse,
        )
