# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grpc/channelz/channelz.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from google.protobuf import duration_pb2 as google_dot_protobuf_dot_duration__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1cgrpc/channelz/channelz.proto\x12\x10grpc.channelz.v1\x1a\x19google/protobuf/any.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\xaf\x02\n\x07\x43hannel\x12.\n\x03ref\x18\x01 \x01(\x0b\x32\x1c.grpc.channelz.v1.ChannelRefR\x03ref\x12\x31\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.grpc.channelz.v1.ChannelDataR\x04\x64\x61ta\x12=\n\x0b\x63hannel_ref\x18\x03 \x03(\x0b\x32\x1c.grpc.channelz.v1.ChannelRefR\nchannelRef\x12\x46\n\x0esubchannel_ref\x18\x04 \x03(\x0b\x32\x1f.grpc.channelz.v1.SubchannelRefR\rsubchannelRef\x12:\n\nsocket_ref\x18\x05 \x03(\x0b\x32\x1b.grpc.channelz.v1.SocketRefR\tsocketRef\"\xb5\x02\n\nSubchannel\x12\x31\n\x03ref\x18\x01 \x01(\x0b\x32\x1f.grpc.channelz.v1.SubchannelRefR\x03ref\x12\x31\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.grpc.channelz.v1.ChannelDataR\x04\x64\x61ta\x12=\n\x0b\x63hannel_ref\x18\x03 \x03(\x0b\x32\x1c.grpc.channelz.v1.ChannelRefR\nchannelRef\x12\x46\n\x0esubchannel_ref\x18\x04 \x03(\x0b\x32\x1f.grpc.channelz.v1.SubchannelRefR\rsubchannelRef\x12:\n\nsocket_ref\x18\x05 \x03(\x0b\x32\x1b.grpc.channelz.v1.SocketRefR\tsocketRef\"\xc2\x01\n\x18\x43hannelConnectivityState\x12\x46\n\x05state\x18\x01 \x01(\x0e\x32\x30.grpc.channelz.v1.ChannelConnectivityState.StateR\x05state\"^\n\x05State\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x08\n\x04IDLE\x10\x01\x12\x0e\n\nCONNECTING\x10\x02\x12\t\n\x05READY\x10\x03\x12\x15\n\x11TRANSIENT_FAILURE\x10\x04\x12\x0c\n\x08SHUTDOWN\x10\x05\"\xe9\x02\n\x0b\x43hannelData\x12@\n\x05state\x18\x01 \x01(\x0b\x32*.grpc.channelz.v1.ChannelConnectivityStateR\x05state\x12\x16\n\x06target\x18\x02 \x01(\tR\x06target\x12\x34\n\x05trace\x18\x03 \x01(\x0b\x32\x1e.grpc.channelz.v1.ChannelTraceR\x05trace\x12#\n\rcalls_started\x18\x04 \x01(\x03R\x0c\x63\x61llsStarted\x12\'\n\x0f\x63\x61lls_succeeded\x18\x05 \x01(\x03R\x0e\x63\x61llsSucceeded\x12!\n\x0c\x63\x61lls_failed\x18\x06 \x01(\x03R\x0b\x63\x61llsFailed\x12Y\n\x1blast_call_started_timestamp\x18\x07 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\x18lastCallStartedTimestamp\"\x98\x03\n\x11\x43hannelTraceEvent\x12 \n\x0b\x64\x65scription\x18\x01 \x01(\tR\x0b\x64\x65scription\x12H\n\x08severity\x18\x02 \x01(\x0e\x32,.grpc.channelz.v1.ChannelTraceEvent.SeverityR\x08severity\x12\x38\n\ttimestamp\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\ttimestamp\x12?\n\x0b\x63hannel_ref\x18\x04 \x01(\x0b\x32\x1c.grpc.channelz.v1.ChannelRefH\x00R\nchannelRef\x12H\n\x0esubchannel_ref\x18\x05 \x01(\x0b\x32\x1f.grpc.channelz.v1.SubchannelRefH\x00R\rsubchannelRef\"E\n\x08Severity\x12\x0e\n\nCT_UNKNOWN\x10\x00\x12\x0b\n\x07\x43T_INFO\x10\x01\x12\x0e\n\nCT_WARNING\x10\x02\x12\x0c\n\x08\x43T_ERROR\x10\x03\x42\x0b\n\tchild_ref\"\xc2\x01\n\x0c\x43hannelTrace\x12*\n\x11num_events_logged\x18\x01 \x01(\x03R\x0fnumEventsLogged\x12I\n\x12\x63reation_timestamp\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\x11\x63reationTimestamp\x12;\n\x06\x65vents\x18\x03 \x03(\x0b\x32#.grpc.channelz.v1.ChannelTraceEventR\x06\x65vents\"c\n\nChannelRef\x12\x1d\n\nchannel_id\x18\x01 \x01(\x03R\tchannelId\x12\x12\n\x04name\x18\x02 \x01(\tR\x04nameJ\x04\x08\x03\x10\x04J\x04\x08\x04\x10\x05J\x04\x08\x05\x10\x06J\x04\x08\x06\x10\x07J\x04\x08\x07\x10\x08J\x04\x08\x08\x10\t\"l\n\rSubchannelRef\x12#\n\rsubchannel_id\x18\x07 \x01(\x03R\x0csubchannelId\x12\x12\n\x04name\x18\x08 \x01(\tR\x04nameJ\x04\x08\x01\x10\x02J\x04\x08\x02\x10\x03J\x04\x08\x03\x10\x04J\x04\x08\x04\x10\x05J\x04\x08\x05\x10\x06J\x04\x08\x06\x10\x07\"`\n\tSocketRef\x12\x1b\n\tsocket_id\x18\x03 \x01(\x03R\x08socketId\x12\x12\n\x04name\x18\x04 \x01(\tR\x04nameJ\x04\x08\x01\x10\x02J\x04\x08\x02\x10\x03J\x04\x08\x05\x10\x06J\x04\x08\x06\x10\x07J\x04\x08\x07\x10\x08J\x04\x08\x08\x10\t\"`\n\tServerRef\x12\x1b\n\tserver_id\x18\x05 \x01(\x03R\x08serverId\x12\x12\n\x04name\x18\x06 \x01(\tR\x04nameJ\x04\x08\x01\x10\x02J\x04\x08\x02\x10\x03J\x04\x08\x03\x10\x04J\x04\x08\x04\x10\x05J\x04\x08\x07\x10\x08J\x04\x08\x08\x10\t\"\xab\x01\n\x06Server\x12-\n\x03ref\x18\x01 \x01(\x0b\x32\x1b.grpc.channelz.v1.ServerRefR\x03ref\x12\x30\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.grpc.channelz.v1.ServerDataR\x04\x64\x61ta\x12@\n\rlisten_socket\x18\x03 \x03(\x0b\x32\x1b.grpc.channelz.v1.SocketRefR\x0clistenSocket\"\x8e\x02\n\nServerData\x12\x34\n\x05trace\x18\x01 \x01(\x0b\x32\x1e.grpc.channelz.v1.ChannelTraceR\x05trace\x12#\n\rcalls_started\x18\x02 \x01(\x03R\x0c\x63\x61llsStarted\x12\'\n\x0f\x63\x61lls_succeeded\x18\x03 \x01(\x03R\x0e\x63\x61llsSucceeded\x12!\n\x0c\x63\x61lls_failed\x18\x04 \x01(\x03R\x0b\x63\x61llsFailed\x12Y\n\x1blast_call_started_timestamp\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\x18lastCallStartedTimestamp\"\xa6\x02\n\x06Socket\x12-\n\x03ref\x18\x01 \x01(\x0b\x32\x1b.grpc.channelz.v1.SocketRefR\x03ref\x12\x30\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.grpc.channelz.v1.SocketDataR\x04\x64\x61ta\x12/\n\x05local\x18\x03 \x01(\x0b\x32\x19.grpc.channelz.v1.AddressR\x05local\x12\x31\n\x06remote\x18\x04 \x01(\x0b\x32\x19.grpc.channelz.v1.AddressR\x06remote\x12\x36\n\x08security\x18\x05 \x01(\x0b\x32\x1a.grpc.channelz.v1.SecurityR\x08security\x12\x1f\n\x0bremote_name\x18\x06 \x01(\tR\nremoteName\"\x83\x07\n\nSocketData\x12\'\n\x0fstreams_started\x18\x01 \x01(\x03R\x0estreamsStarted\x12+\n\x11streams_succeeded\x18\x02 \x01(\x03R\x10streamsSucceeded\x12%\n\x0estreams_failed\x18\x03 \x01(\x03R\rstreamsFailed\x12#\n\rmessages_sent\x18\x04 \x01(\x03R\x0cmessagesSent\x12+\n\x11messages_received\x18\x05 \x01(\x03R\x10messagesReceived\x12(\n\x10keep_alives_sent\x18\x06 \x01(\x03R\x0ekeepAlivesSent\x12h\n#last_local_stream_created_timestamp\x18\x07 \x01(\x0b\x32\x1a.google.protobuf.TimestampR\x1flastLocalStreamCreatedTimestamp\x12j\n$last_remote_stream_created_timestamp\x18\x08 \x01(\x0b\x32\x1a.google.protobuf.TimestampR lastRemoteStreamCreatedTimestamp\x12Y\n\x1blast_message_sent_timestamp\x18\t \x01(\x0b\x32\x1a.google.protobuf.TimestampR\x18lastMessageSentTimestamp\x12\x61\n\x1flast_message_received_timestamp\x18\n \x01(\x0b\x32\x1a.google.protobuf.TimestampR\x1clastMessageReceivedTimestamp\x12V\n\x19local_flow_control_window\x18\x0b \x01(\x0b\x32\x1b.google.protobuf.Int64ValueR\x16localFlowControlWindow\x12X\n\x1aremote_flow_control_window\x18\x0c \x01(\x0b\x32\x1b.google.protobuf.Int64ValueR\x17remoteFlowControlWindow\x12\x36\n\x06option\x18\r \x03(\x0b\x32\x1e.grpc.channelz.v1.SocketOptionR\x06option\"\xb8\x03\n\x07\x41\x64\x64ress\x12M\n\rtcpip_address\x18\x01 \x01(\x0b\x32&.grpc.channelz.v1.Address.TcpIpAddressH\x00R\x0ctcpipAddress\x12G\n\x0buds_address\x18\x02 \x01(\x0b\x32$.grpc.channelz.v1.Address.UdsAddressH\x00R\nudsAddress\x12M\n\rother_address\x18\x03 \x01(\x0b\x32&.grpc.channelz.v1.Address.OtherAddressH\x00R\x0cotherAddress\x1a\x41\n\x0cTcpIpAddress\x12\x1d\n\nip_address\x18\x01 \x01(\x0cR\tipAddress\x12\x12\n\x04port\x18\x02 \x01(\x05R\x04port\x1a(\n\nUdsAddress\x12\x1a\n\x08\x66ilename\x18\x01 \x01(\tR\x08\x66ilename\x1aN\n\x0cOtherAddress\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12*\n\x05value\x18\x02 \x01(\x0b\x32\x14.google.protobuf.AnyR\x05valueB\t\n\x07\x61\x64\x64ress\"\x96\x03\n\x08Security\x12\x32\n\x03tls\x18\x01 \x01(\x0b\x32\x1e.grpc.channelz.v1.Security.TlsH\x00R\x03tls\x12@\n\x05other\x18\x02 \x01(\x0b\x32(.grpc.channelz.v1.Security.OtherSecurityH\x00R\x05other\x1a\xb9\x01\n\x03Tls\x12%\n\rstandard_name\x18\x01 \x01(\tH\x00R\x0cstandardName\x12\x1f\n\nother_name\x18\x02 \x01(\tH\x00R\totherName\x12+\n\x11local_certificate\x18\x03 \x01(\x0cR\x10localCertificate\x12-\n\x12remote_certificate\x18\x04 \x01(\x0cR\x11remoteCertificateB\x0e\n\x0c\x63ipher_suite\x1aO\n\rOtherSecurity\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12*\n\x05value\x18\x02 \x01(\x0b\x32\x14.google.protobuf.AnyR\x05valueB\x07\n\x05model\"n\n\x0cSocketOption\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value\x12\x34\n\nadditional\x18\x03 \x01(\x0b\x32\x14.google.protobuf.AnyR\nadditional\"L\n\x13SocketOptionTimeout\x12\x35\n\x08\x64uration\x18\x01 \x01(\x0b\x32\x19.google.protobuf.DurationR\x08\x64uration\"c\n\x12SocketOptionLinger\x12\x16\n\x06\x61\x63tive\x18\x01 \x01(\x08R\x06\x61\x63tive\x12\x35\n\x08\x64uration\x18\x02 \x01(\x0b\x32\x19.google.protobuf.DurationR\x08\x64uration\"\xb2\x08\n\x13SocketOptionTcpInfo\x12\x1d\n\ntcpi_state\x18\x01 \x01(\rR\ttcpiState\x12\"\n\rtcpi_ca_state\x18\x02 \x01(\rR\x0btcpiCaState\x12)\n\x10tcpi_retransmits\x18\x03 \x01(\rR\x0ftcpiRetransmits\x12\x1f\n\x0btcpi_probes\x18\x04 \x01(\rR\ntcpiProbes\x12!\n\x0ctcpi_backoff\x18\x05 \x01(\rR\x0btcpiBackoff\x12!\n\x0ctcpi_options\x18\x06 \x01(\rR\x0btcpiOptions\x12&\n\x0ftcpi_snd_wscale\x18\x07 \x01(\rR\rtcpiSndWscale\x12&\n\x0ftcpi_rcv_wscale\x18\x08 \x01(\rR\rtcpiRcvWscale\x12\x19\n\x08tcpi_rto\x18\t \x01(\rR\x07tcpiRto\x12\x19\n\x08tcpi_ato\x18\n \x01(\rR\x07tcpiAto\x12 \n\x0ctcpi_snd_mss\x18\x0b \x01(\rR\ntcpiSndMss\x12 \n\x0ctcpi_rcv_mss\x18\x0c \x01(\rR\ntcpiRcvMss\x12!\n\x0ctcpi_unacked\x18\r \x01(\rR\x0btcpiUnacked\x12\x1f\n\x0btcpi_sacked\x18\x0e \x01(\rR\ntcpiSacked\x12\x1b\n\ttcpi_lost\x18\x0f \x01(\rR\x08tcpiLost\x12!\n\x0ctcpi_retrans\x18\x10 \x01(\rR\x0btcpiRetrans\x12!\n\x0ctcpi_fackets\x18\x11 \x01(\rR\x0btcpiFackets\x12-\n\x13tcpi_last_data_sent\x18\x12 \x01(\rR\x10tcpiLastDataSent\x12+\n\x12tcpi_last_ack_sent\x18\x13 \x01(\rR\x0ftcpiLastAckSent\x12-\n\x13tcpi_last_data_recv\x18\x14 \x01(\rR\x10tcpiLastDataRecv\x12+\n\x12tcpi_last_ack_recv\x18\x15 \x01(\rR\x0ftcpiLastAckRecv\x12\x1b\n\ttcpi_pmtu\x18\x16 \x01(\rR\x08tcpiPmtu\x12*\n\x11tcpi_rcv_ssthresh\x18\x17 \x01(\rR\x0ftcpiRcvSsthresh\x12\x19\n\x08tcpi_rtt\x18\x18 \x01(\rR\x07tcpiRtt\x12\x1f\n\x0btcpi_rttvar\x18\x19 \x01(\rR\ntcpiRttvar\x12*\n\x11tcpi_snd_ssthresh\x18\x1a \x01(\rR\x0ftcpiSndSsthresh\x12\"\n\rtcpi_snd_cwnd\x18\x1b \x01(\rR\x0btcpiSndCwnd\x12\x1f\n\x0btcpi_advmss\x18\x1c \x01(\rR\ntcpiAdvmss\x12\'\n\x0ftcpi_reordering\x18\x1d \x01(\rR\x0etcpiReordering\"b\n\x15GetTopChannelsRequest\x12(\n\x10start_channel_id\x18\x01 \x01(\x03R\x0estartChannelId\x12\x1f\n\x0bmax_results\x18\x02 \x01(\x03R\nmaxResults\"_\n\x16GetTopChannelsResponse\x12\x33\n\x07\x63hannel\x18\x01 \x03(\x0b\x32\x19.grpc.channelz.v1.ChannelR\x07\x63hannel\x12\x10\n\x03\x65nd\x18\x02 \x01(\x08R\x03\x65nd\"\\\n\x11GetServersRequest\x12&\n\x0fstart_server_id\x18\x01 \x01(\x03R\rstartServerId\x12\x1f\n\x0bmax_results\x18\x02 \x01(\x03R\nmaxResults\"X\n\x12GetServersResponse\x12\x30\n\x06server\x18\x01 \x03(\x0b\x32\x18.grpc.channelz.v1.ServerR\x06server\x12\x10\n\x03\x65nd\x18\x02 \x01(\x08R\x03\x65nd\"/\n\x10GetServerRequest\x12\x1b\n\tserver_id\x18\x01 \x01(\x03R\x08serverId\"E\n\x11GetServerResponse\x12\x30\n\x06server\x18\x01 \x01(\x0b\x32\x18.grpc.channelz.v1.ServerR\x06server\"\x7f\n\x17GetServerSocketsRequest\x12\x1b\n\tserver_id\x18\x01 \x01(\x03R\x08serverId\x12&\n\x0fstart_socket_id\x18\x02 \x01(\x03R\rstartSocketId\x12\x1f\n\x0bmax_results\x18\x03 \x01(\x03R\nmaxResults\"h\n\x18GetServerSocketsResponse\x12:\n\nsocket_ref\x18\x01 \x03(\x0b\x32\x1b.grpc.channelz.v1.SocketRefR\tsocketRef\x12\x10\n\x03\x65nd\x18\x02 \x01(\x08R\x03\x65nd\"2\n\x11GetChannelRequest\x12\x1d\n\nchannel_id\x18\x01 \x01(\x03R\tchannelId\"I\n\x12GetChannelResponse\x12\x33\n\x07\x63hannel\x18\x01 \x01(\x0b\x32\x19.grpc.channelz.v1.ChannelR\x07\x63hannel\";\n\x14GetSubchannelRequest\x12#\n\rsubchannel_id\x18\x01 \x01(\x03R\x0csubchannelId\"U\n\x15GetSubchannelResponse\x12<\n\nsubchannel\x18\x01 \x01(\x0b\x32\x1c.grpc.channelz.v1.SubchannelR\nsubchannel\"I\n\x10GetSocketRequest\x12\x1b\n\tsocket_id\x18\x01 \x01(\x03R\x08socketId\x12\x18\n\x07summary\x18\x02 \x01(\x08R\x07summary\"E\n\x11GetSocketResponse\x12\x30\n\x06socket\x18\x01 \x01(\x0b\x32\x18.grpc.channelz.v1.SocketR\x06socket2\x9a\x05\n\x08\x43hannelz\x12\x63\n\x0eGetTopChannels\x12\'.grpc.channelz.v1.GetTopChannelsRequest\x1a(.grpc.channelz.v1.GetTopChannelsResponse\x12W\n\nGetServers\x12#.grpc.channelz.v1.GetServersRequest\x1a$.grpc.channelz.v1.GetServersResponse\x12T\n\tGetServer\x12\".grpc.channelz.v1.GetServerRequest\x1a#.grpc.channelz.v1.GetServerResponse\x12i\n\x10GetServerSockets\x12).grpc.channelz.v1.GetServerSocketsRequest\x1a*.grpc.channelz.v1.GetServerSocketsResponse\x12W\n\nGetChannel\x12#.grpc.channelz.v1.GetChannelRequest\x1a$.grpc.channelz.v1.GetChannelResponse\x12`\n\rGetSubchannel\x12&.grpc.channelz.v1.GetSubchannelRequest\x1a\'.grpc.channelz.v1.GetSubchannelResponse\x12T\n\tGetSocket\x12\".grpc.channelz.v1.GetSocketRequest\x1a#.grpc.channelz.v1.GetSocketResponseBX\n\x13io.grpc.channelz.v1B\rChannelzProtoP\x01Z0google.golang.org/grpc/channelz/grpc_channelz_v1b\x06proto3')



_CHANNEL = DESCRIPTOR.message_types_by_name['Channel']
_SUBCHANNEL = DESCRIPTOR.message_types_by_name['Subchannel']
_CHANNELCONNECTIVITYSTATE = DESCRIPTOR.message_types_by_name['ChannelConnectivityState']
_CHANNELDATA = DESCRIPTOR.message_types_by_name['ChannelData']
_CHANNELTRACEEVENT = DESCRIPTOR.message_types_by_name['ChannelTraceEvent']
_CHANNELTRACE = DESCRIPTOR.message_types_by_name['ChannelTrace']
_CHANNELREF = DESCRIPTOR.message_types_by_name['ChannelRef']
_SUBCHANNELREF = DESCRIPTOR.message_types_by_name['SubchannelRef']
_SOCKETREF = DESCRIPTOR.message_types_by_name['SocketRef']
_SERVERREF = DESCRIPTOR.message_types_by_name['ServerRef']
_SERVER = DESCRIPTOR.message_types_by_name['Server']
_SERVERDATA = DESCRIPTOR.message_types_by_name['ServerData']
_SOCKET = DESCRIPTOR.message_types_by_name['Socket']
_SOCKETDATA = DESCRIPTOR.message_types_by_name['SocketData']
_ADDRESS = DESCRIPTOR.message_types_by_name['Address']
_ADDRESS_TCPIPADDRESS = _ADDRESS.nested_types_by_name['TcpIpAddress']
_ADDRESS_UDSADDRESS = _ADDRESS.nested_types_by_name['UdsAddress']
_ADDRESS_OTHERADDRESS = _ADDRESS.nested_types_by_name['OtherAddress']
_SECURITY = DESCRIPTOR.message_types_by_name['Security']
_SECURITY_TLS = _SECURITY.nested_types_by_name['Tls']
_SECURITY_OTHERSECURITY = _SECURITY.nested_types_by_name['OtherSecurity']
_SOCKETOPTION = DESCRIPTOR.message_types_by_name['SocketOption']
_SOCKETOPTIONTIMEOUT = DESCRIPTOR.message_types_by_name['SocketOptionTimeout']
_SOCKETOPTIONLINGER = DESCRIPTOR.message_types_by_name['SocketOptionLinger']
_SOCKETOPTIONTCPINFO = DESCRIPTOR.message_types_by_name['SocketOptionTcpInfo']
_GETTOPCHANNELSREQUEST = DESCRIPTOR.message_types_by_name['GetTopChannelsRequest']
_GETTOPCHANNELSRESPONSE = DESCRIPTOR.message_types_by_name['GetTopChannelsResponse']
_GETSERVERSREQUEST = DESCRIPTOR.message_types_by_name['GetServersRequest']
_GETSERVERSRESPONSE = DESCRIPTOR.message_types_by_name['GetServersResponse']
_GETSERVERREQUEST = DESCRIPTOR.message_types_by_name['GetServerRequest']
_GETSERVERRESPONSE = DESCRIPTOR.message_types_by_name['GetServerResponse']
_GETSERVERSOCKETSREQUEST = DESCRIPTOR.message_types_by_name['GetServerSocketsRequest']
_GETSERVERSOCKETSRESPONSE = DESCRIPTOR.message_types_by_name['GetServerSocketsResponse']
_GETCHANNELREQUEST = DESCRIPTOR.message_types_by_name['GetChannelRequest']
_GETCHANNELRESPONSE = DESCRIPTOR.message_types_by_name['GetChannelResponse']
_GETSUBCHANNELREQUEST = DESCRIPTOR.message_types_by_name['GetSubchannelRequest']
_GETSUBCHANNELRESPONSE = DESCRIPTOR.message_types_by_name['GetSubchannelResponse']
_GETSOCKETREQUEST = DESCRIPTOR.message_types_by_name['GetSocketRequest']
_GETSOCKETRESPONSE = DESCRIPTOR.message_types_by_name['GetSocketResponse']
_CHANNELCONNECTIVITYSTATE_STATE = _CHANNELCONNECTIVITYSTATE.enum_types_by_name['State']
_CHANNELTRACEEVENT_SEVERITY = _CHANNELTRACEEVENT.enum_types_by_name['Severity']
Channel = _reflection.GeneratedProtocolMessageType('Channel', (_message.Message,), {
  'DESCRIPTOR' : _CHANNEL,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.Channel)
  })
_sym_db.RegisterMessage(Channel)

Subchannel = _reflection.GeneratedProtocolMessageType('Subchannel', (_message.Message,), {
  'DESCRIPTOR' : _SUBCHANNEL,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.Subchannel)
  })
_sym_db.RegisterMessage(Subchannel)

ChannelConnectivityState = _reflection.GeneratedProtocolMessageType('ChannelConnectivityState', (_message.Message,), {
  'DESCRIPTOR' : _CHANNELCONNECTIVITYSTATE,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.ChannelConnectivityState)
  })
_sym_db.RegisterMessage(ChannelConnectivityState)

ChannelData = _reflection.GeneratedProtocolMessageType('ChannelData', (_message.Message,), {
  'DESCRIPTOR' : _CHANNELDATA,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.ChannelData)
  })
_sym_db.RegisterMessage(ChannelData)

ChannelTraceEvent = _reflection.GeneratedProtocolMessageType('ChannelTraceEvent', (_message.Message,), {
  'DESCRIPTOR' : _CHANNELTRACEEVENT,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.ChannelTraceEvent)
  })
_sym_db.RegisterMessage(ChannelTraceEvent)

ChannelTrace = _reflection.GeneratedProtocolMessageType('ChannelTrace', (_message.Message,), {
  'DESCRIPTOR' : _CHANNELTRACE,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.ChannelTrace)
  })
_sym_db.RegisterMessage(ChannelTrace)

ChannelRef = _reflection.GeneratedProtocolMessageType('ChannelRef', (_message.Message,), {
  'DESCRIPTOR' : _CHANNELREF,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.ChannelRef)
  })
_sym_db.RegisterMessage(ChannelRef)

SubchannelRef = _reflection.GeneratedProtocolMessageType('SubchannelRef', (_message.Message,), {
  'DESCRIPTOR' : _SUBCHANNELREF,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.SubchannelRef)
  })
_sym_db.RegisterMessage(SubchannelRef)

SocketRef = _reflection.GeneratedProtocolMessageType('SocketRef', (_message.Message,), {
  'DESCRIPTOR' : _SOCKETREF,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.SocketRef)
  })
_sym_db.RegisterMessage(SocketRef)

ServerRef = _reflection.GeneratedProtocolMessageType('ServerRef', (_message.Message,), {
  'DESCRIPTOR' : _SERVERREF,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.ServerRef)
  })
_sym_db.RegisterMessage(ServerRef)

Server = _reflection.GeneratedProtocolMessageType('Server', (_message.Message,), {
  'DESCRIPTOR' : _SERVER,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.Server)
  })
_sym_db.RegisterMessage(Server)

ServerData = _reflection.GeneratedProtocolMessageType('ServerData', (_message.Message,), {
  'DESCRIPTOR' : _SERVERDATA,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.ServerData)
  })
_sym_db.RegisterMessage(ServerData)

Socket = _reflection.GeneratedProtocolMessageType('Socket', (_message.Message,), {
  'DESCRIPTOR' : _SOCKET,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.Socket)
  })
_sym_db.RegisterMessage(Socket)

SocketData = _reflection.GeneratedProtocolMessageType('SocketData', (_message.Message,), {
  'DESCRIPTOR' : _SOCKETDATA,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.SocketData)
  })
_sym_db.RegisterMessage(SocketData)

Address = _reflection.GeneratedProtocolMessageType('Address', (_message.Message,), {

  'TcpIpAddress' : _reflection.GeneratedProtocolMessageType('TcpIpAddress', (_message.Message,), {
    'DESCRIPTOR' : _ADDRESS_TCPIPADDRESS,
    '__module__' : 'grpc.channelz.channelz_pb2'
    # @@protoc_insertion_point(class_scope:grpc.channelz.v1.Address.TcpIpAddress)
    })
  ,

  'UdsAddress' : _reflection.GeneratedProtocolMessageType('UdsAddress', (_message.Message,), {
    'DESCRIPTOR' : _ADDRESS_UDSADDRESS,
    '__module__' : 'grpc.channelz.channelz_pb2'
    # @@protoc_insertion_point(class_scope:grpc.channelz.v1.Address.UdsAddress)
    })
  ,

  'OtherAddress' : _reflection.GeneratedProtocolMessageType('OtherAddress', (_message.Message,), {
    'DESCRIPTOR' : _ADDRESS_OTHERADDRESS,
    '__module__' : 'grpc.channelz.channelz_pb2'
    # @@protoc_insertion_point(class_scope:grpc.channelz.v1.Address.OtherAddress)
    })
  ,
  'DESCRIPTOR' : _ADDRESS,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.Address)
  })
_sym_db.RegisterMessage(Address)
_sym_db.RegisterMessage(Address.TcpIpAddress)
_sym_db.RegisterMessage(Address.UdsAddress)
_sym_db.RegisterMessage(Address.OtherAddress)

Security = _reflection.GeneratedProtocolMessageType('Security', (_message.Message,), {

  'Tls' : _reflection.GeneratedProtocolMessageType('Tls', (_message.Message,), {
    'DESCRIPTOR' : _SECURITY_TLS,
    '__module__' : 'grpc.channelz.channelz_pb2'
    # @@protoc_insertion_point(class_scope:grpc.channelz.v1.Security.Tls)
    })
  ,

  'OtherSecurity' : _reflection.GeneratedProtocolMessageType('OtherSecurity', (_message.Message,), {
    'DESCRIPTOR' : _SECURITY_OTHERSECURITY,
    '__module__' : 'grpc.channelz.channelz_pb2'
    # @@protoc_insertion_point(class_scope:grpc.channelz.v1.Security.OtherSecurity)
    })
  ,
  'DESCRIPTOR' : _SECURITY,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.Security)
  })
_sym_db.RegisterMessage(Security)
_sym_db.RegisterMessage(Security.Tls)
_sym_db.RegisterMessage(Security.OtherSecurity)

SocketOption = _reflection.GeneratedProtocolMessageType('SocketOption', (_message.Message,), {
  'DESCRIPTOR' : _SOCKETOPTION,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.SocketOption)
  })
_sym_db.RegisterMessage(SocketOption)

SocketOptionTimeout = _reflection.GeneratedProtocolMessageType('SocketOptionTimeout', (_message.Message,), {
  'DESCRIPTOR' : _SOCKETOPTIONTIMEOUT,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.SocketOptionTimeout)
  })
_sym_db.RegisterMessage(SocketOptionTimeout)

SocketOptionLinger = _reflection.GeneratedProtocolMessageType('SocketOptionLinger', (_message.Message,), {
  'DESCRIPTOR' : _SOCKETOPTIONLINGER,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.SocketOptionLinger)
  })
_sym_db.RegisterMessage(SocketOptionLinger)

SocketOptionTcpInfo = _reflection.GeneratedProtocolMessageType('SocketOptionTcpInfo', (_message.Message,), {
  'DESCRIPTOR' : _SOCKETOPTIONTCPINFO,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.SocketOptionTcpInfo)
  })
_sym_db.RegisterMessage(SocketOptionTcpInfo)

GetTopChannelsRequest = _reflection.GeneratedProtocolMessageType('GetTopChannelsRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETTOPCHANNELSREQUEST,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.GetTopChannelsRequest)
  })
_sym_db.RegisterMessage(GetTopChannelsRequest)

GetTopChannelsResponse = _reflection.GeneratedProtocolMessageType('GetTopChannelsResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETTOPCHANNELSRESPONSE,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.GetTopChannelsResponse)
  })
_sym_db.RegisterMessage(GetTopChannelsResponse)

GetServersRequest = _reflection.GeneratedProtocolMessageType('GetServersRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETSERVERSREQUEST,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.GetServersRequest)
  })
_sym_db.RegisterMessage(GetServersRequest)

GetServersResponse = _reflection.GeneratedProtocolMessageType('GetServersResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETSERVERSRESPONSE,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.GetServersResponse)
  })
_sym_db.RegisterMessage(GetServersResponse)

GetServerRequest = _reflection.GeneratedProtocolMessageType('GetServerRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETSERVERREQUEST,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.GetServerRequest)
  })
_sym_db.RegisterMessage(GetServerRequest)

GetServerResponse = _reflection.GeneratedProtocolMessageType('GetServerResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETSERVERRESPONSE,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.GetServerResponse)
  })
_sym_db.RegisterMessage(GetServerResponse)

GetServerSocketsRequest = _reflection.GeneratedProtocolMessageType('GetServerSocketsRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETSERVERSOCKETSREQUEST,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.GetServerSocketsRequest)
  })
_sym_db.RegisterMessage(GetServerSocketsRequest)

GetServerSocketsResponse = _reflection.GeneratedProtocolMessageType('GetServerSocketsResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETSERVERSOCKETSRESPONSE,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.GetServerSocketsResponse)
  })
_sym_db.RegisterMessage(GetServerSocketsResponse)

GetChannelRequest = _reflection.GeneratedProtocolMessageType('GetChannelRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETCHANNELREQUEST,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.GetChannelRequest)
  })
_sym_db.RegisterMessage(GetChannelRequest)

GetChannelResponse = _reflection.GeneratedProtocolMessageType('GetChannelResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETCHANNELRESPONSE,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.GetChannelResponse)
  })
_sym_db.RegisterMessage(GetChannelResponse)

GetSubchannelRequest = _reflection.GeneratedProtocolMessageType('GetSubchannelRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETSUBCHANNELREQUEST,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.GetSubchannelRequest)
  })
_sym_db.RegisterMessage(GetSubchannelRequest)

GetSubchannelResponse = _reflection.GeneratedProtocolMessageType('GetSubchannelResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETSUBCHANNELRESPONSE,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.GetSubchannelResponse)
  })
_sym_db.RegisterMessage(GetSubchannelResponse)

GetSocketRequest = _reflection.GeneratedProtocolMessageType('GetSocketRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETSOCKETREQUEST,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.GetSocketRequest)
  })
_sym_db.RegisterMessage(GetSocketRequest)

GetSocketResponse = _reflection.GeneratedProtocolMessageType('GetSocketResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETSOCKETRESPONSE,
  '__module__' : 'grpc.channelz.channelz_pb2'
  # @@protoc_insertion_point(class_scope:grpc.channelz.v1.GetSocketResponse)
  })
_sym_db.RegisterMessage(GetSocketResponse)

_CHANNELZ = DESCRIPTOR.services_by_name['Channelz']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\023io.grpc.channelz.v1B\rChannelzProtoP\001Z0google.golang.org/grpc/channelz/grpc_channelz_v1'
  _CHANNEL._serialized_start=175
  _CHANNEL._serialized_end=478
  _SUBCHANNEL._serialized_start=481
  _SUBCHANNEL._serialized_end=790
  _CHANNELCONNECTIVITYSTATE._serialized_start=793
  _CHANNELCONNECTIVITYSTATE._serialized_end=987
  _CHANNELCONNECTIVITYSTATE_STATE._serialized_start=893
  _CHANNELCONNECTIVITYSTATE_STATE._serialized_end=987
  _CHANNELDATA._serialized_start=990
  _CHANNELDATA._serialized_end=1351
  _CHANNELTRACEEVENT._serialized_start=1354
  _CHANNELTRACEEVENT._serialized_end=1762
  _CHANNELTRACEEVENT_SEVERITY._serialized_start=1680
  _CHANNELTRACEEVENT_SEVERITY._serialized_end=1749
  _CHANNELTRACE._serialized_start=1765
  _CHANNELTRACE._serialized_end=1959
  _CHANNELREF._serialized_start=1961
  _CHANNELREF._serialized_end=2060
  _SUBCHANNELREF._serialized_start=2062
  _SUBCHANNELREF._serialized_end=2170
  _SOCKETREF._serialized_start=2172
  _SOCKETREF._serialized_end=2268
  _SERVERREF._serialized_start=2270
  _SERVERREF._serialized_end=2366
  _SERVER._serialized_start=2369
  _SERVER._serialized_end=2540
  _SERVERDATA._serialized_start=2543
  _SERVERDATA._serialized_end=2813
  _SOCKET._serialized_start=2816
  _SOCKET._serialized_end=3110
  _SOCKETDATA._serialized_start=3113
  _SOCKETDATA._serialized_end=4012
  _ADDRESS._serialized_start=4015
  _ADDRESS._serialized_end=4455
  _ADDRESS_TCPIPADDRESS._serialized_start=4257
  _ADDRESS_TCPIPADDRESS._serialized_end=4322
  _ADDRESS_UDSADDRESS._serialized_start=4324
  _ADDRESS_UDSADDRESS._serialized_end=4364
  _ADDRESS_OTHERADDRESS._serialized_start=4366
  _ADDRESS_OTHERADDRESS._serialized_end=4444
  _SECURITY._serialized_start=4458
  _SECURITY._serialized_end=4864
  _SECURITY_TLS._serialized_start=4589
  _SECURITY_TLS._serialized_end=4774
  _SECURITY_OTHERSECURITY._serialized_start=4776
  _SECURITY_OTHERSECURITY._serialized_end=4855
  _SOCKETOPTION._serialized_start=4866
  _SOCKETOPTION._serialized_end=4976
  _SOCKETOPTIONTIMEOUT._serialized_start=4978
  _SOCKETOPTIONTIMEOUT._serialized_end=5054
  _SOCKETOPTIONLINGER._serialized_start=5056
  _SOCKETOPTIONLINGER._serialized_end=5155
  _SOCKETOPTIONTCPINFO._serialized_start=5158
  _SOCKETOPTIONTCPINFO._serialized_end=6232
  _GETTOPCHANNELSREQUEST._serialized_start=6234
  _GETTOPCHANNELSREQUEST._serialized_end=6332
  _GETTOPCHANNELSRESPONSE._serialized_start=6334
  _GETTOPCHANNELSRESPONSE._serialized_end=6429
  _GETSERVERSREQUEST._serialized_start=6431
  _GETSERVERSREQUEST._serialized_end=6523
  _GETSERVERSRESPONSE._serialized_start=6525
  _GETSERVERSRESPONSE._serialized_end=6613
  _GETSERVERREQUEST._serialized_start=6615
  _GETSERVERREQUEST._serialized_end=6662
  _GETSERVERRESPONSE._serialized_start=6664
  _GETSERVERRESPONSE._serialized_end=6733
  _GETSERVERSOCKETSREQUEST._serialized_start=6735
  _GETSERVERSOCKETSREQUEST._serialized_end=6862
  _GETSERVERSOCKETSRESPONSE._serialized_start=6864
  _GETSERVERSOCKETSRESPONSE._serialized_end=6968
  _GETCHANNELREQUEST._serialized_start=6970
  _GETCHANNELREQUEST._serialized_end=7020
  _GETCHANNELRESPONSE._serialized_start=7022
  _GETCHANNELRESPONSE._serialized_end=7095
  _GETSUBCHANNELREQUEST._serialized_start=7097
  _GETSUBCHANNELREQUEST._serialized_end=7156
  _GETSUBCHANNELRESPONSE._serialized_start=7158
  _GETSUBCHANNELRESPONSE._serialized_end=7243
  _GETSOCKETREQUEST._serialized_start=7245
  _GETSOCKETREQUEST._serialized_end=7318
  _GETSOCKETRESPONSE._serialized_start=7320
  _GETSOCKETRESPONSE._serialized_end=7389
  _CHANNELZ._serialized_start=7392
  _CHANNELZ._serialized_end=8058
# @@protoc_insertion_point(module_scope)
