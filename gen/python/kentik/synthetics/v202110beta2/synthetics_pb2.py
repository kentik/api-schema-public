# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kentik/synthetics/v202110beta2/synthetics.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.api import client_pb2 as google_dot_api_dot_client__pb2
from google.protobuf import field_mask_pb2 as google_dot_protobuf_dot_field__mask__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from protoc_gen_openapiv2.options import annotations_pb2 as protoc__gen__openapiv2_dot_options_dot_annotations__pb2
from kentik.core.v202012alpha1 import annotations_pb2 as kentik_dot_core_dot_v202012alpha1_dot_annotations__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n/kentik/synthetics/v202110beta2/synthetics.proto\x12\x1ekentik.synthetics.v202110beta2\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a google/protobuf/field_mask.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a+kentik/core/v202012alpha1/annotations.proto\"B\n\x06Health\x12\x0e\n\x06health\x18\x01 \x01(\t\x12(\n\x04time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\".\n\x0f\x41gentTaskConfig\x12\n\n\x02id\x18\x01 \x01(\x04\x12\x0f\n\x07targets\x18\x02 \x03(\t\"\xdb\x02\n\nTestHealth\x12\x0f\n\x07test_id\x18\x01 \x01(\t\x12\x39\n\x05tasks\x18\x02 \x03(\x0b\x32*.kentik.synthetics.v202110beta2.TaskHealth\x12>\n\x0eoverall_health\x18\x03 \x01(\x0b\x32&.kentik.synthetics.v202110beta2.Health\x12\x39\n\thealth_ts\x18\x04 \x03(\x0b\x32&.kentik.synthetics.v202110beta2.Health\x12J\n\x11\x61gent_task_config\x18\x05 \x03(\x0b\x32/.kentik.synthetics.v202110beta2.AgentTaskConfig\x12:\n\x04mesh\x18\x06 \x03(\x0b\x32,.kentik.synthetics.v202110beta2.MeshResponse\"\xfa\x01\n\nTaskHealth\x12\x32\n\x04task\x18\x01 \x01(\x0b\x32$.kentik.synthetics.v202110beta2.Task\x12;\n\x06\x61gents\x18\x02 \x03(\x0b\x32+.kentik.synthetics.v202110beta2.AgentHealth\x12>\n\x0eoverall_health\x18\x03 \x01(\x0b\x32&.kentik.synthetics.v202110beta2.Health\x12;\n\x0ctarget_agent\x18\x04 \x01(\x0b\x32%.kentik.synthetics.v202110beta2.Agent\"\xc1\x01\n\x0b\x41gentHealth\x12\x34\n\x05\x61gent\x18\x01 \x01(\x0b\x32%.kentik.synthetics.v202110beta2.Agent\x12<\n\x06health\x18\x02 \x03(\x0b\x32,.kentik.synthetics.v202110beta2.HealthMoment\x12>\n\x0eoverall_health\x18\x03 \x01(\x0b\x32&.kentik.synthetics.v202110beta2.Health\"\x99\x04\n\x0cHealthMoment\x12(\n\x04time\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x0e\n\x06src_ip\x18\x02 \x01(\t\x12\x0e\n\x06\x64st_ip\x18\x03 \x01(\t\x12\x13\n\x0bpacket_loss\x18\x04 \x01(\x01\x12\x13\n\x0b\x61vg_latency\x18\x05 \x01(\r\x12\x1c\n\x14\x61vg_weighted_latency\x18\x06 \x01(\r\x12\x1b\n\x13rolling_avg_latency\x18\x07 \x01(\r\x12\x1e\n\x16rolling_stddev_latency\x18\x08 \x01(\r\x12$\n\x1crolling_avg_weighted_latency\x18\t \x01(\r\x12\x16\n\x0elatency_health\x18\n \x01(\t\x12\x1a\n\x12packet_loss_health\x18\x0b \x01(\t\x12>\n\x0eoverall_health\x18\x0c \x01(\x0b\x32&.kentik.synthetics.v202110beta2.Health\x12\x12\n\navg_jitter\x18\r \x01(\r\x12\x1a\n\x12rolling_avg_jitter\x18\x0e \x01(\r\x12\x1a\n\x12rolling_std_jitter\x18\x0f \x01(\r\x12\x15\n\rjitter_health\x18\x10 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x11 \x01(\t\x12\x0c\n\x04size\x18\x12 \x01(\r\x12\x0e\n\x06status\x18\x13 \x01(\r\x12\x11\n\ttask_type\x18\x14 \x01(\t\"\x91\x04\n\x05\x41gent\x12\n\n\x02id\x18\x01 \x01(\t\x12\x11\n\tsite_name\x18\x02 \x01(\t\x12;\n\x06status\x18\x03 \x01(\x0e\x32+.kentik.synthetics.v202110beta2.AgentStatus\x12\r\n\x05\x61lias\x18\x04 \x01(\t\x12\x0c\n\x04type\x18\x05 \x01(\t\x12\n\n\x02os\x18\x06 \x01(\t\x12\n\n\x02ip\x18\x07 \x01(\t\x12\x0b\n\x03lat\x18\x08 \x01(\x01\x12\x0c\n\x04long\x18\t \x01(\x01\x12/\n\x0blast_authed\x18\n \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x38\n\x06\x66\x61mily\x18\x0b \x01(\x0e\x32(.kentik.synthetics.v202110beta2.IPFamily\x12\x0b\n\x03\x61sn\x18\x0c \x01(\r\x12\x0f\n\x07site_id\x18\r \x01(\t\x12\x0f\n\x07version\x18\x0e \x01(\t\x12\x0c\n\x04\x63ity\x18\x10 \x01(\t\x12\x0e\n\x06region\x18\x11 \x01(\t\x12\x0f\n\x07\x63ountry\x18\x12 \x01(\t\x12\x10\n\x08test_ids\x18\x13 \x03(\t\x12\x10\n\x08local_ip\x18\x14 \x01(\t\x12\x14\n\x0c\x63loud_region\x18\x16 \x01(\t\x12\x16\n\x0e\x63loud_provider\x18\x17 \x01(\t\x12\x41\n\nagent_impl\x18\x18 \x01(\x0e\x32-.kentik.synthetics.v202110beta2.ImplementType\"e\n\x12PingTaskDefinition\x12\x0e\n\x06target\x18\x01 \x01(\t\x12\x0e\n\x06period\x18\x02 \x01(\r\x12\x0e\n\x06\x65xpiry\x18\x03 \x01(\r\x12\r\n\x05\x63ount\x18\x04 \x01(\r\x12\x10\n\x08protocol\x18\x05 \x01(\t\"T\n\x13TraceTaskDefinition\x12\x0e\n\x06target\x18\x01 \x01(\t\x12\x0e\n\x06period\x18\x02 \x01(\r\x12\x0e\n\x06\x65xpiry\x18\x03 \x01(\r\x12\r\n\x05limit\x18\x04 \x01(\r\"D\n\x12HTTPTaskDefinition\x12\x0e\n\x06target\x18\x01 \x01(\t\x12\x0e\n\x06period\x18\x02 \x01(\r\x12\x0e\n\x06\x65xpiry\x18\x03 \x01(\r\"\xa3\x04\n\x04Task\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0f\n\x07test_id\x18\x02 \x01(\t\x12\x11\n\tdevice_id\x18\x03 \x01(\t\x12\x38\n\x05state\x18\x04 \x01(\x0e\x32).kentik.synthetics.v202110beta2.TaskState\x12\x0e\n\x06status\x18\x05 \x01(\t\x12\x38\n\x06\x66\x61mily\x18\x06 \x01(\x0e\x32(.kentik.synthetics.v202110beta2.IPFamily\x12\x42\n\x04ping\x18\x07 \x01(\x0b\x32\x32.kentik.synthetics.v202110beta2.PingTaskDefinitionH\x00\x12I\n\ntraceroute\x18\x08 \x01(\x0b\x32\x33.kentik.synthetics.v202110beta2.TraceTaskDefinitionH\x00\x12\x42\n\x04http\x18\t \x01(\x0b\x32\x32.kentik.synthetics.v202110beta2.HTTPTaskDefinitionH\x00\x12@\n\x03\x64ns\x18\n \x01(\x0b\x32\x31.kentik.synthetics.v202110beta2.DNSTaskDefinitionH\x00\x12\x44\n\x05shake\x18\x0b \x01(\x0b\x32\x33.kentik.synthetics.v202110beta2.ShakeTaskDefinitionH\x00\x42\x0c\n\ndefinition\"\x80\x01\n\x11\x44NSTaskDefinition\x12\x0e\n\x06target\x18\x01 \x01(\t\x12\x0e\n\x06period\x18\x02 \x01(\r\x12\x0e\n\x06\x65xpiry\x18\x03 \x01(\r\x12\r\n\x05\x63ount\x18\x04 \x01(\r\x12\x0c\n\x04port\x18\x05 \x01(\r\x12\x0c\n\x04type\x18\x06 \x01(\t\x12\x10\n\x08resolver\x18\x07 \x01(\t\"S\n\x13ShakeTaskDefinition\x12\x0e\n\x06target\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\r\x12\x0e\n\x06period\x18\x03 \x01(\r\x12\x0e\n\x06\x65xpiry\x18\x04 \x01(\r\"8\n\x08UserInfo\x12\n\n\x02id\x18\x01 \x01(\t\x12\r\n\x05\x65mail\x18\x02 \x01(\t\x12\x11\n\tfull_name\x18\x03 \x01(\t\"\x81\x03\n\x04Test\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0c\n\x04type\x18\x03 \x01(\t\x12:\n\x06status\x18\x05 \x01(\x0e\x32*.kentik.synthetics.v202110beta2.TestStatus\x12>\n\x08settings\x18\x06 \x01(\x0b\x32,.kentik.synthetics.v202110beta2.TestSettings\x12)\n\x05\x63\x64\x61te\x18\x07 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12)\n\x05\x65\x64\x61te\x18\x08 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12<\n\ncreated_by\x18\t \x01(\x0b\x32(.kentik.synthetics.v202110beta2.UserInfo\x12\x41\n\x0flast_updated_by\x18\n \x01(\x0b\x32(.kentik.synthetics.v202110beta2.UserInfo\"\xc9\x02\n\nHTTPConfig\x12\x0e\n\x06method\x18\x01 \x01(\t\x12H\n\x07headers\x18\x02 \x03(\x0b\x32\x37.kentik.synthetics.v202110beta2.HTTPConfig.HeadersEntry\x12\x0c\n\x04\x62ody\x18\x03 \x01(\t\x12\x19\n\x11ignore_tls_errors\x18\x04 \x01(\x08\x12S\n\rcss_selectors\x18\x05 \x03(\x0b\x32<.kentik.synthetics.v202110beta2.HTTPConfig.CssSelectorsEntry\x1a.\n\x0cHeadersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x33\n\x11\x43ssSelectorsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x9d\x07\n\x0cTestSettings\x12@\n\x08hostname\x18\x01 \x01(\x0b\x32,.kentik.synthetics.v202110beta2.HostnameTestH\x00\x12\x34\n\x02ip\x18\x02 \x01(\x0b\x32&.kentik.synthetics.v202110beta2.IpTestH\x00\x12:\n\x05\x61gent\x18\x03 \x01(\x0b\x32).kentik.synthetics.v202110beta2.AgentTestH\x00\x12\x38\n\x04\x66low\x18\x04 \x01(\x0b\x32(.kentik.synthetics.v202110beta2.FlowTestH\x00\x12\x36\n\x03\x64ns\x18\x05 \x01(\x0b\x32\'.kentik.synthetics.v202110beta2.DnsTestH\x00\x12\x36\n\x03url\x18\x06 \x01(\x0b\x32\'.kentik.synthetics.v202110beta2.UrlTestH\x00\x12G\n\x0cnetwork_grid\x18\x07 \x01(\x0b\x32/.kentik.synthetics.v202110beta2.NetworkGridTestH\x00\x12\x41\n\tpage_load\x18\x08 \x01(\x0b\x32,.kentik.synthetics.v202110beta2.PageLoadTestH\x00\x12?\n\x08\x64ns_grid\x18\t \x01(\x0b\x32+.kentik.synthetics.v202110beta2.DnsGridTestH\x00\x12\x11\n\tagent_ids\x18\n \x03(\t\x12\r\n\x05tasks\x18\x0b \x03(\t\x12G\n\x0fhealth_settings\x18\x0c \x01(\x0b\x32..kentik.synthetics.v202110beta2.HealthSettings\x12>\n\x04ping\x18\r \x01(\x0b\x32\x30.kentik.synthetics.v202110beta2.TestPingSettings\x12@\n\x05trace\x18\x0e \x01(\x0b\x32\x31.kentik.synthetics.v202110beta2.TestTraceSettings\x12\x0e\n\x06period\x18\x0f \x01(\r\x12\x38\n\x06\x66\x61mily\x18\x10 \x01(\x0e\x32(.kentik.synthetics.v202110beta2.IPFamily\x12\x1d\n\x15notification_channels\x18\x11 \x03(\tB\x0c\n\ndefinition\"`\n\x10TestPingSettings\x12\r\n\x05\x63ount\x18\x01 \x01(\r\x12\x10\n\x08protocol\x18\x02 \x01(\t\x12\x0c\n\x04port\x18\x03 \x01(\r\x12\x0e\n\x06\x65xpiry\x18\x04 \x01(\x02\x12\r\n\x05\x64\x65lay\x18\x05 \x01(\x02\"p\n\x11TestTraceSettings\x12\r\n\x05\x63ount\x18\x01 \x01(\r\x12\x10\n\x08protocol\x18\x02 \x01(\t\x12\x0c\n\x04port\x18\x03 \x01(\r\x12\x0e\n\x06\x65xpiry\x18\x04 \x01(\x02\x12\r\n\x05limit\x18\x05 \x01(\r\x12\r\n\x05\x64\x65lay\x18\x06 \x01(\x02\"\x8f\x04\n\x0eHealthSettings\x12\x18\n\x10latency_critical\x18\x01 \x01(\x02\x12\x17\n\x0flatency_warning\x18\x02 \x01(\x02\x12\x1c\n\x14packet_loss_critical\x18\x03 \x01(\x02\x12\x1b\n\x13packet_loss_warning\x18\x04 \x01(\x02\x12\x17\n\x0fjitter_critical\x18\x05 \x01(\x02\x12\x16\n\x0ejitter_warning\x18\x06 \x01(\x02\x12\x1d\n\x15http_latency_critical\x18\x07 \x01(\x02\x12\x1c\n\x14http_latency_warning\x18\x08 \x01(\x02\x12\x18\n\x10http_valid_codes\x18\t \x03(\r\x12\x17\n\x0f\x64ns_valid_codes\x18\n \x03(\r\x12\x1f\n\x17latency_critical_stddev\x18\x0b \x01(\x02\x12\x1e\n\x16latency_warning_stddev\x18\x0c \x01(\x02\x12\x1e\n\x16jitter_critical_stddev\x18\r \x01(\x02\x12\x1d\n\x15jitter_warning_stddev\x18\x0e \x01(\x02\x12$\n\x1chttp_latency_critical_stddev\x18\x0f \x01(\x02\x12#\n\x1bhttp_latency_warning_stddev\x18\x10 \x01(\x02\x12#\n\x1bunhealthy_subtest_threshold\x18\x11 \x01(\r\"\x1e\n\x0cHostnameTest\x12\x0e\n\x06target\x18\x01 \x01(\t\"\x19\n\x06IpTest\x12\x0f\n\x07targets\x18\x01 \x03(\t\"\x1b\n\tAgentTest\x12\x0e\n\x06target\x18\x01 \x01(\t\"\x8e\x01\n\x08\x46lowTest\x12\x0e\n\x06target\x18\x01 \x01(\t\x12&\n\x1etarget_refresh_interval_millis\x18\x02 \x01(\r\x12\x11\n\tmax_tasks\x18\x03 \x01(\r\x12\x0c\n\x04type\x18\x04 \x01(\t\x12\x16\n\x0einet_direction\x18\x05 \x01(\t\x12\x11\n\tdirection\x18\x06 \x01(\t\"d\n\x07\x44nsTest\x12\x0f\n\x07targets\x18\x01 \x03(\t\x12\x37\n\x04type\x18\x02 \x01(\x0e\x32).kentik.synthetics.v202110beta2.DNSRecord\x12\x0f\n\x07servers\x18\x03 \x03(\t\"c\n\x07UrlTest\x12\x0e\n\x06target\x18\x01 \x01(\t\x12\x0e\n\x06\x65xpiry\x18\x02 \x01(\r\x12\x38\n\x04http\x18\x03 \x01(\x0b\x32*.kentik.synthetics.v202110beta2.HTTPConfig\"h\n\x0cPageLoadTest\x12\x0e\n\x06target\x18\x01 \x01(\t\x12\x0e\n\x06\x65xpiry\x18\x02 \x01(\r\x12\x38\n\x04http\x18\x03 \x01(\x0b\x32*.kentik.synthetics.v202110beta2.HTTPConfig\"\"\n\x0fNetworkGridTest\x12\x0f\n\x07targets\x18\x01 \x03(\t\"h\n\x0b\x44nsGridTest\x12\x0f\n\x07targets\x18\x01 \x03(\t\x12\x37\n\x04type\x18\x02 \x01(\x0e\x32).kentik.synthetics.v202110beta2.DNSRecord\x12\x0f\n\x07servers\x18\x03 \x03(\t\"\x92\x01\n\x0cMeshResponse\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x10\n\x08local_ip\x18\x03 \x01(\t\x12\n\n\x02ip\x18\x04 \x01(\t\x12\r\n\x05\x61lias\x18\x05 \x01(\t\x12;\n\x07\x63olumns\x18\x06 \x03(\x0b\x32*.kentik.synthetics.v202110beta2.MeshColumn\"\xc0\x01\n\nMeshColumn\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\r\n\x05\x61lias\x18\x03 \x01(\t\x12\x0e\n\x06target\x18\x04 \x01(\t\x12<\n\x07metrics\x18\x05 \x01(\x0b\x32+.kentik.synthetics.v202110beta2.MeshMetrics\x12;\n\x06health\x18\x06 \x03(\x0b\x32+.kentik.synthetics.v202110beta2.MeshMetrics\"9\n\nMeshMetric\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06health\x18\x02 \x01(\t\x12\r\n\x05value\x18\x03 \x01(\x03\"\xf1\x01\n\x0bMeshMetrics\x12(\n\x04time\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12;\n\x07latency\x18\x02 \x01(\x0b\x32*.kentik.synthetics.v202110beta2.MeshMetric\x12?\n\x0bpacket_loss\x18\x03 \x01(\x0b\x32*.kentik.synthetics.v202110beta2.MeshMetric\x12:\n\x06jitter\x18\x04 \x01(\x0b\x32*.kentik.synthetics.v202110beta2.MeshMetric\"\x1f\n\x03\x41SN\x12\n\n\x02id\x18\x01 \x01(\r\x12\x0c\n\x04name\x18\x02 \x01(\t\"%\n\x07\x43ountry\x12\x0c\n\x04\x63ode\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\"\"\n\x06Region\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0c\n\x04name\x18\x02 \x01(\t\"E\n\x04\x43ity\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x10\n\x08latitude\x18\x08 \x01(\x01\x12\x11\n\tlongitude\x18\t \x01(\x01\"\xab\x01\n\x03Geo\x12\x38\n\x07\x63ountry\x18\x01 \x01(\x0b\x32\'.kentik.synthetics.v202110beta2.Country\x12\x36\n\x06region\x18\x02 \x01(\x0b\x32&.kentik.synthetics.v202110beta2.Region\x12\x32\n\x04\x63ity\x18\x03 \x01(\x0b\x32$.kentik.synthetics.v202110beta2.City\"\x13\n\x03\x44NS\x12\x0c\n\x04name\x18\x01 \x01(\t\"\xde\x01\n\x06IPInfo\x12\n\n\x02ip\x18\x01 \x01(\t\x12\x30\n\x03\x61sn\x18\x02 \x01(\x0b\x32#.kentik.synthetics.v202110beta2.ASN\x12\x30\n\x03geo\x18\x03 \x01(\x0b\x32#.kentik.synthetics.v202110beta2.Geo\x12\x30\n\x03\x64ns\x18\x04 \x01(\x0b\x32#.kentik.synthetics.v202110beta2.DNS\x12\x11\n\tdevice_id\x18\x05 \x01(\t\x12\x0f\n\x07site_id\x18\x06 \x01(\t\x12\x0e\n\x06\x65gress\x18\x07 \x01(\t\" \n\x06IDByIP\x12\n\n\x02id\x18\x01 \x01(\t\x12\n\n\x02ip\x18\x02 \x01(\t\"\xf1\x02\n\x10TracerouteLookup\x12>\n\x0e\x61gent_id_by_ip\x18\x01 \x03(\x0b\x32&.kentik.synthetics.v202110beta2.IDByIP\x12\x35\n\x06\x61gents\x18\x02 \x03(\x0b\x32%.kentik.synthetics.v202110beta2.Agent\x12\x31\n\x04\x61sns\x18\x03 \x03(\x0b\x32#.kentik.synthetics.v202110beta2.ASN\x12?\n\x0f\x64\x65vice_id_by_ip\x18\x04 \x03(\x0b\x32&.kentik.synthetics.v202110beta2.IDByIP\x12=\n\rsite_id_by_ip\x18\x05 \x03(\x0b\x32&.kentik.synthetics.v202110beta2.IDByIP\x12\x33\n\x03ips\x18\x06 \x03(\x0b\x32&.kentik.synthetics.v202110beta2.IPInfo\"\xb1\x01\n\x08TraceHop\x12\x0b\n\x03ttl\x18\x01 \x01(\x05\x12\n\n\x02ip\x18\x02 \x01(\t\x12\x0f\n\x07timeout\x18\x03 \x01(\x08\x12\x0f\n\x07latency\x18\x04 \x01(\x05\x12\x1c\n\x14min_expected_latency\x18\x05 \x01(\x05\x12\x0b\n\x03\x61sn\x18\x06 \x01(\x05\x12\x0c\n\x04site\x18\x07 \x01(\x05\x12\x0e\n\x06region\x18\x08 \x01(\x05\x12\x0e\n\x06target\x18\t \x01(\x08\x12\x11\n\ttrace_end\x18\n \x01(\x08\"\xa3\x01\n\nTraceProbe\x12\x0f\n\x07\x61s_path\x18\x01 \x03(\x05\x12\x11\n\tcompleted\x18\x02 \x01(\x08\x12\x11\n\thop_count\x18\x03 \x01(\x05\x12\x13\n\x0bregion_path\x18\x04 \x03(\t\x12\x11\n\tsite_path\x18\x05 \x03(\x05\x12\x36\n\x04hops\x18\x06 \x03(\x0b\x32(.kentik.synthetics.v202110beta2.TraceHop\"\x8d\x01\n\x05Trace\x12\x10\n\x08\x61gent_id\x18\x01 \x01(\t\x12\x10\n\x08\x61gent_ip\x18\x02 \x01(\t\x12\x11\n\ttarget_ip\x18\x03 \x01(\t\x12\x11\n\thop_count\x18\x04 \x01(\x05\x12:\n\x06probes\x18\x05 \x03(\x0b\x32*.kentik.synthetics.v202110beta2.TraceProbe\"4\n\x05Stats\x12\x0f\n\x07\x61verage\x18\x01 \x01(\x05\x12\x0b\n\x03max\x18\x02 \x01(\x05\x12\r\n\x05total\x18\x03 \x01(\x05\"\xf5\x01\n\x10TracerouteResult\x12(\n\x04time\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x35\n\x06traces\x18\x02 \x03(\x0b\x32%.kentik.synthetics.v202110beta2.Trace\x12\x11\n\thop_count\x18\x03 \x01(\x05\x12\x34\n\x05\x63ount\x18\x04 \x01(\x0b\x32%.kentik.synthetics.v202110beta2.Stats\x12\x37\n\x08\x64istance\x18\x05 \x01(\x0b\x32%.kentik.synthetics.v202110beta2.Stats\"\x8b\x01\n\x0eTracerouteInfo\x12!\n\x19is_trace_routes_truncated\x18\x01 \x01(\x08\x12\x1a\n\x12max_asn_path_count\x18\x02 \x01(\x05\x12\x1b\n\x13max_site_path_count\x18\x03 \x01(\x05\x12\x1d\n\x15max_region_path_count\x18\x04 \x01(\x05\"\xbb\x01\n\x18GetHealthForTestsRequest\x12\x0b\n\x03ids\x18\x01 \x03(\t\x12.\n\nstart_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12,\n\x08\x65nd_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x11\n\tagent_ids\x18\x04 \x03(\t\x12\x10\n\x08task_ids\x18\x05 \x03(\t\x12\x0f\n\x07\x61ugment\x18\x06 \x01(\x08\"W\n\x19GetHealthForTestsResponse\x12:\n\x06health\x18\x01 \x03(\x0b\x32*.kentik.synthetics.v202110beta2.TestHealth\"\xa9\x01\n\x16GetTraceForTestRequest\x12\n\n\x02id\x18\x01 \x01(\t\x12.\n\nstart_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12,\n\x08\x65nd_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x11\n\tagent_ids\x18\x04 \x03(\t\x12\x12\n\ntarget_ips\x18\x05 \x03(\t\"\xef\x01\n\x17GetTraceForTestResponse\x12\x41\n\x07lookups\x18\x01 \x01(\x0b\x32\x30.kentik.synthetics.v202110beta2.TracerouteLookup\x12\x46\n\x0ctrace_routes\x18\x02 \x03(\x0b\x32\x30.kentik.synthetics.v202110beta2.TracerouteResult\x12I\n\x11trace_routes_info\x18\x03 \x01(\x0b\x32..kentik.synthetics.v202110beta2.TracerouteInfo\"\x13\n\x11ListAgentsRequest\"b\n\x12ListAgentsResponse\x12\x35\n\x06\x61gents\x18\x01 \x03(\x0b\x32%.kentik.synthetics.v202110beta2.Agent\x12\x15\n\rinvalid_count\x18\x02 \x01(\r\"\x1d\n\x0fGetAgentRequest\x12\n\n\x02id\x18\x01 \x01(\t\"H\n\x10GetAgentResponse\x12\x34\n\x05\x61gent\x18\x01 \x01(\x0b\x32%.kentik.synthetics.v202110beta2.Agent\"J\n\x12UpdateAgentRequest\x12\x34\n\x05\x61gent\x18\x01 \x01(\x0b\x32%.kentik.synthetics.v202110beta2.Agent\"K\n\x13UpdateAgentResponse\x12\x34\n\x05\x61gent\x18\x01 \x01(\x0b\x32%.kentik.synthetics.v202110beta2.Agent\" \n\x12\x44\x65leteAgentRequest\x12\n\n\x02id\x18\x01 \x01(\t\"\x15\n\x13\x44\x65leteAgentResponse\"\x12\n\x10ListTestsRequest\"_\n\x11ListTestsResponse\x12\x33\n\x05tests\x18\x01 \x03(\x0b\x32$.kentik.synthetics.v202110beta2.Test\x12\x15\n\rinvalid_count\x18\x02 \x01(\r\"G\n\x11\x43reateTestRequest\x12\x32\n\x04test\x18\x01 \x01(\x0b\x32$.kentik.synthetics.v202110beta2.Test\"H\n\x12\x43reateTestResponse\x12\x32\n\x04test\x18\x01 \x01(\x0b\x32$.kentik.synthetics.v202110beta2.Test\"\x1c\n\x0eGetTestRequest\x12\n\n\x02id\x18\x01 \x01(\t\"E\n\x0fGetTestResponse\x12\x32\n\x04test\x18\x01 \x01(\x0b\x32$.kentik.synthetics.v202110beta2.Test\"G\n\x11UpdateTestRequest\x12\x32\n\x04test\x18\x01 \x01(\x0b\x32$.kentik.synthetics.v202110beta2.Test\"H\n\x12UpdateTestResponse\x12\x32\n\x04test\x18\x01 \x01(\x0b\x32$.kentik.synthetics.v202110beta2.Test\"\x1f\n\x11\x44\x65leteTestRequest\x12\n\n\x02id\x18\x01 \x01(\t\"\x14\n\x12\x44\x65leteTestResponse*a\n\rImplementType\x12\x1e\n\x1aIMPLEMENT_TYPE_UNSPECIFIED\x10\x00\x12\x17\n\x13IMPLEMENT_TYPE_RUST\x10\x01\x12\x17\n\x13IMPLEMENT_TYPE_NODE\x10\x02*]\n\x08IPFamily\x12\x19\n\x15IP_FAMILY_UNSPECIFIED\x10\x00\x12\x10\n\x0cIP_FAMILY_V4\x10\x01\x12\x10\n\x0cIP_FAMILY_V6\x10\x02\x12\x12\n\x0eIP_FAMILY_DUAL\x10\x03*r\n\nTestStatus\x12\x1b\n\x17TEST_STATUS_UNSPECIFIED\x10\x00\x12\x16\n\x12TEST_STATUS_ACTIVE\x10\x01\x12\x16\n\x12TEST_STATUS_PAUSED\x10\x02\x12\x17\n\x13TEST_STATUS_DELETED\x10\x03*q\n\x0b\x41gentStatus\x12\x1c\n\x18\x41GENT_STATUS_UNSPECIFIED\x10\x00\x12\x13\n\x0f\x41GENT_STATUS_OK\x10\x01\x12\x15\n\x11\x41GENT_STATUS_WAIT\x10\x02\x12\x18\n\x14\x41GENT_STATUS_DELETED\x10\x03*o\n\tTaskState\x12\x1a\n\x16TASK_STATE_UNSPECIFIED\x10\x00\x12\x16\n\x12TASK_STATE_CREATED\x10\x01\x12\x16\n\x12TASK_STATE_UPDATED\x10\x02\x12\x16\n\x12TASK_STATE_DELETED\x10\x03*\xc8\x01\n\tDNSRecord\x12\x1a\n\x16\x44NS_RECORD_UNSPECIFIED\x10\x00\x12\x10\n\x0c\x44NS_RECORD_A\x10\x01\x12\x13\n\x0f\x44NS_RECORD_AAAA\x10\x02\x12\x14\n\x10\x44NS_RECORD_CNAME\x10\x03\x12\x14\n\x10\x44NS_RECORD_DNAME\x10\x04\x12\x11\n\rDNS_RECORD_NS\x10\x05\x12\x11\n\rDNS_RECORD_MX\x10\x06\x12\x12\n\x0e\x44NS_RECORD_PTR\x10\x07\x12\x12\n\x0e\x44NS_RECORD_SOA\x10\x08\x32\xc5\x05\n\x15SyntheticsDataService\x12\xde\x02\n\x11GetHealthForTests\x12\x38.kentik.synthetics.v202110beta2.GetHealthForTestsRequest\x1a\x39.kentik.synthetics.v202110beta2.GetHealthForTestsResponse\"\xd3\x01\xf2\xd7\x02\x0fsynthetics:read\x82\xd3\xe4\x93\x02,\"\'/synthetics/v202110beta2/results/health:\x01*\x92\x41\x8a\x01\x12&Get health status for synthetics test.\x1aMGet synthetics health test for login user. Also returns mesh data on request.*\x11GetHealthForTests\x12\xa4\x02\n\x0fGetTraceForTest\x12\x36.kentik.synthetics.v202110beta2.GetTraceForTestRequest\x1a\x37.kentik.synthetics.v202110beta2.GetTraceForTestResponse\"\x9f\x01\xf2\xd7\x02\x0fsynthetics:read\x82\xd3\xe4\x93\x02+\"&/synthetics/v202110beta2/results/trace:\x01*\x92\x41X\x12\x15Get trace route data.\x1a.Get trace route data for the specific test id.*\x0fGetTraceForTest\x1a$\xca\x41\x13grpc.api.kentik.com\xea\xd7\x02\nsynthetics2\xf6\x13\n\x16SyntheticsAdminService\x12\xed\x01\n\nListAgents\x12\x31.kentik.synthetics.v202110beta2.ListAgentsRequest\x1a\x32.kentik.synthetics.v202110beta2.ListAgentsResponse\"x\xf2\xd7\x02\x15\x61\x64min.synthetics:read\x82\xd3\xe4\x93\x02!\x12\x1f/synthetics/v202110beta2/agents\x92\x41\x35\x12\x0cList Agents.\x1a\x19Returns a list of agents.*\nAgentsList\x12\x9b\x02\n\x08GetAgent\x12/.kentik.synthetics.v202110beta2.GetAgentRequest\x1a\x30.kentik.synthetics.v202110beta2.GetAgentResponse\"\xab\x01\xf2\xd7\x02\x15\x61\x64min.synthetics:read\x82\xd3\xe4\x93\x02&\x12$/synthetics/v202110beta2/agents/{id}\x92\x41\x63\x12\x1fGet information about an agent.\x1a\x36Returns information about the agent specified with id.*\x08\x41gentGet\x12\x97\x02\n\x0bUpdateAgent\x12\x32.kentik.synthetics.v202110beta2.UpdateAgentRequest\x1a\x33.kentik.synthetics.v202110beta2.UpdateAgentResponse\"\x9e\x01\xf2\xd7\x02\x16\x61\x64min.synthetics:write\x82\xd3\xe4\x93\x02/\x1a*/synthetics/v202110beta2/agents/{agent.id}:\x01*\x92\x41L\x12\x10Update an agent.\x1a+Update configuration of a synthetics agent.*\x0b\x41gentUpdate\x12\x87\x02\n\x0b\x44\x65leteAgent\x12\x32.kentik.synthetics.v202110beta2.DeleteAgentRequest\x1a\x33.kentik.synthetics.v202110beta2.DeleteAgentResponse\"\x8e\x01\xf2\xd7\x02\x16\x61\x64min.synthetics:write\x82\xd3\xe4\x93\x02&*$/synthetics/v202110beta2/agents/{id}\x92\x41\x45\x12\x10\x44\x65lete an agent.\x1a$Deletes the agent specified with id.*\x0b\x41gentDelete\x12\xfd\x01\n\tListTests\x12\x30.kentik.synthetics.v202110beta2.ListTestsRequest\x1a\x31.kentik.synthetics.v202110beta2.ListTestsResponse\"\x8a\x01\xf2\xd7\x02\x15\x61\x64min.synthetics:read\x82\xd3\xe4\x93\x02 \x12\x1e/synthetics/v202110beta2/tests\x92\x41H\x12\x16List Synthetics Tests.\x1a#Returns a list of syntehtics tests.*\tTestsList\x12\x9d\x02\n\nCreateTest\x12\x31.kentik.synthetics.v202110beta2.CreateTestRequest\x1a\x32.kentik.synthetics.v202110beta2.CreateTestResponse\"\xa7\x01\xf2\xd7\x02\x16\x61\x64min.synthetics:write\x82\xd3\xe4\x93\x02#\"\x1e/synthetics/v202110beta2/tests:\x01*\x92\x41\x61\x12\x17\x43reate Synthetics Test.\x1a:Create synthetics test from request. Returns created test.*\nTestCreate\x12\xa8\x02\n\x07GetTest\x12..kentik.synthetics.v202110beta2.GetTestRequest\x1a/.kentik.synthetics.v202110beta2.GetTestResponse\"\xbb\x01\xf2\xd7\x02\x15\x61\x64min.synthetics:read\x82\xd3\xe4\x93\x02%\x12#/synthetics/v202110beta2/tests/{id}\x92\x41t\x12&Get information about Synthetics Test.\x1a\x41Returns information about synthetics test specified with test ID.*\x07TestGet\x12\x99\x02\n\nUpdateTest\x12\x31.kentik.synthetics.v202110beta2.UpdateTestRequest\x1a\x32.kentik.synthetics.v202110beta2.UpdateTestResponse\"\xa3\x01\xf2\xd7\x02\x16\x61\x64min.synthetics:write\x82\xd3\xe4\x93\x02-\x1a(/synthetics/v202110beta2/tests/{test.id}:\x01*\x92\x41S\x12\x19Update a Synthetics Test.\x1a*Updates configuration of a synthetic test.*\nTestUpdate\x12\x96\x02\n\nDeleteTest\x12\x31.kentik.synthetics.v202110beta2.DeleteTestRequest\x1a\x32.kentik.synthetics.v202110beta2.DeleteTestResponse\"\xa0\x01\xf2\xd7\x02\x16\x61\x64min.synthetics:write\x82\xd3\xe4\x93\x02%*#/synthetics/v202110beta2/tests/{id}\x92\x41X\x12\x1a\x44\x65lete an Synthetics Test.\x1a.Deletes the synthetics test specified with id.*\nTestDelete\x1a*\xca\x41\x13grpc.api.kentik.com\xea\xd7\x02\x10\x61\x64min.syntheticsB\xf2\x02ZMgithub.com/kentik/api-schema/gen/go/kentik/synthetics/v202110beta2;synthetics\x92\x41\x9f\x02\x12\x61\n\x19Synthetics Monitoring API\"7\n\x16Kentik API Engineering\x12\x1dhttps://github.com/kentik/api2\x0b\x32\x30\x32\x31\x31\x30\x62\x65ta2*\x01\x02\x32\x10\x61pplication/json:\x10\x61pplication/jsonZD\n\x1e\n\x05\x65mail\x12\x15\x08\x02\x1a\x0fX-CH-Auth-Email \x02\n\"\n\x05token\x12\x19\x08\x02\x1a\x13X-CH-Auth-API-Token \x02\x62\x16\n\t\n\x05\x65mail\x12\x00\n\t\n\x05token\x12\x00r5\n\x16More about Kentik APIs\x12\x1bhttps://docs.kentik.com/apib\x06proto3')

_IMPLEMENTTYPE = DESCRIPTOR.enum_types_by_name['ImplementType']
ImplementType = enum_type_wrapper.EnumTypeWrapper(_IMPLEMENTTYPE)
_IPFAMILY = DESCRIPTOR.enum_types_by_name['IPFamily']
IPFamily = enum_type_wrapper.EnumTypeWrapper(_IPFAMILY)
_TESTSTATUS = DESCRIPTOR.enum_types_by_name['TestStatus']
TestStatus = enum_type_wrapper.EnumTypeWrapper(_TESTSTATUS)
_AGENTSTATUS = DESCRIPTOR.enum_types_by_name['AgentStatus']
AgentStatus = enum_type_wrapper.EnumTypeWrapper(_AGENTSTATUS)
_TASKSTATE = DESCRIPTOR.enum_types_by_name['TaskState']
TaskState = enum_type_wrapper.EnumTypeWrapper(_TASKSTATE)
_DNSRECORD = DESCRIPTOR.enum_types_by_name['DNSRecord']
DNSRecord = enum_type_wrapper.EnumTypeWrapper(_DNSRECORD)
IMPLEMENT_TYPE_UNSPECIFIED = 0
IMPLEMENT_TYPE_RUST = 1
IMPLEMENT_TYPE_NODE = 2
IP_FAMILY_UNSPECIFIED = 0
IP_FAMILY_V4 = 1
IP_FAMILY_V6 = 2
IP_FAMILY_DUAL = 3
TEST_STATUS_UNSPECIFIED = 0
TEST_STATUS_ACTIVE = 1
TEST_STATUS_PAUSED = 2
TEST_STATUS_DELETED = 3
AGENT_STATUS_UNSPECIFIED = 0
AGENT_STATUS_OK = 1
AGENT_STATUS_WAIT = 2
AGENT_STATUS_DELETED = 3
TASK_STATE_UNSPECIFIED = 0
TASK_STATE_CREATED = 1
TASK_STATE_UPDATED = 2
TASK_STATE_DELETED = 3
DNS_RECORD_UNSPECIFIED = 0
DNS_RECORD_A = 1
DNS_RECORD_AAAA = 2
DNS_RECORD_CNAME = 3
DNS_RECORD_DNAME = 4
DNS_RECORD_NS = 5
DNS_RECORD_MX = 6
DNS_RECORD_PTR = 7
DNS_RECORD_SOA = 8


_HEALTH = DESCRIPTOR.message_types_by_name['Health']
_AGENTTASKCONFIG = DESCRIPTOR.message_types_by_name['AgentTaskConfig']
_TESTHEALTH = DESCRIPTOR.message_types_by_name['TestHealth']
_TASKHEALTH = DESCRIPTOR.message_types_by_name['TaskHealth']
_AGENTHEALTH = DESCRIPTOR.message_types_by_name['AgentHealth']
_HEALTHMOMENT = DESCRIPTOR.message_types_by_name['HealthMoment']
_AGENT = DESCRIPTOR.message_types_by_name['Agent']
_PINGTASKDEFINITION = DESCRIPTOR.message_types_by_name['PingTaskDefinition']
_TRACETASKDEFINITION = DESCRIPTOR.message_types_by_name['TraceTaskDefinition']
_HTTPTASKDEFINITION = DESCRIPTOR.message_types_by_name['HTTPTaskDefinition']
_TASK = DESCRIPTOR.message_types_by_name['Task']
_DNSTASKDEFINITION = DESCRIPTOR.message_types_by_name['DNSTaskDefinition']
_SHAKETASKDEFINITION = DESCRIPTOR.message_types_by_name['ShakeTaskDefinition']
_USERINFO = DESCRIPTOR.message_types_by_name['UserInfo']
_TEST = DESCRIPTOR.message_types_by_name['Test']
_HTTPCONFIG = DESCRIPTOR.message_types_by_name['HTTPConfig']
_HTTPCONFIG_HEADERSENTRY = _HTTPCONFIG.nested_types_by_name['HeadersEntry']
_HTTPCONFIG_CSSSELECTORSENTRY = _HTTPCONFIG.nested_types_by_name['CssSelectorsEntry']
_TESTSETTINGS = DESCRIPTOR.message_types_by_name['TestSettings']
_TESTPINGSETTINGS = DESCRIPTOR.message_types_by_name['TestPingSettings']
_TESTTRACESETTINGS = DESCRIPTOR.message_types_by_name['TestTraceSettings']
_HEALTHSETTINGS = DESCRIPTOR.message_types_by_name['HealthSettings']
_HOSTNAMETEST = DESCRIPTOR.message_types_by_name['HostnameTest']
_IPTEST = DESCRIPTOR.message_types_by_name['IpTest']
_AGENTTEST = DESCRIPTOR.message_types_by_name['AgentTest']
_FLOWTEST = DESCRIPTOR.message_types_by_name['FlowTest']
_DNSTEST = DESCRIPTOR.message_types_by_name['DnsTest']
_URLTEST = DESCRIPTOR.message_types_by_name['UrlTest']
_PAGELOADTEST = DESCRIPTOR.message_types_by_name['PageLoadTest']
_NETWORKGRIDTEST = DESCRIPTOR.message_types_by_name['NetworkGridTest']
_DNSGRIDTEST = DESCRIPTOR.message_types_by_name['DnsGridTest']
_MESHRESPONSE = DESCRIPTOR.message_types_by_name['MeshResponse']
_MESHCOLUMN = DESCRIPTOR.message_types_by_name['MeshColumn']
_MESHMETRIC = DESCRIPTOR.message_types_by_name['MeshMetric']
_MESHMETRICS = DESCRIPTOR.message_types_by_name['MeshMetrics']
_ASN = DESCRIPTOR.message_types_by_name['ASN']
_COUNTRY = DESCRIPTOR.message_types_by_name['Country']
_REGION = DESCRIPTOR.message_types_by_name['Region']
_CITY = DESCRIPTOR.message_types_by_name['City']
_GEO = DESCRIPTOR.message_types_by_name['Geo']
_DNS = DESCRIPTOR.message_types_by_name['DNS']
_IPINFO = DESCRIPTOR.message_types_by_name['IPInfo']
_IDBYIP = DESCRIPTOR.message_types_by_name['IDByIP']
_TRACEROUTELOOKUP = DESCRIPTOR.message_types_by_name['TracerouteLookup']
_TRACEHOP = DESCRIPTOR.message_types_by_name['TraceHop']
_TRACEPROBE = DESCRIPTOR.message_types_by_name['TraceProbe']
_TRACE = DESCRIPTOR.message_types_by_name['Trace']
_STATS = DESCRIPTOR.message_types_by_name['Stats']
_TRACEROUTERESULT = DESCRIPTOR.message_types_by_name['TracerouteResult']
_TRACEROUTEINFO = DESCRIPTOR.message_types_by_name['TracerouteInfo']
_GETHEALTHFORTESTSREQUEST = DESCRIPTOR.message_types_by_name['GetHealthForTestsRequest']
_GETHEALTHFORTESTSRESPONSE = DESCRIPTOR.message_types_by_name['GetHealthForTestsResponse']
_GETTRACEFORTESTREQUEST = DESCRIPTOR.message_types_by_name['GetTraceForTestRequest']
_GETTRACEFORTESTRESPONSE = DESCRIPTOR.message_types_by_name['GetTraceForTestResponse']
_LISTAGENTSREQUEST = DESCRIPTOR.message_types_by_name['ListAgentsRequest']
_LISTAGENTSRESPONSE = DESCRIPTOR.message_types_by_name['ListAgentsResponse']
_GETAGENTREQUEST = DESCRIPTOR.message_types_by_name['GetAgentRequest']
_GETAGENTRESPONSE = DESCRIPTOR.message_types_by_name['GetAgentResponse']
_UPDATEAGENTREQUEST = DESCRIPTOR.message_types_by_name['UpdateAgentRequest']
_UPDATEAGENTRESPONSE = DESCRIPTOR.message_types_by_name['UpdateAgentResponse']
_DELETEAGENTREQUEST = DESCRIPTOR.message_types_by_name['DeleteAgentRequest']
_DELETEAGENTRESPONSE = DESCRIPTOR.message_types_by_name['DeleteAgentResponse']
_LISTTESTSREQUEST = DESCRIPTOR.message_types_by_name['ListTestsRequest']
_LISTTESTSRESPONSE = DESCRIPTOR.message_types_by_name['ListTestsResponse']
_CREATETESTREQUEST = DESCRIPTOR.message_types_by_name['CreateTestRequest']
_CREATETESTRESPONSE = DESCRIPTOR.message_types_by_name['CreateTestResponse']
_GETTESTREQUEST = DESCRIPTOR.message_types_by_name['GetTestRequest']
_GETTESTRESPONSE = DESCRIPTOR.message_types_by_name['GetTestResponse']
_UPDATETESTREQUEST = DESCRIPTOR.message_types_by_name['UpdateTestRequest']
_UPDATETESTRESPONSE = DESCRIPTOR.message_types_by_name['UpdateTestResponse']
_DELETETESTREQUEST = DESCRIPTOR.message_types_by_name['DeleteTestRequest']
_DELETETESTRESPONSE = DESCRIPTOR.message_types_by_name['DeleteTestResponse']
Health = _reflection.GeneratedProtocolMessageType('Health', (_message.Message,), {
  'DESCRIPTOR' : _HEALTH,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.Health)
  })
_sym_db.RegisterMessage(Health)

AgentTaskConfig = _reflection.GeneratedProtocolMessageType('AgentTaskConfig', (_message.Message,), {
  'DESCRIPTOR' : _AGENTTASKCONFIG,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.AgentTaskConfig)
  })
_sym_db.RegisterMessage(AgentTaskConfig)

TestHealth = _reflection.GeneratedProtocolMessageType('TestHealth', (_message.Message,), {
  'DESCRIPTOR' : _TESTHEALTH,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.TestHealth)
  })
_sym_db.RegisterMessage(TestHealth)

TaskHealth = _reflection.GeneratedProtocolMessageType('TaskHealth', (_message.Message,), {
  'DESCRIPTOR' : _TASKHEALTH,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.TaskHealth)
  })
_sym_db.RegisterMessage(TaskHealth)

AgentHealth = _reflection.GeneratedProtocolMessageType('AgentHealth', (_message.Message,), {
  'DESCRIPTOR' : _AGENTHEALTH,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.AgentHealth)
  })
_sym_db.RegisterMessage(AgentHealth)

HealthMoment = _reflection.GeneratedProtocolMessageType('HealthMoment', (_message.Message,), {
  'DESCRIPTOR' : _HEALTHMOMENT,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.HealthMoment)
  })
_sym_db.RegisterMessage(HealthMoment)

Agent = _reflection.GeneratedProtocolMessageType('Agent', (_message.Message,), {
  'DESCRIPTOR' : _AGENT,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.Agent)
  })
_sym_db.RegisterMessage(Agent)

PingTaskDefinition = _reflection.GeneratedProtocolMessageType('PingTaskDefinition', (_message.Message,), {
  'DESCRIPTOR' : _PINGTASKDEFINITION,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.PingTaskDefinition)
  })
_sym_db.RegisterMessage(PingTaskDefinition)

TraceTaskDefinition = _reflection.GeneratedProtocolMessageType('TraceTaskDefinition', (_message.Message,), {
  'DESCRIPTOR' : _TRACETASKDEFINITION,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.TraceTaskDefinition)
  })
_sym_db.RegisterMessage(TraceTaskDefinition)

HTTPTaskDefinition = _reflection.GeneratedProtocolMessageType('HTTPTaskDefinition', (_message.Message,), {
  'DESCRIPTOR' : _HTTPTASKDEFINITION,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.HTTPTaskDefinition)
  })
_sym_db.RegisterMessage(HTTPTaskDefinition)

Task = _reflection.GeneratedProtocolMessageType('Task', (_message.Message,), {
  'DESCRIPTOR' : _TASK,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.Task)
  })
_sym_db.RegisterMessage(Task)

DNSTaskDefinition = _reflection.GeneratedProtocolMessageType('DNSTaskDefinition', (_message.Message,), {
  'DESCRIPTOR' : _DNSTASKDEFINITION,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.DNSTaskDefinition)
  })
_sym_db.RegisterMessage(DNSTaskDefinition)

ShakeTaskDefinition = _reflection.GeneratedProtocolMessageType('ShakeTaskDefinition', (_message.Message,), {
  'DESCRIPTOR' : _SHAKETASKDEFINITION,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.ShakeTaskDefinition)
  })
_sym_db.RegisterMessage(ShakeTaskDefinition)

UserInfo = _reflection.GeneratedProtocolMessageType('UserInfo', (_message.Message,), {
  'DESCRIPTOR' : _USERINFO,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.UserInfo)
  })
_sym_db.RegisterMessage(UserInfo)

Test = _reflection.GeneratedProtocolMessageType('Test', (_message.Message,), {
  'DESCRIPTOR' : _TEST,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.Test)
  })
_sym_db.RegisterMessage(Test)

HTTPConfig = _reflection.GeneratedProtocolMessageType('HTTPConfig', (_message.Message,), {

  'HeadersEntry' : _reflection.GeneratedProtocolMessageType('HeadersEntry', (_message.Message,), {
    'DESCRIPTOR' : _HTTPCONFIG_HEADERSENTRY,
    '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
    # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.HTTPConfig.HeadersEntry)
    })
  ,

  'CssSelectorsEntry' : _reflection.GeneratedProtocolMessageType('CssSelectorsEntry', (_message.Message,), {
    'DESCRIPTOR' : _HTTPCONFIG_CSSSELECTORSENTRY,
    '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
    # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.HTTPConfig.CssSelectorsEntry)
    })
  ,
  'DESCRIPTOR' : _HTTPCONFIG,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.HTTPConfig)
  })
_sym_db.RegisterMessage(HTTPConfig)
_sym_db.RegisterMessage(HTTPConfig.HeadersEntry)
_sym_db.RegisterMessage(HTTPConfig.CssSelectorsEntry)

TestSettings = _reflection.GeneratedProtocolMessageType('TestSettings', (_message.Message,), {
  'DESCRIPTOR' : _TESTSETTINGS,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.TestSettings)
  })
_sym_db.RegisterMessage(TestSettings)

TestPingSettings = _reflection.GeneratedProtocolMessageType('TestPingSettings', (_message.Message,), {
  'DESCRIPTOR' : _TESTPINGSETTINGS,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.TestPingSettings)
  })
_sym_db.RegisterMessage(TestPingSettings)

TestTraceSettings = _reflection.GeneratedProtocolMessageType('TestTraceSettings', (_message.Message,), {
  'DESCRIPTOR' : _TESTTRACESETTINGS,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.TestTraceSettings)
  })
_sym_db.RegisterMessage(TestTraceSettings)

HealthSettings = _reflection.GeneratedProtocolMessageType('HealthSettings', (_message.Message,), {
  'DESCRIPTOR' : _HEALTHSETTINGS,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.HealthSettings)
  })
_sym_db.RegisterMessage(HealthSettings)

HostnameTest = _reflection.GeneratedProtocolMessageType('HostnameTest', (_message.Message,), {
  'DESCRIPTOR' : _HOSTNAMETEST,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.HostnameTest)
  })
_sym_db.RegisterMessage(HostnameTest)

IpTest = _reflection.GeneratedProtocolMessageType('IpTest', (_message.Message,), {
  'DESCRIPTOR' : _IPTEST,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.IpTest)
  })
_sym_db.RegisterMessage(IpTest)

AgentTest = _reflection.GeneratedProtocolMessageType('AgentTest', (_message.Message,), {
  'DESCRIPTOR' : _AGENTTEST,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.AgentTest)
  })
_sym_db.RegisterMessage(AgentTest)

FlowTest = _reflection.GeneratedProtocolMessageType('FlowTest', (_message.Message,), {
  'DESCRIPTOR' : _FLOWTEST,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.FlowTest)
  })
_sym_db.RegisterMessage(FlowTest)

DnsTest = _reflection.GeneratedProtocolMessageType('DnsTest', (_message.Message,), {
  'DESCRIPTOR' : _DNSTEST,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.DnsTest)
  })
_sym_db.RegisterMessage(DnsTest)

UrlTest = _reflection.GeneratedProtocolMessageType('UrlTest', (_message.Message,), {
  'DESCRIPTOR' : _URLTEST,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.UrlTest)
  })
_sym_db.RegisterMessage(UrlTest)

PageLoadTest = _reflection.GeneratedProtocolMessageType('PageLoadTest', (_message.Message,), {
  'DESCRIPTOR' : _PAGELOADTEST,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.PageLoadTest)
  })
_sym_db.RegisterMessage(PageLoadTest)

NetworkGridTest = _reflection.GeneratedProtocolMessageType('NetworkGridTest', (_message.Message,), {
  'DESCRIPTOR' : _NETWORKGRIDTEST,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.NetworkGridTest)
  })
_sym_db.RegisterMessage(NetworkGridTest)

DnsGridTest = _reflection.GeneratedProtocolMessageType('DnsGridTest', (_message.Message,), {
  'DESCRIPTOR' : _DNSGRIDTEST,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.DnsGridTest)
  })
_sym_db.RegisterMessage(DnsGridTest)

MeshResponse = _reflection.GeneratedProtocolMessageType('MeshResponse', (_message.Message,), {
  'DESCRIPTOR' : _MESHRESPONSE,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.MeshResponse)
  })
_sym_db.RegisterMessage(MeshResponse)

MeshColumn = _reflection.GeneratedProtocolMessageType('MeshColumn', (_message.Message,), {
  'DESCRIPTOR' : _MESHCOLUMN,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.MeshColumn)
  })
_sym_db.RegisterMessage(MeshColumn)

MeshMetric = _reflection.GeneratedProtocolMessageType('MeshMetric', (_message.Message,), {
  'DESCRIPTOR' : _MESHMETRIC,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.MeshMetric)
  })
_sym_db.RegisterMessage(MeshMetric)

MeshMetrics = _reflection.GeneratedProtocolMessageType('MeshMetrics', (_message.Message,), {
  'DESCRIPTOR' : _MESHMETRICS,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.MeshMetrics)
  })
_sym_db.RegisterMessage(MeshMetrics)

ASN = _reflection.GeneratedProtocolMessageType('ASN', (_message.Message,), {
  'DESCRIPTOR' : _ASN,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.ASN)
  })
_sym_db.RegisterMessage(ASN)

Country = _reflection.GeneratedProtocolMessageType('Country', (_message.Message,), {
  'DESCRIPTOR' : _COUNTRY,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.Country)
  })
_sym_db.RegisterMessage(Country)

Region = _reflection.GeneratedProtocolMessageType('Region', (_message.Message,), {
  'DESCRIPTOR' : _REGION,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.Region)
  })
_sym_db.RegisterMessage(Region)

City = _reflection.GeneratedProtocolMessageType('City', (_message.Message,), {
  'DESCRIPTOR' : _CITY,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.City)
  })
_sym_db.RegisterMessage(City)

Geo = _reflection.GeneratedProtocolMessageType('Geo', (_message.Message,), {
  'DESCRIPTOR' : _GEO,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.Geo)
  })
_sym_db.RegisterMessage(Geo)

DNS = _reflection.GeneratedProtocolMessageType('DNS', (_message.Message,), {
  'DESCRIPTOR' : _DNS,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.DNS)
  })
_sym_db.RegisterMessage(DNS)

IPInfo = _reflection.GeneratedProtocolMessageType('IPInfo', (_message.Message,), {
  'DESCRIPTOR' : _IPINFO,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.IPInfo)
  })
_sym_db.RegisterMessage(IPInfo)

IDByIP = _reflection.GeneratedProtocolMessageType('IDByIP', (_message.Message,), {
  'DESCRIPTOR' : _IDBYIP,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.IDByIP)
  })
_sym_db.RegisterMessage(IDByIP)

TracerouteLookup = _reflection.GeneratedProtocolMessageType('TracerouteLookup', (_message.Message,), {
  'DESCRIPTOR' : _TRACEROUTELOOKUP,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.TracerouteLookup)
  })
_sym_db.RegisterMessage(TracerouteLookup)

TraceHop = _reflection.GeneratedProtocolMessageType('TraceHop', (_message.Message,), {
  'DESCRIPTOR' : _TRACEHOP,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.TraceHop)
  })
_sym_db.RegisterMessage(TraceHop)

TraceProbe = _reflection.GeneratedProtocolMessageType('TraceProbe', (_message.Message,), {
  'DESCRIPTOR' : _TRACEPROBE,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.TraceProbe)
  })
_sym_db.RegisterMessage(TraceProbe)

Trace = _reflection.GeneratedProtocolMessageType('Trace', (_message.Message,), {
  'DESCRIPTOR' : _TRACE,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.Trace)
  })
_sym_db.RegisterMessage(Trace)

Stats = _reflection.GeneratedProtocolMessageType('Stats', (_message.Message,), {
  'DESCRIPTOR' : _STATS,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.Stats)
  })
_sym_db.RegisterMessage(Stats)

TracerouteResult = _reflection.GeneratedProtocolMessageType('TracerouteResult', (_message.Message,), {
  'DESCRIPTOR' : _TRACEROUTERESULT,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.TracerouteResult)
  })
_sym_db.RegisterMessage(TracerouteResult)

TracerouteInfo = _reflection.GeneratedProtocolMessageType('TracerouteInfo', (_message.Message,), {
  'DESCRIPTOR' : _TRACEROUTEINFO,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.TracerouteInfo)
  })
_sym_db.RegisterMessage(TracerouteInfo)

GetHealthForTestsRequest = _reflection.GeneratedProtocolMessageType('GetHealthForTestsRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETHEALTHFORTESTSREQUEST,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.GetHealthForTestsRequest)
  })
_sym_db.RegisterMessage(GetHealthForTestsRequest)

GetHealthForTestsResponse = _reflection.GeneratedProtocolMessageType('GetHealthForTestsResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETHEALTHFORTESTSRESPONSE,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.GetHealthForTestsResponse)
  })
_sym_db.RegisterMessage(GetHealthForTestsResponse)

GetTraceForTestRequest = _reflection.GeneratedProtocolMessageType('GetTraceForTestRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETTRACEFORTESTREQUEST,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.GetTraceForTestRequest)
  })
_sym_db.RegisterMessage(GetTraceForTestRequest)

GetTraceForTestResponse = _reflection.GeneratedProtocolMessageType('GetTraceForTestResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETTRACEFORTESTRESPONSE,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.GetTraceForTestResponse)
  })
_sym_db.RegisterMessage(GetTraceForTestResponse)

ListAgentsRequest = _reflection.GeneratedProtocolMessageType('ListAgentsRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTAGENTSREQUEST,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.ListAgentsRequest)
  })
_sym_db.RegisterMessage(ListAgentsRequest)

ListAgentsResponse = _reflection.GeneratedProtocolMessageType('ListAgentsResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTAGENTSRESPONSE,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.ListAgentsResponse)
  })
_sym_db.RegisterMessage(ListAgentsResponse)

GetAgentRequest = _reflection.GeneratedProtocolMessageType('GetAgentRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETAGENTREQUEST,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.GetAgentRequest)
  })
_sym_db.RegisterMessage(GetAgentRequest)

GetAgentResponse = _reflection.GeneratedProtocolMessageType('GetAgentResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETAGENTRESPONSE,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.GetAgentResponse)
  })
_sym_db.RegisterMessage(GetAgentResponse)

UpdateAgentRequest = _reflection.GeneratedProtocolMessageType('UpdateAgentRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEAGENTREQUEST,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.UpdateAgentRequest)
  })
_sym_db.RegisterMessage(UpdateAgentRequest)

UpdateAgentResponse = _reflection.GeneratedProtocolMessageType('UpdateAgentResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEAGENTRESPONSE,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.UpdateAgentResponse)
  })
_sym_db.RegisterMessage(UpdateAgentResponse)

DeleteAgentRequest = _reflection.GeneratedProtocolMessageType('DeleteAgentRequest', (_message.Message,), {
  'DESCRIPTOR' : _DELETEAGENTREQUEST,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.DeleteAgentRequest)
  })
_sym_db.RegisterMessage(DeleteAgentRequest)

DeleteAgentResponse = _reflection.GeneratedProtocolMessageType('DeleteAgentResponse', (_message.Message,), {
  'DESCRIPTOR' : _DELETEAGENTRESPONSE,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.DeleteAgentResponse)
  })
_sym_db.RegisterMessage(DeleteAgentResponse)

ListTestsRequest = _reflection.GeneratedProtocolMessageType('ListTestsRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTSREQUEST,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.ListTestsRequest)
  })
_sym_db.RegisterMessage(ListTestsRequest)

ListTestsResponse = _reflection.GeneratedProtocolMessageType('ListTestsResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTSRESPONSE,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.ListTestsResponse)
  })
_sym_db.RegisterMessage(ListTestsResponse)

CreateTestRequest = _reflection.GeneratedProtocolMessageType('CreateTestRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATETESTREQUEST,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.CreateTestRequest)
  })
_sym_db.RegisterMessage(CreateTestRequest)

CreateTestResponse = _reflection.GeneratedProtocolMessageType('CreateTestResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATETESTRESPONSE,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.CreateTestResponse)
  })
_sym_db.RegisterMessage(CreateTestResponse)

GetTestRequest = _reflection.GeneratedProtocolMessageType('GetTestRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETTESTREQUEST,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.GetTestRequest)
  })
_sym_db.RegisterMessage(GetTestRequest)

GetTestResponse = _reflection.GeneratedProtocolMessageType('GetTestResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETTESTRESPONSE,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.GetTestResponse)
  })
_sym_db.RegisterMessage(GetTestResponse)

UpdateTestRequest = _reflection.GeneratedProtocolMessageType('UpdateTestRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATETESTREQUEST,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.UpdateTestRequest)
  })
_sym_db.RegisterMessage(UpdateTestRequest)

UpdateTestResponse = _reflection.GeneratedProtocolMessageType('UpdateTestResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATETESTRESPONSE,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.UpdateTestResponse)
  })
_sym_db.RegisterMessage(UpdateTestResponse)

DeleteTestRequest = _reflection.GeneratedProtocolMessageType('DeleteTestRequest', (_message.Message,), {
  'DESCRIPTOR' : _DELETETESTREQUEST,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.DeleteTestRequest)
  })
_sym_db.RegisterMessage(DeleteTestRequest)

DeleteTestResponse = _reflection.GeneratedProtocolMessageType('DeleteTestResponse', (_message.Message,), {
  'DESCRIPTOR' : _DELETETESTRESPONSE,
  '__module__' : 'kentik.synthetics.v202110beta2.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202110beta2.DeleteTestResponse)
  })
_sym_db.RegisterMessage(DeleteTestResponse)

_SYNTHETICSDATASERVICE = DESCRIPTOR.services_by_name['SyntheticsDataService']
_SYNTHETICSADMINSERVICE = DESCRIPTOR.services_by_name['SyntheticsAdminService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'ZMgithub.com/kentik/api-schema/gen/go/kentik/synthetics/v202110beta2;synthetics\222A\237\002\022a\n\031Synthetics Monitoring API\"7\n\026Kentik API Engineering\022\035https://github.com/kentik/api2\013202110beta2*\001\0022\020application/json:\020application/jsonZD\n\036\n\005email\022\025\010\002\032\017X-CH-Auth-Email \002\n\"\n\005token\022\031\010\002\032\023X-CH-Auth-API-Token \002b\026\n\t\n\005email\022\000\n\t\n\005token\022\000r5\n\026More about Kentik APIs\022\033https://docs.kentik.com/api'
  _HTTPCONFIG_HEADERSENTRY._options = None
  _HTTPCONFIG_HEADERSENTRY._serialized_options = b'8\001'
  _HTTPCONFIG_CSSSELECTORSENTRY._options = None
  _HTTPCONFIG_CSSSELECTORSENTRY._serialized_options = b'8\001'
  _SYNTHETICSDATASERVICE._options = None
  _SYNTHETICSDATASERVICE._serialized_options = b'\312A\023grpc.api.kentik.com\352\327\002\nsynthetics'
  _SYNTHETICSDATASERVICE.methods_by_name['GetHealthForTests']._options = None
  _SYNTHETICSDATASERVICE.methods_by_name['GetHealthForTests']._serialized_options = b'\362\327\002\017synthetics:read\202\323\344\223\002,\"\'/synthetics/v202110beta2/results/health:\001*\222A\212\001\022&Get health status for synthetics test.\032MGet synthetics health test for login user. Also returns mesh data on request.*\021GetHealthForTests'
  _SYNTHETICSDATASERVICE.methods_by_name['GetTraceForTest']._options = None
  _SYNTHETICSDATASERVICE.methods_by_name['GetTraceForTest']._serialized_options = b'\362\327\002\017synthetics:read\202\323\344\223\002+\"&/synthetics/v202110beta2/results/trace:\001*\222AX\022\025Get trace route data.\032.Get trace route data for the specific test id.*\017GetTraceForTest'
  _SYNTHETICSADMINSERVICE._options = None
  _SYNTHETICSADMINSERVICE._serialized_options = b'\312A\023grpc.api.kentik.com\352\327\002\020admin.synthetics'
  _SYNTHETICSADMINSERVICE.methods_by_name['ListAgents']._options = None
  _SYNTHETICSADMINSERVICE.methods_by_name['ListAgents']._serialized_options = b'\362\327\002\025admin.synthetics:read\202\323\344\223\002!\022\037/synthetics/v202110beta2/agents\222A5\022\014List Agents.\032\031Returns a list of agents.*\nAgentsList'
  _SYNTHETICSADMINSERVICE.methods_by_name['GetAgent']._options = None
  _SYNTHETICSADMINSERVICE.methods_by_name['GetAgent']._serialized_options = b'\362\327\002\025admin.synthetics:read\202\323\344\223\002&\022$/synthetics/v202110beta2/agents/{id}\222Ac\022\037Get information about an agent.\0326Returns information about the agent specified with id.*\010AgentGet'
  _SYNTHETICSADMINSERVICE.methods_by_name['UpdateAgent']._options = None
  _SYNTHETICSADMINSERVICE.methods_by_name['UpdateAgent']._serialized_options = b'\362\327\002\026admin.synthetics:write\202\323\344\223\002/\032*/synthetics/v202110beta2/agents/{agent.id}:\001*\222AL\022\020Update an agent.\032+Update configuration of a synthetics agent.*\013AgentUpdate'
  _SYNTHETICSADMINSERVICE.methods_by_name['DeleteAgent']._options = None
  _SYNTHETICSADMINSERVICE.methods_by_name['DeleteAgent']._serialized_options = b'\362\327\002\026admin.synthetics:write\202\323\344\223\002&*$/synthetics/v202110beta2/agents/{id}\222AE\022\020Delete an agent.\032$Deletes the agent specified with id.*\013AgentDelete'
  _SYNTHETICSADMINSERVICE.methods_by_name['ListTests']._options = None
  _SYNTHETICSADMINSERVICE.methods_by_name['ListTests']._serialized_options = b'\362\327\002\025admin.synthetics:read\202\323\344\223\002 \022\036/synthetics/v202110beta2/tests\222AH\022\026List Synthetics Tests.\032#Returns a list of syntehtics tests.*\tTestsList'
  _SYNTHETICSADMINSERVICE.methods_by_name['CreateTest']._options = None
  _SYNTHETICSADMINSERVICE.methods_by_name['CreateTest']._serialized_options = b'\362\327\002\026admin.synthetics:write\202\323\344\223\002#\"\036/synthetics/v202110beta2/tests:\001*\222Aa\022\027Create Synthetics Test.\032:Create synthetics test from request. Returns created test.*\nTestCreate'
  _SYNTHETICSADMINSERVICE.methods_by_name['GetTest']._options = None
  _SYNTHETICSADMINSERVICE.methods_by_name['GetTest']._serialized_options = b'\362\327\002\025admin.synthetics:read\202\323\344\223\002%\022#/synthetics/v202110beta2/tests/{id}\222At\022&Get information about Synthetics Test.\032AReturns information about synthetics test specified with test ID.*\007TestGet'
  _SYNTHETICSADMINSERVICE.methods_by_name['UpdateTest']._options = None
  _SYNTHETICSADMINSERVICE.methods_by_name['UpdateTest']._serialized_options = b'\362\327\002\026admin.synthetics:write\202\323\344\223\002-\032(/synthetics/v202110beta2/tests/{test.id}:\001*\222AS\022\031Update a Synthetics Test.\032*Updates configuration of a synthetic test.*\nTestUpdate'
  _SYNTHETICSADMINSERVICE.methods_by_name['DeleteTest']._options = None
  _SYNTHETICSADMINSERVICE.methods_by_name['DeleteTest']._serialized_options = b'\362\327\002\026admin.synthetics:write\202\323\344\223\002%*#/synthetics/v202110beta2/tests/{id}\222AX\022\032Delete an Synthetics Test.\032.Deletes the synthetics test specified with id.*\nTestDelete'
  _IMPLEMENTTYPE._serialized_start=10724
  _IMPLEMENTTYPE._serialized_end=10821
  _IPFAMILY._serialized_start=10823
  _IPFAMILY._serialized_end=10916
  _TESTSTATUS._serialized_start=10918
  _TESTSTATUS._serialized_end=11032
  _AGENTSTATUS._serialized_start=11034
  _AGENTSTATUS._serialized_end=11147
  _TASKSTATE._serialized_start=11149
  _TASKSTATE._serialized_end=11260
  _DNSRECORD._serialized_start=11263
  _DNSRECORD._serialized_end=11463
  _HEALTH._serialized_start=298
  _HEALTH._serialized_end=364
  _AGENTTASKCONFIG._serialized_start=366
  _AGENTTASKCONFIG._serialized_end=412
  _TESTHEALTH._serialized_start=415
  _TESTHEALTH._serialized_end=762
  _TASKHEALTH._serialized_start=765
  _TASKHEALTH._serialized_end=1015
  _AGENTHEALTH._serialized_start=1018
  _AGENTHEALTH._serialized_end=1211
  _HEALTHMOMENT._serialized_start=1214
  _HEALTHMOMENT._serialized_end=1751
  _AGENT._serialized_start=1754
  _AGENT._serialized_end=2283
  _PINGTASKDEFINITION._serialized_start=2285
  _PINGTASKDEFINITION._serialized_end=2386
  _TRACETASKDEFINITION._serialized_start=2388
  _TRACETASKDEFINITION._serialized_end=2472
  _HTTPTASKDEFINITION._serialized_start=2474
  _HTTPTASKDEFINITION._serialized_end=2542
  _TASK._serialized_start=2545
  _TASK._serialized_end=3092
  _DNSTASKDEFINITION._serialized_start=3095
  _DNSTASKDEFINITION._serialized_end=3223
  _SHAKETASKDEFINITION._serialized_start=3225
  _SHAKETASKDEFINITION._serialized_end=3308
  _USERINFO._serialized_start=3310
  _USERINFO._serialized_end=3366
  _TEST._serialized_start=3369
  _TEST._serialized_end=3754
  _HTTPCONFIG._serialized_start=3757
  _HTTPCONFIG._serialized_end=4086
  _HTTPCONFIG_HEADERSENTRY._serialized_start=3987
  _HTTPCONFIG_HEADERSENTRY._serialized_end=4033
  _HTTPCONFIG_CSSSELECTORSENTRY._serialized_start=4035
  _HTTPCONFIG_CSSSELECTORSENTRY._serialized_end=4086
  _TESTSETTINGS._serialized_start=4089
  _TESTSETTINGS._serialized_end=5014
  _TESTPINGSETTINGS._serialized_start=5016
  _TESTPINGSETTINGS._serialized_end=5112
  _TESTTRACESETTINGS._serialized_start=5114
  _TESTTRACESETTINGS._serialized_end=5226
  _HEALTHSETTINGS._serialized_start=5229
  _HEALTHSETTINGS._serialized_end=5756
  _HOSTNAMETEST._serialized_start=5758
  _HOSTNAMETEST._serialized_end=5788
  _IPTEST._serialized_start=5790
  _IPTEST._serialized_end=5815
  _AGENTTEST._serialized_start=5817
  _AGENTTEST._serialized_end=5844
  _FLOWTEST._serialized_start=5847
  _FLOWTEST._serialized_end=5989
  _DNSTEST._serialized_start=5991
  _DNSTEST._serialized_end=6091
  _URLTEST._serialized_start=6093
  _URLTEST._serialized_end=6192
  _PAGELOADTEST._serialized_start=6194
  _PAGELOADTEST._serialized_end=6298
  _NETWORKGRIDTEST._serialized_start=6300
  _NETWORKGRIDTEST._serialized_end=6334
  _DNSGRIDTEST._serialized_start=6336
  _DNSGRIDTEST._serialized_end=6440
  _MESHRESPONSE._serialized_start=6443
  _MESHRESPONSE._serialized_end=6589
  _MESHCOLUMN._serialized_start=6592
  _MESHCOLUMN._serialized_end=6784
  _MESHMETRIC._serialized_start=6786
  _MESHMETRIC._serialized_end=6843
  _MESHMETRICS._serialized_start=6846
  _MESHMETRICS._serialized_end=7087
  _ASN._serialized_start=7089
  _ASN._serialized_end=7120
  _COUNTRY._serialized_start=7122
  _COUNTRY._serialized_end=7159
  _REGION._serialized_start=7161
  _REGION._serialized_end=7195
  _CITY._serialized_start=7197
  _CITY._serialized_end=7266
  _GEO._serialized_start=7269
  _GEO._serialized_end=7440
  _DNS._serialized_start=7442
  _DNS._serialized_end=7461
  _IPINFO._serialized_start=7464
  _IPINFO._serialized_end=7686
  _IDBYIP._serialized_start=7688
  _IDBYIP._serialized_end=7720
  _TRACEROUTELOOKUP._serialized_start=7723
  _TRACEROUTELOOKUP._serialized_end=8092
  _TRACEHOP._serialized_start=8095
  _TRACEHOP._serialized_end=8272
  _TRACEPROBE._serialized_start=8275
  _TRACEPROBE._serialized_end=8438
  _TRACE._serialized_start=8441
  _TRACE._serialized_end=8582
  _STATS._serialized_start=8584
  _STATS._serialized_end=8636
  _TRACEROUTERESULT._serialized_start=8639
  _TRACEROUTERESULT._serialized_end=8884
  _TRACEROUTEINFO._serialized_start=8887
  _TRACEROUTEINFO._serialized_end=9026
  _GETHEALTHFORTESTSREQUEST._serialized_start=9029
  _GETHEALTHFORTESTSREQUEST._serialized_end=9216
  _GETHEALTHFORTESTSRESPONSE._serialized_start=9218
  _GETHEALTHFORTESTSRESPONSE._serialized_end=9305
  _GETTRACEFORTESTREQUEST._serialized_start=9308
  _GETTRACEFORTESTREQUEST._serialized_end=9477
  _GETTRACEFORTESTRESPONSE._serialized_start=9480
  _GETTRACEFORTESTRESPONSE._serialized_end=9719
  _LISTAGENTSREQUEST._serialized_start=9721
  _LISTAGENTSREQUEST._serialized_end=9740
  _LISTAGENTSRESPONSE._serialized_start=9742
  _LISTAGENTSRESPONSE._serialized_end=9840
  _GETAGENTREQUEST._serialized_start=9842
  _GETAGENTREQUEST._serialized_end=9871
  _GETAGENTRESPONSE._serialized_start=9873
  _GETAGENTRESPONSE._serialized_end=9945
  _UPDATEAGENTREQUEST._serialized_start=9947
  _UPDATEAGENTREQUEST._serialized_end=10021
  _UPDATEAGENTRESPONSE._serialized_start=10023
  _UPDATEAGENTRESPONSE._serialized_end=10098
  _DELETEAGENTREQUEST._serialized_start=10100
  _DELETEAGENTREQUEST._serialized_end=10132
  _DELETEAGENTRESPONSE._serialized_start=10134
  _DELETEAGENTRESPONSE._serialized_end=10155
  _LISTTESTSREQUEST._serialized_start=10157
  _LISTTESTSREQUEST._serialized_end=10175
  _LISTTESTSRESPONSE._serialized_start=10177
  _LISTTESTSRESPONSE._serialized_end=10272
  _CREATETESTREQUEST._serialized_start=10274
  _CREATETESTREQUEST._serialized_end=10345
  _CREATETESTRESPONSE._serialized_start=10347
  _CREATETESTRESPONSE._serialized_end=10419
  _GETTESTREQUEST._serialized_start=10421
  _GETTESTREQUEST._serialized_end=10449
  _GETTESTRESPONSE._serialized_start=10451
  _GETTESTRESPONSE._serialized_end=10520
  _UPDATETESTREQUEST._serialized_start=10522
  _UPDATETESTREQUEST._serialized_end=10593
  _UPDATETESTRESPONSE._serialized_start=10595
  _UPDATETESTRESPONSE._serialized_end=10667
  _DELETETESTREQUEST._serialized_start=10669
  _DELETETESTREQUEST._serialized_end=10700
  _DELETETESTRESPONSE._serialized_start=10702
  _DELETETESTRESPONSE._serialized_end=10722
  _SYNTHETICSDATASERVICE._serialized_start=11466
  _SYNTHETICSDATASERVICE._serialized_end=12175
  _SYNTHETICSADMINSERVICE._serialized_start=12178
  _SYNTHETICSADMINSERVICE._serialized_end=14728
# @@protoc_insertion_point(module_scope)
