# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kentik/synthetics/v202309/synthetics.proto

from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.api import client_pb2 as google_dot_api_dot_client__pb2
from google.api import field_behavior_pb2 as google_dot_api_dot_field__behavior__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from protoc_gen_openapiv2.options import annotations_pb2 as protoc__gen__openapiv2_dot_options_dot_annotations__pb2
from kentik.core.v202303 import annotations_pb2 as kentik_dot_core_dot_v202303_dot_annotations__pb2
from kentik.core.v202303 import user_info_pb2 as kentik_dot_core_dot_v202303_dot_user__info__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='kentik/synthetics/v202309/synthetics.proto',
  package='kentik.synthetics.v202309',
  syntax='proto3',
  serialized_options=b'ZOgithub.com/kentik/api-schema-public/gen/go/kentik/synthetics/v202309;synthetics\222A\366A\022\214@\n\031Synthetics Monitoring API\022\236?# Overview\nThe Synthetics Monitoring API provides programmatic access to Kentik\'s [synthetic monitoring system](https://kb.kentik.com/v4/Ma00.htm). The API consists of two endpoints:\n| Endpoint | Purpose |\n|-----------|---------|\n| SyntheticsAdminService | CRUD operations for synthetic tests, agents, and offline agent alerts |\n| SyntheticsDataService  | Retrieval of synthetic test results and network traces |\n\nBoth REST endpoint and gRPC RPCs are provided.\nNote: API version v202309 is the same as v202202 except that the timestamps returned for synthetic test results are closer to when the test was actually run.\n### Known Limitations\nThe API currently does not support the following [Synthetic Test Types](https://kb.kentik.com/v4/Ma00.htm#Ma00-Synthetic_Test_Types):\n* BGP Monitor tests, which are supported in a [separate API](https://github.com/kentik/api-schema-public/blob/master/proto/kentik/bgp_monitoring/v202205beta1/bgp_monitoring.proto)\n* Transaction tests.\n\n### Additional Public Resources\nKentik community [Python](https://github.com/kentik/community_sdk_python) and [Go](https://github.com/kentik/community_sdk_golang) SDKs provide language-specific support for using this and other Kentik APIs. These SDKs can be also used as example code for development. \n A [Terraform provider](https://registry.terraform.io/providers/kentik/kentik-synthetics) is available for configuring tests and agents for Kentik synthetic monitoring.\n# Anatomy of a Synthetic Test\nEach `Test` consists of one or more tasks. Tasks are executed by monitoring `Agents` that send synthetic traffic (probes) over the network. The API currently supports following tasks:\n| Task name  | Purpose |\n|------------|---------|\n| ping       | Test basic address, and optionally TCP port reachability |\n| traceroute (a.k.a. trace)| Discover unidirectional network path |\n| http | Perform a simple HTTP/HTTPS request |\n| page-load | Use headless Chromium to execute an HTTP/HTTPS request |\n| dns | Execute a DNS query|\n| throughput | Execute a throughput task to determine bandwidth |\n\nThe set of tasks executed on behalf of a given test depends on the `type` of that test. The following test types are currently supported by the API:\n| API type | Portal (UI) equivalent | Tasks |\n|---------------|--------------|-------|\n| ip | IP Address | ping, traceroute |\n| hostname | Hostname | ping, traceroute |\n| network_grid | Network Grid | ping, traceroute |\n| agent | Agent-to-Agent | ping, traceroute, throughput |\n| network_mesh | Network Mesh | ping, traceroute |\n| flow | Autonomous Tests (5 variants) | ping, traceroute |\n| url | HTTP(S) or API | http, ping (optional), traceroute (optional) |\n| page_load | Page Load | page-load, ping (optional), traceroute (optional) |\n| dns | DNS Server Monitor | dns |\n| dns_grid | DNS Server Grid | dns |\n\n***Note:*** `ping` and `traceroute` tasks are always run together (never one without the other).\n\n# Test Attributes and Settings\nThe attributes of the test object enable configuration of test settings, access to test metadata, and access to runtime state information.\n### State and Metadata Attributes\n The following table lists the metadata and state attributes:\n| Attribute | Access | Purpose |\n|-----------|--------|---------|\n| id | RO | System-generated unique identifier of the test |\n| name | RW | User specified name for the test (need not be unique) |\n| type | RO (after creation) | Type of the test (set on creation; read-only thereafter) |\n| status | RW | Life-cycle status of the test |\n| cdate | RO | Creation timestamp |\n| edate | RO | Last-modification timestamp |\n| created_by | RO | Identity of the user that created the test |\n| last_updated_by | RO | Identity of the latest user to modify the test |\n| labels | RW | List of names of labels applied to the test |\n\nTest configuration is performed via the test\'s `settings` attribute. Some settings are common to all tests while others are specific to tests of a given type.\n### Common Test Settings\nThe following settings are used for tests of all types:\n| Attribute | Purpose | Required |\n|-----------|---------|----------|\n| agentIds  | IDs of agents to execute tasks for the test | YES |\n| period | Test execution interval in seconds | NO (default 60s) |\n| family | IP address family. Used only for tests whose type is url or dns. Selects which type of DNS resource is queried for resolving hostname to target address | NO (default IP_FAMILY_DUAL) |\n| notificationChannels | List of notification channels for the test | NO (default empty list) |\n| healthSettings | A HealthSettings object that configures health settings for this test, which includes metric thresholds that define health status (warning and critical) and trigger associated alarms. | YES |\n| ping | A TestPingSettings object that configures the ping task of the test | NO (default depends on test type) |\n| trace | A TestTraceSettings object that configures the trace task of the test | NO (default depends on test type) |\n| throughput | A TestThroughputSettings object that configures the throughput task of the test | NO (default depends on test type) |\n| tasks | List of names of the tasks that will be executed for this test | YES |\n\n### Type-specific Settings\nEach test type has its own configuration object that represents the settings for that type. These type-specific objects are referenced by the attributes in `Test.settings`:\n| Test type    | Settings attribute | Configuration object |\n|--------------|-------------------------|---------------------------|\n| ip           | ip                      | IpTest                    |\n| hostname     | hostname                | HostnameTest              |\n| network_grid | networkGrid             | IpTest                    |\n| agent        | agent                   | AgentTest                 |\n| network_mesh | networkMesh             | NetworkMeshTest           |\n| flow         | flow                    | FlowTest                  |\n| url          | url                     | UrlTest                   |\n| page_load    | pageLoad                | PageLoadTest              |\n| dns          | dns                     | DnsTest                   |\n| dns_grid     | dnsGrid                 | DnsTest                   |\n\n# Test Results\nResults of synthetic tests are returned as a sequence of `TestResults` objects. Each such object represents measurements and health evaluation for a single test at specific point in time. Measurements and health evaluation are grouped by agent and by task.\nGranularity of timestamps in test results depends on the frequency (period) of the test and on the requested time range. The minimum granularity is 1 minute (even when period < 1 minute). The longer the time range, the lower the granularity.\n# Network Traces\nSynthetic tests that include the `traceroute` task collect the unidirectional network path from the agent to the target for each agent/target pair. The trace data are returned in the `GetTraceForTestResponse` object. The `paths` attribute of this object contains the collected network path for each agent/target pair and the round-trip time (RTT) to each hop.\nHops in actual network traces are identified by a `nodeId`. The mapping of node IDs to address, name, location, and other attributes of the hop is provided in a map that is stored in the `nodes` attribute of the `GetTraceForTestResponse` object.\n# Agents\nThe Kentik synthetic monitoring system recognizes 2 types of agents:\n* **Global** (public): Managed by Kentik and available to every Kentik user. All information about global agents in this API is read-only.\n* **Private**: Deployed by each customer and available only to that customer.\nTo be visible in this API, a private agent must first associate itself with a customer account by contacting the Kentik system (via private API). Once the agent is associated it can be authorized via the API by changing its `status` to `AGENT_STATUS_OK`. For more information about private agent deployment, see [**Synthetic Agent Deployments**](https://kb.kentik.com/v4/Ma01.htm#Ma01-Synthetic_Agent_Deployments).\n\"E\n\026Kentik API Engineering\022+https://github.com/kentik/api-schema-public2\007v202309*\001\0022\020application/json:\020application/jsonZD\n\036\n\005email\022\025\010\002\032\017X-CH-Auth-Email \002\n\"\n\005token\022\031\010\002\032\023X-CH-Auth-API-Token \002b\026\n\t\n\005email\022\000\n\t\n\005token\022\000r`\n\"Kentik synthetic monitoring system\022:https://kb.kentik.com/v4/Ma00.htm#Ma00-Synthetics_Overview',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n*kentik/synthetics/v202309/synthetics.proto\x12\x19kentik.synthetics.v202309\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a%kentik/core/v202303/annotations.proto\x1a#kentik/core/v202303/user_info.proto\"\xc9\x03\n\x0f\x44isabledMetrics\x12!\n\x0cping_latency\x18\x01 \x01(\x08R\x0bpingLatency\x12\x1f\n\x0bping_jitter\x18\x02 \x01(\x08R\npingJitter\x12(\n\x10ping_packet_loss\x18\x03 \x01(\x08R\x0epingPacketLoss\x12!\n\x0chttp_latency\x18\x04 \x01(\x08R\x0bhttpLatency\x12!\n\x0chttp_headers\x18\x05 \x01(\x08R\x0bhttpHeaders\x12\x1d\n\nhttp_codes\x18\x06 \x01(\x08R\thttpCodes\x12(\n\x10http_cert_expiry\x18\x07 \x01(\x08R\x0ehttpCertExpiry\x12/\n\x13transaction_latency\x18\x08 \x01(\x08R\x12transactionLatency\x12\x1f\n\x0b\x64ns_latency\x18\t \x01(\x08R\ndnsLatency\x12\x1b\n\tdns_codes\x18\n \x01(\x08R\x08\x64nsCodes\x12\x17\n\x07\x64ns_ips\x18\x0b \x01(\x08R\x06\x64nsIps\x12\x31\n\x14throughput_bandwidth\x18\x0c \x01(\x08R\x13throughputBandwidth\"\xf7\x0e\n\x05\x41gent\x12\x37\n\x02id\x18\x01 \x01(\tB\'\x92\x41 2\x1eUnique identifier of the agent\xe2\x41\x01\x03R\x02id\x12I\n\tsite_name\x18\x02 \x01(\tB,\x92\x41)2\'Name of the site where agent is locatedR\x08siteName\x12W\n\x06status\x18\x03 \x01(\x0e\x32&.kentik.synthetics.v202309.AgentStatusB\x17\x92\x41\x14\x32\x12Operational statusR\x06status\x12\x46\n\x05\x61lias\x18\x04 \x01(\tB0\x92\x41-2+User selected descriptive name of the agentR\x05\x61lias\x12=\n\x04type\x18\x05 \x01(\tB)\x92\x41\"2 Type of agent (global | private)\xe2\x41\x01\x03R\x04type\x12\x42\n\x02os\x18\x06 \x01(\tB2\x92\x41+2)OS version of server/VM hosting the agent\xe2\x41\x01\x03R\x02os\x12I\n\x02ip\x18\x07 \x01(\tB9\x18\x01\x92\x41\x30\x32.Public IP address of the agent (auto-detected)\xe2\x41\x01\x03R\x02ip\x12L\n\x03lat\x18\x08 \x01(\x01\x42:\x92\x41\x37\x32\x35Latitude of agent\'s location (signed decimal degrees)R\x03lat\x12O\n\x04long\x18\t \x01(\x01\x42;\x92\x41\x38\x32\x36Longitude of agent\'s location (signed decimal degrees)R\x04long\x12i\n\x0blast_authed\x18\n \x01(\x0b\x32\x1a.google.protobuf.TimestampB,\x92\x41%2#Timestamp of the last authorization\xe2\x41\x01\x03R\nlastAuthed\x12j\n\x06\x66\x61mily\x18\x0b \x01(\x0e\x32#.kentik.synthetics.v202309.IPFamilyB-\x92\x41*2(IP address family supported by the agentR\x06\x66\x61mily\x12\x42\n\x03\x61sn\x18\x0c \x01(\rB0\x92\x41-2+ASN of the AS owning agent\'s public addressR\x03\x61sn\x12X\n\x07site_id\x18\r \x01(\tB?\x92\x41<2:ID of the site hosting the agent (if configured in Kentik)R\x06siteId\x12@\n\x07version\x18\x0e \x01(\tB&\x92\x41\x1f\x32\x1dSoftware version of the agent\xe2\x41\x01\x03R\x07version\x12\x38\n\x04\x63ity\x18\x10 \x01(\tB$\x92\x41!2\x1f\x43ity where the agent is locatedR\x04\x63ity\x12\x44\n\x06region\x18\x11 \x01(\tB,\x92\x41)2\'Geographical region of agent\'s locationR\x06region\x12:\n\x07\x63ountry\x18\x12 \x01(\tB \x92\x41\x1d\x32\x1b\x43ountry of agent\'s locationR\x07\x63ountry\x12K\n\x08test_ids\x18\x13 \x03(\tB0\x92\x41)2\'IDs of user\'s test running on the agent\xe2\x41\x01\x03R\x07testIds\x12\x42\n\x08local_ip\x18\x14 \x01(\tB\'\x18\x01\x92\x41\"2 Internal IP address of the agentR\x07localIp\x12O\n\x0c\x63loud_region\x18\x16 \x01(\tB,\x92\x41)2\'Cloud region (if any) hosting the agentR\x0b\x63loudRegion\x12U\n\x0e\x63loud_provider\x18\x17 \x01(\tB.\x92\x41+2)Cloud provider (if any) hosting the agentR\rcloudProvider\x12M\n\nagent_impl\x18\x18 \x01(\x0e\x32(.kentik.synthetics.v202309.ImplementTypeB\x04\xe2\x41\x01\x03R\tagentImpl\x12N\n\x06labels\x18\x19 \x03(\tB6\x92\x41\x33\x32\x31List of names of labels associated with the agentR\x06labels\x12\x90\x01\n\x08metadata\x18\x1a \x01(\x0b\x32(.kentik.synthetics.v202309.AgentMetadataBJ\x92\x41G2EAdditional information about agent\'s configuration and run-time stateR\x08metadata\"\xea\x04\n\rAgentMetadata\x12\x8b\x01\n\x16private_ipv4_addresses\x18\x01 \x03(\x0b\x32\x30.kentik.synthetics.v202309.AgentMetadata.IpValueB#\x92\x41 2\x1eList of private IPv4 addressesR\x14privateIpv4Addresses\x12\x8c\x01\n\x15public_ipv4_addresses\x18\x02 \x03(\x0b\x32\x30.kentik.synthetics.v202309.AgentMetadata.IpValueB&\x92\x41\x1f\x32\x1dList of public IPv4 addresses\xe2\x41\x01\x03R\x13publicIpv4Addresses\x12\x8b\x01\n\x16private_ipv6_addresses\x18\x03 \x03(\x0b\x32\x30.kentik.synthetics.v202309.AgentMetadata.IpValueB#\x92\x41 2\x1eList of private IPv6 addressesR\x14privateIpv6Addresses\x12\x8c\x01\n\x15public_ipv6_addresses\x18\x04 \x03(\x0b\x32\x30.kentik.synthetics.v202309.AgentMetadata.IpValueB&\x92\x41\x1f\x32\x1dList of public IPv6 addresses\xe2\x41\x01\x03R\x13publicIpv6Addresses\x1a\x1f\n\x07IpValue\x12\x14\n\x05value\x18\x01 \x01(\tR\x05value\"\xb6\x06\n\x04Test\x12.\n\x02id\x18\x01 \x01(\tB\x1e\x92\x41\x17\x32\x15Unique ID of the test\xe2\x41\x01\x03R\x02id\x12\x37\n\x04name\x18\x02 \x01(\tB#\x92\x41 2\x1eUser selected name of the testR\x04name\x12)\n\x04type\x18\x03 \x01(\tB\x15\x92\x41\x12\x32\x10Type of the testR\x04type\x12\x62\n\x06status\x18\x05 \x01(\x0e\x32%.kentik.synthetics.v202309.TestStatusB#\x92\x41 2\x1eOperational status of the testR\x06status\x12\\\n\x08settings\x18\x06 \x01(\x0b\x32\'.kentik.synthetics.v202309.TestSettingsB\x17\x92\x41\x14\x32\x12Test configurationR\x08settings\x12S\n\x05\x63\x64\x61te\x18\x07 \x01(\x0b\x32\x1a.google.protobuf.TimestampB!\x92\x41\x1a\x32\x18\x43reation timestamp (UTC)\xe2\x41\x01\x03R\x05\x63\x64\x61te\x12\\\n\x05\x65\x64\x61te\x18\x08 \x01(\x0b\x32\x1a.google.protobuf.TimestampB*\x92\x41#2!Last modification timestamp (UTC)\xe2\x41\x01\x03R\x05\x65\x64\x61te\x12_\n\ncreated_by\x18\t \x01(\x0b\x32\x1d.kentik.core.v202303.UserInfoB!\x92\x41\x1a\x32\x18Identity of test creator\xe2\x41\x01\x03R\tcreatedBy\x12\x7f\n\x0flast_updated_by\x18\n \x01(\x0b\x32\x1d.kentik.core.v202303.UserInfoB8\x92\x41\x31\x32/Identity of use that has modified the test last\xe2\x41\x01\x03R\rlastUpdatedBy\x12\x43\n\x06labels\x18\x0b \x03(\tB+\x92\x41(2&Set of labels associated with the testR\x06labels\"\xd7\r\n\x0cTestSettings\x12\x45\n\x08hostname\x18\x01 \x01(\x0b\x32\'.kentik.synthetics.v202309.HostnameTestH\x00R\x08hostname\x12\x33\n\x02ip\x18\x02 \x01(\x0b\x32!.kentik.synthetics.v202309.IpTestH\x00R\x02ip\x12<\n\x05\x61gent\x18\x03 \x01(\x0b\x32$.kentik.synthetics.v202309.AgentTestH\x00R\x05\x61gent\x12\x39\n\x04\x66low\x18\x04 \x01(\x0b\x32#.kentik.synthetics.v202309.FlowTestH\x00R\x04\x66low\x12\x36\n\x03\x64ns\x18\x05 \x01(\x0b\x32\".kentik.synthetics.v202309.DnsTestH\x00R\x03\x64ns\x12\x36\n\x03url\x18\x06 \x01(\x0b\x32\".kentik.synthetics.v202309.UrlTestH\x00R\x03url\x12\x46\n\x0cnetwork_grid\x18\x07 \x01(\x0b\x32!.kentik.synthetics.v202309.IpTestH\x00R\x0bnetworkGrid\x12\x46\n\tpage_load\x18\x08 \x01(\x0b\x32\'.kentik.synthetics.v202309.PageLoadTestH\x00R\x08pageLoad\x12?\n\x08\x64ns_grid\x18\t \x01(\x0b\x32\".kentik.synthetics.v202309.DnsTestH\x00R\x07\x64nsGrid\x12O\n\x0cnetwork_mesh\x18\x12 \x01(\x0b\x32*.kentik.synthetics.v202309.NetworkMeshTestH\x00R\x0bnetworkMesh\x12[\n\tagent_ids\x18\n \x03(\tB>\x92\x41;29IDs of agents assigned to run tasks on behalf of the testR\x08\x61gentIds\x12\x41\n\x05tasks\x18\x0b \x03(\tB+\x92\x41(2&List of task names to run for the testR\x05tasks\x12\xa9\x01\n\x0fhealth_settings\x18\x0c \x01(\x0b\x32).kentik.synthetics.v202309.HealthSettingsBU\x92\x41R2PHealth evaluation thresholds, acceptable responses and alarm activation settingsR\x0ehealthSettings\x12i\n\x04ping\x18\r \x01(\x0b\x32+.kentik.synthetics.v202309.TestPingSettingsB(\x92\x41%2#Ping tasks configuration parametersR\x04ping\x12q\n\x05trace\x18\x0e \x01(\x0b\x32,.kentik.synthetics.v202309.TestTraceSettingsB-\x92\x41*2(Traceroute task configuration parametersR\x05trace\x12@\n\x06period\x18\x0f \x01(\rB(\x92\x41%2#Test evaluation period (in seconds)R\x06period\x12\x81\x01\n\x06\x66\x61mily\x18\x10 \x01(\x0e\x32#.kentik.synthetics.v202309.IPFamilyBD\x92\x41\x41\x32?IP address family to select from available DNS name resolutionsR\x06\x66\x61mily\x12\x7f\n\x15notification_channels\x18\x11 \x03(\tBJ\x92\x41G2EList of IDs of notification channels for alarms triggered by the testR\x14notificationChannels\x12>\n\x05notes\x18\x13 \x01(\tB(\x92\x41%2#Add a note or comment for this testR\x05notes\x12\x80\x01\n\nthroughput\x18\x14 \x01(\x0b\x32\x31.kentik.synthetics.v202309.TestThroughputSettingsB-\x92\x41*2(Throughput task configuration parametersR\nthroughputB\x0c\n\ndefinition\"\xcc\x03\n\x10TestPingSettings\x12K\n\x05\x63ount\x18\x01 \x01(\rB5\x92\x41\x32\x32\x30Number of probe packets to send in one iterationR\x05\x63ount\x12G\n\x08protocol\x18\x02 \x01(\tB+\x92\x41(2&Transport protocol to use (icmp | tcp)R\x08protocol\x12\x46\n\x04port\x18\x03 \x01(\rB2\x92\x41/2-Target port for TCP probes (ignored for ICMP)R\x04port\x12P\n\x07timeout\x18\x04 \x01(\rB6\x92\x41\x33\x32\x31Timeout in milliseconds for execution of the taskR\x07timeout\x12<\n\x05\x64\x65lay\x18\x05 \x01(\x02\x42&\x92\x41#2!Inter-probe delay in millisecondsR\x05\x64\x65lay\x12J\n\x04\x64scp\x18\x06 \x01(\rB6\x92\x41\x33\x32\x31\x44SCP code to be set in IP header of probe packetsR\x04\x64scp\"\xa9\x04\n\x11TestTraceSettings\x12K\n\x05\x63ount\x18\x01 \x01(\rB5\x92\x41\x32\x32\x30Number of probe packets to send in one iterationR\x05\x63ount\x12M\n\x08protocol\x18\x02 \x01(\tB1\x92\x41.2,Transport protocol to use (icmp | tcp | udp)R\x08protocol\x12M\n\x04port\x18\x03 \x01(\rB9\x92\x41\x36\x32\x34Target port for TCP or UDP probes (ignored for ICMP)R\x04port\x12P\n\x07timeout\x18\x04 \x01(\rB6\x92\x41\x33\x32\x31Timeout in milliseconds for execution of the taskR\x07timeout\x12M\n\x05limit\x18\x05 \x01(\rB7\x92\x41\x34\x32\x32Maximum number of hops to probe (i.e. maximum TTL)R\x05limit\x12<\n\x05\x64\x65lay\x18\x06 \x01(\x02\x42&\x92\x41#2!Inter-probe delay in millisecondsR\x05\x64\x65lay\x12J\n\x04\x64scp\x18\x07 \x01(\rB6\x92\x41\x33\x32\x31\x44SCP code to be set in IP header of probe packetsR\x04\x64scp\"\xa0\x04\n\x16TestThroughputSettings\x12p\n\x04port\x18\x01 \x01(\rB\\\x92\x41Y2WTarget port for TCP or UDP throughput task (the port the target server is listening on)R\x04port\x12X\n\x04omit\x18\x02 \x01(\rBD\x92\x41\x41\x32?(optional) Number of seconds to omit from the start of the testR\x04omit\x12@\n\x08\x64uration\x18\x03 \x01(\rB$\x92\x41!2\x1f\x44uration of the test in secondsR\x08\x64uration\x12\xaf\x01\n\tbandwidth\x18\x04 \x01(\rB\x90\x01\x92\x41\x8c\x01\x32\x89\x01(optional) Target bandwidth in Mbps, if no bandwidth is specified, the test will measure the maximum bandwidth for TCP and 10Mbps for UDPR\tbandwidth\x12\x46\n\x08protocol\x18\x05 \x01(\tB*\x92\x41\'2%Transport protocol to use (tcp | udp)R\x08protocol\"\xc6\x03\n\x12\x41\x63tivationSettings\x12\x82\x01\n\x0cgrace_period\x18\x01 \x01(\tB_\x92\x41\\2ZPeriod of healthy status in minutes within the time window not cancelling alarm activationR\x0bgracePeriod\x12N\n\ttime_unit\x18\x02 \x01(\tB1\x92\x41.2,Time unit for specifying time window (m | h)R\x08timeUnit\x12]\n\x0btime_window\x18\x03 \x01(\tB<\x92\x41\x39\x32\x37Time window for evaluating of test for alarm activationR\ntimeWindow\x12|\n\x05times\x18\x04 \x01(\tBf\x92\x41\x63\x32\x61Number of occurrences of unhealthy test status within the time window triggering alarm activationR\x05times\"\xce\"\n\x0eHealthSettings\x12\x7f\n\x10latency_critical\x18\x01 \x01(\x02\x42T\x92\x41Q2OThreshold for ping response latency (in microseconds) to trigger critical alarmR\x0flatencyCritical\x12|\n\x0flatency_warning\x18\x02 \x01(\x02\x42S\x92\x41P2NThreshold for ping response latency (in microseconds) to trigger warning alarmR\x0elatencyWarning\x12v\n\x14packet_loss_critical\x18\x03 \x01(\x02\x42\x44\x92\x41\x41\x32?Threshold for ping packet loss (in %) to trigger critical alarmR\x12packetLossCritical\x12s\n\x13packet_loss_warning\x18\x04 \x01(\x02\x42\x43\x92\x41@2>Threshold for ping packet loss (in %) to trigger warning alarmR\x11packetLossWarning\x12s\n\x0fjitter_critical\x18\x05 \x01(\x02\x42J\x92\x41G2EThreshold for ping jitter (in microseconds) to trigger critical alarmR\x0ejitterCritical\x12q\n\x0ejitter_warning\x18\x06 \x01(\x02\x42J\x92\x41G2EThreshold for ping jitter (in microseconds) to trigger critical alarmR\rjitterWarning\x12\x88\x01\n\x15http_latency_critical\x18\x07 \x01(\x02\x42T\x92\x41Q2OThreshold for HTTP response latency (in microseconds) to trigger critical alarmR\x13httpLatencyCritical\x12\x85\x01\n\x14http_latency_warning\x18\x08 \x01(\x02\x42S\x92\x41P2NThreshold for HTTP response latency (in microseconds) to trigger warning alarmR\x12httpLatencyWarning\x12\x61\n\x10http_valid_codes\x18\t \x03(\rB7\x92\x41\x34\x32\x32List of HTTP status codes indicating healthy stateR\x0ehttpValidCodes\x12^\n\x0f\x64ns_valid_codes\x18\n \x03(\rB6\x92\x41\x33\x32\x31List of DNS status codes indicating healthy stateR\rdnsValidCodes\x12\xa2\x01\n\x17latency_critical_stddev\x18\x0b \x01(\x02\x42j\x92\x41g2eThreshold for standard deviation (in microseconds) of ping response latency to trigger critical alarmR\x15latencyCriticalStddev\x12\x9f\x01\n\x16latency_warning_stddev\x18\x0c \x01(\x02\x42i\x92\x41\x66\x32\x64Threshold for standard deviation (in microseconds) of ping response latency to trigger warning alarmR\x14latencyWarningStddev\x12\x96\x01\n\x16jitter_critical_stddev\x18\r \x01(\x02\x42`\x92\x41]2[Threshold for standard deviation of ping jitter (in microseconds) to trigger critical alarmR\x14jitterCriticalStddev\x12\x93\x01\n\x15jitter_warning_stddev\x18\x0e \x01(\x02\x42_\x92\x41\\2ZThreshold for standard deviation of ping jitter (in microseconds) to trigger warning alarmR\x13jitterWarningStddev\x12\xab\x01\n\x1chttp_latency_critical_stddev\x18\x0f \x01(\x02\x42j\x92\x41g2eThreshold for standard deviation of HTTP response latency (in microseconds) to trigger critical alarmR\x19httpLatencyCriticalStddev\x12\xa8\x01\n\x1bhttp_latency_warning_stddev\x18\x10 \x01(\x02\x42i\x92\x41\x66\x32\x64Threshold for standard deviation of HTTP response latency (in microseconds) to trigger warning alarmR\x18httpLatencyWarningStddev\x12\xaf\x01\n\x1bunhealthy_subtest_threshold\x18\x11 \x01(\rBo\x18\x01\x92\x41j2hNumber of tasks (across all agents) that must report unhealthy status in order for alarm to be triggeredR\x19unhealthySubtestThreshold\x12m\n\nactivation\x18\x12 \x01(\x0b\x32-.kentik.synthetics.v202309.ActivationSettingsB\x1e\x92\x41\x1b\x32\x19\x41larm activation settingsR\nactivation\x12\x8b\x01\n\x13\x63\x65rt_expiry_warning\x18\x13 \x01(\rB[\x92\x41X2VThreshold for remaining validity of TLS certificate (in days) to trigger warning alarmR\x11\x63\x65rtExpiryWarning\x12\x8e\x01\n\x14\x63\x65rt_expiry_critical\x18\x14 \x01(\rB\\\x92\x41Y2WThreshold for remaining validity of TLS certificate (in days) to trigger critical alarmR\x12\x63\x65rtExpiryCritical\x12\x88\x01\n\rdns_valid_ips\x18\x15 \x01(\tBd\x92\x41\x61\x32_Comma separated list of IP addresses expected to be received in response to DNS A or AAAA queryR\x0b\x64nsValidIps\x12\x85\x01\n\x14\x64ns_latency_critical\x18\x16 \x01(\x02\x42S\x92\x41P2NThreshold for DNS response latency (in microseconds) to trigger critical alarmR\x12\x64nsLatencyCritical\x12\x82\x01\n\x13\x64ns_latency_warning\x18\x17 \x01(\x02\x42R\x92\x41O2MThreshold for DNS response latency (in microseconds) to trigger warning alarmR\x11\x64nsLatencyWarning\x12\xa8\x01\n\x1b\x64ns_latency_critical_stddev\x18\x18 \x01(\x02\x42i\x92\x41\x66\x32\x64Threshold for standard deviation (in microseconds) of DNS response latency to trigger critical alarmR\x18\x64nsLatencyCriticalStddev\x12\xa5\x01\n\x1a\x64ns_latency_warning_stddev\x18\x19 \x01(\x02\x42h\x92\x41\x65\x32\x63Threshold for standard deviation (in microseconds) of DNS response latency to trigger warning alarmR\x17\x64nsLatencyWarningStddev\x12o\n\x12per_agent_alerting\x18\x1a \x01(\x08\x42\x41\x18\x01\x92\x41<2:Boolean value indicating whether to use per-agent alertingR\x10perAgentAlerting\x12\x91\x01\n\x10\x64isabled_metrics\x18\x1b \x01(\x0b\x32*.kentik.synthetics.v202309.DisabledMetricsB:\x92\x41\x37\x32\x35Set of metrics to be skipped during health evaluationR\x0f\x64isabledMetrics\x12Y\n\x0fhealth_disabled\x18\x1c \x01(\x08\x42\x30\x92\x41-2+Disable all health evaluation for this testR\x0ehealthDisabled\x12|\n\x13throughput_critical\x18\x1d \x01(\x02\x42K\x92\x41H2FThreshold for throughput bandwidth (in mbps) to trigger critical alarmR\x12throughputCritical\x12y\n\x12throughput_warning\x18\x1e \x01(\x02\x42J\x92\x41G2EThreshold for throughput bandwidth (in mbps) to trigger warning alarmR\x11throughputWarning\x12\x9f\x01\n\x1athroughput_critical_stddev\x18\x1f \x01(\x02\x42\x61\x92\x41^2\\Threshold for standard deviation (in mbps) of throughput bandwidth to trigger critical alarmR\x18throughputCriticalStddev\x12\x9c\x01\n\x19throughput_warning_stddev\x18  \x01(\x02\x42`\x92\x41]2[Threshold for standard deviation (in mbps) of throughput bandwidth to trigger warning alarmR\x17throughputWarningStddev\"X\n\x0cHostnameTest\x12H\n\x06target\x18\x01 \x01(\tB0\x92\x41-2+Fully qualified DNS name of the target hostR\x06target\"\xc8\x01\n\x06IpTest\x12>\n\x07targets\x18\x01 \x03(\tB$\x92\x41!2\x1fList of IP addresses of targetsR\x07targets\x12~\n\x0cuse_local_ip\x18\x02 \x01(\x08\x42\\\x92\x41Y2WBoolean value indicating whether to use local (private) IP address of the target agentsR\nuseLocalIp\"\xa5\x02\n\tAgentTest\x12\x33\n\x06target\x18\x01 \x01(\tB\x1b\x92\x41\x18\x32\x16ID of the target agentR\x06target\x12}\n\x0cuse_local_ip\x18\x02 \x01(\x08\x42[\x92\x41X2VBoolean value indicating whether to use local (private) IP address of the target agentR\nuseLocalIp\x12\x64\n\nreciprocal\x18\x03 \x01(\x08\x42\x44\x92\x41\x41\x32?Boolean value indicating whether to make the test bidirectionalR\nreciprocal\"\x8b\x07\n\x08\x46lowTest\x12\x87\x01\n\x06target\x18\x01 \x01(\tBo\x92\x41l2jTarget ASN, CDN, Country, Region of City for autonomous test (type of value depends on flow test sub-type)R\x06target\x12\x9e\x01\n\x1etarget_refresh_interval_millis\x18\x02 \x01(\rBY\x92\x41V2TPeriod (in milliseconds) for refreshing list of targets based on available flow dataR\x1btargetRefreshIntervalMillis\x12^\n\rmax_providers\x18\x03 \x01(\rB9\x92\x41\x36\x32\x34Maximum number of IP providers to track autonomouslyR\x0cmaxProviders\x12p\n\x0emax_ip_targets\x18\x04 \x01(\rBJ\x92\x41G2EMaximum number of target IP addresses to select based flow data queryR\x0cmaxIpTargets\x12W\n\x04type\x18\x05 \x01(\tBC\x92\x41@2>Autonomous test sub-type (asn | cdn | country | region | city)R\x04type\x12\xa8\x01\n\x0einet_direction\x18\x06 \x01(\tB\x80\x01\x92\x41}2{Selection of address from flow data (src = source address in inbound flows | dst = destination addresses in outbound flows)R\rinetDirection\x12~\n\tdirection\x18\x07 \x01(\tB`\x92\x41]2[Direction of flows to match target attribute for extraction of target addresses (src | dst)R\tdirection\"\xef\x02\n\x07\x44nsTest\x12>\n\x06target\x18\x01 \x01(\tB&\x92\x41#2!Fully qualified DNS name to queryR\x06target\x12\x46\n\x07timeout\x18\x02 \x01(\rB,\x18\x01\x92\x41\'2%--- Deprecated: value is ignored. ---R\x07timeout\x12g\n\x0brecord_type\x18\x03 \x01(\x0e\x32$.kentik.synthetics.v202309.DNSRecordB \x92\x41\x1d\x32\x1bType of DNS record to queryR\nrecordType\x12\x42\n\x07servers\x18\x04 \x03(\tB(\x92\x41%2#List of IP addresses of DNS serversR\x07servers\x12/\n\x04port\x18\x05 \x01(\rB\x1b\x92\x41\x18\x32\x16Target DNS server portR\x04port\"\xc6\x04\n\x07UrlTest\x12\x39\n\x06target\x18\x01 \x01(\tB!\x92\x41\x1e\x32\x1cHTTP or HTTPS URL to requestR\x06target\x12I\n\x07timeout\x18\x02 \x01(\rB/\x92\x41,2*HTTP transaction timeout (in milliseconds)R\x07timeout\x12Q\n\x06method\x18\x03 \x01(\tB9\x92\x41\x36\x32\x34HTTP method to use (GET | HEAD | PATCH | POST | PUT)R\x06method\x12\x7f\n\x07headers\x18\x04 \x03(\x0b\x32/.kentik.synthetics.v202309.UrlTest.HeadersEntryB4\x92\x41\x31\x32/Map of HTTP header values keyed by header namesR\x07headers\x12*\n\x04\x62ody\x18\x05 \x01(\tB\x16\x92\x41\x13\x32\x11HTTP request bodyR\x04\x62ody\x12y\n\x11ignore_tls_errors\x18\x06 \x01(\x08\x42M\x92\x41J2HBoolean indicating whether to ignore TLS certificate verification errorsR\x0fignoreTlsErrors\x1a:\n\x0cHeadersEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\"\xac\x05\n\x0cPageLoadTest\x12\x39\n\x06target\x18\x01 \x01(\tB!\x92\x41\x1e\x32\x1cHTTP or HTTPS URL to requestR\x06target\x12I\n\x07timeout\x18\x02 \x01(\rB/\x92\x41,2*HTTP transaction timeout (in milliseconds)R\x07timeout\x12\x84\x01\n\x07headers\x18\x03 \x03(\x0b\x32\x34.kentik.synthetics.v202309.PageLoadTest.HeadersEntryB4\x92\x41\x31\x32/Map of HTTP header values keyed by header namesR\x07headers\x12y\n\x11ignore_tls_errors\x18\x04 \x01(\x08\x42M\x92\x41J2HBoolean indicating whether to ignore TLS certificate verification errorsR\x0fignoreTlsErrors\x12\x96\x01\n\rcss_selectors\x18\x05 \x03(\x0b\x32\x39.kentik.synthetics.v202309.PageLoadTest.CssSelectorsEntryB6\x92\x41\x33\x32\x31Map of CSS selector values keyed by selector nameR\x0c\x63ssSelectors\x1a:\n\x0cHeadersEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\x1a?\n\x11\x43ssSelectorsEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\"\x91\x01\n\x0fNetworkMeshTest\x12~\n\x0cuse_local_ip\x18\x01 \x01(\x08\x42\\\x92\x41Y2WBoolean value indicating whether to use local (private) IP address of the target agentsR\nuseLocalIp\"\xc7\x02\n\nMetricData\x12\x36\n\x07\x63urrent\x18\x01 \x01(\rB\x1c\x92\x41\x19\x32\x17\x43urrent value of metricR\x07\x63urrent\x12?\n\x0brolling_avg\x18\x02 \x01(\rB\x1e\x92\x41\x1b\x32\x19Rolling average of metricR\nrollingAvg\x12[\n\x0erolling_stddev\x18\x03 \x01(\rB4\x92\x41\x31\x32/Rolling average of standard deviation of metricR\rrollingStddev\x12\x63\n\x06health\x18\x04 \x01(\tBK\x92\x41H2FHealth evaluation status for the metric (healthy | warning | critical)R\x06health\"\xaf\x01\n\x0ePacketLossData\x12\x38\n\x07\x63urrent\x18\x01 \x01(\x01\x42\x1e\x92\x41\x1b\x32\x19\x43urrent packet loss valueR\x07\x63urrent\x12\x63\n\x06health\x18\x02 \x01(\tBK\x92\x41H2FHealth evaluation status for the metric (healthy | warning | critical)R\x06health\"\xd6\x03\n\x0bPingResults\x12\x45\n\x06target\x18\x01 \x01(\tB-\x92\x41*2(Hostname or address of the probed targetR\x06target\x12n\n\x0bpacket_loss\x18\x02 \x01(\x0b\x32).kentik.synthetics.v202309.PacketLossDataB\"\x92\x41\x1f\x32\x1dPacket loss metric and healthR\npacketLoss\x12\x66\n\x07latency\x18\x03 \x01(\x0b\x32%.kentik.synthetics.v202309.MetricDataB%\x92\x41\"2 Packet latency metric and healthR\x07latency\x12o\n\x06jitter\x18\x04 \x01(\x0b\x32%.kentik.synthetics.v202309.MetricDataB0\x92\x41-2+Latency jitter (variance) metric and healthR\x06jitter\x12\x37\n\x06\x64st_ip\x18\x05 \x01(\tB \x92\x41\x1d\x32\x1bIP address of probed targetR\x05\x64stIp\"\xf9\x01\n\x10HTTPResponseData\x12\x34\n\x06status\x18\x01 \x01(\rB\x1c\x92\x41\x19\x32\x17HTTP status in responseR\x06status\x12>\n\x04size\x18\x02 \x01(\rB*\x92\x41\'2%Total size of  received response bodyR\x04size\x12o\n\x04\x64\x61ta\x18\x03 \x01(\tB[\x92\x41X2VDetailed information about transaction timing, connection characteristics and responseR\x04\x64\x61ta\"\xe4\x02\n\x0bHTTPResults\x12.\n\x06target\x18\x01 \x01(\tB\x16\x92\x41\x13\x32\x11Target probed URLR\x06target\x12m\n\x07latency\x18\x02 \x01(\x0b\x32%.kentik.synthetics.v202309.MetricDataB,\x92\x41)2\'HTTP response latency metric and healthR\x07latency\x12v\n\x08response\x18\x04 \x01(\x0b\x32+.kentik.synthetics.v202309.HTTPResponseDataB-\x92\x41*2(Information about received HTTP responseR\x08response\x12>\n\x06\x64st_ip\x18\x05 \x01(\tB\'\x92\x41$2\"IP address of probed target serverR\x05\x64stIp\"\x87\x01\n\x0f\x44NSResponseData\x12\x30\n\x06status\x18\x01 \x01(\rB\x18\x92\x41\x15\x32\x13Received DNS statusR\x06status\x12\x42\n\x04\x64\x61ta\x18\x02 \x01(\tB.\x92\x41+2)Text rendering of received DNS resolutionR\x04\x64\x61ta\"\xdd\x02\n\nDNSResults\x12/\n\x06target\x18\x01 \x01(\tB\x17\x92\x41\x14\x32\x12Queried DNS recordR\x06target\x12:\n\x06server\x18\x02 \x01(\tB\"\x92\x41\x1f\x32\x1d\x44NS server used for the queryR\x06server\x12l\n\x07latency\x18\x03 \x01(\x0b\x32%.kentik.synthetics.v202309.MetricDataB+\x92\x41(2&DNS response latency metric and healthR\x07latency\x12t\n\x08response\x18\x05 \x01(\x0b\x32*.kentik.synthetics.v202309.DNSResponseDataB,\x92\x41)2\'Information about received DNS responseR\x08response\"\x83\x03\n\x0bTaskResults\x12\x65\n\x04ping\x18\x01 \x01(\x0b\x32&.kentik.synthetics.v202309.PingResultsB\'\x92\x41$2\"Entry containing ping task resultsH\x00R\x04ping\x12\x65\n\x04http\x18\x02 \x01(\x0b\x32&.kentik.synthetics.v202309.HTTPResultsB\'\x92\x41$2\"Entry containing HTTP task resultsH\x00R\x04http\x12\x61\n\x03\x64ns\x18\x03 \x01(\x0b\x32%.kentik.synthetics.v202309.DNSResultsB&\x92\x41#2!Entry containing DNS task resultsH\x00R\x03\x64ns\x12\x36\n\x06health\x18\x04 \x01(\tB\x1e\x92\x41\x1b\x32\x19Health status of the taskR\x06healthB\x0b\n\ttask_type\"\x9e\x02\n\x0c\x41gentResults\x12\x41\n\x08\x61gent_id\x18\x01 \x01(\tB&\x92\x41#2!ID of the agent providing resultsR\x07\x61gentId\x12\x62\n\x06health\x18\x02 \x01(\tBJ\x92\x41G2EOverall health status of all task for the test executed by this agentR\x06health\x12g\n\x05tasks\x18\x03 \x03(\x0b\x32&.kentik.synthetics.v202309.TaskResultsB)\x92\x41&2$List of results for individual tasksR\x05tasks\"\xea\x02\n\x0bTestResults\x12K\n\x07test_id\x18\x01 \x01(\tB2\x92\x41/2-ID of the test for which results are providedR\x06testId\x12L\n\x04time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x1c\x92\x41\x19\x32\x17Results timestamp (UTC)R\x04time\x12\x36\n\x06health\x18\x03 \x01(\tB\x1e\x92\x41\x1b\x32\x19Health status of the testR\x06health\x12\x87\x01\n\x06\x61gents\x18\x04 \x03(\x0b\x32\'.kentik.synthetics.v202309.AgentResultsBF\x92\x41\x43\x32\x41List of results from agents executing tasks on behalf of the testR\x06\x61gents\"\x81\x01\n\x05Stats\x12,\n\x07\x61verage\x18\x01 \x01(\x05\x42\x12\x92\x41\x0f\x32\rAverage valueR\x07\x61verage\x12$\n\x03min\x18\x02 \x01(\x05\x42\x12\x92\x41\x0f\x32\rMinimum valueR\x03min\x12$\n\x03max\x18\x03 \x01(\x05\x42\x12\x92\x41\x0f\x32\rMaximum valueR\x03max\"\xc1\x02\n\x08Location\x12\x43\n\x08latitude\x18\x08 \x01(\x01\x42\'\x92\x41$2\"Latitude in signed decimal degreesR\x08latitude\x12\x46\n\tlongitude\x18\t \x01(\x01\x42(\x92\x41%2#Longitude in signed decimal degreesR\tlongitude\x12\x36\n\x07\x63ountry\x18\x01 \x01(\tB\x1c\x92\x41\x19\x32\x17\x43ountry of the locationR\x07\x63ountry\x12\x41\n\x06region\x18\x02 \x01(\tB)\x92\x41&2$Geographic region within the countryR\x06region\x12-\n\x04\x63ity\x18\x03 \x01(\tB\x19\x92\x41\x16\x32\x14\x43ity of the locationR\x04\x63ity\"\x86\x05\n\x07NetNode\x12H\n\x02ip\x18\x02 \x01(\tB8\x92\x41\x35\x32\x33IP address of the node in standard textual notationR\x02ip\x12?\n\x03\x61sn\x18\x03 \x01(\rB-\x92\x41*2(AS number owning the address of the nodeR\x03\x61sn\x12K\n\x07\x61s_name\x18\x04 \x01(\tB2\x92\x41/2-Name of the AS owning the address of the nodeR\x06\x61sName\x12h\n\x08location\x18\x05 \x01(\x0b\x32#.kentik.synthetics.v202309.LocationB\'\x92\x41$2\"Location of IP address of the nodeR\x08location\x12Y\n\x08\x64ns_name\x18\x06 \x01(\tB>\x92\x41;29DNS name of the node (obtained by reverse DNS resolution)R\x07\x64nsName\x12\x66\n\tdevice_id\x18\x07 \x01(\tBI\x92\x41\x46\x32\x44ID of the device corresponding with the node in Kentik configurationR\x08\x64\x65viceId\x12v\n\x07site_id\x18\x08 \x01(\tB]\x92\x41Z2XID of the site containing the device corresponding with the node in Kentik configurationR\x06siteId\"\xf3\x01\n\x08TraceHop\x12v\n\x07latency\x18\x03 \x01(\x05\x42\\\x92\x41Y2WRound-trip packet latency to the node (in microseconds) - 0 if no response was receivedR\x07latency\x12o\n\x07node_id\x18\x05 \x01(\tBV\x92\x41S2QID of the node for this hop in the Nodes map  - empty if no response was receivedR\x06nodeId\"\xfc\x01\n\tPathTrace\x12:\n\x07\x61s_path\x18\x01 \x03(\x05\x42!\x92\x41\x1e\x32\x1c\x41S path of the network traceR\x06\x61sPath\x12Z\n\x0bis_complete\x18\x02 \x01(\x08\x42\x39\x92\x41\x36\x32\x34Indication whether response from target was receivedR\nisComplete\x12W\n\x04hops\x18\x06 \x03(\x0b\x32#.kentik.synthetics.v202309.TraceHopB\x1e\x92\x41\x1b\x32\x19List of hops in the traceR\x04hops\"\xa8\x04\n\x04Path\x12H\n\x08\x61gent_id\x18\x01 \x01(\tB-\x92\x41*2(ID of the agent generating the path dataR\x07\x61gentId\x12\x46\n\ttarget_ip\x18\x03 \x01(\tB)\x92\x41&2$IP address of the target of the pathR\x08targetIp\x12j\n\thop_count\x18\x04 \x01(\x0b\x32 .kentik.synthetics.v202309.StatsB+\x92\x41(2&Hop count statistics across all tracesR\x08hopCount\x12]\n\x12max_as_path_length\x18\x07 \x01(\x05\x42\x30\x92\x41-2+Maximum length of AS path across all tracesR\x0fmaxAsPathLength\x12]\n\x06traces\x18\x08 \x03(\x0b\x32$.kentik.synthetics.v202309.PathTraceB\x1f\x92\x41\x1c\x32\x1a\x44\x61ta for individual tracesR\x06traces\x12\x64\n\x04time\x18\t \x01(\x0b\x32\x1a.google.protobuf.TimestampB4\x92\x41\x31\x32/Timestamp (UTC) of initiation of the path traceR\x04time\"\x95\x05\n\x19GetResultsForTestsRequest\x12I\n\x03ids\x18\x01 \x03(\tB7\x92\x41\x30\x32.List of test IDs for which to retrieve results\xe2\x41\x01\x02R\x03ids\x12y\n\nstart_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampB>\x92\x41\x37\x32\x35Timestamp of the oldest results to include in results\xe2\x41\x01\x02R\tstartTime\x12u\n\x08\x65nd_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.TimestampB>\x92\x41\x37\x32\x35Timestamp of the newest results to include in results\xe2\x41\x01\x02R\x07\x65ndTime\x12P\n\tagent_ids\x18\x04 \x03(\tB3\x92\x41\x30\x32.List of agent IDs from which to return resultsR\x08\x61gentIds\x12]\n\x07targets\x18\x05 \x03(\tBC\x92\x41@2>List of targets (test dependent) for which to retrieve resultsR\x07targets\x12\x89\x01\n\taggregate\x18\x06 \x01(\x08\x42k\x92\x41h2fIf true, retrieve result aggregated across the requested time period, else return complete time seriesR\taggregate\"^\n\x1aGetResultsForTestsResponse\x12@\n\x07results\x18\x01 \x03(\x0b\x32&.kentik.synthetics.v202309.TestResultsR\x07results\"\x8a\x04\n\x16GetTraceForTestRequest\x12M\n\x02id\x18\x01 \x01(\tB=\x92\x41:28ID of test for which to retrieve network path trace dataR\x02id\x12y\n\nstart_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampB>\x92\x41\x37\x32\x35Timestamp of the oldest results to include in results\xe2\x41\x01\x02R\tstartTime\x12u\n\x08\x65nd_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.TimestampB>\x92\x41\x37\x32\x35Timestamp of the newest results to include in results\xe2\x41\x01\x02R\x07\x65ndTime\x12P\n\tagent_ids\x18\x04 \x03(\tB3\x92\x41\x30\x32.List of agent IDs from which to return resultsR\x08\x61gentIds\x12]\n\ntarget_ips\x18\x05 \x03(\tB>\x92\x41;29List of target IP addresses for which to retrieve resultsR\ttargetIps\"\xe6\x02\n\x17GetTraceForTestResponse\x12\x8b\x01\n\x05nodes\x18\x01 \x03(\x0b\x32=.kentik.synthetics.v202309.GetTraceForTestResponse.NodesEntryB6\x92\x41\x33\x32\x31Map of network node information keyed by node IDsR\x05nodes\x12_\n\x05paths\x18\x02 \x03(\x0b\x32\x1f.kentik.synthetics.v202309.PathB(\x92\x41%2#List of retrieved network path dataR\x05paths\x1a\\\n\nNodesEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x38\n\x05value\x18\x02 \x01(\x0b\x32\".kentik.synthetics.v202309.NetNodeR\x05value:\x02\x38\x01\"\x13\n\x11ListAgentsRequest\"\xd4\x01\n\x12ListAgentsResponse\x12W\n\x06\x61gents\x18\x01 \x03(\x0b\x32 .kentik.synthetics.v202309.AgentB\x1d\x92\x41\x1a\x32\x18List of available agentsR\x06\x61gents\x12\x65\n\rinvalid_count\x18\x02 \x01(\rB@\x92\x41=2;Number of invalid entries encountered while collecting dataR\x0cinvalidCount\"E\n\x0fGetAgentRequest\x12\x32\n\x02id\x18\x01 \x01(\tB\"\x92\x41\x1b\x32\x19ID of the requested agent\xe2\x41\x01\x02R\x02id\"t\n\x10GetAgentResponse\x12`\n\x05\x61gent\x18\x01 \x01(\x0b\x32 .kentik.synthetics.v202309.AgentB(\x92\x41%2#Agent configuration and status dataR\x05\x61gent\"k\n\x12UpdateAgentRequest\x12U\n\x05\x61gent\x18\x01 \x01(\x0b\x32 .kentik.synthetics.v202309.AgentB\x1d\x92\x41\x1a\x32\x18\x41gent configuration dataR\x05\x61gent\"w\n\x13UpdateAgentResponse\x12`\n\x05\x61gent\x18\x01 \x01(\x0b\x32 .kentik.synthetics.v202309.AgentB(\x92\x41%2#Agent configuration and status dataR\x05\x61gent\"L\n\x12\x44\x65leteAgentRequest\x12\x36\n\x02id\x18\x01 \x01(\tB&\x92\x41\x1f\x32\x1dID of the agent to be deleted\xe2\x41\x01\x02R\x02id\"\x15\n\x13\x44\x65leteAgentResponse\"\x12\n\x10ListTestsRequest\"\xe1\x01\n\x11ListTestsResponse\x12\x65\n\x05tests\x18\x01 \x03(\x0b\x32\x1f.kentik.synthetics.v202309.TestB.\x92\x41+2)List of configured active or paused testsR\x05tests\x12\x65\n\rinvalid_count\x18\x02 \x01(\rB@\x92\x41=2;Number of invalid entries encountered while collecting dataR\x0cinvalidCount\"j\n\x11\x43reateTestRequest\x12U\n\x04test\x18\x01 \x01(\x0b\x32\x1f.kentik.synthetics.v202309.TestB \x92\x41\x19\x32\x17Test configuration data\xe2\x41\x01\x02R\x04test\"r\n\x12\x43reateTestResponse\x12\\\n\x04test\x18\x01 \x01(\x0b\x32\x1f.kentik.synthetics.v202309.TestB\'\x92\x41$2\"Test configuration and status dataR\x04test\"?\n\x0eGetTestRequest\x12-\n\x02id\x18\x01 \x01(\tB\x1d\x92\x41\x16\x32\x14ID of requested test\xe2\x41\x01\x02R\x02id\"o\n\x0fGetTestResponse\x12\\\n\x04test\x18\x01 \x01(\x0b\x32\x1f.kentik.synthetics.v202309.TestB\'\x92\x41$2\"Test configuration and status dataR\x04test\"f\n\x11UpdateTestRequest\x12Q\n\x04test\x18\x01 \x01(\x0b\x32\x1f.kentik.synthetics.v202309.TestB\x1c\x92\x41\x19\x32\x17Test configuration dataR\x04test\"r\n\x12UpdateTestResponse\x12\\\n\x04test\x18\x01 \x01(\x0b\x32\x1f.kentik.synthetics.v202309.TestB\'\x92\x41$2\"Test configuration and status dataR\x04test\"J\n\x11\x44\x65leteTestRequest\x12\x35\n\x02id\x18\x01 \x01(\tB%\x92\x41\x1e\x32\x1cID of the test to be deleted\xe2\x41\x01\x02R\x02id\"\x14\n\x12\x44\x65leteTestResponse\"\xba\x01\n\x14SetTestStatusRequest\x12\x46\n\x02id\x18\x01 \x01(\tB6\x92\x41/2-ID of the test which status is to be modified\xe2\x41\x01\x02R\x02id\x12Z\n\x06status\x18\x02 \x01(\x0e\x32%.kentik.synthetics.v202309.TestStatusB\x1b\x92\x41\x14\x32\x12Target test status\xe2\x41\x01\x02R\x06status\"\x17\n\x15SetTestStatusResponse\"\xbd\x01\n\nAgentAlert\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\x12+\n\x11threshold_seconds\x18\x02 \x01(\rR\x10thresholdSeconds\x12\x38\n\x18notification_channel_ids\x18\x03 \x03(\tR\x16notificationChannelIds\x12\x19\n\x08\x61gent_id\x18\x04 \x01(\tR\x07\x61gentId\x12\x1d\n\nagent_name\x18\x05 \x01(\tR\tagentName\"\x9b\x01\n\x17\x43reateAgentAlertRequest\x12+\n\x11threshold_seconds\x18\x01 \x01(\rR\x10thresholdSeconds\x12\x38\n\x18notification_channel_ids\x18\x02 \x03(\tR\x16notificationChannelIds\x12\x19\n\x08\x61gent_id\x18\x03 \x01(\tR\x07\x61gentId\"b\n\x18\x43reateAgentAlertResponse\x12\x46\n\x0b\x61gent_alert\x18\x01 \x01(\x0b\x32%.kentik.synthetics.v202309.AgentAlertR\nagentAlert\"\x90\x01\n\x17UpdateAgentAlertRequest\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\x12+\n\x11threshold_seconds\x18\x02 \x01(\rR\x10thresholdSeconds\x12\x38\n\x18notification_channel_ids\x18\x03 \x03(\tR\x16notificationChannelIds\"b\n\x18UpdateAgentAlertResponse\x12\x46\n\x0b\x61gent_alert\x18\x01 \x01(\x0b\x32%.kentik.synthetics.v202309.AgentAlertR\nagentAlert\"&\n\x14GetAgentAlertRequest\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\"_\n\x15GetAgentAlertResponse\x12\x46\n\x0b\x61gent_alert\x18\x01 \x01(\x0b\x32%.kentik.synthetics.v202309.AgentAlertR\nagentAlert\"5\n\x16ListAgentAlertsRequest\x12\x1b\n\tagent_ids\x18\x01 \x03(\tR\x08\x61gentIds\"c\n\x17ListAgentAlertsResponse\x12H\n\x0c\x61gent_alerts\x18\x01 \x03(\x0b\x32%.kentik.synthetics.v202309.AgentAlertR\x0b\x61gentAlerts\")\n\x17\x44\x65leteAgentAlertRequest\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\"\x1a\n\x18\x44\x65leteAgentAlertResponse*}\n\rImplementType\x12\x1e\n\x1aIMPLEMENT_TYPE_UNSPECIFIED\x10\x00\x12\x17\n\x13IMPLEMENT_TYPE_RUST\x10\x01\x12\x17\n\x13IMPLEMENT_TYPE_NODE\x10\x02\x12\x1a\n\x16IMPLEMENT_TYPE_NETWORK\x10\x03*]\n\x08IPFamily\x12\x19\n\x15IP_FAMILY_UNSPECIFIED\x10\x00\x12\x10\n\x0cIP_FAMILY_V4\x10\x01\x12\x10\n\x0cIP_FAMILY_V6\x10\x02\x12\x12\n\x0eIP_FAMILY_DUAL\x10\x03*\x8b\x01\n\nTestStatus\x12\x1b\n\x17TEST_STATUS_UNSPECIFIED\x10\x00\x12\x16\n\x12TEST_STATUS_ACTIVE\x10\x01\x12\x16\n\x12TEST_STATUS_PAUSED\x10\x02\x12\x17\n\x13TEST_STATUS_DELETED\x10\x03\x12\x17\n\x13TEST_STATUS_PREVIEW\x10\x04*q\n\x0b\x41gentStatus\x12\x1c\n\x18\x41GENT_STATUS_UNSPECIFIED\x10\x00\x12\x13\n\x0f\x41GENT_STATUS_OK\x10\x01\x12\x15\n\x11\x41GENT_STATUS_WAIT\x10\x02\x12\x18\n\x14\x41GENT_STATUS_DELETED\x10\x03*\xc8\x01\n\tDNSRecord\x12\x1a\n\x16\x44NS_RECORD_UNSPECIFIED\x10\x00\x12\x10\n\x0c\x44NS_RECORD_A\x10\x01\x12\x13\n\x0f\x44NS_RECORD_AAAA\x10\x02\x12\x14\n\x10\x44NS_RECORD_CNAME\x10\x03\x12\x14\n\x10\x44NS_RECORD_DNAME\x10\x04\x12\x11\n\rDNS_RECORD_NS\x10\x05\x12\x11\n\rDNS_RECORD_MX\x10\x06\x12\x12\n\x0e\x44NS_RECORD_PTR\x10\x07\x12\x12\n\x0e\x44NS_RECORD_SOA\x10\x08\x32\xca\x05\n\x15SyntheticsDataService\x12\xb3\x02\n\x12GetResultsForTests\x12\x34.kentik.synthetics.v202309.GetResultsForTestsRequest\x1a\x35.kentik.synthetics.v202309.GetResultsForTestsResponse\"\xaf\x01\x92\x41s\x12\x15Get results for tests\x1a\x46Returns probe results for a set of tests for specified period of time.*\x12GetResultsForTests\xf2\xd7\x02\x0fsynthetics:read\x82\xd3\xe4\x93\x02 \"\x1b/synthetics/v202309/results:\x01*\x12\xd0\x02\n\x0fGetTraceForTest\x12\x31.kentik.synthetics.v202309.GetTraceForTestRequest\x1a\x32.kentik.synthetics.v202309.GetTraceForTestResponse\"\xd5\x01\x92\x41\x9a\x01\x12!Get network trace data for a test\x1a\x64Get network trace data for a specific synthetic test. The test must have traceroute task configured.*\x0fGetTraceForTest\xf2\xd7\x02\x0fsynthetics:read\x82\xd3\xe4\x93\x02\x1e\"\x19/synthetics/v202309/trace:\x01*\x1a(\xca\x41\x13grpc.api.kentik.com\xea\xd7\x02\nsynthetics\x90\xd8\x02\x03\x32\x86&\n\x16SyntheticsAdminService\x12\xa7\x02\n\nListAgents\x12,.kentik.synthetics.v202309.ListAgentsRequest\x1a-.kentik.synthetics.v202309.ListAgentsResponse\"\xbb\x01\x92\x41\x63\x12\x15List available agents\x1a>Returns list of all synthetic agents available in the account.*\nListAgents\xf2\xd7\x02\x15\x61\x64min.synthetics:read\x92\xd8\x02\x16synthetics.agent::read\x82\xd3\xe4\x93\x02\x1c\x12\x1a/synthetics/v202309/agents\x12\xa7\x02\n\x08GetAgent\x12*.kentik.synthetics.v202309.GetAgentRequest\x1a+.kentik.synthetics.v202309.GetAgentResponse\"\xc1\x01\x92\x41\x64\x12\x1eGet information about an agent\x1a\x38Returns information about the requested synthetic agent.*\x08GetAgent\xf2\xd7\x02\x15\x61\x64min.synthetics:read\x92\xd8\x02\x16synthetics.agent::read\x82\xd3\xe4\x93\x02!\x12\x1f/synthetics/v202309/agents/{id}\x12\xb3\x02\n\x0bUpdateAgent\x12-.kentik.synthetics.v202309.UpdateAgentRequest\x1a..kentik.synthetics.v202309.UpdateAgentResponse\"\xc4\x01\x92\x41[\x12 Update configuration of an agent\x1a*Update configuration of a synthetic agent.*\x0bUpdateAgent\xf2\xd7\x02\x16\x61\x64min.synthetics:write\x92\xd8\x02\x18synthetics.agent::update\x82\xd3\xe4\x93\x02*\x1a%/synthetics/v202309/agents/{agent.id}:\x01*\x12\xc9\x02\n\x0b\x44\x65leteAgent\x12-.kentik.synthetics.v202309.DeleteAgentRequest\x1a..kentik.synthetics.v202309.DeleteAgentResponse\"\xda\x01\x92\x41z\x12\x0f\x44\x65lete an agent\x1aZDeletes the requested agent. The deleted agent is removed from configuration of all tests.*\x0b\x44\x65leteAgent\xf2\xd7\x02\x16\x61\x64min.synthetics:write\x92\xd8\x02\x18synthetics.agent::delete\x82\xd3\xe4\x93\x02!*\x1f/synthetics/v202309/agents/{id}\x12\x9f\x02\n\tListTests\x12+.kentik.synthetics.v202309.ListTestsRequest\x1a,.kentik.synthetics.v202309.ListTestsResponse\"\xb6\x01\x92\x41`\x12\x0eList all tests\x1a\x43Returns a list of all configured active and paused synthetic tests.*\tListTests\xf2\xd7\x02\x15\x61\x64min.synthetics:read\x92\xd8\x02\x15synthetics.test::read\x82\xd3\xe4\x93\x02\x1b\x12\x19/synthetics/v202309/tests\x12\xaa\x02\n\nCreateTest\x12,.kentik.synthetics.v202309.CreateTestRequest\x1a-.kentik.synthetics.v202309.CreateTestResponse\"\xbe\x01\x92\x41\x62\x12\rCreate a test\x1a\x45\x43reate synthetic test based on configuration provided in the request.*\nCreateTest\xf2\xd7\x02\x16\x61\x64min.synthetics:write\x92\xd8\x02\x17synthetics.test::create\x82\xd3\xe4\x93\x02\x1e\"\x19/synthetics/v202309/tests:\x01*\x12\xa9\x02\n\x07GetTest\x12).kentik.synthetics.v202309.GetTestRequest\x1a*.kentik.synthetics.v202309.GetTestResponse\"\xc6\x01\x92\x41k\x12\x1cGet information about a test\x1a\x42Returns configuration and status for the requested synthetic test.*\x07GetTest\xf2\xd7\x02\x15\x61\x64min.synthetics:read\x92\xd8\x02\x15synthetics.test::read\x82\xd3\xe4\x93\x02 \x12\x1e/synthetics/v202309/tests/{id}\x12\xaa\x02\n\nUpdateTest\x12,.kentik.synthetics.v202309.UpdateTestRequest\x1a-.kentik.synthetics.v202309.UpdateTestResponse\"\xbe\x01\x92\x41X\x12\x1eUpdate configuration of a test\x1a*Updates configuration of a synthetic test.*\nUpdateTest\xf2\xd7\x02\x16\x61\x64min.synthetics:write\x92\xd8\x02\x17synthetics.test::update\x82\xd3\xe4\x93\x02(\x1a#/synthetics/v202309/tests/{test.id}:\x01*\x12\xcc\x02\n\nDeleteTest\x12,.kentik.synthetics.v202309.DeleteTestRequest\x1a-.kentik.synthetics.v202309.DeleteTestResponse\"\xe0\x01\x92\x41\x81\x01\x12\x18\x44\x65lete a synthetic test.\x1aYDeletes the synthetics test. All accumulated results for the test cease to be accessible.*\nDeleteTest\xf2\xd7\x02\x16\x61\x64min.synthetics:write\x92\xd8\x02\x17synthetics.test::delete\x82\xd3\xe4\x93\x02 *\x1e/synthetics/v202309/tests/{id}\x12\xb2\x02\n\rSetTestStatus\x12/.kentik.synthetics.v202309.SetTestStatusRequest\x1a\x30.kentik.synthetics.v202309.SetTestStatusResponse\"\xbd\x01\x92\x41U\x12!Update status of a synthetic test\x1a!Update status of a synthetic test*\rSetTestStatus\xf2\xd7\x02\x16\x61\x64min.synthetics:write\x92\xd8\x02\x17synthetics.test::update\x82\xd3\xe4\x93\x02*\x1a%/synthetics/v202309/tests/{id}/status:\x01*\x12\xc2\x02\n\x10\x43reateAgentAlert\x12\x32.kentik.synthetics.v202309.CreateAgentAlertRequest\x1a\x33.kentik.synthetics.v202309.CreateAgentAlertResponse\"\xc4\x01\x92\x41\x61\x12#Create an agent alert configuration\x1a(Creates a new agent alert configuration.*\x10\x43reateAgentAlert\xf2\xd7\x02\x16\x61\x64min.synthetics:write\x92\xd8\x02\x18synthetics.agent::create\x82\xd3\xe4\x93\x02$\"\x1f/synthetics/v202309/agentAlerts:\x01*\x12\x89\x03\n\x10UpdateAgentAlert\x12\x32.kentik.synthetics.v202309.UpdateAgentAlertRequest\x1a\x33.kentik.synthetics.v202309.UpdateAgentAlertResponse\"\x8b\x02\x92\x41\xa2\x01\x12#Update an agent alert configuration\x1aiUpdates an existing agent alert configuration with the time threshold and notification channels provided.*\x10UpdateAgentAlert\xf2\xd7\x02\x16\x61\x64min.synthetics:write\x92\xd8\x02\x18synthetics.agent::update\x82\xd3\xe4\x93\x02)\x1a$/synthetics/v202309/agentAlerts/{id}:\x01*\x12\xba\x02\n\rGetAgentAlert\x12/.kentik.synthetics.v202309.GetAgentAlertRequest\x1a\x30.kentik.synthetics.v202309.GetAgentAlertResponse\"\xc5\x01\x92\x41\x63\x12 Get an agent alert configuration\x1a\x30Retrieves an existing agent alert configuration.*\rGetAgentAlert\xf2\xd7\x02\x15\x61\x64min.synthetics:read\x92\xd8\x02\x16synthetics.agent::read\x82\xd3\xe4\x93\x02&\x12$/synthetics/v202309/agentAlerts/{id}\x12\xde\x02\n\x0fListAgentAlerts\x12\x31.kentik.synthetics.v202309.ListAgentAlertsRequest\x1a\x32.kentik.synthetics.v202309.ListAgentAlertsResponse\"\xe3\x01\x92\x41\x85\x01\x12\x1fList agent alert configurations\x1aQLists all agent alert configurations, optionally filtered by a list of agent ids.*\x0fListAgentAlerts\xf2\xd7\x02\x15\x61\x64min.synthetics:read\x92\xd8\x02\x16synthetics.agent::read\x82\xd3\xe4\x93\x02!\x12\x1f/synthetics/v202309/agentAlerts\x12\xca\x02\n\x10\x44\x65leteAgentAlert\x12\x32.kentik.synthetics.v202309.DeleteAgentAlertRequest\x1a\x33.kentik.synthetics.v202309.DeleteAgentAlertResponse\"\xcc\x01\x92\x41g\x12#Delete an agent alert configuration\x1a.Deletes an existing agent alert configuration.*\x10\x44\x65leteAgentAlert\xf2\xd7\x02\x16\x61\x64min.synthetics:write\x92\xd8\x02\x18synthetics.agent::delete\x82\xd3\xe4\x93\x02&*$/synthetics/v202309/agentAlerts/{id}\x1a.\xca\x41\x13grpc.api.kentik.com\xea\xd7\x02\x10\x61\x64min.synthetics\x90\xd8\x02\x03\x42\xcb\x42ZOgithub.com/kentik/api-schema-public/gen/go/kentik/synthetics/v202309;synthetics\x92\x41\xf6\x41\x12\x8c@\n\x19Synthetics Monitoring API\x12\x9e?# Overview\nThe Synthetics Monitoring API provides programmatic access to Kentik\'s [synthetic monitoring system](https://kb.kentik.com/v4/Ma00.htm). The API consists of two endpoints:\n| Endpoint | Purpose |\n|-----------|---------|\n| SyntheticsAdminService | CRUD operations for synthetic tests, agents, and offline agent alerts |\n| SyntheticsDataService  | Retrieval of synthetic test results and network traces |\n\nBoth REST endpoint and gRPC RPCs are provided.\nNote: API version v202309 is the same as v202202 except that the timestamps returned for synthetic test results are closer to when the test was actually run.\n### Known Limitations\nThe API currently does not support the following [Synthetic Test Types](https://kb.kentik.com/v4/Ma00.htm#Ma00-Synthetic_Test_Types):\n* BGP Monitor tests, which are supported in a [separate API](https://github.com/kentik/api-schema-public/blob/master/proto/kentik/bgp_monitoring/v202205beta1/bgp_monitoring.proto)\n* Transaction tests.\n\n### Additional Public Resources\nKentik community [Python](https://github.com/kentik/community_sdk_python) and [Go](https://github.com/kentik/community_sdk_golang) SDKs provide language-specific support for using this and other Kentik APIs. These SDKs can be also used as example code for development. \n A [Terraform provider](https://registry.terraform.io/providers/kentik/kentik-synthetics) is available for configuring tests and agents for Kentik synthetic monitoring.\n# Anatomy of a Synthetic Test\nEach `Test` consists of one or more tasks. Tasks are executed by monitoring `Agents` that send synthetic traffic (probes) over the network. The API currently supports following tasks:\n| Task name  | Purpose |\n|------------|---------|\n| ping       | Test basic address, and optionally TCP port reachability |\n| traceroute (a.k.a. trace)| Discover unidirectional network path |\n| http | Perform a simple HTTP/HTTPS request |\n| page-load | Use headless Chromium to execute an HTTP/HTTPS request |\n| dns | Execute a DNS query|\n| throughput | Execute a throughput task to determine bandwidth |\n\nThe set of tasks executed on behalf of a given test depends on the `type` of that test. The following test types are currently supported by the API:\n| API type | Portal (UI) equivalent | Tasks |\n|---------------|--------------|-------|\n| ip | IP Address | ping, traceroute |\n| hostname | Hostname | ping, traceroute |\n| network_grid | Network Grid | ping, traceroute |\n| agent | Agent-to-Agent | ping, traceroute, throughput |\n| network_mesh | Network Mesh | ping, traceroute |\n| flow | Autonomous Tests (5 variants) | ping, traceroute |\n| url | HTTP(S) or API | http, ping (optional), traceroute (optional) |\n| page_load | Page Load | page-load, ping (optional), traceroute (optional) |\n| dns | DNS Server Monitor | dns |\n| dns_grid | DNS Server Grid | dns |\n\n***Note:*** `ping` and `traceroute` tasks are always run together (never one without the other).\n\n# Test Attributes and Settings\nThe attributes of the test object enable configuration of test settings, access to test metadata, and access to runtime state information.\n### State and Metadata Attributes\n The following table lists the metadata and state attributes:\n| Attribute | Access | Purpose |\n|-----------|--------|---------|\n| id | RO | System-generated unique identifier of the test |\n| name | RW | User specified name for the test (need not be unique) |\n| type | RO (after creation) | Type of the test (set on creation; read-only thereafter) |\n| status | RW | Life-cycle status of the test |\n| cdate | RO | Creation timestamp |\n| edate | RO | Last-modification timestamp |\n| created_by | RO | Identity of the user that created the test |\n| last_updated_by | RO | Identity of the latest user to modify the test |\n| labels | RW | List of names of labels applied to the test |\n\nTest configuration is performed via the test\'s `settings` attribute. Some settings are common to all tests while others are specific to tests of a given type.\n### Common Test Settings\nThe following settings are used for tests of all types:\n| Attribute | Purpose | Required |\n|-----------|---------|----------|\n| agentIds  | IDs of agents to execute tasks for the test | YES |\n| period | Test execution interval in seconds | NO (default 60s) |\n| family | IP address family. Used only for tests whose type is url or dns. Selects which type of DNS resource is queried for resolving hostname to target address | NO (default IP_FAMILY_DUAL) |\n| notificationChannels | List of notification channels for the test | NO (default empty list) |\n| healthSettings | A HealthSettings object that configures health settings for this test, which includes metric thresholds that define health status (warning and critical) and trigger associated alarms. | YES |\n| ping | A TestPingSettings object that configures the ping task of the test | NO (default depends on test type) |\n| trace | A TestTraceSettings object that configures the trace task of the test | NO (default depends on test type) |\n| throughput | A TestThroughputSettings object that configures the throughput task of the test | NO (default depends on test type) |\n| tasks | List of names of the tasks that will be executed for this test | YES |\n\n### Type-specific Settings\nEach test type has its own configuration object that represents the settings for that type. These type-specific objects are referenced by the attributes in `Test.settings`:\n| Test type    | Settings attribute | Configuration object |\n|--------------|-------------------------|---------------------------|\n| ip           | ip                      | IpTest                    |\n| hostname     | hostname                | HostnameTest              |\n| network_grid | networkGrid             | IpTest                    |\n| agent        | agent                   | AgentTest                 |\n| network_mesh | networkMesh             | NetworkMeshTest           |\n| flow         | flow                    | FlowTest                  |\n| url          | url                     | UrlTest                   |\n| page_load    | pageLoad                | PageLoadTest              |\n| dns          | dns                     | DnsTest                   |\n| dns_grid     | dnsGrid                 | DnsTest                   |\n\n# Test Results\nResults of synthetic tests are returned as a sequence of `TestResults` objects. Each such object represents measurements and health evaluation for a single test at specific point in time. Measurements and health evaluation are grouped by agent and by task.\nGranularity of timestamps in test results depends on the frequency (period) of the test and on the requested time range. The minimum granularity is 1 minute (even when period < 1 minute). The longer the time range, the lower the granularity.\n# Network Traces\nSynthetic tests that include the `traceroute` task collect the unidirectional network path from the agent to the target for each agent/target pair. The trace data are returned in the `GetTraceForTestResponse` object. The `paths` attribute of this object contains the collected network path for each agent/target pair and the round-trip time (RTT) to each hop.\nHops in actual network traces are identified by a `nodeId`. The mapping of node IDs to address, name, location, and other attributes of the hop is provided in a map that is stored in the `nodes` attribute of the `GetTraceForTestResponse` object.\n# Agents\nThe Kentik synthetic monitoring system recognizes 2 types of agents:\n* **Global** (public): Managed by Kentik and available to every Kentik user. All information about global agents in this API is read-only.\n* **Private**: Deployed by each customer and available only to that customer.\nTo be visible in this API, a private agent must first associate itself with a customer account by contacting the Kentik system (via private API). Once the agent is associated it can be authorized via the API by changing its `status` to `AGENT_STATUS_OK`. For more information about private agent deployment, see [**Synthetic Agent Deployments**](https://kb.kentik.com/v4/Ma01.htm#Ma01-Synthetic_Agent_Deployments).\n\"E\n\x16Kentik API Engineering\x12+https://github.com/kentik/api-schema-public2\x07v202309*\x01\x02\x32\x10\x61pplication/json:\x10\x61pplication/jsonZD\n\x1e\n\x05\x65mail\x12\x15\x08\x02\x1a\x0fX-CH-Auth-Email \x02\n\"\n\x05token\x12\x19\x08\x02\x1a\x13X-CH-Auth-API-Token \x02\x62\x16\n\t\n\x05\x65mail\x12\x00\n\t\n\x05token\x12\x00r`\n\"Kentik synthetic monitoring system\x12:https://kb.kentik.com/v4/Ma00.htm#Ma00-Synthetics_Overviewb\x06proto3'
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,google_dot_api_dot_client__pb2.DESCRIPTOR,google_dot_api_dot_field__behavior__pb2.DESCRIPTOR,google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,protoc__gen__openapiv2_dot_options_dot_annotations__pb2.DESCRIPTOR,kentik_dot_core_dot_v202303_dot_annotations__pb2.DESCRIPTOR,kentik_dot_core_dot_v202303_dot_user__info__pb2.DESCRIPTOR,])

_IMPLEMENTTYPE = _descriptor.EnumDescriptor(
  name='ImplementType',
  full_name='kentik.synthetics.v202309.ImplementType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='IMPLEMENT_TYPE_UNSPECIFIED', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IMPLEMENT_TYPE_RUST', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IMPLEMENT_TYPE_NODE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IMPLEMENT_TYPE_NETWORK', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=25569,
  serialized_end=25694,
)
_sym_db.RegisterEnumDescriptor(_IMPLEMENTTYPE)

ImplementType = enum_type_wrapper.EnumTypeWrapper(_IMPLEMENTTYPE)
_IPFAMILY = _descriptor.EnumDescriptor(
  name='IPFamily',
  full_name='kentik.synthetics.v202309.IPFamily',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='IP_FAMILY_UNSPECIFIED', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IP_FAMILY_V4', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IP_FAMILY_V6', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IP_FAMILY_DUAL', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=25696,
  serialized_end=25789,
)
_sym_db.RegisterEnumDescriptor(_IPFAMILY)

IPFamily = enum_type_wrapper.EnumTypeWrapper(_IPFAMILY)
_TESTSTATUS = _descriptor.EnumDescriptor(
  name='TestStatus',
  full_name='kentik.synthetics.v202309.TestStatus',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TEST_STATUS_UNSPECIFIED', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TEST_STATUS_ACTIVE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TEST_STATUS_PAUSED', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TEST_STATUS_DELETED', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TEST_STATUS_PREVIEW', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=25792,
  serialized_end=25931,
)
_sym_db.RegisterEnumDescriptor(_TESTSTATUS)

TestStatus = enum_type_wrapper.EnumTypeWrapper(_TESTSTATUS)
_AGENTSTATUS = _descriptor.EnumDescriptor(
  name='AgentStatus',
  full_name='kentik.synthetics.v202309.AgentStatus',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='AGENT_STATUS_UNSPECIFIED', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='AGENT_STATUS_OK', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='AGENT_STATUS_WAIT', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='AGENT_STATUS_DELETED', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=25933,
  serialized_end=26046,
)
_sym_db.RegisterEnumDescriptor(_AGENTSTATUS)

AgentStatus = enum_type_wrapper.EnumTypeWrapper(_AGENTSTATUS)
_DNSRECORD = _descriptor.EnumDescriptor(
  name='DNSRecord',
  full_name='kentik.synthetics.v202309.DNSRecord',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DNS_RECORD_UNSPECIFIED', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DNS_RECORD_A', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DNS_RECORD_AAAA', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DNS_RECORD_CNAME', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DNS_RECORD_DNAME', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DNS_RECORD_NS', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DNS_RECORD_MX', index=6, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DNS_RECORD_PTR', index=7, number=7,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DNS_RECORD_SOA', index=8, number=8,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=26049,
  serialized_end=26249,
)
_sym_db.RegisterEnumDescriptor(_DNSRECORD)

DNSRecord = enum_type_wrapper.EnumTypeWrapper(_DNSRECORD)
IMPLEMENT_TYPE_UNSPECIFIED = 0
IMPLEMENT_TYPE_RUST = 1
IMPLEMENT_TYPE_NODE = 2
IMPLEMENT_TYPE_NETWORK = 3
IP_FAMILY_UNSPECIFIED = 0
IP_FAMILY_V4 = 1
IP_FAMILY_V6 = 2
IP_FAMILY_DUAL = 3
TEST_STATUS_UNSPECIFIED = 0
TEST_STATUS_ACTIVE = 1
TEST_STATUS_PAUSED = 2
TEST_STATUS_DELETED = 3
TEST_STATUS_PREVIEW = 4
AGENT_STATUS_UNSPECIFIED = 0
AGENT_STATUS_OK = 1
AGENT_STATUS_WAIT = 2
AGENT_STATUS_DELETED = 3
DNS_RECORD_UNSPECIFIED = 0
DNS_RECORD_A = 1
DNS_RECORD_AAAA = 2
DNS_RECORD_CNAME = 3
DNS_RECORD_DNAME = 4
DNS_RECORD_NS = 5
DNS_RECORD_MX = 6
DNS_RECORD_PTR = 7
DNS_RECORD_SOA = 8



_DISABLEDMETRICS = _descriptor.Descriptor(
  name='DisabledMetrics',
  full_name='kentik.synthetics.v202309.DisabledMetrics',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ping_latency', full_name='kentik.synthetics.v202309.DisabledMetrics.ping_latency', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='pingLatency', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ping_jitter', full_name='kentik.synthetics.v202309.DisabledMetrics.ping_jitter', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='pingJitter', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ping_packet_loss', full_name='kentik.synthetics.v202309.DisabledMetrics.ping_packet_loss', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='pingPacketLoss', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='http_latency', full_name='kentik.synthetics.v202309.DisabledMetrics.http_latency', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='httpLatency', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='http_headers', full_name='kentik.synthetics.v202309.DisabledMetrics.http_headers', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='httpHeaders', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='http_codes', full_name='kentik.synthetics.v202309.DisabledMetrics.http_codes', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='httpCodes', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='http_cert_expiry', full_name='kentik.synthetics.v202309.DisabledMetrics.http_cert_expiry', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='httpCertExpiry', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='transaction_latency', full_name='kentik.synthetics.v202309.DisabledMetrics.transaction_latency', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='transactionLatency', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dns_latency', full_name='kentik.synthetics.v202309.DisabledMetrics.dns_latency', index=8,
      number=9, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='dnsLatency', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dns_codes', full_name='kentik.synthetics.v202309.DisabledMetrics.dns_codes', index=9,
      number=10, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='dnsCodes', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dns_ips', full_name='kentik.synthetics.v202309.DisabledMetrics.dns_ips', index=10,
      number=11, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='dnsIps', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='throughput_bandwidth', full_name='kentik.synthetics.v202309.DisabledMetrics.throughput_bandwidth', index=11,
      number=12, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='throughputBandwidth', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=319,
  serialized_end=776,
)


_AGENT = _descriptor.Descriptor(
  name='Agent',
  full_name='kentik.synthetics.v202309.Agent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='kentik.synthetics.v202309.Agent.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A 2\036Unique identifier of the agent\342A\001\003', json_name='id', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='site_name', full_name='kentik.synthetics.v202309.Agent.site_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A)2\'Name of the site where agent is located', json_name='siteName', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='status', full_name='kentik.synthetics.v202309.Agent.status', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0242\022Operational status', json_name='status', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='alias', full_name='kentik.synthetics.v202309.Agent.alias', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A-2+User selected descriptive name of the agent', json_name='alias', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='type', full_name='kentik.synthetics.v202309.Agent.type', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\"2 Type of agent (global | private)\342A\001\003', json_name='type', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='os', full_name='kentik.synthetics.v202309.Agent.os', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A+2)OS version of server/VM hosting the agent\342A\001\003', json_name='os', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ip', full_name='kentik.synthetics.v202309.Agent.ip', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\030\001\222A02.Public IP address of the agent (auto-detected)\342A\001\003', json_name='ip', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='lat', full_name='kentik.synthetics.v202309.Agent.lat', index=7,
      number=8, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A725Latitude of agent\'s location (signed decimal degrees)', json_name='lat', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='long', full_name='kentik.synthetics.v202309.Agent.long', index=8,
      number=9, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A826Longitude of agent\'s location (signed decimal degrees)', json_name='long', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='last_authed', full_name='kentik.synthetics.v202309.Agent.last_authed', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A%2#Timestamp of the last authorization\342A\001\003', json_name='lastAuthed', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='family', full_name='kentik.synthetics.v202309.Agent.family', index=10,
      number=11, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A*2(IP address family supported by the agent', json_name='family', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='asn', full_name='kentik.synthetics.v202309.Agent.asn', index=11,
      number=12, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A-2+ASN of the AS owning agent\'s public address', json_name='asn', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='site_id', full_name='kentik.synthetics.v202309.Agent.site_id', index=12,
      number=13, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A<2:ID of the site hosting the agent (if configured in Kentik)', json_name='siteId', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='version', full_name='kentik.synthetics.v202309.Agent.version', index=13,
      number=14, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0372\035Software version of the agent\342A\001\003', json_name='version', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='city', full_name='kentik.synthetics.v202309.Agent.city', index=14,
      number=16, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A!2\037City where the agent is located', json_name='city', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='region', full_name='kentik.synthetics.v202309.Agent.region', index=15,
      number=17, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A)2\'Geographical region of agent\'s location', json_name='region', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='country', full_name='kentik.synthetics.v202309.Agent.country', index=16,
      number=18, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0352\033Country of agent\'s location', json_name='country', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='test_ids', full_name='kentik.synthetics.v202309.Agent.test_ids', index=17,
      number=19, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A)2\'IDs of user\'s test running on the agent\342A\001\003', json_name='testIds', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='local_ip', full_name='kentik.synthetics.v202309.Agent.local_ip', index=18,
      number=20, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\030\001\222A\"2 Internal IP address of the agent', json_name='localIp', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cloud_region', full_name='kentik.synthetics.v202309.Agent.cloud_region', index=19,
      number=22, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A)2\'Cloud region (if any) hosting the agent', json_name='cloudRegion', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cloud_provider', full_name='kentik.synthetics.v202309.Agent.cloud_provider', index=20,
      number=23, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A+2)Cloud provider (if any) hosting the agent', json_name='cloudProvider', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='agent_impl', full_name='kentik.synthetics.v202309.Agent.agent_impl', index=21,
      number=24, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\342A\001\003', json_name='agentImpl', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='labels', full_name='kentik.synthetics.v202309.Agent.labels', index=22,
      number=25, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A321List of names of labels associated with the agent', json_name='labels', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='metadata', full_name='kentik.synthetics.v202309.Agent.metadata', index=23,
      number=26, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AG2EAdditional information about agent\'s configuration and run-time state', json_name='metadata', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=779,
  serialized_end=2690,
)


_AGENTMETADATA_IPVALUE = _descriptor.Descriptor(
  name='IpValue',
  full_name='kentik.synthetics.v202309.AgentMetadata.IpValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='kentik.synthetics.v202309.AgentMetadata.IpValue.value', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='value', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3280,
  serialized_end=3311,
)

_AGENTMETADATA = _descriptor.Descriptor(
  name='AgentMetadata',
  full_name='kentik.synthetics.v202309.AgentMetadata',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='private_ipv4_addresses', full_name='kentik.synthetics.v202309.AgentMetadata.private_ipv4_addresses', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A 2\036List of private IPv4 addresses', json_name='privateIpv4Addresses', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='public_ipv4_addresses', full_name='kentik.synthetics.v202309.AgentMetadata.public_ipv4_addresses', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0372\035List of public IPv4 addresses\342A\001\003', json_name='publicIpv4Addresses', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='private_ipv6_addresses', full_name='kentik.synthetics.v202309.AgentMetadata.private_ipv6_addresses', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A 2\036List of private IPv6 addresses', json_name='privateIpv6Addresses', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='public_ipv6_addresses', full_name='kentik.synthetics.v202309.AgentMetadata.public_ipv6_addresses', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0372\035List of public IPv6 addresses\342A\001\003', json_name='publicIpv6Addresses', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_AGENTMETADATA_IPVALUE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2693,
  serialized_end=3311,
)


_TEST = _descriptor.Descriptor(
  name='Test',
  full_name='kentik.synthetics.v202309.Test',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='kentik.synthetics.v202309.Test.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0272\025Unique ID of the test\342A\001\003', json_name='id', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='name', full_name='kentik.synthetics.v202309.Test.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A 2\036User selected name of the test', json_name='name', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='type', full_name='kentik.synthetics.v202309.Test.type', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0222\020Type of the test', json_name='type', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='status', full_name='kentik.synthetics.v202309.Test.status', index=3,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A 2\036Operational status of the test', json_name='status', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='settings', full_name='kentik.synthetics.v202309.Test.settings', index=4,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0242\022Test configuration', json_name='settings', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cdate', full_name='kentik.synthetics.v202309.Test.cdate', index=5,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0322\030Creation timestamp (UTC)\342A\001\003', json_name='cdate', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='edate', full_name='kentik.synthetics.v202309.Test.edate', index=6,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A#2!Last modification timestamp (UTC)\342A\001\003', json_name='edate', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='created_by', full_name='kentik.synthetics.v202309.Test.created_by', index=7,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0322\030Identity of test creator\342A\001\003', json_name='createdBy', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='last_updated_by', full_name='kentik.synthetics.v202309.Test.last_updated_by', index=8,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A12/Identity of use that has modified the test last\342A\001\003', json_name='lastUpdatedBy', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='labels', full_name='kentik.synthetics.v202309.Test.labels', index=9,
      number=11, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A(2&Set of labels associated with the test', json_name='labels', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3314,
  serialized_end=4136,
)


_TESTSETTINGS = _descriptor.Descriptor(
  name='TestSettings',
  full_name='kentik.synthetics.v202309.TestSettings',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='hostname', full_name='kentik.synthetics.v202309.TestSettings.hostname', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='hostname', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ip', full_name='kentik.synthetics.v202309.TestSettings.ip', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='ip', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='agent', full_name='kentik.synthetics.v202309.TestSettings.agent', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='agent', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='flow', full_name='kentik.synthetics.v202309.TestSettings.flow', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='flow', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dns', full_name='kentik.synthetics.v202309.TestSettings.dns', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='dns', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='url', full_name='kentik.synthetics.v202309.TestSettings.url', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='url', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='network_grid', full_name='kentik.synthetics.v202309.TestSettings.network_grid', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='networkGrid', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='page_load', full_name='kentik.synthetics.v202309.TestSettings.page_load', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='pageLoad', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dns_grid', full_name='kentik.synthetics.v202309.TestSettings.dns_grid', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='dnsGrid', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='network_mesh', full_name='kentik.synthetics.v202309.TestSettings.network_mesh', index=9,
      number=18, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='networkMesh', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='agent_ids', full_name='kentik.synthetics.v202309.TestSettings.agent_ids', index=10,
      number=10, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A;29IDs of agents assigned to run tasks on behalf of the test', json_name='agentIds', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tasks', full_name='kentik.synthetics.v202309.TestSettings.tasks', index=11,
      number=11, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A(2&List of task names to run for the test', json_name='tasks', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='health_settings', full_name='kentik.synthetics.v202309.TestSettings.health_settings', index=12,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AR2PHealth evaluation thresholds, acceptable responses and alarm activation settings', json_name='healthSettings', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ping', full_name='kentik.synthetics.v202309.TestSettings.ping', index=13,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A%2#Ping tasks configuration parameters', json_name='ping', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='trace', full_name='kentik.synthetics.v202309.TestSettings.trace', index=14,
      number=14, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A*2(Traceroute task configuration parameters', json_name='trace', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='period', full_name='kentik.synthetics.v202309.TestSettings.period', index=15,
      number=15, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A%2#Test evaluation period (in seconds)', json_name='period', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='family', full_name='kentik.synthetics.v202309.TestSettings.family', index=16,
      number=16, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AA2?IP address family to select from available DNS name resolutions', json_name='family', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='notification_channels', full_name='kentik.synthetics.v202309.TestSettings.notification_channels', index=17,
      number=17, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AG2EList of IDs of notification channels for alarms triggered by the test', json_name='notificationChannels', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='notes', full_name='kentik.synthetics.v202309.TestSettings.notes', index=18,
      number=19, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A%2#Add a note or comment for this test', json_name='notes', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='throughput', full_name='kentik.synthetics.v202309.TestSettings.throughput', index=19,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A*2(Throughput task configuration parameters', json_name='throughput', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='definition', full_name='kentik.synthetics.v202309.TestSettings.definition',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=4139,
  serialized_end=5890,
)


_TESTPINGSETTINGS = _descriptor.Descriptor(
  name='TestPingSettings',
  full_name='kentik.synthetics.v202309.TestPingSettings',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='count', full_name='kentik.synthetics.v202309.TestPingSettings.count', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A220Number of probe packets to send in one iteration', json_name='count', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='protocol', full_name='kentik.synthetics.v202309.TestPingSettings.protocol', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A(2&Transport protocol to use (icmp | tcp)', json_name='protocol', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='port', full_name='kentik.synthetics.v202309.TestPingSettings.port', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A/2-Target port for TCP probes (ignored for ICMP)', json_name='port', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='timeout', full_name='kentik.synthetics.v202309.TestPingSettings.timeout', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A321Timeout in milliseconds for execution of the task', json_name='timeout', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='delay', full_name='kentik.synthetics.v202309.TestPingSettings.delay', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A#2!Inter-probe delay in milliseconds', json_name='delay', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dscp', full_name='kentik.synthetics.v202309.TestPingSettings.dscp', index=5,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A321DSCP code to be set in IP header of probe packets', json_name='dscp', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5893,
  serialized_end=6353,
)


_TESTTRACESETTINGS = _descriptor.Descriptor(
  name='TestTraceSettings',
  full_name='kentik.synthetics.v202309.TestTraceSettings',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='count', full_name='kentik.synthetics.v202309.TestTraceSettings.count', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A220Number of probe packets to send in one iteration', json_name='count', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='protocol', full_name='kentik.synthetics.v202309.TestTraceSettings.protocol', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A.2,Transport protocol to use (icmp | tcp | udp)', json_name='protocol', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='port', full_name='kentik.synthetics.v202309.TestTraceSettings.port', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A624Target port for TCP or UDP probes (ignored for ICMP)', json_name='port', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='timeout', full_name='kentik.synthetics.v202309.TestTraceSettings.timeout', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A321Timeout in milliseconds for execution of the task', json_name='timeout', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='limit', full_name='kentik.synthetics.v202309.TestTraceSettings.limit', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A422Maximum number of hops to probe (i.e. maximum TTL)', json_name='limit', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='delay', full_name='kentik.synthetics.v202309.TestTraceSettings.delay', index=5,
      number=6, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A#2!Inter-probe delay in milliseconds', json_name='delay', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dscp', full_name='kentik.synthetics.v202309.TestTraceSettings.dscp', index=6,
      number=7, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A321DSCP code to be set in IP header of probe packets', json_name='dscp', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6356,
  serialized_end=6909,
)


_TESTTHROUGHPUTSETTINGS = _descriptor.Descriptor(
  name='TestThroughputSettings',
  full_name='kentik.synthetics.v202309.TestThroughputSettings',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='port', full_name='kentik.synthetics.v202309.TestThroughputSettings.port', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AY2WTarget port for TCP or UDP throughput task (the port the target server is listening on)', json_name='port', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='omit', full_name='kentik.synthetics.v202309.TestThroughputSettings.omit', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AA2?(optional) Number of seconds to omit from the start of the test', json_name='omit', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='duration', full_name='kentik.synthetics.v202309.TestThroughputSettings.duration', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A!2\037Duration of the test in seconds', json_name='duration', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bandwidth', full_name='kentik.synthetics.v202309.TestThroughputSettings.bandwidth', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\214\0012\211\001(optional) Target bandwidth in Mbps, if no bandwidth is specified, the test will measure the maximum bandwidth for TCP and 10Mbps for UDP', json_name='bandwidth', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='protocol', full_name='kentik.synthetics.v202309.TestThroughputSettings.protocol', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\'2%Transport protocol to use (tcp | udp)', json_name='protocol', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6912,
  serialized_end=7456,
)


_ACTIVATIONSETTINGS = _descriptor.Descriptor(
  name='ActivationSettings',
  full_name='kentik.synthetics.v202309.ActivationSettings',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='grace_period', full_name='kentik.synthetics.v202309.ActivationSettings.grace_period', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\\2ZPeriod of healthy status in minutes within the time window not cancelling alarm activation', json_name='gracePeriod', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_unit', full_name='kentik.synthetics.v202309.ActivationSettings.time_unit', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A.2,Time unit for specifying time window (m | h)', json_name='timeUnit', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_window', full_name='kentik.synthetics.v202309.ActivationSettings.time_window', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A927Time window for evaluating of test for alarm activation', json_name='timeWindow', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='times', full_name='kentik.synthetics.v202309.ActivationSettings.times', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222Ac2aNumber of occurrences of unhealthy test status within the time window triggering alarm activation', json_name='times', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7459,
  serialized_end=7913,
)


_HEALTHSETTINGS = _descriptor.Descriptor(
  name='HealthSettings',
  full_name='kentik.synthetics.v202309.HealthSettings',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='latency_critical', full_name='kentik.synthetics.v202309.HealthSettings.latency_critical', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AQ2OThreshold for ping response latency (in microseconds) to trigger critical alarm', json_name='latencyCritical', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='latency_warning', full_name='kentik.synthetics.v202309.HealthSettings.latency_warning', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AP2NThreshold for ping response latency (in microseconds) to trigger warning alarm', json_name='latencyWarning', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='packet_loss_critical', full_name='kentik.synthetics.v202309.HealthSettings.packet_loss_critical', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AA2?Threshold for ping packet loss (in %) to trigger critical alarm', json_name='packetLossCritical', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='packet_loss_warning', full_name='kentik.synthetics.v202309.HealthSettings.packet_loss_warning', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A@2>Threshold for ping packet loss (in %) to trigger warning alarm', json_name='packetLossWarning', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='jitter_critical', full_name='kentik.synthetics.v202309.HealthSettings.jitter_critical', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AG2EThreshold for ping jitter (in microseconds) to trigger critical alarm', json_name='jitterCritical', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='jitter_warning', full_name='kentik.synthetics.v202309.HealthSettings.jitter_warning', index=5,
      number=6, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AG2EThreshold for ping jitter (in microseconds) to trigger critical alarm', json_name='jitterWarning', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='http_latency_critical', full_name='kentik.synthetics.v202309.HealthSettings.http_latency_critical', index=6,
      number=7, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AQ2OThreshold for HTTP response latency (in microseconds) to trigger critical alarm', json_name='httpLatencyCritical', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='http_latency_warning', full_name='kentik.synthetics.v202309.HealthSettings.http_latency_warning', index=7,
      number=8, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AP2NThreshold for HTTP response latency (in microseconds) to trigger warning alarm', json_name='httpLatencyWarning', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='http_valid_codes', full_name='kentik.synthetics.v202309.HealthSettings.http_valid_codes', index=8,
      number=9, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A422List of HTTP status codes indicating healthy state', json_name='httpValidCodes', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dns_valid_codes', full_name='kentik.synthetics.v202309.HealthSettings.dns_valid_codes', index=9,
      number=10, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A321List of DNS status codes indicating healthy state', json_name='dnsValidCodes', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='latency_critical_stddev', full_name='kentik.synthetics.v202309.HealthSettings.latency_critical_stddev', index=10,
      number=11, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222Ag2eThreshold for standard deviation (in microseconds) of ping response latency to trigger critical alarm', json_name='latencyCriticalStddev', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='latency_warning_stddev', full_name='kentik.synthetics.v202309.HealthSettings.latency_warning_stddev', index=11,
      number=12, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222Af2dThreshold for standard deviation (in microseconds) of ping response latency to trigger warning alarm', json_name='latencyWarningStddev', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='jitter_critical_stddev', full_name='kentik.synthetics.v202309.HealthSettings.jitter_critical_stddev', index=12,
      number=13, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A]2[Threshold for standard deviation of ping jitter (in microseconds) to trigger critical alarm', json_name='jitterCriticalStddev', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='jitter_warning_stddev', full_name='kentik.synthetics.v202309.HealthSettings.jitter_warning_stddev', index=13,
      number=14, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\\2ZThreshold for standard deviation of ping jitter (in microseconds) to trigger warning alarm', json_name='jitterWarningStddev', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='http_latency_critical_stddev', full_name='kentik.synthetics.v202309.HealthSettings.http_latency_critical_stddev', index=14,
      number=15, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222Ag2eThreshold for standard deviation of HTTP response latency (in microseconds) to trigger critical alarm', json_name='httpLatencyCriticalStddev', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='http_latency_warning_stddev', full_name='kentik.synthetics.v202309.HealthSettings.http_latency_warning_stddev', index=15,
      number=16, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222Af2dThreshold for standard deviation of HTTP response latency (in microseconds) to trigger warning alarm', json_name='httpLatencyWarningStddev', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='unhealthy_subtest_threshold', full_name='kentik.synthetics.v202309.HealthSettings.unhealthy_subtest_threshold', index=16,
      number=17, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\030\001\222Aj2hNumber of tasks (across all agents) that must report unhealthy status in order for alarm to be triggered', json_name='unhealthySubtestThreshold', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='activation', full_name='kentik.synthetics.v202309.HealthSettings.activation', index=17,
      number=18, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0332\031Alarm activation settings', json_name='activation', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cert_expiry_warning', full_name='kentik.synthetics.v202309.HealthSettings.cert_expiry_warning', index=18,
      number=19, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AX2VThreshold for remaining validity of TLS certificate (in days) to trigger warning alarm', json_name='certExpiryWarning', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cert_expiry_critical', full_name='kentik.synthetics.v202309.HealthSettings.cert_expiry_critical', index=19,
      number=20, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AY2WThreshold for remaining validity of TLS certificate (in days) to trigger critical alarm', json_name='certExpiryCritical', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dns_valid_ips', full_name='kentik.synthetics.v202309.HealthSettings.dns_valid_ips', index=20,
      number=21, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222Aa2_Comma separated list of IP addresses expected to be received in response to DNS A or AAAA query', json_name='dnsValidIps', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dns_latency_critical', full_name='kentik.synthetics.v202309.HealthSettings.dns_latency_critical', index=21,
      number=22, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AP2NThreshold for DNS response latency (in microseconds) to trigger critical alarm', json_name='dnsLatencyCritical', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dns_latency_warning', full_name='kentik.synthetics.v202309.HealthSettings.dns_latency_warning', index=22,
      number=23, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AO2MThreshold for DNS response latency (in microseconds) to trigger warning alarm', json_name='dnsLatencyWarning', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dns_latency_critical_stddev', full_name='kentik.synthetics.v202309.HealthSettings.dns_latency_critical_stddev', index=23,
      number=24, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222Af2dThreshold for standard deviation (in microseconds) of DNS response latency to trigger critical alarm', json_name='dnsLatencyCriticalStddev', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dns_latency_warning_stddev', full_name='kentik.synthetics.v202309.HealthSettings.dns_latency_warning_stddev', index=24,
      number=25, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222Ae2cThreshold for standard deviation (in microseconds) of DNS response latency to trigger warning alarm', json_name='dnsLatencyWarningStddev', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='per_agent_alerting', full_name='kentik.synthetics.v202309.HealthSettings.per_agent_alerting', index=25,
      number=26, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\030\001\222A<2:Boolean value indicating whether to use per-agent alerting', json_name='perAgentAlerting', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='disabled_metrics', full_name='kentik.synthetics.v202309.HealthSettings.disabled_metrics', index=26,
      number=27, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A725Set of metrics to be skipped during health evaluation', json_name='disabledMetrics', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='health_disabled', full_name='kentik.synthetics.v202309.HealthSettings.health_disabled', index=27,
      number=28, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A-2+Disable all health evaluation for this test', json_name='healthDisabled', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='throughput_critical', full_name='kentik.synthetics.v202309.HealthSettings.throughput_critical', index=28,
      number=29, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AH2FThreshold for throughput bandwidth (in mbps) to trigger critical alarm', json_name='throughputCritical', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='throughput_warning', full_name='kentik.synthetics.v202309.HealthSettings.throughput_warning', index=29,
      number=30, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AG2EThreshold for throughput bandwidth (in mbps) to trigger warning alarm', json_name='throughputWarning', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='throughput_critical_stddev', full_name='kentik.synthetics.v202309.HealthSettings.throughput_critical_stddev', index=30,
      number=31, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A^2\\Threshold for standard deviation (in mbps) of throughput bandwidth to trigger critical alarm', json_name='throughputCriticalStddev', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='throughput_warning_stddev', full_name='kentik.synthetics.v202309.HealthSettings.throughput_warning_stddev', index=31,
      number=32, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A]2[Threshold for standard deviation (in mbps) of throughput bandwidth to trigger warning alarm', json_name='throughputWarningStddev', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7916,
  serialized_end=12346,
)


_HOSTNAMETEST = _descriptor.Descriptor(
  name='HostnameTest',
  full_name='kentik.synthetics.v202309.HostnameTest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='target', full_name='kentik.synthetics.v202309.HostnameTest.target', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A-2+Fully qualified DNS name of the target host', json_name='target', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12348,
  serialized_end=12436,
)


_IPTEST = _descriptor.Descriptor(
  name='IpTest',
  full_name='kentik.synthetics.v202309.IpTest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='targets', full_name='kentik.synthetics.v202309.IpTest.targets', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A!2\037List of IP addresses of targets', json_name='targets', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='use_local_ip', full_name='kentik.synthetics.v202309.IpTest.use_local_ip', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AY2WBoolean value indicating whether to use local (private) IP address of the target agents', json_name='useLocalIp', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12439,
  serialized_end=12639,
)


_AGENTTEST = _descriptor.Descriptor(
  name='AgentTest',
  full_name='kentik.synthetics.v202309.AgentTest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='target', full_name='kentik.synthetics.v202309.AgentTest.target', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0302\026ID of the target agent', json_name='target', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='use_local_ip', full_name='kentik.synthetics.v202309.AgentTest.use_local_ip', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AX2VBoolean value indicating whether to use local (private) IP address of the target agent', json_name='useLocalIp', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='reciprocal', full_name='kentik.synthetics.v202309.AgentTest.reciprocal', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AA2?Boolean value indicating whether to make the test bidirectional', json_name='reciprocal', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12642,
  serialized_end=12935,
)


_FLOWTEST = _descriptor.Descriptor(
  name='FlowTest',
  full_name='kentik.synthetics.v202309.FlowTest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='target', full_name='kentik.synthetics.v202309.FlowTest.target', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222Al2jTarget ASN, CDN, Country, Region of City for autonomous test (type of value depends on flow test sub-type)', json_name='target', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='target_refresh_interval_millis', full_name='kentik.synthetics.v202309.FlowTest.target_refresh_interval_millis', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AV2TPeriod (in milliseconds) for refreshing list of targets based on available flow data', json_name='targetRefreshIntervalMillis', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_providers', full_name='kentik.synthetics.v202309.FlowTest.max_providers', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A624Maximum number of IP providers to track autonomously', json_name='maxProviders', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_ip_targets', full_name='kentik.synthetics.v202309.FlowTest.max_ip_targets', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AG2EMaximum number of target IP addresses to select based flow data query', json_name='maxIpTargets', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='type', full_name='kentik.synthetics.v202309.FlowTest.type', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A@2>Autonomous test sub-type (asn | cdn | country | region | city)', json_name='type', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='inet_direction', full_name='kentik.synthetics.v202309.FlowTest.inet_direction', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A}2{Selection of address from flow data (src = source address in inbound flows | dst = destination addresses in outbound flows)', json_name='inetDirection', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='direction', full_name='kentik.synthetics.v202309.FlowTest.direction', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A]2[Direction of flows to match target attribute for extraction of target addresses (src | dst)', json_name='direction', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12938,
  serialized_end=13845,
)


_DNSTEST = _descriptor.Descriptor(
  name='DnsTest',
  full_name='kentik.synthetics.v202309.DnsTest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='target', full_name='kentik.synthetics.v202309.DnsTest.target', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A#2!Fully qualified DNS name to query', json_name='target', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='timeout', full_name='kentik.synthetics.v202309.DnsTest.timeout', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\030\001\222A\'2%--- Deprecated: value is ignored. ---', json_name='timeout', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='record_type', full_name='kentik.synthetics.v202309.DnsTest.record_type', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0352\033Type of DNS record to query', json_name='recordType', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='servers', full_name='kentik.synthetics.v202309.DnsTest.servers', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A%2#List of IP addresses of DNS servers', json_name='servers', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='port', full_name='kentik.synthetics.v202309.DnsTest.port', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0302\026Target DNS server port', json_name='port', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13848,
  serialized_end=14215,
)


_URLTEST_HEADERSENTRY = _descriptor.Descriptor(
  name='HeadersEntry',
  full_name='kentik.synthetics.v202309.UrlTest.HeadersEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='kentik.synthetics.v202309.UrlTest.HeadersEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='key', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='kentik.synthetics.v202309.UrlTest.HeadersEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='value', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14742,
  serialized_end=14800,
)

_URLTEST = _descriptor.Descriptor(
  name='UrlTest',
  full_name='kentik.synthetics.v202309.UrlTest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='target', full_name='kentik.synthetics.v202309.UrlTest.target', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0362\034HTTP or HTTPS URL to request', json_name='target', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='timeout', full_name='kentik.synthetics.v202309.UrlTest.timeout', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A,2*HTTP transaction timeout (in milliseconds)', json_name='timeout', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='method', full_name='kentik.synthetics.v202309.UrlTest.method', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A624HTTP method to use (GET | HEAD | PATCH | POST | PUT)', json_name='method', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='headers', full_name='kentik.synthetics.v202309.UrlTest.headers', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A12/Map of HTTP header values keyed by header names', json_name='headers', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='body', full_name='kentik.synthetics.v202309.UrlTest.body', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0232\021HTTP request body', json_name='body', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ignore_tls_errors', full_name='kentik.synthetics.v202309.UrlTest.ignore_tls_errors', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AJ2HBoolean indicating whether to ignore TLS certificate verification errors', json_name='ignoreTlsErrors', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_URLTEST_HEADERSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14218,
  serialized_end=14800,
)


_PAGELOADTEST_HEADERSENTRY = _descriptor.Descriptor(
  name='HeadersEntry',
  full_name='kentik.synthetics.v202309.PageLoadTest.HeadersEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='kentik.synthetics.v202309.PageLoadTest.HeadersEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='key', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='kentik.synthetics.v202309.PageLoadTest.HeadersEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='value', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14742,
  serialized_end=14800,
)

_PAGELOADTEST_CSSSELECTORSENTRY = _descriptor.Descriptor(
  name='CssSelectorsEntry',
  full_name='kentik.synthetics.v202309.PageLoadTest.CssSelectorsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='kentik.synthetics.v202309.PageLoadTest.CssSelectorsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='key', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='kentik.synthetics.v202309.PageLoadTest.CssSelectorsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='value', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15424,
  serialized_end=15487,
)

_PAGELOADTEST = _descriptor.Descriptor(
  name='PageLoadTest',
  full_name='kentik.synthetics.v202309.PageLoadTest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='target', full_name='kentik.synthetics.v202309.PageLoadTest.target', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0362\034HTTP or HTTPS URL to request', json_name='target', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='timeout', full_name='kentik.synthetics.v202309.PageLoadTest.timeout', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A,2*HTTP transaction timeout (in milliseconds)', json_name='timeout', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='headers', full_name='kentik.synthetics.v202309.PageLoadTest.headers', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A12/Map of HTTP header values keyed by header names', json_name='headers', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ignore_tls_errors', full_name='kentik.synthetics.v202309.PageLoadTest.ignore_tls_errors', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AJ2HBoolean indicating whether to ignore TLS certificate verification errors', json_name='ignoreTlsErrors', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='css_selectors', full_name='kentik.synthetics.v202309.PageLoadTest.css_selectors', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A321Map of CSS selector values keyed by selector name', json_name='cssSelectors', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_PAGELOADTEST_HEADERSENTRY, _PAGELOADTEST_CSSSELECTORSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14803,
  serialized_end=15487,
)


_NETWORKMESHTEST = _descriptor.Descriptor(
  name='NetworkMeshTest',
  full_name='kentik.synthetics.v202309.NetworkMeshTest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='use_local_ip', full_name='kentik.synthetics.v202309.NetworkMeshTest.use_local_ip', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AY2WBoolean value indicating whether to use local (private) IP address of the target agents', json_name='useLocalIp', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15490,
  serialized_end=15635,
)


_METRICDATA = _descriptor.Descriptor(
  name='MetricData',
  full_name='kentik.synthetics.v202309.MetricData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='current', full_name='kentik.synthetics.v202309.MetricData.current', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0312\027Current value of metric', json_name='current', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='rolling_avg', full_name='kentik.synthetics.v202309.MetricData.rolling_avg', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0332\031Rolling average of metric', json_name='rollingAvg', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='rolling_stddev', full_name='kentik.synthetics.v202309.MetricData.rolling_stddev', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A12/Rolling average of standard deviation of metric', json_name='rollingStddev', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='health', full_name='kentik.synthetics.v202309.MetricData.health', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AH2FHealth evaluation status for the metric (healthy | warning | critical)', json_name='health', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15638,
  serialized_end=15965,
)


_PACKETLOSSDATA = _descriptor.Descriptor(
  name='PacketLossData',
  full_name='kentik.synthetics.v202309.PacketLossData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='current', full_name='kentik.synthetics.v202309.PacketLossData.current', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0332\031Current packet loss value', json_name='current', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='health', full_name='kentik.synthetics.v202309.PacketLossData.health', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AH2FHealth evaluation status for the metric (healthy | warning | critical)', json_name='health', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15968,
  serialized_end=16143,
)


_PINGRESULTS = _descriptor.Descriptor(
  name='PingResults',
  full_name='kentik.synthetics.v202309.PingResults',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='target', full_name='kentik.synthetics.v202309.PingResults.target', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A*2(Hostname or address of the probed target', json_name='target', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='packet_loss', full_name='kentik.synthetics.v202309.PingResults.packet_loss', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0372\035Packet loss metric and health', json_name='packetLoss', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='latency', full_name='kentik.synthetics.v202309.PingResults.latency', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\"2 Packet latency metric and health', json_name='latency', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='jitter', full_name='kentik.synthetics.v202309.PingResults.jitter', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A-2+Latency jitter (variance) metric and health', json_name='jitter', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dst_ip', full_name='kentik.synthetics.v202309.PingResults.dst_ip', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0352\033IP address of probed target', json_name='dstIp', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16146,
  serialized_end=16616,
)


_HTTPRESPONSEDATA = _descriptor.Descriptor(
  name='HTTPResponseData',
  full_name='kentik.synthetics.v202309.HTTPResponseData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='kentik.synthetics.v202309.HTTPResponseData.status', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0312\027HTTP status in response', json_name='status', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='size', full_name='kentik.synthetics.v202309.HTTPResponseData.size', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\'2%Total size of  received response body', json_name='size', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='data', full_name='kentik.synthetics.v202309.HTTPResponseData.data', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AX2VDetailed information about transaction timing, connection characteristics and response', json_name='data', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16619,
  serialized_end=16868,
)


_HTTPRESULTS = _descriptor.Descriptor(
  name='HTTPResults',
  full_name='kentik.synthetics.v202309.HTTPResults',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='target', full_name='kentik.synthetics.v202309.HTTPResults.target', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0232\021Target probed URL', json_name='target', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='latency', full_name='kentik.synthetics.v202309.HTTPResults.latency', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A)2\'HTTP response latency metric and health', json_name='latency', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='response', full_name='kentik.synthetics.v202309.HTTPResults.response', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A*2(Information about received HTTP response', json_name='response', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dst_ip', full_name='kentik.synthetics.v202309.HTTPResults.dst_ip', index=3,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A$2\"IP address of probed target server', json_name='dstIp', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16871,
  serialized_end=17227,
)


_DNSRESPONSEDATA = _descriptor.Descriptor(
  name='DNSResponseData',
  full_name='kentik.synthetics.v202309.DNSResponseData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='kentik.synthetics.v202309.DNSResponseData.status', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0252\023Received DNS status', json_name='status', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='data', full_name='kentik.synthetics.v202309.DNSResponseData.data', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A+2)Text rendering of received DNS resolution', json_name='data', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17230,
  serialized_end=17365,
)


_DNSRESULTS = _descriptor.Descriptor(
  name='DNSResults',
  full_name='kentik.synthetics.v202309.DNSResults',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='target', full_name='kentik.synthetics.v202309.DNSResults.target', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0242\022Queried DNS record', json_name='target', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='server', full_name='kentik.synthetics.v202309.DNSResults.server', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0372\035DNS server used for the query', json_name='server', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='latency', full_name='kentik.synthetics.v202309.DNSResults.latency', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A(2&DNS response latency metric and health', json_name='latency', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='response', full_name='kentik.synthetics.v202309.DNSResults.response', index=3,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A)2\'Information about received DNS response', json_name='response', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17368,
  serialized_end=17717,
)


_TASKRESULTS = _descriptor.Descriptor(
  name='TaskResults',
  full_name='kentik.synthetics.v202309.TaskResults',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ping', full_name='kentik.synthetics.v202309.TaskResults.ping', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A$2\"Entry containing ping task results', json_name='ping', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='http', full_name='kentik.synthetics.v202309.TaskResults.http', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A$2\"Entry containing HTTP task results', json_name='http', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dns', full_name='kentik.synthetics.v202309.TaskResults.dns', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A#2!Entry containing DNS task results', json_name='dns', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='health', full_name='kentik.synthetics.v202309.TaskResults.health', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0332\031Health status of the task', json_name='health', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='task_type', full_name='kentik.synthetics.v202309.TaskResults.task_type',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=17720,
  serialized_end=18107,
)


_AGENTRESULTS = _descriptor.Descriptor(
  name='AgentResults',
  full_name='kentik.synthetics.v202309.AgentResults',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='agent_id', full_name='kentik.synthetics.v202309.AgentResults.agent_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A#2!ID of the agent providing results', json_name='agentId', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='health', full_name='kentik.synthetics.v202309.AgentResults.health', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AG2EOverall health status of all task for the test executed by this agent', json_name='health', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tasks', full_name='kentik.synthetics.v202309.AgentResults.tasks', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A&2$List of results for individual tasks', json_name='tasks', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18110,
  serialized_end=18396,
)


_TESTRESULTS = _descriptor.Descriptor(
  name='TestResults',
  full_name='kentik.synthetics.v202309.TestResults',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='test_id', full_name='kentik.synthetics.v202309.TestResults.test_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A/2-ID of the test for which results are provided', json_name='testId', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time', full_name='kentik.synthetics.v202309.TestResults.time', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0312\027Results timestamp (UTC)', json_name='time', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='health', full_name='kentik.synthetics.v202309.TestResults.health', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0332\031Health status of the test', json_name='health', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='agents', full_name='kentik.synthetics.v202309.TestResults.agents', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AC2AList of results from agents executing tasks on behalf of the test', json_name='agents', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18399,
  serialized_end=18761,
)


_STATS = _descriptor.Descriptor(
  name='Stats',
  full_name='kentik.synthetics.v202309.Stats',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='average', full_name='kentik.synthetics.v202309.Stats.average', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0172\rAverage value', json_name='average', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='min', full_name='kentik.synthetics.v202309.Stats.min', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0172\rMinimum value', json_name='min', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max', full_name='kentik.synthetics.v202309.Stats.max', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0172\rMaximum value', json_name='max', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18764,
  serialized_end=18893,
)


_LOCATION = _descriptor.Descriptor(
  name='Location',
  full_name='kentik.synthetics.v202309.Location',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='latitude', full_name='kentik.synthetics.v202309.Location.latitude', index=0,
      number=8, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A$2\"Latitude in signed decimal degrees', json_name='latitude', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='longitude', full_name='kentik.synthetics.v202309.Location.longitude', index=1,
      number=9, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A%2#Longitude in signed decimal degrees', json_name='longitude', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='country', full_name='kentik.synthetics.v202309.Location.country', index=2,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0312\027Country of the location', json_name='country', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='region', full_name='kentik.synthetics.v202309.Location.region', index=3,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A&2$Geographic region within the country', json_name='region', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='city', full_name='kentik.synthetics.v202309.Location.city', index=4,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0262\024City of the location', json_name='city', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18896,
  serialized_end=19217,
)


_NETNODE = _descriptor.Descriptor(
  name='NetNode',
  full_name='kentik.synthetics.v202309.NetNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip', full_name='kentik.synthetics.v202309.NetNode.ip', index=0,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A523IP address of the node in standard textual notation', json_name='ip', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='asn', full_name='kentik.synthetics.v202309.NetNode.asn', index=1,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A*2(AS number owning the address of the node', json_name='asn', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='as_name', full_name='kentik.synthetics.v202309.NetNode.as_name', index=2,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A/2-Name of the AS owning the address of the node', json_name='asName', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='location', full_name='kentik.synthetics.v202309.NetNode.location', index=3,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A$2\"Location of IP address of the node', json_name='location', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dns_name', full_name='kentik.synthetics.v202309.NetNode.dns_name', index=4,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A;29DNS name of the node (obtained by reverse DNS resolution)', json_name='dnsName', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='device_id', full_name='kentik.synthetics.v202309.NetNode.device_id', index=5,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AF2DID of the device corresponding with the node in Kentik configuration', json_name='deviceId', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='site_id', full_name='kentik.synthetics.v202309.NetNode.site_id', index=6,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AZ2XID of the site containing the device corresponding with the node in Kentik configuration', json_name='siteId', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19220,
  serialized_end=19866,
)


_TRACEHOP = _descriptor.Descriptor(
  name='TraceHop',
  full_name='kentik.synthetics.v202309.TraceHop',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='latency', full_name='kentik.synthetics.v202309.TraceHop.latency', index=0,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AY2WRound-trip packet latency to the node (in microseconds) - 0 if no response was received', json_name='latency', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='node_id', full_name='kentik.synthetics.v202309.TraceHop.node_id', index=1,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222AS2QID of the node for this hop in the Nodes map  - empty if no response was received', json_name='nodeId', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19869,
  serialized_end=20112,
)


_PATHTRACE = _descriptor.Descriptor(
  name='PathTrace',
  full_name='kentik.synthetics.v202309.PathTrace',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='as_path', full_name='kentik.synthetics.v202309.PathTrace.as_path', index=0,
      number=1, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0362\034AS path of the network trace', json_name='asPath', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='is_complete', full_name='kentik.synthetics.v202309.PathTrace.is_complete', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A624Indication whether response from target was received', json_name='isComplete', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='hops', full_name='kentik.synthetics.v202309.PathTrace.hops', index=2,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0332\031List of hops in the trace', json_name='hops', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20115,
  serialized_end=20367,
)


_PATH = _descriptor.Descriptor(
  name='Path',
  full_name='kentik.synthetics.v202309.Path',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='agent_id', full_name='kentik.synthetics.v202309.Path.agent_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A*2(ID of the agent generating the path data', json_name='agentId', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='target_ip', full_name='kentik.synthetics.v202309.Path.target_ip', index=1,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A&2$IP address of the target of the path', json_name='targetIp', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='hop_count', full_name='kentik.synthetics.v202309.Path.hop_count', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A(2&Hop count statistics across all traces', json_name='hopCount', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_as_path_length', full_name='kentik.synthetics.v202309.Path.max_as_path_length', index=3,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A-2+Maximum length of AS path across all traces', json_name='maxAsPathLength', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='traces', full_name='kentik.synthetics.v202309.Path.traces', index=4,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0342\032Data for individual traces', json_name='traces', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time', full_name='kentik.synthetics.v202309.Path.time', index=5,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A12/Timestamp (UTC) of initiation of the path trace', json_name='time', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20370,
  serialized_end=20922,
)


_GETRESULTSFORTESTSREQUEST = _descriptor.Descriptor(
  name='GetResultsForTestsRequest',
  full_name='kentik.synthetics.v202309.GetResultsForTestsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ids', full_name='kentik.synthetics.v202309.GetResultsForTestsRequest.ids', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A02.List of test IDs for which to retrieve results\342A\001\002', json_name='ids', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='start_time', full_name='kentik.synthetics.v202309.GetResultsForTestsRequest.start_time', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A725Timestamp of the oldest results to include in results\342A\001\002', json_name='startTime', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='end_time', full_name='kentik.synthetics.v202309.GetResultsForTestsRequest.end_time', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A725Timestamp of the newest results to include in results\342A\001\002', json_name='endTime', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='agent_ids', full_name='kentik.synthetics.v202309.GetResultsForTestsRequest.agent_ids', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A02.List of agent IDs from which to return results', json_name='agentIds', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='targets', full_name='kentik.synthetics.v202309.GetResultsForTestsRequest.targets', index=4,
      number=5, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A@2>List of targets (test dependent) for which to retrieve results', json_name='targets', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='aggregate', full_name='kentik.synthetics.v202309.GetResultsForTestsRequest.aggregate', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222Ah2fIf true, retrieve result aggregated across the requested time period, else return complete time series', json_name='aggregate', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20925,
  serialized_end=21586,
)


_GETRESULTSFORTESTSRESPONSE = _descriptor.Descriptor(
  name='GetResultsForTestsResponse',
  full_name='kentik.synthetics.v202309.GetResultsForTestsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='results', full_name='kentik.synthetics.v202309.GetResultsForTestsResponse.results', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='results', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21588,
  serialized_end=21682,
)


_GETTRACEFORTESTREQUEST = _descriptor.Descriptor(
  name='GetTraceForTestRequest',
  full_name='kentik.synthetics.v202309.GetTraceForTestRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='kentik.synthetics.v202309.GetTraceForTestRequest.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A:28ID of test for which to retrieve network path trace data', json_name='id', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='start_time', full_name='kentik.synthetics.v202309.GetTraceForTestRequest.start_time', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A725Timestamp of the oldest results to include in results\342A\001\002', json_name='startTime', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='end_time', full_name='kentik.synthetics.v202309.GetTraceForTestRequest.end_time', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A725Timestamp of the newest results to include in results\342A\001\002', json_name='endTime', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='agent_ids', full_name='kentik.synthetics.v202309.GetTraceForTestRequest.agent_ids', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A02.List of agent IDs from which to return results', json_name='agentIds', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='target_ips', full_name='kentik.synthetics.v202309.GetTraceForTestRequest.target_ips', index=4,
      number=5, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A;29List of target IP addresses for which to retrieve results', json_name='targetIps', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21685,
  serialized_end=22207,
)


_GETTRACEFORTESTRESPONSE_NODESENTRY = _descriptor.Descriptor(
  name='NodesEntry',
  full_name='kentik.synthetics.v202309.GetTraceForTestResponse.NodesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='kentik.synthetics.v202309.GetTraceForTestResponse.NodesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='key', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='kentik.synthetics.v202309.GetTraceForTestResponse.NodesEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='value', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22476,
  serialized_end=22568,
)

_GETTRACEFORTESTRESPONSE = _descriptor.Descriptor(
  name='GetTraceForTestResponse',
  full_name='kentik.synthetics.v202309.GetTraceForTestResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='nodes', full_name='kentik.synthetics.v202309.GetTraceForTestResponse.nodes', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A321Map of network node information keyed by node IDs', json_name='nodes', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='paths', full_name='kentik.synthetics.v202309.GetTraceForTestResponse.paths', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A%2#List of retrieved network path data', json_name='paths', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_GETTRACEFORTESTRESPONSE_NODESENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22210,
  serialized_end=22568,
)


_LISTAGENTSREQUEST = _descriptor.Descriptor(
  name='ListAgentsRequest',
  full_name='kentik.synthetics.v202309.ListAgentsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22570,
  serialized_end=22589,
)


_LISTAGENTSRESPONSE = _descriptor.Descriptor(
  name='ListAgentsResponse',
  full_name='kentik.synthetics.v202309.ListAgentsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='agents', full_name='kentik.synthetics.v202309.ListAgentsResponse.agents', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0322\030List of available agents', json_name='agents', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='invalid_count', full_name='kentik.synthetics.v202309.ListAgentsResponse.invalid_count', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A=2;Number of invalid entries encountered while collecting data', json_name='invalidCount', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22592,
  serialized_end=22804,
)


_GETAGENTREQUEST = _descriptor.Descriptor(
  name='GetAgentRequest',
  full_name='kentik.synthetics.v202309.GetAgentRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='kentik.synthetics.v202309.GetAgentRequest.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0332\031ID of the requested agent\342A\001\002', json_name='id', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22806,
  serialized_end=22875,
)


_GETAGENTRESPONSE = _descriptor.Descriptor(
  name='GetAgentResponse',
  full_name='kentik.synthetics.v202309.GetAgentResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='agent', full_name='kentik.synthetics.v202309.GetAgentResponse.agent', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A%2#Agent configuration and status data', json_name='agent', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22877,
  serialized_end=22993,
)


_UPDATEAGENTREQUEST = _descriptor.Descriptor(
  name='UpdateAgentRequest',
  full_name='kentik.synthetics.v202309.UpdateAgentRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='agent', full_name='kentik.synthetics.v202309.UpdateAgentRequest.agent', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0322\030Agent configuration data', json_name='agent', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22995,
  serialized_end=23102,
)


_UPDATEAGENTRESPONSE = _descriptor.Descriptor(
  name='UpdateAgentResponse',
  full_name='kentik.synthetics.v202309.UpdateAgentResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='agent', full_name='kentik.synthetics.v202309.UpdateAgentResponse.agent', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A%2#Agent configuration and status data', json_name='agent', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23104,
  serialized_end=23223,
)


_DELETEAGENTREQUEST = _descriptor.Descriptor(
  name='DeleteAgentRequest',
  full_name='kentik.synthetics.v202309.DeleteAgentRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='kentik.synthetics.v202309.DeleteAgentRequest.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0372\035ID of the agent to be deleted\342A\001\002', json_name='id', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23225,
  serialized_end=23301,
)


_DELETEAGENTRESPONSE = _descriptor.Descriptor(
  name='DeleteAgentResponse',
  full_name='kentik.synthetics.v202309.DeleteAgentResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23303,
  serialized_end=23324,
)


_LISTTESTSREQUEST = _descriptor.Descriptor(
  name='ListTestsRequest',
  full_name='kentik.synthetics.v202309.ListTestsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23326,
  serialized_end=23344,
)


_LISTTESTSRESPONSE = _descriptor.Descriptor(
  name='ListTestsResponse',
  full_name='kentik.synthetics.v202309.ListTestsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='tests', full_name='kentik.synthetics.v202309.ListTestsResponse.tests', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A+2)List of configured active or paused tests', json_name='tests', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='invalid_count', full_name='kentik.synthetics.v202309.ListTestsResponse.invalid_count', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A=2;Number of invalid entries encountered while collecting data', json_name='invalidCount', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23347,
  serialized_end=23572,
)


_CREATETESTREQUEST = _descriptor.Descriptor(
  name='CreateTestRequest',
  full_name='kentik.synthetics.v202309.CreateTestRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='test', full_name='kentik.synthetics.v202309.CreateTestRequest.test', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0312\027Test configuration data\342A\001\002', json_name='test', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23574,
  serialized_end=23680,
)


_CREATETESTRESPONSE = _descriptor.Descriptor(
  name='CreateTestResponse',
  full_name='kentik.synthetics.v202309.CreateTestResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='test', full_name='kentik.synthetics.v202309.CreateTestResponse.test', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A$2\"Test configuration and status data', json_name='test', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23682,
  serialized_end=23796,
)


_GETTESTREQUEST = _descriptor.Descriptor(
  name='GetTestRequest',
  full_name='kentik.synthetics.v202309.GetTestRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='kentik.synthetics.v202309.GetTestRequest.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0262\024ID of requested test\342A\001\002', json_name='id', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23798,
  serialized_end=23861,
)


_GETTESTRESPONSE = _descriptor.Descriptor(
  name='GetTestResponse',
  full_name='kentik.synthetics.v202309.GetTestResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='test', full_name='kentik.synthetics.v202309.GetTestResponse.test', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A$2\"Test configuration and status data', json_name='test', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23863,
  serialized_end=23974,
)


_UPDATETESTREQUEST = _descriptor.Descriptor(
  name='UpdateTestRequest',
  full_name='kentik.synthetics.v202309.UpdateTestRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='test', full_name='kentik.synthetics.v202309.UpdateTestRequest.test', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0312\027Test configuration data', json_name='test', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23976,
  serialized_end=24078,
)


_UPDATETESTRESPONSE = _descriptor.Descriptor(
  name='UpdateTestResponse',
  full_name='kentik.synthetics.v202309.UpdateTestResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='test', full_name='kentik.synthetics.v202309.UpdateTestResponse.test', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A$2\"Test configuration and status data', json_name='test', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24080,
  serialized_end=24194,
)


_DELETETESTREQUEST = _descriptor.Descriptor(
  name='DeleteTestRequest',
  full_name='kentik.synthetics.v202309.DeleteTestRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='kentik.synthetics.v202309.DeleteTestRequest.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0362\034ID of the test to be deleted\342A\001\002', json_name='id', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24196,
  serialized_end=24270,
)


_DELETETESTRESPONSE = _descriptor.Descriptor(
  name='DeleteTestResponse',
  full_name='kentik.synthetics.v202309.DeleteTestResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24272,
  serialized_end=24292,
)


_SETTESTSTATUSREQUEST = _descriptor.Descriptor(
  name='SetTestStatusRequest',
  full_name='kentik.synthetics.v202309.SetTestStatusRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='kentik.synthetics.v202309.SetTestStatusRequest.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A/2-ID of the test which status is to be modified\342A\001\002', json_name='id', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='status', full_name='kentik.synthetics.v202309.SetTestStatusRequest.status', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\222A\0242\022Target test status\342A\001\002', json_name='status', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24295,
  serialized_end=24481,
)


_SETTESTSTATUSRESPONSE = _descriptor.Descriptor(
  name='SetTestStatusResponse',
  full_name='kentik.synthetics.v202309.SetTestStatusResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24483,
  serialized_end=24506,
)


_AGENTALERT = _descriptor.Descriptor(
  name='AgentAlert',
  full_name='kentik.synthetics.v202309.AgentAlert',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='kentik.synthetics.v202309.AgentAlert.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='id', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='threshold_seconds', full_name='kentik.synthetics.v202309.AgentAlert.threshold_seconds', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='thresholdSeconds', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='notification_channel_ids', full_name='kentik.synthetics.v202309.AgentAlert.notification_channel_ids', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='notificationChannelIds', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='agent_id', full_name='kentik.synthetics.v202309.AgentAlert.agent_id', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='agentId', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='agent_name', full_name='kentik.synthetics.v202309.AgentAlert.agent_name', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='agentName', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24509,
  serialized_end=24698,
)


_CREATEAGENTALERTREQUEST = _descriptor.Descriptor(
  name='CreateAgentAlertRequest',
  full_name='kentik.synthetics.v202309.CreateAgentAlertRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='threshold_seconds', full_name='kentik.synthetics.v202309.CreateAgentAlertRequest.threshold_seconds', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='thresholdSeconds', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='notification_channel_ids', full_name='kentik.synthetics.v202309.CreateAgentAlertRequest.notification_channel_ids', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='notificationChannelIds', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='agent_id', full_name='kentik.synthetics.v202309.CreateAgentAlertRequest.agent_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='agentId', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24701,
  serialized_end=24856,
)


_CREATEAGENTALERTRESPONSE = _descriptor.Descriptor(
  name='CreateAgentAlertResponse',
  full_name='kentik.synthetics.v202309.CreateAgentAlertResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='agent_alert', full_name='kentik.synthetics.v202309.CreateAgentAlertResponse.agent_alert', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='agentAlert', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24858,
  serialized_end=24956,
)


_UPDATEAGENTALERTREQUEST = _descriptor.Descriptor(
  name='UpdateAgentAlertRequest',
  full_name='kentik.synthetics.v202309.UpdateAgentAlertRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='kentik.synthetics.v202309.UpdateAgentAlertRequest.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='id', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='threshold_seconds', full_name='kentik.synthetics.v202309.UpdateAgentAlertRequest.threshold_seconds', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='thresholdSeconds', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='notification_channel_ids', full_name='kentik.synthetics.v202309.UpdateAgentAlertRequest.notification_channel_ids', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='notificationChannelIds', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24959,
  serialized_end=25103,
)


_UPDATEAGENTALERTRESPONSE = _descriptor.Descriptor(
  name='UpdateAgentAlertResponse',
  full_name='kentik.synthetics.v202309.UpdateAgentAlertResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='agent_alert', full_name='kentik.synthetics.v202309.UpdateAgentAlertResponse.agent_alert', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='agentAlert', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=25105,
  serialized_end=25203,
)


_GETAGENTALERTREQUEST = _descriptor.Descriptor(
  name='GetAgentAlertRequest',
  full_name='kentik.synthetics.v202309.GetAgentAlertRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='kentik.synthetics.v202309.GetAgentAlertRequest.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='id', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=25205,
  serialized_end=25243,
)


_GETAGENTALERTRESPONSE = _descriptor.Descriptor(
  name='GetAgentAlertResponse',
  full_name='kentik.synthetics.v202309.GetAgentAlertResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='agent_alert', full_name='kentik.synthetics.v202309.GetAgentAlertResponse.agent_alert', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='agentAlert', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=25245,
  serialized_end=25340,
)


_LISTAGENTALERTSREQUEST = _descriptor.Descriptor(
  name='ListAgentAlertsRequest',
  full_name='kentik.synthetics.v202309.ListAgentAlertsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='agent_ids', full_name='kentik.synthetics.v202309.ListAgentAlertsRequest.agent_ids', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='agentIds', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=25342,
  serialized_end=25395,
)


_LISTAGENTALERTSRESPONSE = _descriptor.Descriptor(
  name='ListAgentAlertsResponse',
  full_name='kentik.synthetics.v202309.ListAgentAlertsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='agent_alerts', full_name='kentik.synthetics.v202309.ListAgentAlertsResponse.agent_alerts', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='agentAlerts', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=25397,
  serialized_end=25496,
)


_DELETEAGENTALERTREQUEST = _descriptor.Descriptor(
  name='DeleteAgentAlertRequest',
  full_name='kentik.synthetics.v202309.DeleteAgentAlertRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='kentik.synthetics.v202309.DeleteAgentAlertRequest.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='id', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=25498,
  serialized_end=25539,
)


_DELETEAGENTALERTRESPONSE = _descriptor.Descriptor(
  name='DeleteAgentAlertResponse',
  full_name='kentik.synthetics.v202309.DeleteAgentAlertResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=25541,
  serialized_end=25567,
)

_AGENT.fields_by_name['status'].enum_type = _AGENTSTATUS
_AGENT.fields_by_name['last_authed'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_AGENT.fields_by_name['family'].enum_type = _IPFAMILY
_AGENT.fields_by_name['agent_impl'].enum_type = _IMPLEMENTTYPE
_AGENT.fields_by_name['metadata'].message_type = _AGENTMETADATA
_AGENTMETADATA_IPVALUE.containing_type = _AGENTMETADATA
_AGENTMETADATA.fields_by_name['private_ipv4_addresses'].message_type = _AGENTMETADATA_IPVALUE
_AGENTMETADATA.fields_by_name['public_ipv4_addresses'].message_type = _AGENTMETADATA_IPVALUE
_AGENTMETADATA.fields_by_name['private_ipv6_addresses'].message_type = _AGENTMETADATA_IPVALUE
_AGENTMETADATA.fields_by_name['public_ipv6_addresses'].message_type = _AGENTMETADATA_IPVALUE
_TEST.fields_by_name['status'].enum_type = _TESTSTATUS
_TEST.fields_by_name['settings'].message_type = _TESTSETTINGS
_TEST.fields_by_name['cdate'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_TEST.fields_by_name['edate'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_TEST.fields_by_name['created_by'].message_type = kentik_dot_core_dot_v202303_dot_user__info__pb2._USERINFO
_TEST.fields_by_name['last_updated_by'].message_type = kentik_dot_core_dot_v202303_dot_user__info__pb2._USERINFO
_TESTSETTINGS.fields_by_name['hostname'].message_type = _HOSTNAMETEST
_TESTSETTINGS.fields_by_name['ip'].message_type = _IPTEST
_TESTSETTINGS.fields_by_name['agent'].message_type = _AGENTTEST
_TESTSETTINGS.fields_by_name['flow'].message_type = _FLOWTEST
_TESTSETTINGS.fields_by_name['dns'].message_type = _DNSTEST
_TESTSETTINGS.fields_by_name['url'].message_type = _URLTEST
_TESTSETTINGS.fields_by_name['network_grid'].message_type = _IPTEST
_TESTSETTINGS.fields_by_name['page_load'].message_type = _PAGELOADTEST
_TESTSETTINGS.fields_by_name['dns_grid'].message_type = _DNSTEST
_TESTSETTINGS.fields_by_name['network_mesh'].message_type = _NETWORKMESHTEST
_TESTSETTINGS.fields_by_name['health_settings'].message_type = _HEALTHSETTINGS
_TESTSETTINGS.fields_by_name['ping'].message_type = _TESTPINGSETTINGS
_TESTSETTINGS.fields_by_name['trace'].message_type = _TESTTRACESETTINGS
_TESTSETTINGS.fields_by_name['family'].enum_type = _IPFAMILY
_TESTSETTINGS.fields_by_name['throughput'].message_type = _TESTTHROUGHPUTSETTINGS
_TESTSETTINGS.oneofs_by_name['definition'].fields.append(
  _TESTSETTINGS.fields_by_name['hostname'])
_TESTSETTINGS.fields_by_name['hostname'].containing_oneof = _TESTSETTINGS.oneofs_by_name['definition']
_TESTSETTINGS.oneofs_by_name['definition'].fields.append(
  _TESTSETTINGS.fields_by_name['ip'])
_TESTSETTINGS.fields_by_name['ip'].containing_oneof = _TESTSETTINGS.oneofs_by_name['definition']
_TESTSETTINGS.oneofs_by_name['definition'].fields.append(
  _TESTSETTINGS.fields_by_name['agent'])
_TESTSETTINGS.fields_by_name['agent'].containing_oneof = _TESTSETTINGS.oneofs_by_name['definition']
_TESTSETTINGS.oneofs_by_name['definition'].fields.append(
  _TESTSETTINGS.fields_by_name['flow'])
_TESTSETTINGS.fields_by_name['flow'].containing_oneof = _TESTSETTINGS.oneofs_by_name['definition']
_TESTSETTINGS.oneofs_by_name['definition'].fields.append(
  _TESTSETTINGS.fields_by_name['dns'])
_TESTSETTINGS.fields_by_name['dns'].containing_oneof = _TESTSETTINGS.oneofs_by_name['definition']
_TESTSETTINGS.oneofs_by_name['definition'].fields.append(
  _TESTSETTINGS.fields_by_name['url'])
_TESTSETTINGS.fields_by_name['url'].containing_oneof = _TESTSETTINGS.oneofs_by_name['definition']
_TESTSETTINGS.oneofs_by_name['definition'].fields.append(
  _TESTSETTINGS.fields_by_name['network_grid'])
_TESTSETTINGS.fields_by_name['network_grid'].containing_oneof = _TESTSETTINGS.oneofs_by_name['definition']
_TESTSETTINGS.oneofs_by_name['definition'].fields.append(
  _TESTSETTINGS.fields_by_name['page_load'])
_TESTSETTINGS.fields_by_name['page_load'].containing_oneof = _TESTSETTINGS.oneofs_by_name['definition']
_TESTSETTINGS.oneofs_by_name['definition'].fields.append(
  _TESTSETTINGS.fields_by_name['dns_grid'])
_TESTSETTINGS.fields_by_name['dns_grid'].containing_oneof = _TESTSETTINGS.oneofs_by_name['definition']
_TESTSETTINGS.oneofs_by_name['definition'].fields.append(
  _TESTSETTINGS.fields_by_name['network_mesh'])
_TESTSETTINGS.fields_by_name['network_mesh'].containing_oneof = _TESTSETTINGS.oneofs_by_name['definition']
_HEALTHSETTINGS.fields_by_name['activation'].message_type = _ACTIVATIONSETTINGS
_HEALTHSETTINGS.fields_by_name['disabled_metrics'].message_type = _DISABLEDMETRICS
_DNSTEST.fields_by_name['record_type'].enum_type = _DNSRECORD
_URLTEST_HEADERSENTRY.containing_type = _URLTEST
_URLTEST.fields_by_name['headers'].message_type = _URLTEST_HEADERSENTRY
_PAGELOADTEST_HEADERSENTRY.containing_type = _PAGELOADTEST
_PAGELOADTEST_CSSSELECTORSENTRY.containing_type = _PAGELOADTEST
_PAGELOADTEST.fields_by_name['headers'].message_type = _PAGELOADTEST_HEADERSENTRY
_PAGELOADTEST.fields_by_name['css_selectors'].message_type = _PAGELOADTEST_CSSSELECTORSENTRY
_PINGRESULTS.fields_by_name['packet_loss'].message_type = _PACKETLOSSDATA
_PINGRESULTS.fields_by_name['latency'].message_type = _METRICDATA
_PINGRESULTS.fields_by_name['jitter'].message_type = _METRICDATA
_HTTPRESULTS.fields_by_name['latency'].message_type = _METRICDATA
_HTTPRESULTS.fields_by_name['response'].message_type = _HTTPRESPONSEDATA
_DNSRESULTS.fields_by_name['latency'].message_type = _METRICDATA
_DNSRESULTS.fields_by_name['response'].message_type = _DNSRESPONSEDATA
_TASKRESULTS.fields_by_name['ping'].message_type = _PINGRESULTS
_TASKRESULTS.fields_by_name['http'].message_type = _HTTPRESULTS
_TASKRESULTS.fields_by_name['dns'].message_type = _DNSRESULTS
_TASKRESULTS.oneofs_by_name['task_type'].fields.append(
  _TASKRESULTS.fields_by_name['ping'])
_TASKRESULTS.fields_by_name['ping'].containing_oneof = _TASKRESULTS.oneofs_by_name['task_type']
_TASKRESULTS.oneofs_by_name['task_type'].fields.append(
  _TASKRESULTS.fields_by_name['http'])
_TASKRESULTS.fields_by_name['http'].containing_oneof = _TASKRESULTS.oneofs_by_name['task_type']
_TASKRESULTS.oneofs_by_name['task_type'].fields.append(
  _TASKRESULTS.fields_by_name['dns'])
_TASKRESULTS.fields_by_name['dns'].containing_oneof = _TASKRESULTS.oneofs_by_name['task_type']
_AGENTRESULTS.fields_by_name['tasks'].message_type = _TASKRESULTS
_TESTRESULTS.fields_by_name['time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_TESTRESULTS.fields_by_name['agents'].message_type = _AGENTRESULTS
_NETNODE.fields_by_name['location'].message_type = _LOCATION
_PATHTRACE.fields_by_name['hops'].message_type = _TRACEHOP
_PATH.fields_by_name['hop_count'].message_type = _STATS
_PATH.fields_by_name['traces'].message_type = _PATHTRACE
_PATH.fields_by_name['time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_GETRESULTSFORTESTSREQUEST.fields_by_name['start_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_GETRESULTSFORTESTSREQUEST.fields_by_name['end_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_GETRESULTSFORTESTSRESPONSE.fields_by_name['results'].message_type = _TESTRESULTS
_GETTRACEFORTESTREQUEST.fields_by_name['start_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_GETTRACEFORTESTREQUEST.fields_by_name['end_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_GETTRACEFORTESTRESPONSE_NODESENTRY.fields_by_name['value'].message_type = _NETNODE
_GETTRACEFORTESTRESPONSE_NODESENTRY.containing_type = _GETTRACEFORTESTRESPONSE
_GETTRACEFORTESTRESPONSE.fields_by_name['nodes'].message_type = _GETTRACEFORTESTRESPONSE_NODESENTRY
_GETTRACEFORTESTRESPONSE.fields_by_name['paths'].message_type = _PATH
_LISTAGENTSRESPONSE.fields_by_name['agents'].message_type = _AGENT
_GETAGENTRESPONSE.fields_by_name['agent'].message_type = _AGENT
_UPDATEAGENTREQUEST.fields_by_name['agent'].message_type = _AGENT
_UPDATEAGENTRESPONSE.fields_by_name['agent'].message_type = _AGENT
_LISTTESTSRESPONSE.fields_by_name['tests'].message_type = _TEST
_CREATETESTREQUEST.fields_by_name['test'].message_type = _TEST
_CREATETESTRESPONSE.fields_by_name['test'].message_type = _TEST
_GETTESTRESPONSE.fields_by_name['test'].message_type = _TEST
_UPDATETESTREQUEST.fields_by_name['test'].message_type = _TEST
_UPDATETESTRESPONSE.fields_by_name['test'].message_type = _TEST
_SETTESTSTATUSREQUEST.fields_by_name['status'].enum_type = _TESTSTATUS
_CREATEAGENTALERTRESPONSE.fields_by_name['agent_alert'].message_type = _AGENTALERT
_UPDATEAGENTALERTRESPONSE.fields_by_name['agent_alert'].message_type = _AGENTALERT
_GETAGENTALERTRESPONSE.fields_by_name['agent_alert'].message_type = _AGENTALERT
_LISTAGENTALERTSRESPONSE.fields_by_name['agent_alerts'].message_type = _AGENTALERT
DESCRIPTOR.message_types_by_name['DisabledMetrics'] = _DISABLEDMETRICS
DESCRIPTOR.message_types_by_name['Agent'] = _AGENT
DESCRIPTOR.message_types_by_name['AgentMetadata'] = _AGENTMETADATA
DESCRIPTOR.message_types_by_name['Test'] = _TEST
DESCRIPTOR.message_types_by_name['TestSettings'] = _TESTSETTINGS
DESCRIPTOR.message_types_by_name['TestPingSettings'] = _TESTPINGSETTINGS
DESCRIPTOR.message_types_by_name['TestTraceSettings'] = _TESTTRACESETTINGS
DESCRIPTOR.message_types_by_name['TestThroughputSettings'] = _TESTTHROUGHPUTSETTINGS
DESCRIPTOR.message_types_by_name['ActivationSettings'] = _ACTIVATIONSETTINGS
DESCRIPTOR.message_types_by_name['HealthSettings'] = _HEALTHSETTINGS
DESCRIPTOR.message_types_by_name['HostnameTest'] = _HOSTNAMETEST
DESCRIPTOR.message_types_by_name['IpTest'] = _IPTEST
DESCRIPTOR.message_types_by_name['AgentTest'] = _AGENTTEST
DESCRIPTOR.message_types_by_name['FlowTest'] = _FLOWTEST
DESCRIPTOR.message_types_by_name['DnsTest'] = _DNSTEST
DESCRIPTOR.message_types_by_name['UrlTest'] = _URLTEST
DESCRIPTOR.message_types_by_name['PageLoadTest'] = _PAGELOADTEST
DESCRIPTOR.message_types_by_name['NetworkMeshTest'] = _NETWORKMESHTEST
DESCRIPTOR.message_types_by_name['MetricData'] = _METRICDATA
DESCRIPTOR.message_types_by_name['PacketLossData'] = _PACKETLOSSDATA
DESCRIPTOR.message_types_by_name['PingResults'] = _PINGRESULTS
DESCRIPTOR.message_types_by_name['HTTPResponseData'] = _HTTPRESPONSEDATA
DESCRIPTOR.message_types_by_name['HTTPResults'] = _HTTPRESULTS
DESCRIPTOR.message_types_by_name['DNSResponseData'] = _DNSRESPONSEDATA
DESCRIPTOR.message_types_by_name['DNSResults'] = _DNSRESULTS
DESCRIPTOR.message_types_by_name['TaskResults'] = _TASKRESULTS
DESCRIPTOR.message_types_by_name['AgentResults'] = _AGENTRESULTS
DESCRIPTOR.message_types_by_name['TestResults'] = _TESTRESULTS
DESCRIPTOR.message_types_by_name['Stats'] = _STATS
DESCRIPTOR.message_types_by_name['Location'] = _LOCATION
DESCRIPTOR.message_types_by_name['NetNode'] = _NETNODE
DESCRIPTOR.message_types_by_name['TraceHop'] = _TRACEHOP
DESCRIPTOR.message_types_by_name['PathTrace'] = _PATHTRACE
DESCRIPTOR.message_types_by_name['Path'] = _PATH
DESCRIPTOR.message_types_by_name['GetResultsForTestsRequest'] = _GETRESULTSFORTESTSREQUEST
DESCRIPTOR.message_types_by_name['GetResultsForTestsResponse'] = _GETRESULTSFORTESTSRESPONSE
DESCRIPTOR.message_types_by_name['GetTraceForTestRequest'] = _GETTRACEFORTESTREQUEST
DESCRIPTOR.message_types_by_name['GetTraceForTestResponse'] = _GETTRACEFORTESTRESPONSE
DESCRIPTOR.message_types_by_name['ListAgentsRequest'] = _LISTAGENTSREQUEST
DESCRIPTOR.message_types_by_name['ListAgentsResponse'] = _LISTAGENTSRESPONSE
DESCRIPTOR.message_types_by_name['GetAgentRequest'] = _GETAGENTREQUEST
DESCRIPTOR.message_types_by_name['GetAgentResponse'] = _GETAGENTRESPONSE
DESCRIPTOR.message_types_by_name['UpdateAgentRequest'] = _UPDATEAGENTREQUEST
DESCRIPTOR.message_types_by_name['UpdateAgentResponse'] = _UPDATEAGENTRESPONSE
DESCRIPTOR.message_types_by_name['DeleteAgentRequest'] = _DELETEAGENTREQUEST
DESCRIPTOR.message_types_by_name['DeleteAgentResponse'] = _DELETEAGENTRESPONSE
DESCRIPTOR.message_types_by_name['ListTestsRequest'] = _LISTTESTSREQUEST
DESCRIPTOR.message_types_by_name['ListTestsResponse'] = _LISTTESTSRESPONSE
DESCRIPTOR.message_types_by_name['CreateTestRequest'] = _CREATETESTREQUEST
DESCRIPTOR.message_types_by_name['CreateTestResponse'] = _CREATETESTRESPONSE
DESCRIPTOR.message_types_by_name['GetTestRequest'] = _GETTESTREQUEST
DESCRIPTOR.message_types_by_name['GetTestResponse'] = _GETTESTRESPONSE
DESCRIPTOR.message_types_by_name['UpdateTestRequest'] = _UPDATETESTREQUEST
DESCRIPTOR.message_types_by_name['UpdateTestResponse'] = _UPDATETESTRESPONSE
DESCRIPTOR.message_types_by_name['DeleteTestRequest'] = _DELETETESTREQUEST
DESCRIPTOR.message_types_by_name['DeleteTestResponse'] = _DELETETESTRESPONSE
DESCRIPTOR.message_types_by_name['SetTestStatusRequest'] = _SETTESTSTATUSREQUEST
DESCRIPTOR.message_types_by_name['SetTestStatusResponse'] = _SETTESTSTATUSRESPONSE
DESCRIPTOR.message_types_by_name['AgentAlert'] = _AGENTALERT
DESCRIPTOR.message_types_by_name['CreateAgentAlertRequest'] = _CREATEAGENTALERTREQUEST
DESCRIPTOR.message_types_by_name['CreateAgentAlertResponse'] = _CREATEAGENTALERTRESPONSE
DESCRIPTOR.message_types_by_name['UpdateAgentAlertRequest'] = _UPDATEAGENTALERTREQUEST
DESCRIPTOR.message_types_by_name['UpdateAgentAlertResponse'] = _UPDATEAGENTALERTRESPONSE
DESCRIPTOR.message_types_by_name['GetAgentAlertRequest'] = _GETAGENTALERTREQUEST
DESCRIPTOR.message_types_by_name['GetAgentAlertResponse'] = _GETAGENTALERTRESPONSE
DESCRIPTOR.message_types_by_name['ListAgentAlertsRequest'] = _LISTAGENTALERTSREQUEST
DESCRIPTOR.message_types_by_name['ListAgentAlertsResponse'] = _LISTAGENTALERTSRESPONSE
DESCRIPTOR.message_types_by_name['DeleteAgentAlertRequest'] = _DELETEAGENTALERTREQUEST
DESCRIPTOR.message_types_by_name['DeleteAgentAlertResponse'] = _DELETEAGENTALERTRESPONSE
DESCRIPTOR.enum_types_by_name['ImplementType'] = _IMPLEMENTTYPE
DESCRIPTOR.enum_types_by_name['IPFamily'] = _IPFAMILY
DESCRIPTOR.enum_types_by_name['TestStatus'] = _TESTSTATUS
DESCRIPTOR.enum_types_by_name['AgentStatus'] = _AGENTSTATUS
DESCRIPTOR.enum_types_by_name['DNSRecord'] = _DNSRECORD
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

DisabledMetrics = _reflection.GeneratedProtocolMessageType('DisabledMetrics', (_message.Message,), {
  'DESCRIPTOR' : _DISABLEDMETRICS,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.DisabledMetrics)
  })
_sym_db.RegisterMessage(DisabledMetrics)

Agent = _reflection.GeneratedProtocolMessageType('Agent', (_message.Message,), {
  'DESCRIPTOR' : _AGENT,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.Agent)
  })
_sym_db.RegisterMessage(Agent)

AgentMetadata = _reflection.GeneratedProtocolMessageType('AgentMetadata', (_message.Message,), {

  'IpValue' : _reflection.GeneratedProtocolMessageType('IpValue', (_message.Message,), {
    'DESCRIPTOR' : _AGENTMETADATA_IPVALUE,
    '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
    # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.AgentMetadata.IpValue)
    })
  ,
  'DESCRIPTOR' : _AGENTMETADATA,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.AgentMetadata)
  })
_sym_db.RegisterMessage(AgentMetadata)
_sym_db.RegisterMessage(AgentMetadata.IpValue)

Test = _reflection.GeneratedProtocolMessageType('Test', (_message.Message,), {
  'DESCRIPTOR' : _TEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.Test)
  })
_sym_db.RegisterMessage(Test)

TestSettings = _reflection.GeneratedProtocolMessageType('TestSettings', (_message.Message,), {
  'DESCRIPTOR' : _TESTSETTINGS,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.TestSettings)
  })
_sym_db.RegisterMessage(TestSettings)

TestPingSettings = _reflection.GeneratedProtocolMessageType('TestPingSettings', (_message.Message,), {
  'DESCRIPTOR' : _TESTPINGSETTINGS,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.TestPingSettings)
  })
_sym_db.RegisterMessage(TestPingSettings)

TestTraceSettings = _reflection.GeneratedProtocolMessageType('TestTraceSettings', (_message.Message,), {
  'DESCRIPTOR' : _TESTTRACESETTINGS,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.TestTraceSettings)
  })
_sym_db.RegisterMessage(TestTraceSettings)

TestThroughputSettings = _reflection.GeneratedProtocolMessageType('TestThroughputSettings', (_message.Message,), {
  'DESCRIPTOR' : _TESTTHROUGHPUTSETTINGS,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.TestThroughputSettings)
  })
_sym_db.RegisterMessage(TestThroughputSettings)

ActivationSettings = _reflection.GeneratedProtocolMessageType('ActivationSettings', (_message.Message,), {
  'DESCRIPTOR' : _ACTIVATIONSETTINGS,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.ActivationSettings)
  })
_sym_db.RegisterMessage(ActivationSettings)

HealthSettings = _reflection.GeneratedProtocolMessageType('HealthSettings', (_message.Message,), {
  'DESCRIPTOR' : _HEALTHSETTINGS,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.HealthSettings)
  })
_sym_db.RegisterMessage(HealthSettings)

HostnameTest = _reflection.GeneratedProtocolMessageType('HostnameTest', (_message.Message,), {
  'DESCRIPTOR' : _HOSTNAMETEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.HostnameTest)
  })
_sym_db.RegisterMessage(HostnameTest)

IpTest = _reflection.GeneratedProtocolMessageType('IpTest', (_message.Message,), {
  'DESCRIPTOR' : _IPTEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.IpTest)
  })
_sym_db.RegisterMessage(IpTest)

AgentTest = _reflection.GeneratedProtocolMessageType('AgentTest', (_message.Message,), {
  'DESCRIPTOR' : _AGENTTEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.AgentTest)
  })
_sym_db.RegisterMessage(AgentTest)

FlowTest = _reflection.GeneratedProtocolMessageType('FlowTest', (_message.Message,), {
  'DESCRIPTOR' : _FLOWTEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.FlowTest)
  })
_sym_db.RegisterMessage(FlowTest)

DnsTest = _reflection.GeneratedProtocolMessageType('DnsTest', (_message.Message,), {
  'DESCRIPTOR' : _DNSTEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.DnsTest)
  })
_sym_db.RegisterMessage(DnsTest)

UrlTest = _reflection.GeneratedProtocolMessageType('UrlTest', (_message.Message,), {

  'HeadersEntry' : _reflection.GeneratedProtocolMessageType('HeadersEntry', (_message.Message,), {
    'DESCRIPTOR' : _URLTEST_HEADERSENTRY,
    '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
    # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.UrlTest.HeadersEntry)
    })
  ,
  'DESCRIPTOR' : _URLTEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.UrlTest)
  })
_sym_db.RegisterMessage(UrlTest)
_sym_db.RegisterMessage(UrlTest.HeadersEntry)

PageLoadTest = _reflection.GeneratedProtocolMessageType('PageLoadTest', (_message.Message,), {

  'HeadersEntry' : _reflection.GeneratedProtocolMessageType('HeadersEntry', (_message.Message,), {
    'DESCRIPTOR' : _PAGELOADTEST_HEADERSENTRY,
    '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
    # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.PageLoadTest.HeadersEntry)
    })
  ,

  'CssSelectorsEntry' : _reflection.GeneratedProtocolMessageType('CssSelectorsEntry', (_message.Message,), {
    'DESCRIPTOR' : _PAGELOADTEST_CSSSELECTORSENTRY,
    '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
    # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.PageLoadTest.CssSelectorsEntry)
    })
  ,
  'DESCRIPTOR' : _PAGELOADTEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.PageLoadTest)
  })
_sym_db.RegisterMessage(PageLoadTest)
_sym_db.RegisterMessage(PageLoadTest.HeadersEntry)
_sym_db.RegisterMessage(PageLoadTest.CssSelectorsEntry)

NetworkMeshTest = _reflection.GeneratedProtocolMessageType('NetworkMeshTest', (_message.Message,), {
  'DESCRIPTOR' : _NETWORKMESHTEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.NetworkMeshTest)
  })
_sym_db.RegisterMessage(NetworkMeshTest)

MetricData = _reflection.GeneratedProtocolMessageType('MetricData', (_message.Message,), {
  'DESCRIPTOR' : _METRICDATA,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.MetricData)
  })
_sym_db.RegisterMessage(MetricData)

PacketLossData = _reflection.GeneratedProtocolMessageType('PacketLossData', (_message.Message,), {
  'DESCRIPTOR' : _PACKETLOSSDATA,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.PacketLossData)
  })
_sym_db.RegisterMessage(PacketLossData)

PingResults = _reflection.GeneratedProtocolMessageType('PingResults', (_message.Message,), {
  'DESCRIPTOR' : _PINGRESULTS,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.PingResults)
  })
_sym_db.RegisterMessage(PingResults)

HTTPResponseData = _reflection.GeneratedProtocolMessageType('HTTPResponseData', (_message.Message,), {
  'DESCRIPTOR' : _HTTPRESPONSEDATA,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.HTTPResponseData)
  })
_sym_db.RegisterMessage(HTTPResponseData)

HTTPResults = _reflection.GeneratedProtocolMessageType('HTTPResults', (_message.Message,), {
  'DESCRIPTOR' : _HTTPRESULTS,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.HTTPResults)
  })
_sym_db.RegisterMessage(HTTPResults)

DNSResponseData = _reflection.GeneratedProtocolMessageType('DNSResponseData', (_message.Message,), {
  'DESCRIPTOR' : _DNSRESPONSEDATA,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.DNSResponseData)
  })
_sym_db.RegisterMessage(DNSResponseData)

DNSResults = _reflection.GeneratedProtocolMessageType('DNSResults', (_message.Message,), {
  'DESCRIPTOR' : _DNSRESULTS,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.DNSResults)
  })
_sym_db.RegisterMessage(DNSResults)

TaskResults = _reflection.GeneratedProtocolMessageType('TaskResults', (_message.Message,), {
  'DESCRIPTOR' : _TASKRESULTS,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.TaskResults)
  })
_sym_db.RegisterMessage(TaskResults)

AgentResults = _reflection.GeneratedProtocolMessageType('AgentResults', (_message.Message,), {
  'DESCRIPTOR' : _AGENTRESULTS,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.AgentResults)
  })
_sym_db.RegisterMessage(AgentResults)

TestResults = _reflection.GeneratedProtocolMessageType('TestResults', (_message.Message,), {
  'DESCRIPTOR' : _TESTRESULTS,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.TestResults)
  })
_sym_db.RegisterMessage(TestResults)

Stats = _reflection.GeneratedProtocolMessageType('Stats', (_message.Message,), {
  'DESCRIPTOR' : _STATS,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.Stats)
  })
_sym_db.RegisterMessage(Stats)

Location = _reflection.GeneratedProtocolMessageType('Location', (_message.Message,), {
  'DESCRIPTOR' : _LOCATION,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.Location)
  })
_sym_db.RegisterMessage(Location)

NetNode = _reflection.GeneratedProtocolMessageType('NetNode', (_message.Message,), {
  'DESCRIPTOR' : _NETNODE,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.NetNode)
  })
_sym_db.RegisterMessage(NetNode)

TraceHop = _reflection.GeneratedProtocolMessageType('TraceHop', (_message.Message,), {
  'DESCRIPTOR' : _TRACEHOP,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.TraceHop)
  })
_sym_db.RegisterMessage(TraceHop)

PathTrace = _reflection.GeneratedProtocolMessageType('PathTrace', (_message.Message,), {
  'DESCRIPTOR' : _PATHTRACE,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.PathTrace)
  })
_sym_db.RegisterMessage(PathTrace)

Path = _reflection.GeneratedProtocolMessageType('Path', (_message.Message,), {
  'DESCRIPTOR' : _PATH,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.Path)
  })
_sym_db.RegisterMessage(Path)

GetResultsForTestsRequest = _reflection.GeneratedProtocolMessageType('GetResultsForTestsRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETRESULTSFORTESTSREQUEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.GetResultsForTestsRequest)
  })
_sym_db.RegisterMessage(GetResultsForTestsRequest)

GetResultsForTestsResponse = _reflection.GeneratedProtocolMessageType('GetResultsForTestsResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETRESULTSFORTESTSRESPONSE,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.GetResultsForTestsResponse)
  })
_sym_db.RegisterMessage(GetResultsForTestsResponse)

GetTraceForTestRequest = _reflection.GeneratedProtocolMessageType('GetTraceForTestRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETTRACEFORTESTREQUEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.GetTraceForTestRequest)
  })
_sym_db.RegisterMessage(GetTraceForTestRequest)

GetTraceForTestResponse = _reflection.GeneratedProtocolMessageType('GetTraceForTestResponse', (_message.Message,), {

  'NodesEntry' : _reflection.GeneratedProtocolMessageType('NodesEntry', (_message.Message,), {
    'DESCRIPTOR' : _GETTRACEFORTESTRESPONSE_NODESENTRY,
    '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
    # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.GetTraceForTestResponse.NodesEntry)
    })
  ,
  'DESCRIPTOR' : _GETTRACEFORTESTRESPONSE,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.GetTraceForTestResponse)
  })
_sym_db.RegisterMessage(GetTraceForTestResponse)
_sym_db.RegisterMessage(GetTraceForTestResponse.NodesEntry)

ListAgentsRequest = _reflection.GeneratedProtocolMessageType('ListAgentsRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTAGENTSREQUEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.ListAgentsRequest)
  })
_sym_db.RegisterMessage(ListAgentsRequest)

ListAgentsResponse = _reflection.GeneratedProtocolMessageType('ListAgentsResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTAGENTSRESPONSE,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.ListAgentsResponse)
  })
_sym_db.RegisterMessage(ListAgentsResponse)

GetAgentRequest = _reflection.GeneratedProtocolMessageType('GetAgentRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETAGENTREQUEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.GetAgentRequest)
  })
_sym_db.RegisterMessage(GetAgentRequest)

GetAgentResponse = _reflection.GeneratedProtocolMessageType('GetAgentResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETAGENTRESPONSE,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.GetAgentResponse)
  })
_sym_db.RegisterMessage(GetAgentResponse)

UpdateAgentRequest = _reflection.GeneratedProtocolMessageType('UpdateAgentRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEAGENTREQUEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.UpdateAgentRequest)
  })
_sym_db.RegisterMessage(UpdateAgentRequest)

UpdateAgentResponse = _reflection.GeneratedProtocolMessageType('UpdateAgentResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEAGENTRESPONSE,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.UpdateAgentResponse)
  })
_sym_db.RegisterMessage(UpdateAgentResponse)

DeleteAgentRequest = _reflection.GeneratedProtocolMessageType('DeleteAgentRequest', (_message.Message,), {
  'DESCRIPTOR' : _DELETEAGENTREQUEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.DeleteAgentRequest)
  })
_sym_db.RegisterMessage(DeleteAgentRequest)

DeleteAgentResponse = _reflection.GeneratedProtocolMessageType('DeleteAgentResponse', (_message.Message,), {
  'DESCRIPTOR' : _DELETEAGENTRESPONSE,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.DeleteAgentResponse)
  })
_sym_db.RegisterMessage(DeleteAgentResponse)

ListTestsRequest = _reflection.GeneratedProtocolMessageType('ListTestsRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTSREQUEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.ListTestsRequest)
  })
_sym_db.RegisterMessage(ListTestsRequest)

ListTestsResponse = _reflection.GeneratedProtocolMessageType('ListTestsResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTSRESPONSE,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.ListTestsResponse)
  })
_sym_db.RegisterMessage(ListTestsResponse)

CreateTestRequest = _reflection.GeneratedProtocolMessageType('CreateTestRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATETESTREQUEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.CreateTestRequest)
  })
_sym_db.RegisterMessage(CreateTestRequest)

CreateTestResponse = _reflection.GeneratedProtocolMessageType('CreateTestResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATETESTRESPONSE,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.CreateTestResponse)
  })
_sym_db.RegisterMessage(CreateTestResponse)

GetTestRequest = _reflection.GeneratedProtocolMessageType('GetTestRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETTESTREQUEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.GetTestRequest)
  })
_sym_db.RegisterMessage(GetTestRequest)

GetTestResponse = _reflection.GeneratedProtocolMessageType('GetTestResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETTESTRESPONSE,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.GetTestResponse)
  })
_sym_db.RegisterMessage(GetTestResponse)

UpdateTestRequest = _reflection.GeneratedProtocolMessageType('UpdateTestRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATETESTREQUEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.UpdateTestRequest)
  })
_sym_db.RegisterMessage(UpdateTestRequest)

UpdateTestResponse = _reflection.GeneratedProtocolMessageType('UpdateTestResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATETESTRESPONSE,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.UpdateTestResponse)
  })
_sym_db.RegisterMessage(UpdateTestResponse)

DeleteTestRequest = _reflection.GeneratedProtocolMessageType('DeleteTestRequest', (_message.Message,), {
  'DESCRIPTOR' : _DELETETESTREQUEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.DeleteTestRequest)
  })
_sym_db.RegisterMessage(DeleteTestRequest)

DeleteTestResponse = _reflection.GeneratedProtocolMessageType('DeleteTestResponse', (_message.Message,), {
  'DESCRIPTOR' : _DELETETESTRESPONSE,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.DeleteTestResponse)
  })
_sym_db.RegisterMessage(DeleteTestResponse)

SetTestStatusRequest = _reflection.GeneratedProtocolMessageType('SetTestStatusRequest', (_message.Message,), {
  'DESCRIPTOR' : _SETTESTSTATUSREQUEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.SetTestStatusRequest)
  })
_sym_db.RegisterMessage(SetTestStatusRequest)

SetTestStatusResponse = _reflection.GeneratedProtocolMessageType('SetTestStatusResponse', (_message.Message,), {
  'DESCRIPTOR' : _SETTESTSTATUSRESPONSE,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.SetTestStatusResponse)
  })
_sym_db.RegisterMessage(SetTestStatusResponse)

AgentAlert = _reflection.GeneratedProtocolMessageType('AgentAlert', (_message.Message,), {
  'DESCRIPTOR' : _AGENTALERT,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.AgentAlert)
  })
_sym_db.RegisterMessage(AgentAlert)

CreateAgentAlertRequest = _reflection.GeneratedProtocolMessageType('CreateAgentAlertRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATEAGENTALERTREQUEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.CreateAgentAlertRequest)
  })
_sym_db.RegisterMessage(CreateAgentAlertRequest)

CreateAgentAlertResponse = _reflection.GeneratedProtocolMessageType('CreateAgentAlertResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATEAGENTALERTRESPONSE,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.CreateAgentAlertResponse)
  })
_sym_db.RegisterMessage(CreateAgentAlertResponse)

UpdateAgentAlertRequest = _reflection.GeneratedProtocolMessageType('UpdateAgentAlertRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEAGENTALERTREQUEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.UpdateAgentAlertRequest)
  })
_sym_db.RegisterMessage(UpdateAgentAlertRequest)

UpdateAgentAlertResponse = _reflection.GeneratedProtocolMessageType('UpdateAgentAlertResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEAGENTALERTRESPONSE,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.UpdateAgentAlertResponse)
  })
_sym_db.RegisterMessage(UpdateAgentAlertResponse)

GetAgentAlertRequest = _reflection.GeneratedProtocolMessageType('GetAgentAlertRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETAGENTALERTREQUEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.GetAgentAlertRequest)
  })
_sym_db.RegisterMessage(GetAgentAlertRequest)

GetAgentAlertResponse = _reflection.GeneratedProtocolMessageType('GetAgentAlertResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETAGENTALERTRESPONSE,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.GetAgentAlertResponse)
  })
_sym_db.RegisterMessage(GetAgentAlertResponse)

ListAgentAlertsRequest = _reflection.GeneratedProtocolMessageType('ListAgentAlertsRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTAGENTALERTSREQUEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.ListAgentAlertsRequest)
  })
_sym_db.RegisterMessage(ListAgentAlertsRequest)

ListAgentAlertsResponse = _reflection.GeneratedProtocolMessageType('ListAgentAlertsResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTAGENTALERTSRESPONSE,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.ListAgentAlertsResponse)
  })
_sym_db.RegisterMessage(ListAgentAlertsResponse)

DeleteAgentAlertRequest = _reflection.GeneratedProtocolMessageType('DeleteAgentAlertRequest', (_message.Message,), {
  'DESCRIPTOR' : _DELETEAGENTALERTREQUEST,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.DeleteAgentAlertRequest)
  })
_sym_db.RegisterMessage(DeleteAgentAlertRequest)

DeleteAgentAlertResponse = _reflection.GeneratedProtocolMessageType('DeleteAgentAlertResponse', (_message.Message,), {
  'DESCRIPTOR' : _DELETEAGENTALERTRESPONSE,
  '__module__' : 'kentik.synthetics.v202309.synthetics_pb2'
  # @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.DeleteAgentAlertResponse)
  })
_sym_db.RegisterMessage(DeleteAgentAlertResponse)


DESCRIPTOR._options = None
_AGENT.fields_by_name['id']._options = None
_AGENT.fields_by_name['site_name']._options = None
_AGENT.fields_by_name['status']._options = None
_AGENT.fields_by_name['alias']._options = None
_AGENT.fields_by_name['type']._options = None
_AGENT.fields_by_name['os']._options = None
_AGENT.fields_by_name['ip']._options = None
_AGENT.fields_by_name['lat']._options = None
_AGENT.fields_by_name['long']._options = None
_AGENT.fields_by_name['last_authed']._options = None
_AGENT.fields_by_name['family']._options = None
_AGENT.fields_by_name['asn']._options = None
_AGENT.fields_by_name['site_id']._options = None
_AGENT.fields_by_name['version']._options = None
_AGENT.fields_by_name['city']._options = None
_AGENT.fields_by_name['region']._options = None
_AGENT.fields_by_name['country']._options = None
_AGENT.fields_by_name['test_ids']._options = None
_AGENT.fields_by_name['local_ip']._options = None
_AGENT.fields_by_name['cloud_region']._options = None
_AGENT.fields_by_name['cloud_provider']._options = None
_AGENT.fields_by_name['agent_impl']._options = None
_AGENT.fields_by_name['labels']._options = None
_AGENT.fields_by_name['metadata']._options = None
_AGENTMETADATA.fields_by_name['private_ipv4_addresses']._options = None
_AGENTMETADATA.fields_by_name['public_ipv4_addresses']._options = None
_AGENTMETADATA.fields_by_name['private_ipv6_addresses']._options = None
_AGENTMETADATA.fields_by_name['public_ipv6_addresses']._options = None
_TEST.fields_by_name['id']._options = None
_TEST.fields_by_name['name']._options = None
_TEST.fields_by_name['type']._options = None
_TEST.fields_by_name['status']._options = None
_TEST.fields_by_name['settings']._options = None
_TEST.fields_by_name['cdate']._options = None
_TEST.fields_by_name['edate']._options = None
_TEST.fields_by_name['created_by']._options = None
_TEST.fields_by_name['last_updated_by']._options = None
_TEST.fields_by_name['labels']._options = None
_TESTSETTINGS.fields_by_name['agent_ids']._options = None
_TESTSETTINGS.fields_by_name['tasks']._options = None
_TESTSETTINGS.fields_by_name['health_settings']._options = None
_TESTSETTINGS.fields_by_name['ping']._options = None
_TESTSETTINGS.fields_by_name['trace']._options = None
_TESTSETTINGS.fields_by_name['period']._options = None
_TESTSETTINGS.fields_by_name['family']._options = None
_TESTSETTINGS.fields_by_name['notification_channels']._options = None
_TESTSETTINGS.fields_by_name['notes']._options = None
_TESTSETTINGS.fields_by_name['throughput']._options = None
_TESTPINGSETTINGS.fields_by_name['count']._options = None
_TESTPINGSETTINGS.fields_by_name['protocol']._options = None
_TESTPINGSETTINGS.fields_by_name['port']._options = None
_TESTPINGSETTINGS.fields_by_name['timeout']._options = None
_TESTPINGSETTINGS.fields_by_name['delay']._options = None
_TESTPINGSETTINGS.fields_by_name['dscp']._options = None
_TESTTRACESETTINGS.fields_by_name['count']._options = None
_TESTTRACESETTINGS.fields_by_name['protocol']._options = None
_TESTTRACESETTINGS.fields_by_name['port']._options = None
_TESTTRACESETTINGS.fields_by_name['timeout']._options = None
_TESTTRACESETTINGS.fields_by_name['limit']._options = None
_TESTTRACESETTINGS.fields_by_name['delay']._options = None
_TESTTRACESETTINGS.fields_by_name['dscp']._options = None
_TESTTHROUGHPUTSETTINGS.fields_by_name['port']._options = None
_TESTTHROUGHPUTSETTINGS.fields_by_name['omit']._options = None
_TESTTHROUGHPUTSETTINGS.fields_by_name['duration']._options = None
_TESTTHROUGHPUTSETTINGS.fields_by_name['bandwidth']._options = None
_TESTTHROUGHPUTSETTINGS.fields_by_name['protocol']._options = None
_ACTIVATIONSETTINGS.fields_by_name['grace_period']._options = None
_ACTIVATIONSETTINGS.fields_by_name['time_unit']._options = None
_ACTIVATIONSETTINGS.fields_by_name['time_window']._options = None
_ACTIVATIONSETTINGS.fields_by_name['times']._options = None
_HEALTHSETTINGS.fields_by_name['latency_critical']._options = None
_HEALTHSETTINGS.fields_by_name['latency_warning']._options = None
_HEALTHSETTINGS.fields_by_name['packet_loss_critical']._options = None
_HEALTHSETTINGS.fields_by_name['packet_loss_warning']._options = None
_HEALTHSETTINGS.fields_by_name['jitter_critical']._options = None
_HEALTHSETTINGS.fields_by_name['jitter_warning']._options = None
_HEALTHSETTINGS.fields_by_name['http_latency_critical']._options = None
_HEALTHSETTINGS.fields_by_name['http_latency_warning']._options = None
_HEALTHSETTINGS.fields_by_name['http_valid_codes']._options = None
_HEALTHSETTINGS.fields_by_name['dns_valid_codes']._options = None
_HEALTHSETTINGS.fields_by_name['latency_critical_stddev']._options = None
_HEALTHSETTINGS.fields_by_name['latency_warning_stddev']._options = None
_HEALTHSETTINGS.fields_by_name['jitter_critical_stddev']._options = None
_HEALTHSETTINGS.fields_by_name['jitter_warning_stddev']._options = None
_HEALTHSETTINGS.fields_by_name['http_latency_critical_stddev']._options = None
_HEALTHSETTINGS.fields_by_name['http_latency_warning_stddev']._options = None
_HEALTHSETTINGS.fields_by_name['unhealthy_subtest_threshold']._options = None
_HEALTHSETTINGS.fields_by_name['activation']._options = None
_HEALTHSETTINGS.fields_by_name['cert_expiry_warning']._options = None
_HEALTHSETTINGS.fields_by_name['cert_expiry_critical']._options = None
_HEALTHSETTINGS.fields_by_name['dns_valid_ips']._options = None
_HEALTHSETTINGS.fields_by_name['dns_latency_critical']._options = None
_HEALTHSETTINGS.fields_by_name['dns_latency_warning']._options = None
_HEALTHSETTINGS.fields_by_name['dns_latency_critical_stddev']._options = None
_HEALTHSETTINGS.fields_by_name['dns_latency_warning_stddev']._options = None
_HEALTHSETTINGS.fields_by_name['per_agent_alerting']._options = None
_HEALTHSETTINGS.fields_by_name['disabled_metrics']._options = None
_HEALTHSETTINGS.fields_by_name['health_disabled']._options = None
_HEALTHSETTINGS.fields_by_name['throughput_critical']._options = None
_HEALTHSETTINGS.fields_by_name['throughput_warning']._options = None
_HEALTHSETTINGS.fields_by_name['throughput_critical_stddev']._options = None
_HEALTHSETTINGS.fields_by_name['throughput_warning_stddev']._options = None
_HOSTNAMETEST.fields_by_name['target']._options = None
_IPTEST.fields_by_name['targets']._options = None
_IPTEST.fields_by_name['use_local_ip']._options = None
_AGENTTEST.fields_by_name['target']._options = None
_AGENTTEST.fields_by_name['use_local_ip']._options = None
_AGENTTEST.fields_by_name['reciprocal']._options = None
_FLOWTEST.fields_by_name['target']._options = None
_FLOWTEST.fields_by_name['target_refresh_interval_millis']._options = None
_FLOWTEST.fields_by_name['max_providers']._options = None
_FLOWTEST.fields_by_name['max_ip_targets']._options = None
_FLOWTEST.fields_by_name['type']._options = None
_FLOWTEST.fields_by_name['inet_direction']._options = None
_FLOWTEST.fields_by_name['direction']._options = None
_DNSTEST.fields_by_name['target']._options = None
_DNSTEST.fields_by_name['timeout']._options = None
_DNSTEST.fields_by_name['record_type']._options = None
_DNSTEST.fields_by_name['servers']._options = None
_DNSTEST.fields_by_name['port']._options = None
_URLTEST_HEADERSENTRY._options = None
_URLTEST.fields_by_name['target']._options = None
_URLTEST.fields_by_name['timeout']._options = None
_URLTEST.fields_by_name['method']._options = None
_URLTEST.fields_by_name['headers']._options = None
_URLTEST.fields_by_name['body']._options = None
_URLTEST.fields_by_name['ignore_tls_errors']._options = None
_PAGELOADTEST_HEADERSENTRY._options = None
_PAGELOADTEST_CSSSELECTORSENTRY._options = None
_PAGELOADTEST.fields_by_name['target']._options = None
_PAGELOADTEST.fields_by_name['timeout']._options = None
_PAGELOADTEST.fields_by_name['headers']._options = None
_PAGELOADTEST.fields_by_name['ignore_tls_errors']._options = None
_PAGELOADTEST.fields_by_name['css_selectors']._options = None
_NETWORKMESHTEST.fields_by_name['use_local_ip']._options = None
_METRICDATA.fields_by_name['current']._options = None
_METRICDATA.fields_by_name['rolling_avg']._options = None
_METRICDATA.fields_by_name['rolling_stddev']._options = None
_METRICDATA.fields_by_name['health']._options = None
_PACKETLOSSDATA.fields_by_name['current']._options = None
_PACKETLOSSDATA.fields_by_name['health']._options = None
_PINGRESULTS.fields_by_name['target']._options = None
_PINGRESULTS.fields_by_name['packet_loss']._options = None
_PINGRESULTS.fields_by_name['latency']._options = None
_PINGRESULTS.fields_by_name['jitter']._options = None
_PINGRESULTS.fields_by_name['dst_ip']._options = None
_HTTPRESPONSEDATA.fields_by_name['status']._options = None
_HTTPRESPONSEDATA.fields_by_name['size']._options = None
_HTTPRESPONSEDATA.fields_by_name['data']._options = None
_HTTPRESULTS.fields_by_name['target']._options = None
_HTTPRESULTS.fields_by_name['latency']._options = None
_HTTPRESULTS.fields_by_name['response']._options = None
_HTTPRESULTS.fields_by_name['dst_ip']._options = None
_DNSRESPONSEDATA.fields_by_name['status']._options = None
_DNSRESPONSEDATA.fields_by_name['data']._options = None
_DNSRESULTS.fields_by_name['target']._options = None
_DNSRESULTS.fields_by_name['server']._options = None
_DNSRESULTS.fields_by_name['latency']._options = None
_DNSRESULTS.fields_by_name['response']._options = None
_TASKRESULTS.fields_by_name['ping']._options = None
_TASKRESULTS.fields_by_name['http']._options = None
_TASKRESULTS.fields_by_name['dns']._options = None
_TASKRESULTS.fields_by_name['health']._options = None
_AGENTRESULTS.fields_by_name['agent_id']._options = None
_AGENTRESULTS.fields_by_name['health']._options = None
_AGENTRESULTS.fields_by_name['tasks']._options = None
_TESTRESULTS.fields_by_name['test_id']._options = None
_TESTRESULTS.fields_by_name['time']._options = None
_TESTRESULTS.fields_by_name['health']._options = None
_TESTRESULTS.fields_by_name['agents']._options = None
_STATS.fields_by_name['average']._options = None
_STATS.fields_by_name['min']._options = None
_STATS.fields_by_name['max']._options = None
_LOCATION.fields_by_name['latitude']._options = None
_LOCATION.fields_by_name['longitude']._options = None
_LOCATION.fields_by_name['country']._options = None
_LOCATION.fields_by_name['region']._options = None
_LOCATION.fields_by_name['city']._options = None
_NETNODE.fields_by_name['ip']._options = None
_NETNODE.fields_by_name['asn']._options = None
_NETNODE.fields_by_name['as_name']._options = None
_NETNODE.fields_by_name['location']._options = None
_NETNODE.fields_by_name['dns_name']._options = None
_NETNODE.fields_by_name['device_id']._options = None
_NETNODE.fields_by_name['site_id']._options = None
_TRACEHOP.fields_by_name['latency']._options = None
_TRACEHOP.fields_by_name['node_id']._options = None
_PATHTRACE.fields_by_name['as_path']._options = None
_PATHTRACE.fields_by_name['is_complete']._options = None
_PATHTRACE.fields_by_name['hops']._options = None
_PATH.fields_by_name['agent_id']._options = None
_PATH.fields_by_name['target_ip']._options = None
_PATH.fields_by_name['hop_count']._options = None
_PATH.fields_by_name['max_as_path_length']._options = None
_PATH.fields_by_name['traces']._options = None
_PATH.fields_by_name['time']._options = None
_GETRESULTSFORTESTSREQUEST.fields_by_name['ids']._options = None
_GETRESULTSFORTESTSREQUEST.fields_by_name['start_time']._options = None
_GETRESULTSFORTESTSREQUEST.fields_by_name['end_time']._options = None
_GETRESULTSFORTESTSREQUEST.fields_by_name['agent_ids']._options = None
_GETRESULTSFORTESTSREQUEST.fields_by_name['targets']._options = None
_GETRESULTSFORTESTSREQUEST.fields_by_name['aggregate']._options = None
_GETTRACEFORTESTREQUEST.fields_by_name['id']._options = None
_GETTRACEFORTESTREQUEST.fields_by_name['start_time']._options = None
_GETTRACEFORTESTREQUEST.fields_by_name['end_time']._options = None
_GETTRACEFORTESTREQUEST.fields_by_name['agent_ids']._options = None
_GETTRACEFORTESTREQUEST.fields_by_name['target_ips']._options = None
_GETTRACEFORTESTRESPONSE_NODESENTRY._options = None
_GETTRACEFORTESTRESPONSE.fields_by_name['nodes']._options = None
_GETTRACEFORTESTRESPONSE.fields_by_name['paths']._options = None
_LISTAGENTSRESPONSE.fields_by_name['agents']._options = None
_LISTAGENTSRESPONSE.fields_by_name['invalid_count']._options = None
_GETAGENTREQUEST.fields_by_name['id']._options = None
_GETAGENTRESPONSE.fields_by_name['agent']._options = None
_UPDATEAGENTREQUEST.fields_by_name['agent']._options = None
_UPDATEAGENTRESPONSE.fields_by_name['agent']._options = None
_DELETEAGENTREQUEST.fields_by_name['id']._options = None
_LISTTESTSRESPONSE.fields_by_name['tests']._options = None
_LISTTESTSRESPONSE.fields_by_name['invalid_count']._options = None
_CREATETESTREQUEST.fields_by_name['test']._options = None
_CREATETESTRESPONSE.fields_by_name['test']._options = None
_GETTESTREQUEST.fields_by_name['id']._options = None
_GETTESTRESPONSE.fields_by_name['test']._options = None
_UPDATETESTREQUEST.fields_by_name['test']._options = None
_UPDATETESTRESPONSE.fields_by_name['test']._options = None
_DELETETESTREQUEST.fields_by_name['id']._options = None
_SETTESTSTATUSREQUEST.fields_by_name['id']._options = None
_SETTESTSTATUSREQUEST.fields_by_name['status']._options = None

_SYNTHETICSDATASERVICE = _descriptor.ServiceDescriptor(
  name='SyntheticsDataService',
  full_name='kentik.synthetics.v202309.SyntheticsDataService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=b'\312A\023grpc.api.kentik.com\352\327\002\nsynthetics\220\330\002\003',
  create_key=_descriptor._internal_create_key,
  serialized_start=26252,
  serialized_end=26966,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetResultsForTests',
    full_name='kentik.synthetics.v202309.SyntheticsDataService.GetResultsForTests',
    index=0,
    containing_service=None,
    input_type=_GETRESULTSFORTESTSREQUEST,
    output_type=_GETRESULTSFORTESTSRESPONSE,
    serialized_options=b'\222As\022\025Get results for tests\032FReturns probe results for a set of tests for specified period of time.*\022GetResultsForTests\362\327\002\017synthetics:read\202\323\344\223\002 \"\033/synthetics/v202309/results:\001*',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetTraceForTest',
    full_name='kentik.synthetics.v202309.SyntheticsDataService.GetTraceForTest',
    index=1,
    containing_service=None,
    input_type=_GETTRACEFORTESTREQUEST,
    output_type=_GETTRACEFORTESTRESPONSE,
    serialized_options=b'\222A\232\001\022!Get network trace data for a test\032dGet network trace data for a specific synthetic test. The test must have traceroute task configured.*\017GetTraceForTest\362\327\002\017synthetics:read\202\323\344\223\002\036\"\031/synthetics/v202309/trace:\001*',
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_SYNTHETICSDATASERVICE)

DESCRIPTOR.services_by_name['SyntheticsDataService'] = _SYNTHETICSDATASERVICE


_SYNTHETICSADMINSERVICE = _descriptor.ServiceDescriptor(
  name='SyntheticsAdminService',
  full_name='kentik.synthetics.v202309.SyntheticsAdminService',
  file=DESCRIPTOR,
  index=1,
  serialized_options=b'\312A\023grpc.api.kentik.com\352\327\002\020admin.synthetics\220\330\002\003',
  create_key=_descriptor._internal_create_key,
  serialized_start=26969,
  serialized_end=31839,
  methods=[
  _descriptor.MethodDescriptor(
    name='ListAgents',
    full_name='kentik.synthetics.v202309.SyntheticsAdminService.ListAgents',
    index=0,
    containing_service=None,
    input_type=_LISTAGENTSREQUEST,
    output_type=_LISTAGENTSRESPONSE,
    serialized_options=b'\222Ac\022\025List available agents\032>Returns list of all synthetic agents available in the account.*\nListAgents\362\327\002\025admin.synthetics:read\222\330\002\026synthetics.agent::read\202\323\344\223\002\034\022\032/synthetics/v202309/agents',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetAgent',
    full_name='kentik.synthetics.v202309.SyntheticsAdminService.GetAgent',
    index=1,
    containing_service=None,
    input_type=_GETAGENTREQUEST,
    output_type=_GETAGENTRESPONSE,
    serialized_options=b'\222Ad\022\036Get information about an agent\0328Returns information about the requested synthetic agent.*\010GetAgent\362\327\002\025admin.synthetics:read\222\330\002\026synthetics.agent::read\202\323\344\223\002!\022\037/synthetics/v202309/agents/{id}',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateAgent',
    full_name='kentik.synthetics.v202309.SyntheticsAdminService.UpdateAgent',
    index=2,
    containing_service=None,
    input_type=_UPDATEAGENTREQUEST,
    output_type=_UPDATEAGENTRESPONSE,
    serialized_options=b'\222A[\022 Update configuration of an agent\032*Update configuration of a synthetic agent.*\013UpdateAgent\362\327\002\026admin.synthetics:write\222\330\002\030synthetics.agent::update\202\323\344\223\002*\032%/synthetics/v202309/agents/{agent.id}:\001*',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='DeleteAgent',
    full_name='kentik.synthetics.v202309.SyntheticsAdminService.DeleteAgent',
    index=3,
    containing_service=None,
    input_type=_DELETEAGENTREQUEST,
    output_type=_DELETEAGENTRESPONSE,
    serialized_options=b'\222Az\022\017Delete an agent\032ZDeletes the requested agent. The deleted agent is removed from configuration of all tests.*\013DeleteAgent\362\327\002\026admin.synthetics:write\222\330\002\030synthetics.agent::delete\202\323\344\223\002!*\037/synthetics/v202309/agents/{id}',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ListTests',
    full_name='kentik.synthetics.v202309.SyntheticsAdminService.ListTests',
    index=4,
    containing_service=None,
    input_type=_LISTTESTSREQUEST,
    output_type=_LISTTESTSRESPONSE,
    serialized_options=b'\222A`\022\016List all tests\032CReturns a list of all configured active and paused synthetic tests.*\tListTests\362\327\002\025admin.synthetics:read\222\330\002\025synthetics.test::read\202\323\344\223\002\033\022\031/synthetics/v202309/tests',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CreateTest',
    full_name='kentik.synthetics.v202309.SyntheticsAdminService.CreateTest',
    index=5,
    containing_service=None,
    input_type=_CREATETESTREQUEST,
    output_type=_CREATETESTRESPONSE,
    serialized_options=b'\222Ab\022\rCreate a test\032ECreate synthetic test based on configuration provided in the request.*\nCreateTest\362\327\002\026admin.synthetics:write\222\330\002\027synthetics.test::create\202\323\344\223\002\036\"\031/synthetics/v202309/tests:\001*',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetTest',
    full_name='kentik.synthetics.v202309.SyntheticsAdminService.GetTest',
    index=6,
    containing_service=None,
    input_type=_GETTESTREQUEST,
    output_type=_GETTESTRESPONSE,
    serialized_options=b'\222Ak\022\034Get information about a test\032BReturns configuration and status for the requested synthetic test.*\007GetTest\362\327\002\025admin.synthetics:read\222\330\002\025synthetics.test::read\202\323\344\223\002 \022\036/synthetics/v202309/tests/{id}',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateTest',
    full_name='kentik.synthetics.v202309.SyntheticsAdminService.UpdateTest',
    index=7,
    containing_service=None,
    input_type=_UPDATETESTREQUEST,
    output_type=_UPDATETESTRESPONSE,
    serialized_options=b'\222AX\022\036Update configuration of a test\032*Updates configuration of a synthetic test.*\nUpdateTest\362\327\002\026admin.synthetics:write\222\330\002\027synthetics.test::update\202\323\344\223\002(\032#/synthetics/v202309/tests/{test.id}:\001*',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='DeleteTest',
    full_name='kentik.synthetics.v202309.SyntheticsAdminService.DeleteTest',
    index=8,
    containing_service=None,
    input_type=_DELETETESTREQUEST,
    output_type=_DELETETESTRESPONSE,
    serialized_options=b'\222A\201\001\022\030Delete a synthetic test.\032YDeletes the synthetics test. All accumulated results for the test cease to be accessible.*\nDeleteTest\362\327\002\026admin.synthetics:write\222\330\002\027synthetics.test::delete\202\323\344\223\002 *\036/synthetics/v202309/tests/{id}',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SetTestStatus',
    full_name='kentik.synthetics.v202309.SyntheticsAdminService.SetTestStatus',
    index=9,
    containing_service=None,
    input_type=_SETTESTSTATUSREQUEST,
    output_type=_SETTESTSTATUSRESPONSE,
    serialized_options=b'\222AU\022!Update status of a synthetic test\032!Update status of a synthetic test*\rSetTestStatus\362\327\002\026admin.synthetics:write\222\330\002\027synthetics.test::update\202\323\344\223\002*\032%/synthetics/v202309/tests/{id}/status:\001*',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CreateAgentAlert',
    full_name='kentik.synthetics.v202309.SyntheticsAdminService.CreateAgentAlert',
    index=10,
    containing_service=None,
    input_type=_CREATEAGENTALERTREQUEST,
    output_type=_CREATEAGENTALERTRESPONSE,
    serialized_options=b'\222Aa\022#Create an agent alert configuration\032(Creates a new agent alert configuration.*\020CreateAgentAlert\362\327\002\026admin.synthetics:write\222\330\002\030synthetics.agent::create\202\323\344\223\002$\"\037/synthetics/v202309/agentAlerts:\001*',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='UpdateAgentAlert',
    full_name='kentik.synthetics.v202309.SyntheticsAdminService.UpdateAgentAlert',
    index=11,
    containing_service=None,
    input_type=_UPDATEAGENTALERTREQUEST,
    output_type=_UPDATEAGENTALERTRESPONSE,
    serialized_options=b'\222A\242\001\022#Update an agent alert configuration\032iUpdates an existing agent alert configuration with the time threshold and notification channels provided.*\020UpdateAgentAlert\362\327\002\026admin.synthetics:write\222\330\002\030synthetics.agent::update\202\323\344\223\002)\032$/synthetics/v202309/agentAlerts/{id}:\001*',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetAgentAlert',
    full_name='kentik.synthetics.v202309.SyntheticsAdminService.GetAgentAlert',
    index=12,
    containing_service=None,
    input_type=_GETAGENTALERTREQUEST,
    output_type=_GETAGENTALERTRESPONSE,
    serialized_options=b'\222Ac\022 Get an agent alert configuration\0320Retrieves an existing agent alert configuration.*\rGetAgentAlert\362\327\002\025admin.synthetics:read\222\330\002\026synthetics.agent::read\202\323\344\223\002&\022$/synthetics/v202309/agentAlerts/{id}',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ListAgentAlerts',
    full_name='kentik.synthetics.v202309.SyntheticsAdminService.ListAgentAlerts',
    index=13,
    containing_service=None,
    input_type=_LISTAGENTALERTSREQUEST,
    output_type=_LISTAGENTALERTSRESPONSE,
    serialized_options=b'\222A\205\001\022\037List agent alert configurations\032QLists all agent alert configurations, optionally filtered by a list of agent ids.*\017ListAgentAlerts\362\327\002\025admin.synthetics:read\222\330\002\026synthetics.agent::read\202\323\344\223\002!\022\037/synthetics/v202309/agentAlerts',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='DeleteAgentAlert',
    full_name='kentik.synthetics.v202309.SyntheticsAdminService.DeleteAgentAlert',
    index=14,
    containing_service=None,
    input_type=_DELETEAGENTALERTREQUEST,
    output_type=_DELETEAGENTALERTRESPONSE,
    serialized_options=b'\222Ag\022#Delete an agent alert configuration\032.Deletes an existing agent alert configuration.*\020DeleteAgentAlert\362\327\002\026admin.synthetics:write\222\330\002\030synthetics.agent::delete\202\323\344\223\002&*$/synthetics/v202309/agentAlerts/{id}',
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_SYNTHETICSADMINSERVICE)

DESCRIPTOR.services_by_name['SyntheticsAdminService'] = _SYNTHETICSADMINSERVICE

# @@protoc_insertion_point(module_scope)
