# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kentik/interface/v202108alpha1/interface.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.api import client_pb2 as google_dot_api_dot_client__pb2
from protoc_gen_openapiv2.options import annotations_pb2 as protoc__gen__openapiv2_dot_options_dot_annotations__pb2
from kentik.core.v202012alpha1 import annotations_pb2 as kentik_dot_core_dot_v202012alpha1_dot_annotations__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n.kentik/interface/v202108alpha1/interface.proto\x12\x1ekentik.interface.v202108alpha1\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a+kentik/core/v202012alpha1/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xe3\x03\n\tInterface\x12\n\n\x02id\x18\x01 \x01(\t\x12\x11\n\tdevice_id\x18\x02 \x01(\t\x12\x0f\n\x07snmp_id\x18\x03 \x01(\t\x12\x12\n\nsnmp_speed\x18\x04 \x01(\x05\x12\x11\n\tsnmp_type\x18\x05 \x01(\x05\x12\x12\n\nsnmp_alias\x18\x06 \x01(\t\x12\x14\n\x0cinterface_ip\x18\x07 \x01(\t\x12\x1d\n\x15interface_description\x18\x08 \x01(\t\x12)\n\x05\x63\x64\x61te\x18\t \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12)\n\x05\x65\x64\x61te\x18\n \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x1c\n\x14interface_ip_netmask\x18\x0b \x01(\t\x12K\n\x11\x63onnectivity_type\x18\x0c \x01(\x0e\x32\x30.kentik.interface.v202108alpha1.ConnectivityType\x12I\n\x10network_boundary\x18\r \x01(\x0e\x32/.kentik.interface.v202108alpha1.NetworkBoundary\x12\x18\n\x10top_nexthop_asns\x18\x0e \x03(\x05\x12\x10\n\x08provider\x18\x0f \x01(\t\"\xc5\x01\n\x17InterfaceClassification\x12\x12\n\nclassified\x18\x01 \x01(\x08\x12K\n\x11\x63onnectivity_type\x18\x02 \x01(\x0e\x32\x30.kentik.interface.v202108alpha1.ConnectivityType\x12I\n\x10network_boundary\x18\x03 \x01(\x0e\x32/.kentik.interface.v202108alpha1.NetworkBoundary\"\x91\x01\n\x0f\x43lassifyCounter\x12\r\n\x05\x63ount\x18\x01 \x01(\x05\x12\x16\n\x0e\x65xternal_count\x18\x02 \x01(\x05\x12\x16\n\x0e\x66ree_pni_count\x18\x03 \x01(\x05\x12\x10\n\x08ix_count\x18\x04 \x01(\x05\x12\x16\n\x0eprovider_count\x18\x05 \x01(\x05\x12\x15\n\rtransit_count\x18\x06 \x01(\x05\"\xa1\x06\n\x15InterfaceClassifyInfo\x12\x11\n\tdevice_id\x18\x01 \x01(\t\x12\x0f\n\x07snmp_id\x18\x02 \x01(\t\x12\x12\n\nsnmp_alias\x18\x03 \x01(\t\x12\x14\n\x0cinterface_ip\x18\x04 \x01(\t\x12\x18\n\x10interface_ip_asn\x18\x05 \x01(\t\x12\x16\n\x0eis_internal_ip\x18\x06 \x01(\x08\x12\x17\n\x0fis_internal_asn\x18\x07 \x01(\x08\x12\x18\n\x10top_nexthop_asns\x18\x08 \x03(\t\x12\x17\n\x0fpdb_global_name\x18\t \x01(\t\x12T\n\x13\x61uto_classification\x18\n \x01(\x0b\x32\x37.kentik.interface.v202108alpha1.InterfaceClassification\x12X\n\x17previous_classification\x18\x0b \x01(\x0b\x32\x37.kentik.interface.v202108alpha1.InterfaceClassification\x12\x10\n\x08provider\x18\x0c \x01(\t\x12#\n\x1bnetwork_boundary_confidence\x18\r \x01(\x05\x12$\n\x1c\x63onnectivity_type_confidence\x18\x0e \x01(\x05\x12\x1b\n\x13provider_confidence\x18\x0f \x01(\x05\x12 \n\x18\x61uto_classified_provider\x18\x10 \x01(\x08\x12&\n\x1epreviously_classified_provider\x18\x11 \x01(\t\x12&\n\x1epreviously_classified_external\x18\x12 \x01(\x08\x12\x16\n\x0eip_asn_matched\x18\x13 \x01(\x08\x12\x12\n\nix_matched\x18\x14 \x01(\x08\x12\x17\n\x0fnexthop_matched\x18\x15 \x01(\x08\x12!\n\x19\x63onnectivity_type_matched\x18\x16 \x01(\x08\x12\x18\n\x10provider_matched\x18\x17 \x01(\x08\x12\x1e\n\x16\x63hanged_classification\x18\x18 \x01(\x08\"\xfc\x03\n\x12\x44\x65viceClassifyInfo\x12\x11\n\tdevice_id\x18\x01 \x01(\t\x12\x18\n\x10total_interfaces\x18\x02 \x01(\x05\x12V\n\x1dpreviously_classified_counter\x18\x03 \x01(\x0b\x32/.kentik.interface.v202108alpha1.ClassifyCounter\x12P\n\x17\x61uto_classified_counter\x18\x04 \x01(\x0b\x32/.kentik.interface.v202108alpha1.ClassifyCounter\x12$\n\x1c\x63hanged_classification_count\x18\x0f \x01(\x05\x12\x1c\n\x14ip_asn_matched_count\x18\x10 \x01(\x05\x12\x18\n\x10ix_matched_count\x18\x11 \x01(\x05\x12\x1d\n\x15nexthop_matched_count\x18\x12 \x01(\x05\x12\'\n\x1f\x63onnectivity_type_matched_count\x18\x13 \x01(\x05\x12\x1e\n\x16provider_matched_count\x18\x14 \x01(\x05\x12I\n\ninterfaces\x18\x15 \x03(\x0b\x32\x35.kentik.interface.v202108alpha1.InterfaceClassifyInfo\"\xb2\x02\n\x0fInterfaceFilter\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\x12\n\ndevice_ids\x18\x02 \x03(\t\x12L\n\x12\x63onnectivity_types\x18\x03 \x03(\x0e\x32\x30.kentik.interface.v202108alpha1.ConnectivityType\x12K\n\x12network_boundaries\x18\x04 \x03(\x0e\x32/.kentik.interface.v202108alpha1.NetworkBoundary\x12\x11\n\tproviders\x18\x05 \x03(\t\x12\x13\n\x0bsnmp_speeds\x18\x06 \x03(\x05\x12:\n\x08ip_types\x18\x07 \x03(\x0e\x32(.kentik.interface.v202108alpha1.IpFilter\"\x15\n\x13\x41utoClassifyRequest\"\xdc\x03\n\x14\x41utoClassifyResponse\x12\x1c\n\x14perc_auto_classified\x18\x01 \x01(\x01\x12\x1b\n\x13net_changed_transit\x18\x02 \x01(\x05\x12\x16\n\x0enet_changed_ix\x18\x03 \x01(\x05\x12\x1c\n\x14net_changed_provider\x18\x04 \x01(\x05\x12*\n\"total_changed_classification_count\x18\x05 \x01(\x05\x12!\n\x19total_auto_classify_count\x18\x06 \x01(\x05\x12T\n\x1btotal_auto_classify_counter\x18\x07 \x01(\x0b\x32/.kentik.interface.v202108alpha1.ClassifyCounter\x12O\n\x16total_previous_counter\x18\x08 \x01(\x0b\x32/.kentik.interface.v202108alpha1.ClassifyCounter\x12\x18\n\x10total_interfaces\x18\x11 \x01(\x05\x12\x43\n\x07\x64\x65vices\x18\x12 \x03(\x0b\x32\x32.kentik.interface.v202108alpha1.DeviceClassifyInfo\"\xd8\x01\n\x15ManualClassifyRequest\x12\x15\n\rinterface_ids\x18\x01 \x03(\t\x12K\n\x11\x63onnectivity_type\x18\x02 \x01(\x0e\x32\x30.kentik.interface.v202108alpha1.ConnectivityType\x12I\n\x10network_boundary\x18\x03 \x01(\x0e\x32/.kentik.interface.v202108alpha1.NetworkBoundary\x12\x10\n\x08provider\x18\x04 \x01(\t\",\n\x16ManualClassifyResponse\x12\x12\n\ndevice_ids\x18\x01 \x03(\t\"X\n\x14ListInterfaceRequest\x12@\n\x07\x66ilters\x18\x01 \x01(\x0b\x32/.kentik.interface.v202108alpha1.InterfaceFilter\"\x82\x01\n\x15ListInterfaceResponse\x12=\n\ninterfaces\x18\x01 \x03(\x0b\x32).kentik.interface.v202108alpha1.Interface\x12\x13\n\x0btotal_count\x18\x02 \x01(\x05\x12\x15\n\rinvalid_count\x18\x03 \x01(\x05\"!\n\x13GetInterfaceRequest\x12\n\n\x02id\x18\x01 \x01(\t\"T\n\x14GetInterfaceResponse\x12<\n\tinterface\x18\x01 \x01(\x0b\x32).kentik.interface.v202108alpha1.Interface\"V\n\x16\x43reateInterfaceRequest\x12<\n\tinterface\x18\x01 \x01(\x0b\x32).kentik.interface.v202108alpha1.Interface\"W\n\x17\x43reateInterfaceResponse\x12<\n\tinterface\x18\x01 \x01(\x0b\x32).kentik.interface.v202108alpha1.Interface\"V\n\x16UpdateInterfaceRequest\x12<\n\tinterface\x18\x01 \x01(\x0b\x32).kentik.interface.v202108alpha1.Interface\"W\n\x17UpdateInterfaceResponse\x12<\n\tinterface\x18\x01 \x01(\x0b\x32).kentik.interface.v202108alpha1.Interface\"$\n\x16\x44\x65leteInterfaceRequest\x12\n\n\x02id\x18\x01 \x01(\t\"\x19\n\x17\x44\x65leteInterfaceResponse\"\xa3\x01\n\x05Match\x12G\n\x0fmatch_attribute\x18\x01 \x01(\x0e\x32..kentik.interface.v202108alpha1.MatchAttribute\x12@\n\x0ematch_operator\x18\x02 \x01(\x0e\x32(.kentik.interface.v202108alpha1.Operator\x12\x0f\n\x07pattern\x18\x03 \x01(\t\"\xda\x01\n\x06\x41\x63tion\x12O\n\x15set_connectivity_type\x18\x01 \x01(\x0e\x32\x30.kentik.interface.v202108alpha1.ConnectivityType\x12M\n\x14set_network_boundary\x18\x02 \x01(\x0e\x32/.kentik.interface.v202108alpha1.NetworkBoundary\x12\x1a\n\x12set_connected_asns\x18\x03 \x01(\t\x12\x14\n\x0cset_provider\x18\x04 \x01(\t\"{\n\x0c\x44\x65viceFilter\x12\x13\n\x0b\x61ll_devices\x18\x01 \x01(\x08\x12\x13\n\x0b\x64\x65vice_name\x18\x02 \x03(\t\x12\x15\n\rdevice_labels\x18\x03 \x03(\t\x12\x14\n\x0c\x64\x65vice_rules\x18\x04 \x03(\t\x12\x14\n\x0c\x64\x65vice_types\x18\x05 \x03(\t\"\x90\x03\n\x04Rule\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0f\n\x07\x65nabled\x18\x02 \x01(\x08\x12\x0c\n\x04rank\x18\x03 \x01(\x05\x12;\n\x0cmatch_clause\x18\x04 \x01(\x0b\x32%.kentik.interface.v202108alpha1.Match\x12:\n\naction_set\x18\x05 \x01(\x0b\x32&.kentik.interface.v202108alpha1.Action\x12)\n\x05\x63\x64\x61te\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12)\n\x05\x65\x64\x61te\x18\x07 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x46\n\x10included_devices\x18\x08 \x01(\x0b\x32,.kentik.interface.v202108alpha1.DeviceFilter\x12\x46\n\x10\x65xcluded_devices\x18\t \x01(\x0b\x32,.kentik.interface.v202108alpha1.DeviceFilter*\xed\x04\n\x10\x43onnectivityType\x12!\n\x1d\x43ONNECTIVITY_TYPE_UNSPECIFIED\x10\x00\x12.\n*CONNECTIVITY_TYPE_AGGREGATION_INTERCONNECT\x10\x01\x12\x1f\n\x1b\x43ONNECTIVITY_TYPE_AVAILABLE\x10\x02\x12\x1e\n\x1a\x43ONNECTIVITY_TYPE_BACKBONE\x10\x03\x12(\n$CONNECTIVITY_TYPE_CLOUD_INTERCONNECT\x10\x04\x12\x1e\n\x1a\x43ONNECTIVITY_TYPE_CUSTOMER\x10\x05\x12\'\n#CONNECTIVITY_TYPE_DATACENTER_FABRIC\x10\x06\x12-\n)CONNECTIVITY_TYPE_DATACENTER_INTERCONNECT\x10\x07\x12$\n CONNECTIVITY_TYPE_EMBEDDED_CACHE\x10\x08\x12\x1e\n\x1a\x43ONNECTIVITY_TYPE_FREE_PNI\x10\t\x12\x1a\n\x16\x43ONNECTIVITY_TYPE_HOST\x10\n\x12\x18\n\x14\x43ONNECTIVITY_TYPE_IX\x10\x0b\x12\x1b\n\x17\x43ONNECTIVITY_TYPE_OTHER\x10\x0c\x12\x1e\n\x1a\x43ONNECTIVITY_TYPE_PAID_PNI\x10\r\x12\x1e\n\x1a\x43ONNECTIVITY_TYPE_RESERVED\x10\x0e\x12\x1d\n\x19\x43ONNECTIVITY_TYPE_TRANSIT\x10\x0f\x12+\n\'CONNECTIVITY_TYPE_VIRTUAL_CROSS_CONNECT\x10\x10*\xa7\x01\n\x0fNetworkBoundary\x12 \n\x1cNETWORK_BOUNDARY_UNSPECIFIED\x10\x00\x12\x19\n\x15NETWORK_BOUNDARY_AUTO\x10\x01\x12\x1d\n\x19NETWORK_BOUNDARY_INTERNAL\x10\x02\x12\x1d\n\x19NETWORK_BOUNDARY_EXTERNAL\x10\x03\x12\x19\n\x15NETWORK_BOUNDARY_NONE\x10\x04*g\n\x08IpFilter\x12\x19\n\x15IP_FILTER_UNSPECIFIED\x10\x00\x12\x15\n\x11IP_FILTER_PRIVATE\x10\x01\x12\x14\n\x10IP_FILTER_PUBLIC\x10\x02\x12\x13\n\x0fIP_FILTER_UNSET\x10\x03*\x9e\x01\n\x0eMatchAttribute\x12\x1f\n\x1bMATCH_ATTRIBUTE_UNSPECIFIED\x10\x00\x12)\n%MATCH_ATTRIBUTE_INTERFACE_DESCRIPTION\x10\x01\x12\x1e\n\x1aMATCH_ATTRIBUTE_SNMP_ALIAS\x10\x02\x12 \n\x1cMATCH_ATTRIBUTE_INTERFACE_IP\x10\x03*\xd1\x01\n\x08Operator\x12\x18\n\x14OPERATOR_UNSPECIFIED\x10\x00\x12\x13\n\x0fOPERATOR_EQUALS\x10\x01\x12\x15\n\x11OPERATOR_CONTAINS\x10\x02\x12\x12\n\x0eOPERATOR_REGEX\x10\x03\x12 \n\x1cOPERATOR_CONTAINED_IN_SUBNET\x10\x04\x12\x19\n\x15OPERATOR_IS_PUBLIC_IP\x10\x05\x12\x1a\n\x16OPERATOR_IS_PRIVATE_IP\x10\x06\x12\x12\n\x0eOPERATOR_NO_IP\x10\x07\x32\xc1\x0e\n\x10InterfaceService\x12\xa7\x02\n\x0eManualClassify\x12\x35.kentik.interface.v202108alpha1.ManualClassifyRequest\x1a\x36.kentik.interface.v202108alpha1.ManualClassifyResponse\"\xa5\x01\xf2\xd7\x02\x15\x61\x64min.interface:write\x82\xd3\xe4\x93\x02-\"(/interface/v202108alpha1/manual_classify:\x01*\x92\x41V\x12\x19Manual Classify Interface\x1a)Manually set interface(s) classification.*\x0eManualClassify\x12\xa0\x02\n\rListInterface\x12\x34.kentik.interface.v202108alpha1.ListInterfaceRequest\x1a\x35.kentik.interface.v202108alpha1.ListInterfaceResponse\"\xa1\x01\xf2\xd7\x02\x14\x61\x64min.interface:read\x82\xd3\xe4\x93\x02%\x12#/interface/v202108alpha1/interfaces\x92\x41[\x12\x17\x46\x65tch Search Interfaces\x1a\x31Return list of interfaces matches search critera.*\rListInterface\x12\xa1\x02\n\x0cGetInterface\x12\x33.kentik.interface.v202108alpha1.GetInterfaceRequest\x1a\x34.kentik.interface.v202108alpha1.GetInterfaceResponse\"\xa5\x01\xf2\xd7\x02\x14\x61\x64min.interface:read\x82\xd3\xe4\x93\x02*\x12(/interface/v202108alpha1/interfaces/{id}\x92\x41Z\x12\x10Get a interface.\x1a\x38Returns information about a interface specified with ID.*\x0cInterfaceGet\x12\xa8\x02\n\x0f\x43reateInterface\x12\x36.kentik.interface.v202108alpha1.CreateInterfaceRequest\x1a\x37.kentik.interface.v202108alpha1.CreateInterfaceResponse\"\xa3\x01\xf2\xd7\x02\x15\x61\x64min.interface:write\x82\xd3\xe4\x93\x02(\"#/interface/v202108alpha1/interfaces:\x01*\x92\x41Y\x12\x13\x43reate a interface.\x1a\x31\x43reate a interface from request. returns created.*\x0fInterfaceCreate\x12\xc1\x02\n\x0fUpdateInterface\x12\x36.kentik.interface.v202108alpha1.UpdateInterfaceRequest\x1a\x37.kentik.interface.v202108alpha1.UpdateInterfaceResponse\"\xbc\x01\xf2\xd7\x02\x15\x61\x64min.interface:write\x82\xd3\xe4\x93\x02\x37\x1a\x32/interface/v202108alpha1/interfaces/{interface.id}:\x01*\x92\x41\x63\x12\x13Update a interface.\x1a;Replaces the entire interface attributes specified with id.*\x0fInterfaceUpdate\x12\xa1\x02\n\x0f\x44\x65leteInterface\x12\x36.kentik.interface.v202108alpha1.DeleteInterfaceRequest\x1a\x37.kentik.interface.v202108alpha1.DeleteInterfaceResponse\"\x9c\x01\xf2\xd7\x02\x15\x61\x64min.interface:write\x82\xd3\xe4\x93\x02**(/interface/v202108alpha1/interfaces/{id}\x92\x41P\x12\x13\x44\x65lete a interface.\x1a(Deletes the interface specified with id.*\x0fInterfaceDelete\x1a)\xca\x41\x13grpc.api.kentik.com\xea\xd7\x02\x0f\x61\x64min.interfaceB\xc3\x02ZHgithub.com/kentik/api-schema/gen/go/kentik/interface/v202108alpha1;iface\x92\x41\xf5\x01\x12\x37\n\rInterface API\"\x18\n\x16Kentik API Engineering2\x0c\x32\x30\x32\x31\x30\x38\x61lpha1*\x01\x02\x32\x10\x61pplication/json:\x10\x61pplication/jsonZD\n\x1e\n\x05\x65mail\x12\x15\x08\x02\x1a\x0fX-CH-Auth-Email \x02\n\"\n\x05token\x12\x19\x08\x02\x1a\x13X-CH-Auth-API-Token \x02\x62\x16\n\t\n\x05\x65mail\x12\x00\n\t\n\x05token\x12\x00r5\n\x16More about Kentik APIs\x12\x1bhttps://docs.kentik.com/apib\x06proto3')

_CONNECTIVITYTYPE = DESCRIPTOR.enum_types_by_name['ConnectivityType']
ConnectivityType = enum_type_wrapper.EnumTypeWrapper(_CONNECTIVITYTYPE)
_NETWORKBOUNDARY = DESCRIPTOR.enum_types_by_name['NetworkBoundary']
NetworkBoundary = enum_type_wrapper.EnumTypeWrapper(_NETWORKBOUNDARY)
_IPFILTER = DESCRIPTOR.enum_types_by_name['IpFilter']
IpFilter = enum_type_wrapper.EnumTypeWrapper(_IPFILTER)
_MATCHATTRIBUTE = DESCRIPTOR.enum_types_by_name['MatchAttribute']
MatchAttribute = enum_type_wrapper.EnumTypeWrapper(_MATCHATTRIBUTE)
_OPERATOR = DESCRIPTOR.enum_types_by_name['Operator']
Operator = enum_type_wrapper.EnumTypeWrapper(_OPERATOR)
CONNECTIVITY_TYPE_UNSPECIFIED = 0
CONNECTIVITY_TYPE_AGGREGATION_INTERCONNECT = 1
CONNECTIVITY_TYPE_AVAILABLE = 2
CONNECTIVITY_TYPE_BACKBONE = 3
CONNECTIVITY_TYPE_CLOUD_INTERCONNECT = 4
CONNECTIVITY_TYPE_CUSTOMER = 5
CONNECTIVITY_TYPE_DATACENTER_FABRIC = 6
CONNECTIVITY_TYPE_DATACENTER_INTERCONNECT = 7
CONNECTIVITY_TYPE_EMBEDDED_CACHE = 8
CONNECTIVITY_TYPE_FREE_PNI = 9
CONNECTIVITY_TYPE_HOST = 10
CONNECTIVITY_TYPE_IX = 11
CONNECTIVITY_TYPE_OTHER = 12
CONNECTIVITY_TYPE_PAID_PNI = 13
CONNECTIVITY_TYPE_RESERVED = 14
CONNECTIVITY_TYPE_TRANSIT = 15
CONNECTIVITY_TYPE_VIRTUAL_CROSS_CONNECT = 16
NETWORK_BOUNDARY_UNSPECIFIED = 0
NETWORK_BOUNDARY_AUTO = 1
NETWORK_BOUNDARY_INTERNAL = 2
NETWORK_BOUNDARY_EXTERNAL = 3
NETWORK_BOUNDARY_NONE = 4
IP_FILTER_UNSPECIFIED = 0
IP_FILTER_PRIVATE = 1
IP_FILTER_PUBLIC = 2
IP_FILTER_UNSET = 3
MATCH_ATTRIBUTE_UNSPECIFIED = 0
MATCH_ATTRIBUTE_INTERFACE_DESCRIPTION = 1
MATCH_ATTRIBUTE_SNMP_ALIAS = 2
MATCH_ATTRIBUTE_INTERFACE_IP = 3
OPERATOR_UNSPECIFIED = 0
OPERATOR_EQUALS = 1
OPERATOR_CONTAINS = 2
OPERATOR_REGEX = 3
OPERATOR_CONTAINED_IN_SUBNET = 4
OPERATOR_IS_PUBLIC_IP = 5
OPERATOR_IS_PRIVATE_IP = 6
OPERATOR_NO_IP = 7


_INTERFACE = DESCRIPTOR.message_types_by_name['Interface']
_INTERFACECLASSIFICATION = DESCRIPTOR.message_types_by_name['InterfaceClassification']
_CLASSIFYCOUNTER = DESCRIPTOR.message_types_by_name['ClassifyCounter']
_INTERFACECLASSIFYINFO = DESCRIPTOR.message_types_by_name['InterfaceClassifyInfo']
_DEVICECLASSIFYINFO = DESCRIPTOR.message_types_by_name['DeviceClassifyInfo']
_INTERFACEFILTER = DESCRIPTOR.message_types_by_name['InterfaceFilter']
_AUTOCLASSIFYREQUEST = DESCRIPTOR.message_types_by_name['AutoClassifyRequest']
_AUTOCLASSIFYRESPONSE = DESCRIPTOR.message_types_by_name['AutoClassifyResponse']
_MANUALCLASSIFYREQUEST = DESCRIPTOR.message_types_by_name['ManualClassifyRequest']
_MANUALCLASSIFYRESPONSE = DESCRIPTOR.message_types_by_name['ManualClassifyResponse']
_LISTINTERFACEREQUEST = DESCRIPTOR.message_types_by_name['ListInterfaceRequest']
_LISTINTERFACERESPONSE = DESCRIPTOR.message_types_by_name['ListInterfaceResponse']
_GETINTERFACEREQUEST = DESCRIPTOR.message_types_by_name['GetInterfaceRequest']
_GETINTERFACERESPONSE = DESCRIPTOR.message_types_by_name['GetInterfaceResponse']
_CREATEINTERFACEREQUEST = DESCRIPTOR.message_types_by_name['CreateInterfaceRequest']
_CREATEINTERFACERESPONSE = DESCRIPTOR.message_types_by_name['CreateInterfaceResponse']
_UPDATEINTERFACEREQUEST = DESCRIPTOR.message_types_by_name['UpdateInterfaceRequest']
_UPDATEINTERFACERESPONSE = DESCRIPTOR.message_types_by_name['UpdateInterfaceResponse']
_DELETEINTERFACEREQUEST = DESCRIPTOR.message_types_by_name['DeleteInterfaceRequest']
_DELETEINTERFACERESPONSE = DESCRIPTOR.message_types_by_name['DeleteInterfaceResponse']
_MATCH = DESCRIPTOR.message_types_by_name['Match']
_ACTION = DESCRIPTOR.message_types_by_name['Action']
_DEVICEFILTER = DESCRIPTOR.message_types_by_name['DeviceFilter']
_RULE = DESCRIPTOR.message_types_by_name['Rule']
Interface = _reflection.GeneratedProtocolMessageType('Interface', (_message.Message,), {
  'DESCRIPTOR' : _INTERFACE,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.Interface)
  })
_sym_db.RegisterMessage(Interface)

InterfaceClassification = _reflection.GeneratedProtocolMessageType('InterfaceClassification', (_message.Message,), {
  'DESCRIPTOR' : _INTERFACECLASSIFICATION,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.InterfaceClassification)
  })
_sym_db.RegisterMessage(InterfaceClassification)

ClassifyCounter = _reflection.GeneratedProtocolMessageType('ClassifyCounter', (_message.Message,), {
  'DESCRIPTOR' : _CLASSIFYCOUNTER,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.ClassifyCounter)
  })
_sym_db.RegisterMessage(ClassifyCounter)

InterfaceClassifyInfo = _reflection.GeneratedProtocolMessageType('InterfaceClassifyInfo', (_message.Message,), {
  'DESCRIPTOR' : _INTERFACECLASSIFYINFO,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.InterfaceClassifyInfo)
  })
_sym_db.RegisterMessage(InterfaceClassifyInfo)

DeviceClassifyInfo = _reflection.GeneratedProtocolMessageType('DeviceClassifyInfo', (_message.Message,), {
  'DESCRIPTOR' : _DEVICECLASSIFYINFO,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.DeviceClassifyInfo)
  })
_sym_db.RegisterMessage(DeviceClassifyInfo)

InterfaceFilter = _reflection.GeneratedProtocolMessageType('InterfaceFilter', (_message.Message,), {
  'DESCRIPTOR' : _INTERFACEFILTER,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.InterfaceFilter)
  })
_sym_db.RegisterMessage(InterfaceFilter)

AutoClassifyRequest = _reflection.GeneratedProtocolMessageType('AutoClassifyRequest', (_message.Message,), {
  'DESCRIPTOR' : _AUTOCLASSIFYREQUEST,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.AutoClassifyRequest)
  })
_sym_db.RegisterMessage(AutoClassifyRequest)

AutoClassifyResponse = _reflection.GeneratedProtocolMessageType('AutoClassifyResponse', (_message.Message,), {
  'DESCRIPTOR' : _AUTOCLASSIFYRESPONSE,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.AutoClassifyResponse)
  })
_sym_db.RegisterMessage(AutoClassifyResponse)

ManualClassifyRequest = _reflection.GeneratedProtocolMessageType('ManualClassifyRequest', (_message.Message,), {
  'DESCRIPTOR' : _MANUALCLASSIFYREQUEST,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.ManualClassifyRequest)
  })
_sym_db.RegisterMessage(ManualClassifyRequest)

ManualClassifyResponse = _reflection.GeneratedProtocolMessageType('ManualClassifyResponse', (_message.Message,), {
  'DESCRIPTOR' : _MANUALCLASSIFYRESPONSE,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.ManualClassifyResponse)
  })
_sym_db.RegisterMessage(ManualClassifyResponse)

ListInterfaceRequest = _reflection.GeneratedProtocolMessageType('ListInterfaceRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTINTERFACEREQUEST,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.ListInterfaceRequest)
  })
_sym_db.RegisterMessage(ListInterfaceRequest)

ListInterfaceResponse = _reflection.GeneratedProtocolMessageType('ListInterfaceResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTINTERFACERESPONSE,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.ListInterfaceResponse)
  })
_sym_db.RegisterMessage(ListInterfaceResponse)

GetInterfaceRequest = _reflection.GeneratedProtocolMessageType('GetInterfaceRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETINTERFACEREQUEST,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.GetInterfaceRequest)
  })
_sym_db.RegisterMessage(GetInterfaceRequest)

GetInterfaceResponse = _reflection.GeneratedProtocolMessageType('GetInterfaceResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETINTERFACERESPONSE,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.GetInterfaceResponse)
  })
_sym_db.RegisterMessage(GetInterfaceResponse)

CreateInterfaceRequest = _reflection.GeneratedProtocolMessageType('CreateInterfaceRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATEINTERFACEREQUEST,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.CreateInterfaceRequest)
  })
_sym_db.RegisterMessage(CreateInterfaceRequest)

CreateInterfaceResponse = _reflection.GeneratedProtocolMessageType('CreateInterfaceResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATEINTERFACERESPONSE,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.CreateInterfaceResponse)
  })
_sym_db.RegisterMessage(CreateInterfaceResponse)

UpdateInterfaceRequest = _reflection.GeneratedProtocolMessageType('UpdateInterfaceRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEINTERFACEREQUEST,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.UpdateInterfaceRequest)
  })
_sym_db.RegisterMessage(UpdateInterfaceRequest)

UpdateInterfaceResponse = _reflection.GeneratedProtocolMessageType('UpdateInterfaceResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEINTERFACERESPONSE,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.UpdateInterfaceResponse)
  })
_sym_db.RegisterMessage(UpdateInterfaceResponse)

DeleteInterfaceRequest = _reflection.GeneratedProtocolMessageType('DeleteInterfaceRequest', (_message.Message,), {
  'DESCRIPTOR' : _DELETEINTERFACEREQUEST,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.DeleteInterfaceRequest)
  })
_sym_db.RegisterMessage(DeleteInterfaceRequest)

DeleteInterfaceResponse = _reflection.GeneratedProtocolMessageType('DeleteInterfaceResponse', (_message.Message,), {
  'DESCRIPTOR' : _DELETEINTERFACERESPONSE,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.DeleteInterfaceResponse)
  })
_sym_db.RegisterMessage(DeleteInterfaceResponse)

Match = _reflection.GeneratedProtocolMessageType('Match', (_message.Message,), {
  'DESCRIPTOR' : _MATCH,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.Match)
  })
_sym_db.RegisterMessage(Match)

Action = _reflection.GeneratedProtocolMessageType('Action', (_message.Message,), {
  'DESCRIPTOR' : _ACTION,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.Action)
  })
_sym_db.RegisterMessage(Action)

DeviceFilter = _reflection.GeneratedProtocolMessageType('DeviceFilter', (_message.Message,), {
  'DESCRIPTOR' : _DEVICEFILTER,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.DeviceFilter)
  })
_sym_db.RegisterMessage(DeviceFilter)

Rule = _reflection.GeneratedProtocolMessageType('Rule', (_message.Message,), {
  'DESCRIPTOR' : _RULE,
  '__module__' : 'kentik.interface.v202108alpha1.interface_pb2'
  # @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.Rule)
  })
_sym_db.RegisterMessage(Rule)

_INTERFACESERVICE = DESCRIPTOR.services_by_name['InterfaceService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'ZHgithub.com/kentik/api-schema/gen/go/kentik/interface/v202108alpha1;iface\222A\365\001\0227\n\rInterface API\"\030\n\026Kentik API Engineering2\014202108alpha1*\001\0022\020application/json:\020application/jsonZD\n\036\n\005email\022\025\010\002\032\017X-CH-Auth-Email \002\n\"\n\005token\022\031\010\002\032\023X-CH-Auth-API-Token \002b\026\n\t\n\005email\022\000\n\t\n\005token\022\000r5\n\026More about Kentik APIs\022\033https://docs.kentik.com/api'
  _INTERFACESERVICE._options = None
  _INTERFACESERVICE._serialized_options = b'\312A\023grpc.api.kentik.com\352\327\002\017admin.interface'
  _INTERFACESERVICE.methods_by_name['ManualClassify']._options = None
  _INTERFACESERVICE.methods_by_name['ManualClassify']._serialized_options = b'\362\327\002\025admin.interface:write\202\323\344\223\002-\"(/interface/v202108alpha1/manual_classify:\001*\222AV\022\031Manual Classify Interface\032)Manually set interface(s) classification.*\016ManualClassify'
  _INTERFACESERVICE.methods_by_name['ListInterface']._options = None
  _INTERFACESERVICE.methods_by_name['ListInterface']._serialized_options = b'\362\327\002\024admin.interface:read\202\323\344\223\002%\022#/interface/v202108alpha1/interfaces\222A[\022\027Fetch Search Interfaces\0321Return list of interfaces matches search critera.*\rListInterface'
  _INTERFACESERVICE.methods_by_name['GetInterface']._options = None
  _INTERFACESERVICE.methods_by_name['GetInterface']._serialized_options = b'\362\327\002\024admin.interface:read\202\323\344\223\002*\022(/interface/v202108alpha1/interfaces/{id}\222AZ\022\020Get a interface.\0328Returns information about a interface specified with ID.*\014InterfaceGet'
  _INTERFACESERVICE.methods_by_name['CreateInterface']._options = None
  _INTERFACESERVICE.methods_by_name['CreateInterface']._serialized_options = b'\362\327\002\025admin.interface:write\202\323\344\223\002(\"#/interface/v202108alpha1/interfaces:\001*\222AY\022\023Create a interface.\0321Create a interface from request. returns created.*\017InterfaceCreate'
  _INTERFACESERVICE.methods_by_name['UpdateInterface']._options = None
  _INTERFACESERVICE.methods_by_name['UpdateInterface']._serialized_options = b'\362\327\002\025admin.interface:write\202\323\344\223\0027\0322/interface/v202108alpha1/interfaces/{interface.id}:\001*\222Ac\022\023Update a interface.\032;Replaces the entire interface attributes specified with id.*\017InterfaceUpdate'
  _INTERFACESERVICE.methods_by_name['DeleteInterface']._options = None
  _INTERFACESERVICE.methods_by_name['DeleteInterface']._serialized_options = b'\362\327\002\025admin.interface:write\202\323\344\223\002**(/interface/v202108alpha1/interfaces/{id}\222AP\022\023Delete a interface.\032(Deletes the interface specified with id.*\017InterfaceDelete'
  _CONNECTIVITYTYPE._serialized_start=5167
  _CONNECTIVITYTYPE._serialized_end=5788
  _NETWORKBOUNDARY._serialized_start=5791
  _NETWORKBOUNDARY._serialized_end=5958
  _IPFILTER._serialized_start=5960
  _IPFILTER._serialized_end=6063
  _MATCHATTRIBUTE._serialized_start=6066
  _MATCHATTRIBUTE._serialized_end=6224
  _OPERATOR._serialized_start=6227
  _OPERATOR._serialized_end=6436
  _INTERFACE._serialized_start=264
  _INTERFACE._serialized_end=747
  _INTERFACECLASSIFICATION._serialized_start=750
  _INTERFACECLASSIFICATION._serialized_end=947
  _CLASSIFYCOUNTER._serialized_start=950
  _CLASSIFYCOUNTER._serialized_end=1095
  _INTERFACECLASSIFYINFO._serialized_start=1098
  _INTERFACECLASSIFYINFO._serialized_end=1899
  _DEVICECLASSIFYINFO._serialized_start=1902
  _DEVICECLASSIFYINFO._serialized_end=2410
  _INTERFACEFILTER._serialized_start=2413
  _INTERFACEFILTER._serialized_end=2719
  _AUTOCLASSIFYREQUEST._serialized_start=2721
  _AUTOCLASSIFYREQUEST._serialized_end=2742
  _AUTOCLASSIFYRESPONSE._serialized_start=2745
  _AUTOCLASSIFYRESPONSE._serialized_end=3221
  _MANUALCLASSIFYREQUEST._serialized_start=3224
  _MANUALCLASSIFYREQUEST._serialized_end=3440
  _MANUALCLASSIFYRESPONSE._serialized_start=3442
  _MANUALCLASSIFYRESPONSE._serialized_end=3486
  _LISTINTERFACEREQUEST._serialized_start=3488
  _LISTINTERFACEREQUEST._serialized_end=3576
  _LISTINTERFACERESPONSE._serialized_start=3579
  _LISTINTERFACERESPONSE._serialized_end=3709
  _GETINTERFACEREQUEST._serialized_start=3711
  _GETINTERFACEREQUEST._serialized_end=3744
  _GETINTERFACERESPONSE._serialized_start=3746
  _GETINTERFACERESPONSE._serialized_end=3830
  _CREATEINTERFACEREQUEST._serialized_start=3832
  _CREATEINTERFACEREQUEST._serialized_end=3918
  _CREATEINTERFACERESPONSE._serialized_start=3920
  _CREATEINTERFACERESPONSE._serialized_end=4007
  _UPDATEINTERFACEREQUEST._serialized_start=4009
  _UPDATEINTERFACEREQUEST._serialized_end=4095
  _UPDATEINTERFACERESPONSE._serialized_start=4097
  _UPDATEINTERFACERESPONSE._serialized_end=4184
  _DELETEINTERFACEREQUEST._serialized_start=4186
  _DELETEINTERFACEREQUEST._serialized_end=4222
  _DELETEINTERFACERESPONSE._serialized_start=4224
  _DELETEINTERFACERESPONSE._serialized_end=4249
  _MATCH._serialized_start=4252
  _MATCH._serialized_end=4415
  _ACTION._serialized_start=4418
  _ACTION._serialized_end=4636
  _DEVICEFILTER._serialized_start=4638
  _DEVICEFILTER._serialized_end=4761
  _RULE._serialized_start=4764
  _RULE._serialized_end=5164
  _INTERFACESERVICE._serialized_start=6439
  _INTERFACESERVICE._serialized_end=8296
# @@protoc_insertion_point(module_scope)
