# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: kentik/diagnostic/v202501/diagnostic.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.client_pb2
import kentik.core.v202303.annotations_pb2
import kentik.diagnostic.v202501.diagnostic_pb2


class DiagnosticServiceBase(abc.ABC):

    @abc.abstractmethod
    async def Echo(self, stream: 'grpclib.server.Stream[kentik.diagnostic.v202501.diagnostic_pb2.EchoRequest, kentik.diagnostic.v202501.diagnostic_pb2.EchoResponse]') -> None:
        pass

    @abc.abstractmethod
    async def Chat(self, stream: 'grpclib.server.Stream[kentik.diagnostic.v202501.diagnostic_pb2.ChatRequest, kentik.diagnostic.v202501.diagnostic_pb2.ChatResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/kentik.diagnostic.v202501.DiagnosticService/Echo': grpclib.const.Handler(
                self.Echo,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.diagnostic.v202501.diagnostic_pb2.EchoRequest,
                kentik.diagnostic.v202501.diagnostic_pb2.EchoResponse,
            ),
            '/kentik.diagnostic.v202501.DiagnosticService/Chat': grpclib.const.Handler(
                self.Chat,
                grpclib.const.Cardinality.STREAM_STREAM,
                kentik.diagnostic.v202501.diagnostic_pb2.ChatRequest,
                kentik.diagnostic.v202501.diagnostic_pb2.ChatResponse,
            ),
        }


class DiagnosticServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Echo = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.diagnostic.v202501.DiagnosticService/Echo',
            kentik.diagnostic.v202501.diagnostic_pb2.EchoRequest,
            kentik.diagnostic.v202501.diagnostic_pb2.EchoResponse,
        )
        self.Chat = grpclib.client.StreamStreamMethod(
            channel,
            '/kentik.diagnostic.v202501.DiagnosticService/Chat',
            kentik.diagnostic.v202501.diagnostic_pb2.ChatRequest,
            kentik.diagnostic.v202501.diagnostic_pb2.ChatResponse,
        )
