# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: kentik/as_group/v202212/as_group.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.protobuf.timestamp_pb2
import protoc_gen_openapiv2.options.annotations_pb2
import kentik.core.v202012alpha1.annotations_pb2
import kentik.as_group.v202212.as_group_pb2


class ASGroupServiceBase(abc.ABC):

    @abc.abstractmethod
    async def ListASGroups(self, stream: 'grpclib.server.Stream[kentik.as_group.v202212.as_group_pb2.ListASGroupsRequest, kentik.as_group.v202212.as_group_pb2.ListASGroupsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetASGroup(self, stream: 'grpclib.server.Stream[kentik.as_group.v202212.as_group_pb2.GetASGroupRequest, kentik.as_group.v202212.as_group_pb2.GetASGroupResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CreateASGroup(self, stream: 'grpclib.server.Stream[kentik.as_group.v202212.as_group_pb2.CreateASGroupRequest, kentik.as_group.v202212.as_group_pb2.CreateASGroupResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateASGroup(self, stream: 'grpclib.server.Stream[kentik.as_group.v202212.as_group_pb2.UpdateASGroupRequest, kentik.as_group.v202212.as_group_pb2.UpdateASGroupResponse]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteASGroup(self, stream: 'grpclib.server.Stream[kentik.as_group.v202212.as_group_pb2.DeleteASGroupRequest, kentik.as_group.v202212.as_group_pb2.DeleteASGroupResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/kentik.as_group.v202212.ASGroupService/ListASGroups': grpclib.const.Handler(
                self.ListASGroups,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.as_group.v202212.as_group_pb2.ListASGroupsRequest,
                kentik.as_group.v202212.as_group_pb2.ListASGroupsResponse,
            ),
            '/kentik.as_group.v202212.ASGroupService/GetASGroup': grpclib.const.Handler(
                self.GetASGroup,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.as_group.v202212.as_group_pb2.GetASGroupRequest,
                kentik.as_group.v202212.as_group_pb2.GetASGroupResponse,
            ),
            '/kentik.as_group.v202212.ASGroupService/CreateASGroup': grpclib.const.Handler(
                self.CreateASGroup,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.as_group.v202212.as_group_pb2.CreateASGroupRequest,
                kentik.as_group.v202212.as_group_pb2.CreateASGroupResponse,
            ),
            '/kentik.as_group.v202212.ASGroupService/UpdateASGroup': grpclib.const.Handler(
                self.UpdateASGroup,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.as_group.v202212.as_group_pb2.UpdateASGroupRequest,
                kentik.as_group.v202212.as_group_pb2.UpdateASGroupResponse,
            ),
            '/kentik.as_group.v202212.ASGroupService/DeleteASGroup': grpclib.const.Handler(
                self.DeleteASGroup,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.as_group.v202212.as_group_pb2.DeleteASGroupRequest,
                kentik.as_group.v202212.as_group_pb2.DeleteASGroupResponse,
            ),
        }


class ASGroupServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ListASGroups = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.as_group.v202212.ASGroupService/ListASGroups',
            kentik.as_group.v202212.as_group_pb2.ListASGroupsRequest,
            kentik.as_group.v202212.as_group_pb2.ListASGroupsResponse,
        )
        self.GetASGroup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.as_group.v202212.ASGroupService/GetASGroup',
            kentik.as_group.v202212.as_group_pb2.GetASGroupRequest,
            kentik.as_group.v202212.as_group_pb2.GetASGroupResponse,
        )
        self.CreateASGroup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.as_group.v202212.ASGroupService/CreateASGroup',
            kentik.as_group.v202212.as_group_pb2.CreateASGroupRequest,
            kentik.as_group.v202212.as_group_pb2.CreateASGroupResponse,
        )
        self.UpdateASGroup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.as_group.v202212.ASGroupService/UpdateASGroup',
            kentik.as_group.v202212.as_group_pb2.UpdateASGroupRequest,
            kentik.as_group.v202212.as_group_pb2.UpdateASGroupResponse,
        )
        self.DeleteASGroup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.as_group.v202212.ASGroupService/DeleteASGroup',
            kentik.as_group.v202212.as_group_pb2.DeleteASGroupRequest,
            kentik.as_group.v202212.as_group_pb2.DeleteASGroupResponse,
        )
