# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: kentik/device/v202308beta1/device.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.protobuf.timestamp_pb2
import protoc_gen_openapiv2.options.annotations_pb2
import kentik.core.v202303.annotations_pb2
import kentik.device.v202308beta1.device_pb2


class DeviceServiceBase(abc.ABC):

    @abc.abstractmethod
    async def ListDevices(self, stream: 'grpclib.server.Stream[kentik.device.v202308beta1.device_pb2.ListDevicesRequest, kentik.device.v202308beta1.device_pb2.ListDevicesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetDevice(self, stream: 'grpclib.server.Stream[kentik.device.v202308beta1.device_pb2.GetDeviceRequest, kentik.device.v202308beta1.device_pb2.GetDeviceResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CreateDevice(self, stream: 'grpclib.server.Stream[kentik.device.v202308beta1.device_pb2.CreateDeviceRequest, kentik.device.v202308beta1.device_pb2.CreateDeviceResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CreateDevices(self, stream: 'grpclib.server.Stream[kentik.device.v202308beta1.device_pb2.CreateDevicesRequest, kentik.device.v202308beta1.device_pb2.CreateDevicesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateDevice(self, stream: 'grpclib.server.Stream[kentik.device.v202308beta1.device_pb2.UpdateDeviceRequest, kentik.device.v202308beta1.device_pb2.UpdateDeviceResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateDevices(self, stream: 'grpclib.server.Stream[kentik.device.v202308beta1.device_pb2.UpdateDevicesRequest, kentik.device.v202308beta1.device_pb2.UpdateDevicesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateDeviceLabels(self, stream: 'grpclib.server.Stream[kentik.device.v202308beta1.device_pb2.UpdateDeviceLabelsRequest, kentik.device.v202308beta1.device_pb2.UpdateDeviceLabelsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteDevice(self, stream: 'grpclib.server.Stream[kentik.device.v202308beta1.device_pb2.DeleteDeviceRequest, kentik.device.v202308beta1.device_pb2.DeleteDeviceResponse]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteDevices(self, stream: 'grpclib.server.Stream[kentik.device.v202308beta1.device_pb2.DeleteDevicesRequest, kentik.device.v202308beta1.device_pb2.DeleteDevicesResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/kentik.device.v202308beta1.DeviceService/ListDevices': grpclib.const.Handler(
                self.ListDevices,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.device.v202308beta1.device_pb2.ListDevicesRequest,
                kentik.device.v202308beta1.device_pb2.ListDevicesResponse,
            ),
            '/kentik.device.v202308beta1.DeviceService/GetDevice': grpclib.const.Handler(
                self.GetDevice,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.device.v202308beta1.device_pb2.GetDeviceRequest,
                kentik.device.v202308beta1.device_pb2.GetDeviceResponse,
            ),
            '/kentik.device.v202308beta1.DeviceService/CreateDevice': grpclib.const.Handler(
                self.CreateDevice,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.device.v202308beta1.device_pb2.CreateDeviceRequest,
                kentik.device.v202308beta1.device_pb2.CreateDeviceResponse,
            ),
            '/kentik.device.v202308beta1.DeviceService/CreateDevices': grpclib.const.Handler(
                self.CreateDevices,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.device.v202308beta1.device_pb2.CreateDevicesRequest,
                kentik.device.v202308beta1.device_pb2.CreateDevicesResponse,
            ),
            '/kentik.device.v202308beta1.DeviceService/UpdateDevice': grpclib.const.Handler(
                self.UpdateDevice,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.device.v202308beta1.device_pb2.UpdateDeviceRequest,
                kentik.device.v202308beta1.device_pb2.UpdateDeviceResponse,
            ),
            '/kentik.device.v202308beta1.DeviceService/UpdateDevices': grpclib.const.Handler(
                self.UpdateDevices,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.device.v202308beta1.device_pb2.UpdateDevicesRequest,
                kentik.device.v202308beta1.device_pb2.UpdateDevicesResponse,
            ),
            '/kentik.device.v202308beta1.DeviceService/UpdateDeviceLabels': grpclib.const.Handler(
                self.UpdateDeviceLabels,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.device.v202308beta1.device_pb2.UpdateDeviceLabelsRequest,
                kentik.device.v202308beta1.device_pb2.UpdateDeviceLabelsResponse,
            ),
            '/kentik.device.v202308beta1.DeviceService/DeleteDevice': grpclib.const.Handler(
                self.DeleteDevice,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.device.v202308beta1.device_pb2.DeleteDeviceRequest,
                kentik.device.v202308beta1.device_pb2.DeleteDeviceResponse,
            ),
            '/kentik.device.v202308beta1.DeviceService/DeleteDevices': grpclib.const.Handler(
                self.DeleteDevices,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.device.v202308beta1.device_pb2.DeleteDevicesRequest,
                kentik.device.v202308beta1.device_pb2.DeleteDevicesResponse,
            ),
        }


class DeviceServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ListDevices = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.device.v202308beta1.DeviceService/ListDevices',
            kentik.device.v202308beta1.device_pb2.ListDevicesRequest,
            kentik.device.v202308beta1.device_pb2.ListDevicesResponse,
        )
        self.GetDevice = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.device.v202308beta1.DeviceService/GetDevice',
            kentik.device.v202308beta1.device_pb2.GetDeviceRequest,
            kentik.device.v202308beta1.device_pb2.GetDeviceResponse,
        )
        self.CreateDevice = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.device.v202308beta1.DeviceService/CreateDevice',
            kentik.device.v202308beta1.device_pb2.CreateDeviceRequest,
            kentik.device.v202308beta1.device_pb2.CreateDeviceResponse,
        )
        self.CreateDevices = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.device.v202308beta1.DeviceService/CreateDevices',
            kentik.device.v202308beta1.device_pb2.CreateDevicesRequest,
            kentik.device.v202308beta1.device_pb2.CreateDevicesResponse,
        )
        self.UpdateDevice = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.device.v202308beta1.DeviceService/UpdateDevice',
            kentik.device.v202308beta1.device_pb2.UpdateDeviceRequest,
            kentik.device.v202308beta1.device_pb2.UpdateDeviceResponse,
        )
        self.UpdateDevices = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.device.v202308beta1.DeviceService/UpdateDevices',
            kentik.device.v202308beta1.device_pb2.UpdateDevicesRequest,
            kentik.device.v202308beta1.device_pb2.UpdateDevicesResponse,
        )
        self.UpdateDeviceLabels = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.device.v202308beta1.DeviceService/UpdateDeviceLabels',
            kentik.device.v202308beta1.device_pb2.UpdateDeviceLabelsRequest,
            kentik.device.v202308beta1.device_pb2.UpdateDeviceLabelsResponse,
        )
        self.DeleteDevice = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.device.v202308beta1.DeviceService/DeleteDevice',
            kentik.device.v202308beta1.device_pb2.DeleteDeviceRequest,
            kentik.device.v202308beta1.device_pb2.DeleteDeviceResponse,
        )
        self.DeleteDevices = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.device.v202308beta1.DeviceService/DeleteDevices',
            kentik.device.v202308beta1.device_pb2.DeleteDevicesRequest,
            kentik.device.v202308beta1.device_pb2.DeleteDevicesResponse,
        )
