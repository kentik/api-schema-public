# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: kentik/credential/v202407alpha1/credential.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.protobuf.timestamp_pb2
import protoc_gen_openapiv2.options.annotations_pb2
import kentik.core.v202303.annotations_pb2
import kentik.user.v202211.user_pb2
import kentik.vault.v202312alpha1.vault_pb2
import kentik.credential.v202407alpha1.credential_pb2


class CredentialServiceBase(abc.ABC):

    @abc.abstractmethod
    async def GetCredentialGroup(self, stream: 'grpclib.server.Stream[kentik.credential.v202407alpha1.credential_pb2.GetCredentialGroupRequest, kentik.credential.v202407alpha1.credential_pb2.GetCredentialGroupResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ListCredentialGroup(self, stream: 'grpclib.server.Stream[kentik.credential.v202407alpha1.credential_pb2.ListCredentialGroupRequest, kentik.credential.v202407alpha1.credential_pb2.ListCredentialGroupResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/kentik.credential.v202407alpha1.CredentialService/GetCredentialGroup': grpclib.const.Handler(
                self.GetCredentialGroup,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.credential.v202407alpha1.credential_pb2.GetCredentialGroupRequest,
                kentik.credential.v202407alpha1.credential_pb2.GetCredentialGroupResponse,
            ),
            '/kentik.credential.v202407alpha1.CredentialService/ListCredentialGroup': grpclib.const.Handler(
                self.ListCredentialGroup,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.credential.v202407alpha1.credential_pb2.ListCredentialGroupRequest,
                kentik.credential.v202407alpha1.credential_pb2.ListCredentialGroupResponse,
            ),
        }


class CredentialServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.GetCredentialGroup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.credential.v202407alpha1.CredentialService/GetCredentialGroup',
            kentik.credential.v202407alpha1.credential_pb2.GetCredentialGroupRequest,
            kentik.credential.v202407alpha1.credential_pb2.GetCredentialGroupResponse,
        )
        self.ListCredentialGroup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.credential.v202407alpha1.CredentialService/ListCredentialGroup',
            kentik.credential.v202407alpha1.credential_pb2.ListCredentialGroupRequest,
            kentik.credential.v202407alpha1.credential_pb2.ListCredentialGroupResponse,
        )
