# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: kentik/bgp_monitoring/v202205beta1/bgp_monitoring.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.protobuf.timestamp_pb2
import protoc_gen_openapiv2.options.annotations_pb2
import kentik.core.v202012alpha1.annotations_pb2
import kentik.ktrac.route.v202104.elem_pb2
import kentik.ktrac.route.v202104.annotations_pb2
import kentik.synthetics.v202202.synthetics_pb2
import kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2


class BgpMonitoringAdminServiceBase(abc.ABC):

    @abc.abstractmethod
    async def ListMonitors(self, stream: 'grpclib.server.Stream[kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.ListMonitorsRequest, kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.ListMonitorsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CreateMonitor(self, stream: 'grpclib.server.Stream[kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.CreateMonitorRequest, kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.CreateMonitorResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetMonitor(self, stream: 'grpclib.server.Stream[kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetMonitorRequest, kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetMonitorResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateMonitor(self, stream: 'grpclib.server.Stream[kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.UpdateMonitorRequest, kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.UpdateMonitorResponse]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteMonitor(self, stream: 'grpclib.server.Stream[kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.DeleteMonitorRequest, kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.DeleteMonitorResponse]') -> None:
        pass

    @abc.abstractmethod
    async def SetMonitorStatus(self, stream: 'grpclib.server.Stream[kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.SetMonitorStatusRequest, kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.SetMonitorStatusResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService/ListMonitors': grpclib.const.Handler(
                self.ListMonitors,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.ListMonitorsRequest,
                kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.ListMonitorsResponse,
            ),
            '/kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService/CreateMonitor': grpclib.const.Handler(
                self.CreateMonitor,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.CreateMonitorRequest,
                kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.CreateMonitorResponse,
            ),
            '/kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService/GetMonitor': grpclib.const.Handler(
                self.GetMonitor,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetMonitorRequest,
                kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetMonitorResponse,
            ),
            '/kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService/UpdateMonitor': grpclib.const.Handler(
                self.UpdateMonitor,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.UpdateMonitorRequest,
                kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.UpdateMonitorResponse,
            ),
            '/kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService/DeleteMonitor': grpclib.const.Handler(
                self.DeleteMonitor,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.DeleteMonitorRequest,
                kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.DeleteMonitorResponse,
            ),
            '/kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService/SetMonitorStatus': grpclib.const.Handler(
                self.SetMonitorStatus,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.SetMonitorStatusRequest,
                kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.SetMonitorStatusResponse,
            ),
        }


class BgpMonitoringAdminServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ListMonitors = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService/ListMonitors',
            kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.ListMonitorsRequest,
            kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.ListMonitorsResponse,
        )
        self.CreateMonitor = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService/CreateMonitor',
            kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.CreateMonitorRequest,
            kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.CreateMonitorResponse,
        )
        self.GetMonitor = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService/GetMonitor',
            kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetMonitorRequest,
            kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetMonitorResponse,
        )
        self.UpdateMonitor = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService/UpdateMonitor',
            kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.UpdateMonitorRequest,
            kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.UpdateMonitorResponse,
        )
        self.DeleteMonitor = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService/DeleteMonitor',
            kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.DeleteMonitorRequest,
            kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.DeleteMonitorResponse,
        )
        self.SetMonitorStatus = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.bgp_monitoring.v202205beta1.BgpMonitoringAdminService/SetMonitorStatus',
            kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.SetMonitorStatusRequest,
            kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.SetMonitorStatusResponse,
        )


class BgpMonitoringDataServiceBase(abc.ABC):

    @abc.abstractmethod
    async def GetEventsForMonitor(self, stream: 'grpclib.server.Stream[kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetEventsForMonitorRequest, kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetEventsForMonitorResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetMetricsForMonitor(self, stream: 'grpclib.server.Stream[kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetMetricsForMonitorRequest, kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetMetricsForMonitorResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetRoutesForMonitor(self, stream: 'grpclib.server.Stream[kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetRoutesForMonitorRequest, kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetRoutesForMonitorResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/kentik.bgp_monitoring.v202205beta1.BgpMonitoringDataService/GetEventsForMonitor': grpclib.const.Handler(
                self.GetEventsForMonitor,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetEventsForMonitorRequest,
                kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetEventsForMonitorResponse,
            ),
            '/kentik.bgp_monitoring.v202205beta1.BgpMonitoringDataService/GetMetricsForMonitor': grpclib.const.Handler(
                self.GetMetricsForMonitor,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetMetricsForMonitorRequest,
                kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetMetricsForMonitorResponse,
            ),
            '/kentik.bgp_monitoring.v202205beta1.BgpMonitoringDataService/GetRoutesForMonitor': grpclib.const.Handler(
                self.GetRoutesForMonitor,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetRoutesForMonitorRequest,
                kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetRoutesForMonitorResponse,
            ),
        }


class BgpMonitoringDataServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.GetEventsForMonitor = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.bgp_monitoring.v202205beta1.BgpMonitoringDataService/GetEventsForMonitor',
            kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetEventsForMonitorRequest,
            kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetEventsForMonitorResponse,
        )
        self.GetMetricsForMonitor = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.bgp_monitoring.v202205beta1.BgpMonitoringDataService/GetMetricsForMonitor',
            kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetMetricsForMonitorRequest,
            kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetMetricsForMonitorResponse,
        )
        self.GetRoutesForMonitor = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.bgp_monitoring.v202205beta1.BgpMonitoringDataService/GetRoutesForMonitor',
            kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetRoutesForMonitorRequest,
            kentik.bgp_monitoring.v202205beta1.bgp_monitoring_pb2.GetRoutesForMonitorResponse,
        )
