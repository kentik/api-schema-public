# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: kentik/audit/v202205beta1/audit.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.protobuf.timestamp_pb2
import protoc_gen_openapiv2.options.annotations_pb2
import kentik.core.v202012alpha1.annotations_pb2
import kentik.audit.v202205beta1.audit_pb2


class AuditServiceBase(abc.ABC):

    @abc.abstractmethod
    async def CreateAuditEvent(self, stream: 'grpclib.server.Stream[kentik.audit.v202205beta1.audit_pb2.CreateAuditEventRequest, kentik.audit.v202205beta1.audit_pb2.CreateAuditEventResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/kentik.audit.v202205beta1.AuditService/CreateAuditEvent': grpclib.const.Handler(
                self.CreateAuditEvent,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.audit.v202205beta1.audit_pb2.CreateAuditEventRequest,
                kentik.audit.v202205beta1.audit_pb2.CreateAuditEventResponse,
            ),
        }


class AuditServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.CreateAuditEvent = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.audit.v202205beta1.AuditService/CreateAuditEvent',
            kentik.audit.v202205beta1.audit_pb2.CreateAuditEventRequest,
            kentik.audit.v202205beta1.audit_pb2.CreateAuditEventResponse,
        )
