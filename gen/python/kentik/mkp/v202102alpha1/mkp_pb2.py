# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kentik/mkp/v202102alpha1/mkp.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.api import client_pb2 as google_dot_api_dot_client__pb2
from google.protobuf import field_mask_pb2 as google_dot_protobuf_dot_field__mask__pb2
from protoc_gen_openapiv2.options import annotations_pb2 as protoc__gen__openapiv2_dot_options_dot_annotations__pb2
from kentik.core.v202012alpha1 import annotations_pb2 as kentik_dot_core_dot_v202012alpha1_dot_annotations__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\"kentik/mkp/v202102alpha1/mkp.proto\x12\x18kentik.mkp.v202102alpha1\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a google/protobuf/field_mask.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a+kentik/core/v202012alpha1/annotations.proto\"\xc0\x01\n\x05\x41lert\x12\r\n\x05saved\x18\x01 \x01(\x08\x12\x11\n\tpolicy_id\x18\x02 \x01(\x04\x12\x37\n\nthresholds\x18\x03 \x03(\x0b\x32#.kentik.mkp.v202102alpha1.Threshold\x12\x16\n\x0eprimary_metric\x18\x04 \x01(\t\x12\x19\n\x11secondary_metrics\x18\x05 \x03(\t\x12\x13\n\x0bis_template\x18\x06 \x01(\x08\x12\x14\n\x0csubpolicy_id\x18\x07 \x01(\t\"\xa4\x01\n\x05\x41sset\x12\x37\n\x07reports\x18\x01 \x03(\x0b\x32&.kentik.mkp.v202102alpha1.Asset.Report\x12>\n\x0e\x64\x65\x66\x61ult_report\x18\x02 \x01(\x0b\x32&.kentik.mkp.v202102alpha1.Asset.Report\x1a\"\n\x06Report\x12\n\n\x02id\x18\x01 \x01(\x04\x12\x0c\n\x04type\x18\x02 \x01(\t\"\x8e\x03\n\tThreshold\x12\n\n\x02id\x18\x01 \x01(\x04\x12\x34\n\x08\x61\x63tivate\x18\x02 \x01(\x0b\x32\".kentik.mkp.v202102alpha1.Activate\x12\x10\n\x08severity\x18\x03 \x01(\t\x12\x37\n\nconditions\x18\x04 \x03(\x0b\x32#.kentik.mkp.v202102alpha1.Condition\x12\x39\n\x0bmitigations\x18\x05 \x03(\x0b\x32$.kentik.mkp.v202102alpha1.Mitigation\x12L\n\x15notification_channels\x18\x06 \x03(\x0b\x32-.kentik.mkp.v202102alpha1.NotificationChannel\x12\x1e\n\x16threshold_ack_required\x18\x07 \x01(\x08\x12#\n\x1b\x65nable_tenant_notifications\x18\x08 \x01(\x08\x12&\n\x1ereceive_landlord_notifications\x18\t \x01(\x08\"i\n\x08\x41\x63tivate\x12\r\n\x05times\x18\x01 \x01(\r\x12\x10\n\x08operator\x18\x02 \x01(\t\x12\x11\n\ttime_unit\x18\x03 \x01(\t\x12\x13\n\x0btime_window\x18\x04 \x01(\r\x12\x14\n\x0cgrace_period\x18\x05 \x01(\r\"t\n\tCondition\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\r\x12\x0e\n\x06metric\x18\x03 \x01(\t\x12\x10\n\x08operator\x18\x04 \x01(\t\x12\x12\n\nvalue_type\x18\x05 \x01(\t\x12\x14\n\x0cvalue_select\x18\x06 \x01(\t\"\xc2\x02\n\nMitigation\x12\n\n\x02id\x18\r \x01(\x04\x12\x0e\n\x06status\x18\x01 \x01(\t\x12\x12\n\ncompany_id\x18\x02 \x01(\x04\x12\x12\n\npairing_id\x18\x03 \x01(\x04\x12\x14\n\x0cthreshold_id\x18\x04 \x01(\x04\x12\x1d\n\x15is_method_overridable\x18\x05 \x01(\x08\x12\x1d\n\x15mitigation_apply_type\x18\x06 \x01(\t\x12\x1d\n\x15mitigation_clear_type\x18\x07 \x01(\t\x12\x1e\n\x16mitigation_apply_timer\x18\x08 \x01(\r\x12\x1e\n\x16mitigation_clear_timer\x18\t \x01(\r\x12\x1f\n\x17is_platform_overridable\x18\n \x01(\x08\x12\r\n\x05\x63\x64\x61te\x18\x0b \x01(\t\x12\r\n\x05\x65\x64\x61te\x18\x0c \x01(\t\"!\n\x13NotificationChannel\x12\n\n\x02id\x18\x01 \x01(\x04\"\xd0\x01\n\x04User\x12\n\n\x02id\x18\x01 \x01(\x04\x12\x12\n\ncompany_id\x18\x02 \x01(\x04\x12\x12\n\nuser_email\x18\x03 \x01(\t\x12\x11\n\tuser_name\x18\x04 \x01(\t\x12\x16\n\x0euser_full_name\x18\x05 \x01(\t\x12\x15\n\ruser_group_id\x18\x06 \x01(\x04\x12\x12\n\nlast_login\x18\x07 \x01(\t\x12\x1c\n\x14permission_overrides\x18\x08 \x01(\x08\x12\x0c\n\x04role\x18\t \x01(\t\x12\x12\n\nuser_level\x18\n \x01(\r\"P\n\nTenantLink\x12\n\n\x02id\x18\x01 \x01(\x04\x12\x19\n\x11pivot_template_id\x18\x02 \x01(\x04\x12\x1b\n\x13pivot_user_group_id\x18\x03 \x01(\x04\"\x96\x02\n\x07Package\x12\n\n\x02id\x18\x01 \x01(\x04\x12\x12\n\ncompany_id\x18\x02 \x01(\x04\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x04 \x01(\t\x12\x0c\n\x04icon\x18\x05 \x01(\t\x12\r\n\x05\x63olor\x18\x06 \x01(\t\x12/\n\x06\x61lerts\x18\x07 \x03(\x0b\x32\x1f.kentik.mkp.v202102alpha1.Alert\x12/\n\x06\x61ssets\x18\x08 \x01(\x0b\x32\x1f.kentik.mkp.v202102alpha1.Asset\x12\x12\n\nis_default\x18\t \x01(\x08\x12\x35\n\x07tenants\x18\n \x03(\x0b\x32$.kentik.mkp.v202102alpha1.TenantLink\"7\n\x0f\x43ustomDimension\x12\x11\n\tdimension\x18\x01 \x01(\t\x12\x11\n\tpopulator\x18\x02 \x01(\t\"u\n\x06\x44\x65vice\x12\x13\n\x0b\x61ll_devices\x18\x01 \x01(\x08\x12\x14\n\x0c\x64\x65vice_types\x18\x02 \x03(\t\x12\x15\n\rdevice_labels\x18\x03 \x03(\r\x12\x14\n\x0c\x64\x65vice_sites\x18\x04 \x03(\r\x12\x13\n\x0b\x64\x65vice_name\x18\x05 \x03(\t\"K\n\x0b\x46ilterField\x12\x14\n\x0c\x66ilter_field\x18\x01 \x01(\t\x12\x10\n\x08operator\x18\x02 \x01(\t\x12\x14\n\x0c\x66ilter_value\x18\x03 \x01(\t\"\xf1\x01\n\x06\x46ilter\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05named\x18\x02 \x01(\x08\x12\x11\n\tconnector\x18\x03 \x01(\t\x12\x0b\n\x03not\x18\x04 \x01(\x08\x12\x12\n\nauto_added\x18\x05 \x01(\t\x12\x15\n\rsaved_filters\x18\x06 \x03(\t\x12\x36\n\x07\x66ilters\x18\x07 \x03(\x0b\x32%.kentik.mkp.v202102alpha1.FilterField\x12\x37\n\rfilter_groups\x18\x08 \x03(\x0b\x32 .kentik.mkp.v202102alpha1.Filter\x12\x0e\n\x06metric\x18\t \x03(\t\"\xb8\x04\n\x06Tenant\x12\n\n\x02id\x18\x01 \x01(\x04\x12\x12\n\ncompany_id\x18\x02 \x01(\x04\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x04 \x01(\t\x12\x0c\n\x04type\x18\x05 \x01(\t\x12\x0f\n\x07\x65nabled\x18\x06 \x01(\x08\x12/\n\x06\x61lerts\x18\x07 \x03(\x0b\x32\x1f.kentik.mkp.v202102alpha1.Alert\x12/\n\x06\x61ssets\x18\x0f \x01(\x0b\x32\x1f.kentik.mkp.v202102alpha1.Asset\x12\x0b\n\x03\x61sn\x18\x08 \x01(\t\x12\x0c\n\x04\x63idr\x18\t \x01(\t\x12\x44\n\x11\x63ustom_dimensions\x18\n \x03(\x0b\x32).kentik.mkp.v202102alpha1.CustomDimension\x12\x31\n\x07\x64\x65vices\x18\x0b \x01(\x0b\x32 .kentik.mkp.v202102alpha1.Device\x12\x31\n\x07\x66ilters\x18\x0c \x01(\x0b\x32 .kentik.mkp.v202102alpha1.Filter\x12\x16\n\x0einterface_name\x18\r \x01(\t\x12\x12\n\nsnmp_alias\x18\x0e \x01(\t\x12\x33\n\x08packages\x18\x10 \x03(\x0b\x32!.kentik.mkp.v202102alpha1.Package\x12-\n\x05users\x18\x11 \x03(\x0b\x32\x1e.kentik.mkp.v202102alpha1.User\x12\x13\n\x0btemplate_id\x18\x12 \x01(\r\"\x14\n\x12ListPackageRequest\"a\n\x13ListPackageResponse\x12\x33\n\x08packages\x18\x01 \x03(\x0b\x32!.kentik.mkp.v202102alpha1.Package\x12\x15\n\rinvalid_count\x18\x02 \x01(\r\"\x1f\n\x11GetPackageRequest\x12\n\n\x02id\x18\x01 \x01(\x04\"H\n\x12GetPackageResponse\x12\x32\n\x07package\x18\x01 \x01(\x0b\x32!.kentik.mkp.v202102alpha1.Package\"J\n\x14\x43reatePackageRequest\x12\x32\n\x07package\x18\x01 \x01(\x0b\x32!.kentik.mkp.v202102alpha1.Package\"K\n\x15\x43reatePackageResponse\x12\x32\n\x07package\x18\x01 \x01(\x0b\x32!.kentik.mkp.v202102alpha1.Package\"J\n\x14UpdatePackageRequest\x12\x32\n\x07package\x18\x01 \x01(\x0b\x32!.kentik.mkp.v202102alpha1.Package\"K\n\x15UpdatePackageResponse\x12\x32\n\x07package\x18\x01 \x01(\x0b\x32!.kentik.mkp.v202102alpha1.Package\"s\n\x13PatchPackageRequest\x12\x32\n\x07package\x18\x01 \x01(\x0b\x32!.kentik.mkp.v202102alpha1.Package\x12(\n\x04mask\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.FieldMask\"J\n\x14PatchPackageResponse\x12\x32\n\x07package\x18\x01 \x01(\x0b\x32!.kentik.mkp.v202102alpha1.Package\"\"\n\x14\x44\x65letePackageRequest\x12\n\n\x02id\x18\x01 \x01(\x04\"\x17\n\x15\x44\x65letePackageResponse\"\x13\n\x11ListTenantRequest\"^\n\x12ListTenantResponse\x12\x31\n\x07tenants\x18\x01 \x03(\x0b\x32 .kentik.mkp.v202102alpha1.Tenant\x12\x15\n\rinvalid_count\x18\x02 \x01(\r\"\x1e\n\x10GetTenantRequest\x12\n\n\x02id\x18\x01 \x01(\x04\"E\n\x11GetTenantResponse\x12\x30\n\x06tenant\x18\x01 \x01(\x0b\x32 .kentik.mkp.v202102alpha1.Tenant\"G\n\x13\x43reateTenantRequest\x12\x30\n\x06tenant\x18\x01 \x01(\x0b\x32 .kentik.mkp.v202102alpha1.Tenant\"H\n\x14\x43reateTenantResponse\x12\x30\n\x06tenant\x18\x01 \x01(\x0b\x32 .kentik.mkp.v202102alpha1.Tenant\"G\n\x13UpdateTenantRequest\x12\x30\n\x06tenant\x18\x01 \x01(\x0b\x32 .kentik.mkp.v202102alpha1.Tenant\"H\n\x14UpdateTenantResponse\x12\x30\n\x06tenant\x18\x01 \x01(\x0b\x32 .kentik.mkp.v202102alpha1.Tenant\"p\n\x12PatchTenantRequest\x12\x30\n\x06tenant\x18\x01 \x01(\x0b\x32 .kentik.mkp.v202102alpha1.Tenant\x12(\n\x04mask\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.FieldMask\"G\n\x13PatchTenantResponse\x12\x30\n\x06tenant\x18\x01 \x01(\x0b\x32 .kentik.mkp.v202102alpha1.Tenant\"!\n\x13\x44\x65leteTenantRequest\x12\n\n\x02id\x18\x01 \x01(\x04\"\x16\n\x14\x44\x65leteTenantResponse2\x86\r\n\x0ePackageService\x12\xe6\x01\n\x0bListPackage\x12,.kentik.mkp.v202102alpha1.ListPackageRequest\x1a-.kentik.mkp.v202102alpha1.ListPackageResponse\"z\xf2\xd7\x02\x0e\x61\x64min.mkp:read\x82\xd3\xe4\x93\x02\x1d\x12\x1b/mkp/v202102alpha1/packages\x92\x41\x42\x12\x12List MKP packages.\x1a\x1fReturns a list of MKP packages.*\x0bPackageList\x12\x8c\x02\n\nGetPackage\x12+.kentik.mkp.v202102alpha1.GetPackageRequest\x1a,.kentik.mkp.v202102alpha1.GetPackageResponse\"\xa2\x01\xf2\xd7\x02\x0e\x61\x64min.mkp:read\x82\xd3\xe4\x93\x02\"\x12 /mkp/v202102alpha1/packages/{id}\x92\x41\x65\x12!Get information aboout a package.\x1a\x34Returns information about package specified with ID.*\nPackageGet\x12\x91\x02\n\rCreatePackage\x12..kentik.mkp.v202102alpha1.CreatePackageRequest\x1a/.kentik.mkp.v202102alpha1.CreatePackageResponse\"\x9e\x01\xf2\xd7\x02\x0f\x61\x64min.mkp:write\x82\xd3\xe4\x93\x02 \"\x1b/mkp/v202102alpha1/packages:\x01*\x92\x41\x62\x12\x1a\x43reate a package template.\x1a\x35\x43reate package from request. returns created package.*\rPackageCreate\x12\x99\x02\n\rUpdatePackage\x12..kentik.mkp.v202102alpha1.UpdatePackageRequest\x1a/.kentik.mkp.v202102alpha1.UpdatePackageResponse\"\xa6\x01\xf2\xd7\x02\x0f\x61\x64min.mkp:write\x82\xd3\xe4\x93\x02-\x1a(/mkp/v202102alpha1/packages/{package.id}:\x01*\x92\x41]\x12\x11Update a package.\x1a\x39Replaces the entire package attributes specified with id.*\rPackageUpdate\x12\xa9\x02\n\x0cPatchPackage\x12-.kentik.mkp.v202102alpha1.PatchPackageRequest\x1a..kentik.mkp.v202102alpha1.PatchPackageResponse\"\xb9\x01\xf2\xd7\x02\x0f\x61\x64min.mkp:write\x82\xd3\xe4\x93\x02-2(/mkp/v202102alpha1/packages/{package.id}:\x01*\x92\x41p\x12\x10Patch a package.\x1aNPartially Updates the attributes of package specified with id and mask fields.*\x0cPackagePatch\x12\xfb\x01\n\rDeletePackage\x12..kentik.mkp.v202102alpha1.DeletePackageRequest\x1a/.kentik.mkp.v202102alpha1.DeletePackageResponse\"\x88\x01\xf2\xd7\x02\x0f\x61\x64min.mkp:write\x82\xd3\xe4\x93\x02\"* /mkp/v202102alpha1/packages/{id}\x92\x41J\x12\x11\x44\x65lete a package.\x1a&Deletes the package specified with id.*\rPackageDelete\x1a\"\xca\x41\x12mkp.api.kentik.com\xea\xd7\x02\tadmin.mkp2\xd0\x0c\n\rTenantService\x12\xdf\x01\n\nListTenant\x12+.kentik.mkp.v202102alpha1.ListTenantRequest\x1a,.kentik.mkp.v202102alpha1.ListTenantResponse\"v\xf2\xd7\x02\x0e\x61\x64min.mkp:read\x82\xd3\xe4\x93\x02\x1c\x12\x1a/mkp/v202102alpha1/tenants\x92\x41?\x12\x11List MKP tenants.\x1a\x1eReturns a list of MKP tenants.*\nTenantList\x12\x86\x02\n\tGetTenant\x12*.kentik.mkp.v202102alpha1.GetTenantRequest\x1a+.kentik.mkp.v202102alpha1.GetTenantResponse\"\x9f\x01\xf2\xd7\x02\x0e\x61\x64min.mkp:read\x82\xd3\xe4\x93\x02!\x12\x1f/mkp/v202102alpha1/tenants/{id}\x92\x41\x63\x12 Get information aboout a tenant.\x1a\x34Returns information about package specified with ID.*\tTenantGet\x12\x80\x02\n\x0c\x43reateTenant\x12-.kentik.mkp.v202102alpha1.CreateTenantRequest\x1a..kentik.mkp.v202102alpha1.CreateTenantResponse\"\x90\x01\xf2\xd7\x02\x0f\x61\x64min.mkp:write\x82\xd3\xe4\x93\x02\x1f\"\x1a/mkp/v202102alpha1/tenants:\x01*\x92\x41U\x12\x10\x43reate a tenant.\x1a\x33\x43reate tenant from request. returns created tenant.*\x0cTenantCreate\x12\x91\x02\n\x0cUpdateTenant\x12-.kentik.mkp.v202102alpha1.UpdateTenantRequest\x1a..kentik.mkp.v202102alpha1.UpdateTenantResponse\"\xa1\x01\xf2\xd7\x02\x0f\x61\x64min.mkp:write\x82\xd3\xe4\x93\x02+\x1a&/mkp/v202102alpha1/tenants/{tenant.id}:\x01*\x92\x41Z\x12\x10Update a tenant.\x1a\x38Replaces the entire tenant attributes specified with id.*\x0cTenantUpdate\x12\xa1\x02\n\x0bPatchTenant\x12,.kentik.mkp.v202102alpha1.PatchTenantRequest\x1a-.kentik.mkp.v202102alpha1.PatchTenantResponse\"\xb4\x01\xf2\xd7\x02\x0f\x61\x64min.mkp:write\x82\xd3\xe4\x93\x02+2&/mkp/v202102alpha1/tenants/{tenant.id}:\x01*\x92\x41m\x12\x0fPatch a tenant.\x1aMPartially Updates the attributes of tenant specified with id and mask fields.*\x0bTenantPatch\x12\xf4\x01\n\x0c\x44\x65leteTenant\x12-.kentik.mkp.v202102alpha1.DeleteTenantRequest\x1a..kentik.mkp.v202102alpha1.DeleteTenantResponse\"\x84\x01\xf2\xd7\x02\x0f\x61\x64min.mkp:write\x82\xd3\xe4\x93\x02!*\x1f/mkp/v202102alpha1/tenants/{id}\x92\x41G\x12\x10\x44\x65lete a tenant.\x1a%Deletes the tenant specified with id.*\x0cTenantDelete\x1a\"\xca\x41\x12mkp.api.kentik.com\xea\xd7\x02\tadmin.mkpB\xd4\x02Z@github.com/kentik/api-schema/gen/go/kentik/mkp/v202102alpha1;mkp\x92\x41\x8e\x02\x12P\n\x07MKP API\"7\n\x16Kentik API Engineering\x12\x1dhttps://github.com/kentik/api2\x0c\x32\x30\x32\x31\x30\x32\x61lpha1*\x01\x02\x32\x10\x61pplication/json:\x10\x61pplication/jsonZD\n\x1e\n\x05\x65mail\x12\x15\x08\x02\x1a\x0fX-CH-Auth-Email \x02\n\"\n\x05token\x12\x19\x08\x02\x1a\x13X-CH-Auth-API-Token \x02\x62\x16\n\t\n\x05\x65mail\x12\x00\n\t\n\x05token\x12\x00r5\n\x16More about Kentik APIs\x12\x1bhttps://docs.kentik.com/apib\x06proto3')



_ALERT = DESCRIPTOR.message_types_by_name['Alert']
_ASSET = DESCRIPTOR.message_types_by_name['Asset']
_ASSET_REPORT = _ASSET.nested_types_by_name['Report']
_THRESHOLD = DESCRIPTOR.message_types_by_name['Threshold']
_ACTIVATE = DESCRIPTOR.message_types_by_name['Activate']
_CONDITION = DESCRIPTOR.message_types_by_name['Condition']
_MITIGATION = DESCRIPTOR.message_types_by_name['Mitigation']
_NOTIFICATIONCHANNEL = DESCRIPTOR.message_types_by_name['NotificationChannel']
_USER = DESCRIPTOR.message_types_by_name['User']
_TENANTLINK = DESCRIPTOR.message_types_by_name['TenantLink']
_PACKAGE = DESCRIPTOR.message_types_by_name['Package']
_CUSTOMDIMENSION = DESCRIPTOR.message_types_by_name['CustomDimension']
_DEVICE = DESCRIPTOR.message_types_by_name['Device']
_FILTERFIELD = DESCRIPTOR.message_types_by_name['FilterField']
_FILTER = DESCRIPTOR.message_types_by_name['Filter']
_TENANT = DESCRIPTOR.message_types_by_name['Tenant']
_LISTPACKAGEREQUEST = DESCRIPTOR.message_types_by_name['ListPackageRequest']
_LISTPACKAGERESPONSE = DESCRIPTOR.message_types_by_name['ListPackageResponse']
_GETPACKAGEREQUEST = DESCRIPTOR.message_types_by_name['GetPackageRequest']
_GETPACKAGERESPONSE = DESCRIPTOR.message_types_by_name['GetPackageResponse']
_CREATEPACKAGEREQUEST = DESCRIPTOR.message_types_by_name['CreatePackageRequest']
_CREATEPACKAGERESPONSE = DESCRIPTOR.message_types_by_name['CreatePackageResponse']
_UPDATEPACKAGEREQUEST = DESCRIPTOR.message_types_by_name['UpdatePackageRequest']
_UPDATEPACKAGERESPONSE = DESCRIPTOR.message_types_by_name['UpdatePackageResponse']
_PATCHPACKAGEREQUEST = DESCRIPTOR.message_types_by_name['PatchPackageRequest']
_PATCHPACKAGERESPONSE = DESCRIPTOR.message_types_by_name['PatchPackageResponse']
_DELETEPACKAGEREQUEST = DESCRIPTOR.message_types_by_name['DeletePackageRequest']
_DELETEPACKAGERESPONSE = DESCRIPTOR.message_types_by_name['DeletePackageResponse']
_LISTTENANTREQUEST = DESCRIPTOR.message_types_by_name['ListTenantRequest']
_LISTTENANTRESPONSE = DESCRIPTOR.message_types_by_name['ListTenantResponse']
_GETTENANTREQUEST = DESCRIPTOR.message_types_by_name['GetTenantRequest']
_GETTENANTRESPONSE = DESCRIPTOR.message_types_by_name['GetTenantResponse']
_CREATETENANTREQUEST = DESCRIPTOR.message_types_by_name['CreateTenantRequest']
_CREATETENANTRESPONSE = DESCRIPTOR.message_types_by_name['CreateTenantResponse']
_UPDATETENANTREQUEST = DESCRIPTOR.message_types_by_name['UpdateTenantRequest']
_UPDATETENANTRESPONSE = DESCRIPTOR.message_types_by_name['UpdateTenantResponse']
_PATCHTENANTREQUEST = DESCRIPTOR.message_types_by_name['PatchTenantRequest']
_PATCHTENANTRESPONSE = DESCRIPTOR.message_types_by_name['PatchTenantResponse']
_DELETETENANTREQUEST = DESCRIPTOR.message_types_by_name['DeleteTenantRequest']
_DELETETENANTRESPONSE = DESCRIPTOR.message_types_by_name['DeleteTenantResponse']
Alert = _reflection.GeneratedProtocolMessageType('Alert', (_message.Message,), {
  'DESCRIPTOR' : _ALERT,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.Alert)
  })
_sym_db.RegisterMessage(Alert)

Asset = _reflection.GeneratedProtocolMessageType('Asset', (_message.Message,), {

  'Report' : _reflection.GeneratedProtocolMessageType('Report', (_message.Message,), {
    'DESCRIPTOR' : _ASSET_REPORT,
    '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
    # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.Asset.Report)
    })
  ,
  'DESCRIPTOR' : _ASSET,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.Asset)
  })
_sym_db.RegisterMessage(Asset)
_sym_db.RegisterMessage(Asset.Report)

Threshold = _reflection.GeneratedProtocolMessageType('Threshold', (_message.Message,), {
  'DESCRIPTOR' : _THRESHOLD,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.Threshold)
  })
_sym_db.RegisterMessage(Threshold)

Activate = _reflection.GeneratedProtocolMessageType('Activate', (_message.Message,), {
  'DESCRIPTOR' : _ACTIVATE,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.Activate)
  })
_sym_db.RegisterMessage(Activate)

Condition = _reflection.GeneratedProtocolMessageType('Condition', (_message.Message,), {
  'DESCRIPTOR' : _CONDITION,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.Condition)
  })
_sym_db.RegisterMessage(Condition)

Mitigation = _reflection.GeneratedProtocolMessageType('Mitigation', (_message.Message,), {
  'DESCRIPTOR' : _MITIGATION,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.Mitigation)
  })
_sym_db.RegisterMessage(Mitigation)

NotificationChannel = _reflection.GeneratedProtocolMessageType('NotificationChannel', (_message.Message,), {
  'DESCRIPTOR' : _NOTIFICATIONCHANNEL,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.NotificationChannel)
  })
_sym_db.RegisterMessage(NotificationChannel)

User = _reflection.GeneratedProtocolMessageType('User', (_message.Message,), {
  'DESCRIPTOR' : _USER,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.User)
  })
_sym_db.RegisterMessage(User)

TenantLink = _reflection.GeneratedProtocolMessageType('TenantLink', (_message.Message,), {
  'DESCRIPTOR' : _TENANTLINK,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.TenantLink)
  })
_sym_db.RegisterMessage(TenantLink)

Package = _reflection.GeneratedProtocolMessageType('Package', (_message.Message,), {
  'DESCRIPTOR' : _PACKAGE,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.Package)
  })
_sym_db.RegisterMessage(Package)

CustomDimension = _reflection.GeneratedProtocolMessageType('CustomDimension', (_message.Message,), {
  'DESCRIPTOR' : _CUSTOMDIMENSION,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.CustomDimension)
  })
_sym_db.RegisterMessage(CustomDimension)

Device = _reflection.GeneratedProtocolMessageType('Device', (_message.Message,), {
  'DESCRIPTOR' : _DEVICE,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.Device)
  })
_sym_db.RegisterMessage(Device)

FilterField = _reflection.GeneratedProtocolMessageType('FilterField', (_message.Message,), {
  'DESCRIPTOR' : _FILTERFIELD,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.FilterField)
  })
_sym_db.RegisterMessage(FilterField)

Filter = _reflection.GeneratedProtocolMessageType('Filter', (_message.Message,), {
  'DESCRIPTOR' : _FILTER,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.Filter)
  })
_sym_db.RegisterMessage(Filter)

Tenant = _reflection.GeneratedProtocolMessageType('Tenant', (_message.Message,), {
  'DESCRIPTOR' : _TENANT,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.Tenant)
  })
_sym_db.RegisterMessage(Tenant)

ListPackageRequest = _reflection.GeneratedProtocolMessageType('ListPackageRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTPACKAGEREQUEST,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.ListPackageRequest)
  })
_sym_db.RegisterMessage(ListPackageRequest)

ListPackageResponse = _reflection.GeneratedProtocolMessageType('ListPackageResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTPACKAGERESPONSE,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.ListPackageResponse)
  })
_sym_db.RegisterMessage(ListPackageResponse)

GetPackageRequest = _reflection.GeneratedProtocolMessageType('GetPackageRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETPACKAGEREQUEST,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.GetPackageRequest)
  })
_sym_db.RegisterMessage(GetPackageRequest)

GetPackageResponse = _reflection.GeneratedProtocolMessageType('GetPackageResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETPACKAGERESPONSE,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.GetPackageResponse)
  })
_sym_db.RegisterMessage(GetPackageResponse)

CreatePackageRequest = _reflection.GeneratedProtocolMessageType('CreatePackageRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATEPACKAGEREQUEST,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.CreatePackageRequest)
  })
_sym_db.RegisterMessage(CreatePackageRequest)

CreatePackageResponse = _reflection.GeneratedProtocolMessageType('CreatePackageResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATEPACKAGERESPONSE,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.CreatePackageResponse)
  })
_sym_db.RegisterMessage(CreatePackageResponse)

UpdatePackageRequest = _reflection.GeneratedProtocolMessageType('UpdatePackageRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEPACKAGEREQUEST,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.UpdatePackageRequest)
  })
_sym_db.RegisterMessage(UpdatePackageRequest)

UpdatePackageResponse = _reflection.GeneratedProtocolMessageType('UpdatePackageResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEPACKAGERESPONSE,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.UpdatePackageResponse)
  })
_sym_db.RegisterMessage(UpdatePackageResponse)

PatchPackageRequest = _reflection.GeneratedProtocolMessageType('PatchPackageRequest', (_message.Message,), {
  'DESCRIPTOR' : _PATCHPACKAGEREQUEST,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.PatchPackageRequest)
  })
_sym_db.RegisterMessage(PatchPackageRequest)

PatchPackageResponse = _reflection.GeneratedProtocolMessageType('PatchPackageResponse', (_message.Message,), {
  'DESCRIPTOR' : _PATCHPACKAGERESPONSE,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.PatchPackageResponse)
  })
_sym_db.RegisterMessage(PatchPackageResponse)

DeletePackageRequest = _reflection.GeneratedProtocolMessageType('DeletePackageRequest', (_message.Message,), {
  'DESCRIPTOR' : _DELETEPACKAGEREQUEST,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.DeletePackageRequest)
  })
_sym_db.RegisterMessage(DeletePackageRequest)

DeletePackageResponse = _reflection.GeneratedProtocolMessageType('DeletePackageResponse', (_message.Message,), {
  'DESCRIPTOR' : _DELETEPACKAGERESPONSE,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.DeletePackageResponse)
  })
_sym_db.RegisterMessage(DeletePackageResponse)

ListTenantRequest = _reflection.GeneratedProtocolMessageType('ListTenantRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTTENANTREQUEST,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.ListTenantRequest)
  })
_sym_db.RegisterMessage(ListTenantRequest)

ListTenantResponse = _reflection.GeneratedProtocolMessageType('ListTenantResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTTENANTRESPONSE,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.ListTenantResponse)
  })
_sym_db.RegisterMessage(ListTenantResponse)

GetTenantRequest = _reflection.GeneratedProtocolMessageType('GetTenantRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETTENANTREQUEST,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.GetTenantRequest)
  })
_sym_db.RegisterMessage(GetTenantRequest)

GetTenantResponse = _reflection.GeneratedProtocolMessageType('GetTenantResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETTENANTRESPONSE,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.GetTenantResponse)
  })
_sym_db.RegisterMessage(GetTenantResponse)

CreateTenantRequest = _reflection.GeneratedProtocolMessageType('CreateTenantRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATETENANTREQUEST,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.CreateTenantRequest)
  })
_sym_db.RegisterMessage(CreateTenantRequest)

CreateTenantResponse = _reflection.GeneratedProtocolMessageType('CreateTenantResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATETENANTRESPONSE,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.CreateTenantResponse)
  })
_sym_db.RegisterMessage(CreateTenantResponse)

UpdateTenantRequest = _reflection.GeneratedProtocolMessageType('UpdateTenantRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATETENANTREQUEST,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.UpdateTenantRequest)
  })
_sym_db.RegisterMessage(UpdateTenantRequest)

UpdateTenantResponse = _reflection.GeneratedProtocolMessageType('UpdateTenantResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATETENANTRESPONSE,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.UpdateTenantResponse)
  })
_sym_db.RegisterMessage(UpdateTenantResponse)

PatchTenantRequest = _reflection.GeneratedProtocolMessageType('PatchTenantRequest', (_message.Message,), {
  'DESCRIPTOR' : _PATCHTENANTREQUEST,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.PatchTenantRequest)
  })
_sym_db.RegisterMessage(PatchTenantRequest)

PatchTenantResponse = _reflection.GeneratedProtocolMessageType('PatchTenantResponse', (_message.Message,), {
  'DESCRIPTOR' : _PATCHTENANTRESPONSE,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.PatchTenantResponse)
  })
_sym_db.RegisterMessage(PatchTenantResponse)

DeleteTenantRequest = _reflection.GeneratedProtocolMessageType('DeleteTenantRequest', (_message.Message,), {
  'DESCRIPTOR' : _DELETETENANTREQUEST,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.DeleteTenantRequest)
  })
_sym_db.RegisterMessage(DeleteTenantRequest)

DeleteTenantResponse = _reflection.GeneratedProtocolMessageType('DeleteTenantResponse', (_message.Message,), {
  'DESCRIPTOR' : _DELETETENANTRESPONSE,
  '__module__' : 'kentik.mkp.v202102alpha1.mkp_pb2'
  # @@protoc_insertion_point(class_scope:kentik.mkp.v202102alpha1.DeleteTenantResponse)
  })
_sym_db.RegisterMessage(DeleteTenantResponse)

_PACKAGESERVICE = DESCRIPTOR.services_by_name['PackageService']
_TENANTSERVICE = DESCRIPTOR.services_by_name['TenantService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z@github.com/kentik/api-schema/gen/go/kentik/mkp/v202102alpha1;mkp\222A\216\002\022P\n\007MKP API\"7\n\026Kentik API Engineering\022\035https://github.com/kentik/api2\014202102alpha1*\001\0022\020application/json:\020application/jsonZD\n\036\n\005email\022\025\010\002\032\017X-CH-Auth-Email \002\n\"\n\005token\022\031\010\002\032\023X-CH-Auth-API-Token \002b\026\n\t\n\005email\022\000\n\t\n\005token\022\000r5\n\026More about Kentik APIs\022\033https://docs.kentik.com/api'
  _PACKAGESERVICE._options = None
  _PACKAGESERVICE._serialized_options = b'\312A\022mkp.api.kentik.com\352\327\002\tadmin.mkp'
  _PACKAGESERVICE.methods_by_name['ListPackage']._options = None
  _PACKAGESERVICE.methods_by_name['ListPackage']._serialized_options = b'\362\327\002\016admin.mkp:read\202\323\344\223\002\035\022\033/mkp/v202102alpha1/packages\222AB\022\022List MKP packages.\032\037Returns a list of MKP packages.*\013PackageList'
  _PACKAGESERVICE.methods_by_name['GetPackage']._options = None
  _PACKAGESERVICE.methods_by_name['GetPackage']._serialized_options = b'\362\327\002\016admin.mkp:read\202\323\344\223\002\"\022 /mkp/v202102alpha1/packages/{id}\222Ae\022!Get information aboout a package.\0324Returns information about package specified with ID.*\nPackageGet'
  _PACKAGESERVICE.methods_by_name['CreatePackage']._options = None
  _PACKAGESERVICE.methods_by_name['CreatePackage']._serialized_options = b'\362\327\002\017admin.mkp:write\202\323\344\223\002 \"\033/mkp/v202102alpha1/packages:\001*\222Ab\022\032Create a package template.\0325Create package from request. returns created package.*\rPackageCreate'
  _PACKAGESERVICE.methods_by_name['UpdatePackage']._options = None
  _PACKAGESERVICE.methods_by_name['UpdatePackage']._serialized_options = b'\362\327\002\017admin.mkp:write\202\323\344\223\002-\032(/mkp/v202102alpha1/packages/{package.id}:\001*\222A]\022\021Update a package.\0329Replaces the entire package attributes specified with id.*\rPackageUpdate'
  _PACKAGESERVICE.methods_by_name['PatchPackage']._options = None
  _PACKAGESERVICE.methods_by_name['PatchPackage']._serialized_options = b'\362\327\002\017admin.mkp:write\202\323\344\223\002-2(/mkp/v202102alpha1/packages/{package.id}:\001*\222Ap\022\020Patch a package.\032NPartially Updates the attributes of package specified with id and mask fields.*\014PackagePatch'
  _PACKAGESERVICE.methods_by_name['DeletePackage']._options = None
  _PACKAGESERVICE.methods_by_name['DeletePackage']._serialized_options = b'\362\327\002\017admin.mkp:write\202\323\344\223\002\"* /mkp/v202102alpha1/packages/{id}\222AJ\022\021Delete a package.\032&Deletes the package specified with id.*\rPackageDelete'
  _TENANTSERVICE._options = None
  _TENANTSERVICE._serialized_options = b'\312A\022mkp.api.kentik.com\352\327\002\tadmin.mkp'
  _TENANTSERVICE.methods_by_name['ListTenant']._options = None
  _TENANTSERVICE.methods_by_name['ListTenant']._serialized_options = b'\362\327\002\016admin.mkp:read\202\323\344\223\002\034\022\032/mkp/v202102alpha1/tenants\222A?\022\021List MKP tenants.\032\036Returns a list of MKP tenants.*\nTenantList'
  _TENANTSERVICE.methods_by_name['GetTenant']._options = None
  _TENANTSERVICE.methods_by_name['GetTenant']._serialized_options = b'\362\327\002\016admin.mkp:read\202\323\344\223\002!\022\037/mkp/v202102alpha1/tenants/{id}\222Ac\022 Get information aboout a tenant.\0324Returns information about package specified with ID.*\tTenantGet'
  _TENANTSERVICE.methods_by_name['CreateTenant']._options = None
  _TENANTSERVICE.methods_by_name['CreateTenant']._serialized_options = b'\362\327\002\017admin.mkp:write\202\323\344\223\002\037\"\032/mkp/v202102alpha1/tenants:\001*\222AU\022\020Create a tenant.\0323Create tenant from request. returns created tenant.*\014TenantCreate'
  _TENANTSERVICE.methods_by_name['UpdateTenant']._options = None
  _TENANTSERVICE.methods_by_name['UpdateTenant']._serialized_options = b'\362\327\002\017admin.mkp:write\202\323\344\223\002+\032&/mkp/v202102alpha1/tenants/{tenant.id}:\001*\222AZ\022\020Update a tenant.\0328Replaces the entire tenant attributes specified with id.*\014TenantUpdate'
  _TENANTSERVICE.methods_by_name['PatchTenant']._options = None
  _TENANTSERVICE.methods_by_name['PatchTenant']._serialized_options = b'\362\327\002\017admin.mkp:write\202\323\344\223\002+2&/mkp/v202102alpha1/tenants/{tenant.id}:\001*\222Am\022\017Patch a tenant.\032MPartially Updates the attributes of tenant specified with id and mask fields.*\013TenantPatch'
  _TENANTSERVICE.methods_by_name['DeleteTenant']._options = None
  _TENANTSERVICE.methods_by_name['DeleteTenant']._serialized_options = b'\362\327\002\017admin.mkp:write\202\323\344\223\002!*\037/mkp/v202102alpha1/tenants/{id}\222AG\022\020Delete a tenant.\032%Deletes the tenant specified with id.*\014TenantDelete'
  _ALERT._serialized_start=247
  _ALERT._serialized_end=439
  _ASSET._serialized_start=442
  _ASSET._serialized_end=606
  _ASSET_REPORT._serialized_start=572
  _ASSET_REPORT._serialized_end=606
  _THRESHOLD._serialized_start=609
  _THRESHOLD._serialized_end=1007
  _ACTIVATE._serialized_start=1009
  _ACTIVATE._serialized_end=1114
  _CONDITION._serialized_start=1116
  _CONDITION._serialized_end=1232
  _MITIGATION._serialized_start=1235
  _MITIGATION._serialized_end=1557
  _NOTIFICATIONCHANNEL._serialized_start=1559
  _NOTIFICATIONCHANNEL._serialized_end=1592
  _USER._serialized_start=1595
  _USER._serialized_end=1803
  _TENANTLINK._serialized_start=1805
  _TENANTLINK._serialized_end=1885
  _PACKAGE._serialized_start=1888
  _PACKAGE._serialized_end=2166
  _CUSTOMDIMENSION._serialized_start=2168
  _CUSTOMDIMENSION._serialized_end=2223
  _DEVICE._serialized_start=2225
  _DEVICE._serialized_end=2342
  _FILTERFIELD._serialized_start=2344
  _FILTERFIELD._serialized_end=2419
  _FILTER._serialized_start=2422
  _FILTER._serialized_end=2663
  _TENANT._serialized_start=2666
  _TENANT._serialized_end=3234
  _LISTPACKAGEREQUEST._serialized_start=3236
  _LISTPACKAGEREQUEST._serialized_end=3256
  _LISTPACKAGERESPONSE._serialized_start=3258
  _LISTPACKAGERESPONSE._serialized_end=3355
  _GETPACKAGEREQUEST._serialized_start=3357
  _GETPACKAGEREQUEST._serialized_end=3388
  _GETPACKAGERESPONSE._serialized_start=3390
  _GETPACKAGERESPONSE._serialized_end=3462
  _CREATEPACKAGEREQUEST._serialized_start=3464
  _CREATEPACKAGEREQUEST._serialized_end=3538
  _CREATEPACKAGERESPONSE._serialized_start=3540
  _CREATEPACKAGERESPONSE._serialized_end=3615
  _UPDATEPACKAGEREQUEST._serialized_start=3617
  _UPDATEPACKAGEREQUEST._serialized_end=3691
  _UPDATEPACKAGERESPONSE._serialized_start=3693
  _UPDATEPACKAGERESPONSE._serialized_end=3768
  _PATCHPACKAGEREQUEST._serialized_start=3770
  _PATCHPACKAGEREQUEST._serialized_end=3885
  _PATCHPACKAGERESPONSE._serialized_start=3887
  _PATCHPACKAGERESPONSE._serialized_end=3961
  _DELETEPACKAGEREQUEST._serialized_start=3963
  _DELETEPACKAGEREQUEST._serialized_end=3997
  _DELETEPACKAGERESPONSE._serialized_start=3999
  _DELETEPACKAGERESPONSE._serialized_end=4022
  _LISTTENANTREQUEST._serialized_start=4024
  _LISTTENANTREQUEST._serialized_end=4043
  _LISTTENANTRESPONSE._serialized_start=4045
  _LISTTENANTRESPONSE._serialized_end=4139
  _GETTENANTREQUEST._serialized_start=4141
  _GETTENANTREQUEST._serialized_end=4171
  _GETTENANTRESPONSE._serialized_start=4173
  _GETTENANTRESPONSE._serialized_end=4242
  _CREATETENANTREQUEST._serialized_start=4244
  _CREATETENANTREQUEST._serialized_end=4315
  _CREATETENANTRESPONSE._serialized_start=4317
  _CREATETENANTRESPONSE._serialized_end=4389
  _UPDATETENANTREQUEST._serialized_start=4391
  _UPDATETENANTREQUEST._serialized_end=4462
  _UPDATETENANTRESPONSE._serialized_start=4464
  _UPDATETENANTRESPONSE._serialized_end=4536
  _PATCHTENANTREQUEST._serialized_start=4538
  _PATCHTENANTREQUEST._serialized_end=4650
  _PATCHTENANTRESPONSE._serialized_start=4652
  _PATCHTENANTRESPONSE._serialized_end=4723
  _DELETETENANTREQUEST._serialized_start=4725
  _DELETETENANTREQUEST._serialized_end=4758
  _DELETETENANTRESPONSE._serialized_start=4760
  _DELETETENANTRESPONSE._serialized_end=4782
  _PACKAGESERVICE._serialized_start=4785
  _PACKAGESERVICE._serialized_end=6455
  _TENANTSERVICE._serialized_start=6458
  _TENANTSERVICE._serialized_end=8074
# @@protoc_insertion_point(module_scope)
