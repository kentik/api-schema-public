# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: kentik/plan/v202501alpha1/plan.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import protoc_gen_openapiv2.options.annotations_pb2
import kentik.core.v202303.annotations_pb2
import kentik.plan.v202501alpha1.plan_message_pb2
import kentik.plan.v202501alpha1.plan_pb2


class PlanServiceBase(abc.ABC):

    @abc.abstractmethod
    async def ListPlans(self, stream: 'grpclib.server.Stream[kentik.plan.v202501alpha1.plan_pb2.ListPlansRequest, kentik.plan.v202501alpha1.plan_pb2.ListPlansResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/kentik.plan.v202501alpha1.PlanService/ListPlans': grpclib.const.Handler(
                self.ListPlans,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.plan.v202501alpha1.plan_pb2.ListPlansRequest,
                kentik.plan.v202501alpha1.plan_pb2.ListPlansResponse,
            ),
        }


class PlanServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ListPlans = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.plan.v202501alpha1.PlanService/ListPlans',
            kentik.plan.v202501alpha1.plan_pb2.ListPlansRequest,
            kentik.plan.v202501alpha1.plan_pb2.ListPlansResponse,
        )
