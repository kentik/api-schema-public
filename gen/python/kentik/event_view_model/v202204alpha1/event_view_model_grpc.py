# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: kentik/event_view_model/v202204alpha1/event_view_model.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import protoc_gen_openapiv2.options.annotations_pb2
import kentik.core.v202012alpha1.annotations_pb2
import google.protobuf.timestamp_pb2
import google.protobuf.struct_pb2
import kentik.event_view_model.v202204alpha1.event_view_model_pb2


class EventViewModelServiceBase(abc.ABC):

    @abc.abstractmethod
    async def GetViewModel(self, stream: 'grpclib.server.Stream[kentik.event_view_model.v202204alpha1.event_view_model_pb2.GetViewModelRequest, kentik.event_view_model.v202204alpha1.event_view_model_pb2.GetViewModelResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/kentik.event_view_model.v202204alpha1.EventViewModelService/GetViewModel': grpclib.const.Handler(
                self.GetViewModel,
                grpclib.const.Cardinality.UNARY_UNARY,
                kentik.event_view_model.v202204alpha1.event_view_model_pb2.GetViewModelRequest,
                kentik.event_view_model.v202204alpha1.event_view_model_pb2.GetViewModelResponse,
            ),
        }


class EventViewModelServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.GetViewModel = grpclib.client.UnaryUnaryMethod(
            channel,
            '/kentik.event_view_model.v202204alpha1.EventViewModelService/GetViewModel',
            kentik.event_view_model.v202204alpha1.event_view_model_pb2.GetViewModelRequest,
            kentik.event_view_model.v202204alpha1.event_view_model_pb2.GetViewModelResponse,
        )
