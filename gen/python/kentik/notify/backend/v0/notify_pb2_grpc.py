# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from kentik.notify.backend.v0 import models_event_pb2 as kentik_dot_notify_dot_backend_dot_v0_dot_models__event__pb2
from kentik.notify.backend.v0 import notify_pb2 as kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2
from kentik.notify.backend.v0 import subscribe_pb2 as kentik_dot_notify_dot_backend_dot_v0_dot_subscribe__pb2


class NotifyStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SearchNotifications = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/SearchNotifications',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationsRequest.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationsResponse.FromString,
                )
        self.ListNotifications = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/ListNotifications',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationsRequest.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationsResponse.FromString,
                )
        self.StreamNotifications = channel.unary_stream(
                '/kentik.api.notify.v0.Notify/StreamNotifications',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationsRequest.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationsResponse.FromString,
                )
        self.CreateNotificationEvent = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/CreateNotificationEvent',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_models__event__pb2.NotificationEvent.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_models__event__pb2.NotificationEventResponse.FromString,
                )
        self.SearchDeliveryResults = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/SearchDeliveryResults',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.DeliveryResultsRequest.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.DeliveryResultsResponse.FromString,
                )
        self.CreateNotificationChannel = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/CreateNotificationChannel',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannel.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsResponse.FromString,
                )
        self.ListNotificationChannels = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/ListNotificationChannels',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsRequest.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsResponse.FromString,
                )
        self.SearchNotificationChannels = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/SearchNotificationChannels',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsRequest.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsResponse.FromString,
                )
        self.GetNotificationChannel = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/GetNotificationChannel',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannel.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelResponse.FromString,
                )
        self.UpdateNotificationChannel = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/UpdateNotificationChannel',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannel.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsResponse.FromString,
                )
        self.DeleteNotificationChannel = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/DeleteNotificationChannel',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannel.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsResponse.FromString,
                )
        self.GetSupportedChannels = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/GetSupportedChannels',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.SupportedChannelsRequest.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.SupportedChannelsResponse.FromString,
                )
        self.CreateUserChannel = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/CreateUserChannel',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_subscribe__pb2.CreateUserChannelRequest.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelResponse.FromString,
                )
        self.GetUserChannel = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/GetUserChannel',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsRequest.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelResponse.FromString,
                )
        self.SubscribeWithUserChannel = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/SubscribeWithUserChannel',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_subscribe__pb2.SubscribeRequest.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_subscribe__pb2.SubscribeResponse.FromString,
                )
        self.UnsubscribeWithUserChannel = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/UnsubscribeWithUserChannel',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_subscribe__pb2.SubscribeRequest.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_subscribe__pb2.SubscribeResponse.FromString,
                )
        self.DeleteUserChannel = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/DeleteUserChannel',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannel.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsResponse.FromString,
                )
        self.GetLastNotificationAndStatus = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/GetLastNotificationAndStatus',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationAndStatusRequest.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationAndStatusResponse.FromString,
                )
        self.GetNotificationPayload = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/GetNotificationPayload',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationPayloadRequest.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationPayloadResponse.FromString,
                )
        self.CreateNotificationForTesting = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/CreateNotificationForTesting',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.CreateNotificationForTestingRequest.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.CreateNotificationForTestingResponse.FromString,
                )
        self.CreateNotificationForTestingInsight = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/CreateNotificationForTestingInsight',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.CreateNotificationForTestingRequest.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.CreateNotificationForTestingResponse.FromString,
                )
        self.GetNotificationPayloadInsight = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/GetNotificationPayloadInsight',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationPayloadRequest.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationPayloadResponse.FromString,
                )
        self.ApplyAlertingMapping = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/ApplyAlertingMapping',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.ApplyAlertingManagedChannelsMappingRequest.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsResponse.FromString,
                )
        self.GetAccessControlConfig = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/GetAccessControlConfig',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.GetAccessControlConfigRequest.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.GetAccessControlConfigResponse.FromString,
                )
        self.SetAccessControlConfig = channel.unary_unary(
                '/kentik.api.notify.v0.Notify/SetAccessControlConfig',
                request_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.SetAccessControlConfigRequest.SerializeToString,
                response_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.SetAccessControlConfigResponse.FromString,
                )


class NotifyServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SearchNotifications(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListNotifications(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamNotifications(self, request, context):
        """deprecated
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateNotificationEvent(self, request, context):
        """Note: internally can publish notifications directly to Kafka.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchDeliveryResults(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateNotificationChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListNotificationChannels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchNotificationChannels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNotificationChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateNotificationChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteNotificationChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSupportedChannels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeWithUserChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnsubscribeWithUserChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUserChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLastNotificationAndStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNotificationPayload(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateNotificationForTesting(self, request, context):
        """immediately but asynchronously send notification described in the enclosed NotificationPayloadRequest.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateNotificationForTestingInsight(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNotificationPayloadInsight(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ApplyAlertingMapping(self, request, context):
        """ApplyAlertingMapping offers a policy+threshold centric way to manage channels.
        It replaces selectors in the target channels by simple policy+threshold matchers.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccessControlConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAccessControlConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NotifyServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SearchNotifications': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchNotifications,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationsRequest.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationsResponse.SerializeToString,
            ),
            'ListNotifications': grpc.unary_unary_rpc_method_handler(
                    servicer.ListNotifications,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationsRequest.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationsResponse.SerializeToString,
            ),
            'StreamNotifications': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamNotifications,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationsRequest.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationsResponse.SerializeToString,
            ),
            'CreateNotificationEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNotificationEvent,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_models__event__pb2.NotificationEvent.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_models__event__pb2.NotificationEventResponse.SerializeToString,
            ),
            'SearchDeliveryResults': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchDeliveryResults,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.DeliveryResultsRequest.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.DeliveryResultsResponse.SerializeToString,
            ),
            'CreateNotificationChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNotificationChannel,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannel.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsResponse.SerializeToString,
            ),
            'ListNotificationChannels': grpc.unary_unary_rpc_method_handler(
                    servicer.ListNotificationChannels,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsRequest.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsResponse.SerializeToString,
            ),
            'SearchNotificationChannels': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchNotificationChannels,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsRequest.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsResponse.SerializeToString,
            ),
            'GetNotificationChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNotificationChannel,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannel.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelResponse.SerializeToString,
            ),
            'UpdateNotificationChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateNotificationChannel,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannel.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsResponse.SerializeToString,
            ),
            'DeleteNotificationChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteNotificationChannel,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannel.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsResponse.SerializeToString,
            ),
            'GetSupportedChannels': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSupportedChannels,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.SupportedChannelsRequest.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.SupportedChannelsResponse.SerializeToString,
            ),
            'CreateUserChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUserChannel,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_subscribe__pb2.CreateUserChannelRequest.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelResponse.SerializeToString,
            ),
            'GetUserChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserChannel,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsRequest.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelResponse.SerializeToString,
            ),
            'SubscribeWithUserChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.SubscribeWithUserChannel,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_subscribe__pb2.SubscribeRequest.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_subscribe__pb2.SubscribeResponse.SerializeToString,
            ),
            'UnsubscribeWithUserChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.UnsubscribeWithUserChannel,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_subscribe__pb2.SubscribeRequest.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_subscribe__pb2.SubscribeResponse.SerializeToString,
            ),
            'DeleteUserChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUserChannel,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannel.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsResponse.SerializeToString,
            ),
            'GetLastNotificationAndStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLastNotificationAndStatus,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationAndStatusRequest.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationAndStatusResponse.SerializeToString,
            ),
            'GetNotificationPayload': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNotificationPayload,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationPayloadRequest.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationPayloadResponse.SerializeToString,
            ),
            'CreateNotificationForTesting': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNotificationForTesting,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.CreateNotificationForTestingRequest.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.CreateNotificationForTestingResponse.SerializeToString,
            ),
            'CreateNotificationForTestingInsight': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNotificationForTestingInsight,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.CreateNotificationForTestingRequest.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.CreateNotificationForTestingResponse.SerializeToString,
            ),
            'GetNotificationPayloadInsight': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNotificationPayloadInsight,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationPayloadRequest.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationPayloadResponse.SerializeToString,
            ),
            'ApplyAlertingMapping': grpc.unary_unary_rpc_method_handler(
                    servicer.ApplyAlertingMapping,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.ApplyAlertingManagedChannelsMappingRequest.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsResponse.SerializeToString,
            ),
            'GetAccessControlConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccessControlConfig,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.GetAccessControlConfigRequest.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.GetAccessControlConfigResponse.SerializeToString,
            ),
            'SetAccessControlConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAccessControlConfig,
                    request_deserializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.SetAccessControlConfigRequest.FromString,
                    response_serializer=kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.SetAccessControlConfigResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kentik.api.notify.v0.Notify', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Notify(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SearchNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/SearchNotifications',
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationsRequest.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/ListNotifications',
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationsRequest.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/kentik.api.notify.v0.Notify/StreamNotifications',
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationsRequest.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateNotificationEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/CreateNotificationEvent',
            kentik_dot_notify_dot_backend_dot_v0_dot_models__event__pb2.NotificationEvent.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_models__event__pb2.NotificationEventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchDeliveryResults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/SearchDeliveryResults',
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.DeliveryResultsRequest.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.DeliveryResultsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateNotificationChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/CreateNotificationChannel',
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannel.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListNotificationChannels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/ListNotificationChannels',
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsRequest.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchNotificationChannels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/SearchNotificationChannels',
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsRequest.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNotificationChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/GetNotificationChannel',
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannel.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateNotificationChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/UpdateNotificationChannel',
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannel.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteNotificationChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/DeleteNotificationChannel',
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannel.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSupportedChannels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/GetSupportedChannels',
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.SupportedChannelsRequest.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.SupportedChannelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUserChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/CreateUserChannel',
            kentik_dot_notify_dot_backend_dot_v0_dot_subscribe__pb2.CreateUserChannelRequest.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/GetUserChannel',
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsRequest.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeWithUserChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/SubscribeWithUserChannel',
            kentik_dot_notify_dot_backend_dot_v0_dot_subscribe__pb2.SubscribeRequest.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_subscribe__pb2.SubscribeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnsubscribeWithUserChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/UnsubscribeWithUserChannel',
            kentik_dot_notify_dot_backend_dot_v0_dot_subscribe__pb2.SubscribeRequest.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_subscribe__pb2.SubscribeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUserChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/DeleteUserChannel',
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannel.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLastNotificationAndStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/GetLastNotificationAndStatus',
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationAndStatusRequest.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationAndStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNotificationPayload(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/GetNotificationPayload',
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationPayloadRequest.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationPayloadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateNotificationForTesting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/CreateNotificationForTesting',
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.CreateNotificationForTestingRequest.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.CreateNotificationForTestingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateNotificationForTestingInsight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/CreateNotificationForTestingInsight',
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.CreateNotificationForTestingRequest.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.CreateNotificationForTestingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNotificationPayloadInsight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/GetNotificationPayloadInsight',
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationPayloadRequest.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationPayloadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ApplyAlertingMapping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/ApplyAlertingMapping',
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.ApplyAlertingManagedChannelsMappingRequest.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.NotificationChannelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAccessControlConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/GetAccessControlConfig',
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.GetAccessControlConfigRequest.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.GetAccessControlConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAccessControlConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kentik.api.notify.v0.Notify/SetAccessControlConfig',
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.SetAccessControlConfigRequest.SerializeToString,
            kentik_dot_notify_dot_backend_dot_v0_dot_notify__pb2.SetAccessControlConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
