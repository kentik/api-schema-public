/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: grpc/health/v1/health.proto */

#ifndef PROTOBUF_C_grpc_2fhealth_2fv1_2fhealth_2eproto__INCLUDED
#define PROTOBUF_C_grpc_2fhealth_2fv1_2fhealth_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Grpc__Health__V1__HealthCheckRequest Grpc__Health__V1__HealthCheckRequest;
typedef struct _Grpc__Health__V1__HealthCheckResponse Grpc__Health__V1__HealthCheckResponse;


/* --- enums --- */

typedef enum _Grpc__Health__V1__HealthCheckResponse__ServingStatus {
  GRPC__HEALTH__V1__HEALTH_CHECK_RESPONSE__SERVING_STATUS__UNKNOWN = 0,
  GRPC__HEALTH__V1__HEALTH_CHECK_RESPONSE__SERVING_STATUS__SERVING = 1,
  GRPC__HEALTH__V1__HEALTH_CHECK_RESPONSE__SERVING_STATUS__NOT_SERVING = 2,
  /*
   * Used only by the Watch method.
   */
  GRPC__HEALTH__V1__HEALTH_CHECK_RESPONSE__SERVING_STATUS__SERVICE_UNKNOWN = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GRPC__HEALTH__V1__HEALTH_CHECK_RESPONSE__SERVING_STATUS)
} Grpc__Health__V1__HealthCheckResponse__ServingStatus;

/* --- messages --- */

struct  _Grpc__Health__V1__HealthCheckRequest
{
  ProtobufCMessage base;
  char *service;
};
#define GRPC__HEALTH__V1__HEALTH_CHECK_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&grpc__health__v1__health_check_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Grpc__Health__V1__HealthCheckResponse
{
  ProtobufCMessage base;
  Grpc__Health__V1__HealthCheckResponse__ServingStatus status;
};
#define GRPC__HEALTH__V1__HEALTH_CHECK_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&grpc__health__v1__health_check_response__descriptor) \
    , GRPC__HEALTH__V1__HEALTH_CHECK_RESPONSE__SERVING_STATUS__UNKNOWN }


/* Grpc__Health__V1__HealthCheckRequest methods */
void   grpc__health__v1__health_check_request__init
                     (Grpc__Health__V1__HealthCheckRequest         *message);
size_t grpc__health__v1__health_check_request__get_packed_size
                     (const Grpc__Health__V1__HealthCheckRequest   *message);
size_t grpc__health__v1__health_check_request__pack
                     (const Grpc__Health__V1__HealthCheckRequest   *message,
                      uint8_t             *out);
size_t grpc__health__v1__health_check_request__pack_to_buffer
                     (const Grpc__Health__V1__HealthCheckRequest   *message,
                      ProtobufCBuffer     *buffer);
Grpc__Health__V1__HealthCheckRequest *
       grpc__health__v1__health_check_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   grpc__health__v1__health_check_request__free_unpacked
                     (Grpc__Health__V1__HealthCheckRequest *message,
                      ProtobufCAllocator *allocator);
/* Grpc__Health__V1__HealthCheckResponse methods */
void   grpc__health__v1__health_check_response__init
                     (Grpc__Health__V1__HealthCheckResponse         *message);
size_t grpc__health__v1__health_check_response__get_packed_size
                     (const Grpc__Health__V1__HealthCheckResponse   *message);
size_t grpc__health__v1__health_check_response__pack
                     (const Grpc__Health__V1__HealthCheckResponse   *message,
                      uint8_t             *out);
size_t grpc__health__v1__health_check_response__pack_to_buffer
                     (const Grpc__Health__V1__HealthCheckResponse   *message,
                      ProtobufCBuffer     *buffer);
Grpc__Health__V1__HealthCheckResponse *
       grpc__health__v1__health_check_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   grpc__health__v1__health_check_response__free_unpacked
                     (Grpc__Health__V1__HealthCheckResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Grpc__Health__V1__HealthCheckRequest_Closure)
                 (const Grpc__Health__V1__HealthCheckRequest *message,
                  void *closure_data);
typedef void (*Grpc__Health__V1__HealthCheckResponse_Closure)
                 (const Grpc__Health__V1__HealthCheckResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct _Grpc__Health__V1__Health_Service Grpc__Health__V1__Health_Service;
struct _Grpc__Health__V1__Health_Service
{
  ProtobufCService base;
  void (*check)(Grpc__Health__V1__Health_Service *service,
                const Grpc__Health__V1__HealthCheckRequest *input,
                Grpc__Health__V1__HealthCheckResponse_Closure closure,
                void *closure_data);
  void (*watch)(Grpc__Health__V1__Health_Service *service,
                const Grpc__Health__V1__HealthCheckRequest *input,
                Grpc__Health__V1__HealthCheckResponse_Closure closure,
                void *closure_data);
};
typedef void (*Grpc__Health__V1__Health_ServiceDestroy)(Grpc__Health__V1__Health_Service *);
void grpc__health__v1__health__init (Grpc__Health__V1__Health_Service *service,
                                     Grpc__Health__V1__Health_ServiceDestroy destroy);
#define GRPC__HEALTH__V1__HEALTH__BASE_INIT \
    { &grpc__health__v1__health__descriptor, protobuf_c_service_invoke_internal, NULL }
#define GRPC__HEALTH__V1__HEALTH__INIT(function_prefix__) \
    { GRPC__HEALTH__V1__HEALTH__BASE_INIT,\
      function_prefix__ ## check,\
      function_prefix__ ## watch  }
void grpc__health__v1__health__check(ProtobufCService *service,
                                     const Grpc__Health__V1__HealthCheckRequest *input,
                                     Grpc__Health__V1__HealthCheckResponse_Closure closure,
                                     void *closure_data);
void grpc__health__v1__health__watch(ProtobufCService *service,
                                     const Grpc__Health__V1__HealthCheckRequest *input,
                                     Grpc__Health__V1__HealthCheckResponse_Closure closure,
                                     void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor grpc__health__v1__health_check_request__descriptor;
extern const ProtobufCMessageDescriptor grpc__health__v1__health_check_response__descriptor;
extern const ProtobufCEnumDescriptor    grpc__health__v1__health_check_response__serving_status__descriptor;
extern const ProtobufCServiceDescriptor grpc__health__v1__health__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_grpc_2fhealth_2fv1_2fhealth_2eproto__INCLUDED */
