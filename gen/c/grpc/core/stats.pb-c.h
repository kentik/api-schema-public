/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: grpc/core/stats.proto */

#ifndef PROTOBUF_C_grpc_2fcore_2fstats_2eproto__INCLUDED
#define PROTOBUF_C_grpc_2fcore_2fstats_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Grpc__Core__Bucket Grpc__Core__Bucket;
typedef struct _Grpc__Core__Histogram Grpc__Core__Histogram;
typedef struct _Grpc__Core__Metric Grpc__Core__Metric;
typedef struct _Grpc__Core__Stats Grpc__Core__Stats;


/* --- enums --- */


/* --- messages --- */

struct  _Grpc__Core__Bucket
{
  ProtobufCMessage base;
  double start;
  uint64_t count;
};
#define GRPC__CORE__BUCKET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&grpc__core__bucket__descriptor) \
    , 0, 0 }


struct  _Grpc__Core__Histogram
{
  ProtobufCMessage base;
  size_t n_buckets;
  Grpc__Core__Bucket **buckets;
};
#define GRPC__CORE__HISTOGRAM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&grpc__core__histogram__descriptor) \
    , 0,NULL }


typedef enum {
  GRPC__CORE__METRIC__VALUE__NOT_SET = 0,
  GRPC__CORE__METRIC__VALUE_COUNT = 10,
  GRPC__CORE__METRIC__VALUE_HISTOGRAM = 11
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GRPC__CORE__METRIC__VALUE)
} Grpc__Core__Metric__ValueCase;

struct  _Grpc__Core__Metric
{
  ProtobufCMessage base;
  char *name;
  Grpc__Core__Metric__ValueCase value_case;
  union {
    uint64_t count;
    Grpc__Core__Histogram *histogram;
  };
};
#define GRPC__CORE__METRIC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&grpc__core__metric__descriptor) \
    , (char *)protobuf_c_empty_string, GRPC__CORE__METRIC__VALUE__NOT_SET, {0} }


struct  _Grpc__Core__Stats
{
  ProtobufCMessage base;
  size_t n_metrics;
  Grpc__Core__Metric **metrics;
};
#define GRPC__CORE__STATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&grpc__core__stats__descriptor) \
    , 0,NULL }


/* Grpc__Core__Bucket methods */
void   grpc__core__bucket__init
                     (Grpc__Core__Bucket         *message);
size_t grpc__core__bucket__get_packed_size
                     (const Grpc__Core__Bucket   *message);
size_t grpc__core__bucket__pack
                     (const Grpc__Core__Bucket   *message,
                      uint8_t             *out);
size_t grpc__core__bucket__pack_to_buffer
                     (const Grpc__Core__Bucket   *message,
                      ProtobufCBuffer     *buffer);
Grpc__Core__Bucket *
       grpc__core__bucket__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   grpc__core__bucket__free_unpacked
                     (Grpc__Core__Bucket *message,
                      ProtobufCAllocator *allocator);
/* Grpc__Core__Histogram methods */
void   grpc__core__histogram__init
                     (Grpc__Core__Histogram         *message);
size_t grpc__core__histogram__get_packed_size
                     (const Grpc__Core__Histogram   *message);
size_t grpc__core__histogram__pack
                     (const Grpc__Core__Histogram   *message,
                      uint8_t             *out);
size_t grpc__core__histogram__pack_to_buffer
                     (const Grpc__Core__Histogram   *message,
                      ProtobufCBuffer     *buffer);
Grpc__Core__Histogram *
       grpc__core__histogram__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   grpc__core__histogram__free_unpacked
                     (Grpc__Core__Histogram *message,
                      ProtobufCAllocator *allocator);
/* Grpc__Core__Metric methods */
void   grpc__core__metric__init
                     (Grpc__Core__Metric         *message);
size_t grpc__core__metric__get_packed_size
                     (const Grpc__Core__Metric   *message);
size_t grpc__core__metric__pack
                     (const Grpc__Core__Metric   *message,
                      uint8_t             *out);
size_t grpc__core__metric__pack_to_buffer
                     (const Grpc__Core__Metric   *message,
                      ProtobufCBuffer     *buffer);
Grpc__Core__Metric *
       grpc__core__metric__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   grpc__core__metric__free_unpacked
                     (Grpc__Core__Metric *message,
                      ProtobufCAllocator *allocator);
/* Grpc__Core__Stats methods */
void   grpc__core__stats__init
                     (Grpc__Core__Stats         *message);
size_t grpc__core__stats__get_packed_size
                     (const Grpc__Core__Stats   *message);
size_t grpc__core__stats__pack
                     (const Grpc__Core__Stats   *message,
                      uint8_t             *out);
size_t grpc__core__stats__pack_to_buffer
                     (const Grpc__Core__Stats   *message,
                      ProtobufCBuffer     *buffer);
Grpc__Core__Stats *
       grpc__core__stats__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   grpc__core__stats__free_unpacked
                     (Grpc__Core__Stats *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Grpc__Core__Bucket_Closure)
                 (const Grpc__Core__Bucket *message,
                  void *closure_data);
typedef void (*Grpc__Core__Histogram_Closure)
                 (const Grpc__Core__Histogram *message,
                  void *closure_data);
typedef void (*Grpc__Core__Metric_Closure)
                 (const Grpc__Core__Metric *message,
                  void *closure_data);
typedef void (*Grpc__Core__Stats_Closure)
                 (const Grpc__Core__Stats *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor grpc__core__bucket__descriptor;
extern const ProtobufCMessageDescriptor grpc__core__histogram__descriptor;
extern const ProtobufCMessageDescriptor grpc__core__metric__descriptor;
extern const ProtobufCMessageDescriptor grpc__core__stats__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_grpc_2fcore_2fstats_2eproto__INCLUDED */
