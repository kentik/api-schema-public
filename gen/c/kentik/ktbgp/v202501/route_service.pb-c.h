/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: kentik/ktbgp/v202501/route_service.proto */

#ifndef PROTOBUF_C_kentik_2fktbgp_2fv202501_2froute_5fservice_2eproto__INCLUDED
#define PROTOBUF_C_kentik_2fktbgp_2fv202501_2froute_5fservice_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "google/api/annotations.pb-c.h"
#include "google/api/field_behavior.pb-c.h"
#include "kentik/core/v202303/annotations.pb-c.h"
#include "kentik/alerting/types/v202303/types.pb-c.h"
#include "google/protobuf/timestamp.pb-c.h"

typedef struct Kentik__Ktbgp__V202501__RouteServiceAnnounceRequest Kentik__Ktbgp__V202501__RouteServiceAnnounceRequest;
typedef struct Kentik__Ktbgp__V202501__RouteServiceAnnounceResponse Kentik__Ktbgp__V202501__RouteServiceAnnounceResponse;
typedef struct Kentik__Ktbgp__V202501__RouteServiceWithdrawRequest Kentik__Ktbgp__V202501__RouteServiceWithdrawRequest;
typedef struct Kentik__Ktbgp__V202501__Withdraw Kentik__Ktbgp__V202501__Withdraw;
typedef struct Kentik__Ktbgp__V202501__RouteServiceWithdrawResponse Kentik__Ktbgp__V202501__RouteServiceWithdrawResponse;
typedef struct Kentik__Ktbgp__V202501__FlowspecAction Kentik__Ktbgp__V202501__FlowspecAction;
typedef struct Kentik__Ktbgp__V202501__FlowspecUpdate Kentik__Ktbgp__V202501__FlowspecUpdate;
typedef struct Kentik__Ktbgp__V202501__FlowspecUpdates Kentik__Ktbgp__V202501__FlowspecUpdates;
typedef struct Kentik__Ktbgp__V202501__RTBHUpdate Kentik__Ktbgp__V202501__RTBHUpdate;
typedef struct Kentik__Ktbgp__V202501__RTBHUpdates Kentik__Ktbgp__V202501__RTBHUpdates;
typedef struct Kentik__Ktbgp__V202501__FlowspecMatch Kentik__Ktbgp__V202501__FlowspecMatch;
typedef struct Kentik__Ktbgp__V202501__FlowspecActionTrafficRateBytes Kentik__Ktbgp__V202501__FlowspecActionTrafficRateBytes;
typedef struct Kentik__Ktbgp__V202501__FlowspecActionAccept Kentik__Ktbgp__V202501__FlowspecActionAccept;
typedef struct Kentik__Ktbgp__V202501__FlowspecActionDiscard Kentik__Ktbgp__V202501__FlowspecActionDiscard;
typedef struct Kentik__Ktbgp__V202501__FlowspecActionTerminalSample Kentik__Ktbgp__V202501__FlowspecActionTerminalSample;
typedef struct Kentik__Ktbgp__V202501__FlowspecActionMarkDSCP Kentik__Ktbgp__V202501__FlowspecActionMarkDSCP;
typedef struct Kentik__Ktbgp__V202501__FlowspecActionRouteTargetRedirect Kentik__Ktbgp__V202501__FlowspecActionRouteTargetRedirect;
typedef struct Kentik__Ktbgp__V202501__FlowspecActionIPNextHopRedirect Kentik__Ktbgp__V202501__FlowspecActionIPNextHopRedirect;
typedef struct Kentik__Ktbgp__V202501__FlowspecActionIPNextHopCopy Kentik__Ktbgp__V202501__FlowspecActionIPNextHopCopy;
typedef struct Kentik__Ktbgp__V202501__FlowspecActionRegularCommunity Kentik__Ktbgp__V202501__FlowspecActionRegularCommunity;
typedef struct Kentik__Ktbgp__V202501__FlowspecActionExtendedCommunity Kentik__Ktbgp__V202501__FlowspecActionExtendedCommunity;
typedef struct Kentik__Ktbgp__V202501__FlowspecActionLargeCommunity Kentik__Ktbgp__V202501__FlowspecActionLargeCommunity;
typedef struct Kentik__Ktbgp__V202501__RTBHMatch Kentik__Ktbgp__V202501__RTBHMatch;
typedef struct Kentik__Ktbgp__V202501__RTBHAction Kentik__Ktbgp__V202501__RTBHAction;
typedef struct Kentik__Ktbgp__V202501__NumericFormula Kentik__Ktbgp__V202501__NumericFormula;
typedef struct Kentik__Ktbgp__V202501__NumericPredicateGroup Kentik__Ktbgp__V202501__NumericPredicateGroup;
typedef struct Kentik__Ktbgp__V202501__NumericPredicate Kentik__Ktbgp__V202501__NumericPredicate;
typedef struct Kentik__Ktbgp__V202501__FragmentFormula Kentik__Ktbgp__V202501__FragmentFormula;
typedef struct Kentik__Ktbgp__V202501__FragmentPredicateGroup Kentik__Ktbgp__V202501__FragmentPredicateGroup;
typedef struct Kentik__Ktbgp__V202501__FragmentPredicate Kentik__Ktbgp__V202501__FragmentPredicate;
typedef struct Kentik__Ktbgp__V202501__TCPFlagsFormula Kentik__Ktbgp__V202501__TCPFlagsFormula;
typedef struct Kentik__Ktbgp__V202501__TCPFlagsPredicateGroup Kentik__Ktbgp__V202501__TCPFlagsPredicateGroup;
typedef struct Kentik__Ktbgp__V202501__TCPFlagsPredicate Kentik__Ktbgp__V202501__TCPFlagsPredicate;
typedef struct Kentik__Ktbgp__V202501__UpdateResult Kentik__Ktbgp__V202501__UpdateResult;
typedef struct Kentik__Ktbgp__V202501__RouteServiceListRequest Kentik__Ktbgp__V202501__RouteServiceListRequest;
typedef struct Kentik__Ktbgp__V202501__RoutesFilter Kentik__Ktbgp__V202501__RoutesFilter;
typedef struct Kentik__Ktbgp__V202501__RouteServiceListResponse Kentik__Ktbgp__V202501__RouteServiceListResponse;
typedef struct Kentik__Ktbgp__V202501__DeviceAdverts Kentik__Ktbgp__V202501__DeviceAdverts;


/* --- enums --- */

typedef enum _Kentik__Ktbgp__V202501__InetType {
  KENTIK__KTBGP__V202501__INET_TYPE__INET_TYPE_UNSPECIFIED = 0,
  KENTIK__KTBGP__V202501__INET_TYPE__INET_TYPE_IPV4 = 1,
  KENTIK__KTBGP__V202501__INET_TYPE__INET_TYPE_IPV6 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__KTBGP__V202501__INET_TYPE)
} Kentik__Ktbgp__V202501__InetType;
typedef enum _Kentik__Ktbgp__V202501__ExtendedCommunityRouteType {
  KENTIK__KTBGP__V202501__EXTENDED_COMMUNITY_ROUTE_TYPE__EXTENDED_COMMUNITY_ROUTE_TYPE_UNSPECIFIED = 0,
  KENTIK__KTBGP__V202501__EXTENDED_COMMUNITY_ROUTE_TYPE__EXTENDED_COMMUNITY_ROUTE_TYPE_TARGET = 1,
  KENTIK__KTBGP__V202501__EXTENDED_COMMUNITY_ROUTE_TYPE__EXTENDED_COMMUNITY_ROUTE_TYPE_ORIGIN = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__KTBGP__V202501__EXTENDED_COMMUNITY_ROUTE_TYPE)
} Kentik__Ktbgp__V202501__ExtendedCommunityRouteType;
typedef enum _Kentik__Ktbgp__V202501__Fragment {
  KENTIK__KTBGP__V202501__FRAGMENT__FRAGMENT_UNSPECIFIED = 0,
  /*
   * Don't Fragment
   */
  KENTIK__KTBGP__V202501__FRAGMENT__FRAGMENT_DF = 1,
  /*
   * Is a fragment other than the first
   */
  KENTIK__KTBGP__V202501__FRAGMENT__FRAGMENT_ISF = 2,
  /*
   * First Fragment
   */
  KENTIK__KTBGP__V202501__FRAGMENT__FRAGMENT_FF = 3,
  /*
   * Last Fragment
   */
  KENTIK__KTBGP__V202501__FRAGMENT__FRAGMENT_LF = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__KTBGP__V202501__FRAGMENT)
} Kentik__Ktbgp__V202501__Fragment;
typedef enum _Kentik__Ktbgp__V202501__TCPFlag {
  KENTIK__KTBGP__V202501__TCPFLAG__TCP_FLAG_UNSPECIFIED = 0,
  KENTIK__KTBGP__V202501__TCPFLAG__TCP_FLAG_FIN = 1,
  KENTIK__KTBGP__V202501__TCPFLAG__TCP_FLAG_SYN = 2,
  KENTIK__KTBGP__V202501__TCPFLAG__TCP_FLAG_RST = 3,
  KENTIK__KTBGP__V202501__TCPFLAG__TCP_FLAG_PSH = 4,
  KENTIK__KTBGP__V202501__TCPFLAG__TCP_FLAG_ACK = 5,
  KENTIK__KTBGP__V202501__TCPFLAG__TCP_FLAG_URG = 6,
  KENTIK__KTBGP__V202501__TCPFLAG__TCP_FLAG_ECE = 7,
  KENTIK__KTBGP__V202501__TCPFLAG__TCP_FLAG_CWR = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__KTBGP__V202501__TCPFLAG)
} Kentik__Ktbgp__V202501__TCPFlag;
typedef enum _Kentik__Ktbgp__V202501__NumericOp {
  KENTIK__KTBGP__V202501__NUMERIC_OP__NUMERIC_OP_UNSPECIFIED = 0,
  KENTIK__KTBGP__V202501__NUMERIC_OP__NUMERIC_OP_EQUALS = 1,
  KENTIK__KTBGP__V202501__NUMERIC_OP__NUMERIC_OP_NOT_EQUALS = 2,
  KENTIK__KTBGP__V202501__NUMERIC_OP__NUMERIC_OP_LESS_THAN = 3,
  KENTIK__KTBGP__V202501__NUMERIC_OP__NUMERIC_OP_GREATER_THAN = 4,
  KENTIK__KTBGP__V202501__NUMERIC_OP__NUMERIC_OP_LESS_THAN_OR_EQUALS = 5,
  KENTIK__KTBGP__V202501__NUMERIC_OP__NUMERIC_OP_GREATER_THAN_OR_EQUALS = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__KTBGP__V202501__NUMERIC_OP)
} Kentik__Ktbgp__V202501__NumericOp;
typedef enum _Kentik__Ktbgp__V202501__BitwiseOp {
  KENTIK__KTBGP__V202501__BITWISE_OP__BITWISE_OP_UNSPECIFIED = 0,
  /*
   * (data & value) != 0
   */
  KENTIK__KTBGP__V202501__BITWISE_OP__BITWISE_OP_ANY = 1,
  /*
   * (data & value) == 0
   */
  KENTIK__KTBGP__V202501__BITWISE_OP__BITWISE_OP_NONE = 2,
  /*
   * (data & value) == value
   */
  KENTIK__KTBGP__V202501__BITWISE_OP__BITWISE_OP_ALL = 3,
  /*
   * (data & value) != value
   */
  KENTIK__KTBGP__V202501__BITWISE_OP__BITWISE_OP_NOT_ALL = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__KTBGP__V202501__BITWISE_OP)
} Kentik__Ktbgp__V202501__BitwiseOp;
typedef enum _Kentik__Ktbgp__V202501__AdvertStatus {
  KENTIK__KTBGP__V202501__ADVERT_STATUS__ADVERT_STATUS_UNSPECIFIED = 0,
  KENTIK__KTBGP__V202501__ADVERT_STATUS__ADVERT_STATUS_ANNOUNCED = 1,
  KENTIK__KTBGP__V202501__ADVERT_STATUS__ADVERT_STATUS_WITHDRAWN = 2,
  /*
   * when we cannot find the chf-bgp instance
   */
  KENTIK__KTBGP__V202501__ADVERT_STATUS__ADVERT_STATUS_NO_SESSION = 4,
  /*
   * when we failed to parse or send the update
   */
  KENTIK__KTBGP__V202501__ADVERT_STATUS__ADVERT_STATUS_FAILED = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__KTBGP__V202501__ADVERT_STATUS)
} Kentik__Ktbgp__V202501__AdvertStatus;

/* --- messages --- */

typedef enum {
  KENTIK__KTBGP__V202501__ROUTE_SERVICE_ANNOUNCE_REQUEST__UPDATE__NOT_SET = 0,
  KENTIK__KTBGP__V202501__ROUTE_SERVICE_ANNOUNCE_REQUEST__UPDATE_FLOWSPEC = 11,
  KENTIK__KTBGP__V202501__ROUTE_SERVICE_ANNOUNCE_REQUEST__UPDATE_RTBH = 12
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__KTBGP__V202501__ROUTE_SERVICE_ANNOUNCE_REQUEST__UPDATE__CASE)
} Kentik__Ktbgp__V202501__RouteServiceAnnounceRequest__UpdateCase;

struct  Kentik__Ktbgp__V202501__RouteServiceAnnounceRequest
{
  ProtobufCMessage base;
  size_t n_device_ids;
  uint64_t *device_ids;
  Kentik__Ktbgp__V202501__RouteServiceAnnounceRequest__UpdateCase update_case;
  union {
    Kentik__Ktbgp__V202501__FlowspecUpdate *flowspec;
    Kentik__Ktbgp__V202501__RTBHUpdate *rtbh;
  };
};
#define KENTIK__KTBGP__V202501__ROUTE_SERVICE_ANNOUNCE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__route_service_announce_request__descriptor) \
    , 0,NULL, KENTIK__KTBGP__V202501__ROUTE_SERVICE_ANNOUNCE_REQUEST__UPDATE__NOT_SET, {0} }


struct  Kentik__Ktbgp__V202501__RouteServiceAnnounceResponse
{
  ProtobufCMessage base;
  size_t n_results;
  Kentik__Ktbgp__V202501__UpdateResult **results;
};
#define KENTIK__KTBGP__V202501__ROUTE_SERVICE_ANNOUNCE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__route_service_announce_response__descriptor) \
    , 0,NULL }


struct  Kentik__Ktbgp__V202501__RouteServiceWithdrawRequest
{
  ProtobufCMessage base;
  size_t n_device_ids;
  uint64_t *device_ids;
  Kentik__Ktbgp__V202501__Withdraw *withdraw;
};
#define KENTIK__KTBGP__V202501__ROUTE_SERVICE_WITHDRAW_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__route_service_withdraw_request__descriptor) \
    , 0,NULL, NULL }


typedef enum {
  KENTIK__KTBGP__V202501__WITHDRAW__WITHDRAW__NOT_SET = 0,
  KENTIK__KTBGP__V202501__WITHDRAW__WITHDRAW_FLOWSPEC = 1,
  KENTIK__KTBGP__V202501__WITHDRAW__WITHDRAW_RTBH = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__KTBGP__V202501__WITHDRAW__WITHDRAW__CASE)
} Kentik__Ktbgp__V202501__Withdraw__WithdrawCase;

struct  Kentik__Ktbgp__V202501__Withdraw
{
  ProtobufCMessage base;
  Kentik__Ktbgp__V202501__Withdraw__WithdrawCase withdraw_case;
  union {
    Kentik__Ktbgp__V202501__FlowspecMatch *flowspec;
    Kentik__Ktbgp__V202501__RTBHMatch *rtbh;
  };
};
#define KENTIK__KTBGP__V202501__WITHDRAW__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__withdraw__descriptor) \
    , KENTIK__KTBGP__V202501__WITHDRAW__WITHDRAW__NOT_SET, {0} }


struct  Kentik__Ktbgp__V202501__RouteServiceWithdrawResponse
{
  ProtobufCMessage base;
  size_t n_results;
  Kentik__Ktbgp__V202501__UpdateResult **results;
};
#define KENTIK__KTBGP__V202501__ROUTE_SERVICE_WITHDRAW_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__route_service_withdraw_response__descriptor) \
    , 0,NULL }


typedef enum {
  KENTIK__KTBGP__V202501__FLOWSPEC_ACTION__ACTION__NOT_SET = 0,
  KENTIK__KTBGP__V202501__FLOWSPEC_ACTION__ACTION_ACCEPT = 1,
  KENTIK__KTBGP__V202501__FLOWSPEC_ACTION__ACTION_DISCARD = 2,
  KENTIK__KTBGP__V202501__FLOWSPEC_ACTION__ACTION_RATE_BYTES = 3,
  KENTIK__KTBGP__V202501__FLOWSPEC_ACTION__ACTION_MARK_DSCP = 4,
  KENTIK__KTBGP__V202501__FLOWSPEC_ACTION__ACTION_RT_REDIRECT = 5,
  KENTIK__KTBGP__V202501__FLOWSPEC_ACTION__ACTION_IP_REDIRECT = 6,
  KENTIK__KTBGP__V202501__FLOWSPEC_ACTION__ACTION_ACTION_TYPE = 7,
  KENTIK__KTBGP__V202501__FLOWSPEC_ACTION__ACTION_RT_COPY = 8,
  KENTIK__KTBGP__V202501__FLOWSPEC_ACTION__ACTION_REGULAR_COMMUNITY = 9,
  KENTIK__KTBGP__V202501__FLOWSPEC_ACTION__ACTION_EXTENDED_COMMUNITY = 10,
  KENTIK__KTBGP__V202501__FLOWSPEC_ACTION__ACTION_LARGE_COMMUNITY = 11
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__KTBGP__V202501__FLOWSPEC_ACTION__ACTION__CASE)
} Kentik__Ktbgp__V202501__FlowspecAction__ActionCase;

struct  Kentik__Ktbgp__V202501__FlowspecAction
{
  ProtobufCMessage base;
  Kentik__Ktbgp__V202501__FlowspecAction__ActionCase action_case;
  union {
    Kentik__Ktbgp__V202501__FlowspecActionAccept *accept;
    Kentik__Ktbgp__V202501__FlowspecActionTerminalSample *action_type;
    Kentik__Ktbgp__V202501__FlowspecActionDiscard *discard;
    Kentik__Ktbgp__V202501__FlowspecActionExtendedCommunity *extended_community;
    Kentik__Ktbgp__V202501__FlowspecActionIPNextHopRedirect *ip_redirect;
    Kentik__Ktbgp__V202501__FlowspecActionLargeCommunity *large_community;
    Kentik__Ktbgp__V202501__FlowspecActionMarkDSCP *mark_dscp;
    Kentik__Ktbgp__V202501__FlowspecActionTrafficRateBytes *rate_bytes;
    Kentik__Ktbgp__V202501__FlowspecActionRegularCommunity *regular_community;
    Kentik__Ktbgp__V202501__FlowspecActionIPNextHopCopy *rt_copy;
    Kentik__Ktbgp__V202501__FlowspecActionRouteTargetRedirect *rt_redirect;
  };
};
#define KENTIK__KTBGP__V202501__FLOWSPEC_ACTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__flowspec_action__descriptor) \
    , KENTIK__KTBGP__V202501__FLOWSPEC_ACTION__ACTION__NOT_SET, {0} }


typedef enum {
  KENTIK__KTBGP__V202501__FLOWSPEC_UPDATE__ACTION__NOT_SET = 0,
  KENTIK__KTBGP__V202501__FLOWSPEC_UPDATE__ACTION_RATE_BYTES = 11,
  KENTIK__KTBGP__V202501__FLOWSPEC_UPDATE__ACTION_DISCARD = 12,
  KENTIK__KTBGP__V202501__FLOWSPEC_UPDATE__ACTION_MARK_DSCP = 13,
  KENTIK__KTBGP__V202501__FLOWSPEC_UPDATE__ACTION_RT_REDIRECT = 14,
  KENTIK__KTBGP__V202501__FLOWSPEC_UPDATE__ACTION_IP_REDIRECT = 15,
  KENTIK__KTBGP__V202501__FLOWSPEC_UPDATE__ACTION_ACCEPT = 16,
  KENTIK__KTBGP__V202501__FLOWSPEC_UPDATE__ACTION_ACTION_TYPE = 17,
  KENTIK__KTBGP__V202501__FLOWSPEC_UPDATE__ACTION_RT_COPY = 18,
  KENTIK__KTBGP__V202501__FLOWSPEC_UPDATE__ACTION_REGULAR_COMMUNITY = 19,
  KENTIK__KTBGP__V202501__FLOWSPEC_UPDATE__ACTION_EXTENDED_COMMUNITY = 20,
  KENTIK__KTBGP__V202501__FLOWSPEC_UPDATE__ACTION_LARGE_COMMUNITY = 21
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__KTBGP__V202501__FLOWSPEC_UPDATE__ACTION__CASE)
} Kentik__Ktbgp__V202501__FlowspecUpdate__ActionCase;

struct  Kentik__Ktbgp__V202501__FlowspecUpdate
{
  ProtobufCMessage base;
  Kentik__Ktbgp__V202501__FlowspecMatch *match;
  Google__Protobuf__Timestamp *creation_time;
  /*
   * deprecated: use inet_type instead
   */
  char *inet PROTOBUF_C__DEPRECATED;
  Kentik__Ktbgp__V202501__InetType inet_type;
  /*
   * mainly used for internal purposes
   */
  char *key;
  size_t n_actions;
  Kentik__Ktbgp__V202501__FlowspecAction **actions;
  /*
   * true if this is a terminal action
   */
  protobuf_c_boolean terminal PROTOBUF_C__DEPRECATED;
  /*
   * true to enable traffic sampling and logging
   */
  protobuf_c_boolean sample PROTOBUF_C__DEPRECATED;
  Kentik__Ktbgp__V202501__FlowspecUpdate__ActionCase action_case;
  union {
    Kentik__Ktbgp__V202501__FlowspecActionAccept *accept;
    Kentik__Ktbgp__V202501__FlowspecActionTerminalSample *action_type;
    Kentik__Ktbgp__V202501__FlowspecActionDiscard *discard;
    Kentik__Ktbgp__V202501__FlowspecActionExtendedCommunity *extended_community;
    Kentik__Ktbgp__V202501__FlowspecActionIPNextHopRedirect *ip_redirect;
    Kentik__Ktbgp__V202501__FlowspecActionLargeCommunity *large_community;
    Kentik__Ktbgp__V202501__FlowspecActionMarkDSCP *mark_dscp;
    Kentik__Ktbgp__V202501__FlowspecActionTrafficRateBytes *rate_bytes;
    Kentik__Ktbgp__V202501__FlowspecActionRegularCommunity *regular_community;
    Kentik__Ktbgp__V202501__FlowspecActionIPNextHopCopy *rt_copy;
    Kentik__Ktbgp__V202501__FlowspecActionRouteTargetRedirect *rt_redirect;
  };
};
#define KENTIK__KTBGP__V202501__FLOWSPEC_UPDATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__flowspec_update__descriptor) \
    , NULL, NULL, (char *)protobuf_c_empty_string, KENTIK__KTBGP__V202501__INET_TYPE__INET_TYPE_UNSPECIFIED, (char *)protobuf_c_empty_string, 0,NULL, 0, 0, KENTIK__KTBGP__V202501__FLOWSPEC_UPDATE__ACTION__NOT_SET, {0} }


struct  Kentik__Ktbgp__V202501__FlowspecUpdates
{
  ProtobufCMessage base;
  size_t n_update;
  Kentik__Ktbgp__V202501__FlowspecUpdate **update;
};
#define KENTIK__KTBGP__V202501__FLOWSPEC_UPDATES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__flowspec_updates__descriptor) \
    , 0,NULL }


struct  Kentik__Ktbgp__V202501__RTBHUpdate
{
  ProtobufCMessage base;
  Kentik__Ktbgp__V202501__RTBHMatch *match;
  Kentik__Ktbgp__V202501__RTBHAction *action;
  Google__Protobuf__Timestamp *creation_time;
  /*
   * deprecated: use inet_type instead
   */
  char *inet PROTOBUF_C__DEPRECATED;
  Kentik__Ktbgp__V202501__InetType inet_type;
  /*
   * mainly used for internal purposes
   */
  char *key;
};
#define KENTIK__KTBGP__V202501__RTBHUPDATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__rtbhupdate__descriptor) \
    , NULL, NULL, NULL, (char *)protobuf_c_empty_string, KENTIK__KTBGP__V202501__INET_TYPE__INET_TYPE_UNSPECIFIED, (char *)protobuf_c_empty_string }


struct  Kentik__Ktbgp__V202501__RTBHUpdates
{
  ProtobufCMessage base;
  size_t n_update;
  Kentik__Ktbgp__V202501__RTBHUpdate **update;
};
#define KENTIK__KTBGP__V202501__RTBHUPDATES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__rtbhupdates__descriptor) \
    , 0,NULL }


/*
 * FlowspecMatch represents the traffic filtering criteria encoded
 * as Flow Specification NLRI as per RFC 8955:
 * https://datatracker.ietf.org/doc/html/rfc8955#name-dissemination-of-ipv4-flow-
 * and other related documents.
 */
struct  Kentik__Ktbgp__V202501__FlowspecMatch
{
  ProtobufCMessage base;
  /*
   * IPv4 or IPv6 CIDR prefix to match
   */
  char *dst_prefix;
  /*
   * IPv4 or IPv6 CIDR prefix to match
   */
  char *src_prefix;
  Kentik__Ktbgp__V202501__NumericFormula *ip_protocol;
  Kentik__Ktbgp__V202501__NumericFormula *dst_port;
  Kentik__Ktbgp__V202501__NumericFormula *src_port;
  Kentik__Ktbgp__V202501__NumericFormula *icmp_type;
  Kentik__Ktbgp__V202501__NumericFormula *icmp_code;
  Kentik__Ktbgp__V202501__TCPFlagsFormula *tcp_flags;
  Kentik__Ktbgp__V202501__NumericFormula *packet_length;
  Kentik__Ktbgp__V202501__NumericFormula *dscp;
  Kentik__Ktbgp__V202501__FragmentFormula *fragments;
};
#define KENTIK__KTBGP__V202501__FLOWSPEC_MATCH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__flowspec_match__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }


/*
 * FlowspecActionTrafficRateBytes specifies the maximum traffic rate
 * in bytes per second.
 * Extended Community type and sub-type: 0x8006
 * https://datatracker.ietf.org/doc/html/rfc8955#traffic_rate_in_bytes
 */
struct  Kentik__Ktbgp__V202501__FlowspecActionTrafficRateBytes
{
  ProtobufCMessage base;
  /*
   * bytes_per_second must be greater than 0.
   * See FlowspecActionDiscard for discarding traffic.
   */
  float bytes_per_second;
};
#define KENTIK__KTBGP__V202501__FLOWSPEC_ACTION_TRAFFIC_RATE_BYTES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__flowspec_action_traffic_rate_bytes__descriptor) \
    , 0 }


/*
 * FlowspecActionAccept specifies that the traffic should be accepted.
 * https://datatracker.ietf.org/doc/html/rfc8955
 */
struct  Kentik__Ktbgp__V202501__FlowspecActionAccept
{
  ProtobufCMessage base;
};
#define KENTIK__KTBGP__V202501__FLOWSPEC_ACTION_ACCEPT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__flowspec_action_accept__descriptor) \
     }


/*
 * FlowspecActionDiscard specifies that the traffic should be discarded.
 * This is a special case of FlowspecActionTrafficRateBytes with 0 bytes per second.
 * Extended Community type and sub-type: 0x8006
 * https://datatracker.ietf.org/doc/html/rfc8955#traffic_rate_in_bytes
 */
struct  Kentik__Ktbgp__V202501__FlowspecActionDiscard
{
  ProtobufCMessage base;
};
#define KENTIK__KTBGP__V202501__FLOWSPEC_ACTION_DISCARD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__flowspec_action_discard__descriptor) \
     }


/*
 * FlowspecActionTerminalSample specifies that the traffic action extended community.
 * terminal, sample or sample-terminal action types.
 * https://datatracker.ietf.org/doc/html/rfc8955#name-traffic-action-traffic-acti
 */
struct  Kentik__Ktbgp__V202501__FlowspecActionTerminalSample
{
  ProtobufCMessage base;
  protobuf_c_boolean terminal;
  protobuf_c_boolean sample;
};
#define KENTIK__KTBGP__V202501__FLOWSPEC_ACTION_TERMINAL_SAMPLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__flowspec_action_terminal_sample__descriptor) \
    , 0, 0 }


/*
 * FlowspecActionMarkDSCP instructs a system to modify the DSCP bits in the IP header.
 * Extended Community type and sub-type: 0x8009
 * https://datatracker.ietf.org/doc/html/rfc8955#traffic_marking_subtype
 */
struct  Kentik__Ktbgp__V202501__FlowspecActionMarkDSCP
{
  ProtobufCMessage base;
  uint32_t dscp;
};
#define KENTIK__KTBGP__V202501__FLOWSPEC_ACTION_MARK_DSCP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__flowspec_action_mark_dscp__descriptor) \
    , 0 }


/*
 * FlowspecActionRouteTargetRedirect allows the traffic to be redirected to a VRF
 * routing instance that lists the specified route-target in its import policy.
 * Depending on the contents of the message, this will be encoded as:
 * Extended Community type and sub-type: 0x8008 (2-octet ASN)
 * or
 * Extended Community type and sub-type: 0x8208 (4-octet ASN)
 * https://datatracker.ietf.org/doc/html/rfc8955#rt_redirect_action_subtype
 */
struct  Kentik__Ktbgp__V202501__FlowspecActionRouteTargetRedirect
{
  ProtobufCMessage base;
  /*
   * If 32 bits are used for the ASN, the route target can only be 16 bits long
   */
  uint32_t asn;
  /*
   * If 32 bits are used for the route target, the asn can only be 16 bits long
   */
  uint32_t route_target;
};
#define KENTIK__KTBGP__V202501__FLOWSPEC_ACTION_ROUTE_TARGET_REDIRECT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__flowspec_action_route_target_redirect__descriptor) \
    , 0, 0 }


/*
 * FlowspecActionIPNextHopRedirect allows the traffic to be redirected
 * to a specific Next Hop IP address.
 * Extended Community type and sub-type: 0x0800
 * The target next-hop address refers to the 'Network Address of Next-Hop' field
 * of the associated NLRI.
 * https://datatracker.ietf.org/doc/html/draft-simpson-idr-flowspec-redirect
 */
struct  Kentik__Ktbgp__V202501__FlowspecActionIPNextHopRedirect
{
  ProtobufCMessage base;
  /*
   * IPv4 or IPv6 address to redirect to
   */
  char *next_hop;
};
#define KENTIK__KTBGP__V202501__FLOWSPEC_ACTION_IPNEXT_HOP_REDIRECT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__flowspec_action_ipnext_hop_redirect__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * FlowspecActionIPNextHopCopy allows the traffic to be copied
 * to a specific Next Hop IP address.
 * Extended Community type and sub-type: 0x0800 with least-significant bit 'C' set to 1
 * The target next-hop address refers to the 'Network Address of Next-Hop' field
 * of the associated NLRI.
 * https://datatracker.ietf.org/doc/html/draft-simpson-idr-flowspec-redirect
 */
struct  Kentik__Ktbgp__V202501__FlowspecActionIPNextHopCopy
{
  ProtobufCMessage base;
  /*
   * IPv4 or IPv6 address to copy to
   */
  char *next_hop;
};
#define KENTIK__KTBGP__V202501__FLOWSPEC_ACTION_IPNEXT_HOP_COPY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__flowspec_action_ipnext_hop_copy__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * FlowspecActionRegularCommunity
 * Extenstion of the two-octed AS numbers as four-octed entinties.
 * https://datatracker.ietf.org/doc/html/rfc6793
 */
struct  Kentik__Ktbgp__V202501__FlowspecActionRegularCommunity
{
  ProtobufCMessage base;
  uint32_t asn1;
  uint32_t asn2;
};
#define KENTIK__KTBGP__V202501__FLOWSPEC_ACTION_REGULAR_COMMUNITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__flowspec_action_regular_community__descriptor) \
    , 0, 0 }


/*
 * FlowspecActionExtendedCommunity
 * The attribute consists of a set of "extended communities".  
 * All routes with the Extended Communities attribute belong to 
 * the communities listed in the attribute.
 * https://datatracker.ietf.org/doc/html/rfc4360
 */
struct  Kentik__Ktbgp__V202501__FlowspecActionExtendedCommunity
{
  ProtobufCMessage base;
  Kentik__Ktbgp__V202501__ExtendedCommunityRouteType route_type;
  uint32_t asn1;
  uint32_t asn2;
};
#define KENTIK__KTBGP__V202501__FLOWSPEC_ACTION_EXTENDED_COMMUNITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__flowspec_action_extended_community__descriptor) \
    , KENTIK__KTBGP__V202501__EXTENDED_COMMUNITY_ROUTE_TYPE__EXTENDED_COMMUNITY_ROUTE_TYPE_UNSPECIFIED, 0, 0 }


/*
 * FlowspecActionLargeCommunity
 * BGP Large Communities attribute encoded as an unordered set of one or more
 * twelve-octet values, each consisting of a four-octet Global
 * Administrator field and two four-octet operator-defined fields, each
 * of which can be used to denote properties or actions significant to
 * the operator of the AS assigning the values.
 * https://datatracker.ietf.org/doc/html/rfc8092
 */
struct  Kentik__Ktbgp__V202501__FlowspecActionLargeCommunity
{
  ProtobufCMessage base;
  uint32_t asn;
  uint32_t data1;
  uint32_t data2;
};
#define KENTIK__KTBGP__V202501__FLOWSPEC_ACTION_LARGE_COMMUNITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__flowspec_action_large_community__descriptor) \
    , 0, 0, 0 }


struct  Kentik__Ktbgp__V202501__RTBHMatch
{
  ProtobufCMessage base;
  /*
   * IPv4 or IPv6 CIDR prefix to match
   */
  char *src_prefix;
};
#define KENTIK__KTBGP__V202501__RTBHMATCH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__rtbhmatch__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  Kentik__Ktbgp__V202501__RTBHAction
{
  ProtobufCMessage base;
  size_t n_bgp_communities;
  uint32_t *bgp_communities;
  char *next_hop;
  uint32_t local_preference;
};
#define KENTIK__KTBGP__V202501__RTBHACTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__rtbhaction__descriptor) \
    , 0,NULL, (char *)protobuf_c_empty_string, 0 }


struct  Kentik__Ktbgp__V202501__NumericFormula
{
  ProtobufCMessage base;
  size_t n_or_;
  Kentik__Ktbgp__V202501__NumericPredicateGroup **or_;
};
#define KENTIK__KTBGP__V202501__NUMERIC_FORMULA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__numeric_formula__descriptor) \
    , 0,NULL }


struct  Kentik__Ktbgp__V202501__NumericPredicateGroup
{
  ProtobufCMessage base;
  size_t n_and_;
  Kentik__Ktbgp__V202501__NumericPredicate **and_;
};
#define KENTIK__KTBGP__V202501__NUMERIC_PREDICATE_GROUP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__numeric_predicate_group__descriptor) \
    , 0,NULL }


struct  Kentik__Ktbgp__V202501__NumericPredicate
{
  ProtobufCMessage base;
  Kentik__Ktbgp__V202501__NumericOp operator_;
  uint64_t value;
};
#define KENTIK__KTBGP__V202501__NUMERIC_PREDICATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__numeric_predicate__descriptor) \
    , KENTIK__KTBGP__V202501__NUMERIC_OP__NUMERIC_OP_UNSPECIFIED, 0 }


struct  Kentik__Ktbgp__V202501__FragmentFormula
{
  ProtobufCMessage base;
  size_t n_or_;
  Kentik__Ktbgp__V202501__FragmentPredicateGroup **or_;
};
#define KENTIK__KTBGP__V202501__FRAGMENT_FORMULA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__fragment_formula__descriptor) \
    , 0,NULL }


struct  Kentik__Ktbgp__V202501__FragmentPredicateGroup
{
  ProtobufCMessage base;
  size_t n_and_;
  Kentik__Ktbgp__V202501__FragmentPredicate **and_;
};
#define KENTIK__KTBGP__V202501__FRAGMENT_PREDICATE_GROUP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__fragment_predicate_group__descriptor) \
    , 0,NULL }


struct  Kentik__Ktbgp__V202501__FragmentPredicate
{
  ProtobufCMessage base;
  Kentik__Ktbgp__V202501__BitwiseOp operator_;
  size_t n_values;
  Kentik__Ktbgp__V202501__Fragment *values;
};
#define KENTIK__KTBGP__V202501__FRAGMENT_PREDICATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__fragment_predicate__descriptor) \
    , KENTIK__KTBGP__V202501__BITWISE_OP__BITWISE_OP_UNSPECIFIED, 0,NULL }


struct  Kentik__Ktbgp__V202501__TCPFlagsFormula
{
  ProtobufCMessage base;
  size_t n_or_;
  Kentik__Ktbgp__V202501__TCPFlagsPredicateGroup **or_;
};
#define KENTIK__KTBGP__V202501__TCPFLAGS_FORMULA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__tcpflags_formula__descriptor) \
    , 0,NULL }


struct  Kentik__Ktbgp__V202501__TCPFlagsPredicateGroup
{
  ProtobufCMessage base;
  size_t n_and_;
  Kentik__Ktbgp__V202501__TCPFlagsPredicate **and_;
};
#define KENTIK__KTBGP__V202501__TCPFLAGS_PREDICATE_GROUP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__tcpflags_predicate_group__descriptor) \
    , 0,NULL }


struct  Kentik__Ktbgp__V202501__TCPFlagsPredicate
{
  ProtobufCMessage base;
  Kentik__Ktbgp__V202501__BitwiseOp operator_;
  size_t n_values;
  Kentik__Ktbgp__V202501__TCPFlag *values;
};
#define KENTIK__KTBGP__V202501__TCPFLAGS_PREDICATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__tcpflags_predicate__descriptor) \
    , KENTIK__KTBGP__V202501__BITWISE_OP__BITWISE_OP_UNSPECIFIED, 0,NULL }


struct  Kentik__Ktbgp__V202501__UpdateResult
{
  ProtobufCMessage base;
  uint64_t device_id;
  Kentik__Ktbgp__V202501__AdvertStatus status;
  char *message;
};
#define KENTIK__KTBGP__V202501__UPDATE_RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__update_result__descriptor) \
    , 0, KENTIK__KTBGP__V202501__ADVERT_STATUS__ADVERT_STATUS_UNSPECIFIED, (char *)protobuf_c_empty_string }


struct  Kentik__Ktbgp__V202501__RouteServiceListRequest
{
  ProtobufCMessage base;
  /*
   * TODO: any pagination or sorting capabilities?
   */
  Kentik__Ktbgp__V202501__RoutesFilter *filters;
};
#define KENTIK__KTBGP__V202501__ROUTE_SERVICE_LIST_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__route_service_list_request__descriptor) \
    , NULL }


struct  Kentik__Ktbgp__V202501__RoutesFilter
{
  ProtobufCMessage base;
  /*
   * TODO: we may want to search by update type or detailed attributes
   * TODO: we may also want to search for historical updates
   */
  size_t n_device_ids;
  uint64_t *device_ids;
};
#define KENTIK__KTBGP__V202501__ROUTES_FILTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__routes_filter__descriptor) \
    , 0,NULL }


struct  Kentik__Ktbgp__V202501__RouteServiceListResponse
{
  ProtobufCMessage base;
  size_t n_result;
  Kentik__Ktbgp__V202501__DeviceAdverts **result;
};
#define KENTIK__KTBGP__V202501__ROUTE_SERVICE_LIST_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__route_service_list_response__descriptor) \
    , 0,NULL }


struct  Kentik__Ktbgp__V202501__DeviceAdverts
{
  ProtobufCMessage base;
  uint64_t device_id;
  size_t n_flowspec;
  Kentik__Ktbgp__V202501__FlowspecUpdate **flowspec;
  size_t n_rtbh;
  Kentik__Ktbgp__V202501__RTBHUpdate **rtbh;
};
#define KENTIK__KTBGP__V202501__DEVICE_ADVERTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktbgp__v202501__device_adverts__descriptor) \
    , 0, 0,NULL, 0,NULL }


/* Kentik__Ktbgp__V202501__RouteServiceAnnounceRequest methods */
void   kentik__ktbgp__v202501__route_service_announce_request__init
                     (Kentik__Ktbgp__V202501__RouteServiceAnnounceRequest         *message);
size_t kentik__ktbgp__v202501__route_service_announce_request__get_packed_size
                     (const Kentik__Ktbgp__V202501__RouteServiceAnnounceRequest   *message);
size_t kentik__ktbgp__v202501__route_service_announce_request__pack
                     (const Kentik__Ktbgp__V202501__RouteServiceAnnounceRequest   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__route_service_announce_request__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__RouteServiceAnnounceRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__RouteServiceAnnounceRequest *
       kentik__ktbgp__v202501__route_service_announce_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__route_service_announce_request__free_unpacked
                     (Kentik__Ktbgp__V202501__RouteServiceAnnounceRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__RouteServiceAnnounceResponse methods */
void   kentik__ktbgp__v202501__route_service_announce_response__init
                     (Kentik__Ktbgp__V202501__RouteServiceAnnounceResponse         *message);
size_t kentik__ktbgp__v202501__route_service_announce_response__get_packed_size
                     (const Kentik__Ktbgp__V202501__RouteServiceAnnounceResponse   *message);
size_t kentik__ktbgp__v202501__route_service_announce_response__pack
                     (const Kentik__Ktbgp__V202501__RouteServiceAnnounceResponse   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__route_service_announce_response__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__RouteServiceAnnounceResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__RouteServiceAnnounceResponse *
       kentik__ktbgp__v202501__route_service_announce_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__route_service_announce_response__free_unpacked
                     (Kentik__Ktbgp__V202501__RouteServiceAnnounceResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__RouteServiceWithdrawRequest methods */
void   kentik__ktbgp__v202501__route_service_withdraw_request__init
                     (Kentik__Ktbgp__V202501__RouteServiceWithdrawRequest         *message);
size_t kentik__ktbgp__v202501__route_service_withdraw_request__get_packed_size
                     (const Kentik__Ktbgp__V202501__RouteServiceWithdrawRequest   *message);
size_t kentik__ktbgp__v202501__route_service_withdraw_request__pack
                     (const Kentik__Ktbgp__V202501__RouteServiceWithdrawRequest   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__route_service_withdraw_request__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__RouteServiceWithdrawRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__RouteServiceWithdrawRequest *
       kentik__ktbgp__v202501__route_service_withdraw_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__route_service_withdraw_request__free_unpacked
                     (Kentik__Ktbgp__V202501__RouteServiceWithdrawRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__Withdraw methods */
void   kentik__ktbgp__v202501__withdraw__init
                     (Kentik__Ktbgp__V202501__Withdraw         *message);
size_t kentik__ktbgp__v202501__withdraw__get_packed_size
                     (const Kentik__Ktbgp__V202501__Withdraw   *message);
size_t kentik__ktbgp__v202501__withdraw__pack
                     (const Kentik__Ktbgp__V202501__Withdraw   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__withdraw__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__Withdraw   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__Withdraw *
       kentik__ktbgp__v202501__withdraw__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__withdraw__free_unpacked
                     (Kentik__Ktbgp__V202501__Withdraw *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__RouteServiceWithdrawResponse methods */
void   kentik__ktbgp__v202501__route_service_withdraw_response__init
                     (Kentik__Ktbgp__V202501__RouteServiceWithdrawResponse         *message);
size_t kentik__ktbgp__v202501__route_service_withdraw_response__get_packed_size
                     (const Kentik__Ktbgp__V202501__RouteServiceWithdrawResponse   *message);
size_t kentik__ktbgp__v202501__route_service_withdraw_response__pack
                     (const Kentik__Ktbgp__V202501__RouteServiceWithdrawResponse   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__route_service_withdraw_response__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__RouteServiceWithdrawResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__RouteServiceWithdrawResponse *
       kentik__ktbgp__v202501__route_service_withdraw_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__route_service_withdraw_response__free_unpacked
                     (Kentik__Ktbgp__V202501__RouteServiceWithdrawResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__FlowspecAction methods */
void   kentik__ktbgp__v202501__flowspec_action__init
                     (Kentik__Ktbgp__V202501__FlowspecAction         *message);
size_t kentik__ktbgp__v202501__flowspec_action__get_packed_size
                     (const Kentik__Ktbgp__V202501__FlowspecAction   *message);
size_t kentik__ktbgp__v202501__flowspec_action__pack
                     (const Kentik__Ktbgp__V202501__FlowspecAction   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__flowspec_action__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__FlowspecAction   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__FlowspecAction *
       kentik__ktbgp__v202501__flowspec_action__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__flowspec_action__free_unpacked
                     (Kentik__Ktbgp__V202501__FlowspecAction *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__FlowspecUpdate methods */
void   kentik__ktbgp__v202501__flowspec_update__init
                     (Kentik__Ktbgp__V202501__FlowspecUpdate         *message);
size_t kentik__ktbgp__v202501__flowspec_update__get_packed_size
                     (const Kentik__Ktbgp__V202501__FlowspecUpdate   *message);
size_t kentik__ktbgp__v202501__flowspec_update__pack
                     (const Kentik__Ktbgp__V202501__FlowspecUpdate   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__flowspec_update__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__FlowspecUpdate   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__FlowspecUpdate *
       kentik__ktbgp__v202501__flowspec_update__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__flowspec_update__free_unpacked
                     (Kentik__Ktbgp__V202501__FlowspecUpdate *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__FlowspecUpdates methods */
void   kentik__ktbgp__v202501__flowspec_updates__init
                     (Kentik__Ktbgp__V202501__FlowspecUpdates         *message);
size_t kentik__ktbgp__v202501__flowspec_updates__get_packed_size
                     (const Kentik__Ktbgp__V202501__FlowspecUpdates   *message);
size_t kentik__ktbgp__v202501__flowspec_updates__pack
                     (const Kentik__Ktbgp__V202501__FlowspecUpdates   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__flowspec_updates__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__FlowspecUpdates   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__FlowspecUpdates *
       kentik__ktbgp__v202501__flowspec_updates__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__flowspec_updates__free_unpacked
                     (Kentik__Ktbgp__V202501__FlowspecUpdates *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__RTBHUpdate methods */
void   kentik__ktbgp__v202501__rtbhupdate__init
                     (Kentik__Ktbgp__V202501__RTBHUpdate         *message);
size_t kentik__ktbgp__v202501__rtbhupdate__get_packed_size
                     (const Kentik__Ktbgp__V202501__RTBHUpdate   *message);
size_t kentik__ktbgp__v202501__rtbhupdate__pack
                     (const Kentik__Ktbgp__V202501__RTBHUpdate   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__rtbhupdate__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__RTBHUpdate   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__RTBHUpdate *
       kentik__ktbgp__v202501__rtbhupdate__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__rtbhupdate__free_unpacked
                     (Kentik__Ktbgp__V202501__RTBHUpdate *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__RTBHUpdates methods */
void   kentik__ktbgp__v202501__rtbhupdates__init
                     (Kentik__Ktbgp__V202501__RTBHUpdates         *message);
size_t kentik__ktbgp__v202501__rtbhupdates__get_packed_size
                     (const Kentik__Ktbgp__V202501__RTBHUpdates   *message);
size_t kentik__ktbgp__v202501__rtbhupdates__pack
                     (const Kentik__Ktbgp__V202501__RTBHUpdates   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__rtbhupdates__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__RTBHUpdates   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__RTBHUpdates *
       kentik__ktbgp__v202501__rtbhupdates__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__rtbhupdates__free_unpacked
                     (Kentik__Ktbgp__V202501__RTBHUpdates *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__FlowspecMatch methods */
void   kentik__ktbgp__v202501__flowspec_match__init
                     (Kentik__Ktbgp__V202501__FlowspecMatch         *message);
size_t kentik__ktbgp__v202501__flowspec_match__get_packed_size
                     (const Kentik__Ktbgp__V202501__FlowspecMatch   *message);
size_t kentik__ktbgp__v202501__flowspec_match__pack
                     (const Kentik__Ktbgp__V202501__FlowspecMatch   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__flowspec_match__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__FlowspecMatch   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__FlowspecMatch *
       kentik__ktbgp__v202501__flowspec_match__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__flowspec_match__free_unpacked
                     (Kentik__Ktbgp__V202501__FlowspecMatch *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__FlowspecActionTrafficRateBytes methods */
void   kentik__ktbgp__v202501__flowspec_action_traffic_rate_bytes__init
                     (Kentik__Ktbgp__V202501__FlowspecActionTrafficRateBytes         *message);
size_t kentik__ktbgp__v202501__flowspec_action_traffic_rate_bytes__get_packed_size
                     (const Kentik__Ktbgp__V202501__FlowspecActionTrafficRateBytes   *message);
size_t kentik__ktbgp__v202501__flowspec_action_traffic_rate_bytes__pack
                     (const Kentik__Ktbgp__V202501__FlowspecActionTrafficRateBytes   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__flowspec_action_traffic_rate_bytes__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__FlowspecActionTrafficRateBytes   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__FlowspecActionTrafficRateBytes *
       kentik__ktbgp__v202501__flowspec_action_traffic_rate_bytes__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__flowspec_action_traffic_rate_bytes__free_unpacked
                     (Kentik__Ktbgp__V202501__FlowspecActionTrafficRateBytes *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__FlowspecActionAccept methods */
void   kentik__ktbgp__v202501__flowspec_action_accept__init
                     (Kentik__Ktbgp__V202501__FlowspecActionAccept         *message);
size_t kentik__ktbgp__v202501__flowspec_action_accept__get_packed_size
                     (const Kentik__Ktbgp__V202501__FlowspecActionAccept   *message);
size_t kentik__ktbgp__v202501__flowspec_action_accept__pack
                     (const Kentik__Ktbgp__V202501__FlowspecActionAccept   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__flowspec_action_accept__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__FlowspecActionAccept   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__FlowspecActionAccept *
       kentik__ktbgp__v202501__flowspec_action_accept__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__flowspec_action_accept__free_unpacked
                     (Kentik__Ktbgp__V202501__FlowspecActionAccept *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__FlowspecActionDiscard methods */
void   kentik__ktbgp__v202501__flowspec_action_discard__init
                     (Kentik__Ktbgp__V202501__FlowspecActionDiscard         *message);
size_t kentik__ktbgp__v202501__flowspec_action_discard__get_packed_size
                     (const Kentik__Ktbgp__V202501__FlowspecActionDiscard   *message);
size_t kentik__ktbgp__v202501__flowspec_action_discard__pack
                     (const Kentik__Ktbgp__V202501__FlowspecActionDiscard   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__flowspec_action_discard__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__FlowspecActionDiscard   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__FlowspecActionDiscard *
       kentik__ktbgp__v202501__flowspec_action_discard__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__flowspec_action_discard__free_unpacked
                     (Kentik__Ktbgp__V202501__FlowspecActionDiscard *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__FlowspecActionTerminalSample methods */
void   kentik__ktbgp__v202501__flowspec_action_terminal_sample__init
                     (Kentik__Ktbgp__V202501__FlowspecActionTerminalSample         *message);
size_t kentik__ktbgp__v202501__flowspec_action_terminal_sample__get_packed_size
                     (const Kentik__Ktbgp__V202501__FlowspecActionTerminalSample   *message);
size_t kentik__ktbgp__v202501__flowspec_action_terminal_sample__pack
                     (const Kentik__Ktbgp__V202501__FlowspecActionTerminalSample   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__flowspec_action_terminal_sample__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__FlowspecActionTerminalSample   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__FlowspecActionTerminalSample *
       kentik__ktbgp__v202501__flowspec_action_terminal_sample__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__flowspec_action_terminal_sample__free_unpacked
                     (Kentik__Ktbgp__V202501__FlowspecActionTerminalSample *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__FlowspecActionMarkDSCP methods */
void   kentik__ktbgp__v202501__flowspec_action_mark_dscp__init
                     (Kentik__Ktbgp__V202501__FlowspecActionMarkDSCP         *message);
size_t kentik__ktbgp__v202501__flowspec_action_mark_dscp__get_packed_size
                     (const Kentik__Ktbgp__V202501__FlowspecActionMarkDSCP   *message);
size_t kentik__ktbgp__v202501__flowspec_action_mark_dscp__pack
                     (const Kentik__Ktbgp__V202501__FlowspecActionMarkDSCP   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__flowspec_action_mark_dscp__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__FlowspecActionMarkDSCP   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__FlowspecActionMarkDSCP *
       kentik__ktbgp__v202501__flowspec_action_mark_dscp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__flowspec_action_mark_dscp__free_unpacked
                     (Kentik__Ktbgp__V202501__FlowspecActionMarkDSCP *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__FlowspecActionRouteTargetRedirect methods */
void   kentik__ktbgp__v202501__flowspec_action_route_target_redirect__init
                     (Kentik__Ktbgp__V202501__FlowspecActionRouteTargetRedirect         *message);
size_t kentik__ktbgp__v202501__flowspec_action_route_target_redirect__get_packed_size
                     (const Kentik__Ktbgp__V202501__FlowspecActionRouteTargetRedirect   *message);
size_t kentik__ktbgp__v202501__flowspec_action_route_target_redirect__pack
                     (const Kentik__Ktbgp__V202501__FlowspecActionRouteTargetRedirect   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__flowspec_action_route_target_redirect__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__FlowspecActionRouteTargetRedirect   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__FlowspecActionRouteTargetRedirect *
       kentik__ktbgp__v202501__flowspec_action_route_target_redirect__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__flowspec_action_route_target_redirect__free_unpacked
                     (Kentik__Ktbgp__V202501__FlowspecActionRouteTargetRedirect *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__FlowspecActionIPNextHopRedirect methods */
void   kentik__ktbgp__v202501__flowspec_action_ipnext_hop_redirect__init
                     (Kentik__Ktbgp__V202501__FlowspecActionIPNextHopRedirect         *message);
size_t kentik__ktbgp__v202501__flowspec_action_ipnext_hop_redirect__get_packed_size
                     (const Kentik__Ktbgp__V202501__FlowspecActionIPNextHopRedirect   *message);
size_t kentik__ktbgp__v202501__flowspec_action_ipnext_hop_redirect__pack
                     (const Kentik__Ktbgp__V202501__FlowspecActionIPNextHopRedirect   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__flowspec_action_ipnext_hop_redirect__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__FlowspecActionIPNextHopRedirect   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__FlowspecActionIPNextHopRedirect *
       kentik__ktbgp__v202501__flowspec_action_ipnext_hop_redirect__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__flowspec_action_ipnext_hop_redirect__free_unpacked
                     (Kentik__Ktbgp__V202501__FlowspecActionIPNextHopRedirect *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__FlowspecActionIPNextHopCopy methods */
void   kentik__ktbgp__v202501__flowspec_action_ipnext_hop_copy__init
                     (Kentik__Ktbgp__V202501__FlowspecActionIPNextHopCopy         *message);
size_t kentik__ktbgp__v202501__flowspec_action_ipnext_hop_copy__get_packed_size
                     (const Kentik__Ktbgp__V202501__FlowspecActionIPNextHopCopy   *message);
size_t kentik__ktbgp__v202501__flowspec_action_ipnext_hop_copy__pack
                     (const Kentik__Ktbgp__V202501__FlowspecActionIPNextHopCopy   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__flowspec_action_ipnext_hop_copy__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__FlowspecActionIPNextHopCopy   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__FlowspecActionIPNextHopCopy *
       kentik__ktbgp__v202501__flowspec_action_ipnext_hop_copy__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__flowspec_action_ipnext_hop_copy__free_unpacked
                     (Kentik__Ktbgp__V202501__FlowspecActionIPNextHopCopy *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__FlowspecActionRegularCommunity methods */
void   kentik__ktbgp__v202501__flowspec_action_regular_community__init
                     (Kentik__Ktbgp__V202501__FlowspecActionRegularCommunity         *message);
size_t kentik__ktbgp__v202501__flowspec_action_regular_community__get_packed_size
                     (const Kentik__Ktbgp__V202501__FlowspecActionRegularCommunity   *message);
size_t kentik__ktbgp__v202501__flowspec_action_regular_community__pack
                     (const Kentik__Ktbgp__V202501__FlowspecActionRegularCommunity   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__flowspec_action_regular_community__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__FlowspecActionRegularCommunity   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__FlowspecActionRegularCommunity *
       kentik__ktbgp__v202501__flowspec_action_regular_community__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__flowspec_action_regular_community__free_unpacked
                     (Kentik__Ktbgp__V202501__FlowspecActionRegularCommunity *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__FlowspecActionExtendedCommunity methods */
void   kentik__ktbgp__v202501__flowspec_action_extended_community__init
                     (Kentik__Ktbgp__V202501__FlowspecActionExtendedCommunity         *message);
size_t kentik__ktbgp__v202501__flowspec_action_extended_community__get_packed_size
                     (const Kentik__Ktbgp__V202501__FlowspecActionExtendedCommunity   *message);
size_t kentik__ktbgp__v202501__flowspec_action_extended_community__pack
                     (const Kentik__Ktbgp__V202501__FlowspecActionExtendedCommunity   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__flowspec_action_extended_community__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__FlowspecActionExtendedCommunity   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__FlowspecActionExtendedCommunity *
       kentik__ktbgp__v202501__flowspec_action_extended_community__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__flowspec_action_extended_community__free_unpacked
                     (Kentik__Ktbgp__V202501__FlowspecActionExtendedCommunity *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__FlowspecActionLargeCommunity methods */
void   kentik__ktbgp__v202501__flowspec_action_large_community__init
                     (Kentik__Ktbgp__V202501__FlowspecActionLargeCommunity         *message);
size_t kentik__ktbgp__v202501__flowspec_action_large_community__get_packed_size
                     (const Kentik__Ktbgp__V202501__FlowspecActionLargeCommunity   *message);
size_t kentik__ktbgp__v202501__flowspec_action_large_community__pack
                     (const Kentik__Ktbgp__V202501__FlowspecActionLargeCommunity   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__flowspec_action_large_community__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__FlowspecActionLargeCommunity   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__FlowspecActionLargeCommunity *
       kentik__ktbgp__v202501__flowspec_action_large_community__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__flowspec_action_large_community__free_unpacked
                     (Kentik__Ktbgp__V202501__FlowspecActionLargeCommunity *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__RTBHMatch methods */
void   kentik__ktbgp__v202501__rtbhmatch__init
                     (Kentik__Ktbgp__V202501__RTBHMatch         *message);
size_t kentik__ktbgp__v202501__rtbhmatch__get_packed_size
                     (const Kentik__Ktbgp__V202501__RTBHMatch   *message);
size_t kentik__ktbgp__v202501__rtbhmatch__pack
                     (const Kentik__Ktbgp__V202501__RTBHMatch   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__rtbhmatch__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__RTBHMatch   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__RTBHMatch *
       kentik__ktbgp__v202501__rtbhmatch__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__rtbhmatch__free_unpacked
                     (Kentik__Ktbgp__V202501__RTBHMatch *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__RTBHAction methods */
void   kentik__ktbgp__v202501__rtbhaction__init
                     (Kentik__Ktbgp__V202501__RTBHAction         *message);
size_t kentik__ktbgp__v202501__rtbhaction__get_packed_size
                     (const Kentik__Ktbgp__V202501__RTBHAction   *message);
size_t kentik__ktbgp__v202501__rtbhaction__pack
                     (const Kentik__Ktbgp__V202501__RTBHAction   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__rtbhaction__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__RTBHAction   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__RTBHAction *
       kentik__ktbgp__v202501__rtbhaction__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__rtbhaction__free_unpacked
                     (Kentik__Ktbgp__V202501__RTBHAction *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__NumericFormula methods */
void   kentik__ktbgp__v202501__numeric_formula__init
                     (Kentik__Ktbgp__V202501__NumericFormula         *message);
size_t kentik__ktbgp__v202501__numeric_formula__get_packed_size
                     (const Kentik__Ktbgp__V202501__NumericFormula   *message);
size_t kentik__ktbgp__v202501__numeric_formula__pack
                     (const Kentik__Ktbgp__V202501__NumericFormula   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__numeric_formula__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__NumericFormula   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__NumericFormula *
       kentik__ktbgp__v202501__numeric_formula__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__numeric_formula__free_unpacked
                     (Kentik__Ktbgp__V202501__NumericFormula *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__NumericPredicateGroup methods */
void   kentik__ktbgp__v202501__numeric_predicate_group__init
                     (Kentik__Ktbgp__V202501__NumericPredicateGroup         *message);
size_t kentik__ktbgp__v202501__numeric_predicate_group__get_packed_size
                     (const Kentik__Ktbgp__V202501__NumericPredicateGroup   *message);
size_t kentik__ktbgp__v202501__numeric_predicate_group__pack
                     (const Kentik__Ktbgp__V202501__NumericPredicateGroup   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__numeric_predicate_group__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__NumericPredicateGroup   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__NumericPredicateGroup *
       kentik__ktbgp__v202501__numeric_predicate_group__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__numeric_predicate_group__free_unpacked
                     (Kentik__Ktbgp__V202501__NumericPredicateGroup *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__NumericPredicate methods */
void   kentik__ktbgp__v202501__numeric_predicate__init
                     (Kentik__Ktbgp__V202501__NumericPredicate         *message);
size_t kentik__ktbgp__v202501__numeric_predicate__get_packed_size
                     (const Kentik__Ktbgp__V202501__NumericPredicate   *message);
size_t kentik__ktbgp__v202501__numeric_predicate__pack
                     (const Kentik__Ktbgp__V202501__NumericPredicate   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__numeric_predicate__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__NumericPredicate   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__NumericPredicate *
       kentik__ktbgp__v202501__numeric_predicate__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__numeric_predicate__free_unpacked
                     (Kentik__Ktbgp__V202501__NumericPredicate *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__FragmentFormula methods */
void   kentik__ktbgp__v202501__fragment_formula__init
                     (Kentik__Ktbgp__V202501__FragmentFormula         *message);
size_t kentik__ktbgp__v202501__fragment_formula__get_packed_size
                     (const Kentik__Ktbgp__V202501__FragmentFormula   *message);
size_t kentik__ktbgp__v202501__fragment_formula__pack
                     (const Kentik__Ktbgp__V202501__FragmentFormula   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__fragment_formula__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__FragmentFormula   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__FragmentFormula *
       kentik__ktbgp__v202501__fragment_formula__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__fragment_formula__free_unpacked
                     (Kentik__Ktbgp__V202501__FragmentFormula *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__FragmentPredicateGroup methods */
void   kentik__ktbgp__v202501__fragment_predicate_group__init
                     (Kentik__Ktbgp__V202501__FragmentPredicateGroup         *message);
size_t kentik__ktbgp__v202501__fragment_predicate_group__get_packed_size
                     (const Kentik__Ktbgp__V202501__FragmentPredicateGroup   *message);
size_t kentik__ktbgp__v202501__fragment_predicate_group__pack
                     (const Kentik__Ktbgp__V202501__FragmentPredicateGroup   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__fragment_predicate_group__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__FragmentPredicateGroup   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__FragmentPredicateGroup *
       kentik__ktbgp__v202501__fragment_predicate_group__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__fragment_predicate_group__free_unpacked
                     (Kentik__Ktbgp__V202501__FragmentPredicateGroup *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__FragmentPredicate methods */
void   kentik__ktbgp__v202501__fragment_predicate__init
                     (Kentik__Ktbgp__V202501__FragmentPredicate         *message);
size_t kentik__ktbgp__v202501__fragment_predicate__get_packed_size
                     (const Kentik__Ktbgp__V202501__FragmentPredicate   *message);
size_t kentik__ktbgp__v202501__fragment_predicate__pack
                     (const Kentik__Ktbgp__V202501__FragmentPredicate   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__fragment_predicate__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__FragmentPredicate   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__FragmentPredicate *
       kentik__ktbgp__v202501__fragment_predicate__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__fragment_predicate__free_unpacked
                     (Kentik__Ktbgp__V202501__FragmentPredicate *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__TCPFlagsFormula methods */
void   kentik__ktbgp__v202501__tcpflags_formula__init
                     (Kentik__Ktbgp__V202501__TCPFlagsFormula         *message);
size_t kentik__ktbgp__v202501__tcpflags_formula__get_packed_size
                     (const Kentik__Ktbgp__V202501__TCPFlagsFormula   *message);
size_t kentik__ktbgp__v202501__tcpflags_formula__pack
                     (const Kentik__Ktbgp__V202501__TCPFlagsFormula   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__tcpflags_formula__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__TCPFlagsFormula   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__TCPFlagsFormula *
       kentik__ktbgp__v202501__tcpflags_formula__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__tcpflags_formula__free_unpacked
                     (Kentik__Ktbgp__V202501__TCPFlagsFormula *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__TCPFlagsPredicateGroup methods */
void   kentik__ktbgp__v202501__tcpflags_predicate_group__init
                     (Kentik__Ktbgp__V202501__TCPFlagsPredicateGroup         *message);
size_t kentik__ktbgp__v202501__tcpflags_predicate_group__get_packed_size
                     (const Kentik__Ktbgp__V202501__TCPFlagsPredicateGroup   *message);
size_t kentik__ktbgp__v202501__tcpflags_predicate_group__pack
                     (const Kentik__Ktbgp__V202501__TCPFlagsPredicateGroup   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__tcpflags_predicate_group__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__TCPFlagsPredicateGroup   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__TCPFlagsPredicateGroup *
       kentik__ktbgp__v202501__tcpflags_predicate_group__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__tcpflags_predicate_group__free_unpacked
                     (Kentik__Ktbgp__V202501__TCPFlagsPredicateGroup *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__TCPFlagsPredicate methods */
void   kentik__ktbgp__v202501__tcpflags_predicate__init
                     (Kentik__Ktbgp__V202501__TCPFlagsPredicate         *message);
size_t kentik__ktbgp__v202501__tcpflags_predicate__get_packed_size
                     (const Kentik__Ktbgp__V202501__TCPFlagsPredicate   *message);
size_t kentik__ktbgp__v202501__tcpflags_predicate__pack
                     (const Kentik__Ktbgp__V202501__TCPFlagsPredicate   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__tcpflags_predicate__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__TCPFlagsPredicate   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__TCPFlagsPredicate *
       kentik__ktbgp__v202501__tcpflags_predicate__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__tcpflags_predicate__free_unpacked
                     (Kentik__Ktbgp__V202501__TCPFlagsPredicate *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__UpdateResult methods */
void   kentik__ktbgp__v202501__update_result__init
                     (Kentik__Ktbgp__V202501__UpdateResult         *message);
size_t kentik__ktbgp__v202501__update_result__get_packed_size
                     (const Kentik__Ktbgp__V202501__UpdateResult   *message);
size_t kentik__ktbgp__v202501__update_result__pack
                     (const Kentik__Ktbgp__V202501__UpdateResult   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__update_result__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__UpdateResult   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__UpdateResult *
       kentik__ktbgp__v202501__update_result__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__update_result__free_unpacked
                     (Kentik__Ktbgp__V202501__UpdateResult *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__RouteServiceListRequest methods */
void   kentik__ktbgp__v202501__route_service_list_request__init
                     (Kentik__Ktbgp__V202501__RouteServiceListRequest         *message);
size_t kentik__ktbgp__v202501__route_service_list_request__get_packed_size
                     (const Kentik__Ktbgp__V202501__RouteServiceListRequest   *message);
size_t kentik__ktbgp__v202501__route_service_list_request__pack
                     (const Kentik__Ktbgp__V202501__RouteServiceListRequest   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__route_service_list_request__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__RouteServiceListRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__RouteServiceListRequest *
       kentik__ktbgp__v202501__route_service_list_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__route_service_list_request__free_unpacked
                     (Kentik__Ktbgp__V202501__RouteServiceListRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__RoutesFilter methods */
void   kentik__ktbgp__v202501__routes_filter__init
                     (Kentik__Ktbgp__V202501__RoutesFilter         *message);
size_t kentik__ktbgp__v202501__routes_filter__get_packed_size
                     (const Kentik__Ktbgp__V202501__RoutesFilter   *message);
size_t kentik__ktbgp__v202501__routes_filter__pack
                     (const Kentik__Ktbgp__V202501__RoutesFilter   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__routes_filter__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__RoutesFilter   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__RoutesFilter *
       kentik__ktbgp__v202501__routes_filter__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__routes_filter__free_unpacked
                     (Kentik__Ktbgp__V202501__RoutesFilter *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__RouteServiceListResponse methods */
void   kentik__ktbgp__v202501__route_service_list_response__init
                     (Kentik__Ktbgp__V202501__RouteServiceListResponse         *message);
size_t kentik__ktbgp__v202501__route_service_list_response__get_packed_size
                     (const Kentik__Ktbgp__V202501__RouteServiceListResponse   *message);
size_t kentik__ktbgp__v202501__route_service_list_response__pack
                     (const Kentik__Ktbgp__V202501__RouteServiceListResponse   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__route_service_list_response__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__RouteServiceListResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__RouteServiceListResponse *
       kentik__ktbgp__v202501__route_service_list_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__route_service_list_response__free_unpacked
                     (Kentik__Ktbgp__V202501__RouteServiceListResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktbgp__V202501__DeviceAdverts methods */
void   kentik__ktbgp__v202501__device_adverts__init
                     (Kentik__Ktbgp__V202501__DeviceAdverts         *message);
size_t kentik__ktbgp__v202501__device_adverts__get_packed_size
                     (const Kentik__Ktbgp__V202501__DeviceAdverts   *message);
size_t kentik__ktbgp__v202501__device_adverts__pack
                     (const Kentik__Ktbgp__V202501__DeviceAdverts   *message,
                      uint8_t             *out);
size_t kentik__ktbgp__v202501__device_adverts__pack_to_buffer
                     (const Kentik__Ktbgp__V202501__DeviceAdverts   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktbgp__V202501__DeviceAdverts *
       kentik__ktbgp__v202501__device_adverts__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktbgp__v202501__device_adverts__free_unpacked
                     (Kentik__Ktbgp__V202501__DeviceAdverts *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Kentik__Ktbgp__V202501__RouteServiceAnnounceRequest_Closure)
                 (const Kentik__Ktbgp__V202501__RouteServiceAnnounceRequest *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__RouteServiceAnnounceResponse_Closure)
                 (const Kentik__Ktbgp__V202501__RouteServiceAnnounceResponse *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__RouteServiceWithdrawRequest_Closure)
                 (const Kentik__Ktbgp__V202501__RouteServiceWithdrawRequest *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__Withdraw_Closure)
                 (const Kentik__Ktbgp__V202501__Withdraw *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__RouteServiceWithdrawResponse_Closure)
                 (const Kentik__Ktbgp__V202501__RouteServiceWithdrawResponse *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__FlowspecAction_Closure)
                 (const Kentik__Ktbgp__V202501__FlowspecAction *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__FlowspecUpdate_Closure)
                 (const Kentik__Ktbgp__V202501__FlowspecUpdate *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__FlowspecUpdates_Closure)
                 (const Kentik__Ktbgp__V202501__FlowspecUpdates *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__RTBHUpdate_Closure)
                 (const Kentik__Ktbgp__V202501__RTBHUpdate *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__RTBHUpdates_Closure)
                 (const Kentik__Ktbgp__V202501__RTBHUpdates *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__FlowspecMatch_Closure)
                 (const Kentik__Ktbgp__V202501__FlowspecMatch *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__FlowspecActionTrafficRateBytes_Closure)
                 (const Kentik__Ktbgp__V202501__FlowspecActionTrafficRateBytes *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__FlowspecActionAccept_Closure)
                 (const Kentik__Ktbgp__V202501__FlowspecActionAccept *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__FlowspecActionDiscard_Closure)
                 (const Kentik__Ktbgp__V202501__FlowspecActionDiscard *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__FlowspecActionTerminalSample_Closure)
                 (const Kentik__Ktbgp__V202501__FlowspecActionTerminalSample *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__FlowspecActionMarkDSCP_Closure)
                 (const Kentik__Ktbgp__V202501__FlowspecActionMarkDSCP *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__FlowspecActionRouteTargetRedirect_Closure)
                 (const Kentik__Ktbgp__V202501__FlowspecActionRouteTargetRedirect *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__FlowspecActionIPNextHopRedirect_Closure)
                 (const Kentik__Ktbgp__V202501__FlowspecActionIPNextHopRedirect *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__FlowspecActionIPNextHopCopy_Closure)
                 (const Kentik__Ktbgp__V202501__FlowspecActionIPNextHopCopy *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__FlowspecActionRegularCommunity_Closure)
                 (const Kentik__Ktbgp__V202501__FlowspecActionRegularCommunity *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__FlowspecActionExtendedCommunity_Closure)
                 (const Kentik__Ktbgp__V202501__FlowspecActionExtendedCommunity *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__FlowspecActionLargeCommunity_Closure)
                 (const Kentik__Ktbgp__V202501__FlowspecActionLargeCommunity *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__RTBHMatch_Closure)
                 (const Kentik__Ktbgp__V202501__RTBHMatch *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__RTBHAction_Closure)
                 (const Kentik__Ktbgp__V202501__RTBHAction *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__NumericFormula_Closure)
                 (const Kentik__Ktbgp__V202501__NumericFormula *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__NumericPredicateGroup_Closure)
                 (const Kentik__Ktbgp__V202501__NumericPredicateGroup *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__NumericPredicate_Closure)
                 (const Kentik__Ktbgp__V202501__NumericPredicate *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__FragmentFormula_Closure)
                 (const Kentik__Ktbgp__V202501__FragmentFormula *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__FragmentPredicateGroup_Closure)
                 (const Kentik__Ktbgp__V202501__FragmentPredicateGroup *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__FragmentPredicate_Closure)
                 (const Kentik__Ktbgp__V202501__FragmentPredicate *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__TCPFlagsFormula_Closure)
                 (const Kentik__Ktbgp__V202501__TCPFlagsFormula *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__TCPFlagsPredicateGroup_Closure)
                 (const Kentik__Ktbgp__V202501__TCPFlagsPredicateGroup *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__TCPFlagsPredicate_Closure)
                 (const Kentik__Ktbgp__V202501__TCPFlagsPredicate *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__UpdateResult_Closure)
                 (const Kentik__Ktbgp__V202501__UpdateResult *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__RouteServiceListRequest_Closure)
                 (const Kentik__Ktbgp__V202501__RouteServiceListRequest *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__RoutesFilter_Closure)
                 (const Kentik__Ktbgp__V202501__RoutesFilter *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__RouteServiceListResponse_Closure)
                 (const Kentik__Ktbgp__V202501__RouteServiceListResponse *message,
                  void *closure_data);
typedef void (*Kentik__Ktbgp__V202501__DeviceAdverts_Closure)
                 (const Kentik__Ktbgp__V202501__DeviceAdverts *message,
                  void *closure_data);

/* --- services --- */

typedef struct Kentik__Ktbgp__V202501__RouteService_Service Kentik__Ktbgp__V202501__RouteService_Service;
struct Kentik__Ktbgp__V202501__RouteService_Service
{
  ProtobufCService base;
  void (*announce)(Kentik__Ktbgp__V202501__RouteService_Service *service,
                   const Kentik__Ktbgp__V202501__RouteServiceAnnounceRequest *input,
                   Kentik__Ktbgp__V202501__RouteServiceAnnounceResponse_Closure closure,
                   void *closure_data);
  void (*withdraw)(Kentik__Ktbgp__V202501__RouteService_Service *service,
                   const Kentik__Ktbgp__V202501__RouteServiceWithdrawRequest *input,
                   Kentik__Ktbgp__V202501__RouteServiceWithdrawResponse_Closure closure,
                   void *closure_data);
  void (*list)(Kentik__Ktbgp__V202501__RouteService_Service *service,
               const Kentik__Ktbgp__V202501__RouteServiceListRequest *input,
               Kentik__Ktbgp__V202501__RouteServiceListResponse_Closure closure,
               void *closure_data);
};
typedef void (*Kentik__Ktbgp__V202501__RouteService_ServiceDestroy)(Kentik__Ktbgp__V202501__RouteService_Service *);
void kentik__ktbgp__v202501__route_service__init (Kentik__Ktbgp__V202501__RouteService_Service *service,
                                                  Kentik__Ktbgp__V202501__RouteService_ServiceDestroy destroy);
#define KENTIK__KTBGP__V202501__ROUTE_SERVICE__BASE_INIT \
    { &kentik__ktbgp__v202501__route_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define KENTIK__KTBGP__V202501__ROUTE_SERVICE__INIT(function_prefix__) \
    { KENTIK__KTBGP__V202501__ROUTE_SERVICE__BASE_INIT,\
      function_prefix__ ## announce,\
      function_prefix__ ## withdraw,\
      function_prefix__ ## list  }
void kentik__ktbgp__v202501__route_service__announce(ProtobufCService *service,
                                                     const Kentik__Ktbgp__V202501__RouteServiceAnnounceRequest *input,
                                                     Kentik__Ktbgp__V202501__RouteServiceAnnounceResponse_Closure closure,
                                                     void *closure_data);
void kentik__ktbgp__v202501__route_service__withdraw(ProtobufCService *service,
                                                     const Kentik__Ktbgp__V202501__RouteServiceWithdrawRequest *input,
                                                     Kentik__Ktbgp__V202501__RouteServiceWithdrawResponse_Closure closure,
                                                     void *closure_data);
void kentik__ktbgp__v202501__route_service__list(ProtobufCService *service,
                                                 const Kentik__Ktbgp__V202501__RouteServiceListRequest *input,
                                                 Kentik__Ktbgp__V202501__RouteServiceListResponse_Closure closure,
                                                 void *closure_data);

/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    kentik__ktbgp__v202501__inet_type__descriptor;
extern const ProtobufCEnumDescriptor    kentik__ktbgp__v202501__extended_community_route_type__descriptor;
extern const ProtobufCEnumDescriptor    kentik__ktbgp__v202501__fragment__descriptor;
extern const ProtobufCEnumDescriptor    kentik__ktbgp__v202501__tcpflag__descriptor;
extern const ProtobufCEnumDescriptor    kentik__ktbgp__v202501__numeric_op__descriptor;
extern const ProtobufCEnumDescriptor    kentik__ktbgp__v202501__bitwise_op__descriptor;
extern const ProtobufCEnumDescriptor    kentik__ktbgp__v202501__advert_status__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__route_service_announce_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__route_service_announce_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__route_service_withdraw_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__withdraw__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__route_service_withdraw_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__flowspec_action__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__flowspec_update__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__flowspec_updates__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__rtbhupdate__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__rtbhupdates__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__flowspec_match__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__flowspec_action_traffic_rate_bytes__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__flowspec_action_accept__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__flowspec_action_discard__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__flowspec_action_terminal_sample__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__flowspec_action_mark_dscp__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__flowspec_action_route_target_redirect__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__flowspec_action_ipnext_hop_redirect__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__flowspec_action_ipnext_hop_copy__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__flowspec_action_regular_community__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__flowspec_action_extended_community__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__flowspec_action_large_community__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__rtbhmatch__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__rtbhaction__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__numeric_formula__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__numeric_predicate_group__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__numeric_predicate__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__fragment_formula__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__fragment_predicate_group__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__fragment_predicate__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__tcpflags_formula__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__tcpflags_predicate_group__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__tcpflags_predicate__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__update_result__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__route_service_list_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__routes_filter__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__route_service_list_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktbgp__v202501__device_adverts__descriptor;
extern const ProtobufCServiceDescriptor kentik__ktbgp__v202501__route_service__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_kentik_2fktbgp_2fv202501_2froute_5fservice_2eproto__INCLUDED */
