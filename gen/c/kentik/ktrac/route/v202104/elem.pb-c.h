/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: kentik/ktrac/route/v202104/elem.proto */

#ifndef PROTOBUF_C_kentik_2fktrac_2froute_2fv202104_2felem_2eproto__INCLUDED
#define PROTOBUF_C_kentik_2fktrac_2froute_2fv202104_2felem_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "google/protobuf/timestamp.pb-c.h"
#include "google/api/field_behavior.pb-c.h"
#include "protoc-gen-openapiv2/options/annotations.pb-c.h"

typedef struct _Kentik__Ktrac__Route__V202104__Elem Kentik__Ktrac__Route__V202104__Elem;
typedef struct _Kentik__Ktrac__Route__V202104__VantagePoint Kentik__Ktrac__Route__V202104__VantagePoint;
typedef struct _Kentik__Ktrac__Route__V202104__VantagePointTable Kentik__Ktrac__Route__V202104__VantagePointTable;
typedef struct _Kentik__Ktrac__Route__V202104__UnicastNlri Kentik__Ktrac__Route__V202104__UnicastNlri;
typedef struct _Kentik__Ktrac__Route__V202104__L3vpnNlri Kentik__Ktrac__Route__V202104__L3vpnNlri;
typedef struct _Kentik__Ktrac__Route__V202104__MplsLabelStack Kentik__Ktrac__Route__V202104__MplsLabelStack;
typedef struct _Kentik__Ktrac__Route__V202104__PeerStateElem Kentik__Ktrac__Route__V202104__PeerStateElem;
typedef struct _Kentik__Ktrac__Route__V202104__Attributes Kentik__Ktrac__Route__V202104__Attributes;
typedef struct _Kentik__Ktrac__Route__V202104__RibEntry Kentik__Ktrac__Route__V202104__RibEntry;


/* --- enums --- */

typedef enum _Kentik__Ktrac__Route__V202104__RecordType {
  KENTIK__KTRAC__ROUTE__V202104__RECORD_TYPE__RECORD_TYPE_UNSPECIFIED = 0,
  KENTIK__KTRAC__ROUTE__V202104__RECORD_TYPE__RECORD_TYPE_UPDATE = 1,
  KENTIK__KTRAC__ROUTE__V202104__RECORD_TYPE__RECORD_TYPE_RIB = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__KTRAC__ROUTE__V202104__RECORD_TYPE)
} Kentik__Ktrac__Route__V202104__RecordType;
/*
 * {{.Name}}
 */
typedef enum _Kentik__Ktrac__Route__V202104__Afi {
  KENTIK__KTRAC__ROUTE__V202104__AFI__AFI_UNSPECIFIED = 0,
  KENTIK__KTRAC__ROUTE__V202104__AFI__AFI_IP4 = 1,
  KENTIK__KTRAC__ROUTE__V202104__AFI__AFI_IP6 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__KTRAC__ROUTE__V202104__AFI)
} Kentik__Ktrac__Route__V202104__Afi;
/*
 * {{.Name}}
 */
typedef enum _Kentik__Ktrac__Route__V202104__Safi {
  KENTIK__KTRAC__ROUTE__V202104__SAFI__SAFI_UNSPECIFIED = 0,
  KENTIK__KTRAC__ROUTE__V202104__SAFI__SAFI_UNICAST = 1,
  KENTIK__KTRAC__ROUTE__V202104__SAFI__SAFI_MPLS = 4,
  KENTIK__KTRAC__ROUTE__V202104__SAFI__SAFI_L3VPN = 128
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__KTRAC__ROUTE__V202104__SAFI)
} Kentik__Ktrac__Route__V202104__Safi;
/*
 * Note: values here are +10 from those in RFC 4271
 */
typedef enum _Kentik__Ktrac__Route__V202104__Origin {
  KENTIK__KTRAC__ROUTE__V202104__ORIGIN__ORIGIN_UNSPECIFIED = 0,
  KENTIK__KTRAC__ROUTE__V202104__ORIGIN__ORIGIN_IGP = 10,
  KENTIK__KTRAC__ROUTE__V202104__ORIGIN__ORIGIN_EGP = 11,
  KENTIK__KTRAC__ROUTE__V202104__ORIGIN__ORIGIN_INCOMPLETE = 12
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__KTRAC__ROUTE__V202104__ORIGIN)
} Kentik__Ktrac__Route__V202104__Origin;
typedef enum _Kentik__Ktrac__Route__V202104__ElemType {
  KENTIK__KTRAC__ROUTE__V202104__ELEM_TYPE__ELEM_TYPE_UNSPECIFIED = 0,
  KENTIK__KTRAC__ROUTE__V202104__ELEM_TYPE__ELEM_TYPE_PEERSTATE = 10,
  KENTIK__KTRAC__ROUTE__V202104__ELEM_TYPE__ELEM_TYPE_ANNOUNCEMENT = 11,
  KENTIK__KTRAC__ROUTE__V202104__ELEM_TYPE__ELEM_TYPE_WITHDRAWAL = 12,
  KENTIK__KTRAC__ROUTE__V202104__ELEM_TYPE__ELEM_TYPE_RIB_ENTRY = 13,
  KENTIK__KTRAC__ROUTE__V202104__ELEM_TYPE__ELEM_TYPE_SYNC = 14
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__KTRAC__ROUTE__V202104__ELEM_TYPE)
} Kentik__Ktrac__Route__V202104__ElemType;
typedef enum _Kentik__Ktrac__Route__V202104__PeerState {
  KENTIK__KTRAC__ROUTE__V202104__PEER_STATE__PEER_STATE_UNSPECIFIED = 0,
  KENTIK__KTRAC__ROUTE__V202104__PEER_STATE__PEER_STATE_UP = 10,
  KENTIK__KTRAC__ROUTE__V202104__PEER_STATE__PEER_STATE_DOWN = 11
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__KTRAC__ROUTE__V202104__PEER_STATE)
} Kentik__Ktrac__Route__V202104__PeerState;
typedef enum _Kentik__Ktrac__Route__V202104__DumpPosition {
  KENTIK__KTRAC__ROUTE__V202104__DUMP_POSITION__DUMP_POSITION_UNSPECIFIED = 0,
  /*
   * No Attributes
   */
  KENTIK__KTRAC__ROUTE__V202104__DUMP_POSITION__DUMP_POSITION_START = 1,
  /*
   * Attributes will contain route information
   */
  KENTIK__KTRAC__ROUTE__V202104__DUMP_POSITION__DUMP_POSITION_MID = 2,
  /*
   * No Attributes
   */
  KENTIK__KTRAC__ROUTE__V202104__DUMP_POSITION__DUMP_POSITION_END = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__KTRAC__ROUTE__V202104__DUMP_POSITION)
} Kentik__Ktrac__Route__V202104__DumpPosition;

/* --- messages --- */

struct  _Kentik__Ktrac__Route__V202104__Elem
{
  ProtobufCMessage base;
  Google__Protobuf__Timestamp *time;
  Kentik__Ktrac__Route__V202104__RecordType record_type;
  Kentik__Ktrac__Route__V202104__VantagePoint *vantage_point;
  ProtobufCBinaryData message_id;
  uint64_t serial;
  Kentik__Ktrac__Route__V202104__Afi afi;
  Kentik__Ktrac__Route__V202104__Safi safi;
  Kentik__Ktrac__Route__V202104__ElemType type;
  size_t n_unicast_nlris;
  Kentik__Ktrac__Route__V202104__UnicastNlri **unicast_nlris;
  size_t n_l3vpn_nlris;
  Kentik__Ktrac__Route__V202104__L3vpnNlri **l3vpn_nlris;
  Kentik__Ktrac__Route__V202104__PeerStateElem *peer_state;
  Kentik__Ktrac__Route__V202104__Attributes *attributes;
  Kentik__Ktrac__Route__V202104__RibEntry *rib_entry;
};
#define KENTIK__KTRAC__ROUTE__V202104__ELEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktrac__route__v202104__elem__descriptor) \
    , NULL, KENTIK__KTRAC__ROUTE__V202104__RECORD_TYPE__RECORD_TYPE_UNSPECIFIED, NULL, {0,NULL}, 0, KENTIK__KTRAC__ROUTE__V202104__AFI__AFI_UNSPECIFIED, KENTIK__KTRAC__ROUTE__V202104__SAFI__SAFI_UNSPECIFIED, KENTIK__KTRAC__ROUTE__V202104__ELEM_TYPE__ELEM_TYPE_UNSPECIFIED, 0,NULL, 0,NULL, NULL, NULL, NULL }


/*
 * {{.Name}}
 */
struct  _Kentik__Ktrac__Route__V202104__VantagePoint
{
  ProtobufCMessage base;
  char *dataset;
  char *collector;
  uint32_t peer_asn;
  char *peer_ip;
};
#define KENTIK__KTRAC__ROUTE__V202104__VANTAGE_POINT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktrac__route__v202104__vantage_point__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string }


struct  _Kentik__Ktrac__Route__V202104__VantagePointTable
{
  ProtobufCMessage base;
  Kentik__Ktrac__Route__V202104__VantagePoint *vantage_point;
  Kentik__Ktrac__Route__V202104__Afi afi;
  Kentik__Ktrac__Route__V202104__Safi safi;
};
#define KENTIK__KTRAC__ROUTE__V202104__VANTAGE_POINT_TABLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktrac__route__v202104__vantage_point_table__descriptor) \
    , NULL, KENTIK__KTRAC__ROUTE__V202104__AFI__AFI_UNSPECIFIED, KENTIK__KTRAC__ROUTE__V202104__SAFI__SAFI_UNSPECIFIED }


struct  _Kentik__Ktrac__Route__V202104__UnicastNlri
{
  ProtobufCMessage base;
  /*
   * TODO: could consider binary encoding here to save a few bytes
   */
  char *prefix;
};
#define KENTIK__KTRAC__ROUTE__V202104__UNICAST_NLRI__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktrac__route__v202104__unicast_nlri__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Kentik__Ktrac__Route__V202104__L3vpnNlri
{
  ProtobufCMessage base;
  char *prefix;
  size_t n_labels;
  Kentik__Ktrac__Route__V202104__MplsLabelStack **labels;
  char *rd;
};
#define KENTIK__KTRAC__ROUTE__V202104__L3VPN_NLRI__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktrac__route__v202104__l3vpn_nlri__descriptor) \
    , (char *)protobuf_c_empty_string, 0,NULL, (char *)protobuf_c_empty_string }


struct  _Kentik__Ktrac__Route__V202104__MplsLabelStack
{
  ProtobufCMessage base;
  size_t n_label;
  uint32_t *label;
};
#define KENTIK__KTRAC__ROUTE__V202104__MPLS_LABEL_STACK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktrac__route__v202104__mpls_label_stack__descriptor) \
    , 0,NULL }


struct  _Kentik__Ktrac__Route__V202104__PeerStateElem
{
  ProtobufCMessage base;
  Kentik__Ktrac__Route__V202104__PeerState new_state;
};
#define KENTIK__KTRAC__ROUTE__V202104__PEER_STATE_ELEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktrac__route__v202104__peer_state_elem__descriptor) \
    , KENTIK__KTRAC__ROUTE__V202104__PEER_STATE__PEER_STATE_UNSPECIFIED }


struct  _Kentik__Ktrac__Route__V202104__Attributes
{
  ProtobufCMessage base;
  Kentik__Ktrac__Route__V202104__Origin origin;
  char *next_hop;
  size_t n_as_path;
  char **as_path;
  size_t n_communities;
  uint32_t *communities;
  size_t n_extended_communities;
  char **extended_communities;
};
#define KENTIK__KTRAC__ROUTE__V202104__ATTRIBUTES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktrac__route__v202104__attributes__descriptor) \
    , KENTIK__KTRAC__ROUTE__V202104__ORIGIN__ORIGIN_UNSPECIFIED, (char *)protobuf_c_empty_string, 0,NULL, 0,NULL, 0,NULL }


struct  _Kentik__Ktrac__Route__V202104__RibEntry
{
  ProtobufCMessage base;
  Google__Protobuf__Timestamp *dump_time;
  Kentik__Ktrac__Route__V202104__DumpPosition dump_position;
  ProtobufCBinaryData rib_id;
  /*
   * only set in DUMP_POSITION_END
   */
  uint32_t elem_count;
};
#define KENTIK__KTRAC__ROUTE__V202104__RIB_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__ktrac__route__v202104__rib_entry__descriptor) \
    , NULL, KENTIK__KTRAC__ROUTE__V202104__DUMP_POSITION__DUMP_POSITION_UNSPECIFIED, {0,NULL}, 0 }


/* Kentik__Ktrac__Route__V202104__Elem methods */
void   kentik__ktrac__route__v202104__elem__init
                     (Kentik__Ktrac__Route__V202104__Elem         *message);
size_t kentik__ktrac__route__v202104__elem__get_packed_size
                     (const Kentik__Ktrac__Route__V202104__Elem   *message);
size_t kentik__ktrac__route__v202104__elem__pack
                     (const Kentik__Ktrac__Route__V202104__Elem   *message,
                      uint8_t             *out);
size_t kentik__ktrac__route__v202104__elem__pack_to_buffer
                     (const Kentik__Ktrac__Route__V202104__Elem   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktrac__Route__V202104__Elem *
       kentik__ktrac__route__v202104__elem__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktrac__route__v202104__elem__free_unpacked
                     (Kentik__Ktrac__Route__V202104__Elem *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktrac__Route__V202104__VantagePoint methods */
void   kentik__ktrac__route__v202104__vantage_point__init
                     (Kentik__Ktrac__Route__V202104__VantagePoint         *message);
size_t kentik__ktrac__route__v202104__vantage_point__get_packed_size
                     (const Kentik__Ktrac__Route__V202104__VantagePoint   *message);
size_t kentik__ktrac__route__v202104__vantage_point__pack
                     (const Kentik__Ktrac__Route__V202104__VantagePoint   *message,
                      uint8_t             *out);
size_t kentik__ktrac__route__v202104__vantage_point__pack_to_buffer
                     (const Kentik__Ktrac__Route__V202104__VantagePoint   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktrac__Route__V202104__VantagePoint *
       kentik__ktrac__route__v202104__vantage_point__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktrac__route__v202104__vantage_point__free_unpacked
                     (Kentik__Ktrac__Route__V202104__VantagePoint *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktrac__Route__V202104__VantagePointTable methods */
void   kentik__ktrac__route__v202104__vantage_point_table__init
                     (Kentik__Ktrac__Route__V202104__VantagePointTable         *message);
size_t kentik__ktrac__route__v202104__vantage_point_table__get_packed_size
                     (const Kentik__Ktrac__Route__V202104__VantagePointTable   *message);
size_t kentik__ktrac__route__v202104__vantage_point_table__pack
                     (const Kentik__Ktrac__Route__V202104__VantagePointTable   *message,
                      uint8_t             *out);
size_t kentik__ktrac__route__v202104__vantage_point_table__pack_to_buffer
                     (const Kentik__Ktrac__Route__V202104__VantagePointTable   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktrac__Route__V202104__VantagePointTable *
       kentik__ktrac__route__v202104__vantage_point_table__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktrac__route__v202104__vantage_point_table__free_unpacked
                     (Kentik__Ktrac__Route__V202104__VantagePointTable *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktrac__Route__V202104__UnicastNlri methods */
void   kentik__ktrac__route__v202104__unicast_nlri__init
                     (Kentik__Ktrac__Route__V202104__UnicastNlri         *message);
size_t kentik__ktrac__route__v202104__unicast_nlri__get_packed_size
                     (const Kentik__Ktrac__Route__V202104__UnicastNlri   *message);
size_t kentik__ktrac__route__v202104__unicast_nlri__pack
                     (const Kentik__Ktrac__Route__V202104__UnicastNlri   *message,
                      uint8_t             *out);
size_t kentik__ktrac__route__v202104__unicast_nlri__pack_to_buffer
                     (const Kentik__Ktrac__Route__V202104__UnicastNlri   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktrac__Route__V202104__UnicastNlri *
       kentik__ktrac__route__v202104__unicast_nlri__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktrac__route__v202104__unicast_nlri__free_unpacked
                     (Kentik__Ktrac__Route__V202104__UnicastNlri *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktrac__Route__V202104__L3vpnNlri methods */
void   kentik__ktrac__route__v202104__l3vpn_nlri__init
                     (Kentik__Ktrac__Route__V202104__L3vpnNlri         *message);
size_t kentik__ktrac__route__v202104__l3vpn_nlri__get_packed_size
                     (const Kentik__Ktrac__Route__V202104__L3vpnNlri   *message);
size_t kentik__ktrac__route__v202104__l3vpn_nlri__pack
                     (const Kentik__Ktrac__Route__V202104__L3vpnNlri   *message,
                      uint8_t             *out);
size_t kentik__ktrac__route__v202104__l3vpn_nlri__pack_to_buffer
                     (const Kentik__Ktrac__Route__V202104__L3vpnNlri   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktrac__Route__V202104__L3vpnNlri *
       kentik__ktrac__route__v202104__l3vpn_nlri__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktrac__route__v202104__l3vpn_nlri__free_unpacked
                     (Kentik__Ktrac__Route__V202104__L3vpnNlri *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktrac__Route__V202104__MplsLabelStack methods */
void   kentik__ktrac__route__v202104__mpls_label_stack__init
                     (Kentik__Ktrac__Route__V202104__MplsLabelStack         *message);
size_t kentik__ktrac__route__v202104__mpls_label_stack__get_packed_size
                     (const Kentik__Ktrac__Route__V202104__MplsLabelStack   *message);
size_t kentik__ktrac__route__v202104__mpls_label_stack__pack
                     (const Kentik__Ktrac__Route__V202104__MplsLabelStack   *message,
                      uint8_t             *out);
size_t kentik__ktrac__route__v202104__mpls_label_stack__pack_to_buffer
                     (const Kentik__Ktrac__Route__V202104__MplsLabelStack   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktrac__Route__V202104__MplsLabelStack *
       kentik__ktrac__route__v202104__mpls_label_stack__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktrac__route__v202104__mpls_label_stack__free_unpacked
                     (Kentik__Ktrac__Route__V202104__MplsLabelStack *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktrac__Route__V202104__PeerStateElem methods */
void   kentik__ktrac__route__v202104__peer_state_elem__init
                     (Kentik__Ktrac__Route__V202104__PeerStateElem         *message);
size_t kentik__ktrac__route__v202104__peer_state_elem__get_packed_size
                     (const Kentik__Ktrac__Route__V202104__PeerStateElem   *message);
size_t kentik__ktrac__route__v202104__peer_state_elem__pack
                     (const Kentik__Ktrac__Route__V202104__PeerStateElem   *message,
                      uint8_t             *out);
size_t kentik__ktrac__route__v202104__peer_state_elem__pack_to_buffer
                     (const Kentik__Ktrac__Route__V202104__PeerStateElem   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktrac__Route__V202104__PeerStateElem *
       kentik__ktrac__route__v202104__peer_state_elem__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktrac__route__v202104__peer_state_elem__free_unpacked
                     (Kentik__Ktrac__Route__V202104__PeerStateElem *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktrac__Route__V202104__Attributes methods */
void   kentik__ktrac__route__v202104__attributes__init
                     (Kentik__Ktrac__Route__V202104__Attributes         *message);
size_t kentik__ktrac__route__v202104__attributes__get_packed_size
                     (const Kentik__Ktrac__Route__V202104__Attributes   *message);
size_t kentik__ktrac__route__v202104__attributes__pack
                     (const Kentik__Ktrac__Route__V202104__Attributes   *message,
                      uint8_t             *out);
size_t kentik__ktrac__route__v202104__attributes__pack_to_buffer
                     (const Kentik__Ktrac__Route__V202104__Attributes   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktrac__Route__V202104__Attributes *
       kentik__ktrac__route__v202104__attributes__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktrac__route__v202104__attributes__free_unpacked
                     (Kentik__Ktrac__Route__V202104__Attributes *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Ktrac__Route__V202104__RibEntry methods */
void   kentik__ktrac__route__v202104__rib_entry__init
                     (Kentik__Ktrac__Route__V202104__RibEntry         *message);
size_t kentik__ktrac__route__v202104__rib_entry__get_packed_size
                     (const Kentik__Ktrac__Route__V202104__RibEntry   *message);
size_t kentik__ktrac__route__v202104__rib_entry__pack
                     (const Kentik__Ktrac__Route__V202104__RibEntry   *message,
                      uint8_t             *out);
size_t kentik__ktrac__route__v202104__rib_entry__pack_to_buffer
                     (const Kentik__Ktrac__Route__V202104__RibEntry   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Ktrac__Route__V202104__RibEntry *
       kentik__ktrac__route__v202104__rib_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__ktrac__route__v202104__rib_entry__free_unpacked
                     (Kentik__Ktrac__Route__V202104__RibEntry *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Kentik__Ktrac__Route__V202104__Elem_Closure)
                 (const Kentik__Ktrac__Route__V202104__Elem *message,
                  void *closure_data);
typedef void (*Kentik__Ktrac__Route__V202104__VantagePoint_Closure)
                 (const Kentik__Ktrac__Route__V202104__VantagePoint *message,
                  void *closure_data);
typedef void (*Kentik__Ktrac__Route__V202104__VantagePointTable_Closure)
                 (const Kentik__Ktrac__Route__V202104__VantagePointTable *message,
                  void *closure_data);
typedef void (*Kentik__Ktrac__Route__V202104__UnicastNlri_Closure)
                 (const Kentik__Ktrac__Route__V202104__UnicastNlri *message,
                  void *closure_data);
typedef void (*Kentik__Ktrac__Route__V202104__L3vpnNlri_Closure)
                 (const Kentik__Ktrac__Route__V202104__L3vpnNlri *message,
                  void *closure_data);
typedef void (*Kentik__Ktrac__Route__V202104__MplsLabelStack_Closure)
                 (const Kentik__Ktrac__Route__V202104__MplsLabelStack *message,
                  void *closure_data);
typedef void (*Kentik__Ktrac__Route__V202104__PeerStateElem_Closure)
                 (const Kentik__Ktrac__Route__V202104__PeerStateElem *message,
                  void *closure_data);
typedef void (*Kentik__Ktrac__Route__V202104__Attributes_Closure)
                 (const Kentik__Ktrac__Route__V202104__Attributes *message,
                  void *closure_data);
typedef void (*Kentik__Ktrac__Route__V202104__RibEntry_Closure)
                 (const Kentik__Ktrac__Route__V202104__RibEntry *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    kentik__ktrac__route__v202104__record_type__descriptor;
extern const ProtobufCEnumDescriptor    kentik__ktrac__route__v202104__afi__descriptor;
extern const ProtobufCEnumDescriptor    kentik__ktrac__route__v202104__safi__descriptor;
extern const ProtobufCEnumDescriptor    kentik__ktrac__route__v202104__origin__descriptor;
extern const ProtobufCEnumDescriptor    kentik__ktrac__route__v202104__elem_type__descriptor;
extern const ProtobufCEnumDescriptor    kentik__ktrac__route__v202104__peer_state__descriptor;
extern const ProtobufCEnumDescriptor    kentik__ktrac__route__v202104__dump_position__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktrac__route__v202104__elem__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktrac__route__v202104__vantage_point__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktrac__route__v202104__vantage_point_table__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktrac__route__v202104__unicast_nlri__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktrac__route__v202104__l3vpn_nlri__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktrac__route__v202104__mpls_label_stack__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktrac__route__v202104__peer_state_elem__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktrac__route__v202104__attributes__descriptor;
extern const ProtobufCMessageDescriptor kentik__ktrac__route__v202104__rib_entry__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_kentik_2fktrac_2froute_2fv202104_2felem_2eproto__INCLUDED */
