/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: kentik/mkp/v202407/mkp.proto */

#ifndef PROTOBUF_C_kentik_2fmkp_2fv202407_2fmkp_2eproto__INCLUDED
#define PROTOBUF_C_kentik_2fmkp_2fv202407_2fmkp_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "google/api/annotations.pb-c.h"
#include "google/api/client.pb-c.h"
#include "google/api/field_behavior.pb-c.h"
#include "protoc-gen-openapiv2/options/annotations.pb-c.h"
#include "kentik/core/v202303/annotations.pb-c.h"
#include "kentik/user/v202211/user.pb-c.h"

typedef struct Kentik__Mkp__V202407__Alert Kentik__Mkp__V202407__Alert;
typedef struct Kentik__Mkp__V202407__Asset Kentik__Mkp__V202407__Asset;
typedef struct Kentik__Mkp__V202407__Asset__Report Kentik__Mkp__V202407__Asset__Report;
typedef struct Kentik__Mkp__V202407__Threshold Kentik__Mkp__V202407__Threshold;
typedef struct Kentik__Mkp__V202407__Activate Kentik__Mkp__V202407__Activate;
typedef struct Kentik__Mkp__V202407__Condition Kentik__Mkp__V202407__Condition;
typedef struct Kentik__Mkp__V202407__Mitigation Kentik__Mkp__V202407__Mitigation;
typedef struct Kentik__Mkp__V202407__NotificationChannel Kentik__Mkp__V202407__NotificationChannel;
typedef struct Kentik__Mkp__V202407__TenantLink Kentik__Mkp__V202407__TenantLink;
typedef struct Kentik__Mkp__V202407__Package Kentik__Mkp__V202407__Package;
typedef struct Kentik__Mkp__V202407__CustomDimension Kentik__Mkp__V202407__CustomDimension;
typedef struct Kentik__Mkp__V202407__Devices Kentik__Mkp__V202407__Devices;
typedef struct Kentik__Mkp__V202407__FilterField Kentik__Mkp__V202407__FilterField;
typedef struct Kentik__Mkp__V202407__Filter Kentik__Mkp__V202407__Filter;
typedef struct Kentik__Mkp__V202407__Tenant Kentik__Mkp__V202407__Tenant;
typedef struct Kentik__Mkp__V202407__ListPackageRequest Kentik__Mkp__V202407__ListPackageRequest;
typedef struct Kentik__Mkp__V202407__ListPackageResponse Kentik__Mkp__V202407__ListPackageResponse;
typedef struct Kentik__Mkp__V202407__GetPackageRequest Kentik__Mkp__V202407__GetPackageRequest;
typedef struct Kentik__Mkp__V202407__GetPackageResponse Kentik__Mkp__V202407__GetPackageResponse;
typedef struct Kentik__Mkp__V202407__CreatePackageRequest Kentik__Mkp__V202407__CreatePackageRequest;
typedef struct Kentik__Mkp__V202407__CreatePackageResponse Kentik__Mkp__V202407__CreatePackageResponse;
typedef struct Kentik__Mkp__V202407__UpdatePackageRequest Kentik__Mkp__V202407__UpdatePackageRequest;
typedef struct Kentik__Mkp__V202407__UpdatePackageResponse Kentik__Mkp__V202407__UpdatePackageResponse;
typedef struct Kentik__Mkp__V202407__DeletePackageRequest Kentik__Mkp__V202407__DeletePackageRequest;
typedef struct Kentik__Mkp__V202407__DeletePackageResponse Kentik__Mkp__V202407__DeletePackageResponse;
typedef struct Kentik__Mkp__V202407__ListTenantRequest Kentik__Mkp__V202407__ListTenantRequest;
typedef struct Kentik__Mkp__V202407__ListTenantResponse Kentik__Mkp__V202407__ListTenantResponse;
typedef struct Kentik__Mkp__V202407__GetTenantRequest Kentik__Mkp__V202407__GetTenantRequest;
typedef struct Kentik__Mkp__V202407__GetTenantResponse Kentik__Mkp__V202407__GetTenantResponse;
typedef struct Kentik__Mkp__V202407__CreateTenantRequest Kentik__Mkp__V202407__CreateTenantRequest;
typedef struct Kentik__Mkp__V202407__CreateTenantResponse Kentik__Mkp__V202407__CreateTenantResponse;
typedef struct Kentik__Mkp__V202407__UpdateTenantRequest Kentik__Mkp__V202407__UpdateTenantRequest;
typedef struct Kentik__Mkp__V202407__UpdateTenantResponse Kentik__Mkp__V202407__UpdateTenantResponse;
typedef struct Kentik__Mkp__V202407__DeleteTenantRequest Kentik__Mkp__V202407__DeleteTenantRequest;
typedef struct Kentik__Mkp__V202407__DeleteTenantResponse Kentik__Mkp__V202407__DeleteTenantResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__Alert
{
  ProtobufCMessage base;
  protobuf_c_boolean saved;
  char *policy_id;
  size_t n_thresholds;
  Kentik__Mkp__V202407__Threshold **thresholds;
  char *primary_metric;
  size_t n_secondary_metrics;
  char **secondary_metrics;
  protobuf_c_boolean is_template;
  char *subpolicy_id;
};
#define KENTIK__MKP__V202407__ALERT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__alert__descriptor) \
    , 0, (char *)protobuf_c_empty_string, 0,NULL, (char *)protobuf_c_empty_string, 0,NULL, 0, (char *)protobuf_c_empty_string }


struct  Kentik__Mkp__V202407__Asset__Report
{
  ProtobufCMessage base;
  char *id;
  char *type;
};
#define KENTIK__MKP__V202407__ASSET__REPORT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__asset__report__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__Asset
{
  ProtobufCMessage base;
  size_t n_reports;
  Kentik__Mkp__V202407__Asset__Report **reports;
  Kentik__Mkp__V202407__Asset__Report *default_report;
};
#define KENTIK__MKP__V202407__ASSET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__asset__descriptor) \
    , 0,NULL, NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__Threshold
{
  ProtobufCMessage base;
  char *id;
  Kentik__Mkp__V202407__Activate *activate;
  char *severity;
  size_t n_conditions;
  Kentik__Mkp__V202407__Condition **conditions;
  size_t n_mitigations;
  Kentik__Mkp__V202407__Mitigation **mitigations;
  size_t n_notification_channels;
  Kentik__Mkp__V202407__NotificationChannel **notification_channels;
  protobuf_c_boolean threshold_ack_required;
  protobuf_c_boolean enable_tenant_notifications;
  protobuf_c_boolean receive_landlord_notifications;
};
#define KENTIK__MKP__V202407__THRESHOLD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__threshold__descriptor) \
    , (char *)protobuf_c_empty_string, NULL, (char *)protobuf_c_empty_string, 0,NULL, 0,NULL, 0,NULL, 0, 0, 0 }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__Activate
{
  ProtobufCMessage base;
  uint32_t times;
  char *operator_;
  uint32_t time_window_seconds;
  uint32_t grace_period_seconds;
};
#define KENTIK__MKP__V202407__ACTIVATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__activate__descriptor) \
    , 0, (char *)protobuf_c_empty_string, 0, 0 }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__Condition
{
  ProtobufCMessage base;
  char *type;
  char *value;
  char *metric;
  char *operator_;
  char *value_type;
  char *value_select;
};
#define KENTIK__MKP__V202407__CONDITION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__condition__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__Mitigation
{
  ProtobufCMessage base;
  char *id;
  char *status;
  char *company_id;
  char *pairing_id;
  char *threshold_id;
  protobuf_c_boolean is_method_overridable;
  char *mitigation_apply_type;
  char *mitigation_clear_type;
  uint32_t mitigation_apply_timer;
  uint32_t mitigation_clear_timer;
  protobuf_c_boolean is_platform_overridable;
};
#define KENTIK__MKP__V202407__MITIGATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__mitigation__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0, 0 }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__NotificationChannel
{
  ProtobufCMessage base;
  char *id;
};
#define KENTIK__MKP__V202407__NOTIFICATION_CHANNEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__notification_channel__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__TenantLink
{
  ProtobufCMessage base;
  char *id;
  char *pivot_template_id;
  char *pivot_user_group_id;
};
#define KENTIK__MKP__V202407__TENANT_LINK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__tenant_link__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__Package
{
  ProtobufCMessage base;
  char *id;
  char *company_id;
  char *name;
  char *description;
  char *icon;
  char *color;
  size_t n_alerts;
  Kentik__Mkp__V202407__Alert **alerts;
  Kentik__Mkp__V202407__Asset *assets;
  protobuf_c_boolean is_default;
  size_t n_tenants;
  Kentik__Mkp__V202407__TenantLink **tenants;
};
#define KENTIK__MKP__V202407__PACKAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__package__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL, NULL, 0, 0,NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__CustomDimension
{
  ProtobufCMessage base;
  char *dimension;
  char *populator;
};
#define KENTIK__MKP__V202407__CUSTOM_DIMENSION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__custom_dimension__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__Devices
{
  ProtobufCMessage base;
  protobuf_c_boolean all_devices;
  size_t n_device_types;
  char **device_types;
  size_t n_device_labels;
  uint32_t *device_labels;
  size_t n_device_sites;
  uint32_t *device_sites;
  size_t n_device_name;
  char **device_name;
};
#define KENTIK__MKP__V202407__DEVICES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__devices__descriptor) \
    , 0, 0,NULL, 0,NULL, 0,NULL, 0,NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__FilterField
{
  ProtobufCMessage base;
  char *filter_field;
  char *operator_;
  char *filter_value;
};
#define KENTIK__MKP__V202407__FILTER_FIELD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__filter_field__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__Filter
{
  ProtobufCMessage base;
  char *name;
  protobuf_c_boolean named;
  char *connector;
  protobuf_c_boolean not_;
  char *auto_added;
  size_t n_saved_filters;
  char **saved_filters;
  size_t n_filters;
  Kentik__Mkp__V202407__FilterField **filters;
  size_t n_filter_groups;
  Kentik__Mkp__V202407__Filter **filter_groups;
  size_t n_metric;
  char **metric;
};
#define KENTIK__MKP__V202407__FILTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__filter__descriptor) \
    , (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string, 0,NULL, 0,NULL, 0,NULL, 0,NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__Tenant
{
  ProtobufCMessage base;
  char *id;
  char *company_id;
  char *name;
  char *description;
  char *type;
  protobuf_c_boolean enabled;
  /*
   * config object
   */
  size_t n_alerts;
  Kentik__Mkp__V202407__Alert **alerts;
  Kentik__Mkp__V202407__Asset *assets;
  char *asn;
  char *cidr;
  size_t n_custom_dimensions;
  Kentik__Mkp__V202407__CustomDimension **custom_dimensions;
  Kentik__Mkp__V202407__Devices *devices;
  Kentik__Mkp__V202407__Filter *filters;
  char *interface_name;
  char *snmp_alias;
  size_t n_packages;
  Kentik__Mkp__V202407__Package **packages;
  size_t n_users;
  Kentik__User__V202211__User **users;
  char *template_id;
};
#define KENTIK__MKP__V202407__TENANT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__tenant__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0,NULL, NULL, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL, NULL, NULL, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL, 0,NULL, (char *)protobuf_c_empty_string }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__ListPackageRequest
{
  ProtobufCMessage base;
};
#define KENTIK__MKP__V202407__LIST_PACKAGE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__list_package_request__descriptor) \
     }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__ListPackageResponse
{
  ProtobufCMessage base;
  size_t n_packages;
  Kentik__Mkp__V202407__Package **packages;
  /*
   * The number of invalid packages, for troubleshooting. Should be zero.
   */
  uint32_t invalid_count;
};
#define KENTIK__MKP__V202407__LIST_PACKAGE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__list_package_response__descriptor) \
    , 0,NULL, 0 }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__GetPackageRequest
{
  ProtobufCMessage base;
  char *id;
};
#define KENTIK__MKP__V202407__GET_PACKAGE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__get_package_request__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__GetPackageResponse
{
  ProtobufCMessage base;
  Kentik__Mkp__V202407__Package *package;
};
#define KENTIK__MKP__V202407__GET_PACKAGE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__get_package_response__descriptor) \
    , NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__CreatePackageRequest
{
  ProtobufCMessage base;
  Kentik__Mkp__V202407__Package *package;
};
#define KENTIK__MKP__V202407__CREATE_PACKAGE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__create_package_request__descriptor) \
    , NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__CreatePackageResponse
{
  ProtobufCMessage base;
  Kentik__Mkp__V202407__Package *package;
};
#define KENTIK__MKP__V202407__CREATE_PACKAGE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__create_package_response__descriptor) \
    , NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__UpdatePackageRequest
{
  ProtobufCMessage base;
  Kentik__Mkp__V202407__Package *package;
};
#define KENTIK__MKP__V202407__UPDATE_PACKAGE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__update_package_request__descriptor) \
    , NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__UpdatePackageResponse
{
  ProtobufCMessage base;
  Kentik__Mkp__V202407__Package *package;
};
#define KENTIK__MKP__V202407__UPDATE_PACKAGE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__update_package_response__descriptor) \
    , NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__DeletePackageRequest
{
  ProtobufCMessage base;
  char *id;
};
#define KENTIK__MKP__V202407__DELETE_PACKAGE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__delete_package_request__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__DeletePackageResponse
{
  ProtobufCMessage base;
};
#define KENTIK__MKP__V202407__DELETE_PACKAGE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__delete_package_response__descriptor) \
     }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__ListTenantRequest
{
  ProtobufCMessage base;
};
#define KENTIK__MKP__V202407__LIST_TENANT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__list_tenant_request__descriptor) \
     }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__ListTenantResponse
{
  ProtobufCMessage base;
  size_t n_tenants;
  Kentik__Mkp__V202407__Tenant **tenants;
  uint32_t invalid_count;
};
#define KENTIK__MKP__V202407__LIST_TENANT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__list_tenant_response__descriptor) \
    , 0,NULL, 0 }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__GetTenantRequest
{
  ProtobufCMessage base;
  char *id;
};
#define KENTIK__MKP__V202407__GET_TENANT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__get_tenant_request__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__GetTenantResponse
{
  ProtobufCMessage base;
  Kentik__Mkp__V202407__Tenant *tenant;
};
#define KENTIK__MKP__V202407__GET_TENANT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__get_tenant_response__descriptor) \
    , NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__CreateTenantRequest
{
  ProtobufCMessage base;
  Kentik__Mkp__V202407__Tenant *tenant;
};
#define KENTIK__MKP__V202407__CREATE_TENANT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__create_tenant_request__descriptor) \
    , NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__CreateTenantResponse
{
  ProtobufCMessage base;
  Kentik__Mkp__V202407__Tenant *tenant;
};
#define KENTIK__MKP__V202407__CREATE_TENANT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__create_tenant_response__descriptor) \
    , NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__UpdateTenantRequest
{
  ProtobufCMessage base;
  Kentik__Mkp__V202407__Tenant *tenant;
};
#define KENTIK__MKP__V202407__UPDATE_TENANT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__update_tenant_request__descriptor) \
    , NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__UpdateTenantResponse
{
  ProtobufCMessage base;
  Kentik__Mkp__V202407__Tenant *tenant;
};
#define KENTIK__MKP__V202407__UPDATE_TENANT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__update_tenant_response__descriptor) \
    , NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__DeleteTenantRequest
{
  ProtobufCMessage base;
  char *id;
};
#define KENTIK__MKP__V202407__DELETE_TENANT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__delete_tenant_request__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * {{.Name}}
 */
struct  Kentik__Mkp__V202407__DeleteTenantResponse
{
  ProtobufCMessage base;
};
#define KENTIK__MKP__V202407__DELETE_TENANT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__mkp__v202407__delete_tenant_response__descriptor) \
     }


/* Kentik__Mkp__V202407__Alert methods */
void   kentik__mkp__v202407__alert__init
                     (Kentik__Mkp__V202407__Alert         *message);
size_t kentik__mkp__v202407__alert__get_packed_size
                     (const Kentik__Mkp__V202407__Alert   *message);
size_t kentik__mkp__v202407__alert__pack
                     (const Kentik__Mkp__V202407__Alert   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__alert__pack_to_buffer
                     (const Kentik__Mkp__V202407__Alert   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__Alert *
       kentik__mkp__v202407__alert__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__alert__free_unpacked
                     (Kentik__Mkp__V202407__Alert *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__Asset__Report methods */
void   kentik__mkp__v202407__asset__report__init
                     (Kentik__Mkp__V202407__Asset__Report         *message);
/* Kentik__Mkp__V202407__Asset methods */
void   kentik__mkp__v202407__asset__init
                     (Kentik__Mkp__V202407__Asset         *message);
size_t kentik__mkp__v202407__asset__get_packed_size
                     (const Kentik__Mkp__V202407__Asset   *message);
size_t kentik__mkp__v202407__asset__pack
                     (const Kentik__Mkp__V202407__Asset   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__asset__pack_to_buffer
                     (const Kentik__Mkp__V202407__Asset   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__Asset *
       kentik__mkp__v202407__asset__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__asset__free_unpacked
                     (Kentik__Mkp__V202407__Asset *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__Threshold methods */
void   kentik__mkp__v202407__threshold__init
                     (Kentik__Mkp__V202407__Threshold         *message);
size_t kentik__mkp__v202407__threshold__get_packed_size
                     (const Kentik__Mkp__V202407__Threshold   *message);
size_t kentik__mkp__v202407__threshold__pack
                     (const Kentik__Mkp__V202407__Threshold   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__threshold__pack_to_buffer
                     (const Kentik__Mkp__V202407__Threshold   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__Threshold *
       kentik__mkp__v202407__threshold__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__threshold__free_unpacked
                     (Kentik__Mkp__V202407__Threshold *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__Activate methods */
void   kentik__mkp__v202407__activate__init
                     (Kentik__Mkp__V202407__Activate         *message);
size_t kentik__mkp__v202407__activate__get_packed_size
                     (const Kentik__Mkp__V202407__Activate   *message);
size_t kentik__mkp__v202407__activate__pack
                     (const Kentik__Mkp__V202407__Activate   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__activate__pack_to_buffer
                     (const Kentik__Mkp__V202407__Activate   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__Activate *
       kentik__mkp__v202407__activate__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__activate__free_unpacked
                     (Kentik__Mkp__V202407__Activate *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__Condition methods */
void   kentik__mkp__v202407__condition__init
                     (Kentik__Mkp__V202407__Condition         *message);
size_t kentik__mkp__v202407__condition__get_packed_size
                     (const Kentik__Mkp__V202407__Condition   *message);
size_t kentik__mkp__v202407__condition__pack
                     (const Kentik__Mkp__V202407__Condition   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__condition__pack_to_buffer
                     (const Kentik__Mkp__V202407__Condition   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__Condition *
       kentik__mkp__v202407__condition__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__condition__free_unpacked
                     (Kentik__Mkp__V202407__Condition *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__Mitigation methods */
void   kentik__mkp__v202407__mitigation__init
                     (Kentik__Mkp__V202407__Mitigation         *message);
size_t kentik__mkp__v202407__mitigation__get_packed_size
                     (const Kentik__Mkp__V202407__Mitigation   *message);
size_t kentik__mkp__v202407__mitigation__pack
                     (const Kentik__Mkp__V202407__Mitigation   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__mitigation__pack_to_buffer
                     (const Kentik__Mkp__V202407__Mitigation   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__Mitigation *
       kentik__mkp__v202407__mitigation__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__mitigation__free_unpacked
                     (Kentik__Mkp__V202407__Mitigation *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__NotificationChannel methods */
void   kentik__mkp__v202407__notification_channel__init
                     (Kentik__Mkp__V202407__NotificationChannel         *message);
size_t kentik__mkp__v202407__notification_channel__get_packed_size
                     (const Kentik__Mkp__V202407__NotificationChannel   *message);
size_t kentik__mkp__v202407__notification_channel__pack
                     (const Kentik__Mkp__V202407__NotificationChannel   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__notification_channel__pack_to_buffer
                     (const Kentik__Mkp__V202407__NotificationChannel   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__NotificationChannel *
       kentik__mkp__v202407__notification_channel__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__notification_channel__free_unpacked
                     (Kentik__Mkp__V202407__NotificationChannel *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__TenantLink methods */
void   kentik__mkp__v202407__tenant_link__init
                     (Kentik__Mkp__V202407__TenantLink         *message);
size_t kentik__mkp__v202407__tenant_link__get_packed_size
                     (const Kentik__Mkp__V202407__TenantLink   *message);
size_t kentik__mkp__v202407__tenant_link__pack
                     (const Kentik__Mkp__V202407__TenantLink   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__tenant_link__pack_to_buffer
                     (const Kentik__Mkp__V202407__TenantLink   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__TenantLink *
       kentik__mkp__v202407__tenant_link__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__tenant_link__free_unpacked
                     (Kentik__Mkp__V202407__TenantLink *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__Package methods */
void   kentik__mkp__v202407__package__init
                     (Kentik__Mkp__V202407__Package         *message);
size_t kentik__mkp__v202407__package__get_packed_size
                     (const Kentik__Mkp__V202407__Package   *message);
size_t kentik__mkp__v202407__package__pack
                     (const Kentik__Mkp__V202407__Package   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__package__pack_to_buffer
                     (const Kentik__Mkp__V202407__Package   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__Package *
       kentik__mkp__v202407__package__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__package__free_unpacked
                     (Kentik__Mkp__V202407__Package *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__CustomDimension methods */
void   kentik__mkp__v202407__custom_dimension__init
                     (Kentik__Mkp__V202407__CustomDimension         *message);
size_t kentik__mkp__v202407__custom_dimension__get_packed_size
                     (const Kentik__Mkp__V202407__CustomDimension   *message);
size_t kentik__mkp__v202407__custom_dimension__pack
                     (const Kentik__Mkp__V202407__CustomDimension   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__custom_dimension__pack_to_buffer
                     (const Kentik__Mkp__V202407__CustomDimension   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__CustomDimension *
       kentik__mkp__v202407__custom_dimension__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__custom_dimension__free_unpacked
                     (Kentik__Mkp__V202407__CustomDimension *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__Devices methods */
void   kentik__mkp__v202407__devices__init
                     (Kentik__Mkp__V202407__Devices         *message);
size_t kentik__mkp__v202407__devices__get_packed_size
                     (const Kentik__Mkp__V202407__Devices   *message);
size_t kentik__mkp__v202407__devices__pack
                     (const Kentik__Mkp__V202407__Devices   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__devices__pack_to_buffer
                     (const Kentik__Mkp__V202407__Devices   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__Devices *
       kentik__mkp__v202407__devices__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__devices__free_unpacked
                     (Kentik__Mkp__V202407__Devices *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__FilterField methods */
void   kentik__mkp__v202407__filter_field__init
                     (Kentik__Mkp__V202407__FilterField         *message);
size_t kentik__mkp__v202407__filter_field__get_packed_size
                     (const Kentik__Mkp__V202407__FilterField   *message);
size_t kentik__mkp__v202407__filter_field__pack
                     (const Kentik__Mkp__V202407__FilterField   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__filter_field__pack_to_buffer
                     (const Kentik__Mkp__V202407__FilterField   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__FilterField *
       kentik__mkp__v202407__filter_field__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__filter_field__free_unpacked
                     (Kentik__Mkp__V202407__FilterField *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__Filter methods */
void   kentik__mkp__v202407__filter__init
                     (Kentik__Mkp__V202407__Filter         *message);
size_t kentik__mkp__v202407__filter__get_packed_size
                     (const Kentik__Mkp__V202407__Filter   *message);
size_t kentik__mkp__v202407__filter__pack
                     (const Kentik__Mkp__V202407__Filter   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__filter__pack_to_buffer
                     (const Kentik__Mkp__V202407__Filter   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__Filter *
       kentik__mkp__v202407__filter__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__filter__free_unpacked
                     (Kentik__Mkp__V202407__Filter *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__Tenant methods */
void   kentik__mkp__v202407__tenant__init
                     (Kentik__Mkp__V202407__Tenant         *message);
size_t kentik__mkp__v202407__tenant__get_packed_size
                     (const Kentik__Mkp__V202407__Tenant   *message);
size_t kentik__mkp__v202407__tenant__pack
                     (const Kentik__Mkp__V202407__Tenant   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__tenant__pack_to_buffer
                     (const Kentik__Mkp__V202407__Tenant   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__Tenant *
       kentik__mkp__v202407__tenant__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__tenant__free_unpacked
                     (Kentik__Mkp__V202407__Tenant *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__ListPackageRequest methods */
void   kentik__mkp__v202407__list_package_request__init
                     (Kentik__Mkp__V202407__ListPackageRequest         *message);
size_t kentik__mkp__v202407__list_package_request__get_packed_size
                     (const Kentik__Mkp__V202407__ListPackageRequest   *message);
size_t kentik__mkp__v202407__list_package_request__pack
                     (const Kentik__Mkp__V202407__ListPackageRequest   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__list_package_request__pack_to_buffer
                     (const Kentik__Mkp__V202407__ListPackageRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__ListPackageRequest *
       kentik__mkp__v202407__list_package_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__list_package_request__free_unpacked
                     (Kentik__Mkp__V202407__ListPackageRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__ListPackageResponse methods */
void   kentik__mkp__v202407__list_package_response__init
                     (Kentik__Mkp__V202407__ListPackageResponse         *message);
size_t kentik__mkp__v202407__list_package_response__get_packed_size
                     (const Kentik__Mkp__V202407__ListPackageResponse   *message);
size_t kentik__mkp__v202407__list_package_response__pack
                     (const Kentik__Mkp__V202407__ListPackageResponse   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__list_package_response__pack_to_buffer
                     (const Kentik__Mkp__V202407__ListPackageResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__ListPackageResponse *
       kentik__mkp__v202407__list_package_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__list_package_response__free_unpacked
                     (Kentik__Mkp__V202407__ListPackageResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__GetPackageRequest methods */
void   kentik__mkp__v202407__get_package_request__init
                     (Kentik__Mkp__V202407__GetPackageRequest         *message);
size_t kentik__mkp__v202407__get_package_request__get_packed_size
                     (const Kentik__Mkp__V202407__GetPackageRequest   *message);
size_t kentik__mkp__v202407__get_package_request__pack
                     (const Kentik__Mkp__V202407__GetPackageRequest   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__get_package_request__pack_to_buffer
                     (const Kentik__Mkp__V202407__GetPackageRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__GetPackageRequest *
       kentik__mkp__v202407__get_package_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__get_package_request__free_unpacked
                     (Kentik__Mkp__V202407__GetPackageRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__GetPackageResponse methods */
void   kentik__mkp__v202407__get_package_response__init
                     (Kentik__Mkp__V202407__GetPackageResponse         *message);
size_t kentik__mkp__v202407__get_package_response__get_packed_size
                     (const Kentik__Mkp__V202407__GetPackageResponse   *message);
size_t kentik__mkp__v202407__get_package_response__pack
                     (const Kentik__Mkp__V202407__GetPackageResponse   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__get_package_response__pack_to_buffer
                     (const Kentik__Mkp__V202407__GetPackageResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__GetPackageResponse *
       kentik__mkp__v202407__get_package_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__get_package_response__free_unpacked
                     (Kentik__Mkp__V202407__GetPackageResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__CreatePackageRequest methods */
void   kentik__mkp__v202407__create_package_request__init
                     (Kentik__Mkp__V202407__CreatePackageRequest         *message);
size_t kentik__mkp__v202407__create_package_request__get_packed_size
                     (const Kentik__Mkp__V202407__CreatePackageRequest   *message);
size_t kentik__mkp__v202407__create_package_request__pack
                     (const Kentik__Mkp__V202407__CreatePackageRequest   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__create_package_request__pack_to_buffer
                     (const Kentik__Mkp__V202407__CreatePackageRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__CreatePackageRequest *
       kentik__mkp__v202407__create_package_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__create_package_request__free_unpacked
                     (Kentik__Mkp__V202407__CreatePackageRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__CreatePackageResponse methods */
void   kentik__mkp__v202407__create_package_response__init
                     (Kentik__Mkp__V202407__CreatePackageResponse         *message);
size_t kentik__mkp__v202407__create_package_response__get_packed_size
                     (const Kentik__Mkp__V202407__CreatePackageResponse   *message);
size_t kentik__mkp__v202407__create_package_response__pack
                     (const Kentik__Mkp__V202407__CreatePackageResponse   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__create_package_response__pack_to_buffer
                     (const Kentik__Mkp__V202407__CreatePackageResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__CreatePackageResponse *
       kentik__mkp__v202407__create_package_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__create_package_response__free_unpacked
                     (Kentik__Mkp__V202407__CreatePackageResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__UpdatePackageRequest methods */
void   kentik__mkp__v202407__update_package_request__init
                     (Kentik__Mkp__V202407__UpdatePackageRequest         *message);
size_t kentik__mkp__v202407__update_package_request__get_packed_size
                     (const Kentik__Mkp__V202407__UpdatePackageRequest   *message);
size_t kentik__mkp__v202407__update_package_request__pack
                     (const Kentik__Mkp__V202407__UpdatePackageRequest   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__update_package_request__pack_to_buffer
                     (const Kentik__Mkp__V202407__UpdatePackageRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__UpdatePackageRequest *
       kentik__mkp__v202407__update_package_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__update_package_request__free_unpacked
                     (Kentik__Mkp__V202407__UpdatePackageRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__UpdatePackageResponse methods */
void   kentik__mkp__v202407__update_package_response__init
                     (Kentik__Mkp__V202407__UpdatePackageResponse         *message);
size_t kentik__mkp__v202407__update_package_response__get_packed_size
                     (const Kentik__Mkp__V202407__UpdatePackageResponse   *message);
size_t kentik__mkp__v202407__update_package_response__pack
                     (const Kentik__Mkp__V202407__UpdatePackageResponse   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__update_package_response__pack_to_buffer
                     (const Kentik__Mkp__V202407__UpdatePackageResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__UpdatePackageResponse *
       kentik__mkp__v202407__update_package_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__update_package_response__free_unpacked
                     (Kentik__Mkp__V202407__UpdatePackageResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__DeletePackageRequest methods */
void   kentik__mkp__v202407__delete_package_request__init
                     (Kentik__Mkp__V202407__DeletePackageRequest         *message);
size_t kentik__mkp__v202407__delete_package_request__get_packed_size
                     (const Kentik__Mkp__V202407__DeletePackageRequest   *message);
size_t kentik__mkp__v202407__delete_package_request__pack
                     (const Kentik__Mkp__V202407__DeletePackageRequest   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__delete_package_request__pack_to_buffer
                     (const Kentik__Mkp__V202407__DeletePackageRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__DeletePackageRequest *
       kentik__mkp__v202407__delete_package_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__delete_package_request__free_unpacked
                     (Kentik__Mkp__V202407__DeletePackageRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__DeletePackageResponse methods */
void   kentik__mkp__v202407__delete_package_response__init
                     (Kentik__Mkp__V202407__DeletePackageResponse         *message);
size_t kentik__mkp__v202407__delete_package_response__get_packed_size
                     (const Kentik__Mkp__V202407__DeletePackageResponse   *message);
size_t kentik__mkp__v202407__delete_package_response__pack
                     (const Kentik__Mkp__V202407__DeletePackageResponse   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__delete_package_response__pack_to_buffer
                     (const Kentik__Mkp__V202407__DeletePackageResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__DeletePackageResponse *
       kentik__mkp__v202407__delete_package_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__delete_package_response__free_unpacked
                     (Kentik__Mkp__V202407__DeletePackageResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__ListTenantRequest methods */
void   kentik__mkp__v202407__list_tenant_request__init
                     (Kentik__Mkp__V202407__ListTenantRequest         *message);
size_t kentik__mkp__v202407__list_tenant_request__get_packed_size
                     (const Kentik__Mkp__V202407__ListTenantRequest   *message);
size_t kentik__mkp__v202407__list_tenant_request__pack
                     (const Kentik__Mkp__V202407__ListTenantRequest   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__list_tenant_request__pack_to_buffer
                     (const Kentik__Mkp__V202407__ListTenantRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__ListTenantRequest *
       kentik__mkp__v202407__list_tenant_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__list_tenant_request__free_unpacked
                     (Kentik__Mkp__V202407__ListTenantRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__ListTenantResponse methods */
void   kentik__mkp__v202407__list_tenant_response__init
                     (Kentik__Mkp__V202407__ListTenantResponse         *message);
size_t kentik__mkp__v202407__list_tenant_response__get_packed_size
                     (const Kentik__Mkp__V202407__ListTenantResponse   *message);
size_t kentik__mkp__v202407__list_tenant_response__pack
                     (const Kentik__Mkp__V202407__ListTenantResponse   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__list_tenant_response__pack_to_buffer
                     (const Kentik__Mkp__V202407__ListTenantResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__ListTenantResponse *
       kentik__mkp__v202407__list_tenant_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__list_tenant_response__free_unpacked
                     (Kentik__Mkp__V202407__ListTenantResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__GetTenantRequest methods */
void   kentik__mkp__v202407__get_tenant_request__init
                     (Kentik__Mkp__V202407__GetTenantRequest         *message);
size_t kentik__mkp__v202407__get_tenant_request__get_packed_size
                     (const Kentik__Mkp__V202407__GetTenantRequest   *message);
size_t kentik__mkp__v202407__get_tenant_request__pack
                     (const Kentik__Mkp__V202407__GetTenantRequest   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__get_tenant_request__pack_to_buffer
                     (const Kentik__Mkp__V202407__GetTenantRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__GetTenantRequest *
       kentik__mkp__v202407__get_tenant_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__get_tenant_request__free_unpacked
                     (Kentik__Mkp__V202407__GetTenantRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__GetTenantResponse methods */
void   kentik__mkp__v202407__get_tenant_response__init
                     (Kentik__Mkp__V202407__GetTenantResponse         *message);
size_t kentik__mkp__v202407__get_tenant_response__get_packed_size
                     (const Kentik__Mkp__V202407__GetTenantResponse   *message);
size_t kentik__mkp__v202407__get_tenant_response__pack
                     (const Kentik__Mkp__V202407__GetTenantResponse   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__get_tenant_response__pack_to_buffer
                     (const Kentik__Mkp__V202407__GetTenantResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__GetTenantResponse *
       kentik__mkp__v202407__get_tenant_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__get_tenant_response__free_unpacked
                     (Kentik__Mkp__V202407__GetTenantResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__CreateTenantRequest methods */
void   kentik__mkp__v202407__create_tenant_request__init
                     (Kentik__Mkp__V202407__CreateTenantRequest         *message);
size_t kentik__mkp__v202407__create_tenant_request__get_packed_size
                     (const Kentik__Mkp__V202407__CreateTenantRequest   *message);
size_t kentik__mkp__v202407__create_tenant_request__pack
                     (const Kentik__Mkp__V202407__CreateTenantRequest   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__create_tenant_request__pack_to_buffer
                     (const Kentik__Mkp__V202407__CreateTenantRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__CreateTenantRequest *
       kentik__mkp__v202407__create_tenant_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__create_tenant_request__free_unpacked
                     (Kentik__Mkp__V202407__CreateTenantRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__CreateTenantResponse methods */
void   kentik__mkp__v202407__create_tenant_response__init
                     (Kentik__Mkp__V202407__CreateTenantResponse         *message);
size_t kentik__mkp__v202407__create_tenant_response__get_packed_size
                     (const Kentik__Mkp__V202407__CreateTenantResponse   *message);
size_t kentik__mkp__v202407__create_tenant_response__pack
                     (const Kentik__Mkp__V202407__CreateTenantResponse   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__create_tenant_response__pack_to_buffer
                     (const Kentik__Mkp__V202407__CreateTenantResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__CreateTenantResponse *
       kentik__mkp__v202407__create_tenant_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__create_tenant_response__free_unpacked
                     (Kentik__Mkp__V202407__CreateTenantResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__UpdateTenantRequest methods */
void   kentik__mkp__v202407__update_tenant_request__init
                     (Kentik__Mkp__V202407__UpdateTenantRequest         *message);
size_t kentik__mkp__v202407__update_tenant_request__get_packed_size
                     (const Kentik__Mkp__V202407__UpdateTenantRequest   *message);
size_t kentik__mkp__v202407__update_tenant_request__pack
                     (const Kentik__Mkp__V202407__UpdateTenantRequest   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__update_tenant_request__pack_to_buffer
                     (const Kentik__Mkp__V202407__UpdateTenantRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__UpdateTenantRequest *
       kentik__mkp__v202407__update_tenant_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__update_tenant_request__free_unpacked
                     (Kentik__Mkp__V202407__UpdateTenantRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__UpdateTenantResponse methods */
void   kentik__mkp__v202407__update_tenant_response__init
                     (Kentik__Mkp__V202407__UpdateTenantResponse         *message);
size_t kentik__mkp__v202407__update_tenant_response__get_packed_size
                     (const Kentik__Mkp__V202407__UpdateTenantResponse   *message);
size_t kentik__mkp__v202407__update_tenant_response__pack
                     (const Kentik__Mkp__V202407__UpdateTenantResponse   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__update_tenant_response__pack_to_buffer
                     (const Kentik__Mkp__V202407__UpdateTenantResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__UpdateTenantResponse *
       kentik__mkp__v202407__update_tenant_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__update_tenant_response__free_unpacked
                     (Kentik__Mkp__V202407__UpdateTenantResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__DeleteTenantRequest methods */
void   kentik__mkp__v202407__delete_tenant_request__init
                     (Kentik__Mkp__V202407__DeleteTenantRequest         *message);
size_t kentik__mkp__v202407__delete_tenant_request__get_packed_size
                     (const Kentik__Mkp__V202407__DeleteTenantRequest   *message);
size_t kentik__mkp__v202407__delete_tenant_request__pack
                     (const Kentik__Mkp__V202407__DeleteTenantRequest   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__delete_tenant_request__pack_to_buffer
                     (const Kentik__Mkp__V202407__DeleteTenantRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__DeleteTenantRequest *
       kentik__mkp__v202407__delete_tenant_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__delete_tenant_request__free_unpacked
                     (Kentik__Mkp__V202407__DeleteTenantRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Mkp__V202407__DeleteTenantResponse methods */
void   kentik__mkp__v202407__delete_tenant_response__init
                     (Kentik__Mkp__V202407__DeleteTenantResponse         *message);
size_t kentik__mkp__v202407__delete_tenant_response__get_packed_size
                     (const Kentik__Mkp__V202407__DeleteTenantResponse   *message);
size_t kentik__mkp__v202407__delete_tenant_response__pack
                     (const Kentik__Mkp__V202407__DeleteTenantResponse   *message,
                      uint8_t             *out);
size_t kentik__mkp__v202407__delete_tenant_response__pack_to_buffer
                     (const Kentik__Mkp__V202407__DeleteTenantResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Mkp__V202407__DeleteTenantResponse *
       kentik__mkp__v202407__delete_tenant_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__mkp__v202407__delete_tenant_response__free_unpacked
                     (Kentik__Mkp__V202407__DeleteTenantResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Kentik__Mkp__V202407__Alert_Closure)
                 (const Kentik__Mkp__V202407__Alert *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__Asset__Report_Closure)
                 (const Kentik__Mkp__V202407__Asset__Report *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__Asset_Closure)
                 (const Kentik__Mkp__V202407__Asset *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__Threshold_Closure)
                 (const Kentik__Mkp__V202407__Threshold *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__Activate_Closure)
                 (const Kentik__Mkp__V202407__Activate *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__Condition_Closure)
                 (const Kentik__Mkp__V202407__Condition *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__Mitigation_Closure)
                 (const Kentik__Mkp__V202407__Mitigation *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__NotificationChannel_Closure)
                 (const Kentik__Mkp__V202407__NotificationChannel *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__TenantLink_Closure)
                 (const Kentik__Mkp__V202407__TenantLink *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__Package_Closure)
                 (const Kentik__Mkp__V202407__Package *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__CustomDimension_Closure)
                 (const Kentik__Mkp__V202407__CustomDimension *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__Devices_Closure)
                 (const Kentik__Mkp__V202407__Devices *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__FilterField_Closure)
                 (const Kentik__Mkp__V202407__FilterField *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__Filter_Closure)
                 (const Kentik__Mkp__V202407__Filter *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__Tenant_Closure)
                 (const Kentik__Mkp__V202407__Tenant *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__ListPackageRequest_Closure)
                 (const Kentik__Mkp__V202407__ListPackageRequest *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__ListPackageResponse_Closure)
                 (const Kentik__Mkp__V202407__ListPackageResponse *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__GetPackageRequest_Closure)
                 (const Kentik__Mkp__V202407__GetPackageRequest *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__GetPackageResponse_Closure)
                 (const Kentik__Mkp__V202407__GetPackageResponse *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__CreatePackageRequest_Closure)
                 (const Kentik__Mkp__V202407__CreatePackageRequest *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__CreatePackageResponse_Closure)
                 (const Kentik__Mkp__V202407__CreatePackageResponse *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__UpdatePackageRequest_Closure)
                 (const Kentik__Mkp__V202407__UpdatePackageRequest *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__UpdatePackageResponse_Closure)
                 (const Kentik__Mkp__V202407__UpdatePackageResponse *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__DeletePackageRequest_Closure)
                 (const Kentik__Mkp__V202407__DeletePackageRequest *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__DeletePackageResponse_Closure)
                 (const Kentik__Mkp__V202407__DeletePackageResponse *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__ListTenantRequest_Closure)
                 (const Kentik__Mkp__V202407__ListTenantRequest *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__ListTenantResponse_Closure)
                 (const Kentik__Mkp__V202407__ListTenantResponse *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__GetTenantRequest_Closure)
                 (const Kentik__Mkp__V202407__GetTenantRequest *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__GetTenantResponse_Closure)
                 (const Kentik__Mkp__V202407__GetTenantResponse *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__CreateTenantRequest_Closure)
                 (const Kentik__Mkp__V202407__CreateTenantRequest *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__CreateTenantResponse_Closure)
                 (const Kentik__Mkp__V202407__CreateTenantResponse *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__UpdateTenantRequest_Closure)
                 (const Kentik__Mkp__V202407__UpdateTenantRequest *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__UpdateTenantResponse_Closure)
                 (const Kentik__Mkp__V202407__UpdateTenantResponse *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__DeleteTenantRequest_Closure)
                 (const Kentik__Mkp__V202407__DeleteTenantRequest *message,
                  void *closure_data);
typedef void (*Kentik__Mkp__V202407__DeleteTenantResponse_Closure)
                 (const Kentik__Mkp__V202407__DeleteTenantResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Kentik__Mkp__V202407__PackageService_Service Kentik__Mkp__V202407__PackageService_Service;
struct Kentik__Mkp__V202407__PackageService_Service
{
  ProtobufCService base;
  void (*list_package)(Kentik__Mkp__V202407__PackageService_Service *service,
                       const Kentik__Mkp__V202407__ListPackageRequest *input,
                       Kentik__Mkp__V202407__ListPackageResponse_Closure closure,
                       void *closure_data);
  void (*get_package)(Kentik__Mkp__V202407__PackageService_Service *service,
                      const Kentik__Mkp__V202407__GetPackageRequest *input,
                      Kentik__Mkp__V202407__GetPackageResponse_Closure closure,
                      void *closure_data);
  void (*create_package)(Kentik__Mkp__V202407__PackageService_Service *service,
                         const Kentik__Mkp__V202407__CreatePackageRequest *input,
                         Kentik__Mkp__V202407__CreatePackageResponse_Closure closure,
                         void *closure_data);
  void (*update_package)(Kentik__Mkp__V202407__PackageService_Service *service,
                         const Kentik__Mkp__V202407__UpdatePackageRequest *input,
                         Kentik__Mkp__V202407__UpdatePackageResponse_Closure closure,
                         void *closure_data);
  void (*delete_package)(Kentik__Mkp__V202407__PackageService_Service *service,
                         const Kentik__Mkp__V202407__DeletePackageRequest *input,
                         Kentik__Mkp__V202407__DeletePackageResponse_Closure closure,
                         void *closure_data);
};
typedef void (*Kentik__Mkp__V202407__PackageService_ServiceDestroy)(Kentik__Mkp__V202407__PackageService_Service *);
void kentik__mkp__v202407__package_service__init (Kentik__Mkp__V202407__PackageService_Service *service,
                                                  Kentik__Mkp__V202407__PackageService_ServiceDestroy destroy);
#define KENTIK__MKP__V202407__PACKAGE_SERVICE__BASE_INIT \
    { &kentik__mkp__v202407__package_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define KENTIK__MKP__V202407__PACKAGE_SERVICE__INIT(function_prefix__) \
    { KENTIK__MKP__V202407__PACKAGE_SERVICE__BASE_INIT,\
      function_prefix__ ## list_package,\
      function_prefix__ ## get_package,\
      function_prefix__ ## create_package,\
      function_prefix__ ## update_package,\
      function_prefix__ ## delete_package  }
void kentik__mkp__v202407__package_service__list_package(ProtobufCService *service,
                                                         const Kentik__Mkp__V202407__ListPackageRequest *input,
                                                         Kentik__Mkp__V202407__ListPackageResponse_Closure closure,
                                                         void *closure_data);
void kentik__mkp__v202407__package_service__get_package(ProtobufCService *service,
                                                        const Kentik__Mkp__V202407__GetPackageRequest *input,
                                                        Kentik__Mkp__V202407__GetPackageResponse_Closure closure,
                                                        void *closure_data);
void kentik__mkp__v202407__package_service__create_package(ProtobufCService *service,
                                                           const Kentik__Mkp__V202407__CreatePackageRequest *input,
                                                           Kentik__Mkp__V202407__CreatePackageResponse_Closure closure,
                                                           void *closure_data);
void kentik__mkp__v202407__package_service__update_package(ProtobufCService *service,
                                                           const Kentik__Mkp__V202407__UpdatePackageRequest *input,
                                                           Kentik__Mkp__V202407__UpdatePackageResponse_Closure closure,
                                                           void *closure_data);
void kentik__mkp__v202407__package_service__delete_package(ProtobufCService *service,
                                                           const Kentik__Mkp__V202407__DeletePackageRequest *input,
                                                           Kentik__Mkp__V202407__DeletePackageResponse_Closure closure,
                                                           void *closure_data);
typedef struct Kentik__Mkp__V202407__TenantService_Service Kentik__Mkp__V202407__TenantService_Service;
struct Kentik__Mkp__V202407__TenantService_Service
{
  ProtobufCService base;
  void (*list_tenant)(Kentik__Mkp__V202407__TenantService_Service *service,
                      const Kentik__Mkp__V202407__ListTenantRequest *input,
                      Kentik__Mkp__V202407__ListTenantResponse_Closure closure,
                      void *closure_data);
  void (*get_tenant)(Kentik__Mkp__V202407__TenantService_Service *service,
                     const Kentik__Mkp__V202407__GetTenantRequest *input,
                     Kentik__Mkp__V202407__GetTenantResponse_Closure closure,
                     void *closure_data);
  void (*create_tenant)(Kentik__Mkp__V202407__TenantService_Service *service,
                        const Kentik__Mkp__V202407__CreateTenantRequest *input,
                        Kentik__Mkp__V202407__CreateTenantResponse_Closure closure,
                        void *closure_data);
  void (*update_tenant)(Kentik__Mkp__V202407__TenantService_Service *service,
                        const Kentik__Mkp__V202407__UpdateTenantRequest *input,
                        Kentik__Mkp__V202407__UpdateTenantResponse_Closure closure,
                        void *closure_data);
  void (*delete_tenant)(Kentik__Mkp__V202407__TenantService_Service *service,
                        const Kentik__Mkp__V202407__DeleteTenantRequest *input,
                        Kentik__Mkp__V202407__DeleteTenantResponse_Closure closure,
                        void *closure_data);
};
typedef void (*Kentik__Mkp__V202407__TenantService_ServiceDestroy)(Kentik__Mkp__V202407__TenantService_Service *);
void kentik__mkp__v202407__tenant_service__init (Kentik__Mkp__V202407__TenantService_Service *service,
                                                 Kentik__Mkp__V202407__TenantService_ServiceDestroy destroy);
#define KENTIK__MKP__V202407__TENANT_SERVICE__BASE_INIT \
    { &kentik__mkp__v202407__tenant_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define KENTIK__MKP__V202407__TENANT_SERVICE__INIT(function_prefix__) \
    { KENTIK__MKP__V202407__TENANT_SERVICE__BASE_INIT,\
      function_prefix__ ## list_tenant,\
      function_prefix__ ## get_tenant,\
      function_prefix__ ## create_tenant,\
      function_prefix__ ## update_tenant,\
      function_prefix__ ## delete_tenant  }
void kentik__mkp__v202407__tenant_service__list_tenant(ProtobufCService *service,
                                                       const Kentik__Mkp__V202407__ListTenantRequest *input,
                                                       Kentik__Mkp__V202407__ListTenantResponse_Closure closure,
                                                       void *closure_data);
void kentik__mkp__v202407__tenant_service__get_tenant(ProtobufCService *service,
                                                      const Kentik__Mkp__V202407__GetTenantRequest *input,
                                                      Kentik__Mkp__V202407__GetTenantResponse_Closure closure,
                                                      void *closure_data);
void kentik__mkp__v202407__tenant_service__create_tenant(ProtobufCService *service,
                                                         const Kentik__Mkp__V202407__CreateTenantRequest *input,
                                                         Kentik__Mkp__V202407__CreateTenantResponse_Closure closure,
                                                         void *closure_data);
void kentik__mkp__v202407__tenant_service__update_tenant(ProtobufCService *service,
                                                         const Kentik__Mkp__V202407__UpdateTenantRequest *input,
                                                         Kentik__Mkp__V202407__UpdateTenantResponse_Closure closure,
                                                         void *closure_data);
void kentik__mkp__v202407__tenant_service__delete_tenant(ProtobufCService *service,
                                                         const Kentik__Mkp__V202407__DeleteTenantRequest *input,
                                                         Kentik__Mkp__V202407__DeleteTenantResponse_Closure closure,
                                                         void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor kentik__mkp__v202407__alert__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__asset__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__asset__report__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__threshold__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__activate__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__condition__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__mitigation__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__notification_channel__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__tenant_link__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__package__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__custom_dimension__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__devices__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__filter_field__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__filter__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__tenant__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__list_package_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__list_package_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__get_package_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__get_package_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__create_package_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__create_package_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__update_package_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__update_package_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__delete_package_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__delete_package_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__list_tenant_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__list_tenant_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__get_tenant_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__get_tenant_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__create_tenant_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__create_tenant_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__update_tenant_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__update_tenant_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__delete_tenant_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__mkp__v202407__delete_tenant_response__descriptor;
extern const ProtobufCServiceDescriptor kentik__mkp__v202407__package_service__descriptor;
extern const ProtobufCServiceDescriptor kentik__mkp__v202407__tenant_service__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_kentik_2fmkp_2fv202407_2fmkp_2eproto__INCLUDED */
