/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: kentik/synthetics/v202101beta1/synthetics.proto */

#ifndef PROTOBUF_C_kentik_2fsynthetics_2fv202101beta1_2fsynthetics_2eproto__INCLUDED
#define PROTOBUF_C_kentik_2fsynthetics_2fv202101beta1_2fsynthetics_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "google/api/annotations.pb-c.h"
#include "google/api/client.pb-c.h"
#include "google/protobuf/field_mask.pb-c.h"
#include "google/protobuf/timestamp.pb-c.h"
#include "protoc-gen-openapiv2/options/annotations.pb-c.h"
#include "kentik/core/v202303/annotations.pb-c.h"

typedef struct Kentik__Synthetics__V202101beta1__Health Kentik__Synthetics__V202101beta1__Health;
typedef struct Kentik__Synthetics__V202101beta1__AgentTaskConfig Kentik__Synthetics__V202101beta1__AgentTaskConfig;
typedef struct Kentik__Synthetics__V202101beta1__TestHealth Kentik__Synthetics__V202101beta1__TestHealth;
typedef struct Kentik__Synthetics__V202101beta1__TaskHealth Kentik__Synthetics__V202101beta1__TaskHealth;
typedef struct Kentik__Synthetics__V202101beta1__AgentHealth Kentik__Synthetics__V202101beta1__AgentHealth;
typedef struct Kentik__Synthetics__V202101beta1__HealthMoment Kentik__Synthetics__V202101beta1__HealthMoment;
typedef struct Kentik__Synthetics__V202101beta1__HealthMoment__OtherHealthsEntry Kentik__Synthetics__V202101beta1__HealthMoment__OtherHealthsEntry;
typedef struct Kentik__Synthetics__V202101beta1__Agent Kentik__Synthetics__V202101beta1__Agent;
typedef struct Kentik__Synthetics__V202101beta1__PingTaskDefinition Kentik__Synthetics__V202101beta1__PingTaskDefinition;
typedef struct Kentik__Synthetics__V202101beta1__TraceTaskDefinition Kentik__Synthetics__V202101beta1__TraceTaskDefinition;
typedef struct Kentik__Synthetics__V202101beta1__HTTPTaskDefinition Kentik__Synthetics__V202101beta1__HTTPTaskDefinition;
typedef struct Kentik__Synthetics__V202101beta1__Task Kentik__Synthetics__V202101beta1__Task;
typedef struct Kentik__Synthetics__V202101beta1__KnockTaskDefinition Kentik__Synthetics__V202101beta1__KnockTaskDefinition;
typedef struct Kentik__Synthetics__V202101beta1__DNSTaskDefinition Kentik__Synthetics__V202101beta1__DNSTaskDefinition;
typedef struct Kentik__Synthetics__V202101beta1__ShakeTaskDefinition Kentik__Synthetics__V202101beta1__ShakeTaskDefinition;
typedef struct Kentik__Synthetics__V202101beta1__UserInfo Kentik__Synthetics__V202101beta1__UserInfo;
typedef struct Kentik__Synthetics__V202101beta1__Test Kentik__Synthetics__V202101beta1__Test;
typedef struct Kentik__Synthetics__V202101beta1__HTTPConfig Kentik__Synthetics__V202101beta1__HTTPConfig;
typedef struct Kentik__Synthetics__V202101beta1__HTTPConfig__HeadersEntry Kentik__Synthetics__V202101beta1__HTTPConfig__HeadersEntry;
typedef struct Kentik__Synthetics__V202101beta1__HTTPConfig__CssSelectorsEntry Kentik__Synthetics__V202101beta1__HTTPConfig__CssSelectorsEntry;
typedef struct Kentik__Synthetics__V202101beta1__TestSettings Kentik__Synthetics__V202101beta1__TestSettings;
typedef struct Kentik__Synthetics__V202101beta1__TestTraceSettings Kentik__Synthetics__V202101beta1__TestTraceSettings;
typedef struct Kentik__Synthetics__V202101beta1__TestPingSettings Kentik__Synthetics__V202101beta1__TestPingSettings;
typedef struct Kentik__Synthetics__V202101beta1__TestMonitoringSettings Kentik__Synthetics__V202101beta1__TestMonitoringSettings;
typedef struct Kentik__Synthetics__V202101beta1__HealthSettings Kentik__Synthetics__V202101beta1__HealthSettings;
typedef struct Kentik__Synthetics__V202101beta1__HostnameTest Kentik__Synthetics__V202101beta1__HostnameTest;
typedef struct Kentik__Synthetics__V202101beta1__IpTest Kentik__Synthetics__V202101beta1__IpTest;
typedef struct Kentik__Synthetics__V202101beta1__AgentTest Kentik__Synthetics__V202101beta1__AgentTest;
typedef struct Kentik__Synthetics__V202101beta1__FlowTest Kentik__Synthetics__V202101beta1__FlowTest;
typedef struct Kentik__Synthetics__V202101beta1__SiteTest Kentik__Synthetics__V202101beta1__SiteTest;
typedef struct Kentik__Synthetics__V202101beta1__TagTest Kentik__Synthetics__V202101beta1__TagTest;
typedef struct Kentik__Synthetics__V202101beta1__DnsTest Kentik__Synthetics__V202101beta1__DnsTest;
typedef struct Kentik__Synthetics__V202101beta1__UrlTest Kentik__Synthetics__V202101beta1__UrlTest;
typedef struct Kentik__Synthetics__V202101beta1__GridTest Kentik__Synthetics__V202101beta1__GridTest;
typedef struct Kentik__Synthetics__V202101beta1__DnsGridTest Kentik__Synthetics__V202101beta1__DnsGridTest;
typedef struct Kentik__Synthetics__V202101beta1__ApplicationMeshTest Kentik__Synthetics__V202101beta1__ApplicationMeshTest;
typedef struct Kentik__Synthetics__V202101beta1__MeshResponse Kentik__Synthetics__V202101beta1__MeshResponse;
typedef struct Kentik__Synthetics__V202101beta1__MeshColumn Kentik__Synthetics__V202101beta1__MeshColumn;
typedef struct Kentik__Synthetics__V202101beta1__MeshMetric Kentik__Synthetics__V202101beta1__MeshMetric;
typedef struct Kentik__Synthetics__V202101beta1__MeshMetrics Kentik__Synthetics__V202101beta1__MeshMetrics;
typedef struct Kentik__Synthetics__V202101beta1__ASN Kentik__Synthetics__V202101beta1__ASN;
typedef struct Kentik__Synthetics__V202101beta1__Country Kentik__Synthetics__V202101beta1__Country;
typedef struct Kentik__Synthetics__V202101beta1__Region Kentik__Synthetics__V202101beta1__Region;
typedef struct Kentik__Synthetics__V202101beta1__City Kentik__Synthetics__V202101beta1__City;
typedef struct Kentik__Synthetics__V202101beta1__Geo Kentik__Synthetics__V202101beta1__Geo;
typedef struct Kentik__Synthetics__V202101beta1__DNS Kentik__Synthetics__V202101beta1__DNS;
typedef struct Kentik__Synthetics__V202101beta1__IPInfo Kentik__Synthetics__V202101beta1__IPInfo;
typedef struct Kentik__Synthetics__V202101beta1__IDByIP Kentik__Synthetics__V202101beta1__IDByIP;
typedef struct Kentik__Synthetics__V202101beta1__TracerouteLookup Kentik__Synthetics__V202101beta1__TracerouteLookup;
typedef struct Kentik__Synthetics__V202101beta1__TraceHop Kentik__Synthetics__V202101beta1__TraceHop;
typedef struct Kentik__Synthetics__V202101beta1__TraceProbe Kentik__Synthetics__V202101beta1__TraceProbe;
typedef struct Kentik__Synthetics__V202101beta1__Trace Kentik__Synthetics__V202101beta1__Trace;
typedef struct Kentik__Synthetics__V202101beta1__Stats Kentik__Synthetics__V202101beta1__Stats;
typedef struct Kentik__Synthetics__V202101beta1__TracerouteResult Kentik__Synthetics__V202101beta1__TracerouteResult;
typedef struct Kentik__Synthetics__V202101beta1__TracerouteInfo Kentik__Synthetics__V202101beta1__TracerouteInfo;
typedef struct Kentik__Synthetics__V202101beta1__GetHealthForTestsRequest Kentik__Synthetics__V202101beta1__GetHealthForTestsRequest;
typedef struct Kentik__Synthetics__V202101beta1__GetHealthForTestsResponse Kentik__Synthetics__V202101beta1__GetHealthForTestsResponse;
typedef struct Kentik__Synthetics__V202101beta1__GetTraceForTestRequest Kentik__Synthetics__V202101beta1__GetTraceForTestRequest;
typedef struct Kentik__Synthetics__V202101beta1__GetTraceForTestResponse Kentik__Synthetics__V202101beta1__GetTraceForTestResponse;
typedef struct Kentik__Synthetics__V202101beta1__ListAgentsRequest Kentik__Synthetics__V202101beta1__ListAgentsRequest;
typedef struct Kentik__Synthetics__V202101beta1__ListAgentsResponse Kentik__Synthetics__V202101beta1__ListAgentsResponse;
typedef struct Kentik__Synthetics__V202101beta1__GetAgentRequest Kentik__Synthetics__V202101beta1__GetAgentRequest;
typedef struct Kentik__Synthetics__V202101beta1__GetAgentResponse Kentik__Synthetics__V202101beta1__GetAgentResponse;
typedef struct Kentik__Synthetics__V202101beta1__PatchAgentRequest Kentik__Synthetics__V202101beta1__PatchAgentRequest;
typedef struct Kentik__Synthetics__V202101beta1__PatchAgentResponse Kentik__Synthetics__V202101beta1__PatchAgentResponse;
typedef struct Kentik__Synthetics__V202101beta1__DeleteAgentRequest Kentik__Synthetics__V202101beta1__DeleteAgentRequest;
typedef struct Kentik__Synthetics__V202101beta1__DeleteAgentResponse Kentik__Synthetics__V202101beta1__DeleteAgentResponse;
typedef struct Kentik__Synthetics__V202101beta1__ListTestsRequest Kentik__Synthetics__V202101beta1__ListTestsRequest;
typedef struct Kentik__Synthetics__V202101beta1__ListTestsResponse Kentik__Synthetics__V202101beta1__ListTestsResponse;
typedef struct Kentik__Synthetics__V202101beta1__CreateTestRequest Kentik__Synthetics__V202101beta1__CreateTestRequest;
typedef struct Kentik__Synthetics__V202101beta1__CreateTestResponse Kentik__Synthetics__V202101beta1__CreateTestResponse;
typedef struct Kentik__Synthetics__V202101beta1__GetTestRequest Kentik__Synthetics__V202101beta1__GetTestRequest;
typedef struct Kentik__Synthetics__V202101beta1__GetTestResponse Kentik__Synthetics__V202101beta1__GetTestResponse;
typedef struct Kentik__Synthetics__V202101beta1__SetTestStatusRequest Kentik__Synthetics__V202101beta1__SetTestStatusRequest;
typedef struct Kentik__Synthetics__V202101beta1__SetTestStatusResponse Kentik__Synthetics__V202101beta1__SetTestStatusResponse;
typedef struct Kentik__Synthetics__V202101beta1__PatchTestRequest Kentik__Synthetics__V202101beta1__PatchTestRequest;
typedef struct Kentik__Synthetics__V202101beta1__PatchTestResponse Kentik__Synthetics__V202101beta1__PatchTestResponse;
typedef struct Kentik__Synthetics__V202101beta1__DeleteTestRequest Kentik__Synthetics__V202101beta1__DeleteTestRequest;
typedef struct Kentik__Synthetics__V202101beta1__DeleteTestResponse Kentik__Synthetics__V202101beta1__DeleteTestResponse;


/* --- enums --- */

/*
 * Agent impl type determines global vs private agent to use for specific test types.
 */
typedef enum _Kentik__Synthetics__V202101beta1__ImplementType {
  KENTIK__SYNTHETICS__V202101BETA1__IMPLEMENT_TYPE__IMPLEMENT_TYPE_UNSPECIFIED = 0,
  /*
   * setup IP test against a NODE global agent will fail.
   */
  KENTIK__SYNTHETICS__V202101BETA1__IMPLEMENT_TYPE__IMPLEMENT_TYPE_RUST = 1,
  /*
   * setup a page load test against a RUST global agent will fail.
   */
  KENTIK__SYNTHETICS__V202101BETA1__IMPLEMENT_TYPE__IMPLEMENT_TYPE_NODE = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__SYNTHETICS__V202101BETA1__IMPLEMENT_TYPE)
} Kentik__Synthetics__V202101beta1__ImplementType;
typedef enum _Kentik__Synthetics__V202101beta1__IPFamily {
  /*
   * Invalid value.
   */
  KENTIK__SYNTHETICS__V202101BETA1__IPFAMILY__IP_FAMILY_UNSPECIFIED = 0,
  KENTIK__SYNTHETICS__V202101BETA1__IPFAMILY__IP_FAMILY_V4 = 1,
  KENTIK__SYNTHETICS__V202101BETA1__IPFAMILY__IP_FAMILY_V6 = 2,
  KENTIK__SYNTHETICS__V202101BETA1__IPFAMILY__IP_FAMILY_DUAL = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__SYNTHETICS__V202101BETA1__IPFAMILY)
} Kentik__Synthetics__V202101beta1__IPFamily;
typedef enum _Kentik__Synthetics__V202101beta1__TestStatus {
  /*
   * Invalid value.
   */
  KENTIK__SYNTHETICS__V202101BETA1__TEST_STATUS__TEST_STATUS_UNSPECIFIED = 0,
  /*
   * Test is active.
   */
  KENTIK__SYNTHETICS__V202101BETA1__TEST_STATUS__TEST_STATUS_ACTIVE = 1,
  /*
   * Test is paused.
   */
  KENTIK__SYNTHETICS__V202101BETA1__TEST_STATUS__TEST_STATUS_PAUSED = 2,
  /*
   * Test is deleted. Not settable via SetTestStatus.
   */
  KENTIK__SYNTHETICS__V202101BETA1__TEST_STATUS__TEST_STATUS_DELETED = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__SYNTHETICS__V202101BETA1__TEST_STATUS)
} Kentik__Synthetics__V202101beta1__TestStatus;
typedef enum _Kentik__Synthetics__V202101beta1__AgentStatus {
  /*
   * Invalid value.
   */
  KENTIK__SYNTHETICS__V202101BETA1__AGENT_STATUS__AGENT_STATUS_UNSPECIFIED = 0,
  KENTIK__SYNTHETICS__V202101BETA1__AGENT_STATUS__AGENT_STATUS_OK = 1,
  KENTIK__SYNTHETICS__V202101BETA1__AGENT_STATUS__AGENT_STATUS_WAIT = 2,
  KENTIK__SYNTHETICS__V202101BETA1__AGENT_STATUS__AGENT_STATUS_DELETED = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__SYNTHETICS__V202101BETA1__AGENT_STATUS)
} Kentik__Synthetics__V202101beta1__AgentStatus;
typedef enum _Kentik__Synthetics__V202101beta1__TaskState {
  /*
   * Invalid value.
   */
  KENTIK__SYNTHETICS__V202101BETA1__TASK_STATE__TASK_STATE_UNSPECIFIED = 0,
  KENTIK__SYNTHETICS__V202101BETA1__TASK_STATE__TASK_STATE_CREATED = 1,
  KENTIK__SYNTHETICS__V202101BETA1__TASK_STATE__TASK_STATE_UPDATED = 2,
  KENTIK__SYNTHETICS__V202101BETA1__TASK_STATE__TASK_STATE_DELETED = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__SYNTHETICS__V202101BETA1__TASK_STATE)
} Kentik__Synthetics__V202101beta1__TaskState;
typedef enum _Kentik__Synthetics__V202101beta1__DNSRecord {
  KENTIK__SYNTHETICS__V202101BETA1__DNSRECORD__DNS_RECORD_UNSPECIFIED = 0,
  KENTIK__SYNTHETICS__V202101BETA1__DNSRECORD__DNS_RECORD_A = 1,
  KENTIK__SYNTHETICS__V202101BETA1__DNSRECORD__DNS_RECORD_AAAA = 2,
  KENTIK__SYNTHETICS__V202101BETA1__DNSRECORD__DNS_RECORD_CNAME = 3,
  KENTIK__SYNTHETICS__V202101BETA1__DNSRECORD__DNS_RECORD_DNAME = 4,
  KENTIK__SYNTHETICS__V202101BETA1__DNSRECORD__DNS_RECORD_NS = 5,
  KENTIK__SYNTHETICS__V202101BETA1__DNSRECORD__DNS_RECORD_MX = 6,
  KENTIK__SYNTHETICS__V202101BETA1__DNSRECORD__DNS_RECORD_PTR = 7,
  KENTIK__SYNTHETICS__V202101BETA1__DNSRECORD__DNS_RECORD_SOA = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__SYNTHETICS__V202101BETA1__DNSRECORD)
} Kentik__Synthetics__V202101beta1__DNSRecord;

/* --- messages --- */

struct  Kentik__Synthetics__V202101beta1__Health
{
  ProtobufCMessage base;
  char *health;
  Google__Protobuf__Timestamp *time;
};
#define KENTIK__SYNTHETICS__V202101BETA1__HEALTH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__health__descriptor) \
    , (char *)protobuf_c_empty_string, NULL }


struct  Kentik__Synthetics__V202101beta1__AgentTaskConfig
{
  ProtobufCMessage base;
  uint64_t id;
  size_t n_targets;
  char **targets;
};
#define KENTIK__SYNTHETICS__V202101BETA1__AGENT_TASK_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__agent_task_config__descriptor) \
    , 0, 0,NULL }


struct  Kentik__Synthetics__V202101beta1__TestHealth
{
  ProtobufCMessage base;
  char *test_id;
  size_t n_tasks;
  Kentik__Synthetics__V202101beta1__TaskHealth **tasks;
  Kentik__Synthetics__V202101beta1__Health *overall_health;
  size_t n_health_ts;
  Kentik__Synthetics__V202101beta1__Health **health_ts;
  size_t n_agent_task_config;
  Kentik__Synthetics__V202101beta1__AgentTaskConfig **agent_task_config;
  size_t n_mesh;
  Kentik__Synthetics__V202101beta1__MeshResponse **mesh;
};
#define KENTIK__SYNTHETICS__V202101BETA1__TEST_HEALTH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__test_health__descriptor) \
    , (char *)protobuf_c_empty_string, 0,NULL, NULL, 0,NULL, 0,NULL, 0,NULL }


struct  Kentik__Synthetics__V202101beta1__TaskHealth
{
  ProtobufCMessage base;
  Kentik__Synthetics__V202101beta1__Task *task;
  size_t n_agents;
  Kentik__Synthetics__V202101beta1__AgentHealth **agents;
  Kentik__Synthetics__V202101beta1__Health *overall_health;
  Kentik__Synthetics__V202101beta1__Agent *target_agent;
};
#define KENTIK__SYNTHETICS__V202101BETA1__TASK_HEALTH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__task_health__descriptor) \
    , NULL, 0,NULL, NULL, NULL }


struct  Kentik__Synthetics__V202101beta1__AgentHealth
{
  ProtobufCMessage base;
  Kentik__Synthetics__V202101beta1__Agent *agent;
  size_t n_health;
  Kentik__Synthetics__V202101beta1__HealthMoment **health;
  Kentik__Synthetics__V202101beta1__Health *overall_health;
};
#define KENTIK__SYNTHETICS__V202101BETA1__AGENT_HEALTH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__agent_health__descriptor) \
    , NULL, 0,NULL, NULL }


struct  Kentik__Synthetics__V202101beta1__HealthMoment__OtherHealthsEntry
{
  ProtobufCMessage base;
  char *key;
  char *value;
};
#define KENTIK__SYNTHETICS__V202101BETA1__HEALTH_MOMENT__OTHER_HEALTHS_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__health_moment__other_healths_entry__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  Kentik__Synthetics__V202101beta1__HealthMoment
{
  ProtobufCMessage base;
  Google__Protobuf__Timestamp *time;
  char *src_ip;
  char *dst_ip;
  double packet_loss;
  uint32_t avg_latency;
  uint32_t avg_weighted_latency;
  uint32_t rolling_avg_latency;
  uint32_t rolling_stddev_latency;
  uint32_t rolling_avg_weighted_latency;
  char *latency_health;
  char *packet_loss_health;
  Kentik__Synthetics__V202101beta1__Health *overall_health;
  /*
   * fields returned from backend grpc service
   */
  uint32_t avg_jitter;
  uint32_t rolling_avg_jitter;
  uint32_t rolling_std_jitter;
  char *jitter_health;
  char *data;
  uint32_t size;
  uint32_t status;
  char *task_type;
  size_t n_other_healths;
  Kentik__Synthetics__V202101beta1__HealthMoment__OtherHealthsEntry **other_healths;
};
#define KENTIK__SYNTHETICS__V202101BETA1__HEALTH_MOMENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__health_moment__descriptor) \
    , NULL, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0, 0, 0, 0, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL, 0, 0, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0, (char *)protobuf_c_empty_string, 0,NULL }


struct  Kentik__Synthetics__V202101beta1__Agent
{
  ProtobufCMessage base;
  /*
   * id of this agent.
   */
  char *id;
  /*
   * revert site_name to name to prevent breaking existing users
   */
  char *name;
  Kentik__Synthetics__V202101beta1__AgentStatus status;
  char *alias;
  char *type;
  char *os;
  char *ip;
  double lat;
  double long_;
  Google__Protobuf__Timestamp *last_authed;
  Kentik__Synthetics__V202101beta1__IPFamily family;
  uint32_t asn;
  char *site_id;
  char *version;
  char *challenge;
  char *city;
  char *region;
  char *country;
  size_t n_test_ids;
  char **test_ids;
  char *local_ip;
  char *cloud_vpc;
  Kentik__Synthetics__V202101beta1__ImplementType agent_impl;
};
#define KENTIK__SYNTHETICS__V202101BETA1__AGENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__agent__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, KENTIK__SYNTHETICS__V202101BETA1__AGENT_STATUS__AGENT_STATUS_UNSPECIFIED, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0, NULL, KENTIK__SYNTHETICS__V202101BETA1__IPFAMILY__IP_FAMILY_UNSPECIFIED, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, KENTIK__SYNTHETICS__V202101BETA1__IMPLEMENT_TYPE__IMPLEMENT_TYPE_UNSPECIFIED }


struct  Kentik__Synthetics__V202101beta1__PingTaskDefinition
{
  ProtobufCMessage base;
  char *target;
  uint32_t period;
  uint32_t expiry;
  uint32_t count;
};
#define KENTIK__SYNTHETICS__V202101BETA1__PING_TASK_DEFINITION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__ping_task_definition__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0, 0 }


struct  Kentik__Synthetics__V202101beta1__TraceTaskDefinition
{
  ProtobufCMessage base;
  char *target;
  uint32_t period;
  uint32_t expiry;
  uint32_t limit;
};
#define KENTIK__SYNTHETICS__V202101BETA1__TRACE_TASK_DEFINITION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__trace_task_definition__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0, 0 }


struct  Kentik__Synthetics__V202101beta1__HTTPTaskDefinition
{
  ProtobufCMessage base;
  char *target;
  uint32_t period;
  uint32_t expiry;
};
#define KENTIK__SYNTHETICS__V202101BETA1__HTTPTASK_DEFINITION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__httptask_definition__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0 }


typedef enum {
  KENTIK__SYNTHETICS__V202101BETA1__TASK__DEFINITION__NOT_SET = 0,
  KENTIK__SYNTHETICS__V202101BETA1__TASK__DEFINITION_PING = 9,
  KENTIK__SYNTHETICS__V202101BETA1__TASK__DEFINITION_TRACEROUTE = 10,
  KENTIK__SYNTHETICS__V202101BETA1__TASK__DEFINITION_HTTP = 11,
  KENTIK__SYNTHETICS__V202101BETA1__TASK__DEFINITION_KNOCK = 12,
  KENTIK__SYNTHETICS__V202101BETA1__TASK__DEFINITION_DNS = 13,
  KENTIK__SYNTHETICS__V202101BETA1__TASK__DEFINITION_SHAKE = 14
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__SYNTHETICS__V202101BETA1__TASK__DEFINITION__CASE)
} Kentik__Synthetics__V202101beta1__Task__DefinitionCase;

struct  Kentik__Synthetics__V202101beta1__Task
{
  ProtobufCMessage base;
  char *id;
  char *test_id;
  char *device_id;
  Kentik__Synthetics__V202101beta1__TaskState state;
  char *status;
  Kentik__Synthetics__V202101beta1__IPFamily family;
  Kentik__Synthetics__V202101beta1__Task__DefinitionCase definition_case;
  union {
    Kentik__Synthetics__V202101beta1__DNSTaskDefinition *dns;
    Kentik__Synthetics__V202101beta1__HTTPTaskDefinition *http;
    Kentik__Synthetics__V202101beta1__KnockTaskDefinition *knock;
    Kentik__Synthetics__V202101beta1__PingTaskDefinition *ping;
    Kentik__Synthetics__V202101beta1__ShakeTaskDefinition *shake;
    Kentik__Synthetics__V202101beta1__TraceTaskDefinition *traceroute;
  };
};
#define KENTIK__SYNTHETICS__V202101BETA1__TASK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__task__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, KENTIK__SYNTHETICS__V202101BETA1__TASK_STATE__TASK_STATE_UNSPECIFIED, (char *)protobuf_c_empty_string, KENTIK__SYNTHETICS__V202101BETA1__IPFAMILY__IP_FAMILY_UNSPECIFIED, KENTIK__SYNTHETICS__V202101BETA1__TASK__DEFINITION__NOT_SET, {0} }


struct  Kentik__Synthetics__V202101beta1__KnockTaskDefinition
{
  ProtobufCMessage base;
  char *target;
  uint32_t period;
  uint32_t expiry;
  uint32_t count;
  uint32_t port;
};
#define KENTIK__SYNTHETICS__V202101BETA1__KNOCK_TASK_DEFINITION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__knock_task_definition__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0, 0, 0 }


struct  Kentik__Synthetics__V202101beta1__DNSTaskDefinition
{
  ProtobufCMessage base;
  char *target;
  uint32_t period;
  uint32_t expiry;
  uint32_t count;
  uint32_t port;
  char *type;
  char *resolver;
};
#define KENTIK__SYNTHETICS__V202101BETA1__DNSTASK_DEFINITION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__dnstask_definition__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0, 0, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  Kentik__Synthetics__V202101beta1__ShakeTaskDefinition
{
  ProtobufCMessage base;
  char *target;
  uint32_t port;
  uint32_t period;
  uint32_t expiry;
};
#define KENTIK__SYNTHETICS__V202101BETA1__SHAKE_TASK_DEFINITION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__shake_task_definition__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0, 0 }


struct  Kentik__Synthetics__V202101beta1__UserInfo
{
  ProtobufCMessage base;
  char *id;
  char *email;
  char *full_name;
};
#define KENTIK__SYNTHETICS__V202101BETA1__USER_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__user_info__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  Kentik__Synthetics__V202101beta1__Test
{
  ProtobufCMessage base;
  char *id;
  char *name;
  char *type;
  char *device_id;
  Kentik__Synthetics__V202101beta1__TestStatus status;
  Kentik__Synthetics__V202101beta1__TestSettings *settings;
  Google__Protobuf__Timestamp *expires_on;
  Google__Protobuf__Timestamp *cdate;
  Google__Protobuf__Timestamp *edate;
  Kentik__Synthetics__V202101beta1__UserInfo *created_by;
  Kentik__Synthetics__V202101beta1__UserInfo *last_updated_by;
};
#define KENTIK__SYNTHETICS__V202101BETA1__TEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__test__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, KENTIK__SYNTHETICS__V202101BETA1__TEST_STATUS__TEST_STATUS_UNSPECIFIED, NULL, NULL, NULL, NULL, NULL, NULL }


struct  Kentik__Synthetics__V202101beta1__HTTPConfig__HeadersEntry
{
  ProtobufCMessage base;
  char *key;
  char *value;
};
#define KENTIK__SYNTHETICS__V202101BETA1__HTTPCONFIG__HEADERS_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__httpconfig__headers_entry__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  Kentik__Synthetics__V202101beta1__HTTPConfig__CssSelectorsEntry
{
  ProtobufCMessage base;
  char *key;
  char *value;
};
#define KENTIK__SYNTHETICS__V202101BETA1__HTTPCONFIG__CSS_SELECTORS_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__httpconfig__css_selectors_entry__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  Kentik__Synthetics__V202101beta1__HTTPConfig
{
  ProtobufCMessage base;
  uint32_t period;
  uint32_t expiry;
  char *method;
  size_t n_headers;
  Kentik__Synthetics__V202101beta1__HTTPConfig__HeadersEntry **headers;
  char *body;
  protobuf_c_boolean ignore_tls_errors;
  size_t n_css_selectors;
  Kentik__Synthetics__V202101beta1__HTTPConfig__CssSelectorsEntry **css_selectors;
};
#define KENTIK__SYNTHETICS__V202101BETA1__HTTPCONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__httpconfig__descriptor) \
    , 0, 0, (char *)protobuf_c_empty_string, 0,NULL, (char *)protobuf_c_empty_string, 0, 0,NULL }


typedef enum {
  KENTIK__SYNTHETICS__V202101BETA1__TEST_SETTINGS__DEFINITION__NOT_SET = 0,
  KENTIK__SYNTHETICS__V202101BETA1__TEST_SETTINGS__DEFINITION_HOSTNAME = 4,
  KENTIK__SYNTHETICS__V202101BETA1__TEST_SETTINGS__DEFINITION_IP = 5,
  KENTIK__SYNTHETICS__V202101BETA1__TEST_SETTINGS__DEFINITION_AGENT = 6,
  KENTIK__SYNTHETICS__V202101BETA1__TEST_SETTINGS__DEFINITION_FLOW = 7,
  KENTIK__SYNTHETICS__V202101BETA1__TEST_SETTINGS__DEFINITION_SITE = 8,
  KENTIK__SYNTHETICS__V202101BETA1__TEST_SETTINGS__DEFINITION_TAG = 9,
  KENTIK__SYNTHETICS__V202101BETA1__TEST_SETTINGS__DEFINITION_DNS = 10,
  KENTIK__SYNTHETICS__V202101BETA1__TEST_SETTINGS__DEFINITION_URL = 11,
  KENTIK__SYNTHETICS__V202101BETA1__TEST_SETTINGS__DEFINITION_NETWORK_GRID = 35,
  KENTIK__SYNTHETICS__V202101BETA1__TEST_SETTINGS__DEFINITION_PAGE_LOAD = 36,
  KENTIK__SYNTHETICS__V202101BETA1__TEST_SETTINGS__DEFINITION_DNS_GRID = 37,
  KENTIK__SYNTHETICS__V202101BETA1__TEST_SETTINGS__DEFINITION_APPLICATION_MESH = 38
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__SYNTHETICS__V202101BETA1__TEST_SETTINGS__DEFINITION__CASE)
} Kentik__Synthetics__V202101beta1__TestSettings__DefinitionCase;

struct  Kentik__Synthetics__V202101beta1__TestSettings
{
  ProtobufCMessage base;
  size_t n_agent_ids;
  char **agent_ids;
  uint32_t period;
  uint32_t count;
  uint32_t expiry;
  uint32_t limit;
  /*
   * Task types.
   */
  size_t n_tasks;
  char **tasks;
  Kentik__Synthetics__V202101beta1__HealthSettings *health_settings;
  Kentik__Synthetics__V202101beta1__TestMonitoringSettings *monitoring_settings;
  Kentik__Synthetics__V202101beta1__TestPingSettings *ping;
  Kentik__Synthetics__V202101beta1__TestTraceSettings *trace;
  uint32_t port;
  char *protocol;
  Kentik__Synthetics__V202101beta1__IPFamily family;
  size_t n_servers;
  char **servers;
  protobuf_c_boolean use_local_ip;
  protobuf_c_boolean reciprocal;
  uint32_t rollup_level;
  Kentik__Synthetics__V202101beta1__HTTPConfig *http;
  Kentik__Synthetics__V202101beta1__TestSettings__DefinitionCase definition_case;
  union {
    Kentik__Synthetics__V202101beta1__AgentTest *agent;
    Kentik__Synthetics__V202101beta1__ApplicationMeshTest *application_mesh;
    Kentik__Synthetics__V202101beta1__DnsTest *dns;
    Kentik__Synthetics__V202101beta1__DnsGridTest *dns_grid;
    Kentik__Synthetics__V202101beta1__FlowTest *flow;
    Kentik__Synthetics__V202101beta1__HostnameTest *hostname;
    Kentik__Synthetics__V202101beta1__IpTest *ip;
    Kentik__Synthetics__V202101beta1__GridTest *network_grid;
    Kentik__Synthetics__V202101beta1__UrlTest *page_load;
    Kentik__Synthetics__V202101beta1__SiteTest *site;
    Kentik__Synthetics__V202101beta1__TagTest *tag;
    Kentik__Synthetics__V202101beta1__UrlTest *url;
  };
};
#define KENTIK__SYNTHETICS__V202101BETA1__TEST_SETTINGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__test_settings__descriptor) \
    , 0,NULL, 0, 0, 0, 0, 0,NULL, NULL, NULL, NULL, NULL, 0, (char *)protobuf_c_empty_string, KENTIK__SYNTHETICS__V202101BETA1__IPFAMILY__IP_FAMILY_UNSPECIFIED, 0,NULL, 0, 0, 0, NULL, KENTIK__SYNTHETICS__V202101BETA1__TEST_SETTINGS__DEFINITION__NOT_SET, {0} }


struct  Kentik__Synthetics__V202101beta1__TestTraceSettings
{
  ProtobufCMessage base;
  float period;
  float count;
  char *protocol;
  float port;
  float expiry;
  float limit;
  float delay;
};
#define KENTIK__SYNTHETICS__V202101BETA1__TEST_TRACE_SETTINGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__test_trace_settings__descriptor) \
    , 0, 0, (char *)protobuf_c_empty_string, 0, 0, 0, 0 }


struct  Kentik__Synthetics__V202101beta1__TestPingSettings
{
  ProtobufCMessage base;
  float period;
  float count;
  float expiry;
  float delay;
};
#define KENTIK__SYNTHETICS__V202101BETA1__TEST_PING_SETTINGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__test_ping_settings__descriptor) \
    , 0, 0, 0, 0 }


struct  Kentik__Synthetics__V202101beta1__TestMonitoringSettings
{
  ProtobufCMessage base;
  char *activation_grace_period;
  char *activation_time_unit;
  char *activation_time_window;
  char *activation_times;
  size_t n_notification_channels;
  char **notification_channels;
};
#define KENTIK__SYNTHETICS__V202101BETA1__TEST_MONITORING_SETTINGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__test_monitoring_settings__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL }


struct  Kentik__Synthetics__V202101beta1__HealthSettings
{
  ProtobufCMessage base;
  float latency_critical;
  float latency_warning;
  float packet_loss_critical;
  float packet_loss_warning;
  float jitter_critical;
  float jitter_warning;
  float http_latency_critical;
  float http_latency_warning;
  size_t n_http_valid_codes;
  uint32_t *http_valid_codes;
  size_t n_dns_valid_codes;
  uint32_t *dns_valid_codes;
  float latency_critical_stddev;
  float latency_warning_stddev;
  float jitter_critical_stddev;
  float jitter_warning_stddev;
  float http_latency_critical_stddev;
  float http_latency_warning_stddev;
};
#define KENTIK__SYNTHETICS__V202101BETA1__HEALTH_SETTINGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__health_settings__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0,NULL, 0,NULL, 0, 0, 0, 0, 0, 0 }


struct  Kentik__Synthetics__V202101beta1__HostnameTest
{
  ProtobufCMessage base;
  char *target;
};
#define KENTIK__SYNTHETICS__V202101BETA1__HOSTNAME_TEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__hostname_test__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  Kentik__Synthetics__V202101beta1__IpTest
{
  ProtobufCMessage base;
  size_t n_targets;
  char **targets;
};
#define KENTIK__SYNTHETICS__V202101BETA1__IP_TEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__ip_test__descriptor) \
    , 0,NULL }


struct  Kentik__Synthetics__V202101beta1__AgentTest
{
  ProtobufCMessage base;
  char *target;
};
#define KENTIK__SYNTHETICS__V202101BETA1__AGENT_TEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__agent_test__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  Kentik__Synthetics__V202101beta1__FlowTest
{
  ProtobufCMessage base;
  char *target;
  /*
   * How often to generate tasks.
   */
  uint32_t target_refresh_interval_millis;
  /*
   * Used for top N.
   */
  uint32_t max_tasks;
  /*
   * What type of flow to look at -- asn, cdn, country, ...
   */
  char *type;
  char *inet_direction;
  char *direction;
};
#define KENTIK__SYNTHETICS__V202101BETA1__FLOW_TEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__flow_test__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  Kentik__Synthetics__V202101beta1__SiteTest
{
  ProtobufCMessage base;
  char *target;
};
#define KENTIK__SYNTHETICS__V202101BETA1__SITE_TEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__site_test__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  Kentik__Synthetics__V202101beta1__TagTest
{
  ProtobufCMessage base;
  char *target;
};
#define KENTIK__SYNTHETICS__V202101BETA1__TAG_TEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__tag_test__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  Kentik__Synthetics__V202101beta1__DnsTest
{
  ProtobufCMessage base;
  char *target;
  Kentik__Synthetics__V202101beta1__DNSRecord type;
};
#define KENTIK__SYNTHETICS__V202101BETA1__DNS_TEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__dns_test__descriptor) \
    , (char *)protobuf_c_empty_string, KENTIK__SYNTHETICS__V202101BETA1__DNSRECORD__DNS_RECORD_UNSPECIFIED }


struct  Kentik__Synthetics__V202101beta1__UrlTest
{
  ProtobufCMessage base;
  char *target;
};
#define KENTIK__SYNTHETICS__V202101BETA1__URL_TEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__url_test__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  Kentik__Synthetics__V202101beta1__GridTest
{
  ProtobufCMessage base;
  size_t n_targets;
  char **targets;
};
#define KENTIK__SYNTHETICS__V202101BETA1__GRID_TEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__grid_test__descriptor) \
    , 0,NULL }


struct  Kentik__Synthetics__V202101beta1__DnsGridTest
{
  ProtobufCMessage base;
  size_t n_targets;
  char **targets;
  Kentik__Synthetics__V202101beta1__DNSRecord type;
};
#define KENTIK__SYNTHETICS__V202101BETA1__DNS_GRID_TEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__dns_grid_test__descriptor) \
    , 0,NULL, KENTIK__SYNTHETICS__V202101BETA1__DNSRECORD__DNS_RECORD_UNSPECIFIED }


struct  Kentik__Synthetics__V202101beta1__ApplicationMeshTest
{
  ProtobufCMessage base;
};
#define KENTIK__SYNTHETICS__V202101BETA1__APPLICATION_MESH_TEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__application_mesh_test__descriptor) \
     }


struct  Kentik__Synthetics__V202101beta1__MeshResponse
{
  ProtobufCMessage base;
  char *id;
  char *name;
  char *local_ip;
  char *ip;
  char *alias;
  size_t n_columns;
  Kentik__Synthetics__V202101beta1__MeshColumn **columns;
};
#define KENTIK__SYNTHETICS__V202101BETA1__MESH_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__mesh_response__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL }


struct  Kentik__Synthetics__V202101beta1__MeshColumn
{
  ProtobufCMessage base;
  char *id;
  char *name;
  char *alias;
  char *target;
  Kentik__Synthetics__V202101beta1__MeshMetrics *metrics;
  size_t n_health;
  Kentik__Synthetics__V202101beta1__MeshMetrics **health;
};
#define KENTIK__SYNTHETICS__V202101BETA1__MESH_COLUMN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__mesh_column__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL, 0,NULL }


struct  Kentik__Synthetics__V202101beta1__MeshMetric
{
  ProtobufCMessage base;
  char *name;
  char *health;
  int64_t value;
};
#define KENTIK__SYNTHETICS__V202101BETA1__MESH_METRIC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__mesh_metric__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0 }


struct  Kentik__Synthetics__V202101beta1__MeshMetrics
{
  ProtobufCMessage base;
  Google__Protobuf__Timestamp *time;
  Kentik__Synthetics__V202101beta1__MeshMetric *latency;
  Kentik__Synthetics__V202101beta1__MeshMetric *packet_loss;
  Kentik__Synthetics__V202101beta1__MeshMetric *jitter;
};
#define KENTIK__SYNTHETICS__V202101BETA1__MESH_METRICS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__mesh_metrics__descriptor) \
    , NULL, NULL, NULL, NULL }


struct  Kentik__Synthetics__V202101beta1__ASN
{
  ProtobufCMessage base;
  uint32_t id;
  char *name;
};
#define KENTIK__SYNTHETICS__V202101BETA1__ASN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__asn__descriptor) \
    , 0, (char *)protobuf_c_empty_string }


struct  Kentik__Synthetics__V202101beta1__Country
{
  ProtobufCMessage base;
  char *code;
  char *name;
};
#define KENTIK__SYNTHETICS__V202101BETA1__COUNTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__country__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  Kentik__Synthetics__V202101beta1__Region
{
  ProtobufCMessage base;
  int64_t id;
  char *name;
};
#define KENTIK__SYNTHETICS__V202101BETA1__REGION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__region__descriptor) \
    , 0, (char *)protobuf_c_empty_string }


struct  Kentik__Synthetics__V202101beta1__City
{
  ProtobufCMessage base;
  char *id;
  char *name;
  double latitude;
  double longitude;
};
#define KENTIK__SYNTHETICS__V202101BETA1__CITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__city__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0 }


struct  Kentik__Synthetics__V202101beta1__Geo
{
  ProtobufCMessage base;
  Kentik__Synthetics__V202101beta1__Country *country;
  Kentik__Synthetics__V202101beta1__Region *region;
  Kentik__Synthetics__V202101beta1__City *city;
};
#define KENTIK__SYNTHETICS__V202101BETA1__GEO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__geo__descriptor) \
    , NULL, NULL, NULL }


struct  Kentik__Synthetics__V202101beta1__DNS
{
  ProtobufCMessage base;
  char *name;
};
#define KENTIK__SYNTHETICS__V202101BETA1__DNS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__dns__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  Kentik__Synthetics__V202101beta1__IPInfo
{
  ProtobufCMessage base;
  char *ip;
  Kentik__Synthetics__V202101beta1__ASN *asn;
  Kentik__Synthetics__V202101beta1__Geo *geo;
  Kentik__Synthetics__V202101beta1__DNS *dns;
  char *device_id;
  char *site_id;
  char *egress;
};
#define KENTIK__SYNTHETICS__V202101BETA1__IPINFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__ipinfo__descriptor) \
    , (char *)protobuf_c_empty_string, NULL, NULL, NULL, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * ID type for the specified IP address
 */
struct  Kentik__Synthetics__V202101beta1__IDByIP
{
  ProtobufCMessage base;
  /*
   * ID value of type
   */
  char *id;
  /*
   * IP address associate with IP
   */
  char *ip;
};
#define KENTIK__SYNTHETICS__V202101BETA1__IDBY_IP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__idby_ip__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * Traceroute lookup info
 */
struct  Kentik__Synthetics__V202101beta1__TracerouteLookup
{
  ProtobufCMessage base;
  /*
   * Agent ID by IP
   */
  size_t n_agent_id_by_ip;
  Kentik__Synthetics__V202101beta1__IDByIP **agent_id_by_ip;
  /*
   * Agents info
   */
  size_t n_agents;
  Kentik__Synthetics__V202101beta1__Agent **agents;
  /*
   * ASN
   */
  size_t n_asns;
  Kentik__Synthetics__V202101beta1__ASN **asns;
  /*
   * Device ID by IP
   */
  size_t n_device_id_by_ip;
  Kentik__Synthetics__V202101beta1__IDByIP **device_id_by_ip;
  /*
   * Site ID by IP
   */
  size_t n_site_id_by_ip;
  Kentik__Synthetics__V202101beta1__IDByIP **site_id_by_ip;
  /*
   * IP Info
   */
  size_t n_ips;
  Kentik__Synthetics__V202101beta1__IPInfo **ips;
};
#define KENTIK__SYNTHETICS__V202101BETA1__TRACEROUTE_LOOKUP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__traceroute_lookup__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL }


struct  Kentik__Synthetics__V202101beta1__TraceHop
{
  ProtobufCMessage base;
  int32_t ttl;
  char *ip;
  protobuf_c_boolean timeout;
  int32_t latency;
  int32_t min_expected_latency;
  int32_t asn;
  int32_t site;
  int32_t region;
  protobuf_c_boolean target;
  protobuf_c_boolean trace_end;
};
#define KENTIK__SYNTHETICS__V202101BETA1__TRACE_HOP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__trace_hop__descriptor) \
    , 0, (char *)protobuf_c_empty_string, 0, 0, 0, 0, 0, 0, 0, 0 }


/*
 * Probing detail
 */
struct  Kentik__Synthetics__V202101beta1__TraceProbe
{
  ProtobufCMessage base;
  /*
   * AS path
   */
  size_t n_as_path;
  int32_t *as_path;
  /*
   * Completed probe
   */
  protobuf_c_boolean completed;
  /*
   * Hop count
   */
  int32_t hop_count;
  /*
   * Region path trace
   */
  size_t n_region_path;
  char **region_path;
  /*
   * Site path trace
   */
  size_t n_site_path;
  int32_t *site_path;
  size_t n_hops;
  Kentik__Synthetics__V202101beta1__TraceHop **hops;
};
#define KENTIK__SYNTHETICS__V202101BETA1__TRACE_PROBE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__trace_probe__descriptor) \
    , 0,NULL, 0, 0, 0,NULL, 0,NULL, 0,NULL }


/*
 * Trace detail
 */
struct  Kentik__Synthetics__V202101beta1__Trace
{
  ProtobufCMessage base;
  /*
   * ID of agent for the trace
   */
  char *agent_id;
  /*
   * IP of agent for the trace
   */
  char *agent_ip;
  /*
   * Remote target IP
   */
  char *target_ip;
  /*
   * Number of hops for the trace
   */
  int32_t hop_count;
  /*
   * Probing info
   */
  size_t n_probes;
  Kentik__Synthetics__V202101beta1__TraceProbe **probes;
};
#define KENTIK__SYNTHETICS__V202101BETA1__TRACE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__trace__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0,NULL }


/*
 * Statistics for traceroute count
 */
struct  Kentik__Synthetics__V202101beta1__Stats
{
  ProtobufCMessage base;
  /*
   * Average statistic
   */
  int32_t average;
  /*
   * Maximum statistic
   */
  int32_t max;
  /*
   * Total statistic
   */
  int32_t total;
};
#define KENTIK__SYNTHETICS__V202101BETA1__STATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__stats__descriptor) \
    , 0, 0, 0 }


struct  Kentik__Synthetics__V202101beta1__TracerouteResult
{
  ProtobufCMessage base;
  Google__Protobuf__Timestamp *time;
  size_t n_traces;
  Kentik__Synthetics__V202101beta1__Trace **traces;
  int32_t hop_count;
  Kentik__Synthetics__V202101beta1__Stats *count;
  Kentik__Synthetics__V202101beta1__Stats *distance;
};
#define KENTIK__SYNTHETICS__V202101BETA1__TRACEROUTE_RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__traceroute_result__descriptor) \
    , NULL, 0,NULL, 0, NULL, NULL }


/*
 * Traceroute info
 */
struct  Kentik__Synthetics__V202101beta1__TracerouteInfo
{
  ProtobufCMessage base;
  /*
   * Indicate trace route is trunciated
   */
  protobuf_c_boolean is_trace_routes_truncated;
  /*
   * Maximum number of asn path
   */
  int32_t max_asn_path_count;
  /*
   * Maximum number of site path
   */
  int32_t max_site_path_count;
  /*
   * Maximum number of region path
   */
  int32_t max_region_path_count;
};
#define KENTIK__SYNTHETICS__V202101BETA1__TRACEROUTE_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__traceroute_info__descriptor) \
    , 0, 0, 0, 0 }


struct  Kentik__Synthetics__V202101beta1__GetHealthForTestsRequest
{
  ProtobufCMessage base;
  /*
   * List of ids of the tests to get health for.
   */
  size_t n_ids;
  char **ids;
  /*
   * Start of the time interval for this query.
   */
  Google__Protobuf__Timestamp *start_time;
  /*
   * End of the time interval for this query.
   */
  Google__Protobuf__Timestamp *end_time;
  /*
   * Optionally, only look at a subset of agents
   */
  size_t n_agent_ids;
  char **agent_ids;
  /*
   * Optionally only look at a subset of tasks -- this lets you limit targets.
   */
  size_t n_task_ids;
  char **task_ids;
  protobuf_c_boolean augment;
};
#define KENTIK__SYNTHETICS__V202101BETA1__GET_HEALTH_FOR_TESTS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__get_health_for_tests_request__descriptor) \
    , 0,NULL, NULL, NULL, 0,NULL, 0,NULL, 0 }


struct  Kentik__Synthetics__V202101beta1__GetHealthForTestsResponse
{
  ProtobufCMessage base;
  size_t n_health;
  Kentik__Synthetics__V202101beta1__TestHealth **health;
};
#define KENTIK__SYNTHETICS__V202101BETA1__GET_HEALTH_FOR_TESTS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__get_health_for_tests_response__descriptor) \
    , 0,NULL }


struct  Kentik__Synthetics__V202101beta1__GetTraceForTestRequest
{
  ProtobufCMessage base;
  /*
   * Test id
   */
  char *id;
  /*
   * Start of the time interval for this query.
   */
  Google__Protobuf__Timestamp *start_time;
  /*
   * End of the time interval for this query.
   */
  Google__Protobuf__Timestamp *end_time;
  /*
   * Optionally, limit the query to these agent ids
   */
  size_t n_agent_ids;
  char **agent_ids;
  /*
   * Optionally, limit the query to these destination IP addresses
   */
  size_t n_target_ips;
  char **target_ips;
};
#define KENTIK__SYNTHETICS__V202101BETA1__GET_TRACE_FOR_TEST_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__get_trace_for_test_request__descriptor) \
    , (char *)protobuf_c_empty_string, NULL, NULL, 0,NULL, 0,NULL }


struct  Kentik__Synthetics__V202101beta1__GetTraceForTestResponse
{
  ProtobufCMessage base;
  Kentik__Synthetics__V202101beta1__TracerouteLookup *lookups;
  size_t n_trace_routes;
  Kentik__Synthetics__V202101beta1__TracerouteResult **trace_routes;
  Kentik__Synthetics__V202101beta1__TracerouteInfo *trace_routes_info;
};
#define KENTIK__SYNTHETICS__V202101BETA1__GET_TRACE_FOR_TEST_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__get_trace_for_test_response__descriptor) \
    , NULL, 0,NULL, NULL }


struct  Kentik__Synthetics__V202101beta1__ListAgentsRequest
{
  ProtobufCMessage base;
};
#define KENTIK__SYNTHETICS__V202101BETA1__LIST_AGENTS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__list_agents_request__descriptor) \
     }


struct  Kentik__Synthetics__V202101beta1__ListAgentsResponse
{
  ProtobufCMessage base;
  size_t n_agents;
  Kentik__Synthetics__V202101beta1__Agent **agents;
  uint32_t invalid_agents_count;
};
#define KENTIK__SYNTHETICS__V202101BETA1__LIST_AGENTS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__list_agents_response__descriptor) \
    , 0,NULL, 0 }


struct  Kentik__Synthetics__V202101beta1__GetAgentRequest
{
  ProtobufCMessage base;
  char *id;
};
#define KENTIK__SYNTHETICS__V202101BETA1__GET_AGENT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__get_agent_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  Kentik__Synthetics__V202101beta1__GetAgentResponse
{
  ProtobufCMessage base;
  Kentik__Synthetics__V202101beta1__Agent *agent;
};
#define KENTIK__SYNTHETICS__V202101BETA1__GET_AGENT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__get_agent_response__descriptor) \
    , NULL }


struct  Kentik__Synthetics__V202101beta1__PatchAgentRequest
{
  ProtobufCMessage base;
  Kentik__Synthetics__V202101beta1__Agent *agent;
  /*
   * CSV values of fields follow the path of Agent object with dot notation (ie. "agent.alias,export.type")
   */
  Google__Protobuf__FieldMask *mask;
};
#define KENTIK__SYNTHETICS__V202101BETA1__PATCH_AGENT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__patch_agent_request__descriptor) \
    , NULL, NULL }


struct  Kentik__Synthetics__V202101beta1__PatchAgentResponse
{
  ProtobufCMessage base;
  Kentik__Synthetics__V202101beta1__Agent *agent;
};
#define KENTIK__SYNTHETICS__V202101BETA1__PATCH_AGENT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__patch_agent_response__descriptor) \
    , NULL }


struct  Kentik__Synthetics__V202101beta1__DeleteAgentRequest
{
  ProtobufCMessage base;
  char *id;
};
#define KENTIK__SYNTHETICS__V202101BETA1__DELETE_AGENT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__delete_agent_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  Kentik__Synthetics__V202101beta1__DeleteAgentResponse
{
  ProtobufCMessage base;
};
#define KENTIK__SYNTHETICS__V202101BETA1__DELETE_AGENT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__delete_agent_response__descriptor) \
     }


struct  Kentik__Synthetics__V202101beta1__ListTestsRequest
{
  ProtobufCMessage base;
  protobuf_c_boolean preset;
};
#define KENTIK__SYNTHETICS__V202101BETA1__LIST_TESTS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__list_tests_request__descriptor) \
    , 0 }


struct  Kentik__Synthetics__V202101beta1__ListTestsResponse
{
  ProtobufCMessage base;
  size_t n_tests;
  Kentik__Synthetics__V202101beta1__Test **tests;
  uint32_t invalid_tests_count;
};
#define KENTIK__SYNTHETICS__V202101BETA1__LIST_TESTS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__list_tests_response__descriptor) \
    , 0,NULL, 0 }


struct  Kentik__Synthetics__V202101beta1__CreateTestRequest
{
  ProtobufCMessage base;
  Kentik__Synthetics__V202101beta1__Test *test;
};
#define KENTIK__SYNTHETICS__V202101BETA1__CREATE_TEST_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__create_test_request__descriptor) \
    , NULL }


struct  Kentik__Synthetics__V202101beta1__CreateTestResponse
{
  ProtobufCMessage base;
  Kentik__Synthetics__V202101beta1__Test *test;
};
#define KENTIK__SYNTHETICS__V202101BETA1__CREATE_TEST_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__create_test_response__descriptor) \
    , NULL }


struct  Kentik__Synthetics__V202101beta1__GetTestRequest
{
  ProtobufCMessage base;
  char *id;
};
#define KENTIK__SYNTHETICS__V202101BETA1__GET_TEST_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__get_test_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  Kentik__Synthetics__V202101beta1__GetTestResponse
{
  ProtobufCMessage base;
  Kentik__Synthetics__V202101beta1__Test *test;
};
#define KENTIK__SYNTHETICS__V202101BETA1__GET_TEST_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__get_test_response__descriptor) \
    , NULL }


struct  Kentik__Synthetics__V202101beta1__SetTestStatusRequest
{
  ProtobufCMessage base;
  char *id;
  Kentik__Synthetics__V202101beta1__TestStatus status;
};
#define KENTIK__SYNTHETICS__V202101BETA1__SET_TEST_STATUS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__set_test_status_request__descriptor) \
    , (char *)protobuf_c_empty_string, KENTIK__SYNTHETICS__V202101BETA1__TEST_STATUS__TEST_STATUS_UNSPECIFIED }


struct  Kentik__Synthetics__V202101beta1__SetTestStatusResponse
{
  ProtobufCMessage base;
};
#define KENTIK__SYNTHETICS__V202101BETA1__SET_TEST_STATUS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__set_test_status_response__descriptor) \
     }


struct  Kentik__Synthetics__V202101beta1__PatchTestRequest
{
  ProtobufCMessage base;
  Kentik__Synthetics__V202101beta1__Test *test;
  /*
   * CSV values of fields follow the path of Test object with dot notation (ie. "test.name,test.settings")
   */
  Google__Protobuf__FieldMask *mask;
};
#define KENTIK__SYNTHETICS__V202101BETA1__PATCH_TEST_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__patch_test_request__descriptor) \
    , NULL, NULL }


struct  Kentik__Synthetics__V202101beta1__PatchTestResponse
{
  ProtobufCMessage base;
  Kentik__Synthetics__V202101beta1__Test *test;
};
#define KENTIK__SYNTHETICS__V202101BETA1__PATCH_TEST_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__patch_test_response__descriptor) \
    , NULL }


struct  Kentik__Synthetics__V202101beta1__DeleteTestRequest
{
  ProtobufCMessage base;
  char *id;
};
#define KENTIK__SYNTHETICS__V202101BETA1__DELETE_TEST_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__delete_test_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  Kentik__Synthetics__V202101beta1__DeleteTestResponse
{
  ProtobufCMessage base;
};
#define KENTIK__SYNTHETICS__V202101BETA1__DELETE_TEST_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__synthetics__v202101beta1__delete_test_response__descriptor) \
     }


/* Kentik__Synthetics__V202101beta1__Health methods */
void   kentik__synthetics__v202101beta1__health__init
                     (Kentik__Synthetics__V202101beta1__Health         *message);
size_t kentik__synthetics__v202101beta1__health__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__Health   *message);
size_t kentik__synthetics__v202101beta1__health__pack
                     (const Kentik__Synthetics__V202101beta1__Health   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__health__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__Health   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__Health *
       kentik__synthetics__v202101beta1__health__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__health__free_unpacked
                     (Kentik__Synthetics__V202101beta1__Health *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__AgentTaskConfig methods */
void   kentik__synthetics__v202101beta1__agent_task_config__init
                     (Kentik__Synthetics__V202101beta1__AgentTaskConfig         *message);
size_t kentik__synthetics__v202101beta1__agent_task_config__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__AgentTaskConfig   *message);
size_t kentik__synthetics__v202101beta1__agent_task_config__pack
                     (const Kentik__Synthetics__V202101beta1__AgentTaskConfig   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__agent_task_config__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__AgentTaskConfig   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__AgentTaskConfig *
       kentik__synthetics__v202101beta1__agent_task_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__agent_task_config__free_unpacked
                     (Kentik__Synthetics__V202101beta1__AgentTaskConfig *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__TestHealth methods */
void   kentik__synthetics__v202101beta1__test_health__init
                     (Kentik__Synthetics__V202101beta1__TestHealth         *message);
size_t kentik__synthetics__v202101beta1__test_health__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__TestHealth   *message);
size_t kentik__synthetics__v202101beta1__test_health__pack
                     (const Kentik__Synthetics__V202101beta1__TestHealth   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__test_health__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__TestHealth   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__TestHealth *
       kentik__synthetics__v202101beta1__test_health__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__test_health__free_unpacked
                     (Kentik__Synthetics__V202101beta1__TestHealth *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__TaskHealth methods */
void   kentik__synthetics__v202101beta1__task_health__init
                     (Kentik__Synthetics__V202101beta1__TaskHealth         *message);
size_t kentik__synthetics__v202101beta1__task_health__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__TaskHealth   *message);
size_t kentik__synthetics__v202101beta1__task_health__pack
                     (const Kentik__Synthetics__V202101beta1__TaskHealth   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__task_health__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__TaskHealth   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__TaskHealth *
       kentik__synthetics__v202101beta1__task_health__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__task_health__free_unpacked
                     (Kentik__Synthetics__V202101beta1__TaskHealth *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__AgentHealth methods */
void   kentik__synthetics__v202101beta1__agent_health__init
                     (Kentik__Synthetics__V202101beta1__AgentHealth         *message);
size_t kentik__synthetics__v202101beta1__agent_health__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__AgentHealth   *message);
size_t kentik__synthetics__v202101beta1__agent_health__pack
                     (const Kentik__Synthetics__V202101beta1__AgentHealth   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__agent_health__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__AgentHealth   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__AgentHealth *
       kentik__synthetics__v202101beta1__agent_health__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__agent_health__free_unpacked
                     (Kentik__Synthetics__V202101beta1__AgentHealth *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__HealthMoment__OtherHealthsEntry methods */
void   kentik__synthetics__v202101beta1__health_moment__other_healths_entry__init
                     (Kentik__Synthetics__V202101beta1__HealthMoment__OtherHealthsEntry         *message);
/* Kentik__Synthetics__V202101beta1__HealthMoment methods */
void   kentik__synthetics__v202101beta1__health_moment__init
                     (Kentik__Synthetics__V202101beta1__HealthMoment         *message);
size_t kentik__synthetics__v202101beta1__health_moment__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__HealthMoment   *message);
size_t kentik__synthetics__v202101beta1__health_moment__pack
                     (const Kentik__Synthetics__V202101beta1__HealthMoment   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__health_moment__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__HealthMoment   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__HealthMoment *
       kentik__synthetics__v202101beta1__health_moment__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__health_moment__free_unpacked
                     (Kentik__Synthetics__V202101beta1__HealthMoment *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__Agent methods */
void   kentik__synthetics__v202101beta1__agent__init
                     (Kentik__Synthetics__V202101beta1__Agent         *message);
size_t kentik__synthetics__v202101beta1__agent__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__Agent   *message);
size_t kentik__synthetics__v202101beta1__agent__pack
                     (const Kentik__Synthetics__V202101beta1__Agent   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__agent__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__Agent   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__Agent *
       kentik__synthetics__v202101beta1__agent__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__agent__free_unpacked
                     (Kentik__Synthetics__V202101beta1__Agent *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__PingTaskDefinition methods */
void   kentik__synthetics__v202101beta1__ping_task_definition__init
                     (Kentik__Synthetics__V202101beta1__PingTaskDefinition         *message);
size_t kentik__synthetics__v202101beta1__ping_task_definition__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__PingTaskDefinition   *message);
size_t kentik__synthetics__v202101beta1__ping_task_definition__pack
                     (const Kentik__Synthetics__V202101beta1__PingTaskDefinition   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__ping_task_definition__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__PingTaskDefinition   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__PingTaskDefinition *
       kentik__synthetics__v202101beta1__ping_task_definition__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__ping_task_definition__free_unpacked
                     (Kentik__Synthetics__V202101beta1__PingTaskDefinition *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__TraceTaskDefinition methods */
void   kentik__synthetics__v202101beta1__trace_task_definition__init
                     (Kentik__Synthetics__V202101beta1__TraceTaskDefinition         *message);
size_t kentik__synthetics__v202101beta1__trace_task_definition__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__TraceTaskDefinition   *message);
size_t kentik__synthetics__v202101beta1__trace_task_definition__pack
                     (const Kentik__Synthetics__V202101beta1__TraceTaskDefinition   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__trace_task_definition__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__TraceTaskDefinition   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__TraceTaskDefinition *
       kentik__synthetics__v202101beta1__trace_task_definition__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__trace_task_definition__free_unpacked
                     (Kentik__Synthetics__V202101beta1__TraceTaskDefinition *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__HTTPTaskDefinition methods */
void   kentik__synthetics__v202101beta1__httptask_definition__init
                     (Kentik__Synthetics__V202101beta1__HTTPTaskDefinition         *message);
size_t kentik__synthetics__v202101beta1__httptask_definition__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__HTTPTaskDefinition   *message);
size_t kentik__synthetics__v202101beta1__httptask_definition__pack
                     (const Kentik__Synthetics__V202101beta1__HTTPTaskDefinition   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__httptask_definition__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__HTTPTaskDefinition   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__HTTPTaskDefinition *
       kentik__synthetics__v202101beta1__httptask_definition__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__httptask_definition__free_unpacked
                     (Kentik__Synthetics__V202101beta1__HTTPTaskDefinition *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__Task methods */
void   kentik__synthetics__v202101beta1__task__init
                     (Kentik__Synthetics__V202101beta1__Task         *message);
size_t kentik__synthetics__v202101beta1__task__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__Task   *message);
size_t kentik__synthetics__v202101beta1__task__pack
                     (const Kentik__Synthetics__V202101beta1__Task   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__task__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__Task   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__Task *
       kentik__synthetics__v202101beta1__task__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__task__free_unpacked
                     (Kentik__Synthetics__V202101beta1__Task *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__KnockTaskDefinition methods */
void   kentik__synthetics__v202101beta1__knock_task_definition__init
                     (Kentik__Synthetics__V202101beta1__KnockTaskDefinition         *message);
size_t kentik__synthetics__v202101beta1__knock_task_definition__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__KnockTaskDefinition   *message);
size_t kentik__synthetics__v202101beta1__knock_task_definition__pack
                     (const Kentik__Synthetics__V202101beta1__KnockTaskDefinition   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__knock_task_definition__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__KnockTaskDefinition   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__KnockTaskDefinition *
       kentik__synthetics__v202101beta1__knock_task_definition__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__knock_task_definition__free_unpacked
                     (Kentik__Synthetics__V202101beta1__KnockTaskDefinition *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__DNSTaskDefinition methods */
void   kentik__synthetics__v202101beta1__dnstask_definition__init
                     (Kentik__Synthetics__V202101beta1__DNSTaskDefinition         *message);
size_t kentik__synthetics__v202101beta1__dnstask_definition__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__DNSTaskDefinition   *message);
size_t kentik__synthetics__v202101beta1__dnstask_definition__pack
                     (const Kentik__Synthetics__V202101beta1__DNSTaskDefinition   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__dnstask_definition__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__DNSTaskDefinition   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__DNSTaskDefinition *
       kentik__synthetics__v202101beta1__dnstask_definition__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__dnstask_definition__free_unpacked
                     (Kentik__Synthetics__V202101beta1__DNSTaskDefinition *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__ShakeTaskDefinition methods */
void   kentik__synthetics__v202101beta1__shake_task_definition__init
                     (Kentik__Synthetics__V202101beta1__ShakeTaskDefinition         *message);
size_t kentik__synthetics__v202101beta1__shake_task_definition__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__ShakeTaskDefinition   *message);
size_t kentik__synthetics__v202101beta1__shake_task_definition__pack
                     (const Kentik__Synthetics__V202101beta1__ShakeTaskDefinition   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__shake_task_definition__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__ShakeTaskDefinition   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__ShakeTaskDefinition *
       kentik__synthetics__v202101beta1__shake_task_definition__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__shake_task_definition__free_unpacked
                     (Kentik__Synthetics__V202101beta1__ShakeTaskDefinition *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__UserInfo methods */
void   kentik__synthetics__v202101beta1__user_info__init
                     (Kentik__Synthetics__V202101beta1__UserInfo         *message);
size_t kentik__synthetics__v202101beta1__user_info__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__UserInfo   *message);
size_t kentik__synthetics__v202101beta1__user_info__pack
                     (const Kentik__Synthetics__V202101beta1__UserInfo   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__user_info__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__UserInfo   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__UserInfo *
       kentik__synthetics__v202101beta1__user_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__user_info__free_unpacked
                     (Kentik__Synthetics__V202101beta1__UserInfo *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__Test methods */
void   kentik__synthetics__v202101beta1__test__init
                     (Kentik__Synthetics__V202101beta1__Test         *message);
size_t kentik__synthetics__v202101beta1__test__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__Test   *message);
size_t kentik__synthetics__v202101beta1__test__pack
                     (const Kentik__Synthetics__V202101beta1__Test   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__test__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__Test   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__Test *
       kentik__synthetics__v202101beta1__test__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__test__free_unpacked
                     (Kentik__Synthetics__V202101beta1__Test *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__HTTPConfig__HeadersEntry methods */
void   kentik__synthetics__v202101beta1__httpconfig__headers_entry__init
                     (Kentik__Synthetics__V202101beta1__HTTPConfig__HeadersEntry         *message);
/* Kentik__Synthetics__V202101beta1__HTTPConfig__CssSelectorsEntry methods */
void   kentik__synthetics__v202101beta1__httpconfig__css_selectors_entry__init
                     (Kentik__Synthetics__V202101beta1__HTTPConfig__CssSelectorsEntry         *message);
/* Kentik__Synthetics__V202101beta1__HTTPConfig methods */
void   kentik__synthetics__v202101beta1__httpconfig__init
                     (Kentik__Synthetics__V202101beta1__HTTPConfig         *message);
size_t kentik__synthetics__v202101beta1__httpconfig__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__HTTPConfig   *message);
size_t kentik__synthetics__v202101beta1__httpconfig__pack
                     (const Kentik__Synthetics__V202101beta1__HTTPConfig   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__httpconfig__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__HTTPConfig   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__HTTPConfig *
       kentik__synthetics__v202101beta1__httpconfig__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__httpconfig__free_unpacked
                     (Kentik__Synthetics__V202101beta1__HTTPConfig *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__TestSettings methods */
void   kentik__synthetics__v202101beta1__test_settings__init
                     (Kentik__Synthetics__V202101beta1__TestSettings         *message);
size_t kentik__synthetics__v202101beta1__test_settings__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__TestSettings   *message);
size_t kentik__synthetics__v202101beta1__test_settings__pack
                     (const Kentik__Synthetics__V202101beta1__TestSettings   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__test_settings__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__TestSettings   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__TestSettings *
       kentik__synthetics__v202101beta1__test_settings__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__test_settings__free_unpacked
                     (Kentik__Synthetics__V202101beta1__TestSettings *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__TestTraceSettings methods */
void   kentik__synthetics__v202101beta1__test_trace_settings__init
                     (Kentik__Synthetics__V202101beta1__TestTraceSettings         *message);
size_t kentik__synthetics__v202101beta1__test_trace_settings__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__TestTraceSettings   *message);
size_t kentik__synthetics__v202101beta1__test_trace_settings__pack
                     (const Kentik__Synthetics__V202101beta1__TestTraceSettings   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__test_trace_settings__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__TestTraceSettings   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__TestTraceSettings *
       kentik__synthetics__v202101beta1__test_trace_settings__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__test_trace_settings__free_unpacked
                     (Kentik__Synthetics__V202101beta1__TestTraceSettings *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__TestPingSettings methods */
void   kentik__synthetics__v202101beta1__test_ping_settings__init
                     (Kentik__Synthetics__V202101beta1__TestPingSettings         *message);
size_t kentik__synthetics__v202101beta1__test_ping_settings__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__TestPingSettings   *message);
size_t kentik__synthetics__v202101beta1__test_ping_settings__pack
                     (const Kentik__Synthetics__V202101beta1__TestPingSettings   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__test_ping_settings__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__TestPingSettings   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__TestPingSettings *
       kentik__synthetics__v202101beta1__test_ping_settings__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__test_ping_settings__free_unpacked
                     (Kentik__Synthetics__V202101beta1__TestPingSettings *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__TestMonitoringSettings methods */
void   kentik__synthetics__v202101beta1__test_monitoring_settings__init
                     (Kentik__Synthetics__V202101beta1__TestMonitoringSettings         *message);
size_t kentik__synthetics__v202101beta1__test_monitoring_settings__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__TestMonitoringSettings   *message);
size_t kentik__synthetics__v202101beta1__test_monitoring_settings__pack
                     (const Kentik__Synthetics__V202101beta1__TestMonitoringSettings   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__test_monitoring_settings__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__TestMonitoringSettings   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__TestMonitoringSettings *
       kentik__synthetics__v202101beta1__test_monitoring_settings__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__test_monitoring_settings__free_unpacked
                     (Kentik__Synthetics__V202101beta1__TestMonitoringSettings *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__HealthSettings methods */
void   kentik__synthetics__v202101beta1__health_settings__init
                     (Kentik__Synthetics__V202101beta1__HealthSettings         *message);
size_t kentik__synthetics__v202101beta1__health_settings__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__HealthSettings   *message);
size_t kentik__synthetics__v202101beta1__health_settings__pack
                     (const Kentik__Synthetics__V202101beta1__HealthSettings   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__health_settings__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__HealthSettings   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__HealthSettings *
       kentik__synthetics__v202101beta1__health_settings__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__health_settings__free_unpacked
                     (Kentik__Synthetics__V202101beta1__HealthSettings *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__HostnameTest methods */
void   kentik__synthetics__v202101beta1__hostname_test__init
                     (Kentik__Synthetics__V202101beta1__HostnameTest         *message);
size_t kentik__synthetics__v202101beta1__hostname_test__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__HostnameTest   *message);
size_t kentik__synthetics__v202101beta1__hostname_test__pack
                     (const Kentik__Synthetics__V202101beta1__HostnameTest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__hostname_test__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__HostnameTest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__HostnameTest *
       kentik__synthetics__v202101beta1__hostname_test__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__hostname_test__free_unpacked
                     (Kentik__Synthetics__V202101beta1__HostnameTest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__IpTest methods */
void   kentik__synthetics__v202101beta1__ip_test__init
                     (Kentik__Synthetics__V202101beta1__IpTest         *message);
size_t kentik__synthetics__v202101beta1__ip_test__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__IpTest   *message);
size_t kentik__synthetics__v202101beta1__ip_test__pack
                     (const Kentik__Synthetics__V202101beta1__IpTest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__ip_test__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__IpTest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__IpTest *
       kentik__synthetics__v202101beta1__ip_test__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__ip_test__free_unpacked
                     (Kentik__Synthetics__V202101beta1__IpTest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__AgentTest methods */
void   kentik__synthetics__v202101beta1__agent_test__init
                     (Kentik__Synthetics__V202101beta1__AgentTest         *message);
size_t kentik__synthetics__v202101beta1__agent_test__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__AgentTest   *message);
size_t kentik__synthetics__v202101beta1__agent_test__pack
                     (const Kentik__Synthetics__V202101beta1__AgentTest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__agent_test__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__AgentTest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__AgentTest *
       kentik__synthetics__v202101beta1__agent_test__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__agent_test__free_unpacked
                     (Kentik__Synthetics__V202101beta1__AgentTest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__FlowTest methods */
void   kentik__synthetics__v202101beta1__flow_test__init
                     (Kentik__Synthetics__V202101beta1__FlowTest         *message);
size_t kentik__synthetics__v202101beta1__flow_test__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__FlowTest   *message);
size_t kentik__synthetics__v202101beta1__flow_test__pack
                     (const Kentik__Synthetics__V202101beta1__FlowTest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__flow_test__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__FlowTest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__FlowTest *
       kentik__synthetics__v202101beta1__flow_test__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__flow_test__free_unpacked
                     (Kentik__Synthetics__V202101beta1__FlowTest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__SiteTest methods */
void   kentik__synthetics__v202101beta1__site_test__init
                     (Kentik__Synthetics__V202101beta1__SiteTest         *message);
size_t kentik__synthetics__v202101beta1__site_test__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__SiteTest   *message);
size_t kentik__synthetics__v202101beta1__site_test__pack
                     (const Kentik__Synthetics__V202101beta1__SiteTest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__site_test__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__SiteTest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__SiteTest *
       kentik__synthetics__v202101beta1__site_test__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__site_test__free_unpacked
                     (Kentik__Synthetics__V202101beta1__SiteTest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__TagTest methods */
void   kentik__synthetics__v202101beta1__tag_test__init
                     (Kentik__Synthetics__V202101beta1__TagTest         *message);
size_t kentik__synthetics__v202101beta1__tag_test__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__TagTest   *message);
size_t kentik__synthetics__v202101beta1__tag_test__pack
                     (const Kentik__Synthetics__V202101beta1__TagTest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__tag_test__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__TagTest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__TagTest *
       kentik__synthetics__v202101beta1__tag_test__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__tag_test__free_unpacked
                     (Kentik__Synthetics__V202101beta1__TagTest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__DnsTest methods */
void   kentik__synthetics__v202101beta1__dns_test__init
                     (Kentik__Synthetics__V202101beta1__DnsTest         *message);
size_t kentik__synthetics__v202101beta1__dns_test__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__DnsTest   *message);
size_t kentik__synthetics__v202101beta1__dns_test__pack
                     (const Kentik__Synthetics__V202101beta1__DnsTest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__dns_test__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__DnsTest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__DnsTest *
       kentik__synthetics__v202101beta1__dns_test__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__dns_test__free_unpacked
                     (Kentik__Synthetics__V202101beta1__DnsTest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__UrlTest methods */
void   kentik__synthetics__v202101beta1__url_test__init
                     (Kentik__Synthetics__V202101beta1__UrlTest         *message);
size_t kentik__synthetics__v202101beta1__url_test__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__UrlTest   *message);
size_t kentik__synthetics__v202101beta1__url_test__pack
                     (const Kentik__Synthetics__V202101beta1__UrlTest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__url_test__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__UrlTest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__UrlTest *
       kentik__synthetics__v202101beta1__url_test__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__url_test__free_unpacked
                     (Kentik__Synthetics__V202101beta1__UrlTest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__GridTest methods */
void   kentik__synthetics__v202101beta1__grid_test__init
                     (Kentik__Synthetics__V202101beta1__GridTest         *message);
size_t kentik__synthetics__v202101beta1__grid_test__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__GridTest   *message);
size_t kentik__synthetics__v202101beta1__grid_test__pack
                     (const Kentik__Synthetics__V202101beta1__GridTest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__grid_test__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__GridTest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__GridTest *
       kentik__synthetics__v202101beta1__grid_test__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__grid_test__free_unpacked
                     (Kentik__Synthetics__V202101beta1__GridTest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__DnsGridTest methods */
void   kentik__synthetics__v202101beta1__dns_grid_test__init
                     (Kentik__Synthetics__V202101beta1__DnsGridTest         *message);
size_t kentik__synthetics__v202101beta1__dns_grid_test__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__DnsGridTest   *message);
size_t kentik__synthetics__v202101beta1__dns_grid_test__pack
                     (const Kentik__Synthetics__V202101beta1__DnsGridTest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__dns_grid_test__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__DnsGridTest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__DnsGridTest *
       kentik__synthetics__v202101beta1__dns_grid_test__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__dns_grid_test__free_unpacked
                     (Kentik__Synthetics__V202101beta1__DnsGridTest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__ApplicationMeshTest methods */
void   kentik__synthetics__v202101beta1__application_mesh_test__init
                     (Kentik__Synthetics__V202101beta1__ApplicationMeshTest         *message);
size_t kentik__synthetics__v202101beta1__application_mesh_test__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__ApplicationMeshTest   *message);
size_t kentik__synthetics__v202101beta1__application_mesh_test__pack
                     (const Kentik__Synthetics__V202101beta1__ApplicationMeshTest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__application_mesh_test__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__ApplicationMeshTest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__ApplicationMeshTest *
       kentik__synthetics__v202101beta1__application_mesh_test__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__application_mesh_test__free_unpacked
                     (Kentik__Synthetics__V202101beta1__ApplicationMeshTest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__MeshResponse methods */
void   kentik__synthetics__v202101beta1__mesh_response__init
                     (Kentik__Synthetics__V202101beta1__MeshResponse         *message);
size_t kentik__synthetics__v202101beta1__mesh_response__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__MeshResponse   *message);
size_t kentik__synthetics__v202101beta1__mesh_response__pack
                     (const Kentik__Synthetics__V202101beta1__MeshResponse   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__mesh_response__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__MeshResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__MeshResponse *
       kentik__synthetics__v202101beta1__mesh_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__mesh_response__free_unpacked
                     (Kentik__Synthetics__V202101beta1__MeshResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__MeshColumn methods */
void   kentik__synthetics__v202101beta1__mesh_column__init
                     (Kentik__Synthetics__V202101beta1__MeshColumn         *message);
size_t kentik__synthetics__v202101beta1__mesh_column__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__MeshColumn   *message);
size_t kentik__synthetics__v202101beta1__mesh_column__pack
                     (const Kentik__Synthetics__V202101beta1__MeshColumn   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__mesh_column__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__MeshColumn   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__MeshColumn *
       kentik__synthetics__v202101beta1__mesh_column__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__mesh_column__free_unpacked
                     (Kentik__Synthetics__V202101beta1__MeshColumn *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__MeshMetric methods */
void   kentik__synthetics__v202101beta1__mesh_metric__init
                     (Kentik__Synthetics__V202101beta1__MeshMetric         *message);
size_t kentik__synthetics__v202101beta1__mesh_metric__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__MeshMetric   *message);
size_t kentik__synthetics__v202101beta1__mesh_metric__pack
                     (const Kentik__Synthetics__V202101beta1__MeshMetric   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__mesh_metric__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__MeshMetric   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__MeshMetric *
       kentik__synthetics__v202101beta1__mesh_metric__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__mesh_metric__free_unpacked
                     (Kentik__Synthetics__V202101beta1__MeshMetric *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__MeshMetrics methods */
void   kentik__synthetics__v202101beta1__mesh_metrics__init
                     (Kentik__Synthetics__V202101beta1__MeshMetrics         *message);
size_t kentik__synthetics__v202101beta1__mesh_metrics__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__MeshMetrics   *message);
size_t kentik__synthetics__v202101beta1__mesh_metrics__pack
                     (const Kentik__Synthetics__V202101beta1__MeshMetrics   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__mesh_metrics__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__MeshMetrics   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__MeshMetrics *
       kentik__synthetics__v202101beta1__mesh_metrics__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__mesh_metrics__free_unpacked
                     (Kentik__Synthetics__V202101beta1__MeshMetrics *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__ASN methods */
void   kentik__synthetics__v202101beta1__asn__init
                     (Kentik__Synthetics__V202101beta1__ASN         *message);
size_t kentik__synthetics__v202101beta1__asn__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__ASN   *message);
size_t kentik__synthetics__v202101beta1__asn__pack
                     (const Kentik__Synthetics__V202101beta1__ASN   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__asn__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__ASN   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__ASN *
       kentik__synthetics__v202101beta1__asn__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__asn__free_unpacked
                     (Kentik__Synthetics__V202101beta1__ASN *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__Country methods */
void   kentik__synthetics__v202101beta1__country__init
                     (Kentik__Synthetics__V202101beta1__Country         *message);
size_t kentik__synthetics__v202101beta1__country__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__Country   *message);
size_t kentik__synthetics__v202101beta1__country__pack
                     (const Kentik__Synthetics__V202101beta1__Country   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__country__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__Country   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__Country *
       kentik__synthetics__v202101beta1__country__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__country__free_unpacked
                     (Kentik__Synthetics__V202101beta1__Country *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__Region methods */
void   kentik__synthetics__v202101beta1__region__init
                     (Kentik__Synthetics__V202101beta1__Region         *message);
size_t kentik__synthetics__v202101beta1__region__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__Region   *message);
size_t kentik__synthetics__v202101beta1__region__pack
                     (const Kentik__Synthetics__V202101beta1__Region   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__region__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__Region   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__Region *
       kentik__synthetics__v202101beta1__region__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__region__free_unpacked
                     (Kentik__Synthetics__V202101beta1__Region *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__City methods */
void   kentik__synthetics__v202101beta1__city__init
                     (Kentik__Synthetics__V202101beta1__City         *message);
size_t kentik__synthetics__v202101beta1__city__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__City   *message);
size_t kentik__synthetics__v202101beta1__city__pack
                     (const Kentik__Synthetics__V202101beta1__City   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__city__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__City   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__City *
       kentik__synthetics__v202101beta1__city__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__city__free_unpacked
                     (Kentik__Synthetics__V202101beta1__City *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__Geo methods */
void   kentik__synthetics__v202101beta1__geo__init
                     (Kentik__Synthetics__V202101beta1__Geo         *message);
size_t kentik__synthetics__v202101beta1__geo__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__Geo   *message);
size_t kentik__synthetics__v202101beta1__geo__pack
                     (const Kentik__Synthetics__V202101beta1__Geo   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__geo__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__Geo   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__Geo *
       kentik__synthetics__v202101beta1__geo__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__geo__free_unpacked
                     (Kentik__Synthetics__V202101beta1__Geo *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__DNS methods */
void   kentik__synthetics__v202101beta1__dns__init
                     (Kentik__Synthetics__V202101beta1__DNS         *message);
size_t kentik__synthetics__v202101beta1__dns__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__DNS   *message);
size_t kentik__synthetics__v202101beta1__dns__pack
                     (const Kentik__Synthetics__V202101beta1__DNS   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__dns__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__DNS   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__DNS *
       kentik__synthetics__v202101beta1__dns__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__dns__free_unpacked
                     (Kentik__Synthetics__V202101beta1__DNS *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__IPInfo methods */
void   kentik__synthetics__v202101beta1__ipinfo__init
                     (Kentik__Synthetics__V202101beta1__IPInfo         *message);
size_t kentik__synthetics__v202101beta1__ipinfo__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__IPInfo   *message);
size_t kentik__synthetics__v202101beta1__ipinfo__pack
                     (const Kentik__Synthetics__V202101beta1__IPInfo   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__ipinfo__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__IPInfo   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__IPInfo *
       kentik__synthetics__v202101beta1__ipinfo__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__ipinfo__free_unpacked
                     (Kentik__Synthetics__V202101beta1__IPInfo *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__IDByIP methods */
void   kentik__synthetics__v202101beta1__idby_ip__init
                     (Kentik__Synthetics__V202101beta1__IDByIP         *message);
size_t kentik__synthetics__v202101beta1__idby_ip__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__IDByIP   *message);
size_t kentik__synthetics__v202101beta1__idby_ip__pack
                     (const Kentik__Synthetics__V202101beta1__IDByIP   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__idby_ip__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__IDByIP   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__IDByIP *
       kentik__synthetics__v202101beta1__idby_ip__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__idby_ip__free_unpacked
                     (Kentik__Synthetics__V202101beta1__IDByIP *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__TracerouteLookup methods */
void   kentik__synthetics__v202101beta1__traceroute_lookup__init
                     (Kentik__Synthetics__V202101beta1__TracerouteLookup         *message);
size_t kentik__synthetics__v202101beta1__traceroute_lookup__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__TracerouteLookup   *message);
size_t kentik__synthetics__v202101beta1__traceroute_lookup__pack
                     (const Kentik__Synthetics__V202101beta1__TracerouteLookup   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__traceroute_lookup__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__TracerouteLookup   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__TracerouteLookup *
       kentik__synthetics__v202101beta1__traceroute_lookup__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__traceroute_lookup__free_unpacked
                     (Kentik__Synthetics__V202101beta1__TracerouteLookup *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__TraceHop methods */
void   kentik__synthetics__v202101beta1__trace_hop__init
                     (Kentik__Synthetics__V202101beta1__TraceHop         *message);
size_t kentik__synthetics__v202101beta1__trace_hop__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__TraceHop   *message);
size_t kentik__synthetics__v202101beta1__trace_hop__pack
                     (const Kentik__Synthetics__V202101beta1__TraceHop   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__trace_hop__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__TraceHop   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__TraceHop *
       kentik__synthetics__v202101beta1__trace_hop__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__trace_hop__free_unpacked
                     (Kentik__Synthetics__V202101beta1__TraceHop *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__TraceProbe methods */
void   kentik__synthetics__v202101beta1__trace_probe__init
                     (Kentik__Synthetics__V202101beta1__TraceProbe         *message);
size_t kentik__synthetics__v202101beta1__trace_probe__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__TraceProbe   *message);
size_t kentik__synthetics__v202101beta1__trace_probe__pack
                     (const Kentik__Synthetics__V202101beta1__TraceProbe   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__trace_probe__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__TraceProbe   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__TraceProbe *
       kentik__synthetics__v202101beta1__trace_probe__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__trace_probe__free_unpacked
                     (Kentik__Synthetics__V202101beta1__TraceProbe *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__Trace methods */
void   kentik__synthetics__v202101beta1__trace__init
                     (Kentik__Synthetics__V202101beta1__Trace         *message);
size_t kentik__synthetics__v202101beta1__trace__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__Trace   *message);
size_t kentik__synthetics__v202101beta1__trace__pack
                     (const Kentik__Synthetics__V202101beta1__Trace   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__trace__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__Trace   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__Trace *
       kentik__synthetics__v202101beta1__trace__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__trace__free_unpacked
                     (Kentik__Synthetics__V202101beta1__Trace *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__Stats methods */
void   kentik__synthetics__v202101beta1__stats__init
                     (Kentik__Synthetics__V202101beta1__Stats         *message);
size_t kentik__synthetics__v202101beta1__stats__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__Stats   *message);
size_t kentik__synthetics__v202101beta1__stats__pack
                     (const Kentik__Synthetics__V202101beta1__Stats   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__stats__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__Stats   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__Stats *
       kentik__synthetics__v202101beta1__stats__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__stats__free_unpacked
                     (Kentik__Synthetics__V202101beta1__Stats *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__TracerouteResult methods */
void   kentik__synthetics__v202101beta1__traceroute_result__init
                     (Kentik__Synthetics__V202101beta1__TracerouteResult         *message);
size_t kentik__synthetics__v202101beta1__traceroute_result__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__TracerouteResult   *message);
size_t kentik__synthetics__v202101beta1__traceroute_result__pack
                     (const Kentik__Synthetics__V202101beta1__TracerouteResult   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__traceroute_result__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__TracerouteResult   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__TracerouteResult *
       kentik__synthetics__v202101beta1__traceroute_result__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__traceroute_result__free_unpacked
                     (Kentik__Synthetics__V202101beta1__TracerouteResult *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__TracerouteInfo methods */
void   kentik__synthetics__v202101beta1__traceroute_info__init
                     (Kentik__Synthetics__V202101beta1__TracerouteInfo         *message);
size_t kentik__synthetics__v202101beta1__traceroute_info__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__TracerouteInfo   *message);
size_t kentik__synthetics__v202101beta1__traceroute_info__pack
                     (const Kentik__Synthetics__V202101beta1__TracerouteInfo   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__traceroute_info__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__TracerouteInfo   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__TracerouteInfo *
       kentik__synthetics__v202101beta1__traceroute_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__traceroute_info__free_unpacked
                     (Kentik__Synthetics__V202101beta1__TracerouteInfo *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__GetHealthForTestsRequest methods */
void   kentik__synthetics__v202101beta1__get_health_for_tests_request__init
                     (Kentik__Synthetics__V202101beta1__GetHealthForTestsRequest         *message);
size_t kentik__synthetics__v202101beta1__get_health_for_tests_request__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__GetHealthForTestsRequest   *message);
size_t kentik__synthetics__v202101beta1__get_health_for_tests_request__pack
                     (const Kentik__Synthetics__V202101beta1__GetHealthForTestsRequest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__get_health_for_tests_request__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__GetHealthForTestsRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__GetHealthForTestsRequest *
       kentik__synthetics__v202101beta1__get_health_for_tests_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__get_health_for_tests_request__free_unpacked
                     (Kentik__Synthetics__V202101beta1__GetHealthForTestsRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__GetHealthForTestsResponse methods */
void   kentik__synthetics__v202101beta1__get_health_for_tests_response__init
                     (Kentik__Synthetics__V202101beta1__GetHealthForTestsResponse         *message);
size_t kentik__synthetics__v202101beta1__get_health_for_tests_response__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__GetHealthForTestsResponse   *message);
size_t kentik__synthetics__v202101beta1__get_health_for_tests_response__pack
                     (const Kentik__Synthetics__V202101beta1__GetHealthForTestsResponse   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__get_health_for_tests_response__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__GetHealthForTestsResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__GetHealthForTestsResponse *
       kentik__synthetics__v202101beta1__get_health_for_tests_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__get_health_for_tests_response__free_unpacked
                     (Kentik__Synthetics__V202101beta1__GetHealthForTestsResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__GetTraceForTestRequest methods */
void   kentik__synthetics__v202101beta1__get_trace_for_test_request__init
                     (Kentik__Synthetics__V202101beta1__GetTraceForTestRequest         *message);
size_t kentik__synthetics__v202101beta1__get_trace_for_test_request__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__GetTraceForTestRequest   *message);
size_t kentik__synthetics__v202101beta1__get_trace_for_test_request__pack
                     (const Kentik__Synthetics__V202101beta1__GetTraceForTestRequest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__get_trace_for_test_request__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__GetTraceForTestRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__GetTraceForTestRequest *
       kentik__synthetics__v202101beta1__get_trace_for_test_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__get_trace_for_test_request__free_unpacked
                     (Kentik__Synthetics__V202101beta1__GetTraceForTestRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__GetTraceForTestResponse methods */
void   kentik__synthetics__v202101beta1__get_trace_for_test_response__init
                     (Kentik__Synthetics__V202101beta1__GetTraceForTestResponse         *message);
size_t kentik__synthetics__v202101beta1__get_trace_for_test_response__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__GetTraceForTestResponse   *message);
size_t kentik__synthetics__v202101beta1__get_trace_for_test_response__pack
                     (const Kentik__Synthetics__V202101beta1__GetTraceForTestResponse   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__get_trace_for_test_response__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__GetTraceForTestResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__GetTraceForTestResponse *
       kentik__synthetics__v202101beta1__get_trace_for_test_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__get_trace_for_test_response__free_unpacked
                     (Kentik__Synthetics__V202101beta1__GetTraceForTestResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__ListAgentsRequest methods */
void   kentik__synthetics__v202101beta1__list_agents_request__init
                     (Kentik__Synthetics__V202101beta1__ListAgentsRequest         *message);
size_t kentik__synthetics__v202101beta1__list_agents_request__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__ListAgentsRequest   *message);
size_t kentik__synthetics__v202101beta1__list_agents_request__pack
                     (const Kentik__Synthetics__V202101beta1__ListAgentsRequest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__list_agents_request__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__ListAgentsRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__ListAgentsRequest *
       kentik__synthetics__v202101beta1__list_agents_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__list_agents_request__free_unpacked
                     (Kentik__Synthetics__V202101beta1__ListAgentsRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__ListAgentsResponse methods */
void   kentik__synthetics__v202101beta1__list_agents_response__init
                     (Kentik__Synthetics__V202101beta1__ListAgentsResponse         *message);
size_t kentik__synthetics__v202101beta1__list_agents_response__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__ListAgentsResponse   *message);
size_t kentik__synthetics__v202101beta1__list_agents_response__pack
                     (const Kentik__Synthetics__V202101beta1__ListAgentsResponse   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__list_agents_response__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__ListAgentsResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__ListAgentsResponse *
       kentik__synthetics__v202101beta1__list_agents_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__list_agents_response__free_unpacked
                     (Kentik__Synthetics__V202101beta1__ListAgentsResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__GetAgentRequest methods */
void   kentik__synthetics__v202101beta1__get_agent_request__init
                     (Kentik__Synthetics__V202101beta1__GetAgentRequest         *message);
size_t kentik__synthetics__v202101beta1__get_agent_request__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__GetAgentRequest   *message);
size_t kentik__synthetics__v202101beta1__get_agent_request__pack
                     (const Kentik__Synthetics__V202101beta1__GetAgentRequest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__get_agent_request__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__GetAgentRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__GetAgentRequest *
       kentik__synthetics__v202101beta1__get_agent_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__get_agent_request__free_unpacked
                     (Kentik__Synthetics__V202101beta1__GetAgentRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__GetAgentResponse methods */
void   kentik__synthetics__v202101beta1__get_agent_response__init
                     (Kentik__Synthetics__V202101beta1__GetAgentResponse         *message);
size_t kentik__synthetics__v202101beta1__get_agent_response__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__GetAgentResponse   *message);
size_t kentik__synthetics__v202101beta1__get_agent_response__pack
                     (const Kentik__Synthetics__V202101beta1__GetAgentResponse   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__get_agent_response__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__GetAgentResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__GetAgentResponse *
       kentik__synthetics__v202101beta1__get_agent_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__get_agent_response__free_unpacked
                     (Kentik__Synthetics__V202101beta1__GetAgentResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__PatchAgentRequest methods */
void   kentik__synthetics__v202101beta1__patch_agent_request__init
                     (Kentik__Synthetics__V202101beta1__PatchAgentRequest         *message);
size_t kentik__synthetics__v202101beta1__patch_agent_request__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__PatchAgentRequest   *message);
size_t kentik__synthetics__v202101beta1__patch_agent_request__pack
                     (const Kentik__Synthetics__V202101beta1__PatchAgentRequest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__patch_agent_request__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__PatchAgentRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__PatchAgentRequest *
       kentik__synthetics__v202101beta1__patch_agent_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__patch_agent_request__free_unpacked
                     (Kentik__Synthetics__V202101beta1__PatchAgentRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__PatchAgentResponse methods */
void   kentik__synthetics__v202101beta1__patch_agent_response__init
                     (Kentik__Synthetics__V202101beta1__PatchAgentResponse         *message);
size_t kentik__synthetics__v202101beta1__patch_agent_response__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__PatchAgentResponse   *message);
size_t kentik__synthetics__v202101beta1__patch_agent_response__pack
                     (const Kentik__Synthetics__V202101beta1__PatchAgentResponse   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__patch_agent_response__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__PatchAgentResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__PatchAgentResponse *
       kentik__synthetics__v202101beta1__patch_agent_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__patch_agent_response__free_unpacked
                     (Kentik__Synthetics__V202101beta1__PatchAgentResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__DeleteAgentRequest methods */
void   kentik__synthetics__v202101beta1__delete_agent_request__init
                     (Kentik__Synthetics__V202101beta1__DeleteAgentRequest         *message);
size_t kentik__synthetics__v202101beta1__delete_agent_request__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__DeleteAgentRequest   *message);
size_t kentik__synthetics__v202101beta1__delete_agent_request__pack
                     (const Kentik__Synthetics__V202101beta1__DeleteAgentRequest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__delete_agent_request__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__DeleteAgentRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__DeleteAgentRequest *
       kentik__synthetics__v202101beta1__delete_agent_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__delete_agent_request__free_unpacked
                     (Kentik__Synthetics__V202101beta1__DeleteAgentRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__DeleteAgentResponse methods */
void   kentik__synthetics__v202101beta1__delete_agent_response__init
                     (Kentik__Synthetics__V202101beta1__DeleteAgentResponse         *message);
size_t kentik__synthetics__v202101beta1__delete_agent_response__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__DeleteAgentResponse   *message);
size_t kentik__synthetics__v202101beta1__delete_agent_response__pack
                     (const Kentik__Synthetics__V202101beta1__DeleteAgentResponse   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__delete_agent_response__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__DeleteAgentResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__DeleteAgentResponse *
       kentik__synthetics__v202101beta1__delete_agent_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__delete_agent_response__free_unpacked
                     (Kentik__Synthetics__V202101beta1__DeleteAgentResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__ListTestsRequest methods */
void   kentik__synthetics__v202101beta1__list_tests_request__init
                     (Kentik__Synthetics__V202101beta1__ListTestsRequest         *message);
size_t kentik__synthetics__v202101beta1__list_tests_request__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__ListTestsRequest   *message);
size_t kentik__synthetics__v202101beta1__list_tests_request__pack
                     (const Kentik__Synthetics__V202101beta1__ListTestsRequest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__list_tests_request__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__ListTestsRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__ListTestsRequest *
       kentik__synthetics__v202101beta1__list_tests_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__list_tests_request__free_unpacked
                     (Kentik__Synthetics__V202101beta1__ListTestsRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__ListTestsResponse methods */
void   kentik__synthetics__v202101beta1__list_tests_response__init
                     (Kentik__Synthetics__V202101beta1__ListTestsResponse         *message);
size_t kentik__synthetics__v202101beta1__list_tests_response__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__ListTestsResponse   *message);
size_t kentik__synthetics__v202101beta1__list_tests_response__pack
                     (const Kentik__Synthetics__V202101beta1__ListTestsResponse   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__list_tests_response__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__ListTestsResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__ListTestsResponse *
       kentik__synthetics__v202101beta1__list_tests_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__list_tests_response__free_unpacked
                     (Kentik__Synthetics__V202101beta1__ListTestsResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__CreateTestRequest methods */
void   kentik__synthetics__v202101beta1__create_test_request__init
                     (Kentik__Synthetics__V202101beta1__CreateTestRequest         *message);
size_t kentik__synthetics__v202101beta1__create_test_request__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__CreateTestRequest   *message);
size_t kentik__synthetics__v202101beta1__create_test_request__pack
                     (const Kentik__Synthetics__V202101beta1__CreateTestRequest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__create_test_request__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__CreateTestRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__CreateTestRequest *
       kentik__synthetics__v202101beta1__create_test_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__create_test_request__free_unpacked
                     (Kentik__Synthetics__V202101beta1__CreateTestRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__CreateTestResponse methods */
void   kentik__synthetics__v202101beta1__create_test_response__init
                     (Kentik__Synthetics__V202101beta1__CreateTestResponse         *message);
size_t kentik__synthetics__v202101beta1__create_test_response__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__CreateTestResponse   *message);
size_t kentik__synthetics__v202101beta1__create_test_response__pack
                     (const Kentik__Synthetics__V202101beta1__CreateTestResponse   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__create_test_response__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__CreateTestResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__CreateTestResponse *
       kentik__synthetics__v202101beta1__create_test_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__create_test_response__free_unpacked
                     (Kentik__Synthetics__V202101beta1__CreateTestResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__GetTestRequest methods */
void   kentik__synthetics__v202101beta1__get_test_request__init
                     (Kentik__Synthetics__V202101beta1__GetTestRequest         *message);
size_t kentik__synthetics__v202101beta1__get_test_request__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__GetTestRequest   *message);
size_t kentik__synthetics__v202101beta1__get_test_request__pack
                     (const Kentik__Synthetics__V202101beta1__GetTestRequest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__get_test_request__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__GetTestRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__GetTestRequest *
       kentik__synthetics__v202101beta1__get_test_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__get_test_request__free_unpacked
                     (Kentik__Synthetics__V202101beta1__GetTestRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__GetTestResponse methods */
void   kentik__synthetics__v202101beta1__get_test_response__init
                     (Kentik__Synthetics__V202101beta1__GetTestResponse         *message);
size_t kentik__synthetics__v202101beta1__get_test_response__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__GetTestResponse   *message);
size_t kentik__synthetics__v202101beta1__get_test_response__pack
                     (const Kentik__Synthetics__V202101beta1__GetTestResponse   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__get_test_response__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__GetTestResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__GetTestResponse *
       kentik__synthetics__v202101beta1__get_test_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__get_test_response__free_unpacked
                     (Kentik__Synthetics__V202101beta1__GetTestResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__SetTestStatusRequest methods */
void   kentik__synthetics__v202101beta1__set_test_status_request__init
                     (Kentik__Synthetics__V202101beta1__SetTestStatusRequest         *message);
size_t kentik__synthetics__v202101beta1__set_test_status_request__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__SetTestStatusRequest   *message);
size_t kentik__synthetics__v202101beta1__set_test_status_request__pack
                     (const Kentik__Synthetics__V202101beta1__SetTestStatusRequest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__set_test_status_request__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__SetTestStatusRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__SetTestStatusRequest *
       kentik__synthetics__v202101beta1__set_test_status_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__set_test_status_request__free_unpacked
                     (Kentik__Synthetics__V202101beta1__SetTestStatusRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__SetTestStatusResponse methods */
void   kentik__synthetics__v202101beta1__set_test_status_response__init
                     (Kentik__Synthetics__V202101beta1__SetTestStatusResponse         *message);
size_t kentik__synthetics__v202101beta1__set_test_status_response__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__SetTestStatusResponse   *message);
size_t kentik__synthetics__v202101beta1__set_test_status_response__pack
                     (const Kentik__Synthetics__V202101beta1__SetTestStatusResponse   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__set_test_status_response__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__SetTestStatusResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__SetTestStatusResponse *
       kentik__synthetics__v202101beta1__set_test_status_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__set_test_status_response__free_unpacked
                     (Kentik__Synthetics__V202101beta1__SetTestStatusResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__PatchTestRequest methods */
void   kentik__synthetics__v202101beta1__patch_test_request__init
                     (Kentik__Synthetics__V202101beta1__PatchTestRequest         *message);
size_t kentik__synthetics__v202101beta1__patch_test_request__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__PatchTestRequest   *message);
size_t kentik__synthetics__v202101beta1__patch_test_request__pack
                     (const Kentik__Synthetics__V202101beta1__PatchTestRequest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__patch_test_request__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__PatchTestRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__PatchTestRequest *
       kentik__synthetics__v202101beta1__patch_test_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__patch_test_request__free_unpacked
                     (Kentik__Synthetics__V202101beta1__PatchTestRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__PatchTestResponse methods */
void   kentik__synthetics__v202101beta1__patch_test_response__init
                     (Kentik__Synthetics__V202101beta1__PatchTestResponse         *message);
size_t kentik__synthetics__v202101beta1__patch_test_response__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__PatchTestResponse   *message);
size_t kentik__synthetics__v202101beta1__patch_test_response__pack
                     (const Kentik__Synthetics__V202101beta1__PatchTestResponse   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__patch_test_response__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__PatchTestResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__PatchTestResponse *
       kentik__synthetics__v202101beta1__patch_test_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__patch_test_response__free_unpacked
                     (Kentik__Synthetics__V202101beta1__PatchTestResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__DeleteTestRequest methods */
void   kentik__synthetics__v202101beta1__delete_test_request__init
                     (Kentik__Synthetics__V202101beta1__DeleteTestRequest         *message);
size_t kentik__synthetics__v202101beta1__delete_test_request__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__DeleteTestRequest   *message);
size_t kentik__synthetics__v202101beta1__delete_test_request__pack
                     (const Kentik__Synthetics__V202101beta1__DeleteTestRequest   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__delete_test_request__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__DeleteTestRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__DeleteTestRequest *
       kentik__synthetics__v202101beta1__delete_test_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__delete_test_request__free_unpacked
                     (Kentik__Synthetics__V202101beta1__DeleteTestRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Synthetics__V202101beta1__DeleteTestResponse methods */
void   kentik__synthetics__v202101beta1__delete_test_response__init
                     (Kentik__Synthetics__V202101beta1__DeleteTestResponse         *message);
size_t kentik__synthetics__v202101beta1__delete_test_response__get_packed_size
                     (const Kentik__Synthetics__V202101beta1__DeleteTestResponse   *message);
size_t kentik__synthetics__v202101beta1__delete_test_response__pack
                     (const Kentik__Synthetics__V202101beta1__DeleteTestResponse   *message,
                      uint8_t             *out);
size_t kentik__synthetics__v202101beta1__delete_test_response__pack_to_buffer
                     (const Kentik__Synthetics__V202101beta1__DeleteTestResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Synthetics__V202101beta1__DeleteTestResponse *
       kentik__synthetics__v202101beta1__delete_test_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__synthetics__v202101beta1__delete_test_response__free_unpacked
                     (Kentik__Synthetics__V202101beta1__DeleteTestResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Kentik__Synthetics__V202101beta1__Health_Closure)
                 (const Kentik__Synthetics__V202101beta1__Health *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__AgentTaskConfig_Closure)
                 (const Kentik__Synthetics__V202101beta1__AgentTaskConfig *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__TestHealth_Closure)
                 (const Kentik__Synthetics__V202101beta1__TestHealth *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__TaskHealth_Closure)
                 (const Kentik__Synthetics__V202101beta1__TaskHealth *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__AgentHealth_Closure)
                 (const Kentik__Synthetics__V202101beta1__AgentHealth *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__HealthMoment__OtherHealthsEntry_Closure)
                 (const Kentik__Synthetics__V202101beta1__HealthMoment__OtherHealthsEntry *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__HealthMoment_Closure)
                 (const Kentik__Synthetics__V202101beta1__HealthMoment *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__Agent_Closure)
                 (const Kentik__Synthetics__V202101beta1__Agent *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__PingTaskDefinition_Closure)
                 (const Kentik__Synthetics__V202101beta1__PingTaskDefinition *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__TraceTaskDefinition_Closure)
                 (const Kentik__Synthetics__V202101beta1__TraceTaskDefinition *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__HTTPTaskDefinition_Closure)
                 (const Kentik__Synthetics__V202101beta1__HTTPTaskDefinition *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__Task_Closure)
                 (const Kentik__Synthetics__V202101beta1__Task *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__KnockTaskDefinition_Closure)
                 (const Kentik__Synthetics__V202101beta1__KnockTaskDefinition *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__DNSTaskDefinition_Closure)
                 (const Kentik__Synthetics__V202101beta1__DNSTaskDefinition *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__ShakeTaskDefinition_Closure)
                 (const Kentik__Synthetics__V202101beta1__ShakeTaskDefinition *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__UserInfo_Closure)
                 (const Kentik__Synthetics__V202101beta1__UserInfo *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__Test_Closure)
                 (const Kentik__Synthetics__V202101beta1__Test *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__HTTPConfig__HeadersEntry_Closure)
                 (const Kentik__Synthetics__V202101beta1__HTTPConfig__HeadersEntry *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__HTTPConfig__CssSelectorsEntry_Closure)
                 (const Kentik__Synthetics__V202101beta1__HTTPConfig__CssSelectorsEntry *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__HTTPConfig_Closure)
                 (const Kentik__Synthetics__V202101beta1__HTTPConfig *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__TestSettings_Closure)
                 (const Kentik__Synthetics__V202101beta1__TestSettings *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__TestTraceSettings_Closure)
                 (const Kentik__Synthetics__V202101beta1__TestTraceSettings *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__TestPingSettings_Closure)
                 (const Kentik__Synthetics__V202101beta1__TestPingSettings *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__TestMonitoringSettings_Closure)
                 (const Kentik__Synthetics__V202101beta1__TestMonitoringSettings *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__HealthSettings_Closure)
                 (const Kentik__Synthetics__V202101beta1__HealthSettings *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__HostnameTest_Closure)
                 (const Kentik__Synthetics__V202101beta1__HostnameTest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__IpTest_Closure)
                 (const Kentik__Synthetics__V202101beta1__IpTest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__AgentTest_Closure)
                 (const Kentik__Synthetics__V202101beta1__AgentTest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__FlowTest_Closure)
                 (const Kentik__Synthetics__V202101beta1__FlowTest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__SiteTest_Closure)
                 (const Kentik__Synthetics__V202101beta1__SiteTest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__TagTest_Closure)
                 (const Kentik__Synthetics__V202101beta1__TagTest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__DnsTest_Closure)
                 (const Kentik__Synthetics__V202101beta1__DnsTest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__UrlTest_Closure)
                 (const Kentik__Synthetics__V202101beta1__UrlTest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__GridTest_Closure)
                 (const Kentik__Synthetics__V202101beta1__GridTest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__DnsGridTest_Closure)
                 (const Kentik__Synthetics__V202101beta1__DnsGridTest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__ApplicationMeshTest_Closure)
                 (const Kentik__Synthetics__V202101beta1__ApplicationMeshTest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__MeshResponse_Closure)
                 (const Kentik__Synthetics__V202101beta1__MeshResponse *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__MeshColumn_Closure)
                 (const Kentik__Synthetics__V202101beta1__MeshColumn *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__MeshMetric_Closure)
                 (const Kentik__Synthetics__V202101beta1__MeshMetric *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__MeshMetrics_Closure)
                 (const Kentik__Synthetics__V202101beta1__MeshMetrics *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__ASN_Closure)
                 (const Kentik__Synthetics__V202101beta1__ASN *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__Country_Closure)
                 (const Kentik__Synthetics__V202101beta1__Country *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__Region_Closure)
                 (const Kentik__Synthetics__V202101beta1__Region *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__City_Closure)
                 (const Kentik__Synthetics__V202101beta1__City *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__Geo_Closure)
                 (const Kentik__Synthetics__V202101beta1__Geo *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__DNS_Closure)
                 (const Kentik__Synthetics__V202101beta1__DNS *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__IPInfo_Closure)
                 (const Kentik__Synthetics__V202101beta1__IPInfo *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__IDByIP_Closure)
                 (const Kentik__Synthetics__V202101beta1__IDByIP *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__TracerouteLookup_Closure)
                 (const Kentik__Synthetics__V202101beta1__TracerouteLookup *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__TraceHop_Closure)
                 (const Kentik__Synthetics__V202101beta1__TraceHop *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__TraceProbe_Closure)
                 (const Kentik__Synthetics__V202101beta1__TraceProbe *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__Trace_Closure)
                 (const Kentik__Synthetics__V202101beta1__Trace *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__Stats_Closure)
                 (const Kentik__Synthetics__V202101beta1__Stats *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__TracerouteResult_Closure)
                 (const Kentik__Synthetics__V202101beta1__TracerouteResult *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__TracerouteInfo_Closure)
                 (const Kentik__Synthetics__V202101beta1__TracerouteInfo *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__GetHealthForTestsRequest_Closure)
                 (const Kentik__Synthetics__V202101beta1__GetHealthForTestsRequest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__GetHealthForTestsResponse_Closure)
                 (const Kentik__Synthetics__V202101beta1__GetHealthForTestsResponse *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__GetTraceForTestRequest_Closure)
                 (const Kentik__Synthetics__V202101beta1__GetTraceForTestRequest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__GetTraceForTestResponse_Closure)
                 (const Kentik__Synthetics__V202101beta1__GetTraceForTestResponse *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__ListAgentsRequest_Closure)
                 (const Kentik__Synthetics__V202101beta1__ListAgentsRequest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__ListAgentsResponse_Closure)
                 (const Kentik__Synthetics__V202101beta1__ListAgentsResponse *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__GetAgentRequest_Closure)
                 (const Kentik__Synthetics__V202101beta1__GetAgentRequest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__GetAgentResponse_Closure)
                 (const Kentik__Synthetics__V202101beta1__GetAgentResponse *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__PatchAgentRequest_Closure)
                 (const Kentik__Synthetics__V202101beta1__PatchAgentRequest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__PatchAgentResponse_Closure)
                 (const Kentik__Synthetics__V202101beta1__PatchAgentResponse *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__DeleteAgentRequest_Closure)
                 (const Kentik__Synthetics__V202101beta1__DeleteAgentRequest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__DeleteAgentResponse_Closure)
                 (const Kentik__Synthetics__V202101beta1__DeleteAgentResponse *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__ListTestsRequest_Closure)
                 (const Kentik__Synthetics__V202101beta1__ListTestsRequest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__ListTestsResponse_Closure)
                 (const Kentik__Synthetics__V202101beta1__ListTestsResponse *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__CreateTestRequest_Closure)
                 (const Kentik__Synthetics__V202101beta1__CreateTestRequest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__CreateTestResponse_Closure)
                 (const Kentik__Synthetics__V202101beta1__CreateTestResponse *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__GetTestRequest_Closure)
                 (const Kentik__Synthetics__V202101beta1__GetTestRequest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__GetTestResponse_Closure)
                 (const Kentik__Synthetics__V202101beta1__GetTestResponse *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__SetTestStatusRequest_Closure)
                 (const Kentik__Synthetics__V202101beta1__SetTestStatusRequest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__SetTestStatusResponse_Closure)
                 (const Kentik__Synthetics__V202101beta1__SetTestStatusResponse *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__PatchTestRequest_Closure)
                 (const Kentik__Synthetics__V202101beta1__PatchTestRequest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__PatchTestResponse_Closure)
                 (const Kentik__Synthetics__V202101beta1__PatchTestResponse *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__DeleteTestRequest_Closure)
                 (const Kentik__Synthetics__V202101beta1__DeleteTestRequest *message,
                  void *closure_data);
typedef void (*Kentik__Synthetics__V202101beta1__DeleteTestResponse_Closure)
                 (const Kentik__Synthetics__V202101beta1__DeleteTestResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Kentik__Synthetics__V202101beta1__SyntheticsDataService_Service Kentik__Synthetics__V202101beta1__SyntheticsDataService_Service;
struct Kentik__Synthetics__V202101beta1__SyntheticsDataService_Service
{
  ProtobufCService base;
  void (*get_health_for_tests)(Kentik__Synthetics__V202101beta1__SyntheticsDataService_Service *service,
                               const Kentik__Synthetics__V202101beta1__GetHealthForTestsRequest *input,
                               Kentik__Synthetics__V202101beta1__GetHealthForTestsResponse_Closure closure,
                               void *closure_data);
  void (*get_trace_for_test)(Kentik__Synthetics__V202101beta1__SyntheticsDataService_Service *service,
                             const Kentik__Synthetics__V202101beta1__GetTraceForTestRequest *input,
                             Kentik__Synthetics__V202101beta1__GetTraceForTestResponse_Closure closure,
                             void *closure_data);
};
typedef void (*Kentik__Synthetics__V202101beta1__SyntheticsDataService_ServiceDestroy)(Kentik__Synthetics__V202101beta1__SyntheticsDataService_Service *);
void kentik__synthetics__v202101beta1__synthetics_data_service__init (Kentik__Synthetics__V202101beta1__SyntheticsDataService_Service *service,
                                                                      Kentik__Synthetics__V202101beta1__SyntheticsDataService_ServiceDestroy destroy);
#define KENTIK__SYNTHETICS__V202101BETA1__SYNTHETICS_DATA_SERVICE__BASE_INIT \
    { &kentik__synthetics__v202101beta1__synthetics_data_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define KENTIK__SYNTHETICS__V202101BETA1__SYNTHETICS_DATA_SERVICE__INIT(function_prefix__) \
    { KENTIK__SYNTHETICS__V202101BETA1__SYNTHETICS_DATA_SERVICE__BASE_INIT,\
      function_prefix__ ## get_health_for_tests,\
      function_prefix__ ## get_trace_for_test  }
void kentik__synthetics__v202101beta1__synthetics_data_service__get_health_for_tests(ProtobufCService *service,
                                                                                     const Kentik__Synthetics__V202101beta1__GetHealthForTestsRequest *input,
                                                                                     Kentik__Synthetics__V202101beta1__GetHealthForTestsResponse_Closure closure,
                                                                                     void *closure_data);
void kentik__synthetics__v202101beta1__synthetics_data_service__get_trace_for_test(ProtobufCService *service,
                                                                                   const Kentik__Synthetics__V202101beta1__GetTraceForTestRequest *input,
                                                                                   Kentik__Synthetics__V202101beta1__GetTraceForTestResponse_Closure closure,
                                                                                   void *closure_data);
typedef struct Kentik__Synthetics__V202101beta1__SyntheticsAdminService_Service Kentik__Synthetics__V202101beta1__SyntheticsAdminService_Service;
struct Kentik__Synthetics__V202101beta1__SyntheticsAdminService_Service
{
  ProtobufCService base;
  void (*list_agents)(Kentik__Synthetics__V202101beta1__SyntheticsAdminService_Service *service,
                      const Kentik__Synthetics__V202101beta1__ListAgentsRequest *input,
                      Kentik__Synthetics__V202101beta1__ListAgentsResponse_Closure closure,
                      void *closure_data);
  void (*get_agent)(Kentik__Synthetics__V202101beta1__SyntheticsAdminService_Service *service,
                    const Kentik__Synthetics__V202101beta1__GetAgentRequest *input,
                    Kentik__Synthetics__V202101beta1__GetAgentResponse_Closure closure,
                    void *closure_data);
  void (*patch_agent)(Kentik__Synthetics__V202101beta1__SyntheticsAdminService_Service *service,
                      const Kentik__Synthetics__V202101beta1__PatchAgentRequest *input,
                      Kentik__Synthetics__V202101beta1__PatchAgentResponse_Closure closure,
                      void *closure_data);
  void (*delete_agent)(Kentik__Synthetics__V202101beta1__SyntheticsAdminService_Service *service,
                       const Kentik__Synthetics__V202101beta1__DeleteAgentRequest *input,
                       Kentik__Synthetics__V202101beta1__DeleteAgentResponse_Closure closure,
                       void *closure_data);
  void (*list_tests)(Kentik__Synthetics__V202101beta1__SyntheticsAdminService_Service *service,
                     const Kentik__Synthetics__V202101beta1__ListTestsRequest *input,
                     Kentik__Synthetics__V202101beta1__ListTestsResponse_Closure closure,
                     void *closure_data);
  void (*create_test)(Kentik__Synthetics__V202101beta1__SyntheticsAdminService_Service *service,
                      const Kentik__Synthetics__V202101beta1__CreateTestRequest *input,
                      Kentik__Synthetics__V202101beta1__CreateTestResponse_Closure closure,
                      void *closure_data);
  void (*get_test)(Kentik__Synthetics__V202101beta1__SyntheticsAdminService_Service *service,
                   const Kentik__Synthetics__V202101beta1__GetTestRequest *input,
                   Kentik__Synthetics__V202101beta1__GetTestResponse_Closure closure,
                   void *closure_data);
  void (*set_test_status)(Kentik__Synthetics__V202101beta1__SyntheticsAdminService_Service *service,
                          const Kentik__Synthetics__V202101beta1__SetTestStatusRequest *input,
                          Kentik__Synthetics__V202101beta1__SetTestStatusResponse_Closure closure,
                          void *closure_data);
  void (*patch_test)(Kentik__Synthetics__V202101beta1__SyntheticsAdminService_Service *service,
                     const Kentik__Synthetics__V202101beta1__PatchTestRequest *input,
                     Kentik__Synthetics__V202101beta1__PatchTestResponse_Closure closure,
                     void *closure_data);
  void (*delete_test)(Kentik__Synthetics__V202101beta1__SyntheticsAdminService_Service *service,
                      const Kentik__Synthetics__V202101beta1__DeleteTestRequest *input,
                      Kentik__Synthetics__V202101beta1__DeleteTestResponse_Closure closure,
                      void *closure_data);
};
typedef void (*Kentik__Synthetics__V202101beta1__SyntheticsAdminService_ServiceDestroy)(Kentik__Synthetics__V202101beta1__SyntheticsAdminService_Service *);
void kentik__synthetics__v202101beta1__synthetics_admin_service__init (Kentik__Synthetics__V202101beta1__SyntheticsAdminService_Service *service,
                                                                       Kentik__Synthetics__V202101beta1__SyntheticsAdminService_ServiceDestroy destroy);
#define KENTIK__SYNTHETICS__V202101BETA1__SYNTHETICS_ADMIN_SERVICE__BASE_INIT \
    { &kentik__synthetics__v202101beta1__synthetics_admin_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define KENTIK__SYNTHETICS__V202101BETA1__SYNTHETICS_ADMIN_SERVICE__INIT(function_prefix__) \
    { KENTIK__SYNTHETICS__V202101BETA1__SYNTHETICS_ADMIN_SERVICE__BASE_INIT,\
      function_prefix__ ## list_agents,\
      function_prefix__ ## get_agent,\
      function_prefix__ ## patch_agent,\
      function_prefix__ ## delete_agent,\
      function_prefix__ ## list_tests,\
      function_prefix__ ## create_test,\
      function_prefix__ ## get_test,\
      function_prefix__ ## set_test_status,\
      function_prefix__ ## patch_test,\
      function_prefix__ ## delete_test  }
void kentik__synthetics__v202101beta1__synthetics_admin_service__list_agents(ProtobufCService *service,
                                                                             const Kentik__Synthetics__V202101beta1__ListAgentsRequest *input,
                                                                             Kentik__Synthetics__V202101beta1__ListAgentsResponse_Closure closure,
                                                                             void *closure_data);
void kentik__synthetics__v202101beta1__synthetics_admin_service__get_agent(ProtobufCService *service,
                                                                           const Kentik__Synthetics__V202101beta1__GetAgentRequest *input,
                                                                           Kentik__Synthetics__V202101beta1__GetAgentResponse_Closure closure,
                                                                           void *closure_data);
void kentik__synthetics__v202101beta1__synthetics_admin_service__patch_agent(ProtobufCService *service,
                                                                             const Kentik__Synthetics__V202101beta1__PatchAgentRequest *input,
                                                                             Kentik__Synthetics__V202101beta1__PatchAgentResponse_Closure closure,
                                                                             void *closure_data);
void kentik__synthetics__v202101beta1__synthetics_admin_service__delete_agent(ProtobufCService *service,
                                                                              const Kentik__Synthetics__V202101beta1__DeleteAgentRequest *input,
                                                                              Kentik__Synthetics__V202101beta1__DeleteAgentResponse_Closure closure,
                                                                              void *closure_data);
void kentik__synthetics__v202101beta1__synthetics_admin_service__list_tests(ProtobufCService *service,
                                                                            const Kentik__Synthetics__V202101beta1__ListTestsRequest *input,
                                                                            Kentik__Synthetics__V202101beta1__ListTestsResponse_Closure closure,
                                                                            void *closure_data);
void kentik__synthetics__v202101beta1__synthetics_admin_service__create_test(ProtobufCService *service,
                                                                             const Kentik__Synthetics__V202101beta1__CreateTestRequest *input,
                                                                             Kentik__Synthetics__V202101beta1__CreateTestResponse_Closure closure,
                                                                             void *closure_data);
void kentik__synthetics__v202101beta1__synthetics_admin_service__get_test(ProtobufCService *service,
                                                                          const Kentik__Synthetics__V202101beta1__GetTestRequest *input,
                                                                          Kentik__Synthetics__V202101beta1__GetTestResponse_Closure closure,
                                                                          void *closure_data);
void kentik__synthetics__v202101beta1__synthetics_admin_service__set_test_status(ProtobufCService *service,
                                                                                 const Kentik__Synthetics__V202101beta1__SetTestStatusRequest *input,
                                                                                 Kentik__Synthetics__V202101beta1__SetTestStatusResponse_Closure closure,
                                                                                 void *closure_data);
void kentik__synthetics__v202101beta1__synthetics_admin_service__patch_test(ProtobufCService *service,
                                                                            const Kentik__Synthetics__V202101beta1__PatchTestRequest *input,
                                                                            Kentik__Synthetics__V202101beta1__PatchTestResponse_Closure closure,
                                                                            void *closure_data);
void kentik__synthetics__v202101beta1__synthetics_admin_service__delete_test(ProtobufCService *service,
                                                                             const Kentik__Synthetics__V202101beta1__DeleteTestRequest *input,
                                                                             Kentik__Synthetics__V202101beta1__DeleteTestResponse_Closure closure,
                                                                             void *closure_data);

/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    kentik__synthetics__v202101beta1__implement_type__descriptor;
extern const ProtobufCEnumDescriptor    kentik__synthetics__v202101beta1__ipfamily__descriptor;
extern const ProtobufCEnumDescriptor    kentik__synthetics__v202101beta1__test_status__descriptor;
extern const ProtobufCEnumDescriptor    kentik__synthetics__v202101beta1__agent_status__descriptor;
extern const ProtobufCEnumDescriptor    kentik__synthetics__v202101beta1__task_state__descriptor;
extern const ProtobufCEnumDescriptor    kentik__synthetics__v202101beta1__dnsrecord__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__health__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__agent_task_config__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__test_health__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__task_health__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__agent_health__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__health_moment__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__health_moment__other_healths_entry__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__agent__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__ping_task_definition__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__trace_task_definition__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__httptask_definition__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__task__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__knock_task_definition__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__dnstask_definition__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__shake_task_definition__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__user_info__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__test__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__httpconfig__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__httpconfig__headers_entry__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__httpconfig__css_selectors_entry__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__test_settings__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__test_trace_settings__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__test_ping_settings__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__test_monitoring_settings__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__health_settings__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__hostname_test__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__ip_test__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__agent_test__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__flow_test__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__site_test__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__tag_test__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__dns_test__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__url_test__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__grid_test__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__dns_grid_test__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__application_mesh_test__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__mesh_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__mesh_column__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__mesh_metric__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__mesh_metrics__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__asn__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__country__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__region__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__city__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__geo__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__dns__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__ipinfo__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__idby_ip__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__traceroute_lookup__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__trace_hop__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__trace_probe__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__trace__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__stats__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__traceroute_result__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__traceroute_info__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__get_health_for_tests_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__get_health_for_tests_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__get_trace_for_test_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__get_trace_for_test_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__list_agents_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__list_agents_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__get_agent_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__get_agent_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__patch_agent_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__patch_agent_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__delete_agent_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__delete_agent_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__list_tests_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__list_tests_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__create_test_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__create_test_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__get_test_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__get_test_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__set_test_status_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__set_test_status_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__patch_test_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__patch_test_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__delete_test_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__synthetics__v202101beta1__delete_test_response__descriptor;
extern const ProtobufCServiceDescriptor kentik__synthetics__v202101beta1__synthetics_data_service__descriptor;
extern const ProtobufCServiceDescriptor kentik__synthetics__v202101beta1__synthetics_admin_service__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_kentik_2fsynthetics_2fv202101beta1_2fsynthetics_2eproto__INCLUDED */
