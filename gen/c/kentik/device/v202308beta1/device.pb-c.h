/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: kentik/device/v202308beta1/device.proto */

#ifndef PROTOBUF_C_kentik_2fdevice_2fv202308beta1_2fdevice_2eproto__INCLUDED
#define PROTOBUF_C_kentik_2fdevice_2fv202308beta1_2fdevice_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "google/api/annotations.pb-c.h"
#include "google/api/client.pb-c.h"
#include "google/api/field_behavior.pb-c.h"
#include "google/protobuf/timestamp.pb-c.h"
#include "google/protobuf/duration.pb-c.h"
#include "protoc-gen-openapiv2/options/annotations.pb-c.h"
#include "kentik/core/v202303/annotations.pb-c.h"

typedef struct Kentik__Device__V202308beta1__DeviceSnmpV3Conf Kentik__Device__V202308beta1__DeviceSnmpV3Conf;
typedef struct Kentik__Device__V202308beta1__DeviceNmsConfig Kentik__Device__V202308beta1__DeviceNmsConfig;
typedef struct Kentik__Device__V202308beta1__DeviceNmsSnmpConfig Kentik__Device__V202308beta1__DeviceNmsSnmpConfig;
typedef struct Kentik__Device__V202308beta1__DeviceNmsStConfig Kentik__Device__V202308beta1__DeviceNmsStConfig;
typedef struct Kentik__Device__V202308beta1__DeviceConcise Kentik__Device__V202308beta1__DeviceConcise;
typedef struct Kentik__Device__V202308beta1__Site Kentik__Device__V202308beta1__Site;
typedef struct Kentik__Device__V202308beta1__Plan Kentik__Device__V202308beta1__Plan;
typedef struct Kentik__Device__V202308beta1__Label Kentik__Device__V202308beta1__Label;
typedef struct Kentik__Device__V202308beta1__Interface Kentik__Device__V202308beta1__Interface;
typedef struct Kentik__Device__V202308beta1__CustomColumnData Kentik__Device__V202308beta1__CustomColumnData;
typedef struct Kentik__Device__V202308beta1__GnmiV1Conf Kentik__Device__V202308beta1__GnmiV1Conf;
typedef struct Kentik__Device__V202308beta1__DeviceDetailed Kentik__Device__V202308beta1__DeviceDetailed;
typedef struct Kentik__Device__V202308beta1__LabelConcise Kentik__Device__V202308beta1__LabelConcise;
typedef struct Kentik__Device__V202308beta1__ListDevicesRequest Kentik__Device__V202308beta1__ListDevicesRequest;
typedef struct Kentik__Device__V202308beta1__ListDevicesResponse Kentik__Device__V202308beta1__ListDevicesResponse;
typedef struct Kentik__Device__V202308beta1__GetDeviceRequest Kentik__Device__V202308beta1__GetDeviceRequest;
typedef struct Kentik__Device__V202308beta1__GetDeviceResponse Kentik__Device__V202308beta1__GetDeviceResponse;
typedef struct Kentik__Device__V202308beta1__CreateDeviceRequest Kentik__Device__V202308beta1__CreateDeviceRequest;
typedef struct Kentik__Device__V202308beta1__CreateDeviceResponse Kentik__Device__V202308beta1__CreateDeviceResponse;
typedef struct Kentik__Device__V202308beta1__CreateDevicesRequest Kentik__Device__V202308beta1__CreateDevicesRequest;
typedef struct Kentik__Device__V202308beta1__CreateDevicesResponse Kentik__Device__V202308beta1__CreateDevicesResponse;
typedef struct Kentik__Device__V202308beta1__UpdateDeviceRequest Kentik__Device__V202308beta1__UpdateDeviceRequest;
typedef struct Kentik__Device__V202308beta1__UpdateDeviceResponse Kentik__Device__V202308beta1__UpdateDeviceResponse;
typedef struct Kentik__Device__V202308beta1__UpdateDevicesRequest Kentik__Device__V202308beta1__UpdateDevicesRequest;
typedef struct Kentik__Device__V202308beta1__UpdateDevicesResponse Kentik__Device__V202308beta1__UpdateDevicesResponse;
typedef struct Kentik__Device__V202308beta1__UpdateDeviceLabelsRequest Kentik__Device__V202308beta1__UpdateDeviceLabelsRequest;
typedef struct Kentik__Device__V202308beta1__UpdateDeviceLabelsResponse Kentik__Device__V202308beta1__UpdateDeviceLabelsResponse;
typedef struct Kentik__Device__V202308beta1__DeleteDeviceRequest Kentik__Device__V202308beta1__DeleteDeviceRequest;
typedef struct Kentik__Device__V202308beta1__DeleteDeviceResponse Kentik__Device__V202308beta1__DeleteDeviceResponse;
typedef struct Kentik__Device__V202308beta1__DeleteDevicesRequest Kentik__Device__V202308beta1__DeleteDevicesRequest;
typedef struct Kentik__Device__V202308beta1__DeleteDevicesResponse Kentik__Device__V202308beta1__DeleteDevicesResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__DeviceSnmpV3Conf
{
  ProtobufCMessage base;
  char *username;
  char *authentication_protocol;
  char *authentication_passphrase;
  char *privacy_protocol;
  char *privacy_passphrase;
};
#define KENTIK__DEVICE__V202308BETA1__DEVICE_SNMP_V3_CONF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__device_snmp_v3_conf__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__DeviceNmsConfig
{
  ProtobufCMessage base;
  char *agent_id;
  char *ip_address;
  Kentik__Device__V202308beta1__DeviceNmsSnmpConfig *snmp;
  Kentik__Device__V202308beta1__DeviceNmsStConfig *st;
};
#define KENTIK__DEVICE__V202308BETA1__DEVICE_NMS_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__device_nms_config__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL, NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__DeviceNmsSnmpConfig
{
  ProtobufCMessage base;
  char *credential_name;
  uint32_t port;
  Google__Protobuf__Duration *timeout;
};
#define KENTIK__DEVICE__V202308BETA1__DEVICE_NMS_SNMP_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__device_nms_snmp_config__descriptor) \
    , (char *)protobuf_c_empty_string, 0, NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__DeviceNmsStConfig
{
  ProtobufCMessage base;
  char *credential_name;
  uint32_t port;
  Google__Protobuf__Duration *timeout;
  protobuf_c_boolean secure;
};
#define KENTIK__DEVICE__V202308BETA1__DEVICE_NMS_ST_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__device_nms_st_config__descriptor) \
    , (char *)protobuf_c_empty_string, 0, NULL, 0 }


typedef enum {
  KENTIK__DEVICE__V202308BETA1__DEVICE_CONCISE___MINIMIZE_SNMP__NOT_SET = 0,
  KENTIK__DEVICE__V202308BETA1__DEVICE_CONCISE___MINIMIZE_SNMP_MINIMIZE_SNMP = 10
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__DEVICE__V202308BETA1__DEVICE_CONCISE___MINIMIZE_SNMP__CASE)
} Kentik__Device__V202308beta1__DeviceConcise__MinimizeSnmpCase;

/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__DeviceConcise
{
  ProtobufCMessage base;
  /*
   * id
   */
  char *id;
  char *device_name;
  char *device_subtype;
  char *cdn_attr;
  char *device_description;
  size_t n_sending_ips;
  char **sending_ips;
  double device_sample_rate;
  uint32_t plan_id;
  uint32_t site_id;
  char *device_snmp_ip;
  char *device_snmp_community;
  Kentik__Device__V202308beta1__DeviceSnmpV3Conf *device_snmp_v3_conf;
  char *device_bgp_type;
  char *device_bgp_neighbor_ip;
  char *device_bgp_neighbor_ip6;
  char *device_bgp_neighbor_asn;
  char *device_bgp_password;
  uint32_t use_bgp_device_id;
  protobuf_c_boolean device_bgp_flowspec;
  Kentik__Device__V202308beta1__DeviceNmsConfig *nms;
  char *device_bgp_credential_name;
  char *flow_snmp_credential_name;
  uint32_t monitoring_template_id;
  Kentik__Device__V202308beta1__DeviceConcise__MinimizeSnmpCase _minimize_snmp_case;
  union {
    protobuf_c_boolean minimize_snmp;
  };
};
#define KENTIK__DEVICE__V202308BETA1__DEVICE_CONCISE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__device_concise__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL, 0, 0, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0, NULL, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, KENTIK__DEVICE__V202308BETA1__DEVICE_CONCISE___MINIMIZE_SNMP__NOT_SET, {0} }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__Site
{
  ProtobufCMessage base;
  char *id;
  char *site_name;
  double lat;
  double lon;
  char *company_id;
};
#define KENTIK__DEVICE__V202308BETA1__SITE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__site__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0, (char *)protobuf_c_empty_string }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__Plan
{
  ProtobufCMessage base;
  char *id;
  char *name;
};
#define KENTIK__DEVICE__V202308BETA1__PLAN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__plan__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__Label
{
  ProtobufCMessage base;
  char *id;
  char *name;
  char *description;
  Google__Protobuf__Timestamp *edate;
  Google__Protobuf__Timestamp *cdate;
  char *user_id;
  char *company_id;
  char *color;
  char *order;
  char *pivot_device_id;
  char *pivot_label_id;
};
#define KENTIK__DEVICE__V202308BETA1__LABEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__label__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL, NULL, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__Interface
{
  ProtobufCMessage base;
  char *interface_description;
  char *initial_snmp_speed;
  char *device_id;
  char *snmp_speed;
  char *snmp_alias;
  char *snmp_id;
  char *connectivity_type;
  char *network_boundary;
  char *provider;
};
#define KENTIK__DEVICE__V202308BETA1__INTERFACE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__interface__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__CustomColumnData
{
  ProtobufCMessage base;
  char *device_id;
  char *field_id;
  char *col_name;
  char *description;
  char *col_type;
  char *device_type;
};
#define KENTIK__DEVICE__V202308BETA1__CUSTOM_COLUMN_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__custom_column_data__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__GnmiV1Conf
{
  ProtobufCMessage base;
  char *dialout_server;
};
#define KENTIK__DEVICE__V202308BETA1__GNMI_V1_CONF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__gnmi_v1_conf__descriptor) \
    , (char *)protobuf_c_empty_string }


typedef enum {
  KENTIK__DEVICE__V202308BETA1__DEVICE_DETAILED___MINIMIZE_SNMP__NOT_SET = 0,
  KENTIK__DEVICE__V202308BETA1__DEVICE_DETAILED___MINIMIZE_SNMP_MINIMIZE_SNMP = 16
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__DEVICE__V202308BETA1__DEVICE_DETAILED___MINIMIZE_SNMP__CASE)
} Kentik__Device__V202308beta1__DeviceDetailed__MinimizeSnmpCase;

/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__DeviceDetailed
{
  ProtobufCMessage base;
  char *id;
  char *company_id;
  char *device_name;
  char *device_alias;
  char *device_type;
  char *device_description;
  Kentik__Device__V202308beta1__Site *site;
  Kentik__Device__V202308beta1__Plan *plan;
  size_t n_labels;
  Kentik__Device__V202308beta1__Label **labels;
  size_t n_all_interfaces;
  Kentik__Device__V202308beta1__Interface **all_interfaces;
  char *device_flow_type;
  char *device_sample_rate;
  size_t n_sending_ips;
  char **sending_ips;
  char *device_snmp_ip;
  /*
   * Keeping these tokens so we can give the user a useful error.  They are removed from DeviceRequest
   */
  char *device_snmp_community;
  char *device_bgp_type;
  char *device_bgp_neighbor_ip;
  char *device_bgp_neighbor_ip6;
  char *device_bgp_neighbor_asn;
  protobuf_c_boolean device_bgp_flowspec;
  /*
   * Keeping these tokens so we can give the user a useful error.  They are removed from DeviceRequest
   */
  char *device_bgp_password;
  protobuf_c_boolean device_bgp_label_unicast;
  char *bgp_lookup_strategy;
  char *device_status;
  char *use_bgp_device_id;
  char *custom_columns;
  size_t n_custom_column_data;
  Kentik__Device__V202308beta1__CustomColumnData **custom_column_data;
  char *device_chf_client_port;
  char *device_chf_client_protocol;
  char *device_chf_interface;
  char *device_agent_type;
  uint32_t max_flow_rate;
  uint32_t max_big_flow_rate;
  char *device_proxy_bgp;
  char *device_proxy_bgp6;
  Google__Protobuf__Timestamp *created_date;
  Google__Protobuf__Timestamp *updated_date;
  protobuf_c_boolean device_snmp_v3_conf_enabled;
  /*
   * Keeping these tokens so we can give the user a useful error.  They are removed from DeviceRequest
   */
  Kentik__Device__V202308beta1__DeviceSnmpV3Conf *device_snmp_v3_conf;
  char *cdn_attr;
  char *bgp_peer_ip4;
  char *bgp_peer_ip6;
  char *device_subtype;
  char *device_vendor_type;
  char *device_model_type;
  char *cloud_export_id;
  char *device_kproxy;
  char *snmp_enabled;
  char *snmp_disabled_reason;
  char *snmp_disabled_reason_other;
  char *bgp_disabled_reason;
  char *bgp_disabled_reason_other;
  char *device_manufacturer;
  char *device_alert;
  char *role;
  Kentik__Device__V202308beta1__GnmiV1Conf *device_gnmi_v1_conf;
  protobuf_c_boolean use_asn_from_flow;
  uint32_t max_interface;
  uint32_t max_interface_check;
  Kentik__Device__V202308beta1__DeviceNmsConfig *nms;
  char *device_bgp_credential_name;
  char *flow_snmp_credential_name;
  uint32_t monitoring_template_id;
  Kentik__Device__V202308beta1__DeviceDetailed__MinimizeSnmpCase _minimize_snmp_case;
  union {
    protobuf_c_boolean minimize_snmp;
  };
};
#define KENTIK__DEVICE__V202308BETA1__DEVICE_DETAILED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__device_detailed__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL, NULL, 0,NULL, 0,NULL, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL, NULL, 0, NULL, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL, 0, 0, 0, NULL, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, KENTIK__DEVICE__V202308BETA1__DEVICE_DETAILED___MINIMIZE_SNMP__NOT_SET, {0} }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__LabelConcise
{
  ProtobufCMessage base;
  uint32_t id;
};
#define KENTIK__DEVICE__V202308BETA1__LABEL_CONCISE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__label_concise__descriptor) \
    , 0 }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__ListDevicesRequest
{
  ProtobufCMessage base;
};
#define KENTIK__DEVICE__V202308BETA1__LIST_DEVICES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__list_devices_request__descriptor) \
     }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__ListDevicesResponse
{
  ProtobufCMessage base;
  size_t n_devices;
  Kentik__Device__V202308beta1__DeviceDetailed **devices;
  uint32_t invalid_count;
};
#define KENTIK__DEVICE__V202308BETA1__LIST_DEVICES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__list_devices_response__descriptor) \
    , 0,NULL, 0 }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__GetDeviceRequest
{
  ProtobufCMessage base;
  char *id;
};
#define KENTIK__DEVICE__V202308BETA1__GET_DEVICE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__get_device_request__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__GetDeviceResponse
{
  ProtobufCMessage base;
  Kentik__Device__V202308beta1__DeviceDetailed *device;
};
#define KENTIK__DEVICE__V202308BETA1__GET_DEVICE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__get_device_response__descriptor) \
    , NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__CreateDeviceRequest
{
  ProtobufCMessage base;
  Kentik__Device__V202308beta1__DeviceConcise *device;
};
#define KENTIK__DEVICE__V202308BETA1__CREATE_DEVICE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__create_device_request__descriptor) \
    , NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__CreateDeviceResponse
{
  ProtobufCMessage base;
  Kentik__Device__V202308beta1__DeviceDetailed *device;
};
#define KENTIK__DEVICE__V202308BETA1__CREATE_DEVICE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__create_device_response__descriptor) \
    , NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__CreateDevicesRequest
{
  ProtobufCMessage base;
  size_t n_devices;
  Kentik__Device__V202308beta1__DeviceConcise **devices;
};
#define KENTIK__DEVICE__V202308BETA1__CREATE_DEVICES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__create_devices_request__descriptor) \
    , 0,NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__CreateDevicesResponse
{
  ProtobufCMessage base;
  size_t n_devices;
  Kentik__Device__V202308beta1__DeviceDetailed **devices;
  size_t n_failed_devices;
  char **failed_devices;
};
#define KENTIK__DEVICE__V202308BETA1__CREATE_DEVICES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__create_devices_response__descriptor) \
    , 0,NULL, 0,NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__UpdateDeviceRequest
{
  ProtobufCMessage base;
  Kentik__Device__V202308beta1__DeviceConcise *device;
};
#define KENTIK__DEVICE__V202308BETA1__UPDATE_DEVICE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__update_device_request__descriptor) \
    , NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__UpdateDeviceResponse
{
  ProtobufCMessage base;
  Kentik__Device__V202308beta1__DeviceDetailed *device;
};
#define KENTIK__DEVICE__V202308BETA1__UPDATE_DEVICE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__update_device_response__descriptor) \
    , NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__UpdateDevicesRequest
{
  ProtobufCMessage base;
  size_t n_devices;
  Kentik__Device__V202308beta1__DeviceConcise **devices;
};
#define KENTIK__DEVICE__V202308BETA1__UPDATE_DEVICES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__update_devices_request__descriptor) \
    , 0,NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__UpdateDevicesResponse
{
  ProtobufCMessage base;
  size_t n_devices;
  Kentik__Device__V202308beta1__DeviceDetailed **devices;
  size_t n_failed_devices;
  char **failed_devices;
};
#define KENTIK__DEVICE__V202308BETA1__UPDATE_DEVICES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__update_devices_response__descriptor) \
    , 0,NULL, 0,NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__UpdateDeviceLabelsRequest
{
  ProtobufCMessage base;
  char *id;
  size_t n_labels;
  Kentik__Device__V202308beta1__LabelConcise **labels;
};
#define KENTIK__DEVICE__V202308BETA1__UPDATE_DEVICE_LABELS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__update_device_labels_request__descriptor) \
    , (char *)protobuf_c_empty_string, 0,NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__UpdateDeviceLabelsResponse
{
  ProtobufCMessage base;
  Kentik__Device__V202308beta1__DeviceDetailed *device;
};
#define KENTIK__DEVICE__V202308BETA1__UPDATE_DEVICE_LABELS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__update_device_labels_response__descriptor) \
    , NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__DeleteDeviceRequest
{
  ProtobufCMessage base;
  char *id;
};
#define KENTIK__DEVICE__V202308BETA1__DELETE_DEVICE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__delete_device_request__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__DeleteDeviceResponse
{
  ProtobufCMessage base;
};
#define KENTIK__DEVICE__V202308BETA1__DELETE_DEVICE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__delete_device_response__descriptor) \
     }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__DeleteDevicesRequest
{
  ProtobufCMessage base;
  size_t n_ids;
  char **ids;
};
#define KENTIK__DEVICE__V202308BETA1__DELETE_DEVICES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__delete_devices_request__descriptor) \
    , 0,NULL }


/*
 * {{.Name}}
 */
struct  Kentik__Device__V202308beta1__DeleteDevicesResponse
{
  ProtobufCMessage base;
  size_t n_failed_devices;
  char **failed_devices;
};
#define KENTIK__DEVICE__V202308BETA1__DELETE_DEVICES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__device__v202308beta1__delete_devices_response__descriptor) \
    , 0,NULL }


/* Kentik__Device__V202308beta1__DeviceSnmpV3Conf methods */
void   kentik__device__v202308beta1__device_snmp_v3_conf__init
                     (Kentik__Device__V202308beta1__DeviceSnmpV3Conf         *message);
size_t kentik__device__v202308beta1__device_snmp_v3_conf__get_packed_size
                     (const Kentik__Device__V202308beta1__DeviceSnmpV3Conf   *message);
size_t kentik__device__v202308beta1__device_snmp_v3_conf__pack
                     (const Kentik__Device__V202308beta1__DeviceSnmpV3Conf   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__device_snmp_v3_conf__pack_to_buffer
                     (const Kentik__Device__V202308beta1__DeviceSnmpV3Conf   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__DeviceSnmpV3Conf *
       kentik__device__v202308beta1__device_snmp_v3_conf__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__device_snmp_v3_conf__free_unpacked
                     (Kentik__Device__V202308beta1__DeviceSnmpV3Conf *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__DeviceNmsConfig methods */
void   kentik__device__v202308beta1__device_nms_config__init
                     (Kentik__Device__V202308beta1__DeviceNmsConfig         *message);
size_t kentik__device__v202308beta1__device_nms_config__get_packed_size
                     (const Kentik__Device__V202308beta1__DeviceNmsConfig   *message);
size_t kentik__device__v202308beta1__device_nms_config__pack
                     (const Kentik__Device__V202308beta1__DeviceNmsConfig   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__device_nms_config__pack_to_buffer
                     (const Kentik__Device__V202308beta1__DeviceNmsConfig   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__DeviceNmsConfig *
       kentik__device__v202308beta1__device_nms_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__device_nms_config__free_unpacked
                     (Kentik__Device__V202308beta1__DeviceNmsConfig *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__DeviceNmsSnmpConfig methods */
void   kentik__device__v202308beta1__device_nms_snmp_config__init
                     (Kentik__Device__V202308beta1__DeviceNmsSnmpConfig         *message);
size_t kentik__device__v202308beta1__device_nms_snmp_config__get_packed_size
                     (const Kentik__Device__V202308beta1__DeviceNmsSnmpConfig   *message);
size_t kentik__device__v202308beta1__device_nms_snmp_config__pack
                     (const Kentik__Device__V202308beta1__DeviceNmsSnmpConfig   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__device_nms_snmp_config__pack_to_buffer
                     (const Kentik__Device__V202308beta1__DeviceNmsSnmpConfig   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__DeviceNmsSnmpConfig *
       kentik__device__v202308beta1__device_nms_snmp_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__device_nms_snmp_config__free_unpacked
                     (Kentik__Device__V202308beta1__DeviceNmsSnmpConfig *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__DeviceNmsStConfig methods */
void   kentik__device__v202308beta1__device_nms_st_config__init
                     (Kentik__Device__V202308beta1__DeviceNmsStConfig         *message);
size_t kentik__device__v202308beta1__device_nms_st_config__get_packed_size
                     (const Kentik__Device__V202308beta1__DeviceNmsStConfig   *message);
size_t kentik__device__v202308beta1__device_nms_st_config__pack
                     (const Kentik__Device__V202308beta1__DeviceNmsStConfig   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__device_nms_st_config__pack_to_buffer
                     (const Kentik__Device__V202308beta1__DeviceNmsStConfig   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__DeviceNmsStConfig *
       kentik__device__v202308beta1__device_nms_st_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__device_nms_st_config__free_unpacked
                     (Kentik__Device__V202308beta1__DeviceNmsStConfig *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__DeviceConcise methods */
void   kentik__device__v202308beta1__device_concise__init
                     (Kentik__Device__V202308beta1__DeviceConcise         *message);
size_t kentik__device__v202308beta1__device_concise__get_packed_size
                     (const Kentik__Device__V202308beta1__DeviceConcise   *message);
size_t kentik__device__v202308beta1__device_concise__pack
                     (const Kentik__Device__V202308beta1__DeviceConcise   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__device_concise__pack_to_buffer
                     (const Kentik__Device__V202308beta1__DeviceConcise   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__DeviceConcise *
       kentik__device__v202308beta1__device_concise__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__device_concise__free_unpacked
                     (Kentik__Device__V202308beta1__DeviceConcise *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__Site methods */
void   kentik__device__v202308beta1__site__init
                     (Kentik__Device__V202308beta1__Site         *message);
size_t kentik__device__v202308beta1__site__get_packed_size
                     (const Kentik__Device__V202308beta1__Site   *message);
size_t kentik__device__v202308beta1__site__pack
                     (const Kentik__Device__V202308beta1__Site   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__site__pack_to_buffer
                     (const Kentik__Device__V202308beta1__Site   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__Site *
       kentik__device__v202308beta1__site__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__site__free_unpacked
                     (Kentik__Device__V202308beta1__Site *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__Plan methods */
void   kentik__device__v202308beta1__plan__init
                     (Kentik__Device__V202308beta1__Plan         *message);
size_t kentik__device__v202308beta1__plan__get_packed_size
                     (const Kentik__Device__V202308beta1__Plan   *message);
size_t kentik__device__v202308beta1__plan__pack
                     (const Kentik__Device__V202308beta1__Plan   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__plan__pack_to_buffer
                     (const Kentik__Device__V202308beta1__Plan   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__Plan *
       kentik__device__v202308beta1__plan__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__plan__free_unpacked
                     (Kentik__Device__V202308beta1__Plan *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__Label methods */
void   kentik__device__v202308beta1__label__init
                     (Kentik__Device__V202308beta1__Label         *message);
size_t kentik__device__v202308beta1__label__get_packed_size
                     (const Kentik__Device__V202308beta1__Label   *message);
size_t kentik__device__v202308beta1__label__pack
                     (const Kentik__Device__V202308beta1__Label   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__label__pack_to_buffer
                     (const Kentik__Device__V202308beta1__Label   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__Label *
       kentik__device__v202308beta1__label__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__label__free_unpacked
                     (Kentik__Device__V202308beta1__Label *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__Interface methods */
void   kentik__device__v202308beta1__interface__init
                     (Kentik__Device__V202308beta1__Interface         *message);
size_t kentik__device__v202308beta1__interface__get_packed_size
                     (const Kentik__Device__V202308beta1__Interface   *message);
size_t kentik__device__v202308beta1__interface__pack
                     (const Kentik__Device__V202308beta1__Interface   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__interface__pack_to_buffer
                     (const Kentik__Device__V202308beta1__Interface   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__Interface *
       kentik__device__v202308beta1__interface__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__interface__free_unpacked
                     (Kentik__Device__V202308beta1__Interface *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__CustomColumnData methods */
void   kentik__device__v202308beta1__custom_column_data__init
                     (Kentik__Device__V202308beta1__CustomColumnData         *message);
size_t kentik__device__v202308beta1__custom_column_data__get_packed_size
                     (const Kentik__Device__V202308beta1__CustomColumnData   *message);
size_t kentik__device__v202308beta1__custom_column_data__pack
                     (const Kentik__Device__V202308beta1__CustomColumnData   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__custom_column_data__pack_to_buffer
                     (const Kentik__Device__V202308beta1__CustomColumnData   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__CustomColumnData *
       kentik__device__v202308beta1__custom_column_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__custom_column_data__free_unpacked
                     (Kentik__Device__V202308beta1__CustomColumnData *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__GnmiV1Conf methods */
void   kentik__device__v202308beta1__gnmi_v1_conf__init
                     (Kentik__Device__V202308beta1__GnmiV1Conf         *message);
size_t kentik__device__v202308beta1__gnmi_v1_conf__get_packed_size
                     (const Kentik__Device__V202308beta1__GnmiV1Conf   *message);
size_t kentik__device__v202308beta1__gnmi_v1_conf__pack
                     (const Kentik__Device__V202308beta1__GnmiV1Conf   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__gnmi_v1_conf__pack_to_buffer
                     (const Kentik__Device__V202308beta1__GnmiV1Conf   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__GnmiV1Conf *
       kentik__device__v202308beta1__gnmi_v1_conf__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__gnmi_v1_conf__free_unpacked
                     (Kentik__Device__V202308beta1__GnmiV1Conf *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__DeviceDetailed methods */
void   kentik__device__v202308beta1__device_detailed__init
                     (Kentik__Device__V202308beta1__DeviceDetailed         *message);
size_t kentik__device__v202308beta1__device_detailed__get_packed_size
                     (const Kentik__Device__V202308beta1__DeviceDetailed   *message);
size_t kentik__device__v202308beta1__device_detailed__pack
                     (const Kentik__Device__V202308beta1__DeviceDetailed   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__device_detailed__pack_to_buffer
                     (const Kentik__Device__V202308beta1__DeviceDetailed   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__DeviceDetailed *
       kentik__device__v202308beta1__device_detailed__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__device_detailed__free_unpacked
                     (Kentik__Device__V202308beta1__DeviceDetailed *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__LabelConcise methods */
void   kentik__device__v202308beta1__label_concise__init
                     (Kentik__Device__V202308beta1__LabelConcise         *message);
size_t kentik__device__v202308beta1__label_concise__get_packed_size
                     (const Kentik__Device__V202308beta1__LabelConcise   *message);
size_t kentik__device__v202308beta1__label_concise__pack
                     (const Kentik__Device__V202308beta1__LabelConcise   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__label_concise__pack_to_buffer
                     (const Kentik__Device__V202308beta1__LabelConcise   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__LabelConcise *
       kentik__device__v202308beta1__label_concise__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__label_concise__free_unpacked
                     (Kentik__Device__V202308beta1__LabelConcise *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__ListDevicesRequest methods */
void   kentik__device__v202308beta1__list_devices_request__init
                     (Kentik__Device__V202308beta1__ListDevicesRequest         *message);
size_t kentik__device__v202308beta1__list_devices_request__get_packed_size
                     (const Kentik__Device__V202308beta1__ListDevicesRequest   *message);
size_t kentik__device__v202308beta1__list_devices_request__pack
                     (const Kentik__Device__V202308beta1__ListDevicesRequest   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__list_devices_request__pack_to_buffer
                     (const Kentik__Device__V202308beta1__ListDevicesRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__ListDevicesRequest *
       kentik__device__v202308beta1__list_devices_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__list_devices_request__free_unpacked
                     (Kentik__Device__V202308beta1__ListDevicesRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__ListDevicesResponse methods */
void   kentik__device__v202308beta1__list_devices_response__init
                     (Kentik__Device__V202308beta1__ListDevicesResponse         *message);
size_t kentik__device__v202308beta1__list_devices_response__get_packed_size
                     (const Kentik__Device__V202308beta1__ListDevicesResponse   *message);
size_t kentik__device__v202308beta1__list_devices_response__pack
                     (const Kentik__Device__V202308beta1__ListDevicesResponse   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__list_devices_response__pack_to_buffer
                     (const Kentik__Device__V202308beta1__ListDevicesResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__ListDevicesResponse *
       kentik__device__v202308beta1__list_devices_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__list_devices_response__free_unpacked
                     (Kentik__Device__V202308beta1__ListDevicesResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__GetDeviceRequest methods */
void   kentik__device__v202308beta1__get_device_request__init
                     (Kentik__Device__V202308beta1__GetDeviceRequest         *message);
size_t kentik__device__v202308beta1__get_device_request__get_packed_size
                     (const Kentik__Device__V202308beta1__GetDeviceRequest   *message);
size_t kentik__device__v202308beta1__get_device_request__pack
                     (const Kentik__Device__V202308beta1__GetDeviceRequest   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__get_device_request__pack_to_buffer
                     (const Kentik__Device__V202308beta1__GetDeviceRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__GetDeviceRequest *
       kentik__device__v202308beta1__get_device_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__get_device_request__free_unpacked
                     (Kentik__Device__V202308beta1__GetDeviceRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__GetDeviceResponse methods */
void   kentik__device__v202308beta1__get_device_response__init
                     (Kentik__Device__V202308beta1__GetDeviceResponse         *message);
size_t kentik__device__v202308beta1__get_device_response__get_packed_size
                     (const Kentik__Device__V202308beta1__GetDeviceResponse   *message);
size_t kentik__device__v202308beta1__get_device_response__pack
                     (const Kentik__Device__V202308beta1__GetDeviceResponse   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__get_device_response__pack_to_buffer
                     (const Kentik__Device__V202308beta1__GetDeviceResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__GetDeviceResponse *
       kentik__device__v202308beta1__get_device_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__get_device_response__free_unpacked
                     (Kentik__Device__V202308beta1__GetDeviceResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__CreateDeviceRequest methods */
void   kentik__device__v202308beta1__create_device_request__init
                     (Kentik__Device__V202308beta1__CreateDeviceRequest         *message);
size_t kentik__device__v202308beta1__create_device_request__get_packed_size
                     (const Kentik__Device__V202308beta1__CreateDeviceRequest   *message);
size_t kentik__device__v202308beta1__create_device_request__pack
                     (const Kentik__Device__V202308beta1__CreateDeviceRequest   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__create_device_request__pack_to_buffer
                     (const Kentik__Device__V202308beta1__CreateDeviceRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__CreateDeviceRequest *
       kentik__device__v202308beta1__create_device_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__create_device_request__free_unpacked
                     (Kentik__Device__V202308beta1__CreateDeviceRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__CreateDeviceResponse methods */
void   kentik__device__v202308beta1__create_device_response__init
                     (Kentik__Device__V202308beta1__CreateDeviceResponse         *message);
size_t kentik__device__v202308beta1__create_device_response__get_packed_size
                     (const Kentik__Device__V202308beta1__CreateDeviceResponse   *message);
size_t kentik__device__v202308beta1__create_device_response__pack
                     (const Kentik__Device__V202308beta1__CreateDeviceResponse   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__create_device_response__pack_to_buffer
                     (const Kentik__Device__V202308beta1__CreateDeviceResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__CreateDeviceResponse *
       kentik__device__v202308beta1__create_device_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__create_device_response__free_unpacked
                     (Kentik__Device__V202308beta1__CreateDeviceResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__CreateDevicesRequest methods */
void   kentik__device__v202308beta1__create_devices_request__init
                     (Kentik__Device__V202308beta1__CreateDevicesRequest         *message);
size_t kentik__device__v202308beta1__create_devices_request__get_packed_size
                     (const Kentik__Device__V202308beta1__CreateDevicesRequest   *message);
size_t kentik__device__v202308beta1__create_devices_request__pack
                     (const Kentik__Device__V202308beta1__CreateDevicesRequest   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__create_devices_request__pack_to_buffer
                     (const Kentik__Device__V202308beta1__CreateDevicesRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__CreateDevicesRequest *
       kentik__device__v202308beta1__create_devices_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__create_devices_request__free_unpacked
                     (Kentik__Device__V202308beta1__CreateDevicesRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__CreateDevicesResponse methods */
void   kentik__device__v202308beta1__create_devices_response__init
                     (Kentik__Device__V202308beta1__CreateDevicesResponse         *message);
size_t kentik__device__v202308beta1__create_devices_response__get_packed_size
                     (const Kentik__Device__V202308beta1__CreateDevicesResponse   *message);
size_t kentik__device__v202308beta1__create_devices_response__pack
                     (const Kentik__Device__V202308beta1__CreateDevicesResponse   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__create_devices_response__pack_to_buffer
                     (const Kentik__Device__V202308beta1__CreateDevicesResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__CreateDevicesResponse *
       kentik__device__v202308beta1__create_devices_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__create_devices_response__free_unpacked
                     (Kentik__Device__V202308beta1__CreateDevicesResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__UpdateDeviceRequest methods */
void   kentik__device__v202308beta1__update_device_request__init
                     (Kentik__Device__V202308beta1__UpdateDeviceRequest         *message);
size_t kentik__device__v202308beta1__update_device_request__get_packed_size
                     (const Kentik__Device__V202308beta1__UpdateDeviceRequest   *message);
size_t kentik__device__v202308beta1__update_device_request__pack
                     (const Kentik__Device__V202308beta1__UpdateDeviceRequest   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__update_device_request__pack_to_buffer
                     (const Kentik__Device__V202308beta1__UpdateDeviceRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__UpdateDeviceRequest *
       kentik__device__v202308beta1__update_device_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__update_device_request__free_unpacked
                     (Kentik__Device__V202308beta1__UpdateDeviceRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__UpdateDeviceResponse methods */
void   kentik__device__v202308beta1__update_device_response__init
                     (Kentik__Device__V202308beta1__UpdateDeviceResponse         *message);
size_t kentik__device__v202308beta1__update_device_response__get_packed_size
                     (const Kentik__Device__V202308beta1__UpdateDeviceResponse   *message);
size_t kentik__device__v202308beta1__update_device_response__pack
                     (const Kentik__Device__V202308beta1__UpdateDeviceResponse   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__update_device_response__pack_to_buffer
                     (const Kentik__Device__V202308beta1__UpdateDeviceResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__UpdateDeviceResponse *
       kentik__device__v202308beta1__update_device_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__update_device_response__free_unpacked
                     (Kentik__Device__V202308beta1__UpdateDeviceResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__UpdateDevicesRequest methods */
void   kentik__device__v202308beta1__update_devices_request__init
                     (Kentik__Device__V202308beta1__UpdateDevicesRequest         *message);
size_t kentik__device__v202308beta1__update_devices_request__get_packed_size
                     (const Kentik__Device__V202308beta1__UpdateDevicesRequest   *message);
size_t kentik__device__v202308beta1__update_devices_request__pack
                     (const Kentik__Device__V202308beta1__UpdateDevicesRequest   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__update_devices_request__pack_to_buffer
                     (const Kentik__Device__V202308beta1__UpdateDevicesRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__UpdateDevicesRequest *
       kentik__device__v202308beta1__update_devices_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__update_devices_request__free_unpacked
                     (Kentik__Device__V202308beta1__UpdateDevicesRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__UpdateDevicesResponse methods */
void   kentik__device__v202308beta1__update_devices_response__init
                     (Kentik__Device__V202308beta1__UpdateDevicesResponse         *message);
size_t kentik__device__v202308beta1__update_devices_response__get_packed_size
                     (const Kentik__Device__V202308beta1__UpdateDevicesResponse   *message);
size_t kentik__device__v202308beta1__update_devices_response__pack
                     (const Kentik__Device__V202308beta1__UpdateDevicesResponse   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__update_devices_response__pack_to_buffer
                     (const Kentik__Device__V202308beta1__UpdateDevicesResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__UpdateDevicesResponse *
       kentik__device__v202308beta1__update_devices_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__update_devices_response__free_unpacked
                     (Kentik__Device__V202308beta1__UpdateDevicesResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__UpdateDeviceLabelsRequest methods */
void   kentik__device__v202308beta1__update_device_labels_request__init
                     (Kentik__Device__V202308beta1__UpdateDeviceLabelsRequest         *message);
size_t kentik__device__v202308beta1__update_device_labels_request__get_packed_size
                     (const Kentik__Device__V202308beta1__UpdateDeviceLabelsRequest   *message);
size_t kentik__device__v202308beta1__update_device_labels_request__pack
                     (const Kentik__Device__V202308beta1__UpdateDeviceLabelsRequest   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__update_device_labels_request__pack_to_buffer
                     (const Kentik__Device__V202308beta1__UpdateDeviceLabelsRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__UpdateDeviceLabelsRequest *
       kentik__device__v202308beta1__update_device_labels_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__update_device_labels_request__free_unpacked
                     (Kentik__Device__V202308beta1__UpdateDeviceLabelsRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__UpdateDeviceLabelsResponse methods */
void   kentik__device__v202308beta1__update_device_labels_response__init
                     (Kentik__Device__V202308beta1__UpdateDeviceLabelsResponse         *message);
size_t kentik__device__v202308beta1__update_device_labels_response__get_packed_size
                     (const Kentik__Device__V202308beta1__UpdateDeviceLabelsResponse   *message);
size_t kentik__device__v202308beta1__update_device_labels_response__pack
                     (const Kentik__Device__V202308beta1__UpdateDeviceLabelsResponse   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__update_device_labels_response__pack_to_buffer
                     (const Kentik__Device__V202308beta1__UpdateDeviceLabelsResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__UpdateDeviceLabelsResponse *
       kentik__device__v202308beta1__update_device_labels_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__update_device_labels_response__free_unpacked
                     (Kentik__Device__V202308beta1__UpdateDeviceLabelsResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__DeleteDeviceRequest methods */
void   kentik__device__v202308beta1__delete_device_request__init
                     (Kentik__Device__V202308beta1__DeleteDeviceRequest         *message);
size_t kentik__device__v202308beta1__delete_device_request__get_packed_size
                     (const Kentik__Device__V202308beta1__DeleteDeviceRequest   *message);
size_t kentik__device__v202308beta1__delete_device_request__pack
                     (const Kentik__Device__V202308beta1__DeleteDeviceRequest   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__delete_device_request__pack_to_buffer
                     (const Kentik__Device__V202308beta1__DeleteDeviceRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__DeleteDeviceRequest *
       kentik__device__v202308beta1__delete_device_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__delete_device_request__free_unpacked
                     (Kentik__Device__V202308beta1__DeleteDeviceRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__DeleteDeviceResponse methods */
void   kentik__device__v202308beta1__delete_device_response__init
                     (Kentik__Device__V202308beta1__DeleteDeviceResponse         *message);
size_t kentik__device__v202308beta1__delete_device_response__get_packed_size
                     (const Kentik__Device__V202308beta1__DeleteDeviceResponse   *message);
size_t kentik__device__v202308beta1__delete_device_response__pack
                     (const Kentik__Device__V202308beta1__DeleteDeviceResponse   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__delete_device_response__pack_to_buffer
                     (const Kentik__Device__V202308beta1__DeleteDeviceResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__DeleteDeviceResponse *
       kentik__device__v202308beta1__delete_device_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__delete_device_response__free_unpacked
                     (Kentik__Device__V202308beta1__DeleteDeviceResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__DeleteDevicesRequest methods */
void   kentik__device__v202308beta1__delete_devices_request__init
                     (Kentik__Device__V202308beta1__DeleteDevicesRequest         *message);
size_t kentik__device__v202308beta1__delete_devices_request__get_packed_size
                     (const Kentik__Device__V202308beta1__DeleteDevicesRequest   *message);
size_t kentik__device__v202308beta1__delete_devices_request__pack
                     (const Kentik__Device__V202308beta1__DeleteDevicesRequest   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__delete_devices_request__pack_to_buffer
                     (const Kentik__Device__V202308beta1__DeleteDevicesRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__DeleteDevicesRequest *
       kentik__device__v202308beta1__delete_devices_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__delete_devices_request__free_unpacked
                     (Kentik__Device__V202308beta1__DeleteDevicesRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Device__V202308beta1__DeleteDevicesResponse methods */
void   kentik__device__v202308beta1__delete_devices_response__init
                     (Kentik__Device__V202308beta1__DeleteDevicesResponse         *message);
size_t kentik__device__v202308beta1__delete_devices_response__get_packed_size
                     (const Kentik__Device__V202308beta1__DeleteDevicesResponse   *message);
size_t kentik__device__v202308beta1__delete_devices_response__pack
                     (const Kentik__Device__V202308beta1__DeleteDevicesResponse   *message,
                      uint8_t             *out);
size_t kentik__device__v202308beta1__delete_devices_response__pack_to_buffer
                     (const Kentik__Device__V202308beta1__DeleteDevicesResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Device__V202308beta1__DeleteDevicesResponse *
       kentik__device__v202308beta1__delete_devices_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__device__v202308beta1__delete_devices_response__free_unpacked
                     (Kentik__Device__V202308beta1__DeleteDevicesResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Kentik__Device__V202308beta1__DeviceSnmpV3Conf_Closure)
                 (const Kentik__Device__V202308beta1__DeviceSnmpV3Conf *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__DeviceNmsConfig_Closure)
                 (const Kentik__Device__V202308beta1__DeviceNmsConfig *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__DeviceNmsSnmpConfig_Closure)
                 (const Kentik__Device__V202308beta1__DeviceNmsSnmpConfig *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__DeviceNmsStConfig_Closure)
                 (const Kentik__Device__V202308beta1__DeviceNmsStConfig *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__DeviceConcise_Closure)
                 (const Kentik__Device__V202308beta1__DeviceConcise *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__Site_Closure)
                 (const Kentik__Device__V202308beta1__Site *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__Plan_Closure)
                 (const Kentik__Device__V202308beta1__Plan *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__Label_Closure)
                 (const Kentik__Device__V202308beta1__Label *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__Interface_Closure)
                 (const Kentik__Device__V202308beta1__Interface *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__CustomColumnData_Closure)
                 (const Kentik__Device__V202308beta1__CustomColumnData *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__GnmiV1Conf_Closure)
                 (const Kentik__Device__V202308beta1__GnmiV1Conf *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__DeviceDetailed_Closure)
                 (const Kentik__Device__V202308beta1__DeviceDetailed *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__LabelConcise_Closure)
                 (const Kentik__Device__V202308beta1__LabelConcise *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__ListDevicesRequest_Closure)
                 (const Kentik__Device__V202308beta1__ListDevicesRequest *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__ListDevicesResponse_Closure)
                 (const Kentik__Device__V202308beta1__ListDevicesResponse *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__GetDeviceRequest_Closure)
                 (const Kentik__Device__V202308beta1__GetDeviceRequest *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__GetDeviceResponse_Closure)
                 (const Kentik__Device__V202308beta1__GetDeviceResponse *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__CreateDeviceRequest_Closure)
                 (const Kentik__Device__V202308beta1__CreateDeviceRequest *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__CreateDeviceResponse_Closure)
                 (const Kentik__Device__V202308beta1__CreateDeviceResponse *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__CreateDevicesRequest_Closure)
                 (const Kentik__Device__V202308beta1__CreateDevicesRequest *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__CreateDevicesResponse_Closure)
                 (const Kentik__Device__V202308beta1__CreateDevicesResponse *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__UpdateDeviceRequest_Closure)
                 (const Kentik__Device__V202308beta1__UpdateDeviceRequest *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__UpdateDeviceResponse_Closure)
                 (const Kentik__Device__V202308beta1__UpdateDeviceResponse *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__UpdateDevicesRequest_Closure)
                 (const Kentik__Device__V202308beta1__UpdateDevicesRequest *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__UpdateDevicesResponse_Closure)
                 (const Kentik__Device__V202308beta1__UpdateDevicesResponse *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__UpdateDeviceLabelsRequest_Closure)
                 (const Kentik__Device__V202308beta1__UpdateDeviceLabelsRequest *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__UpdateDeviceLabelsResponse_Closure)
                 (const Kentik__Device__V202308beta1__UpdateDeviceLabelsResponse *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__DeleteDeviceRequest_Closure)
                 (const Kentik__Device__V202308beta1__DeleteDeviceRequest *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__DeleteDeviceResponse_Closure)
                 (const Kentik__Device__V202308beta1__DeleteDeviceResponse *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__DeleteDevicesRequest_Closure)
                 (const Kentik__Device__V202308beta1__DeleteDevicesRequest *message,
                  void *closure_data);
typedef void (*Kentik__Device__V202308beta1__DeleteDevicesResponse_Closure)
                 (const Kentik__Device__V202308beta1__DeleteDevicesResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Kentik__Device__V202308beta1__DeviceService_Service Kentik__Device__V202308beta1__DeviceService_Service;
struct Kentik__Device__V202308beta1__DeviceService_Service
{
  ProtobufCService base;
  void (*list_devices)(Kentik__Device__V202308beta1__DeviceService_Service *service,
                       const Kentik__Device__V202308beta1__ListDevicesRequest *input,
                       Kentik__Device__V202308beta1__ListDevicesResponse_Closure closure,
                       void *closure_data);
  void (*get_device)(Kentik__Device__V202308beta1__DeviceService_Service *service,
                     const Kentik__Device__V202308beta1__GetDeviceRequest *input,
                     Kentik__Device__V202308beta1__GetDeviceResponse_Closure closure,
                     void *closure_data);
  void (*create_device)(Kentik__Device__V202308beta1__DeviceService_Service *service,
                        const Kentik__Device__V202308beta1__CreateDeviceRequest *input,
                        Kentik__Device__V202308beta1__CreateDeviceResponse_Closure closure,
                        void *closure_data);
  void (*create_devices)(Kentik__Device__V202308beta1__DeviceService_Service *service,
                         const Kentik__Device__V202308beta1__CreateDevicesRequest *input,
                         Kentik__Device__V202308beta1__CreateDevicesResponse_Closure closure,
                         void *closure_data);
  void (*update_device)(Kentik__Device__V202308beta1__DeviceService_Service *service,
                        const Kentik__Device__V202308beta1__UpdateDeviceRequest *input,
                        Kentik__Device__V202308beta1__UpdateDeviceResponse_Closure closure,
                        void *closure_data);
  void (*update_devices)(Kentik__Device__V202308beta1__DeviceService_Service *service,
                         const Kentik__Device__V202308beta1__UpdateDevicesRequest *input,
                         Kentik__Device__V202308beta1__UpdateDevicesResponse_Closure closure,
                         void *closure_data);
  void (*update_device_labels)(Kentik__Device__V202308beta1__DeviceService_Service *service,
                               const Kentik__Device__V202308beta1__UpdateDeviceLabelsRequest *input,
                               Kentik__Device__V202308beta1__UpdateDeviceLabelsResponse_Closure closure,
                               void *closure_data);
  void (*delete_device)(Kentik__Device__V202308beta1__DeviceService_Service *service,
                        const Kentik__Device__V202308beta1__DeleteDeviceRequest *input,
                        Kentik__Device__V202308beta1__DeleteDeviceResponse_Closure closure,
                        void *closure_data);
  void (*delete_devices)(Kentik__Device__V202308beta1__DeviceService_Service *service,
                         const Kentik__Device__V202308beta1__DeleteDevicesRequest *input,
                         Kentik__Device__V202308beta1__DeleteDevicesResponse_Closure closure,
                         void *closure_data);
};
typedef void (*Kentik__Device__V202308beta1__DeviceService_ServiceDestroy)(Kentik__Device__V202308beta1__DeviceService_Service *);
void kentik__device__v202308beta1__device_service__init (Kentik__Device__V202308beta1__DeviceService_Service *service,
                                                         Kentik__Device__V202308beta1__DeviceService_ServiceDestroy destroy);
#define KENTIK__DEVICE__V202308BETA1__DEVICE_SERVICE__BASE_INIT \
    { &kentik__device__v202308beta1__device_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define KENTIK__DEVICE__V202308BETA1__DEVICE_SERVICE__INIT(function_prefix__) \
    { KENTIK__DEVICE__V202308BETA1__DEVICE_SERVICE__BASE_INIT,\
      function_prefix__ ## list_devices,\
      function_prefix__ ## get_device,\
      function_prefix__ ## create_device,\
      function_prefix__ ## create_devices,\
      function_prefix__ ## update_device,\
      function_prefix__ ## update_devices,\
      function_prefix__ ## update_device_labels,\
      function_prefix__ ## delete_device,\
      function_prefix__ ## delete_devices  }
void kentik__device__v202308beta1__device_service__list_devices(ProtobufCService *service,
                                                                const Kentik__Device__V202308beta1__ListDevicesRequest *input,
                                                                Kentik__Device__V202308beta1__ListDevicesResponse_Closure closure,
                                                                void *closure_data);
void kentik__device__v202308beta1__device_service__get_device(ProtobufCService *service,
                                                              const Kentik__Device__V202308beta1__GetDeviceRequest *input,
                                                              Kentik__Device__V202308beta1__GetDeviceResponse_Closure closure,
                                                              void *closure_data);
void kentik__device__v202308beta1__device_service__create_device(ProtobufCService *service,
                                                                 const Kentik__Device__V202308beta1__CreateDeviceRequest *input,
                                                                 Kentik__Device__V202308beta1__CreateDeviceResponse_Closure closure,
                                                                 void *closure_data);
void kentik__device__v202308beta1__device_service__create_devices(ProtobufCService *service,
                                                                  const Kentik__Device__V202308beta1__CreateDevicesRequest *input,
                                                                  Kentik__Device__V202308beta1__CreateDevicesResponse_Closure closure,
                                                                  void *closure_data);
void kentik__device__v202308beta1__device_service__update_device(ProtobufCService *service,
                                                                 const Kentik__Device__V202308beta1__UpdateDeviceRequest *input,
                                                                 Kentik__Device__V202308beta1__UpdateDeviceResponse_Closure closure,
                                                                 void *closure_data);
void kentik__device__v202308beta1__device_service__update_devices(ProtobufCService *service,
                                                                  const Kentik__Device__V202308beta1__UpdateDevicesRequest *input,
                                                                  Kentik__Device__V202308beta1__UpdateDevicesResponse_Closure closure,
                                                                  void *closure_data);
void kentik__device__v202308beta1__device_service__update_device_labels(ProtobufCService *service,
                                                                        const Kentik__Device__V202308beta1__UpdateDeviceLabelsRequest *input,
                                                                        Kentik__Device__V202308beta1__UpdateDeviceLabelsResponse_Closure closure,
                                                                        void *closure_data);
void kentik__device__v202308beta1__device_service__delete_device(ProtobufCService *service,
                                                                 const Kentik__Device__V202308beta1__DeleteDeviceRequest *input,
                                                                 Kentik__Device__V202308beta1__DeleteDeviceResponse_Closure closure,
                                                                 void *closure_data);
void kentik__device__v202308beta1__device_service__delete_devices(ProtobufCService *service,
                                                                  const Kentik__Device__V202308beta1__DeleteDevicesRequest *input,
                                                                  Kentik__Device__V202308beta1__DeleteDevicesResponse_Closure closure,
                                                                  void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__device_snmp_v3_conf__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__device_nms_config__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__device_nms_snmp_config__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__device_nms_st_config__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__device_concise__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__site__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__plan__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__label__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__interface__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__custom_column_data__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__gnmi_v1_conf__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__device_detailed__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__label_concise__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__list_devices_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__list_devices_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__get_device_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__get_device_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__create_device_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__create_device_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__create_devices_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__create_devices_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__update_device_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__update_device_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__update_devices_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__update_devices_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__update_device_labels_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__update_device_labels_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__delete_device_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__delete_device_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__delete_devices_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__device__v202308beta1__delete_devices_response__descriptor;
extern const ProtobufCServiceDescriptor kentik__device__v202308beta1__device_service__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_kentik_2fdevice_2fv202308beta1_2fdevice_2eproto__INCLUDED */
