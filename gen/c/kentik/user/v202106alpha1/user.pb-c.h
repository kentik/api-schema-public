/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: kentik/user/v202106alpha1/user.proto */

#ifndef PROTOBUF_C_kentik_2fuser_2fv202106alpha1_2fuser_2eproto__INCLUDED
#define PROTOBUF_C_kentik_2fuser_2fv202106alpha1_2fuser_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "google/api/annotations.pb-c.h"
#include "google/api/client.pb-c.h"
#include "google/protobuf/timestamp.pb-c.h"
#include "protoc-gen-openapiv2/options/annotations.pb-c.h"
#include "kentik/core/v202012alpha1/annotations.pb-c.h"

typedef struct _Kentik__User__V202106alpha1__User Kentik__User__V202106alpha1__User;
typedef struct _Kentik__User__V202106alpha1__ListUserRequest Kentik__User__V202106alpha1__ListUserRequest;
typedef struct _Kentik__User__V202106alpha1__ListUserResponse Kentik__User__V202106alpha1__ListUserResponse;
typedef struct _Kentik__User__V202106alpha1__GetUserRequest Kentik__User__V202106alpha1__GetUserRequest;
typedef struct _Kentik__User__V202106alpha1__GetUserResponse Kentik__User__V202106alpha1__GetUserResponse;
typedef struct _Kentik__User__V202106alpha1__CreateUserRequest Kentik__User__V202106alpha1__CreateUserRequest;
typedef struct _Kentik__User__V202106alpha1__CreateUserResponse Kentik__User__V202106alpha1__CreateUserResponse;
typedef struct _Kentik__User__V202106alpha1__UpdateUserRequest Kentik__User__V202106alpha1__UpdateUserRequest;
typedef struct _Kentik__User__V202106alpha1__UpdateUserResponse Kentik__User__V202106alpha1__UpdateUserResponse;
typedef struct _Kentik__User__V202106alpha1__DeleteUserRequest Kentik__User__V202106alpha1__DeleteUserRequest;
typedef struct _Kentik__User__V202106alpha1__DeleteUserResponse Kentik__User__V202106alpha1__DeleteUserResponse;


/* --- enums --- */

typedef enum _Kentik__User__V202106alpha1__Landing {
  KENTIK__USER__V202106ALPHA1__LANDING__LANDING_UNSPECIFIED = 0,
  KENTIK__USER__V202106ALPHA1__LANDING__LANDING_OBSERVATION_DECK = 1,
  KENTIK__USER__V202106ALPHA1__LANDING__LANDING_NETWORK_EXPLORER = 2,
  KENTIK__USER__V202106ALPHA1__LANDING__LANDING_LIBRARY = 3,
  KENTIK__USER__V202106ALPHA1__LANDING__LANDING_EXPLORER = 4,
  KENTIK__USER__V202106ALPHA1__LANDING__LANDING_ALERTING = 5,
  KENTIK__USER__V202106ALPHA1__LANDING__LANDING_SYNTHETICS = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__USER__V202106ALPHA1__LANDING)
} Kentik__User__V202106alpha1__Landing;
typedef enum _Kentik__User__V202106alpha1__Role {
  KENTIK__USER__V202106ALPHA1__ROLE__ROLE_UNSPECIFIED = 0,
  KENTIK__USER__V202106ALPHA1__ROLE__ROLE_MEMBER = 1,
  KENTIK__USER__V202106ALPHA1__ROLE__ROLE_ADMINISTRATOR = 2,
  KENTIK__USER__V202106ALPHA1__ROLE__ROLE_SUPER_ADMINISTRATOR = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__USER__V202106ALPHA1__ROLE)
} Kentik__User__V202106alpha1__Role;

/* --- messages --- */

struct  _Kentik__User__V202106alpha1__User
{
  ProtobufCMessage base;
  char *id;
  char *user_email;
  char *username;
  char *user_full_name;
  Kentik__User__V202106alpha1__Role role;
  Google__Protobuf__Timestamp *last_login;
  Google__Protobuf__Timestamp *created_date;
  Google__Protobuf__Timestamp *updated_date;
};
#define KENTIK__USER__V202106ALPHA1__USER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__user__v202106alpha1__user__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, KENTIK__USER__V202106ALPHA1__ROLE__ROLE_UNSPECIFIED, NULL, NULL, NULL }


struct  _Kentik__User__V202106alpha1__ListUserRequest
{
  ProtobufCMessage base;
};
#define KENTIK__USER__V202106ALPHA1__LIST_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__user__v202106alpha1__list_user_request__descriptor) \
     }


struct  _Kentik__User__V202106alpha1__ListUserResponse
{
  ProtobufCMessage base;
  size_t n_users;
  Kentik__User__V202106alpha1__User **users;
  uint32_t invalid_count;
};
#define KENTIK__USER__V202106ALPHA1__LIST_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__user__v202106alpha1__list_user_response__descriptor) \
    , 0,NULL, 0 }


struct  _Kentik__User__V202106alpha1__GetUserRequest
{
  ProtobufCMessage base;
  char *id;
};
#define KENTIK__USER__V202106ALPHA1__GET_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__user__v202106alpha1__get_user_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Kentik__User__V202106alpha1__GetUserResponse
{
  ProtobufCMessage base;
  Kentik__User__V202106alpha1__User *user;
};
#define KENTIK__USER__V202106ALPHA1__GET_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__user__v202106alpha1__get_user_response__descriptor) \
    , NULL }


struct  _Kentik__User__V202106alpha1__CreateUserRequest
{
  ProtobufCMessage base;
  Kentik__User__V202106alpha1__User *user;
};
#define KENTIK__USER__V202106ALPHA1__CREATE_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__user__v202106alpha1__create_user_request__descriptor) \
    , NULL }


struct  _Kentik__User__V202106alpha1__CreateUserResponse
{
  ProtobufCMessage base;
  Kentik__User__V202106alpha1__User *user;
};
#define KENTIK__USER__V202106ALPHA1__CREATE_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__user__v202106alpha1__create_user_response__descriptor) \
    , NULL }


struct  _Kentik__User__V202106alpha1__UpdateUserRequest
{
  ProtobufCMessage base;
  Kentik__User__V202106alpha1__User *user;
};
#define KENTIK__USER__V202106ALPHA1__UPDATE_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__user__v202106alpha1__update_user_request__descriptor) \
    , NULL }


struct  _Kentik__User__V202106alpha1__UpdateUserResponse
{
  ProtobufCMessage base;
  Kentik__User__V202106alpha1__User *user;
};
#define KENTIK__USER__V202106ALPHA1__UPDATE_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__user__v202106alpha1__update_user_response__descriptor) \
    , NULL }


struct  _Kentik__User__V202106alpha1__DeleteUserRequest
{
  ProtobufCMessage base;
  char *id;
};
#define KENTIK__USER__V202106ALPHA1__DELETE_USER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__user__v202106alpha1__delete_user_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Kentik__User__V202106alpha1__DeleteUserResponse
{
  ProtobufCMessage base;
};
#define KENTIK__USER__V202106ALPHA1__DELETE_USER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__user__v202106alpha1__delete_user_response__descriptor) \
     }


/* Kentik__User__V202106alpha1__User methods */
void   kentik__user__v202106alpha1__user__init
                     (Kentik__User__V202106alpha1__User         *message);
size_t kentik__user__v202106alpha1__user__get_packed_size
                     (const Kentik__User__V202106alpha1__User   *message);
size_t kentik__user__v202106alpha1__user__pack
                     (const Kentik__User__V202106alpha1__User   *message,
                      uint8_t             *out);
size_t kentik__user__v202106alpha1__user__pack_to_buffer
                     (const Kentik__User__V202106alpha1__User   *message,
                      ProtobufCBuffer     *buffer);
Kentik__User__V202106alpha1__User *
       kentik__user__v202106alpha1__user__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__user__v202106alpha1__user__free_unpacked
                     (Kentik__User__V202106alpha1__User *message,
                      ProtobufCAllocator *allocator);
/* Kentik__User__V202106alpha1__ListUserRequest methods */
void   kentik__user__v202106alpha1__list_user_request__init
                     (Kentik__User__V202106alpha1__ListUserRequest         *message);
size_t kentik__user__v202106alpha1__list_user_request__get_packed_size
                     (const Kentik__User__V202106alpha1__ListUserRequest   *message);
size_t kentik__user__v202106alpha1__list_user_request__pack
                     (const Kentik__User__V202106alpha1__ListUserRequest   *message,
                      uint8_t             *out);
size_t kentik__user__v202106alpha1__list_user_request__pack_to_buffer
                     (const Kentik__User__V202106alpha1__ListUserRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__User__V202106alpha1__ListUserRequest *
       kentik__user__v202106alpha1__list_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__user__v202106alpha1__list_user_request__free_unpacked
                     (Kentik__User__V202106alpha1__ListUserRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__User__V202106alpha1__ListUserResponse methods */
void   kentik__user__v202106alpha1__list_user_response__init
                     (Kentik__User__V202106alpha1__ListUserResponse         *message);
size_t kentik__user__v202106alpha1__list_user_response__get_packed_size
                     (const Kentik__User__V202106alpha1__ListUserResponse   *message);
size_t kentik__user__v202106alpha1__list_user_response__pack
                     (const Kentik__User__V202106alpha1__ListUserResponse   *message,
                      uint8_t             *out);
size_t kentik__user__v202106alpha1__list_user_response__pack_to_buffer
                     (const Kentik__User__V202106alpha1__ListUserResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__User__V202106alpha1__ListUserResponse *
       kentik__user__v202106alpha1__list_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__user__v202106alpha1__list_user_response__free_unpacked
                     (Kentik__User__V202106alpha1__ListUserResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__User__V202106alpha1__GetUserRequest methods */
void   kentik__user__v202106alpha1__get_user_request__init
                     (Kentik__User__V202106alpha1__GetUserRequest         *message);
size_t kentik__user__v202106alpha1__get_user_request__get_packed_size
                     (const Kentik__User__V202106alpha1__GetUserRequest   *message);
size_t kentik__user__v202106alpha1__get_user_request__pack
                     (const Kentik__User__V202106alpha1__GetUserRequest   *message,
                      uint8_t             *out);
size_t kentik__user__v202106alpha1__get_user_request__pack_to_buffer
                     (const Kentik__User__V202106alpha1__GetUserRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__User__V202106alpha1__GetUserRequest *
       kentik__user__v202106alpha1__get_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__user__v202106alpha1__get_user_request__free_unpacked
                     (Kentik__User__V202106alpha1__GetUserRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__User__V202106alpha1__GetUserResponse methods */
void   kentik__user__v202106alpha1__get_user_response__init
                     (Kentik__User__V202106alpha1__GetUserResponse         *message);
size_t kentik__user__v202106alpha1__get_user_response__get_packed_size
                     (const Kentik__User__V202106alpha1__GetUserResponse   *message);
size_t kentik__user__v202106alpha1__get_user_response__pack
                     (const Kentik__User__V202106alpha1__GetUserResponse   *message,
                      uint8_t             *out);
size_t kentik__user__v202106alpha1__get_user_response__pack_to_buffer
                     (const Kentik__User__V202106alpha1__GetUserResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__User__V202106alpha1__GetUserResponse *
       kentik__user__v202106alpha1__get_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__user__v202106alpha1__get_user_response__free_unpacked
                     (Kentik__User__V202106alpha1__GetUserResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__User__V202106alpha1__CreateUserRequest methods */
void   kentik__user__v202106alpha1__create_user_request__init
                     (Kentik__User__V202106alpha1__CreateUserRequest         *message);
size_t kentik__user__v202106alpha1__create_user_request__get_packed_size
                     (const Kentik__User__V202106alpha1__CreateUserRequest   *message);
size_t kentik__user__v202106alpha1__create_user_request__pack
                     (const Kentik__User__V202106alpha1__CreateUserRequest   *message,
                      uint8_t             *out);
size_t kentik__user__v202106alpha1__create_user_request__pack_to_buffer
                     (const Kentik__User__V202106alpha1__CreateUserRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__User__V202106alpha1__CreateUserRequest *
       kentik__user__v202106alpha1__create_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__user__v202106alpha1__create_user_request__free_unpacked
                     (Kentik__User__V202106alpha1__CreateUserRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__User__V202106alpha1__CreateUserResponse methods */
void   kentik__user__v202106alpha1__create_user_response__init
                     (Kentik__User__V202106alpha1__CreateUserResponse         *message);
size_t kentik__user__v202106alpha1__create_user_response__get_packed_size
                     (const Kentik__User__V202106alpha1__CreateUserResponse   *message);
size_t kentik__user__v202106alpha1__create_user_response__pack
                     (const Kentik__User__V202106alpha1__CreateUserResponse   *message,
                      uint8_t             *out);
size_t kentik__user__v202106alpha1__create_user_response__pack_to_buffer
                     (const Kentik__User__V202106alpha1__CreateUserResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__User__V202106alpha1__CreateUserResponse *
       kentik__user__v202106alpha1__create_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__user__v202106alpha1__create_user_response__free_unpacked
                     (Kentik__User__V202106alpha1__CreateUserResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__User__V202106alpha1__UpdateUserRequest methods */
void   kentik__user__v202106alpha1__update_user_request__init
                     (Kentik__User__V202106alpha1__UpdateUserRequest         *message);
size_t kentik__user__v202106alpha1__update_user_request__get_packed_size
                     (const Kentik__User__V202106alpha1__UpdateUserRequest   *message);
size_t kentik__user__v202106alpha1__update_user_request__pack
                     (const Kentik__User__V202106alpha1__UpdateUserRequest   *message,
                      uint8_t             *out);
size_t kentik__user__v202106alpha1__update_user_request__pack_to_buffer
                     (const Kentik__User__V202106alpha1__UpdateUserRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__User__V202106alpha1__UpdateUserRequest *
       kentik__user__v202106alpha1__update_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__user__v202106alpha1__update_user_request__free_unpacked
                     (Kentik__User__V202106alpha1__UpdateUserRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__User__V202106alpha1__UpdateUserResponse methods */
void   kentik__user__v202106alpha1__update_user_response__init
                     (Kentik__User__V202106alpha1__UpdateUserResponse         *message);
size_t kentik__user__v202106alpha1__update_user_response__get_packed_size
                     (const Kentik__User__V202106alpha1__UpdateUserResponse   *message);
size_t kentik__user__v202106alpha1__update_user_response__pack
                     (const Kentik__User__V202106alpha1__UpdateUserResponse   *message,
                      uint8_t             *out);
size_t kentik__user__v202106alpha1__update_user_response__pack_to_buffer
                     (const Kentik__User__V202106alpha1__UpdateUserResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__User__V202106alpha1__UpdateUserResponse *
       kentik__user__v202106alpha1__update_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__user__v202106alpha1__update_user_response__free_unpacked
                     (Kentik__User__V202106alpha1__UpdateUserResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__User__V202106alpha1__DeleteUserRequest methods */
void   kentik__user__v202106alpha1__delete_user_request__init
                     (Kentik__User__V202106alpha1__DeleteUserRequest         *message);
size_t kentik__user__v202106alpha1__delete_user_request__get_packed_size
                     (const Kentik__User__V202106alpha1__DeleteUserRequest   *message);
size_t kentik__user__v202106alpha1__delete_user_request__pack
                     (const Kentik__User__V202106alpha1__DeleteUserRequest   *message,
                      uint8_t             *out);
size_t kentik__user__v202106alpha1__delete_user_request__pack_to_buffer
                     (const Kentik__User__V202106alpha1__DeleteUserRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__User__V202106alpha1__DeleteUserRequest *
       kentik__user__v202106alpha1__delete_user_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__user__v202106alpha1__delete_user_request__free_unpacked
                     (Kentik__User__V202106alpha1__DeleteUserRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__User__V202106alpha1__DeleteUserResponse methods */
void   kentik__user__v202106alpha1__delete_user_response__init
                     (Kentik__User__V202106alpha1__DeleteUserResponse         *message);
size_t kentik__user__v202106alpha1__delete_user_response__get_packed_size
                     (const Kentik__User__V202106alpha1__DeleteUserResponse   *message);
size_t kentik__user__v202106alpha1__delete_user_response__pack
                     (const Kentik__User__V202106alpha1__DeleteUserResponse   *message,
                      uint8_t             *out);
size_t kentik__user__v202106alpha1__delete_user_response__pack_to_buffer
                     (const Kentik__User__V202106alpha1__DeleteUserResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__User__V202106alpha1__DeleteUserResponse *
       kentik__user__v202106alpha1__delete_user_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__user__v202106alpha1__delete_user_response__free_unpacked
                     (Kentik__User__V202106alpha1__DeleteUserResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Kentik__User__V202106alpha1__User_Closure)
                 (const Kentik__User__V202106alpha1__User *message,
                  void *closure_data);
typedef void (*Kentik__User__V202106alpha1__ListUserRequest_Closure)
                 (const Kentik__User__V202106alpha1__ListUserRequest *message,
                  void *closure_data);
typedef void (*Kentik__User__V202106alpha1__ListUserResponse_Closure)
                 (const Kentik__User__V202106alpha1__ListUserResponse *message,
                  void *closure_data);
typedef void (*Kentik__User__V202106alpha1__GetUserRequest_Closure)
                 (const Kentik__User__V202106alpha1__GetUserRequest *message,
                  void *closure_data);
typedef void (*Kentik__User__V202106alpha1__GetUserResponse_Closure)
                 (const Kentik__User__V202106alpha1__GetUserResponse *message,
                  void *closure_data);
typedef void (*Kentik__User__V202106alpha1__CreateUserRequest_Closure)
                 (const Kentik__User__V202106alpha1__CreateUserRequest *message,
                  void *closure_data);
typedef void (*Kentik__User__V202106alpha1__CreateUserResponse_Closure)
                 (const Kentik__User__V202106alpha1__CreateUserResponse *message,
                  void *closure_data);
typedef void (*Kentik__User__V202106alpha1__UpdateUserRequest_Closure)
                 (const Kentik__User__V202106alpha1__UpdateUserRequest *message,
                  void *closure_data);
typedef void (*Kentik__User__V202106alpha1__UpdateUserResponse_Closure)
                 (const Kentik__User__V202106alpha1__UpdateUserResponse *message,
                  void *closure_data);
typedef void (*Kentik__User__V202106alpha1__DeleteUserRequest_Closure)
                 (const Kentik__User__V202106alpha1__DeleteUserRequest *message,
                  void *closure_data);
typedef void (*Kentik__User__V202106alpha1__DeleteUserResponse_Closure)
                 (const Kentik__User__V202106alpha1__DeleteUserResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct _Kentik__User__V202106alpha1__UserService_Service Kentik__User__V202106alpha1__UserService_Service;
struct _Kentik__User__V202106alpha1__UserService_Service
{
  ProtobufCService base;
  void (*list_user)(Kentik__User__V202106alpha1__UserService_Service *service,
                    const Kentik__User__V202106alpha1__ListUserRequest *input,
                    Kentik__User__V202106alpha1__ListUserResponse_Closure closure,
                    void *closure_data);
  void (*get_user)(Kentik__User__V202106alpha1__UserService_Service *service,
                   const Kentik__User__V202106alpha1__GetUserRequest *input,
                   Kentik__User__V202106alpha1__GetUserResponse_Closure closure,
                   void *closure_data);
  void (*create_user)(Kentik__User__V202106alpha1__UserService_Service *service,
                      const Kentik__User__V202106alpha1__CreateUserRequest *input,
                      Kentik__User__V202106alpha1__CreateUserResponse_Closure closure,
                      void *closure_data);
  void (*update_user)(Kentik__User__V202106alpha1__UserService_Service *service,
                      const Kentik__User__V202106alpha1__UpdateUserRequest *input,
                      Kentik__User__V202106alpha1__UpdateUserResponse_Closure closure,
                      void *closure_data);
  void (*delete_user)(Kentik__User__V202106alpha1__UserService_Service *service,
                      const Kentik__User__V202106alpha1__DeleteUserRequest *input,
                      Kentik__User__V202106alpha1__DeleteUserResponse_Closure closure,
                      void *closure_data);
};
typedef void (*Kentik__User__V202106alpha1__UserService_ServiceDestroy)(Kentik__User__V202106alpha1__UserService_Service *);
void kentik__user__v202106alpha1__user_service__init (Kentik__User__V202106alpha1__UserService_Service *service,
                                                      Kentik__User__V202106alpha1__UserService_ServiceDestroy destroy);
#define KENTIK__USER__V202106ALPHA1__USER_SERVICE__BASE_INIT \
    { &kentik__user__v202106alpha1__user_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define KENTIK__USER__V202106ALPHA1__USER_SERVICE__INIT(function_prefix__) \
    { KENTIK__USER__V202106ALPHA1__USER_SERVICE__BASE_INIT,\
      function_prefix__ ## list_user,\
      function_prefix__ ## get_user,\
      function_prefix__ ## create_user,\
      function_prefix__ ## update_user,\
      function_prefix__ ## delete_user  }
void kentik__user__v202106alpha1__user_service__list_user(ProtobufCService *service,
                                                          const Kentik__User__V202106alpha1__ListUserRequest *input,
                                                          Kentik__User__V202106alpha1__ListUserResponse_Closure closure,
                                                          void *closure_data);
void kentik__user__v202106alpha1__user_service__get_user(ProtobufCService *service,
                                                         const Kentik__User__V202106alpha1__GetUserRequest *input,
                                                         Kentik__User__V202106alpha1__GetUserResponse_Closure closure,
                                                         void *closure_data);
void kentik__user__v202106alpha1__user_service__create_user(ProtobufCService *service,
                                                            const Kentik__User__V202106alpha1__CreateUserRequest *input,
                                                            Kentik__User__V202106alpha1__CreateUserResponse_Closure closure,
                                                            void *closure_data);
void kentik__user__v202106alpha1__user_service__update_user(ProtobufCService *service,
                                                            const Kentik__User__V202106alpha1__UpdateUserRequest *input,
                                                            Kentik__User__V202106alpha1__UpdateUserResponse_Closure closure,
                                                            void *closure_data);
void kentik__user__v202106alpha1__user_service__delete_user(ProtobufCService *service,
                                                            const Kentik__User__V202106alpha1__DeleteUserRequest *input,
                                                            Kentik__User__V202106alpha1__DeleteUserResponse_Closure closure,
                                                            void *closure_data);

/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    kentik__user__v202106alpha1__landing__descriptor;
extern const ProtobufCEnumDescriptor    kentik__user__v202106alpha1__role__descriptor;
extern const ProtobufCMessageDescriptor kentik__user__v202106alpha1__user__descriptor;
extern const ProtobufCMessageDescriptor kentik__user__v202106alpha1__list_user_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__user__v202106alpha1__list_user_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__user__v202106alpha1__get_user_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__user__v202106alpha1__get_user_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__user__v202106alpha1__create_user_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__user__v202106alpha1__create_user_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__user__v202106alpha1__update_user_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__user__v202106alpha1__update_user_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__user__v202106alpha1__delete_user_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__user__v202106alpha1__delete_user_response__descriptor;
extern const ProtobufCServiceDescriptor kentik__user__v202106alpha1__user_service__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_kentik_2fuser_2fv202106alpha1_2fuser_2eproto__INCLUDED */
