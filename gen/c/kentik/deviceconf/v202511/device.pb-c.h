/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: kentik/deviceconf/v202511/device.proto */

#ifndef PROTOBUF_C_kentik_2fdeviceconf_2fv202511_2fdevice_2eproto__INCLUDED
#define PROTOBUF_C_kentik_2fdeviceconf_2fv202511_2fdevice_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "google/protobuf/duration.pb-c.h"

typedef struct Kentik__Deviceconf__V202511__DeviceSSHCreds Kentik__Deviceconf__V202511__DeviceSSHCreds;
typedef struct Kentik__Deviceconf__V202511__FetchParameters Kentik__Deviceconf__V202511__FetchParameters;
typedef struct Kentik__Deviceconf__V202511__Device Kentik__Deviceconf__V202511__Device;


/* --- enums --- */

typedef enum _Kentik__Deviceconf__V202511__DevicePlatform {
  KENTIK__DEVICECONF__V202511__DEVICE_PLATFORM__DEVICE_PLATFORM_UNSPECIFIED = 0,
  KENTIK__DEVICECONF__V202511__DEVICE_PLATFORM__DEVICE_PLATFORM_ARISTA_EOS = 1,
  KENTIK__DEVICECONF__V202511__DEVICE_PLATFORM__DEVICE_PLATFORM_ARUBA_WLC = 2,
  KENTIK__DEVICECONF__V202511__DEVICE_PLATFORM__DEVICE_PLATFORM_CISCO_IOSXE = 3,
  KENTIK__DEVICECONF__V202511__DEVICE_PLATFORM__DEVICE_PLATFORM_CISCO_IOSXR = 4,
  KENTIK__DEVICECONF__V202511__DEVICE_PLATFORM__DEVICE_PLATFORM_CISCO_NXOS = 5,
  KENTIK__DEVICECONF__V202511__DEVICE_PLATFORM__DEVICE_PLATFORM_CISCO_IOS = 6,
  KENTIK__DEVICECONF__V202511__DEVICE_PLATFORM__DEVICE_PLATFORM_CUMULUS_LINUX = 7,
  KENTIK__DEVICECONF__V202511__DEVICE_PLATFORM__DEVICE_PLATFORM_CUMULUS_VTYSH = 8,
  KENTIK__DEVICECONF__V202511__DEVICE_PLATFORM__DEVICE_PLATFORM_HP_COMWARE = 9,
  KENTIK__DEVICECONF__V202511__DEVICE_PLATFORM__DEVICE_PLATFORM_HUAWEI_VRP = 10,
  KENTIK__DEVICECONF__V202511__DEVICE_PLATFORM__DEVICE_PLATFORM_IPINFUSION_OCNOS = 11,
  KENTIK__DEVICECONF__V202511__DEVICE_PLATFORM__DEVICE_PLATFORM_JUNIPER_JUNOS = 12,
  KENTIK__DEVICECONF__V202511__DEVICE_PLATFORM__DEVICE_PLATFORM_NOKIA_SRL = 13,
  KENTIK__DEVICECONF__V202511__DEVICE_PLATFORM__DEVICE_PLATFORM_NOKIA_SROS = 14,
  KENTIK__DEVICECONF__V202511__DEVICE_PLATFORM__DEVICE_PLATFORM_NOKIA_SROS_CLASSIC = 15,
  KENTIK__DEVICECONF__V202511__DEVICE_PLATFORM__DEVICE_PLATFORM_PALOALTO_PANOS = 16,
  KENTIK__DEVICECONF__V202511__DEVICE_PLATFORM__DEVICE_PLATFORM_RUIJIE_RGOS = 17,
  KENTIK__DEVICECONF__V202511__DEVICE_PLATFORM__DEVICE_PLATFORM_VYATTA_VYOS = 18
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__DEVICECONF__V202511__DEVICE_PLATFORM)
} Kentik__Deviceconf__V202511__DevicePlatform;

/* --- messages --- */

struct  Kentik__Deviceconf__V202511__DeviceSSHCreds
{
  ProtobufCMessage base;
  char *username;
  char *private_key;
  /*
   * used as password if private_key is empty
   */
  char *passphrase;
};
#define KENTIK__DEVICECONF__V202511__DEVICE_SSHCREDS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__deviceconf__v202511__device_sshcreds__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  Kentik__Deviceconf__V202511__FetchParameters
{
  ProtobufCMessage base;
  Google__Protobuf__Duration *fetch_interval;
};
#define KENTIK__DEVICECONF__V202511__FETCH_PARAMETERS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__deviceconf__v202511__fetch_parameters__descriptor) \
    , NULL }


struct  Kentik__Deviceconf__V202511__Device
{
  ProtobufCMessage base;
  char *id;
  char *name;
  /*
   * or IP address
   */
  char *hostname;
  Kentik__Deviceconf__V202511__DevicePlatform platform;
  Kentik__Deviceconf__V202511__DeviceSSHCreds *ssh_creds;
  Kentik__Deviceconf__V202511__FetchParameters *fetch_params;
};
#define KENTIK__DEVICECONF__V202511__DEVICE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__deviceconf__v202511__device__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, KENTIK__DEVICECONF__V202511__DEVICE_PLATFORM__DEVICE_PLATFORM_UNSPECIFIED, NULL, NULL }


/* Kentik__Deviceconf__V202511__DeviceSSHCreds methods */
void   kentik__deviceconf__v202511__device_sshcreds__init
                     (Kentik__Deviceconf__V202511__DeviceSSHCreds         *message);
size_t kentik__deviceconf__v202511__device_sshcreds__get_packed_size
                     (const Kentik__Deviceconf__V202511__DeviceSSHCreds   *message);
size_t kentik__deviceconf__v202511__device_sshcreds__pack
                     (const Kentik__Deviceconf__V202511__DeviceSSHCreds   *message,
                      uint8_t             *out);
size_t kentik__deviceconf__v202511__device_sshcreds__pack_to_buffer
                     (const Kentik__Deviceconf__V202511__DeviceSSHCreds   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Deviceconf__V202511__DeviceSSHCreds *
       kentik__deviceconf__v202511__device_sshcreds__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__deviceconf__v202511__device_sshcreds__free_unpacked
                     (Kentik__Deviceconf__V202511__DeviceSSHCreds *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Deviceconf__V202511__FetchParameters methods */
void   kentik__deviceconf__v202511__fetch_parameters__init
                     (Kentik__Deviceconf__V202511__FetchParameters         *message);
size_t kentik__deviceconf__v202511__fetch_parameters__get_packed_size
                     (const Kentik__Deviceconf__V202511__FetchParameters   *message);
size_t kentik__deviceconf__v202511__fetch_parameters__pack
                     (const Kentik__Deviceconf__V202511__FetchParameters   *message,
                      uint8_t             *out);
size_t kentik__deviceconf__v202511__fetch_parameters__pack_to_buffer
                     (const Kentik__Deviceconf__V202511__FetchParameters   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Deviceconf__V202511__FetchParameters *
       kentik__deviceconf__v202511__fetch_parameters__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__deviceconf__v202511__fetch_parameters__free_unpacked
                     (Kentik__Deviceconf__V202511__FetchParameters *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Deviceconf__V202511__Device methods */
void   kentik__deviceconf__v202511__device__init
                     (Kentik__Deviceconf__V202511__Device         *message);
size_t kentik__deviceconf__v202511__device__get_packed_size
                     (const Kentik__Deviceconf__V202511__Device   *message);
size_t kentik__deviceconf__v202511__device__pack
                     (const Kentik__Deviceconf__V202511__Device   *message,
                      uint8_t             *out);
size_t kentik__deviceconf__v202511__device__pack_to_buffer
                     (const Kentik__Deviceconf__V202511__Device   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Deviceconf__V202511__Device *
       kentik__deviceconf__v202511__device__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__deviceconf__v202511__device__free_unpacked
                     (Kentik__Deviceconf__V202511__Device *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Kentik__Deviceconf__V202511__DeviceSSHCreds_Closure)
                 (const Kentik__Deviceconf__V202511__DeviceSSHCreds *message,
                  void *closure_data);
typedef void (*Kentik__Deviceconf__V202511__FetchParameters_Closure)
                 (const Kentik__Deviceconf__V202511__FetchParameters *message,
                  void *closure_data);
typedef void (*Kentik__Deviceconf__V202511__Device_Closure)
                 (const Kentik__Deviceconf__V202511__Device *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    kentik__deviceconf__v202511__device_platform__descriptor;
extern const ProtobufCMessageDescriptor kentik__deviceconf__v202511__device_sshcreds__descriptor;
extern const ProtobufCMessageDescriptor kentik__deviceconf__v202511__fetch_parameters__descriptor;
extern const ProtobufCMessageDescriptor kentik__deviceconf__v202511__device__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_kentik_2fdeviceconf_2fv202511_2fdevice_2eproto__INCLUDED */
