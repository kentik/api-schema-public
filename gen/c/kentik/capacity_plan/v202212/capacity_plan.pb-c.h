/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: kentik/capacity_plan/v202212/capacity_plan.proto */

#ifndef PROTOBUF_C_kentik_2fcapacity_5fplan_2fv202212_2fcapacity_5fplan_2eproto__INCLUDED
#define PROTOBUF_C_kentik_2fcapacity_5fplan_2fv202212_2fcapacity_5fplan_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "google/api/annotations.pb-c.h"
#include "google/api/client.pb-c.h"
#include "google/api/field_behavior.pb-c.h"
#include "protoc-gen-openapiv2/options/annotations.pb-c.h"
#include "kentik/core/v202012alpha1/annotations.pb-c.h"

typedef struct _Kentik__CapacityPlan__V202212__Config Kentik__CapacityPlan__V202212__Config;
typedef struct _Kentik__CapacityPlan__V202212__Config__RunoutConfig Kentik__CapacityPlan__V202212__Config__RunoutConfig;
typedef struct _Kentik__CapacityPlan__V202212__Config__UtilConfig Kentik__CapacityPlan__V202212__Config__UtilConfig;
typedef struct _Kentik__CapacityPlan__V202212__SummaryStatus Kentik__CapacityPlan__V202212__SummaryStatus;
typedef struct _Kentik__CapacityPlan__V202212__SummaryStatus__RunoutStatus Kentik__CapacityPlan__V202212__SummaryStatus__RunoutStatus;
typedef struct _Kentik__CapacityPlan__V202212__SummaryStatus__UtilStatus Kentik__CapacityPlan__V202212__SummaryStatus__UtilStatus;
typedef struct _Kentik__CapacityPlan__V202212__CapacitySummary Kentik__CapacityPlan__V202212__CapacitySummary;
typedef struct _Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail;
typedef struct _Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail__StatusDetail Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail__StatusDetail;
typedef struct _Kentik__CapacityPlan__V202212__CapacityPlan Kentik__CapacityPlan__V202212__CapacityPlan;
typedef struct _Kentik__CapacityPlan__V202212__CapacityPlan__InterfaceDetail Kentik__CapacityPlan__V202212__CapacityPlan__InterfaceDetail;
typedef struct _Kentik__CapacityPlan__V202212__ListCapacitySummariesRequest Kentik__CapacityPlan__V202212__ListCapacitySummariesRequest;
typedef struct _Kentik__CapacityPlan__V202212__ListCapacitySummariesResponse Kentik__CapacityPlan__V202212__ListCapacitySummariesResponse;
typedef struct _Kentik__CapacityPlan__V202212__GetCapacitySummaryRequest Kentik__CapacityPlan__V202212__GetCapacitySummaryRequest;
typedef struct _Kentik__CapacityPlan__V202212__GetCapacitySummaryResponse Kentik__CapacityPlan__V202212__GetCapacitySummaryResponse;
typedef struct _Kentik__CapacityPlan__V202212__ListCapacityPlansRequest Kentik__CapacityPlan__V202212__ListCapacityPlansRequest;
typedef struct _Kentik__CapacityPlan__V202212__ListCapacityPlansResponse Kentik__CapacityPlan__V202212__ListCapacityPlansResponse;
typedef struct _Kentik__CapacityPlan__V202212__GetCapacityPlanRequest Kentik__CapacityPlan__V202212__GetCapacityPlanRequest;
typedef struct _Kentik__CapacityPlan__V202212__GetCapacityPlanResponse Kentik__CapacityPlan__V202212__GetCapacityPlanResponse;


/* --- enums --- */


/* --- messages --- */

typedef enum {
  KENTIK__CAPACITY_PLAN__V202212__CONFIG__RUNOUT_CONFIG___WARN_QTY__NOT_SET = 0,
  KENTIK__CAPACITY_PLAN__V202212__CONFIG__RUNOUT_CONFIG___WARN_QTY_WARN_QTY = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__CAPACITY_PLAN__V202212__CONFIG__RUNOUT_CONFIG___WARN_QTY)
} Kentik__CapacityPlan__V202212__Config__RunoutConfig__WarnQtyCase;

typedef enum {
  KENTIK__CAPACITY_PLAN__V202212__CONFIG__RUNOUT_CONFIG___CRIT_QTY__NOT_SET = 0,
  KENTIK__CAPACITY_PLAN__V202212__CONFIG__RUNOUT_CONFIG___CRIT_QTY_CRIT_QTY = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__CAPACITY_PLAN__V202212__CONFIG__RUNOUT_CONFIG___CRIT_QTY)
} Kentik__CapacityPlan__V202212__Config__RunoutConfig__CritQtyCase;

/*
 * {{.Name}}
 */
struct  _Kentik__CapacityPlan__V202212__Config__RunoutConfig
{
  ProtobufCMessage base;
  char *strategy;
  Kentik__CapacityPlan__V202212__Config__RunoutConfig__WarnQtyCase _warn_qty_case;
  union {
    uint32_t warn_qty;
  };
  Kentik__CapacityPlan__V202212__Config__RunoutConfig__CritQtyCase _crit_qty_case;
  union {
    uint32_t crit_qty;
  };
};
#define KENTIK__CAPACITY_PLAN__V202212__CONFIG__RUNOUT_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__capacity_plan__v202212__config__runout_config__descriptor) \
    , (char *)protobuf_c_empty_string, KENTIK__CAPACITY_PLAN__V202212__CONFIG__RUNOUT_CONFIG___WARN_QTY__NOT_SET, {0}, KENTIK__CAPACITY_PLAN__V202212__CONFIG__RUNOUT_CONFIG___CRIT_QTY__NOT_SET, {0} }


typedef enum {
  KENTIK__CAPACITY_PLAN__V202212__CONFIG__UTIL_CONFIG___WARN_PCT__NOT_SET = 0,
  KENTIK__CAPACITY_PLAN__V202212__CONFIG__UTIL_CONFIG___WARN_PCT_WARN_PCT = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__CAPACITY_PLAN__V202212__CONFIG__UTIL_CONFIG___WARN_PCT)
} Kentik__CapacityPlan__V202212__Config__UtilConfig__WarnPctCase;

typedef enum {
  KENTIK__CAPACITY_PLAN__V202212__CONFIG__UTIL_CONFIG___CRIT_PCT__NOT_SET = 0,
  KENTIK__CAPACITY_PLAN__V202212__CONFIG__UTIL_CONFIG___CRIT_PCT_CRIT_PCT = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__CAPACITY_PLAN__V202212__CONFIG__UTIL_CONFIG___CRIT_PCT)
} Kentik__CapacityPlan__V202212__Config__UtilConfig__CritPctCase;

/*
 * {{.Name}}
 */
struct  _Kentik__CapacityPlan__V202212__Config__UtilConfig
{
  ProtobufCMessage base;
  char *aggregate;
  Kentik__CapacityPlan__V202212__Config__UtilConfig__WarnPctCase _warn_pct_case;
  union {
    uint32_t warn_pct;
  };
  Kentik__CapacityPlan__V202212__Config__UtilConfig__CritPctCase _crit_pct_case;
  union {
    uint32_t crit_pct;
  };
};
#define KENTIK__CAPACITY_PLAN__V202212__CONFIG__UTIL_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__capacity_plan__v202212__config__util_config__descriptor) \
    , (char *)protobuf_c_empty_string, KENTIK__CAPACITY_PLAN__V202212__CONFIG__UTIL_CONFIG___WARN_PCT__NOT_SET, {0}, KENTIK__CAPACITY_PLAN__V202212__CONFIG__UTIL_CONFIG___CRIT_PCT__NOT_SET, {0} }


/*
 * {{.Name}}
 */
struct  _Kentik__CapacityPlan__V202212__Config
{
  ProtobufCMessage base;
  Kentik__CapacityPlan__V202212__Config__RunoutConfig *runout;
  Kentik__CapacityPlan__V202212__Config__UtilConfig *utilization;
};
#define KENTIK__CAPACITY_PLAN__V202212__CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__capacity_plan__v202212__config__descriptor) \
    , NULL, NULL }


typedef enum {
  KENTIK__CAPACITY_PLAN__V202212__SUMMARY_STATUS__RUNOUT_STATUS___EARLIEST_DATE__NOT_SET = 0,
  KENTIK__CAPACITY_PLAN__V202212__SUMMARY_STATUS__RUNOUT_STATUS___EARLIEST_DATE_EARLIEST_DATE = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__CAPACITY_PLAN__V202212__SUMMARY_STATUS__RUNOUT_STATUS___EARLIEST_DATE)
} Kentik__CapacityPlan__V202212__SummaryStatus__RunoutStatus__EarliestDateCase;

/*
 * {{.Name}}
 */
struct  _Kentik__CapacityPlan__V202212__SummaryStatus__RunoutStatus
{
  ProtobufCMessage base;
  char *status;
  Kentik__CapacityPlan__V202212__SummaryStatus__RunoutStatus__EarliestDateCase _earliest_date_case;
  union {
    uint64_t earliest_date;
  };
};
#define KENTIK__CAPACITY_PLAN__V202212__SUMMARY_STATUS__RUNOUT_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__capacity_plan__v202212__summary_status__runout_status__descriptor) \
    , (char *)protobuf_c_empty_string, KENTIK__CAPACITY_PLAN__V202212__SUMMARY_STATUS__RUNOUT_STATUS___EARLIEST_DATE__NOT_SET, {0} }


typedef enum {
  KENTIK__CAPACITY_PLAN__V202212__SUMMARY_STATUS__UTIL_STATUS___HIGHEST_PCT__NOT_SET = 0,
  KENTIK__CAPACITY_PLAN__V202212__SUMMARY_STATUS__UTIL_STATUS___HIGHEST_PCT_HIGHEST_PCT = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__CAPACITY_PLAN__V202212__SUMMARY_STATUS__UTIL_STATUS___HIGHEST_PCT)
} Kentik__CapacityPlan__V202212__SummaryStatus__UtilStatus__HighestPctCase;

/*
 * {{.Name}}
 */
struct  _Kentik__CapacityPlan__V202212__SummaryStatus__UtilStatus
{
  ProtobufCMessage base;
  char *status;
  Kentik__CapacityPlan__V202212__SummaryStatus__UtilStatus__HighestPctCase _highest_pct_case;
  union {
    uint32_t highest_pct;
  };
};
#define KENTIK__CAPACITY_PLAN__V202212__SUMMARY_STATUS__UTIL_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__capacity_plan__v202212__summary_status__util_status__descriptor) \
    , (char *)protobuf_c_empty_string, KENTIK__CAPACITY_PLAN__V202212__SUMMARY_STATUS__UTIL_STATUS___HIGHEST_PCT__NOT_SET, {0} }


/*
 * {{.Name}}
 */
struct  _Kentik__CapacityPlan__V202212__SummaryStatus
{
  ProtobufCMessage base;
  Kentik__CapacityPlan__V202212__SummaryStatus__RunoutStatus *runout;
  Kentik__CapacityPlan__V202212__SummaryStatus__UtilStatus *utilization;
};
#define KENTIK__CAPACITY_PLAN__V202212__SUMMARY_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__capacity_plan__v202212__summary_status__descriptor) \
    , NULL, NULL }


typedef enum {
  KENTIK__CAPACITY_PLAN__V202212__CAPACITY_SUMMARY__INTERFACES_DETAIL__STATUS_DETAIL___BPS__NOT_SET = 0,
  KENTIK__CAPACITY_PLAN__V202212__CAPACITY_SUMMARY__INTERFACES_DETAIL__STATUS_DETAIL___BPS_BPS = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__CAPACITY_PLAN__V202212__CAPACITY_SUMMARY__INTERFACES_DETAIL__STATUS_DETAIL___BPS)
} Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail__StatusDetail__BpsCase;

typedef enum {
  KENTIK__CAPACITY_PLAN__V202212__CAPACITY_SUMMARY__INTERFACES_DETAIL__STATUS_DETAIL___COUNT__NOT_SET = 0,
  KENTIK__CAPACITY_PLAN__V202212__CAPACITY_SUMMARY__INTERFACES_DETAIL__STATUS_DETAIL___COUNT_COUNT = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__CAPACITY_PLAN__V202212__CAPACITY_SUMMARY__INTERFACES_DETAIL__STATUS_DETAIL___COUNT)
} Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail__StatusDetail__CountCase;

/*
 * {{.Name}}
 */
struct  _Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail__StatusDetail
{
  ProtobufCMessage base;
  Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail__StatusDetail__BpsCase _bps_case;
  union {
    uint64_t bps;
  };
  Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail__StatusDetail__CountCase _count_case;
  union {
    uint32_t count;
  };
};
#define KENTIK__CAPACITY_PLAN__V202212__CAPACITY_SUMMARY__INTERFACES_DETAIL__STATUS_DETAIL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__capacity_plan__v202212__capacity_summary__interfaces_detail__status_detail__descriptor) \
    , KENTIK__CAPACITY_PLAN__V202212__CAPACITY_SUMMARY__INTERFACES_DETAIL__STATUS_DETAIL___BPS__NOT_SET, {0}, KENTIK__CAPACITY_PLAN__V202212__CAPACITY_SUMMARY__INTERFACES_DETAIL__STATUS_DETAIL___COUNT__NOT_SET, {0} }


typedef enum {
  KENTIK__CAPACITY_PLAN__V202212__CAPACITY_SUMMARY__INTERFACES_DETAIL___TOTAL_COUNT__NOT_SET = 0,
  KENTIK__CAPACITY_PLAN__V202212__CAPACITY_SUMMARY__INTERFACES_DETAIL___TOTAL_COUNT_TOTAL_COUNT = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__CAPACITY_PLAN__V202212__CAPACITY_SUMMARY__INTERFACES_DETAIL___TOTAL_COUNT)
} Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail__TotalCountCase;

typedef enum {
  KENTIK__CAPACITY_PLAN__V202212__CAPACITY_SUMMARY__INTERFACES_DETAIL___TOTAL_CAPACITY_BPS__NOT_SET = 0,
  KENTIK__CAPACITY_PLAN__V202212__CAPACITY_SUMMARY__INTERFACES_DETAIL___TOTAL_CAPACITY_BPS_TOTAL_CAPACITY_BPS = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__CAPACITY_PLAN__V202212__CAPACITY_SUMMARY__INTERFACES_DETAIL___TOTAL_CAPACITY_BPS)
} Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail__TotalCapacityBpsCase;

/*
 * {{.Name}}
 */
struct  _Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail
{
  ProtobufCMessage base;
  Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail__StatusDetail *healthy;
  Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail__StatusDetail *warning;
  Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail__StatusDetail *critical;
  Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail__TotalCountCase _total_count_case;
  union {
    uint32_t total_count;
  };
  Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail__TotalCapacityBpsCase _total_capacity_bps_case;
  union {
    uint64_t total_capacity_bps;
  };
};
#define KENTIK__CAPACITY_PLAN__V202212__CAPACITY_SUMMARY__INTERFACES_DETAIL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__capacity_plan__v202212__capacity_summary__interfaces_detail__descriptor) \
    , NULL, NULL, NULL, KENTIK__CAPACITY_PLAN__V202212__CAPACITY_SUMMARY__INTERFACES_DETAIL___TOTAL_COUNT__NOT_SET, {0}, KENTIK__CAPACITY_PLAN__V202212__CAPACITY_SUMMARY__INTERFACES_DETAIL___TOTAL_CAPACITY_BPS__NOT_SET, {0} }


/*
 * {{.Name}}
 */
struct  _Kentik__CapacityPlan__V202212__CapacitySummary
{
  ProtobufCMessage base;
  char *id;
  char *name;
  char *description;
  char *status;
  Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail *interfaces;
  Kentik__CapacityPlan__V202212__Config *config;
  Kentik__CapacityPlan__V202212__SummaryStatus *summary_status;
};
#define KENTIK__CAPACITY_PLAN__V202212__CAPACITY_SUMMARY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__capacity_plan__v202212__capacity_summary__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL, NULL, NULL }


/*
 * {{.Name}}
 */
struct  _Kentik__CapacityPlan__V202212__CapacityPlan__InterfaceDetail
{
  ProtobufCMessage base;
  char *device_name;
  char *intf_name;
  char *intf_description;
  char *intf_capacity;
  char *network_boundary;
  char *conn_type;
  char *provider;
  char *util_status;
  char *util_out_mbps;
  char *util_out_pct;
  char *util_in_mbps;
  char *util_in_pct;
  char *runout_status;
  char *runout_in_date;
  char *runout_in_variation;
  char *runout_out_date;
  char *runout_out_variation;
};
#define KENTIK__CAPACITY_PLAN__V202212__CAPACITY_PLAN__INTERFACE_DETAIL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__capacity_plan__v202212__capacity_plan__interface_detail__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * {{.Name}}
 */
struct  _Kentik__CapacityPlan__V202212__CapacityPlan
{
  ProtobufCMessage base;
  char *id;
  char *name;
  char *description;
  char *status;
  size_t n_interfaces;
  Kentik__CapacityPlan__V202212__CapacityPlan__InterfaceDetail **interfaces;
  Kentik__CapacityPlan__V202212__Config *config;
  Kentik__CapacityPlan__V202212__SummaryStatus *summary_status;
};
#define KENTIK__CAPACITY_PLAN__V202212__CAPACITY_PLAN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__capacity_plan__v202212__capacity_plan__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL, NULL, NULL }


/*
 * {{.Name}}
 */
struct  _Kentik__CapacityPlan__V202212__ListCapacitySummariesRequest
{
  ProtobufCMessage base;
};
#define KENTIK__CAPACITY_PLAN__V202212__LIST_CAPACITY_SUMMARIES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__capacity_plan__v202212__list_capacity_summaries_request__descriptor) \
     }


/*
 * {{.Name}}
 */
struct  _Kentik__CapacityPlan__V202212__ListCapacitySummariesResponse
{
  ProtobufCMessage base;
  size_t n_capacity;
  Kentik__CapacityPlan__V202212__CapacitySummary **capacity;
  uint32_t invalid_count;
};
#define KENTIK__CAPACITY_PLAN__V202212__LIST_CAPACITY_SUMMARIES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__capacity_plan__v202212__list_capacity_summaries_response__descriptor) \
    , 0,NULL, 0 }


/*
 * {{.Name}}
 */
struct  _Kentik__CapacityPlan__V202212__GetCapacitySummaryRequest
{
  ProtobufCMessage base;
  char *id;
};
#define KENTIK__CAPACITY_PLAN__V202212__GET_CAPACITY_SUMMARY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__capacity_plan__v202212__get_capacity_summary_request__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * {{.Name}}
 */
struct  _Kentik__CapacityPlan__V202212__GetCapacitySummaryResponse
{
  ProtobufCMessage base;
  Kentik__CapacityPlan__V202212__CapacitySummary *capacity;
};
#define KENTIK__CAPACITY_PLAN__V202212__GET_CAPACITY_SUMMARY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__capacity_plan__v202212__get_capacity_summary_response__descriptor) \
    , NULL }


/*
 * {{.Name}}
 */
struct  _Kentik__CapacityPlan__V202212__ListCapacityPlansRequest
{
  ProtobufCMessage base;
};
#define KENTIK__CAPACITY_PLAN__V202212__LIST_CAPACITY_PLANS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__capacity_plan__v202212__list_capacity_plans_request__descriptor) \
     }


/*
 * {{.Name}}
 */
struct  _Kentik__CapacityPlan__V202212__ListCapacityPlansResponse
{
  ProtobufCMessage base;
  size_t n_capacity;
  Kentik__CapacityPlan__V202212__CapacityPlan **capacity;
  uint32_t invalid_count;
};
#define KENTIK__CAPACITY_PLAN__V202212__LIST_CAPACITY_PLANS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__capacity_plan__v202212__list_capacity_plans_response__descriptor) \
    , 0,NULL, 0 }


/*
 * {{.Name}}
 */
struct  _Kentik__CapacityPlan__V202212__GetCapacityPlanRequest
{
  ProtobufCMessage base;
  char *id;
};
#define KENTIK__CAPACITY_PLAN__V202212__GET_CAPACITY_PLAN_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__capacity_plan__v202212__get_capacity_plan_request__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * {{.Name}}
 */
struct  _Kentik__CapacityPlan__V202212__GetCapacityPlanResponse
{
  ProtobufCMessage base;
  Kentik__CapacityPlan__V202212__CapacityPlan *capacity;
};
#define KENTIK__CAPACITY_PLAN__V202212__GET_CAPACITY_PLAN_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__capacity_plan__v202212__get_capacity_plan_response__descriptor) \
    , NULL }


/* Kentik__CapacityPlan__V202212__Config__RunoutConfig methods */
void   kentik__capacity_plan__v202212__config__runout_config__init
                     (Kentik__CapacityPlan__V202212__Config__RunoutConfig         *message);
/* Kentik__CapacityPlan__V202212__Config__UtilConfig methods */
void   kentik__capacity_plan__v202212__config__util_config__init
                     (Kentik__CapacityPlan__V202212__Config__UtilConfig         *message);
/* Kentik__CapacityPlan__V202212__Config methods */
void   kentik__capacity_plan__v202212__config__init
                     (Kentik__CapacityPlan__V202212__Config         *message);
size_t kentik__capacity_plan__v202212__config__get_packed_size
                     (const Kentik__CapacityPlan__V202212__Config   *message);
size_t kentik__capacity_plan__v202212__config__pack
                     (const Kentik__CapacityPlan__V202212__Config   *message,
                      uint8_t             *out);
size_t kentik__capacity_plan__v202212__config__pack_to_buffer
                     (const Kentik__CapacityPlan__V202212__Config   *message,
                      ProtobufCBuffer     *buffer);
Kentik__CapacityPlan__V202212__Config *
       kentik__capacity_plan__v202212__config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__capacity_plan__v202212__config__free_unpacked
                     (Kentik__CapacityPlan__V202212__Config *message,
                      ProtobufCAllocator *allocator);
/* Kentik__CapacityPlan__V202212__SummaryStatus__RunoutStatus methods */
void   kentik__capacity_plan__v202212__summary_status__runout_status__init
                     (Kentik__CapacityPlan__V202212__SummaryStatus__RunoutStatus         *message);
/* Kentik__CapacityPlan__V202212__SummaryStatus__UtilStatus methods */
void   kentik__capacity_plan__v202212__summary_status__util_status__init
                     (Kentik__CapacityPlan__V202212__SummaryStatus__UtilStatus         *message);
/* Kentik__CapacityPlan__V202212__SummaryStatus methods */
void   kentik__capacity_plan__v202212__summary_status__init
                     (Kentik__CapacityPlan__V202212__SummaryStatus         *message);
size_t kentik__capacity_plan__v202212__summary_status__get_packed_size
                     (const Kentik__CapacityPlan__V202212__SummaryStatus   *message);
size_t kentik__capacity_plan__v202212__summary_status__pack
                     (const Kentik__CapacityPlan__V202212__SummaryStatus   *message,
                      uint8_t             *out);
size_t kentik__capacity_plan__v202212__summary_status__pack_to_buffer
                     (const Kentik__CapacityPlan__V202212__SummaryStatus   *message,
                      ProtobufCBuffer     *buffer);
Kentik__CapacityPlan__V202212__SummaryStatus *
       kentik__capacity_plan__v202212__summary_status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__capacity_plan__v202212__summary_status__free_unpacked
                     (Kentik__CapacityPlan__V202212__SummaryStatus *message,
                      ProtobufCAllocator *allocator);
/* Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail__StatusDetail methods */
void   kentik__capacity_plan__v202212__capacity_summary__interfaces_detail__status_detail__init
                     (Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail__StatusDetail         *message);
/* Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail methods */
void   kentik__capacity_plan__v202212__capacity_summary__interfaces_detail__init
                     (Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail         *message);
/* Kentik__CapacityPlan__V202212__CapacitySummary methods */
void   kentik__capacity_plan__v202212__capacity_summary__init
                     (Kentik__CapacityPlan__V202212__CapacitySummary         *message);
size_t kentik__capacity_plan__v202212__capacity_summary__get_packed_size
                     (const Kentik__CapacityPlan__V202212__CapacitySummary   *message);
size_t kentik__capacity_plan__v202212__capacity_summary__pack
                     (const Kentik__CapacityPlan__V202212__CapacitySummary   *message,
                      uint8_t             *out);
size_t kentik__capacity_plan__v202212__capacity_summary__pack_to_buffer
                     (const Kentik__CapacityPlan__V202212__CapacitySummary   *message,
                      ProtobufCBuffer     *buffer);
Kentik__CapacityPlan__V202212__CapacitySummary *
       kentik__capacity_plan__v202212__capacity_summary__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__capacity_plan__v202212__capacity_summary__free_unpacked
                     (Kentik__CapacityPlan__V202212__CapacitySummary *message,
                      ProtobufCAllocator *allocator);
/* Kentik__CapacityPlan__V202212__CapacityPlan__InterfaceDetail methods */
void   kentik__capacity_plan__v202212__capacity_plan__interface_detail__init
                     (Kentik__CapacityPlan__V202212__CapacityPlan__InterfaceDetail         *message);
/* Kentik__CapacityPlan__V202212__CapacityPlan methods */
void   kentik__capacity_plan__v202212__capacity_plan__init
                     (Kentik__CapacityPlan__V202212__CapacityPlan         *message);
size_t kentik__capacity_plan__v202212__capacity_plan__get_packed_size
                     (const Kentik__CapacityPlan__V202212__CapacityPlan   *message);
size_t kentik__capacity_plan__v202212__capacity_plan__pack
                     (const Kentik__CapacityPlan__V202212__CapacityPlan   *message,
                      uint8_t             *out);
size_t kentik__capacity_plan__v202212__capacity_plan__pack_to_buffer
                     (const Kentik__CapacityPlan__V202212__CapacityPlan   *message,
                      ProtobufCBuffer     *buffer);
Kentik__CapacityPlan__V202212__CapacityPlan *
       kentik__capacity_plan__v202212__capacity_plan__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__capacity_plan__v202212__capacity_plan__free_unpacked
                     (Kentik__CapacityPlan__V202212__CapacityPlan *message,
                      ProtobufCAllocator *allocator);
/* Kentik__CapacityPlan__V202212__ListCapacitySummariesRequest methods */
void   kentik__capacity_plan__v202212__list_capacity_summaries_request__init
                     (Kentik__CapacityPlan__V202212__ListCapacitySummariesRequest         *message);
size_t kentik__capacity_plan__v202212__list_capacity_summaries_request__get_packed_size
                     (const Kentik__CapacityPlan__V202212__ListCapacitySummariesRequest   *message);
size_t kentik__capacity_plan__v202212__list_capacity_summaries_request__pack
                     (const Kentik__CapacityPlan__V202212__ListCapacitySummariesRequest   *message,
                      uint8_t             *out);
size_t kentik__capacity_plan__v202212__list_capacity_summaries_request__pack_to_buffer
                     (const Kentik__CapacityPlan__V202212__ListCapacitySummariesRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__CapacityPlan__V202212__ListCapacitySummariesRequest *
       kentik__capacity_plan__v202212__list_capacity_summaries_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__capacity_plan__v202212__list_capacity_summaries_request__free_unpacked
                     (Kentik__CapacityPlan__V202212__ListCapacitySummariesRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__CapacityPlan__V202212__ListCapacitySummariesResponse methods */
void   kentik__capacity_plan__v202212__list_capacity_summaries_response__init
                     (Kentik__CapacityPlan__V202212__ListCapacitySummariesResponse         *message);
size_t kentik__capacity_plan__v202212__list_capacity_summaries_response__get_packed_size
                     (const Kentik__CapacityPlan__V202212__ListCapacitySummariesResponse   *message);
size_t kentik__capacity_plan__v202212__list_capacity_summaries_response__pack
                     (const Kentik__CapacityPlan__V202212__ListCapacitySummariesResponse   *message,
                      uint8_t             *out);
size_t kentik__capacity_plan__v202212__list_capacity_summaries_response__pack_to_buffer
                     (const Kentik__CapacityPlan__V202212__ListCapacitySummariesResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__CapacityPlan__V202212__ListCapacitySummariesResponse *
       kentik__capacity_plan__v202212__list_capacity_summaries_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__capacity_plan__v202212__list_capacity_summaries_response__free_unpacked
                     (Kentik__CapacityPlan__V202212__ListCapacitySummariesResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__CapacityPlan__V202212__GetCapacitySummaryRequest methods */
void   kentik__capacity_plan__v202212__get_capacity_summary_request__init
                     (Kentik__CapacityPlan__V202212__GetCapacitySummaryRequest         *message);
size_t kentik__capacity_plan__v202212__get_capacity_summary_request__get_packed_size
                     (const Kentik__CapacityPlan__V202212__GetCapacitySummaryRequest   *message);
size_t kentik__capacity_plan__v202212__get_capacity_summary_request__pack
                     (const Kentik__CapacityPlan__V202212__GetCapacitySummaryRequest   *message,
                      uint8_t             *out);
size_t kentik__capacity_plan__v202212__get_capacity_summary_request__pack_to_buffer
                     (const Kentik__CapacityPlan__V202212__GetCapacitySummaryRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__CapacityPlan__V202212__GetCapacitySummaryRequest *
       kentik__capacity_plan__v202212__get_capacity_summary_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__capacity_plan__v202212__get_capacity_summary_request__free_unpacked
                     (Kentik__CapacityPlan__V202212__GetCapacitySummaryRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__CapacityPlan__V202212__GetCapacitySummaryResponse methods */
void   kentik__capacity_plan__v202212__get_capacity_summary_response__init
                     (Kentik__CapacityPlan__V202212__GetCapacitySummaryResponse         *message);
size_t kentik__capacity_plan__v202212__get_capacity_summary_response__get_packed_size
                     (const Kentik__CapacityPlan__V202212__GetCapacitySummaryResponse   *message);
size_t kentik__capacity_plan__v202212__get_capacity_summary_response__pack
                     (const Kentik__CapacityPlan__V202212__GetCapacitySummaryResponse   *message,
                      uint8_t             *out);
size_t kentik__capacity_plan__v202212__get_capacity_summary_response__pack_to_buffer
                     (const Kentik__CapacityPlan__V202212__GetCapacitySummaryResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__CapacityPlan__V202212__GetCapacitySummaryResponse *
       kentik__capacity_plan__v202212__get_capacity_summary_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__capacity_plan__v202212__get_capacity_summary_response__free_unpacked
                     (Kentik__CapacityPlan__V202212__GetCapacitySummaryResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__CapacityPlan__V202212__ListCapacityPlansRequest methods */
void   kentik__capacity_plan__v202212__list_capacity_plans_request__init
                     (Kentik__CapacityPlan__V202212__ListCapacityPlansRequest         *message);
size_t kentik__capacity_plan__v202212__list_capacity_plans_request__get_packed_size
                     (const Kentik__CapacityPlan__V202212__ListCapacityPlansRequest   *message);
size_t kentik__capacity_plan__v202212__list_capacity_plans_request__pack
                     (const Kentik__CapacityPlan__V202212__ListCapacityPlansRequest   *message,
                      uint8_t             *out);
size_t kentik__capacity_plan__v202212__list_capacity_plans_request__pack_to_buffer
                     (const Kentik__CapacityPlan__V202212__ListCapacityPlansRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__CapacityPlan__V202212__ListCapacityPlansRequest *
       kentik__capacity_plan__v202212__list_capacity_plans_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__capacity_plan__v202212__list_capacity_plans_request__free_unpacked
                     (Kentik__CapacityPlan__V202212__ListCapacityPlansRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__CapacityPlan__V202212__ListCapacityPlansResponse methods */
void   kentik__capacity_plan__v202212__list_capacity_plans_response__init
                     (Kentik__CapacityPlan__V202212__ListCapacityPlansResponse         *message);
size_t kentik__capacity_plan__v202212__list_capacity_plans_response__get_packed_size
                     (const Kentik__CapacityPlan__V202212__ListCapacityPlansResponse   *message);
size_t kentik__capacity_plan__v202212__list_capacity_plans_response__pack
                     (const Kentik__CapacityPlan__V202212__ListCapacityPlansResponse   *message,
                      uint8_t             *out);
size_t kentik__capacity_plan__v202212__list_capacity_plans_response__pack_to_buffer
                     (const Kentik__CapacityPlan__V202212__ListCapacityPlansResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__CapacityPlan__V202212__ListCapacityPlansResponse *
       kentik__capacity_plan__v202212__list_capacity_plans_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__capacity_plan__v202212__list_capacity_plans_response__free_unpacked
                     (Kentik__CapacityPlan__V202212__ListCapacityPlansResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__CapacityPlan__V202212__GetCapacityPlanRequest methods */
void   kentik__capacity_plan__v202212__get_capacity_plan_request__init
                     (Kentik__CapacityPlan__V202212__GetCapacityPlanRequest         *message);
size_t kentik__capacity_plan__v202212__get_capacity_plan_request__get_packed_size
                     (const Kentik__CapacityPlan__V202212__GetCapacityPlanRequest   *message);
size_t kentik__capacity_plan__v202212__get_capacity_plan_request__pack
                     (const Kentik__CapacityPlan__V202212__GetCapacityPlanRequest   *message,
                      uint8_t             *out);
size_t kentik__capacity_plan__v202212__get_capacity_plan_request__pack_to_buffer
                     (const Kentik__CapacityPlan__V202212__GetCapacityPlanRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__CapacityPlan__V202212__GetCapacityPlanRequest *
       kentik__capacity_plan__v202212__get_capacity_plan_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__capacity_plan__v202212__get_capacity_plan_request__free_unpacked
                     (Kentik__CapacityPlan__V202212__GetCapacityPlanRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__CapacityPlan__V202212__GetCapacityPlanResponse methods */
void   kentik__capacity_plan__v202212__get_capacity_plan_response__init
                     (Kentik__CapacityPlan__V202212__GetCapacityPlanResponse         *message);
size_t kentik__capacity_plan__v202212__get_capacity_plan_response__get_packed_size
                     (const Kentik__CapacityPlan__V202212__GetCapacityPlanResponse   *message);
size_t kentik__capacity_plan__v202212__get_capacity_plan_response__pack
                     (const Kentik__CapacityPlan__V202212__GetCapacityPlanResponse   *message,
                      uint8_t             *out);
size_t kentik__capacity_plan__v202212__get_capacity_plan_response__pack_to_buffer
                     (const Kentik__CapacityPlan__V202212__GetCapacityPlanResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__CapacityPlan__V202212__GetCapacityPlanResponse *
       kentik__capacity_plan__v202212__get_capacity_plan_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__capacity_plan__v202212__get_capacity_plan_response__free_unpacked
                     (Kentik__CapacityPlan__V202212__GetCapacityPlanResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Kentik__CapacityPlan__V202212__Config__RunoutConfig_Closure)
                 (const Kentik__CapacityPlan__V202212__Config__RunoutConfig *message,
                  void *closure_data);
typedef void (*Kentik__CapacityPlan__V202212__Config__UtilConfig_Closure)
                 (const Kentik__CapacityPlan__V202212__Config__UtilConfig *message,
                  void *closure_data);
typedef void (*Kentik__CapacityPlan__V202212__Config_Closure)
                 (const Kentik__CapacityPlan__V202212__Config *message,
                  void *closure_data);
typedef void (*Kentik__CapacityPlan__V202212__SummaryStatus__RunoutStatus_Closure)
                 (const Kentik__CapacityPlan__V202212__SummaryStatus__RunoutStatus *message,
                  void *closure_data);
typedef void (*Kentik__CapacityPlan__V202212__SummaryStatus__UtilStatus_Closure)
                 (const Kentik__CapacityPlan__V202212__SummaryStatus__UtilStatus *message,
                  void *closure_data);
typedef void (*Kentik__CapacityPlan__V202212__SummaryStatus_Closure)
                 (const Kentik__CapacityPlan__V202212__SummaryStatus *message,
                  void *closure_data);
typedef void (*Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail__StatusDetail_Closure)
                 (const Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail__StatusDetail *message,
                  void *closure_data);
typedef void (*Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail_Closure)
                 (const Kentik__CapacityPlan__V202212__CapacitySummary__InterfacesDetail *message,
                  void *closure_data);
typedef void (*Kentik__CapacityPlan__V202212__CapacitySummary_Closure)
                 (const Kentik__CapacityPlan__V202212__CapacitySummary *message,
                  void *closure_data);
typedef void (*Kentik__CapacityPlan__V202212__CapacityPlan__InterfaceDetail_Closure)
                 (const Kentik__CapacityPlan__V202212__CapacityPlan__InterfaceDetail *message,
                  void *closure_data);
typedef void (*Kentik__CapacityPlan__V202212__CapacityPlan_Closure)
                 (const Kentik__CapacityPlan__V202212__CapacityPlan *message,
                  void *closure_data);
typedef void (*Kentik__CapacityPlan__V202212__ListCapacitySummariesRequest_Closure)
                 (const Kentik__CapacityPlan__V202212__ListCapacitySummariesRequest *message,
                  void *closure_data);
typedef void (*Kentik__CapacityPlan__V202212__ListCapacitySummariesResponse_Closure)
                 (const Kentik__CapacityPlan__V202212__ListCapacitySummariesResponse *message,
                  void *closure_data);
typedef void (*Kentik__CapacityPlan__V202212__GetCapacitySummaryRequest_Closure)
                 (const Kentik__CapacityPlan__V202212__GetCapacitySummaryRequest *message,
                  void *closure_data);
typedef void (*Kentik__CapacityPlan__V202212__GetCapacitySummaryResponse_Closure)
                 (const Kentik__CapacityPlan__V202212__GetCapacitySummaryResponse *message,
                  void *closure_data);
typedef void (*Kentik__CapacityPlan__V202212__ListCapacityPlansRequest_Closure)
                 (const Kentik__CapacityPlan__V202212__ListCapacityPlansRequest *message,
                  void *closure_data);
typedef void (*Kentik__CapacityPlan__V202212__ListCapacityPlansResponse_Closure)
                 (const Kentik__CapacityPlan__V202212__ListCapacityPlansResponse *message,
                  void *closure_data);
typedef void (*Kentik__CapacityPlan__V202212__GetCapacityPlanRequest_Closure)
                 (const Kentik__CapacityPlan__V202212__GetCapacityPlanRequest *message,
                  void *closure_data);
typedef void (*Kentik__CapacityPlan__V202212__GetCapacityPlanResponse_Closure)
                 (const Kentik__CapacityPlan__V202212__GetCapacityPlanResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct _Kentik__CapacityPlan__V202212__CapacityPlanService_Service Kentik__CapacityPlan__V202212__CapacityPlanService_Service;
struct _Kentik__CapacityPlan__V202212__CapacityPlanService_Service
{
  ProtobufCService base;
  void (*list_capacity_summaries)(Kentik__CapacityPlan__V202212__CapacityPlanService_Service *service,
                                  const Kentik__CapacityPlan__V202212__ListCapacitySummariesRequest *input,
                                  Kentik__CapacityPlan__V202212__ListCapacitySummariesResponse_Closure closure,
                                  void *closure_data);
  void (*get_capacity_summary)(Kentik__CapacityPlan__V202212__CapacityPlanService_Service *service,
                               const Kentik__CapacityPlan__V202212__GetCapacitySummaryRequest *input,
                               Kentik__CapacityPlan__V202212__GetCapacitySummaryResponse_Closure closure,
                               void *closure_data);
  void (*list_capacity_plans)(Kentik__CapacityPlan__V202212__CapacityPlanService_Service *service,
                              const Kentik__CapacityPlan__V202212__ListCapacityPlansRequest *input,
                              Kentik__CapacityPlan__V202212__ListCapacityPlansResponse_Closure closure,
                              void *closure_data);
  void (*get_capacity_plan)(Kentik__CapacityPlan__V202212__CapacityPlanService_Service *service,
                            const Kentik__CapacityPlan__V202212__GetCapacityPlanRequest *input,
                            Kentik__CapacityPlan__V202212__GetCapacityPlanResponse_Closure closure,
                            void *closure_data);
};
typedef void (*Kentik__CapacityPlan__V202212__CapacityPlanService_ServiceDestroy)(Kentik__CapacityPlan__V202212__CapacityPlanService_Service *);
void kentik__capacity_plan__v202212__capacity_plan_service__init (Kentik__CapacityPlan__V202212__CapacityPlanService_Service *service,
                                                                  Kentik__CapacityPlan__V202212__CapacityPlanService_ServiceDestroy destroy);
#define KENTIK__CAPACITY_PLAN__V202212__CAPACITY_PLAN_SERVICE__BASE_INIT \
    { &kentik__capacity_plan__v202212__capacity_plan_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define KENTIK__CAPACITY_PLAN__V202212__CAPACITY_PLAN_SERVICE__INIT(function_prefix__) \
    { KENTIK__CAPACITY_PLAN__V202212__CAPACITY_PLAN_SERVICE__BASE_INIT,\
      function_prefix__ ## list_capacity_summaries,\
      function_prefix__ ## get_capacity_summary,\
      function_prefix__ ## list_capacity_plans,\
      function_prefix__ ## get_capacity_plan  }
void kentik__capacity_plan__v202212__capacity_plan_service__list_capacity_summaries(ProtobufCService *service,
                                                                                    const Kentik__CapacityPlan__V202212__ListCapacitySummariesRequest *input,
                                                                                    Kentik__CapacityPlan__V202212__ListCapacitySummariesResponse_Closure closure,
                                                                                    void *closure_data);
void kentik__capacity_plan__v202212__capacity_plan_service__get_capacity_summary(ProtobufCService *service,
                                                                                 const Kentik__CapacityPlan__V202212__GetCapacitySummaryRequest *input,
                                                                                 Kentik__CapacityPlan__V202212__GetCapacitySummaryResponse_Closure closure,
                                                                                 void *closure_data);
void kentik__capacity_plan__v202212__capacity_plan_service__list_capacity_plans(ProtobufCService *service,
                                                                                const Kentik__CapacityPlan__V202212__ListCapacityPlansRequest *input,
                                                                                Kentik__CapacityPlan__V202212__ListCapacityPlansResponse_Closure closure,
                                                                                void *closure_data);
void kentik__capacity_plan__v202212__capacity_plan_service__get_capacity_plan(ProtobufCService *service,
                                                                              const Kentik__CapacityPlan__V202212__GetCapacityPlanRequest *input,
                                                                              Kentik__CapacityPlan__V202212__GetCapacityPlanResponse_Closure closure,
                                                                              void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor kentik__capacity_plan__v202212__config__descriptor;
extern const ProtobufCMessageDescriptor kentik__capacity_plan__v202212__config__runout_config__descriptor;
extern const ProtobufCMessageDescriptor kentik__capacity_plan__v202212__config__util_config__descriptor;
extern const ProtobufCMessageDescriptor kentik__capacity_plan__v202212__summary_status__descriptor;
extern const ProtobufCMessageDescriptor kentik__capacity_plan__v202212__summary_status__runout_status__descriptor;
extern const ProtobufCMessageDescriptor kentik__capacity_plan__v202212__summary_status__util_status__descriptor;
extern const ProtobufCMessageDescriptor kentik__capacity_plan__v202212__capacity_summary__descriptor;
extern const ProtobufCMessageDescriptor kentik__capacity_plan__v202212__capacity_summary__interfaces_detail__descriptor;
extern const ProtobufCMessageDescriptor kentik__capacity_plan__v202212__capacity_summary__interfaces_detail__status_detail__descriptor;
extern const ProtobufCMessageDescriptor kentik__capacity_plan__v202212__capacity_plan__descriptor;
extern const ProtobufCMessageDescriptor kentik__capacity_plan__v202212__capacity_plan__interface_detail__descriptor;
extern const ProtobufCMessageDescriptor kentik__capacity_plan__v202212__list_capacity_summaries_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__capacity_plan__v202212__list_capacity_summaries_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__capacity_plan__v202212__get_capacity_summary_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__capacity_plan__v202212__get_capacity_summary_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__capacity_plan__v202212__list_capacity_plans_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__capacity_plan__v202212__list_capacity_plans_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__capacity_plan__v202212__get_capacity_plan_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__capacity_plan__v202212__get_capacity_plan_response__descriptor;
extern const ProtobufCServiceDescriptor kentik__capacity_plan__v202212__capacity_plan_service__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_kentik_2fcapacity_5fplan_2fv202212_2fcapacity_5fplan_2eproto__INCLUDED */
