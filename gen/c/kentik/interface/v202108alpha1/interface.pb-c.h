/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: kentik/interface/v202108alpha1/interface.proto */

#ifndef PROTOBUF_C_kentik_2finterface_2fv202108alpha1_2finterface_2eproto__INCLUDED
#define PROTOBUF_C_kentik_2finterface_2fv202108alpha1_2finterface_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "google/api/annotations.pb-c.h"
#include "google/api/client.pb-c.h"
#include "protoc-gen-openapiv2/options/annotations.pb-c.h"
#include "kentik/core/v202303/annotations.pb-c.h"
#include "google/protobuf/timestamp.pb-c.h"

typedef struct _Kentik__Interface__V202108alpha1__Interface Kentik__Interface__V202108alpha1__Interface;
typedef struct _Kentik__Interface__V202108alpha1__InterfaceClassification Kentik__Interface__V202108alpha1__InterfaceClassification;
typedef struct _Kentik__Interface__V202108alpha1__ClassifyCounter Kentik__Interface__V202108alpha1__ClassifyCounter;
typedef struct _Kentik__Interface__V202108alpha1__InterfaceClassifyInfo Kentik__Interface__V202108alpha1__InterfaceClassifyInfo;
typedef struct _Kentik__Interface__V202108alpha1__DeviceClassifyInfo Kentik__Interface__V202108alpha1__DeviceClassifyInfo;
typedef struct _Kentik__Interface__V202108alpha1__InterfaceFilter Kentik__Interface__V202108alpha1__InterfaceFilter;
typedef struct _Kentik__Interface__V202108alpha1__AutoClassifyRequest Kentik__Interface__V202108alpha1__AutoClassifyRequest;
typedef struct _Kentik__Interface__V202108alpha1__AutoClassifyResponse Kentik__Interface__V202108alpha1__AutoClassifyResponse;
typedef struct _Kentik__Interface__V202108alpha1__ManualClassifyRequest Kentik__Interface__V202108alpha1__ManualClassifyRequest;
typedef struct _Kentik__Interface__V202108alpha1__ManualClassifyResponse Kentik__Interface__V202108alpha1__ManualClassifyResponse;
typedef struct _Kentik__Interface__V202108alpha1__ListInterfaceRequest Kentik__Interface__V202108alpha1__ListInterfaceRequest;
typedef struct _Kentik__Interface__V202108alpha1__ListInterfaceResponse Kentik__Interface__V202108alpha1__ListInterfaceResponse;
typedef struct _Kentik__Interface__V202108alpha1__GetInterfaceRequest Kentik__Interface__V202108alpha1__GetInterfaceRequest;
typedef struct _Kentik__Interface__V202108alpha1__GetInterfaceResponse Kentik__Interface__V202108alpha1__GetInterfaceResponse;
typedef struct _Kentik__Interface__V202108alpha1__CreateInterfaceRequest Kentik__Interface__V202108alpha1__CreateInterfaceRequest;
typedef struct _Kentik__Interface__V202108alpha1__CreateInterfaceResponse Kentik__Interface__V202108alpha1__CreateInterfaceResponse;
typedef struct _Kentik__Interface__V202108alpha1__UpdateInterfaceRequest Kentik__Interface__V202108alpha1__UpdateInterfaceRequest;
typedef struct _Kentik__Interface__V202108alpha1__UpdateInterfaceResponse Kentik__Interface__V202108alpha1__UpdateInterfaceResponse;
typedef struct _Kentik__Interface__V202108alpha1__DeleteInterfaceRequest Kentik__Interface__V202108alpha1__DeleteInterfaceRequest;
typedef struct _Kentik__Interface__V202108alpha1__DeleteInterfaceResponse Kentik__Interface__V202108alpha1__DeleteInterfaceResponse;
typedef struct _Kentik__Interface__V202108alpha1__Match Kentik__Interface__V202108alpha1__Match;
typedef struct _Kentik__Interface__V202108alpha1__Action Kentik__Interface__V202108alpha1__Action;
typedef struct _Kentik__Interface__V202108alpha1__DeviceFilter Kentik__Interface__V202108alpha1__DeviceFilter;
typedef struct _Kentik__Interface__V202108alpha1__Rule Kentik__Interface__V202108alpha1__Rule;


/* --- enums --- */

typedef enum _Kentik__Interface__V202108alpha1__ConnectivityType {
  KENTIK__INTERFACE__V202108ALPHA1__CONNECTIVITY_TYPE__CONNECTIVITY_TYPE_UNSPECIFIED = 0,
  KENTIK__INTERFACE__V202108ALPHA1__CONNECTIVITY_TYPE__CONNECTIVITY_TYPE_AGGREGATION_INTERCONNECT = 1,
  KENTIK__INTERFACE__V202108ALPHA1__CONNECTIVITY_TYPE__CONNECTIVITY_TYPE_AVAILABLE = 2,
  KENTIK__INTERFACE__V202108ALPHA1__CONNECTIVITY_TYPE__CONNECTIVITY_TYPE_BACKBONE = 3,
  KENTIK__INTERFACE__V202108ALPHA1__CONNECTIVITY_TYPE__CONNECTIVITY_TYPE_CLOUD_INTERCONNECT = 4,
  KENTIK__INTERFACE__V202108ALPHA1__CONNECTIVITY_TYPE__CONNECTIVITY_TYPE_CUSTOMER = 5,
  KENTIK__INTERFACE__V202108ALPHA1__CONNECTIVITY_TYPE__CONNECTIVITY_TYPE_DATACENTER_FABRIC = 6,
  KENTIK__INTERFACE__V202108ALPHA1__CONNECTIVITY_TYPE__CONNECTIVITY_TYPE_DATACENTER_INTERCONNECT = 7,
  KENTIK__INTERFACE__V202108ALPHA1__CONNECTIVITY_TYPE__CONNECTIVITY_TYPE_EMBEDDED_CACHE = 8,
  KENTIK__INTERFACE__V202108ALPHA1__CONNECTIVITY_TYPE__CONNECTIVITY_TYPE_FREE_PNI = 9,
  KENTIK__INTERFACE__V202108ALPHA1__CONNECTIVITY_TYPE__CONNECTIVITY_TYPE_HOST = 10,
  KENTIK__INTERFACE__V202108ALPHA1__CONNECTIVITY_TYPE__CONNECTIVITY_TYPE_IX = 11,
  KENTIK__INTERFACE__V202108ALPHA1__CONNECTIVITY_TYPE__CONNECTIVITY_TYPE_OTHER = 12,
  KENTIK__INTERFACE__V202108ALPHA1__CONNECTIVITY_TYPE__CONNECTIVITY_TYPE_PAID_PNI = 13,
  KENTIK__INTERFACE__V202108ALPHA1__CONNECTIVITY_TYPE__CONNECTIVITY_TYPE_RESERVED = 14,
  KENTIK__INTERFACE__V202108ALPHA1__CONNECTIVITY_TYPE__CONNECTIVITY_TYPE_TRANSIT = 15,
  KENTIK__INTERFACE__V202108ALPHA1__CONNECTIVITY_TYPE__CONNECTIVITY_TYPE_VIRTUAL_CROSS_CONNECT = 16
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__INTERFACE__V202108ALPHA1__CONNECTIVITY_TYPE)
} Kentik__Interface__V202108alpha1__ConnectivityType;
typedef enum _Kentik__Interface__V202108alpha1__NetworkBoundary {
  KENTIK__INTERFACE__V202108ALPHA1__NETWORK_BOUNDARY__NETWORK_BOUNDARY_UNSPECIFIED = 0,
  KENTIK__INTERFACE__V202108ALPHA1__NETWORK_BOUNDARY__NETWORK_BOUNDARY_AUTO = 1,
  KENTIK__INTERFACE__V202108ALPHA1__NETWORK_BOUNDARY__NETWORK_BOUNDARY_INTERNAL = 2,
  KENTIK__INTERFACE__V202108ALPHA1__NETWORK_BOUNDARY__NETWORK_BOUNDARY_EXTERNAL = 3,
  KENTIK__INTERFACE__V202108ALPHA1__NETWORK_BOUNDARY__NETWORK_BOUNDARY_NONE = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__INTERFACE__V202108ALPHA1__NETWORK_BOUNDARY)
} Kentik__Interface__V202108alpha1__NetworkBoundary;
typedef enum _Kentik__Interface__V202108alpha1__IpFilter {
  KENTIK__INTERFACE__V202108ALPHA1__IP_FILTER__IP_FILTER_UNSPECIFIED = 0,
  KENTIK__INTERFACE__V202108ALPHA1__IP_FILTER__IP_FILTER_PRIVATE = 1,
  KENTIK__INTERFACE__V202108ALPHA1__IP_FILTER__IP_FILTER_PUBLIC = 2,
  KENTIK__INTERFACE__V202108ALPHA1__IP_FILTER__IP_FILTER_UNSET = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__INTERFACE__V202108ALPHA1__IP_FILTER)
} Kentik__Interface__V202108alpha1__IpFilter;
typedef enum _Kentik__Interface__V202108alpha1__MatchAttribute {
  KENTIK__INTERFACE__V202108ALPHA1__MATCH_ATTRIBUTE__MATCH_ATTRIBUTE_UNSPECIFIED = 0,
  KENTIK__INTERFACE__V202108ALPHA1__MATCH_ATTRIBUTE__MATCH_ATTRIBUTE_INTERFACE_DESCRIPTION = 1,
  KENTIK__INTERFACE__V202108ALPHA1__MATCH_ATTRIBUTE__MATCH_ATTRIBUTE_SNMP_ALIAS = 2,
  KENTIK__INTERFACE__V202108ALPHA1__MATCH_ATTRIBUTE__MATCH_ATTRIBUTE_INTERFACE_IP = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__INTERFACE__V202108ALPHA1__MATCH_ATTRIBUTE)
} Kentik__Interface__V202108alpha1__MatchAttribute;
typedef enum _Kentik__Interface__V202108alpha1__Operator {
  KENTIK__INTERFACE__V202108ALPHA1__OPERATOR__OPERATOR_UNSPECIFIED = 0,
  KENTIK__INTERFACE__V202108ALPHA1__OPERATOR__OPERATOR_EQUALS = 1,
  KENTIK__INTERFACE__V202108ALPHA1__OPERATOR__OPERATOR_CONTAINS = 2,
  KENTIK__INTERFACE__V202108ALPHA1__OPERATOR__OPERATOR_REGEX = 3,
  KENTIK__INTERFACE__V202108ALPHA1__OPERATOR__OPERATOR_CONTAINED_IN_SUBNET = 4,
  KENTIK__INTERFACE__V202108ALPHA1__OPERATOR__OPERATOR_IS_PUBLIC_IP = 5,
  KENTIK__INTERFACE__V202108ALPHA1__OPERATOR__OPERATOR_IS_PRIVATE_IP = 6,
  KENTIK__INTERFACE__V202108ALPHA1__OPERATOR__OPERATOR_NO_IP = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__INTERFACE__V202108ALPHA1__OPERATOR)
} Kentik__Interface__V202108alpha1__Operator;

/* --- messages --- */

struct  _Kentik__Interface__V202108alpha1__Interface
{
  ProtobufCMessage base;
  /*
   * ID of interface.
   */
  char *id;
  /*
   * ID of device with this interface.
   */
  char *device_id;
  /*
   * SNMP ID.
   */
  char *snmp_id;
  /*
   * Network speed in Mbps.
   */
  int32_t snmp_speed;
  /*
   * Snmp Type.
   */
  int32_t snmp_type;
  /*
   * Interface alias.
   */
  char *snmp_alias;
  /*
   * IP of interface.
   */
  char *interface_ip;
  /*
   * Readable string description of interface.
   */
  char *interface_description;
  /*
   * Create timestamp.
   */
  Google__Protobuf__Timestamp *cdate;
  /*
   * Update Timestamp.
   */
  Google__Protobuf__Timestamp *edate;
  /*
   * Subnet mask.
   */
  char *interface_ip_netmask;
  /*
   * Type of network connectivity type.
   */
  Kentik__Interface__V202108alpha1__ConnectivityType connectivity_type;
  /*
   * Type of network boundary.
   */
  Kentik__Interface__V202108alpha1__NetworkBoundary network_boundary;
  /*
   * Top asn hops.
   */
  size_t n_top_nexthop_asns;
  int32_t *top_nexthop_asns;
  /*
   * Network provider.
   */
  char *provider;
};
#define KENTIK__INTERFACE__V202108ALPHA1__INTERFACE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__interface__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL, NULL, (char *)protobuf_c_empty_string, KENTIK__INTERFACE__V202108ALPHA1__CONNECTIVITY_TYPE__CONNECTIVITY_TYPE_UNSPECIFIED, KENTIK__INTERFACE__V202108ALPHA1__NETWORK_BOUNDARY__NETWORK_BOUNDARY_UNSPECIFIED, 0,NULL, (char *)protobuf_c_empty_string }


struct  _Kentik__Interface__V202108alpha1__InterfaceClassification
{
  ProtobufCMessage base;
  protobuf_c_boolean classified;
  Kentik__Interface__V202108alpha1__ConnectivityType connectivity_type;
  Kentik__Interface__V202108alpha1__NetworkBoundary network_boundary;
};
#define KENTIK__INTERFACE__V202108ALPHA1__INTERFACE_CLASSIFICATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__interface_classification__descriptor) \
    , 0, KENTIK__INTERFACE__V202108ALPHA1__CONNECTIVITY_TYPE__CONNECTIVITY_TYPE_UNSPECIFIED, KENTIK__INTERFACE__V202108ALPHA1__NETWORK_BOUNDARY__NETWORK_BOUNDARY_UNSPECIFIED }


struct  _Kentik__Interface__V202108alpha1__ClassifyCounter
{
  ProtobufCMessage base;
  int32_t count;
  int32_t external_count;
  int32_t free_pni_count;
  int32_t ix_count;
  int32_t provider_count;
  int32_t transit_count;
};
#define KENTIK__INTERFACE__V202108ALPHA1__CLASSIFY_COUNTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__classify_counter__descriptor) \
    , 0, 0, 0, 0, 0, 0 }


struct  _Kentik__Interface__V202108alpha1__InterfaceClassifyInfo
{
  ProtobufCMessage base;
  char *device_id;
  char *snmp_id;
  char *snmp_alias;
  char *interface_ip;
  char *interface_ip_asn;
  protobuf_c_boolean is_internal_ip;
  protobuf_c_boolean is_internal_asn;
  size_t n_top_nexthop_asns;
  char **top_nexthop_asns;
  char *pdb_global_name;
  /*
   * current classification
   */
  Kentik__Interface__V202108alpha1__InterfaceClassification *auto_classification;
  /*
   * previous classification
   */
  Kentik__Interface__V202108alpha1__InterfaceClassification *previous_classification;
  char *provider;
  int32_t network_boundary_confidence;
  int32_t connectivity_type_confidence;
  int32_t provider_confidence;
  protobuf_c_boolean auto_classified_provider;
  char *previously_classified_provider;
  protobuf_c_boolean previously_classified_external;
  protobuf_c_boolean ip_asn_matched;
  protobuf_c_boolean ix_matched;
  protobuf_c_boolean nexthop_matched;
  protobuf_c_boolean connectivity_type_matched;
  protobuf_c_boolean provider_matched;
  protobuf_c_boolean changed_classification;
};
#define KENTIK__INTERFACE__V202108ALPHA1__INTERFACE_CLASSIFY_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__interface_classify_info__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0, 0,NULL, (char *)protobuf_c_empty_string, NULL, NULL, (char *)protobuf_c_empty_string, 0, 0, 0, 0, (char *)protobuf_c_empty_string, 0, 0, 0, 0, 0, 0, 0 }


struct  _Kentik__Interface__V202108alpha1__DeviceClassifyInfo
{
  ProtobufCMessage base;
  /*
   * ID of device.
   */
  char *device_id;
  /*
   * Total number of interfaces for this device.
   */
  int32_t total_interfaces;
  /*
   * previously_classified_ counts.
   */
  Kentik__Interface__V202108alpha1__ClassifyCounter *previously_classified_counter;
  /*
   * auto_classified_ counts.
   */
  Kentik__Interface__V202108alpha1__ClassifyCounter *auto_classified_counter;
  int32_t changed_classification_count;
  int32_t ip_asn_matched_count;
  int32_t ix_matched_count;
  int32_t nexthop_matched_count;
  int32_t connectivity_type_matched_count;
  int32_t provider_matched_count;
  /*
   * List of interfaces.
   */
  size_t n_interfaces;
  Kentik__Interface__V202108alpha1__InterfaceClassifyInfo **interfaces;
};
#define KENTIK__INTERFACE__V202108ALPHA1__DEVICE_CLASSIFY_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__device_classify_info__descriptor) \
    , (char *)protobuf_c_empty_string, 0, NULL, NULL, 0, 0, 0, 0, 0, 0, 0,NULL }


/*
 * Supports multiple search criteria. Fields are combined to AND statements to perform search.
 */
struct  _Kentik__Interface__V202108alpha1__InterfaceFilter
{
  ProtobufCMessage base;
  /*
   * Search text match in interface description and alias.
   */
  char *text;
  /*
   * Search by device ID.
   */
  size_t n_device_ids;
  char **device_ids;
  /*
   * Search by type of interface connectivity.
   */
  size_t n_connectivity_types;
  Kentik__Interface__V202108alpha1__ConnectivityType *connectivity_types;
  /*
   * Search by type of network boundary.
   */
  size_t n_network_boundaries;
  Kentik__Interface__V202108alpha1__NetworkBoundary *network_boundaries;
  /*
   * Search by provider
   */
  size_t n_providers;
  char **providers;
  /*
   * SNMP speed in Mbps
   */
  size_t n_snmp_speeds;
  int32_t *snmp_speeds;
  /*
   * Search by ip address.
   */
  size_t n_ip_types;
  Kentik__Interface__V202108alpha1__IpFilter *ip_types;
};
#define KENTIK__INTERFACE__V202108ALPHA1__INTERFACE_FILTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__interface_filter__descriptor) \
    , (char *)protobuf_c_empty_string, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL }


struct  _Kentik__Interface__V202108alpha1__AutoClassifyRequest
{
  ProtobufCMessage base;
};
#define KENTIK__INTERFACE__V202108ALPHA1__AUTO_CLASSIFY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__auto_classify_request__descriptor) \
     }


struct  _Kentik__Interface__V202108alpha1__AutoClassifyResponse
{
  ProtobufCMessage base;
  /*
   * Percent of all interfaces taht are auto calssified.
   */
  double perc_auto_classified;
  int32_t net_changed_transit;
  int32_t net_changed_ix;
  int32_t net_changed_provider;
  int32_t total_changed_classification_count;
  int32_t total_auto_classify_count;
  /*
   * total_auto_classify_ counts.
   */
  Kentik__Interface__V202108alpha1__ClassifyCounter *total_auto_classify_counter;
  /*
   * total_previous_ counts.
   */
  Kentik__Interface__V202108alpha1__ClassifyCounter *total_previous_counter;
  /*
   * Total number of interfaces.
   */
  int32_t total_interfaces;
  /*
   * List of devices.
   */
  size_t n_devices;
  Kentik__Interface__V202108alpha1__DeviceClassifyInfo **devices;
};
#define KENTIK__INTERFACE__V202108ALPHA1__AUTO_CLASSIFY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__auto_classify_response__descriptor) \
    , 0, 0, 0, 0, 0, 0, NULL, NULL, 0, 0,NULL }


/*
 * Set connection type, network boundary, and provider of interface id(s) specified.
 */
struct  _Kentik__Interface__V202108alpha1__ManualClassifyRequest
{
  ProtobufCMessage base;
  /*
   * Interface ids to set the properties.
   */
  size_t n_interface_ids;
  char **interface_ids;
  /*
   * Connection type enum.
   */
  Kentik__Interface__V202108alpha1__ConnectivityType connectivity_type;
  /*
   * Network boundary enum.
   */
  Kentik__Interface__V202108alpha1__NetworkBoundary network_boundary;
  /*
   * Network provider.
   */
  char *provider;
};
#define KENTIK__INTERFACE__V202108ALPHA1__MANUAL_CLASSIFY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__manual_classify_request__descriptor) \
    , 0,NULL, KENTIK__INTERFACE__V202108ALPHA1__CONNECTIVITY_TYPE__CONNECTIVITY_TYPE_UNSPECIFIED, KENTIK__INTERFACE__V202108ALPHA1__NETWORK_BOUNDARY__NETWORK_BOUNDARY_UNSPECIFIED, (char *)protobuf_c_empty_string }


struct  _Kentik__Interface__V202108alpha1__ManualClassifyResponse
{
  ProtobufCMessage base;
  size_t n_device_ids;
  char **device_ids;
};
#define KENTIK__INTERFACE__V202108ALPHA1__MANUAL_CLASSIFY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__manual_classify_response__descriptor) \
    , 0,NULL }


struct  _Kentik__Interface__V202108alpha1__ListInterfaceRequest
{
  ProtobufCMessage base;
  Kentik__Interface__V202108alpha1__InterfaceFilter *filters;
};
#define KENTIK__INTERFACE__V202108ALPHA1__LIST_INTERFACE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__list_interface_request__descriptor) \
    , NULL }


struct  _Kentik__Interface__V202108alpha1__ListInterfaceResponse
{
  ProtobufCMessage base;
  size_t n_interfaces;
  Kentik__Interface__V202108alpha1__Interface **interfaces;
  int32_t total_count;
  int32_t invalid_count;
};
#define KENTIK__INTERFACE__V202108ALPHA1__LIST_INTERFACE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__list_interface_response__descriptor) \
    , 0,NULL, 0, 0 }


struct  _Kentik__Interface__V202108alpha1__GetInterfaceRequest
{
  ProtobufCMessage base;
  /*
   * ID of interface.
   */
  char *id;
};
#define KENTIK__INTERFACE__V202108ALPHA1__GET_INTERFACE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__get_interface_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Kentik__Interface__V202108alpha1__GetInterfaceResponse
{
  ProtobufCMessage base;
  Kentik__Interface__V202108alpha1__Interface *interface;
};
#define KENTIK__INTERFACE__V202108ALPHA1__GET_INTERFACE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__get_interface_response__descriptor) \
    , NULL }


struct  _Kentik__Interface__V202108alpha1__CreateInterfaceRequest
{
  ProtobufCMessage base;
  Kentik__Interface__V202108alpha1__Interface *interface;
};
#define KENTIK__INTERFACE__V202108ALPHA1__CREATE_INTERFACE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__create_interface_request__descriptor) \
    , NULL }


struct  _Kentik__Interface__V202108alpha1__CreateInterfaceResponse
{
  ProtobufCMessage base;
  Kentik__Interface__V202108alpha1__Interface *interface;
};
#define KENTIK__INTERFACE__V202108ALPHA1__CREATE_INTERFACE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__create_interface_response__descriptor) \
    , NULL }


struct  _Kentik__Interface__V202108alpha1__UpdateInterfaceRequest
{
  ProtobufCMessage base;
  Kentik__Interface__V202108alpha1__Interface *interface;
};
#define KENTIK__INTERFACE__V202108ALPHA1__UPDATE_INTERFACE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__update_interface_request__descriptor) \
    , NULL }


struct  _Kentik__Interface__V202108alpha1__UpdateInterfaceResponse
{
  ProtobufCMessage base;
  Kentik__Interface__V202108alpha1__Interface *interface;
};
#define KENTIK__INTERFACE__V202108ALPHA1__UPDATE_INTERFACE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__update_interface_response__descriptor) \
    , NULL }


struct  _Kentik__Interface__V202108alpha1__DeleteInterfaceRequest
{
  ProtobufCMessage base;
  /*
   * ID of interface.
   */
  char *id;
};
#define KENTIK__INTERFACE__V202108ALPHA1__DELETE_INTERFACE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__delete_interface_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Kentik__Interface__V202108alpha1__DeleteInterfaceResponse
{
  ProtobufCMessage base;
};
#define KENTIK__INTERFACE__V202108ALPHA1__DELETE_INTERFACE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__delete_interface_response__descriptor) \
     }


struct  _Kentik__Interface__V202108alpha1__Match
{
  ProtobufCMessage base;
  /*
   * Attribute to match.
   */
  Kentik__Interface__V202108alpha1__MatchAttribute match_attribute;
  /*
   * Match operation.
   */
  Kentik__Interface__V202108alpha1__Operator match_operator;
  /*
   * Value to match by.
   */
  char *pattern;
};
#define KENTIK__INTERFACE__V202108ALPHA1__MATCH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__match__descriptor) \
    , KENTIK__INTERFACE__V202108ALPHA1__MATCH_ATTRIBUTE__MATCH_ATTRIBUTE_UNSPECIFIED, KENTIK__INTERFACE__V202108ALPHA1__OPERATOR__OPERATOR_UNSPECIFIED, (char *)protobuf_c_empty_string }


/*
 * Set the values of the interface property base on match rule defintion. Requires explicit input value, empty string is allow.
 */
struct  _Kentik__Interface__V202108alpha1__Action
{
  ProtobufCMessage base;
  /*
   * Set type of connection.
   */
  Kentik__Interface__V202108alpha1__ConnectivityType set_connectivity_type;
  /*
   * Set network boundary.
   */
  Kentik__Interface__V202108alpha1__NetworkBoundary set_network_boundary;
  /*
   * Set ASNs.
   */
  char *set_connected_asns;
  /*
   * List of providers available.
   */
  char *set_provider;
};
#define KENTIK__INTERFACE__V202108ALPHA1__ACTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__action__descriptor) \
    , KENTIK__INTERFACE__V202108ALPHA1__CONNECTIVITY_TYPE__CONNECTIVITY_TYPE_UNSPECIFIED, KENTIK__INTERFACE__V202108ALPHA1__NETWORK_BOUNDARY__NETWORK_BOUNDARY_UNSPECIFIED, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _Kentik__Interface__V202108alpha1__DeviceFilter
{
  ProtobufCMessage base;
  protobuf_c_boolean all_devices;
  size_t n_device_name;
  char **device_name;
  size_t n_device_labels;
  char **device_labels;
  size_t n_device_rules;
  char **device_rules;
  size_t n_device_types;
  char **device_types;
};
#define KENTIK__INTERFACE__V202108ALPHA1__DEVICE_FILTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__device_filter__descriptor) \
    , 0, 0,NULL, 0,NULL, 0,NULL, 0,NULL }


struct  _Kentik__Interface__V202108alpha1__Rule
{
  ProtobufCMessage base;
  /*
   * ID of interface rule.
   */
  char *id;
  /*
   * Is this rule enable.
   */
  protobuf_c_boolean enabled;
  /*
   * Rank order for apply list of rules.
   */
  int32_t rank;
  /*
   * Rule match criteria.
   */
  Kentik__Interface__V202108alpha1__Match *match_clause;
  /*
   * Action for match rule.
   */
  Kentik__Interface__V202108alpha1__Action *action_set;
  /*
   * Create timestamp.
   */
  Google__Protobuf__Timestamp *cdate;
  /*
   * Update timestamp.
   */
  Google__Protobuf__Timestamp *edate;
  /*
   * Device inclusive filters.
   */
  Kentik__Interface__V202108alpha1__DeviceFilter *included_devices;
  /*
   * Device exclusive filters.
   */
  Kentik__Interface__V202108alpha1__DeviceFilter *excluded_devices;
};
#define KENTIK__INTERFACE__V202108ALPHA1__RULE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__interface__v202108alpha1__rule__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0, NULL, NULL, NULL, NULL, NULL, NULL }


/* Kentik__Interface__V202108alpha1__Interface methods */
void   kentik__interface__v202108alpha1__interface__init
                     (Kentik__Interface__V202108alpha1__Interface         *message);
size_t kentik__interface__v202108alpha1__interface__get_packed_size
                     (const Kentik__Interface__V202108alpha1__Interface   *message);
size_t kentik__interface__v202108alpha1__interface__pack
                     (const Kentik__Interface__V202108alpha1__Interface   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__interface__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__Interface   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__Interface *
       kentik__interface__v202108alpha1__interface__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__interface__free_unpacked
                     (Kentik__Interface__V202108alpha1__Interface *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__InterfaceClassification methods */
void   kentik__interface__v202108alpha1__interface_classification__init
                     (Kentik__Interface__V202108alpha1__InterfaceClassification         *message);
size_t kentik__interface__v202108alpha1__interface_classification__get_packed_size
                     (const Kentik__Interface__V202108alpha1__InterfaceClassification   *message);
size_t kentik__interface__v202108alpha1__interface_classification__pack
                     (const Kentik__Interface__V202108alpha1__InterfaceClassification   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__interface_classification__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__InterfaceClassification   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__InterfaceClassification *
       kentik__interface__v202108alpha1__interface_classification__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__interface_classification__free_unpacked
                     (Kentik__Interface__V202108alpha1__InterfaceClassification *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__ClassifyCounter methods */
void   kentik__interface__v202108alpha1__classify_counter__init
                     (Kentik__Interface__V202108alpha1__ClassifyCounter         *message);
size_t kentik__interface__v202108alpha1__classify_counter__get_packed_size
                     (const Kentik__Interface__V202108alpha1__ClassifyCounter   *message);
size_t kentik__interface__v202108alpha1__classify_counter__pack
                     (const Kentik__Interface__V202108alpha1__ClassifyCounter   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__classify_counter__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__ClassifyCounter   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__ClassifyCounter *
       kentik__interface__v202108alpha1__classify_counter__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__classify_counter__free_unpacked
                     (Kentik__Interface__V202108alpha1__ClassifyCounter *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__InterfaceClassifyInfo methods */
void   kentik__interface__v202108alpha1__interface_classify_info__init
                     (Kentik__Interface__V202108alpha1__InterfaceClassifyInfo         *message);
size_t kentik__interface__v202108alpha1__interface_classify_info__get_packed_size
                     (const Kentik__Interface__V202108alpha1__InterfaceClassifyInfo   *message);
size_t kentik__interface__v202108alpha1__interface_classify_info__pack
                     (const Kentik__Interface__V202108alpha1__InterfaceClassifyInfo   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__interface_classify_info__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__InterfaceClassifyInfo   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__InterfaceClassifyInfo *
       kentik__interface__v202108alpha1__interface_classify_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__interface_classify_info__free_unpacked
                     (Kentik__Interface__V202108alpha1__InterfaceClassifyInfo *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__DeviceClassifyInfo methods */
void   kentik__interface__v202108alpha1__device_classify_info__init
                     (Kentik__Interface__V202108alpha1__DeviceClassifyInfo         *message);
size_t kentik__interface__v202108alpha1__device_classify_info__get_packed_size
                     (const Kentik__Interface__V202108alpha1__DeviceClassifyInfo   *message);
size_t kentik__interface__v202108alpha1__device_classify_info__pack
                     (const Kentik__Interface__V202108alpha1__DeviceClassifyInfo   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__device_classify_info__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__DeviceClassifyInfo   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__DeviceClassifyInfo *
       kentik__interface__v202108alpha1__device_classify_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__device_classify_info__free_unpacked
                     (Kentik__Interface__V202108alpha1__DeviceClassifyInfo *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__InterfaceFilter methods */
void   kentik__interface__v202108alpha1__interface_filter__init
                     (Kentik__Interface__V202108alpha1__InterfaceFilter         *message);
size_t kentik__interface__v202108alpha1__interface_filter__get_packed_size
                     (const Kentik__Interface__V202108alpha1__InterfaceFilter   *message);
size_t kentik__interface__v202108alpha1__interface_filter__pack
                     (const Kentik__Interface__V202108alpha1__InterfaceFilter   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__interface_filter__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__InterfaceFilter   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__InterfaceFilter *
       kentik__interface__v202108alpha1__interface_filter__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__interface_filter__free_unpacked
                     (Kentik__Interface__V202108alpha1__InterfaceFilter *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__AutoClassifyRequest methods */
void   kentik__interface__v202108alpha1__auto_classify_request__init
                     (Kentik__Interface__V202108alpha1__AutoClassifyRequest         *message);
size_t kentik__interface__v202108alpha1__auto_classify_request__get_packed_size
                     (const Kentik__Interface__V202108alpha1__AutoClassifyRequest   *message);
size_t kentik__interface__v202108alpha1__auto_classify_request__pack
                     (const Kentik__Interface__V202108alpha1__AutoClassifyRequest   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__auto_classify_request__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__AutoClassifyRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__AutoClassifyRequest *
       kentik__interface__v202108alpha1__auto_classify_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__auto_classify_request__free_unpacked
                     (Kentik__Interface__V202108alpha1__AutoClassifyRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__AutoClassifyResponse methods */
void   kentik__interface__v202108alpha1__auto_classify_response__init
                     (Kentik__Interface__V202108alpha1__AutoClassifyResponse         *message);
size_t kentik__interface__v202108alpha1__auto_classify_response__get_packed_size
                     (const Kentik__Interface__V202108alpha1__AutoClassifyResponse   *message);
size_t kentik__interface__v202108alpha1__auto_classify_response__pack
                     (const Kentik__Interface__V202108alpha1__AutoClassifyResponse   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__auto_classify_response__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__AutoClassifyResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__AutoClassifyResponse *
       kentik__interface__v202108alpha1__auto_classify_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__auto_classify_response__free_unpacked
                     (Kentik__Interface__V202108alpha1__AutoClassifyResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__ManualClassifyRequest methods */
void   kentik__interface__v202108alpha1__manual_classify_request__init
                     (Kentik__Interface__V202108alpha1__ManualClassifyRequest         *message);
size_t kentik__interface__v202108alpha1__manual_classify_request__get_packed_size
                     (const Kentik__Interface__V202108alpha1__ManualClassifyRequest   *message);
size_t kentik__interface__v202108alpha1__manual_classify_request__pack
                     (const Kentik__Interface__V202108alpha1__ManualClassifyRequest   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__manual_classify_request__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__ManualClassifyRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__ManualClassifyRequest *
       kentik__interface__v202108alpha1__manual_classify_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__manual_classify_request__free_unpacked
                     (Kentik__Interface__V202108alpha1__ManualClassifyRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__ManualClassifyResponse methods */
void   kentik__interface__v202108alpha1__manual_classify_response__init
                     (Kentik__Interface__V202108alpha1__ManualClassifyResponse         *message);
size_t kentik__interface__v202108alpha1__manual_classify_response__get_packed_size
                     (const Kentik__Interface__V202108alpha1__ManualClassifyResponse   *message);
size_t kentik__interface__v202108alpha1__manual_classify_response__pack
                     (const Kentik__Interface__V202108alpha1__ManualClassifyResponse   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__manual_classify_response__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__ManualClassifyResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__ManualClassifyResponse *
       kentik__interface__v202108alpha1__manual_classify_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__manual_classify_response__free_unpacked
                     (Kentik__Interface__V202108alpha1__ManualClassifyResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__ListInterfaceRequest methods */
void   kentik__interface__v202108alpha1__list_interface_request__init
                     (Kentik__Interface__V202108alpha1__ListInterfaceRequest         *message);
size_t kentik__interface__v202108alpha1__list_interface_request__get_packed_size
                     (const Kentik__Interface__V202108alpha1__ListInterfaceRequest   *message);
size_t kentik__interface__v202108alpha1__list_interface_request__pack
                     (const Kentik__Interface__V202108alpha1__ListInterfaceRequest   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__list_interface_request__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__ListInterfaceRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__ListInterfaceRequest *
       kentik__interface__v202108alpha1__list_interface_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__list_interface_request__free_unpacked
                     (Kentik__Interface__V202108alpha1__ListInterfaceRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__ListInterfaceResponse methods */
void   kentik__interface__v202108alpha1__list_interface_response__init
                     (Kentik__Interface__V202108alpha1__ListInterfaceResponse         *message);
size_t kentik__interface__v202108alpha1__list_interface_response__get_packed_size
                     (const Kentik__Interface__V202108alpha1__ListInterfaceResponse   *message);
size_t kentik__interface__v202108alpha1__list_interface_response__pack
                     (const Kentik__Interface__V202108alpha1__ListInterfaceResponse   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__list_interface_response__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__ListInterfaceResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__ListInterfaceResponse *
       kentik__interface__v202108alpha1__list_interface_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__list_interface_response__free_unpacked
                     (Kentik__Interface__V202108alpha1__ListInterfaceResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__GetInterfaceRequest methods */
void   kentik__interface__v202108alpha1__get_interface_request__init
                     (Kentik__Interface__V202108alpha1__GetInterfaceRequest         *message);
size_t kentik__interface__v202108alpha1__get_interface_request__get_packed_size
                     (const Kentik__Interface__V202108alpha1__GetInterfaceRequest   *message);
size_t kentik__interface__v202108alpha1__get_interface_request__pack
                     (const Kentik__Interface__V202108alpha1__GetInterfaceRequest   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__get_interface_request__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__GetInterfaceRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__GetInterfaceRequest *
       kentik__interface__v202108alpha1__get_interface_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__get_interface_request__free_unpacked
                     (Kentik__Interface__V202108alpha1__GetInterfaceRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__GetInterfaceResponse methods */
void   kentik__interface__v202108alpha1__get_interface_response__init
                     (Kentik__Interface__V202108alpha1__GetInterfaceResponse         *message);
size_t kentik__interface__v202108alpha1__get_interface_response__get_packed_size
                     (const Kentik__Interface__V202108alpha1__GetInterfaceResponse   *message);
size_t kentik__interface__v202108alpha1__get_interface_response__pack
                     (const Kentik__Interface__V202108alpha1__GetInterfaceResponse   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__get_interface_response__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__GetInterfaceResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__GetInterfaceResponse *
       kentik__interface__v202108alpha1__get_interface_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__get_interface_response__free_unpacked
                     (Kentik__Interface__V202108alpha1__GetInterfaceResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__CreateInterfaceRequest methods */
void   kentik__interface__v202108alpha1__create_interface_request__init
                     (Kentik__Interface__V202108alpha1__CreateInterfaceRequest         *message);
size_t kentik__interface__v202108alpha1__create_interface_request__get_packed_size
                     (const Kentik__Interface__V202108alpha1__CreateInterfaceRequest   *message);
size_t kentik__interface__v202108alpha1__create_interface_request__pack
                     (const Kentik__Interface__V202108alpha1__CreateInterfaceRequest   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__create_interface_request__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__CreateInterfaceRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__CreateInterfaceRequest *
       kentik__interface__v202108alpha1__create_interface_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__create_interface_request__free_unpacked
                     (Kentik__Interface__V202108alpha1__CreateInterfaceRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__CreateInterfaceResponse methods */
void   kentik__interface__v202108alpha1__create_interface_response__init
                     (Kentik__Interface__V202108alpha1__CreateInterfaceResponse         *message);
size_t kentik__interface__v202108alpha1__create_interface_response__get_packed_size
                     (const Kentik__Interface__V202108alpha1__CreateInterfaceResponse   *message);
size_t kentik__interface__v202108alpha1__create_interface_response__pack
                     (const Kentik__Interface__V202108alpha1__CreateInterfaceResponse   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__create_interface_response__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__CreateInterfaceResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__CreateInterfaceResponse *
       kentik__interface__v202108alpha1__create_interface_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__create_interface_response__free_unpacked
                     (Kentik__Interface__V202108alpha1__CreateInterfaceResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__UpdateInterfaceRequest methods */
void   kentik__interface__v202108alpha1__update_interface_request__init
                     (Kentik__Interface__V202108alpha1__UpdateInterfaceRequest         *message);
size_t kentik__interface__v202108alpha1__update_interface_request__get_packed_size
                     (const Kentik__Interface__V202108alpha1__UpdateInterfaceRequest   *message);
size_t kentik__interface__v202108alpha1__update_interface_request__pack
                     (const Kentik__Interface__V202108alpha1__UpdateInterfaceRequest   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__update_interface_request__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__UpdateInterfaceRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__UpdateInterfaceRequest *
       kentik__interface__v202108alpha1__update_interface_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__update_interface_request__free_unpacked
                     (Kentik__Interface__V202108alpha1__UpdateInterfaceRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__UpdateInterfaceResponse methods */
void   kentik__interface__v202108alpha1__update_interface_response__init
                     (Kentik__Interface__V202108alpha1__UpdateInterfaceResponse         *message);
size_t kentik__interface__v202108alpha1__update_interface_response__get_packed_size
                     (const Kentik__Interface__V202108alpha1__UpdateInterfaceResponse   *message);
size_t kentik__interface__v202108alpha1__update_interface_response__pack
                     (const Kentik__Interface__V202108alpha1__UpdateInterfaceResponse   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__update_interface_response__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__UpdateInterfaceResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__UpdateInterfaceResponse *
       kentik__interface__v202108alpha1__update_interface_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__update_interface_response__free_unpacked
                     (Kentik__Interface__V202108alpha1__UpdateInterfaceResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__DeleteInterfaceRequest methods */
void   kentik__interface__v202108alpha1__delete_interface_request__init
                     (Kentik__Interface__V202108alpha1__DeleteInterfaceRequest         *message);
size_t kentik__interface__v202108alpha1__delete_interface_request__get_packed_size
                     (const Kentik__Interface__V202108alpha1__DeleteInterfaceRequest   *message);
size_t kentik__interface__v202108alpha1__delete_interface_request__pack
                     (const Kentik__Interface__V202108alpha1__DeleteInterfaceRequest   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__delete_interface_request__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__DeleteInterfaceRequest   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__DeleteInterfaceRequest *
       kentik__interface__v202108alpha1__delete_interface_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__delete_interface_request__free_unpacked
                     (Kentik__Interface__V202108alpha1__DeleteInterfaceRequest *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__DeleteInterfaceResponse methods */
void   kentik__interface__v202108alpha1__delete_interface_response__init
                     (Kentik__Interface__V202108alpha1__DeleteInterfaceResponse         *message);
size_t kentik__interface__v202108alpha1__delete_interface_response__get_packed_size
                     (const Kentik__Interface__V202108alpha1__DeleteInterfaceResponse   *message);
size_t kentik__interface__v202108alpha1__delete_interface_response__pack
                     (const Kentik__Interface__V202108alpha1__DeleteInterfaceResponse   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__delete_interface_response__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__DeleteInterfaceResponse   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__DeleteInterfaceResponse *
       kentik__interface__v202108alpha1__delete_interface_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__delete_interface_response__free_unpacked
                     (Kentik__Interface__V202108alpha1__DeleteInterfaceResponse *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__Match methods */
void   kentik__interface__v202108alpha1__match__init
                     (Kentik__Interface__V202108alpha1__Match         *message);
size_t kentik__interface__v202108alpha1__match__get_packed_size
                     (const Kentik__Interface__V202108alpha1__Match   *message);
size_t kentik__interface__v202108alpha1__match__pack
                     (const Kentik__Interface__V202108alpha1__Match   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__match__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__Match   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__Match *
       kentik__interface__v202108alpha1__match__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__match__free_unpacked
                     (Kentik__Interface__V202108alpha1__Match *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__Action methods */
void   kentik__interface__v202108alpha1__action__init
                     (Kentik__Interface__V202108alpha1__Action         *message);
size_t kentik__interface__v202108alpha1__action__get_packed_size
                     (const Kentik__Interface__V202108alpha1__Action   *message);
size_t kentik__interface__v202108alpha1__action__pack
                     (const Kentik__Interface__V202108alpha1__Action   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__action__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__Action   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__Action *
       kentik__interface__v202108alpha1__action__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__action__free_unpacked
                     (Kentik__Interface__V202108alpha1__Action *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__DeviceFilter methods */
void   kentik__interface__v202108alpha1__device_filter__init
                     (Kentik__Interface__V202108alpha1__DeviceFilter         *message);
size_t kentik__interface__v202108alpha1__device_filter__get_packed_size
                     (const Kentik__Interface__V202108alpha1__DeviceFilter   *message);
size_t kentik__interface__v202108alpha1__device_filter__pack
                     (const Kentik__Interface__V202108alpha1__DeviceFilter   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__device_filter__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__DeviceFilter   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__DeviceFilter *
       kentik__interface__v202108alpha1__device_filter__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__device_filter__free_unpacked
                     (Kentik__Interface__V202108alpha1__DeviceFilter *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Interface__V202108alpha1__Rule methods */
void   kentik__interface__v202108alpha1__rule__init
                     (Kentik__Interface__V202108alpha1__Rule         *message);
size_t kentik__interface__v202108alpha1__rule__get_packed_size
                     (const Kentik__Interface__V202108alpha1__Rule   *message);
size_t kentik__interface__v202108alpha1__rule__pack
                     (const Kentik__Interface__V202108alpha1__Rule   *message,
                      uint8_t             *out);
size_t kentik__interface__v202108alpha1__rule__pack_to_buffer
                     (const Kentik__Interface__V202108alpha1__Rule   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Interface__V202108alpha1__Rule *
       kentik__interface__v202108alpha1__rule__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__interface__v202108alpha1__rule__free_unpacked
                     (Kentik__Interface__V202108alpha1__Rule *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Kentik__Interface__V202108alpha1__Interface_Closure)
                 (const Kentik__Interface__V202108alpha1__Interface *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__InterfaceClassification_Closure)
                 (const Kentik__Interface__V202108alpha1__InterfaceClassification *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__ClassifyCounter_Closure)
                 (const Kentik__Interface__V202108alpha1__ClassifyCounter *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__InterfaceClassifyInfo_Closure)
                 (const Kentik__Interface__V202108alpha1__InterfaceClassifyInfo *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__DeviceClassifyInfo_Closure)
                 (const Kentik__Interface__V202108alpha1__DeviceClassifyInfo *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__InterfaceFilter_Closure)
                 (const Kentik__Interface__V202108alpha1__InterfaceFilter *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__AutoClassifyRequest_Closure)
                 (const Kentik__Interface__V202108alpha1__AutoClassifyRequest *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__AutoClassifyResponse_Closure)
                 (const Kentik__Interface__V202108alpha1__AutoClassifyResponse *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__ManualClassifyRequest_Closure)
                 (const Kentik__Interface__V202108alpha1__ManualClassifyRequest *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__ManualClassifyResponse_Closure)
                 (const Kentik__Interface__V202108alpha1__ManualClassifyResponse *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__ListInterfaceRequest_Closure)
                 (const Kentik__Interface__V202108alpha1__ListInterfaceRequest *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__ListInterfaceResponse_Closure)
                 (const Kentik__Interface__V202108alpha1__ListInterfaceResponse *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__GetInterfaceRequest_Closure)
                 (const Kentik__Interface__V202108alpha1__GetInterfaceRequest *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__GetInterfaceResponse_Closure)
                 (const Kentik__Interface__V202108alpha1__GetInterfaceResponse *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__CreateInterfaceRequest_Closure)
                 (const Kentik__Interface__V202108alpha1__CreateInterfaceRequest *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__CreateInterfaceResponse_Closure)
                 (const Kentik__Interface__V202108alpha1__CreateInterfaceResponse *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__UpdateInterfaceRequest_Closure)
                 (const Kentik__Interface__V202108alpha1__UpdateInterfaceRequest *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__UpdateInterfaceResponse_Closure)
                 (const Kentik__Interface__V202108alpha1__UpdateInterfaceResponse *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__DeleteInterfaceRequest_Closure)
                 (const Kentik__Interface__V202108alpha1__DeleteInterfaceRequest *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__DeleteInterfaceResponse_Closure)
                 (const Kentik__Interface__V202108alpha1__DeleteInterfaceResponse *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__Match_Closure)
                 (const Kentik__Interface__V202108alpha1__Match *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__Action_Closure)
                 (const Kentik__Interface__V202108alpha1__Action *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__DeviceFilter_Closure)
                 (const Kentik__Interface__V202108alpha1__DeviceFilter *message,
                  void *closure_data);
typedef void (*Kentik__Interface__V202108alpha1__Rule_Closure)
                 (const Kentik__Interface__V202108alpha1__Rule *message,
                  void *closure_data);

/* --- services --- */

typedef struct _Kentik__Interface__V202108alpha1__InterfaceService_Service Kentik__Interface__V202108alpha1__InterfaceService_Service;
struct _Kentik__Interface__V202108alpha1__InterfaceService_Service
{
  ProtobufCService base;
  void (*manual_classify)(Kentik__Interface__V202108alpha1__InterfaceService_Service *service,
                          const Kentik__Interface__V202108alpha1__ManualClassifyRequest *input,
                          Kentik__Interface__V202108alpha1__ManualClassifyResponse_Closure closure,
                          void *closure_data);
  void (*list_interface)(Kentik__Interface__V202108alpha1__InterfaceService_Service *service,
                         const Kentik__Interface__V202108alpha1__ListInterfaceRequest *input,
                         Kentik__Interface__V202108alpha1__ListInterfaceResponse_Closure closure,
                         void *closure_data);
  void (*get_interface)(Kentik__Interface__V202108alpha1__InterfaceService_Service *service,
                        const Kentik__Interface__V202108alpha1__GetInterfaceRequest *input,
                        Kentik__Interface__V202108alpha1__GetInterfaceResponse_Closure closure,
                        void *closure_data);
  void (*create_interface)(Kentik__Interface__V202108alpha1__InterfaceService_Service *service,
                           const Kentik__Interface__V202108alpha1__CreateInterfaceRequest *input,
                           Kentik__Interface__V202108alpha1__CreateInterfaceResponse_Closure closure,
                           void *closure_data);
  void (*update_interface)(Kentik__Interface__V202108alpha1__InterfaceService_Service *service,
                           const Kentik__Interface__V202108alpha1__UpdateInterfaceRequest *input,
                           Kentik__Interface__V202108alpha1__UpdateInterfaceResponse_Closure closure,
                           void *closure_data);
  void (*delete_interface)(Kentik__Interface__V202108alpha1__InterfaceService_Service *service,
                           const Kentik__Interface__V202108alpha1__DeleteInterfaceRequest *input,
                           Kentik__Interface__V202108alpha1__DeleteInterfaceResponse_Closure closure,
                           void *closure_data);
};
typedef void (*Kentik__Interface__V202108alpha1__InterfaceService_ServiceDestroy)(Kentik__Interface__V202108alpha1__InterfaceService_Service *);
void kentik__interface__v202108alpha1__interface_service__init (Kentik__Interface__V202108alpha1__InterfaceService_Service *service,
                                                                Kentik__Interface__V202108alpha1__InterfaceService_ServiceDestroy destroy);
#define KENTIK__INTERFACE__V202108ALPHA1__INTERFACE_SERVICE__BASE_INIT \
    { &kentik__interface__v202108alpha1__interface_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define KENTIK__INTERFACE__V202108ALPHA1__INTERFACE_SERVICE__INIT(function_prefix__) \
    { KENTIK__INTERFACE__V202108ALPHA1__INTERFACE_SERVICE__BASE_INIT,\
      function_prefix__ ## manual_classify,\
      function_prefix__ ## list_interface,\
      function_prefix__ ## get_interface,\
      function_prefix__ ## create_interface,\
      function_prefix__ ## update_interface,\
      function_prefix__ ## delete_interface  }
void kentik__interface__v202108alpha1__interface_service__manual_classify(ProtobufCService *service,
                                                                          const Kentik__Interface__V202108alpha1__ManualClassifyRequest *input,
                                                                          Kentik__Interface__V202108alpha1__ManualClassifyResponse_Closure closure,
                                                                          void *closure_data);
void kentik__interface__v202108alpha1__interface_service__list_interface(ProtobufCService *service,
                                                                         const Kentik__Interface__V202108alpha1__ListInterfaceRequest *input,
                                                                         Kentik__Interface__V202108alpha1__ListInterfaceResponse_Closure closure,
                                                                         void *closure_data);
void kentik__interface__v202108alpha1__interface_service__get_interface(ProtobufCService *service,
                                                                        const Kentik__Interface__V202108alpha1__GetInterfaceRequest *input,
                                                                        Kentik__Interface__V202108alpha1__GetInterfaceResponse_Closure closure,
                                                                        void *closure_data);
void kentik__interface__v202108alpha1__interface_service__create_interface(ProtobufCService *service,
                                                                           const Kentik__Interface__V202108alpha1__CreateInterfaceRequest *input,
                                                                           Kentik__Interface__V202108alpha1__CreateInterfaceResponse_Closure closure,
                                                                           void *closure_data);
void kentik__interface__v202108alpha1__interface_service__update_interface(ProtobufCService *service,
                                                                           const Kentik__Interface__V202108alpha1__UpdateInterfaceRequest *input,
                                                                           Kentik__Interface__V202108alpha1__UpdateInterfaceResponse_Closure closure,
                                                                           void *closure_data);
void kentik__interface__v202108alpha1__interface_service__delete_interface(ProtobufCService *service,
                                                                           const Kentik__Interface__V202108alpha1__DeleteInterfaceRequest *input,
                                                                           Kentik__Interface__V202108alpha1__DeleteInterfaceResponse_Closure closure,
                                                                           void *closure_data);

/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    kentik__interface__v202108alpha1__connectivity_type__descriptor;
extern const ProtobufCEnumDescriptor    kentik__interface__v202108alpha1__network_boundary__descriptor;
extern const ProtobufCEnumDescriptor    kentik__interface__v202108alpha1__ip_filter__descriptor;
extern const ProtobufCEnumDescriptor    kentik__interface__v202108alpha1__match_attribute__descriptor;
extern const ProtobufCEnumDescriptor    kentik__interface__v202108alpha1__operator__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__interface__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__interface_classification__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__classify_counter__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__interface_classify_info__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__device_classify_info__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__interface_filter__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__auto_classify_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__auto_classify_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__manual_classify_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__manual_classify_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__list_interface_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__list_interface_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__get_interface_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__get_interface_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__create_interface_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__create_interface_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__update_interface_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__update_interface_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__delete_interface_request__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__delete_interface_response__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__match__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__action__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__device_filter__descriptor;
extern const ProtobufCMessageDescriptor kentik__interface__v202108alpha1__rule__descriptor;
extern const ProtobufCServiceDescriptor kentik__interface__v202108alpha1__interface_service__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_kentik_2finterface_2fv202108alpha1_2finterface_2eproto__INCLUDED */
