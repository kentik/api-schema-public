/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: kentik/plan/v202501alpha1/plan_message.proto */

#ifndef PROTOBUF_C_kentik_2fplan_2fv202501alpha1_2fplan_5fmessage_2eproto__INCLUDED
#define PROTOBUF_C_kentik_2fplan_2fv202501alpha1_2fplan_5fmessage_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "google/api/annotations.pb-c.h"
#include "google/api/client.pb-c.h"
#include "google/api/field_behavior.pb-c.h"
#include "protoc-gen-openapiv2/options/annotations.pb-c.h"
#include "google/protobuf/timestamp.pb-c.h"

typedef struct Kentik__Plan__V202501alpha1__PlanDevice Kentik__Plan__V202501alpha1__PlanDevice;
typedef struct Kentik__Plan__V202501alpha1__Plan Kentik__Plan__V202501alpha1__Plan;
typedef struct Kentik__Plan__V202501alpha1__Plan__MetadataEntry Kentik__Plan__V202501alpha1__Plan__MetadataEntry;


/* --- enums --- */

/*
 * Device Subtype Enum (see https://kb.kentik.com/v4/Cb01.htm#Cb01-Supported_Device_Types)
 * note, this could be moved to a shared location if used by other services
 */
typedef enum _Kentik__Plan__V202501alpha1__DeviceSubtype {
  /*
   * Unspecified (default value)
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_UNSPECIFIED = 0,
  /*
   * A10 CGN
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_A10_CGN = 1,
  /*
   * Advanced sFlow
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_ADVANCED_SFLOW = 2,
  /*
   * Amazon Web Services
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_AWS_SUBNET = 3,
  /*
   * Microsoft Azure
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_AZURE_SUBNET = 4,
  /*
   * Cisco ASA
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_CISCO_ASA = 5,
  /*
   * Cisco ASA (Syslog)
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_CISCO_ASA_SYSLOG = 6,
  /*
   * Cisco NBAR-Enabled Router
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_CISCO_NBAR = 7,
  /*
   * Cisco nvzFlow
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_CISCO_NVZFLOW = 8,
  /*
   * Cisco SD-WAN IOS XE
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_CISCO_SDWAN_XE = 9,
  /*
   * Cisco Zone-Based Firewall
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_CISCO_ZONE_BASED_FIREWALL = 10,
  /*
   * Kentik-internal value, darknet stream
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_DARKNET = 11,
  /*
   * Fortinet FortiGate
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_FORTINET_FORTIGATE = 12,
  /*
   * Google Cloud Run
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_GCP_CLOUD_RUN = 13,
  /*
   * Google Cloud Platform
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_GCP_SUBNET = 14,
  /*
   * Gigamon Network Tap
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_GIGAMON = 15,
  /*
   * IBM Cloud Platform
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_IBM_SUBNET = 16,
  /*
   * Cisco IOS XR
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_IOS_XR = 17,
  /*
   * Istio (Beta)
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_ISTIO = 18,
  /*
   * Juniper DDoS Flow
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_JUNIPER_DDOS = 19,
  /*
   * kentik agent
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_KAGENT = 20,
  /*
   * Process-Aware Telemetry Agent
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_KAPPA = 21,
  /*
   * Virtual device for storing kmetrics data
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_KMETRICS = 22,
  /*
   * Kentik Host Agent (kprobe)
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_KPROBE = 23,
  /*
   * kProbe True Origin Tap
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_KROBE_TAP = 24,
  /*
   * kproxy agent
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_KPROXY = 25,
  /*
   * Cisco Meraki
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_MERAKI = 26,
  /*
   * MPLS Router
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_MPLS = 27,
  /*
   * Nokia Layer 2
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_NOKIALAYER2 = 28,
  /*
   * ntop Host Agent (nProbe)
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_NPROBE = 29,
  /*
   * OCI Flow Log
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_OCI_FLOW_LOG = 30,
  /*
   * Oracle Cloud Infrastructure
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_OCI_SUBNET = 31,
  /*
   * OpenNMS SNMP Export Device
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_OPEN_NMS = 32,
  /*
   * Palo Alto Networks Firewall
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_PALOALTO = 33,
  /*
   * Palo Alto Prisma SD-WAN
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_PALOALTO_PRISMASDWAN = 34,
  /*
   * Juniper PFE (Syslog)
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_PFE_SYSLOG = 35,
  /*
   * NetFlow-Enabled Router
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_ROUTER = 36,
  /*
   * sFlow Tunnel decode
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_SFLOW_TUNNEL = 37,
  /*
   * Silver Peak EdgeConnect
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_SILVERPEAK = 38,
  /*
   * Generic Syslog
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_SYSLOG = 39,
  /*
   * Versa
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_VERSA = 40,
  /*
   * Cisco SDWAN vEdge
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_VIPTELA = 41,
  /*
   * VMware SD-WAN
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_VMWARE_VELOCLOUD = 42,
  /*
   * VMWare vSphere
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_VMWARE_VSPHERE = 43,
  /*
   * VXLAN
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_VXLAN = 44,
  /*
   * Kentik-internal value
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_KSYNTH = 45,
  /*
   * Kentik-internal value
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_SDM_LEADER = 46,
  /*
   * Kentik-internal value
   */
  KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_HOST_NPROBE_DNS_WWW = 47
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE)
} Kentik__Plan__V202501alpha1__DeviceSubtype;

/* --- messages --- */

/*
 * Represents a device that is associated with a plan.
 */
struct  Kentik__Plan__V202501alpha1__PlanDevice
{
  ProtobufCMessage base;
  char *id;
  char *device_name;
  Kentik__Plan__V202501alpha1__DeviceSubtype device_subtype;
  Kentik__Plan__V202501alpha1__DeviceSubtype device_type;
};
#define KENTIK__PLAN__V202501ALPHA1__PLAN_DEVICE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__plan__v202501alpha1__plan_device__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_UNSPECIFIED, KENTIK__PLAN__V202501ALPHA1__DEVICE_SUBTYPE__DEVICE_SUBTYPE_UNSPECIFIED }


struct  Kentik__Plan__V202501alpha1__Plan__MetadataEntry
{
  ProtobufCMessage base;
  char *key;
  char *value;
};
#define KENTIK__PLAN__V202501ALPHA1__PLAN__METADATA_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__plan__v202501alpha1__plan__metadata_entry__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * Represents a plan object.
 */
struct  Kentik__Plan__V202501alpha1__Plan
{
  ProtobufCMessage base;
  char *id;
  char *company_id;
  char *name;
  char *description;
  protobuf_c_boolean active;
  int32_t max_devices;
  int32_t max_fps;
  protobuf_c_boolean bgp_enabled;
  int32_t fast_retention;
  int32_t full_retention;
  Google__Protobuf__Timestamp *created_date;
  Google__Protobuf__Timestamp *updated_date;
  int32_t max_bigdata_fps;
  size_t n_device_types;
  Kentik__Plan__V202501alpha1__DeviceSubtype *device_types;
  size_t n_devices;
  Kentik__Plan__V202501alpha1__PlanDevice **devices;
  size_t n_metadata;
  Kentik__Plan__V202501alpha1__Plan__MetadataEntry **metadata;
};
#define KENTIK__PLAN__V202501ALPHA1__PLAN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__plan__v202501alpha1__plan__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0, 0, 0, 0, 0, NULL, NULL, 0, 0,NULL, 0,NULL, 0,NULL }


/* Kentik__Plan__V202501alpha1__PlanDevice methods */
void   kentik__plan__v202501alpha1__plan_device__init
                     (Kentik__Plan__V202501alpha1__PlanDevice         *message);
size_t kentik__plan__v202501alpha1__plan_device__get_packed_size
                     (const Kentik__Plan__V202501alpha1__PlanDevice   *message);
size_t kentik__plan__v202501alpha1__plan_device__pack
                     (const Kentik__Plan__V202501alpha1__PlanDevice   *message,
                      uint8_t             *out);
size_t kentik__plan__v202501alpha1__plan_device__pack_to_buffer
                     (const Kentik__Plan__V202501alpha1__PlanDevice   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Plan__V202501alpha1__PlanDevice *
       kentik__plan__v202501alpha1__plan_device__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__plan__v202501alpha1__plan_device__free_unpacked
                     (Kentik__Plan__V202501alpha1__PlanDevice *message,
                      ProtobufCAllocator *allocator);
/* Kentik__Plan__V202501alpha1__Plan__MetadataEntry methods */
void   kentik__plan__v202501alpha1__plan__metadata_entry__init
                     (Kentik__Plan__V202501alpha1__Plan__MetadataEntry         *message);
/* Kentik__Plan__V202501alpha1__Plan methods */
void   kentik__plan__v202501alpha1__plan__init
                     (Kentik__Plan__V202501alpha1__Plan         *message);
size_t kentik__plan__v202501alpha1__plan__get_packed_size
                     (const Kentik__Plan__V202501alpha1__Plan   *message);
size_t kentik__plan__v202501alpha1__plan__pack
                     (const Kentik__Plan__V202501alpha1__Plan   *message,
                      uint8_t             *out);
size_t kentik__plan__v202501alpha1__plan__pack_to_buffer
                     (const Kentik__Plan__V202501alpha1__Plan   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Plan__V202501alpha1__Plan *
       kentik__plan__v202501alpha1__plan__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__plan__v202501alpha1__plan__free_unpacked
                     (Kentik__Plan__V202501alpha1__Plan *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Kentik__Plan__V202501alpha1__PlanDevice_Closure)
                 (const Kentik__Plan__V202501alpha1__PlanDevice *message,
                  void *closure_data);
typedef void (*Kentik__Plan__V202501alpha1__Plan__MetadataEntry_Closure)
                 (const Kentik__Plan__V202501alpha1__Plan__MetadataEntry *message,
                  void *closure_data);
typedef void (*Kentik__Plan__V202501alpha1__Plan_Closure)
                 (const Kentik__Plan__V202501alpha1__Plan *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    kentik__plan__v202501alpha1__device_subtype__descriptor;
extern const ProtobufCMessageDescriptor kentik__plan__v202501alpha1__plan_device__descriptor;
extern const ProtobufCMessageDescriptor kentik__plan__v202501alpha1__plan__descriptor;
extern const ProtobufCMessageDescriptor kentik__plan__v202501alpha1__plan__metadata_entry__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_kentik_2fplan_2fv202501alpha1_2fplan_5fmessage_2eproto__INCLUDED */
