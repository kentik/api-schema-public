/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: kentik/net/v202303/bgp_types.proto */

#ifndef PROTOBUF_C_kentik_2fnet_2fv202303_2fbgp_5ftypes_2eproto__INCLUDED
#define PROTOBUF_C_kentik_2fnet_2fv202303_2fbgp_5ftypes_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "google/api/field_behavior.pb-c.h"
#include "protoc-gen-openapiv2/options/annotations.pb-c.h"

typedef struct Kentik__Net__V202303__VantagePoint Kentik__Net__V202303__VantagePoint;


/* --- enums --- */

/*
 * {{.Name}}
 */
typedef enum _Kentik__Net__V202303__Afi {
  KENTIK__NET__V202303__AFI__AFI_UNSPECIFIED = 0,
  KENTIK__NET__V202303__AFI__AFI_IP4 = 1,
  KENTIK__NET__V202303__AFI__AFI_IP6 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__NET__V202303__AFI)
} Kentik__Net__V202303__Afi;
/*
 * {{.Name}}
 */
typedef enum _Kentik__Net__V202303__Safi {
  KENTIK__NET__V202303__SAFI__SAFI_UNSPECIFIED = 0,
  KENTIK__NET__V202303__SAFI__SAFI_UNICAST = 1,
  KENTIK__NET__V202303__SAFI__SAFI_MPLS = 4,
  KENTIK__NET__V202303__SAFI__SAFI_L3VPN = 128
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__NET__V202303__SAFI)
} Kentik__Net__V202303__Safi;
/*
 * {{.Name}}
 */
typedef enum _Kentik__Net__V202303__RpkiStatus {
  /*
   * Invalid value.
   */
  KENTIK__NET__V202303__RPKI_STATUS__RPKI_STATUS_UNSPECIFIED = 0,
  /*
   * No matching ROAs found for the prefix.
   */
  KENTIK__NET__V202303__RPKI_STATUS__RPKI_STATUS_NOT_FOUND = 1,
  /*
   * Explicitly invalid prefix matching ROA
   */
  KENTIK__NET__V202303__RPKI_STATUS__RPKI_STATUS_EXPLICIT_INVALID = 2,
  /*
   * Prefix format not suitable for validation
   */
  KENTIK__NET__V202303__RPKI_STATUS__RPKI_STATUS_INVALID_PREFIX = 3,
  /*
   * Prefix origin does not match any matching ROA
   */
  KENTIK__NET__V202303__RPKI_STATUS__RPKI_STATUS_INVALID = 4,
  /*
   * Prefix origin matches an ROA
   */
  KENTIK__NET__V202303__RPKI_STATUS__RPKI_STATUS_VALID = 5,
  /*
   * Error during validation
   */
  KENTIK__NET__V202303__RPKI_STATUS__RPKI_STATUS_ERROR = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(KENTIK__NET__V202303__RPKI_STATUS)
} Kentik__Net__V202303__RpkiStatus;

/* --- messages --- */

/*
 * {{.Name}}
 */
struct  Kentik__Net__V202303__VantagePoint
{
  ProtobufCMessage base;
  char *dataset;
  char *collector;
  uint32_t peer_asn;
  char *peer_ip;
};
#define KENTIK__NET__V202303__VANTAGE_POINT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kentik__net__v202303__vantage_point__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string }


/* Kentik__Net__V202303__VantagePoint methods */
void   kentik__net__v202303__vantage_point__init
                     (Kentik__Net__V202303__VantagePoint         *message);
size_t kentik__net__v202303__vantage_point__get_packed_size
                     (const Kentik__Net__V202303__VantagePoint   *message);
size_t kentik__net__v202303__vantage_point__pack
                     (const Kentik__Net__V202303__VantagePoint   *message,
                      uint8_t             *out);
size_t kentik__net__v202303__vantage_point__pack_to_buffer
                     (const Kentik__Net__V202303__VantagePoint   *message,
                      ProtobufCBuffer     *buffer);
Kentik__Net__V202303__VantagePoint *
       kentik__net__v202303__vantage_point__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kentik__net__v202303__vantage_point__free_unpacked
                     (Kentik__Net__V202303__VantagePoint *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Kentik__Net__V202303__VantagePoint_Closure)
                 (const Kentik__Net__V202303__VantagePoint *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    kentik__net__v202303__afi__descriptor;
extern const ProtobufCEnumDescriptor    kentik__net__v202303__safi__descriptor;
extern const ProtobufCEnumDescriptor    kentik__net__v202303__rpki_status__descriptor;
extern const ProtobufCMessageDescriptor kentik__net__v202303__vantage_point__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_kentik_2fnet_2fv202303_2fbgp_5ftypes_2eproto__INCLUDED */
