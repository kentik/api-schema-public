/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: google/type/fraction.proto */

#ifndef PROTOBUF_C_google_2ftype_2ffraction_2eproto__INCLUDED
#define PROTOBUF_C_google_2ftype_2ffraction_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Google__Type__Fraction Google__Type__Fraction;


/* --- enums --- */


/* --- messages --- */

/*
 * Represents a fraction in terms of a numerator divided by a denominator.
 */
struct  _Google__Type__Fraction
{
  ProtobufCMessage base;
  /*
   * The numerator in the fraction, e.g. 2 in 2/3.
   */
  int64_t numerator;
  /*
   * The value by which the numerator is divided, e.g. 3 in 2/3. Must be
   * positive.
   */
  int64_t denominator;
};
#define GOOGLE__TYPE__FRACTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&google__type__fraction__descriptor) \
    , 0, 0 }


/* Google__Type__Fraction methods */
void   google__type__fraction__init
                     (Google__Type__Fraction         *message);
size_t google__type__fraction__get_packed_size
                     (const Google__Type__Fraction   *message);
size_t google__type__fraction__pack
                     (const Google__Type__Fraction   *message,
                      uint8_t             *out);
size_t google__type__fraction__pack_to_buffer
                     (const Google__Type__Fraction   *message,
                      ProtobufCBuffer     *buffer);
Google__Type__Fraction *
       google__type__fraction__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   google__type__fraction__free_unpacked
                     (Google__Type__Fraction *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Google__Type__Fraction_Closure)
                 (const Google__Type__Fraction *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor google__type__fraction__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_google_2ftype_2ffraction_2eproto__INCLUDED */
