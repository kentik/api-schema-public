/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: google/type/interval.proto */

#ifndef PROTOBUF_C_google_2ftype_2finterval_2eproto__INCLUDED
#define PROTOBUF_C_google_2ftype_2finterval_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "google/protobuf/timestamp.pb-c.h"

typedef struct _Google__Type__Interval Google__Type__Interval;


/* --- enums --- */


/* --- messages --- */

/*
 * Represents a time interval, encoded as a Timestamp start (inclusive) and a
 * Timestamp end (exclusive).
 * The start must be less than or equal to the end.
 * When the start equals the end, the interval is empty (matches no time).
 * When both start and end are unspecified, the interval matches any time.
 */
struct  _Google__Type__Interval
{
  ProtobufCMessage base;
  /*
   * Optional. Inclusive start of the interval.
   * If specified, a Timestamp matching this interval will have to be the same
   * or after the start.
   */
  Google__Protobuf__Timestamp *start_time;
  /*
   * Optional. Exclusive end of the interval.
   * If specified, a Timestamp matching this interval will have to be before the
   * end.
   */
  Google__Protobuf__Timestamp *end_time;
};
#define GOOGLE__TYPE__INTERVAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&google__type__interval__descriptor) \
    , NULL, NULL }


/* Google__Type__Interval methods */
void   google__type__interval__init
                     (Google__Type__Interval         *message);
size_t google__type__interval__get_packed_size
                     (const Google__Type__Interval   *message);
size_t google__type__interval__pack
                     (const Google__Type__Interval   *message,
                      uint8_t             *out);
size_t google__type__interval__pack_to_buffer
                     (const Google__Type__Interval   *message,
                      ProtobufCBuffer     *buffer);
Google__Type__Interval *
       google__type__interval__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   google__type__interval__free_unpacked
                     (Google__Type__Interval *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Google__Type__Interval_Closure)
                 (const Google__Type__Interval *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor google__type__interval__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_google_2ftype_2finterval_2eproto__INCLUDED */
