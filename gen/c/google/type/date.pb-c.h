/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: google/type/date.proto */

#ifndef PROTOBUF_C_google_2ftype_2fdate_2eproto__INCLUDED
#define PROTOBUF_C_google_2ftype_2fdate_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Google__Type__Date Google__Type__Date;


/* --- enums --- */


/* --- messages --- */

/*
 * Represents a whole or partial calendar date, such as a birthday. The time of
 * day and time zone are either specified elsewhere or are insignificant. The
 * date is relative to the Gregorian Calendar. This can represent one of the
 * following:
 * * A full date, with non-zero year, month, and day values
 * * A month and day value, with a zero year, such as an anniversary
 * * A year on its own, with zero month and day values
 * * A year and month value, with a zero day, such as a credit card expiration
 * date
 * Related types are [google.type.TimeOfDay][google.type.TimeOfDay] and
 * `google.protobuf.Timestamp`.
 */
struct  _Google__Type__Date
{
  ProtobufCMessage base;
  /*
   * Year of the date. Must be from 1 to 9999, or 0 to specify a date without
   * a year.
   */
  int32_t year;
  /*
   * Month of a year. Must be from 1 to 12, or 0 to specify a year without a
   * month and day.
   */
  int32_t month;
  /*
   * Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
   * to specify a year by itself or a year and month where the day isn't
   * significant.
   */
  int32_t day;
};
#define GOOGLE__TYPE__DATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&google__type__date__descriptor) \
    , 0, 0, 0 }


/* Google__Type__Date methods */
void   google__type__date__init
                     (Google__Type__Date         *message);
size_t google__type__date__get_packed_size
                     (const Google__Type__Date   *message);
size_t google__type__date__pack
                     (const Google__Type__Date   *message,
                      uint8_t             *out);
size_t google__type__date__pack_to_buffer
                     (const Google__Type__Date   *message,
                      ProtobufCBuffer     *buffer);
Google__Type__Date *
       google__type__date__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   google__type__date__free_unpacked
                     (Google__Type__Date *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Google__Type__Date_Closure)
                 (const Google__Type__Date *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor google__type__date__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_google_2ftype_2fdate_2eproto__INCLUDED */
