/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: google/type/expr.proto */

#ifndef PROTOBUF_C_google_2ftype_2fexpr_2eproto__INCLUDED
#define PROTOBUF_C_google_2ftype_2fexpr_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Google__Type__Expr Google__Type__Expr;


/* --- enums --- */


/* --- messages --- */

/*
 * Represents a textual expression in the Common Expression Language (CEL)
 * syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 * are documented at https://github.com/google/cel-spec.
 * Example (Comparison):
 *     title: "Summary size limit"
 *     description: "Determines if a summary is less than 100 chars"
 *     expression: "document.summary.size() < 100"
 * Example (Equality):
 *     title: "Requestor is owner"
 *     description: "Determines if requestor is the document owner"
 *     expression: "document.owner == request.auth.claims.email"
 * Example (Logic):
 *     title: "Public documents"
 *     description: "Determine whether the document should be publicly visible"
 *     expression: "document.type != 'private' && document.type != 'internal'"
 * Example (Data Manipulation):
 *     title: "Notification string"
 *     description: "Create a notification string with a timestamp."
 *     expression: "'New message received at ' + string(document.create_time)"
 * The exact variables and functions that may be referenced within an expression
 * are determined by the service that evaluates it. See the service
 * documentation for additional information.
 */
struct  _Google__Type__Expr
{
  ProtobufCMessage base;
  /*
   * Textual representation of an expression in Common Expression Language
   * syntax.
   */
  char *expression;
  /*
   * Optional. Title for the expression, i.e. a short string describing
   * its purpose. This can be used e.g. in UIs which allow to enter the
   * expression.
   */
  char *title;
  /*
   * Optional. Description of the expression. This is a longer text which
   * describes the expression, e.g. when hovered over it in a UI.
   */
  char *description;
  /*
   * Optional. String indicating the location of the expression for error
   * reporting, e.g. a file name and a position in the file.
   */
  char *location;
};
#define GOOGLE__TYPE__EXPR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&google__type__expr__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/* Google__Type__Expr methods */
void   google__type__expr__init
                     (Google__Type__Expr         *message);
size_t google__type__expr__get_packed_size
                     (const Google__Type__Expr   *message);
size_t google__type__expr__pack
                     (const Google__Type__Expr   *message,
                      uint8_t             *out);
size_t google__type__expr__pack_to_buffer
                     (const Google__Type__Expr   *message,
                      ProtobufCBuffer     *buffer);
Google__Type__Expr *
       google__type__expr__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   google__type__expr__free_unpacked
                     (Google__Type__Expr *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Google__Type__Expr_Closure)
                 (const Google__Type__Expr *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor google__type__expr__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_google_2ftype_2fexpr_2eproto__INCLUDED */
