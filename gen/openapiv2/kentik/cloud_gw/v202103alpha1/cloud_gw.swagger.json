{
  "swagger": "2.0",
  "info": {
    "title": "CLOUD GW API",
    "version": "202103",
    "contact": {
      "name": "Kentik API Engineering",
      "url": "https://github.com/kentik/api"
    }
  },
  "tags": [
    {
      "name": "AWSGWInternalService"
    },
    {
      "name": "AWSGWExternalService"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/cloud_gw/v202103alpha1/get_aws": {
      "get": {
        "summary": "The client calls GetAWS to get a request from the server.  It runs the\nrequest, and returns the result via SendAWS, linking them together via\nrequest_id.",
        "operationId": "AWSGWExternalService_GetAWS",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v202103alpha1GetAWSResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AWSGWExternalService"
        ]
      }
    },
    "/cloud_gw/v202103alpha1/login_aws": {
      "get": {
        "summary": "LoginAWS is used to tell the server that there's a listener active for a\ngiven region.  A proxy starts a LoginAWS, then services Get/SendAWS\nrequests, and ends the LoginAWS via context cancellation when it shuts\ndown (or disconnects).",
        "operationId": "AWSGWExternalService_LoginAWS",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v202103alpha1LoginAWSResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AWSGWExternalService"
        ]
      }
    },
    "/cloud_gw/v202103alpha1/proxy_aws": {
      "post": {
        "summary": "Called by clients of cloud-server (Blake).",
        "operationId": "AWSGWInternalService_ProxyAWS",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v202103alpha1ProxyAWSResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v202103alpha1ProxyAWSRequest"
            }
          }
        ],
        "tags": [
          "AWSGWInternalService"
        ]
      }
    },
    "/cloud_gw/v202103alpha1/send_aws": {
      "post": {
        "operationId": "AWSGWExternalService_SendAWS",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v202103alpha1SendAWSResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v202103alpha1SendAWSRequest"
            }
          }
        ],
        "tags": [
          "AWSGWExternalService"
        ]
      }
    }
  },
  "definitions": {
    "grpchttp_over_grpcHeader": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Represents HTTP 1.1 header."
    },
    "http_over_grpcHTTPOverGRPCReply": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32",
          "description": "The HTTP status code (e.g. 200, 400, 404)."
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/grpchttp_over_grpcHeader"
          },
          "description": "The HTTP response headers."
        },
        "body": {
          "type": "string",
          "format": "byte",
          "description": "The HTTP response body."
        }
      },
      "description": "An HTTP 1.1 reply encapsulated in an RPC."
    },
    "http_over_grpcHTTPOverGRPCRequest": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string",
          "description": "The HTTP request method."
        },
        "url": {
          "type": "string",
          "description": "The HTTP request URL."
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/grpchttp_over_grpcHeader"
          },
          "description": "The HTTP request headers."
        },
        "body": {
          "type": "string",
          "format": "byte",
          "description": "HTTP request body."
        }
      },
      "description": "An HTTP 1.1 request encapsulated in a gRPC."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v202103alpha1GetAWSResponse": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string",
          "format": "int64"
        },
        "proxyAwsRequest": {
          "$ref": "#/definitions/v202103alpha1ProxyAWSRequest"
        }
      }
    },
    "v202103alpha1LoginAWSResponse": {
      "type": "object"
    },
    "v202103alpha1ProxyAWSRequest": {
      "type": "object",
      "properties": {
        "region": {
          "type": "string"
        },
        "httpOverGrpcRequest": {
          "$ref": "#/definitions/http_over_grpcHTTPOverGRPCRequest",
          "title": "HTTPOverGRPCRequest http_over_grpc_request = 2;"
        }
      },
      "title": "cid from headers / context"
    },
    "v202103alpha1ProxyAWSResponse": {
      "type": "object",
      "properties": {
        "httpOverGrpcReply": {
          "$ref": "#/definitions/http_over_grpcHTTPOverGRPCReply",
          "title": "HTTPOverGRPCResponse http_over_grpc_response = 1;"
        }
      }
    },
    "v202103alpha1SendAWSRequest": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string",
          "format": "int64"
        },
        "proxyAwsRequest": {
          "$ref": "#/definitions/v202103alpha1ProxyAWSRequest"
        }
      }
    },
    "v202103alpha1SendAWSResponse": {
      "type": "object"
    }
  },
  "securityDefinitions": {
    "email": {
      "type": "apiKey",
      "name": "X-CH-Auth-Email",
      "in": "header"
    },
    "token": {
      "type": "apiKey",
      "name": "X-CH-Auth-API-Token",
      "in": "header"
    }
  },
  "security": [
    {
      "email": [],
      "token": []
    }
  ],
  "externalDocs": {
    "description": "More about Kentik APIs",
    "url": "https://docs.kentik.com/api"
  }
}
