{
  "swagger": "2.0",
  "info": {
    "title": "Alerting Suppressions API",
    "description": "# Overview\nThe Alerts Suppressions API provides programmatic access to Kentik's capabilities of configuring and managing alert suppressions, preventing alerts from being activated.",
    "version": "v202505",
    "contact": {
      "name": "Kentik API Engineering",
      "url": "https://github.com/kentik/api-schema-public"
    }
  },
  "tags": [
    {
      "name": "SuppressionService"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v202505/suppressions": {
      "post": {
        "summary": "Create Suppression",
        "description": "Creates a new suppression configuration.",
        "operationId": "Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v202505SuppressionServiceCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v202505SuppressionServiceCreateRequest"
            }
          }
        ],
        "tags": [
          "SuppressionService"
        ]
      }
    },
    "/v202505/suppressions/list": {
      "post": {
        "summary": "List Suppressions",
        "description": "Returns a list of suppression configurations.",
        "operationId": "List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v202505SuppressionServiceListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v202505SuppressionServiceListRequest"
            }
          }
        ],
        "tags": [
          "SuppressionService"
        ]
      }
    },
    "/v202505/suppressions/{id}": {
      "get": {
        "summary": "Get Suppression",
        "description": "Returns a suppression configuration.",
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v202505SuppressionServiceGetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The ID of the suppression configuration to get.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SuppressionService"
        ]
      },
      "delete": {
        "summary": "Delete Suppression",
        "description": "Deletes a suppression configuration.",
        "operationId": "Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v202505SuppressionServiceDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The ID of the suppression configuration to delete.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SuppressionService"
        ]
      },
      "patch": {
        "summary": "Replace Suppression",
        "description": "Replaces a suppression configuration.",
        "operationId": "Replace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v202505SuppressionServiceReplaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The ID of the suppression configuration.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v202505SuppressionServiceReplaceRequest"
            }
          }
        ],
        "tags": [
          "SuppressionService"
        ]
      }
    }
  },
  "definitions": {
    "FieldBy": {
      "type": "string",
      "enum": [
        "BY_UNSPECIFIED",
        "BY_ID",
        "BY_NAME",
        "BY_CREATED_AT",
        "BY_UPDATED_AT",
        "BY_SEVERITY",
        "BY_STATUS",
        "BY_POLICY_TYPE",
        "BY_START_TIME",
        "BY_END_TIME",
        "BY_ALARM_STATE",
        "BY_ALARM_POLICY_NAME",
        "BY_ALARM_PRIMARY_DIMENSION"
      ],
      "default": "BY_UNSPECIFIED"
    },
    "SortingConfigField": {
      "type": "object",
      "properties": {
        "by": {
          "$ref": "#/definitions/FieldBy"
        },
        "order": {
          "$ref": "#/definitions/SortingConfigOrder"
        }
      }
    },
    "SortingConfigOrder": {
      "type": "string",
      "enum": [
        "ORDER_UNSPECIFIED",
        "ORDER_ASCENDING",
        "ORDER_DESCENDING"
      ],
      "default": "ORDER_UNSPECIFIED"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "typesv202506PaginationConfig": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "string",
          "format": "uint64",
          "title": "limit is how many items to return at most"
        },
        "offset": {
          "type": "string",
          "format": "uint64",
          "title": "offset is the offset into the list of items"
        },
        "includeTotalCount": {
          "type": "boolean",
          "title": "include_total_count is a flag to enforce API service to include the total count of items in the response,\nwhich in some cases may be very expensive to fetch"
        }
      }
    },
    "typesv202506PaginationInfo": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "string",
          "format": "uint64",
          "description": "total_count is the total number of items in the list.\nIt may be provided optionally if include_total_count is set to false.\nIt will be provided always if include_total_count is set to true."
        },
        "hasMoreResults": {
          "type": "boolean",
          "title": "has_more_results is a flag to indicate if there are more results to fetch\nIt may be provided instead of total_count if include_total_count is set to false and it would be very expensive to fetch the total count"
        }
      }
    },
    "typesv202506SortingConfig": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SortingConfigField"
          }
        }
      }
    },
    "v202303AttributeFilter": {
      "type": "object",
      "properties": {
        "not": {
          "type": "boolean",
          "title": "Please note attribute filter operates on strings or stringified values"
        },
        "empty": {
          "type": "boolean",
          "description": "Indicates that we want to check for an empty value.  To use empty this value MUST be set to\ntrue.  Setting not to true enables us to look for \"not-empty\"."
        },
        "equals": {
          "type": "string"
        },
        "startsWith": {
          "type": "string"
        },
        "endsWith": {
          "type": "string"
        },
        "contains": {
          "type": "string"
        },
        "in": {
          "$ref": "#/definitions/v202303AttributeFilterStringArray"
        },
        "any": {
          "type": "boolean",
          "description": "The equivalent of: value=\"*.  To use any this value MUST be set to true. Setting not to true\nenables us to look for \"not-anything\", but that predicate does not make much sense."
        }
      }
    },
    "v202303AttributeFilterStringArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v202303KeyValueFilter": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/v202303SimpleAttributeFilter",
          "description": "key filtering definition is limited to the SimpleAttribute filter because the \"not\" and \"empty\"\nfilter options for Attribute filter do not make logical sense for keys."
        },
        "value": {
          "$ref": "#/definitions/v202303AttributeFilter"
        }
      }
    },
    "v202303MultiAttributeFilter": {
      "type": "object",
      "properties": {
        "filter": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v202303AttributeFilter"
          }
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v202303KeyValueFilter"
          }
        }
      }
    },
    "v202303SimpleAttributeFilter": {
      "type": "object",
      "properties": {
        "equals": {
          "type": "string"
        },
        "startsWith": {
          "type": "string"
        },
        "endsWith": {
          "type": "string"
        },
        "contains": {
          "type": "string"
        },
        "in": {
          "$ref": "#/definitions/v202303SimpleAttributeFilterStringArray"
        },
        "any": {
          "type": "boolean",
          "description": "The equivalent of: value=\"*.  To use any this value MUST be set to true."
        }
      }
    },
    "v202303SimpleAttributeFilterStringArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v202303TimeRange": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v202505PolicyType": {
      "type": "string",
      "enum": [
        "POLICY_TYPE_UNSPECIFIED",
        "POLICY_TYPE_AGENT",
        "POLICY_TYPE_COMPONENT",
        "POLICY_TYPE_DEVICE",
        "POLICY_TYPE_EVENT",
        "POLICY_TYPE_INTERFACE",
        "POLICY_TYPE_CUSTOM",
        "POLICY_TYPE_CLOUD",
        "POLICY_TYPE_PROTECT",
        "POLICY_TYPE_TRAFFIC",
        "POLICY_TYPE_KMETRICS"
      ],
      "default": "POLICY_TYPE_UNSPECIFIED",
      "title": "- POLICY_TYPE_AGENT: NMS Agent Policy\n - POLICY_TYPE_COMPONENT: NMS Component Policy\n - POLICY_TYPE_DEVICE: NMS Device Policy\n - POLICY_TYPE_EVENT: NMS Event Policy\n - POLICY_TYPE_INTERFACE: NMS Interface Policy\n - POLICY_TYPE_CUSTOM: NMS Custom Policy\n - POLICY_TYPE_CLOUD: Flow Alerting Cloud Policy\n - POLICY_TYPE_PROTECT: Flow Alerting Protect Policy\n - POLICY_TYPE_TRAFFIC: Flow Alerting Traffic Policy\n - POLICY_TYPE_KMETRICS: Flow Alerting KMetrics Policy"
    },
    "v202505Source": {
      "type": "object",
      "properties": {
        "policyType": {
          "$ref": "#/definitions/v202505PolicyType",
          "description": "The type of policy.",
          "required": [
            "policy_type"
          ]
        },
        "id": {
          "type": "string",
          "description": "The ID of the policy, can be integer ID, UUID or any other format.",
          "required": [
            "id"
          ]
        }
      },
      "required": [
        "policyType",
        "id"
      ]
    },
    "v202505Suppression": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the suppression configuration.",
          "readOnly": true
        },
        "userId": {
          "type": "string",
          "description": "The ID of the user who most recently updated the suppression configuration.",
          "readOnly": true
        },
        "source": {
          "$ref": "#/definitions/v202505Source",
          "description": "The source policy the suppression is applied to."
        },
        "keyFilter": {
          "$ref": "#/definitions/v202303MultiAttributeFilter",
          "description": "The alert key filter the suppression is applied to."
        },
        "strict": {
          "type": "boolean",
          "description": "Whether the suppression is strict (all alert key dimensions must have some filter applied and matching)."
        },
        "comment": {
          "type": "string",
          "description": "The comment for the suppression configuration."
        },
        "startTimeAt": {
          "type": "string",
          "format": "date-time",
          "description": "The start time when the suppression configuration is active, preventing the alert from being activated.",
          "required": [
            "start_time_at"
          ]
        },
        "endTimeAt": {
          "type": "string",
          "format": "date-time",
          "description": "The end time when the suppression configuration is no longer active, allowing the alert to be activated again."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the suppression configuration was created.",
          "readOnly": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the suppression configuration was last modified.",
          "readOnly": true
        }
      },
      "required": [
        "startTimeAt"
      ]
    },
    "v202505SuppressionFilters": {
      "type": "object",
      "properties": {
        "suppressionIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of the suppression configurations to list."
        },
        "sources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v202505Source"
          },
          "description": "The source policies the suppression configurations are applied to."
        },
        "userIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IDs of the users who created the suppression configurations."
        },
        "createdAt": {
          "$ref": "#/definitions/v202303TimeRange",
          "description": "The time range for the created time of the suppression configurations."
        },
        "modifiedAt": {
          "$ref": "#/definitions/v202303TimeRange",
          "description": "The time range for the modified time of the suppression configurations."
        },
        "startTimeAt": {
          "$ref": "#/definitions/v202303TimeRange",
          "description": "The time range for the start time of the suppression configurations."
        },
        "endTimeAt": {
          "$ref": "#/definitions/v202303TimeRange",
          "description": "The time range for the end time of the suppression configurations."
        }
      }
    },
    "v202505SuppressionServiceCreateRequest": {
      "type": "object",
      "properties": {
        "suppression": {
          "$ref": "#/definitions/v202505Suppression",
          "description": "The suppression configuration to create.",
          "required": [
            "suppression"
          ]
        }
      },
      "required": [
        "suppression"
      ]
    },
    "v202505SuppressionServiceCreateResponse": {
      "type": "object",
      "properties": {
        "suppression": {
          "$ref": "#/definitions/v202505Suppression",
          "description": "The suppression configuration that was created.",
          "readOnly": true
        }
      }
    },
    "v202505SuppressionServiceDeleteResponse": {
      "type": "object"
    },
    "v202505SuppressionServiceGetResponse": {
      "type": "object",
      "properties": {
        "suppression": {
          "$ref": "#/definitions/v202505Suppression",
          "description": "The suppression configuration that was retrieved.",
          "readOnly": true
        }
      }
    },
    "v202505SuppressionServiceListRequest": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/typesv202506PaginationConfig",
          "description": "The pagination configuration for the list request."
        },
        "sorting": {
          "$ref": "#/definitions/typesv202506SortingConfig",
          "description": "The sorting configuration for the list request."
        },
        "filters": {
          "$ref": "#/definitions/v202505SuppressionFilters",
          "description": "The suppression filters for the list request."
        }
      }
    },
    "v202505SuppressionServiceListResponse": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/typesv202506PaginationInfo",
          "description": "The pagination information for the list response.",
          "readOnly": true
        },
        "suppressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v202505Suppression"
          },
          "description": "The suppression configurations that were found matching the filters.",
          "readOnly": true
        }
      }
    },
    "v202505SuppressionServiceReplaceRequest": {
      "type": "object",
      "properties": {
        "suppression": {
          "$ref": "#/definitions/v202505Suppression",
          "description": "The suppression configuration to replace.",
          "required": [
            "suppression"
          ]
        }
      },
      "required": [
        "suppression"
      ]
    },
    "v202505SuppressionServiceReplaceResponse": {
      "type": "object",
      "properties": {
        "suppression": {
          "$ref": "#/definitions/v202505Suppression",
          "description": "Current suppression configuration after the replace operation.",
          "readOnly": true
        }
      }
    }
  },
  "securityDefinitions": {
    "email": {
      "type": "apiKey",
      "name": "X-CH-Auth-Email",
      "in": "header"
    },
    "token": {
      "type": "apiKey",
      "name": "X-CH-Auth-API-Token",
      "in": "header"
    }
  },
  "security": [
    {
      "email": [],
      "token": []
    }
  ],
  "externalDocs": {
    "description": "Kentik Alerts documentation",
    "url": "https://kb.kentik.com/docs/alerting"
  }
}
