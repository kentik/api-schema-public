{
  "swagger": "2.0",
  "info": {
    "title": "Synthetics Monitoring API",
    "version": "202110beta2",
    "contact": {
      "name": "Kentik API Engineering",
      "url": "https://github.com/kentik/api"
    }
  },
  "tags": [
    {
      "name": "SyntheticsDataService"
    },
    {
      "name": "SyntheticsAdminService"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/synthetics/v202202stable/agents": {
      "get": {
        "summary": "List Agents.",
        "description": "Returns a list of agents.",
        "operationId": "AgentsList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v202202stableListAgentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SyntheticsAdminService"
        ]
      }
    },
    "/synthetics/v202202stable/agents/{agent.id}": {
      "put": {
        "summary": "Update an agent.",
        "description": "Update configuration of a synthetics agent.",
        "operationId": "AgentUpdate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v202202stableUpdateAgentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "agent.id",
            "description": "id of this agent.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v202202stableUpdateAgentRequest"
            }
          }
        ],
        "tags": [
          "SyntheticsAdminService"
        ]
      },
      "get": {
        "summary": "Get information about an agent.",
        "description": "Returns information about the agent specified with id.",
        "operationId": "AgentGet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v202202stableGetAgentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "agent.id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SyntheticsAdminService"
        ]
      },
      "delete": {
        "summary": "Delete an agent.",
        "description": "Deletes the agent specified with id.",
        "operationId": "AgentDelete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v202202stableDeleteAgentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "agent.id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SyntheticsAdminService"
        ]
      }
    },
    "/synthetics/v202202stable/health": {
      "post": {
        "summary": "Get health status for synthetics tests.",
        "description": "Returns health evaluation results for set of tests for specified period of time, or based on the lastest available data.",
        "operationId": "GetHealthForTests",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v202202stableGetHealthForTestsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v202202stableGetHealthForTestsRequest"
            }
          }
        ],
        "tags": [
          "SyntheticsDataService"
        ]
      }
    },
    "/synthetics/v202202stable/results": {
      "post": {
        "summary": "Get results for synthetic tests.",
        "description": "Returns measurement results for a set of test for specified period of time, or the latest available data.",
        "operationId": "GetResultsForTests",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v202202stableGetResultsForTestsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v202202stableGetResultsForTestsRequest"
            }
          }
        ],
        "tags": [
          "SyntheticsDataService"
        ]
      }
    },
    "/synthetics/v202202stable/tests": {
      "get": {
        "summary": "List Synthetics Tests.",
        "description": "Returns a list of syntehtics tests.",
        "operationId": "TestsList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v202202stableListTestsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SyntheticsAdminService"
        ]
      },
      "post": {
        "summary": "Create Synthetics Test.",
        "description": "Create synthetics test from request. Returns created test.",
        "operationId": "TestCreate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v202202stableCreateTestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v202202stableCreateTestRequest"
            }
          }
        ],
        "tags": [
          "SyntheticsAdminService"
        ]
      }
    },
    "/synthetics/v202202stable/tests/{id}": {
      "get": {
        "summary": "Get information about Synthetics Test.",
        "description": "Returns information about synthetics test specified with test ID.",
        "operationId": "TestGet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v202202stableGetTestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SyntheticsAdminService"
        ]
      },
      "delete": {
        "summary": "Delete an Synthetics Test.",
        "description": "Deletes the synthetics test specified with id.",
        "operationId": "TestDelete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v202202stableDeleteTestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SyntheticsAdminService"
        ]
      },
      "put": {
        "summary": "Update a Synthetics Test.",
        "description": "Updates configuration of a synthetic test.",
        "operationId": "TestUpdate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v202202stableUpdateTestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v202202stableUpdateTestRequest"
            }
          }
        ],
        "tags": [
          "SyntheticsAdminService"
        ]
      }
    },
    "/synthetics/v202202stable/trace": {
      "post": {
        "summary": "Get trace route data.",
        "description": "Get trace route data for the specific test id.",
        "operationId": "GetTraceForTest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v202202stableGetTraceForTestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v202202stableGetTraceForTestRequest"
            }
          }
        ],
        "tags": [
          "SyntheticsDataService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "syntheticsv202202stableLocation": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "country": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "city": {
          "type": "string"
        }
      }
    },
    "v202202stableAgent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id of this agent."
        },
        "siteName": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v202202stableAgentStatus"
        },
        "alias": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "os": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "lat": {
          "type": "number",
          "format": "double"
        },
        "long": {
          "type": "number",
          "format": "double"
        },
        "lastAuthed": {
          "type": "string",
          "format": "date-time"
        },
        "family": {
          "$ref": "#/definitions/v202202stableIPFamily"
        },
        "asn": {
          "type": "integer",
          "format": "int64"
        },
        "siteId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "testIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "localIp": {
          "type": "string"
        },
        "cloudRegion": {
          "type": "string"
        },
        "cloudProvider": {
          "type": "string"
        },
        "agentImpl": {
          "$ref": "#/definitions/v202202stableImplementType"
        }
      }
    },
    "v202202stableAgentHealth": {
      "type": "object",
      "properties": {
        "agentId": {
          "type": "string"
        },
        "agentTaskHealth": {
          "type": "string"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v202202stableTaskHealth"
          }
        }
      }
    },
    "v202202stableAgentResults": {
      "type": "object",
      "properties": {
        "agentId": {
          "type": "string"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v202202stableTaskResults"
          }
        }
      }
    },
    "v202202stableAgentStatus": {
      "type": "string",
      "enum": [
        "AGENT_STATUS_UNSPECIFIED",
        "AGENT_STATUS_OK",
        "AGENT_STATUS_WAIT",
        "AGENT_STATUS_DELETED"
      ],
      "default": "AGENT_STATUS_UNSPECIFIED"
    },
    "v202202stableAgentTest": {
      "type": "object",
      "properties": {
        "target": {
          "type": "string"
        }
      }
    },
    "v202202stableCreateTestRequest": {
      "type": "object",
      "properties": {
        "test": {
          "$ref": "#/definitions/v202202stableTest"
        }
      }
    },
    "v202202stableCreateTestResponse": {
      "type": "object",
      "properties": {
        "test": {
          "$ref": "#/definitions/v202202stableTest"
        }
      }
    },
    "v202202stableDNSConfig": {
      "type": "object",
      "properties": {
        "expiry": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "$ref": "#/definitions/v202202stableDNSRecord"
        },
        "servers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v202202stableDNSRecord": {
      "type": "string",
      "enum": [
        "DNS_RECORD_UNSPECIFIED",
        "DNS_RECORD_A",
        "DNS_RECORD_AAAA",
        "DNS_RECORD_CNAME",
        "DNS_RECORD_DNAME",
        "DNS_RECORD_NS",
        "DNS_RECORD_MX",
        "DNS_RECORD_PTR",
        "DNS_RECORD_SOA"
      ],
      "default": "DNS_RECORD_UNSPECIFIED"
    },
    "v202202stableDNSResponseData": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "v202202stableDNSResults": {
      "type": "object",
      "properties": {
        "target": {
          "type": "string"
        },
        "server": {
          "type": "string"
        },
        "latency": {
          "$ref": "#/definitions/v202202stableMetricData"
        },
        "jitter": {
          "$ref": "#/definitions/v202202stableMetricData"
        },
        "response": {
          "$ref": "#/definitions/v202202stableDNSResponseData"
        }
      }
    },
    "v202202stableDeleteAgentResponse": {
      "type": "object"
    },
    "v202202stableDeleteTestResponse": {
      "type": "object"
    },
    "v202202stableDnsTest": {
      "type": "object",
      "properties": {
        "targets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dns": {
          "$ref": "#/definitions/v202202stableDNSConfig"
        }
      }
    },
    "v202202stableFlowTest": {
      "type": "object",
      "properties": {
        "target": {
          "type": "string"
        },
        "targetRefreshIntervalMillis": {
          "type": "integer",
          "format": "int64"
        },
        "maxTasks": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string"
        },
        "inetDirection": {
          "type": "string"
        },
        "direction": {
          "type": "string"
        }
      }
    },
    "v202202stableGetAgentResponse": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/v202202stableAgent"
        }
      }
    },
    "v202202stableGetHealthForTestsRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of ids of the tests to get health for."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start of the time interval for this query."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "End of the time interval for this query."
        },
        "agentIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optionally, only look at a subset of agents"
        },
        "targets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optionally only look at a subset of targets."
        }
      }
    },
    "v202202stableGetHealthForTestsResponse": {
      "type": "object",
      "properties": {
        "health": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v202202stableTestHealth"
          }
        }
      }
    },
    "v202202stableGetResultsForTestsRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of ids of the tests to get health for."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start of the time interval for this query."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "End of the time interval for this query."
        },
        "agentIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optionally, only look at a subset of agents"
        },
        "targets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optionally only look at a subset of targets."
        }
      }
    },
    "v202202stableGetResultsForTestsResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v202202stableTestResults"
          }
        }
      }
    },
    "v202202stableGetTestResponse": {
      "type": "object",
      "properties": {
        "test": {
          "$ref": "#/definitions/v202202stableTest"
        }
      }
    },
    "v202202stableGetTraceForTestRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Test id"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start of the time interval for this query."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "End of the time interval for this query."
        },
        "agentIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optionally, limit the query to these agent ids"
        },
        "targetIps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Optionally, limit the query to these destination IP addresses"
        }
      }
    },
    "v202202stableGetTraceForTestResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v202202stableNetNode"
          }
        },
        "paths": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v202202stablePath"
          }
        }
      }
    },
    "v202202stableHTTPConfig": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string"
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "body": {
          "type": "string"
        },
        "ignoreTlsErrors": {
          "type": "boolean"
        },
        "cssSelectors": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "expiry": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v202202stableHTTPResponseData": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int64"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "v202202stableHTTPResults": {
      "type": "object",
      "properties": {
        "target": {
          "type": "string"
        },
        "latency": {
          "$ref": "#/definitions/v202202stableMetricData"
        },
        "jitter": {
          "$ref": "#/definitions/v202202stableMetricData"
        },
        "response": {
          "$ref": "#/definitions/v202202stableHTTPResponseData"
        }
      }
    },
    "v202202stableHTTPTest": {
      "type": "object",
      "properties": {
        "target": {
          "type": "string"
        },
        "http": {
          "$ref": "#/definitions/v202202stableHTTPConfig"
        }
      }
    },
    "v202202stableHealthSettings": {
      "type": "object",
      "properties": {
        "latencyCritical": {
          "type": "number",
          "format": "float"
        },
        "latencyWarning": {
          "type": "number",
          "format": "float"
        },
        "packetLossCritical": {
          "type": "number",
          "format": "float"
        },
        "packetLossWarning": {
          "type": "number",
          "format": "float"
        },
        "jitterCritical": {
          "type": "number",
          "format": "float"
        },
        "jitterWarning": {
          "type": "number",
          "format": "float"
        },
        "httpLatencyCritical": {
          "type": "number",
          "format": "float"
        },
        "httpLatencyWarning": {
          "type": "number",
          "format": "float"
        },
        "httpValidCodes": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "dnsValidCodes": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "latencyCriticalStddev": {
          "type": "number",
          "format": "float"
        },
        "latencyWarningStddev": {
          "type": "number",
          "format": "float"
        },
        "jitterCriticalStddev": {
          "type": "number",
          "format": "float"
        },
        "jitterWarningStddev": {
          "type": "number",
          "format": "float"
        },
        "httpLatencyCriticalStddev": {
          "type": "number",
          "format": "float"
        },
        "httpLatencyWarningStddev": {
          "type": "number",
          "format": "float"
        },
        "unhealthySubtestThreshold": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v202202stableHostnameTest": {
      "type": "object",
      "properties": {
        "target": {
          "type": "string"
        }
      }
    },
    "v202202stableIPFamily": {
      "type": "string",
      "enum": [
        "IP_FAMILY_UNSPECIFIED",
        "IP_FAMILY_V4",
        "IP_FAMILY_V6",
        "IP_FAMILY_DUAL"
      ],
      "default": "IP_FAMILY_UNSPECIFIED"
    },
    "v202202stableImplementType": {
      "type": "string",
      "enum": [
        "IMPLEMENT_TYPE_UNSPECIFIED",
        "IMPLEMENT_TYPE_RUST",
        "IMPLEMENT_TYPE_NODE"
      ],
      "default": "IMPLEMENT_TYPE_UNSPECIFIED",
      "description": "Agent impl type determines capabilities of agent.\n\n - IMPLEMENT_TYPE_RUST: ksynth agent (implemented in Rust) capable of running all tasks except for page-load\n - IMPLEMENT_TYPE_NODE: ksynth-agent (implemented in NodeJS) capable of running ping, traceroute and page-load tasks"
    },
    "v202202stableIpTest": {
      "type": "object",
      "properties": {
        "targets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v202202stableListAgentsResponse": {
      "type": "object",
      "properties": {
        "agents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v202202stableAgent"
          }
        },
        "invalidCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v202202stableListTestsResponse": {
      "type": "object",
      "properties": {
        "tests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v202202stableTest"
          }
        },
        "invalidCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v202202stableMetricData": {
      "type": "object",
      "properties": {
        "current": {
          "type": "integer",
          "format": "int64"
        },
        "rollingAvg": {
          "type": "integer",
          "format": "int64"
        },
        "rollingStddev": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v202202stableNetNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "asn": {
          "type": "integer",
          "format": "int64"
        },
        "asName": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/syntheticsv202202stableLocation"
        },
        "dnsName": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "siteId": {
          "type": "string"
        }
      }
    },
    "v202202stablePath": {
      "type": "object",
      "properties": {
        "agentId": {
          "type": "string"
        },
        "targetIp": {
          "type": "string"
        },
        "hopCount": {
          "$ref": "#/definitions/v202202stableStats"
        },
        "geoDistance": {
          "$ref": "#/definitions/v202202stableStats"
        },
        "maxAsPathLength": {
          "type": "integer",
          "format": "int32"
        },
        "traces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v202202stablePathTrace"
          }
        },
        "time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v202202stablePathTrace": {
      "type": "object",
      "properties": {
        "asPath": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "isComplete": {
          "type": "boolean"
        },
        "uniqueHopCount": {
          "type": "integer",
          "format": "int32"
        },
        "hops": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v202202stableTraceHop"
          }
        }
      },
      "title": "Probing detail"
    },
    "v202202stablePingResults": {
      "type": "object",
      "properties": {
        "target": {
          "type": "string"
        },
        "packetLoss": {
          "type": "number",
          "format": "double"
        },
        "latency": {
          "$ref": "#/definitions/v202202stableMetricData"
        },
        "jitter": {
          "$ref": "#/definitions/v202202stableMetricData"
        }
      }
    },
    "v202202stableStats": {
      "type": "object",
      "properties": {
        "average": {
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "max": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v202202stableTaskHealth": {
      "type": "object",
      "properties": {
        "taskType": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "health": {
          "type": "string"
        },
        "time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v202202stableTaskResults": {
      "type": "object",
      "properties": {
        "ping": {
          "$ref": "#/definitions/v202202stablePingResults"
        },
        "http": {
          "$ref": "#/definitions/v202202stableHTTPResults"
        },
        "dns": {
          "$ref": "#/definitions/v202202stableDNSResults"
        },
        "time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v202202stableTest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v202202stableTestStatus"
        },
        "settings": {
          "$ref": "#/definitions/v202202stableTestSettings"
        },
        "cdate": {
          "type": "string",
          "format": "date-time"
        },
        "edate": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "$ref": "#/definitions/v202202stableUserInfo"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/v202202stableUserInfo"
        }
      }
    },
    "v202202stableTestHealth": {
      "type": "object",
      "properties": {
        "testId": {
          "type": "string"
        },
        "overallHealth": {
          "type": "string"
        },
        "agents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v202202stableAgentHealth"
          }
        }
      }
    },
    "v202202stableTestPingSettings": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "protocol": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int64"
        },
        "expiry": {
          "type": "number",
          "format": "float"
        },
        "delay": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v202202stableTestResults": {
      "type": "object",
      "properties": {
        "testId": {
          "type": "string"
        },
        "agents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v202202stableAgentResults"
          }
        }
      }
    },
    "v202202stableTestSettings": {
      "type": "object",
      "properties": {
        "hostname": {
          "$ref": "#/definitions/v202202stableHostnameTest"
        },
        "ip": {
          "$ref": "#/definitions/v202202stableIpTest"
        },
        "agent": {
          "$ref": "#/definitions/v202202stableAgentTest"
        },
        "flow": {
          "$ref": "#/definitions/v202202stableFlowTest"
        },
        "dns": {
          "$ref": "#/definitions/v202202stableDnsTest"
        },
        "url": {
          "$ref": "#/definitions/v202202stableHTTPTest"
        },
        "networkGrid": {
          "$ref": "#/definitions/v202202stableIpTest"
        },
        "pageLoad": {
          "$ref": "#/definitions/v202202stableHTTPTest"
        },
        "dnsGrid": {
          "$ref": "#/definitions/v202202stableDnsTest"
        },
        "agentIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tasks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "healthSettings": {
          "$ref": "#/definitions/v202202stableHealthSettings"
        },
        "ping": {
          "$ref": "#/definitions/v202202stableTestPingSettings"
        },
        "trace": {
          "$ref": "#/definitions/v202202stableTestTraceSettings"
        },
        "period": {
          "type": "integer",
          "format": "int64"
        },
        "family": {
          "$ref": "#/definitions/v202202stableIPFamily"
        },
        "notificationChannels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v202202stableTestStatus": {
      "type": "string",
      "enum": [
        "TEST_STATUS_UNSPECIFIED",
        "TEST_STATUS_ACTIVE",
        "TEST_STATUS_PAUSED",
        "TEST_STATUS_DELETED"
      ],
      "default": "TEST_STATUS_UNSPECIFIED"
    },
    "v202202stableTestTraceSettings": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "protocol": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int64"
        },
        "expiry": {
          "type": "number",
          "format": "float"
        },
        "limit": {
          "type": "integer",
          "format": "int64"
        },
        "delay": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "v202202stableTraceHop": {
      "type": "object",
      "properties": {
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "latency": {
          "type": "integer",
          "format": "int32",
          "title": "observed latency; 0 if node did not respond"
        },
        "nodeId": {
          "type": "string",
          "title": "node_id refers to TracerouteResult.nodes; empty if hop did not respond"
        }
      }
    },
    "v202202stableUpdateAgentRequest": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/v202202stableAgent"
        }
      }
    },
    "v202202stableUpdateAgentResponse": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/v202202stableAgent"
        }
      }
    },
    "v202202stableUpdateTestRequest": {
      "type": "object",
      "properties": {
        "test": {
          "$ref": "#/definitions/v202202stableTest"
        }
      }
    },
    "v202202stableUpdateTestResponse": {
      "type": "object",
      "properties": {
        "test": {
          "$ref": "#/definitions/v202202stableTest"
        }
      }
    },
    "v202202stableUserInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "email": {
      "type": "apiKey",
      "name": "X-CH-Auth-Email",
      "in": "header"
    },
    "token": {
      "type": "apiKey",
      "name": "X-CH-Auth-API-Token",
      "in": "header"
    }
  },
  "security": [
    {
      "email": [],
      "token": []
    }
  ],
  "externalDocs": {
    "description": "More about Kentik APIs",
    "url": "https://docs.kentik.com/api"
  }
}
