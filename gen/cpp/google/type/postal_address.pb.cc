// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/type/postal_address.proto

#include "google/type/postal_address.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace google {
namespace type {
class PostalAddressDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PostalAddress> _instance;
} _PostalAddress_default_instance_;
}  // namespace type
}  // namespace google
static void InitDefaultsscc_info_PostalAddress_google_2ftype_2fpostal_5faddress_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::type::_PostalAddress_default_instance_;
    new (ptr) ::google::type::PostalAddress();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::type::PostalAddress::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PostalAddress_google_2ftype_2fpostal_5faddress_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PostalAddress_google_2ftype_2fpostal_5faddress_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_google_2ftype_2fpostal_5faddress_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_google_2ftype_2fpostal_5faddress_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_google_2ftype_2fpostal_5faddress_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_google_2ftype_2fpostal_5faddress_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::type::PostalAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::type::PostalAddress, revision_),
  PROTOBUF_FIELD_OFFSET(::google::type::PostalAddress, region_code_),
  PROTOBUF_FIELD_OFFSET(::google::type::PostalAddress, language_code_),
  PROTOBUF_FIELD_OFFSET(::google::type::PostalAddress, postal_code_),
  PROTOBUF_FIELD_OFFSET(::google::type::PostalAddress, sorting_code_),
  PROTOBUF_FIELD_OFFSET(::google::type::PostalAddress, administrative_area_),
  PROTOBUF_FIELD_OFFSET(::google::type::PostalAddress, locality_),
  PROTOBUF_FIELD_OFFSET(::google::type::PostalAddress, sublocality_),
  PROTOBUF_FIELD_OFFSET(::google::type::PostalAddress, address_lines_),
  PROTOBUF_FIELD_OFFSET(::google::type::PostalAddress, recipients_),
  PROTOBUF_FIELD_OFFSET(::google::type::PostalAddress, organization_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::type::PostalAddress)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::type::_PostalAddress_default_instance_),
};

const char descriptor_table_protodef_google_2ftype_2fpostal_5faddress_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n google/type/postal_address.proto\022\013goog"
  "le.type\"\215\003\n\rPostalAddress\022\032\n\010revision\030\001 "
  "\001(\005R\010revision\022\037\n\013region_code\030\002 \001(\tR\nregi"
  "onCode\022#\n\rlanguage_code\030\003 \001(\tR\014languageC"
  "ode\022\037\n\013postal_code\030\004 \001(\tR\npostalCode\022!\n\014"
  "sorting_code\030\005 \001(\tR\013sortingCode\022/\n\023admin"
  "istrative_area\030\006 \001(\tR\022administrativeArea"
  "\022\032\n\010locality\030\007 \001(\tR\010locality\022 \n\013sublocal"
  "ity\030\010 \001(\tR\013sublocality\022#\n\raddress_lines\030"
  "\t \003(\tR\014addressLines\022\036\n\nrecipients\030\n \003(\tR"
  "\nrecipients\022\"\n\014organization\030\013 \001(\tR\014organ"
  "izationBx\n\017com.google.typeB\022PostalAddres"
  "sProtoP\001ZFgoogle.golang.org/genproto/goo"
  "gleapis/type/postaladdress;postaladdress"
  "\370\001\001\242\002\003GTPb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_google_2ftype_2fpostal_5faddress_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_google_2ftype_2fpostal_5faddress_2eproto_sccs[1] = {
  &scc_info_PostalAddress_google_2ftype_2fpostal_5faddress_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_google_2ftype_2fpostal_5faddress_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2ftype_2fpostal_5faddress_2eproto = {
  false, false, descriptor_table_protodef_google_2ftype_2fpostal_5faddress_2eproto, "google/type/postal_address.proto", 577,
  &descriptor_table_google_2ftype_2fpostal_5faddress_2eproto_once, descriptor_table_google_2ftype_2fpostal_5faddress_2eproto_sccs, descriptor_table_google_2ftype_2fpostal_5faddress_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_google_2ftype_2fpostal_5faddress_2eproto::offsets,
  file_level_metadata_google_2ftype_2fpostal_5faddress_2eproto, 1, file_level_enum_descriptors_google_2ftype_2fpostal_5faddress_2eproto, file_level_service_descriptors_google_2ftype_2fpostal_5faddress_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2ftype_2fpostal_5faddress_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_google_2ftype_2fpostal_5faddress_2eproto)), true);
namespace google {
namespace type {

// ===================================================================

void PostalAddress::InitAsDefaultInstance() {
}
class PostalAddress::_Internal {
 public:
};

PostalAddress::PostalAddress(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  address_lines_(arena),
  recipients_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.type.PostalAddress)
}
PostalAddress::PostalAddress(const PostalAddress& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      address_lines_(from.address_lines_),
      recipients_(from.recipients_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  region_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_region_code().empty()) {
    region_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_region_code(),
      GetArena());
  }
  language_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_language_code().empty()) {
    language_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_language_code(),
      GetArena());
  }
  postal_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_postal_code().empty()) {
    postal_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_postal_code(),
      GetArena());
  }
  sorting_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sorting_code().empty()) {
    sorting_code_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_sorting_code(),
      GetArena());
  }
  administrative_area_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_administrative_area().empty()) {
    administrative_area_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_administrative_area(),
      GetArena());
  }
  locality_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_locality().empty()) {
    locality_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_locality(),
      GetArena());
  }
  sublocality_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sublocality().empty()) {
    sublocality_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_sublocality(),
      GetArena());
  }
  organization_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_organization().empty()) {
    organization_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_organization(),
      GetArena());
  }
  revision_ = from.revision_;
  // @@protoc_insertion_point(copy_constructor:google.type.PostalAddress)
}

void PostalAddress::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PostalAddress_google_2ftype_2fpostal_5faddress_2eproto.base);
  region_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  language_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  postal_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sorting_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  administrative_area_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  locality_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sublocality_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  organization_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  revision_ = 0;
}

PostalAddress::~PostalAddress() {
  // @@protoc_insertion_point(destructor:google.type.PostalAddress)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PostalAddress::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  region_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  language_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  postal_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sorting_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  administrative_area_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  locality_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sublocality_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  organization_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PostalAddress::ArenaDtor(void* object) {
  PostalAddress* _this = reinterpret_cast< PostalAddress* >(object);
  (void)_this;
}
void PostalAddress::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PostalAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PostalAddress& PostalAddress::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PostalAddress_google_2ftype_2fpostal_5faddress_2eproto.base);
  return *internal_default_instance();
}


void PostalAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:google.type.PostalAddress)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_lines_.Clear();
  recipients_.Clear();
  region_code_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  language_code_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  postal_code_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sorting_code_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  administrative_area_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  locality_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sublocality_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  organization_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  revision_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PostalAddress::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 revision = 1[json_name = "revision"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          revision_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string region_code = 2[json_name = "regionCode"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_region_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.type.PostalAddress.region_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string language_code = 3[json_name = "languageCode"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_language_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.type.PostalAddress.language_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string postal_code = 4[json_name = "postalCode"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_postal_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.type.PostalAddress.postal_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sorting_code = 5[json_name = "sortingCode"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_sorting_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.type.PostalAddress.sorting_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string administrative_area = 6[json_name = "administrativeArea"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_administrative_area();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.type.PostalAddress.administrative_area"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string locality = 7[json_name = "locality"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_locality();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.type.PostalAddress.locality"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sublocality = 8[json_name = "sublocality"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_sublocality();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.type.PostalAddress.sublocality"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string address_lines = 9[json_name = "addressLines"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_address_lines();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.type.PostalAddress.address_lines"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string recipients = 10[json_name = "recipients"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_recipients();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.type.PostalAddress.recipients"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      // string organization = 11[json_name = "organization"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_organization();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "google.type.PostalAddress.organization"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PostalAddress::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.type.PostalAddress)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 revision = 1[json_name = "revision"];
  if (this->revision() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_revision(), target);
  }

  // string region_code = 2[json_name = "regionCode"];
  if (this->region_code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_region_code().data(), static_cast<int>(this->_internal_region_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.type.PostalAddress.region_code");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_region_code(), target);
  }

  // string language_code = 3[json_name = "languageCode"];
  if (this->language_code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_language_code().data(), static_cast<int>(this->_internal_language_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.type.PostalAddress.language_code");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_language_code(), target);
  }

  // string postal_code = 4[json_name = "postalCode"];
  if (this->postal_code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_postal_code().data(), static_cast<int>(this->_internal_postal_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.type.PostalAddress.postal_code");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_postal_code(), target);
  }

  // string sorting_code = 5[json_name = "sortingCode"];
  if (this->sorting_code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sorting_code().data(), static_cast<int>(this->_internal_sorting_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.type.PostalAddress.sorting_code");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_sorting_code(), target);
  }

  // string administrative_area = 6[json_name = "administrativeArea"];
  if (this->administrative_area().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_administrative_area().data(), static_cast<int>(this->_internal_administrative_area().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.type.PostalAddress.administrative_area");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_administrative_area(), target);
  }

  // string locality = 7[json_name = "locality"];
  if (this->locality().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_locality().data(), static_cast<int>(this->_internal_locality().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.type.PostalAddress.locality");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_locality(), target);
  }

  // string sublocality = 8[json_name = "sublocality"];
  if (this->sublocality().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sublocality().data(), static_cast<int>(this->_internal_sublocality().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.type.PostalAddress.sublocality");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_sublocality(), target);
  }

  // repeated string address_lines = 9[json_name = "addressLines"];
  for (int i = 0, n = this->_internal_address_lines_size(); i < n; i++) {
    const auto& s = this->_internal_address_lines(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.type.PostalAddress.address_lines");
    target = stream->WriteString(9, s, target);
  }

  // repeated string recipients = 10[json_name = "recipients"];
  for (int i = 0, n = this->_internal_recipients_size(); i < n; i++) {
    const auto& s = this->_internal_recipients(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.type.PostalAddress.recipients");
    target = stream->WriteString(10, s, target);
  }

  // string organization = 11[json_name = "organization"];
  if (this->organization().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_organization().data(), static_cast<int>(this->_internal_organization().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.type.PostalAddress.organization");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_organization(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.type.PostalAddress)
  return target;
}

size_t PostalAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.type.PostalAddress)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string address_lines = 9[json_name = "addressLines"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(address_lines_.size());
  for (int i = 0, n = address_lines_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      address_lines_.Get(i));
  }

  // repeated string recipients = 10[json_name = "recipients"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(recipients_.size());
  for (int i = 0, n = recipients_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      recipients_.Get(i));
  }

  // string region_code = 2[json_name = "regionCode"];
  if (this->region_code().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_region_code());
  }

  // string language_code = 3[json_name = "languageCode"];
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_language_code());
  }

  // string postal_code = 4[json_name = "postalCode"];
  if (this->postal_code().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_postal_code());
  }

  // string sorting_code = 5[json_name = "sortingCode"];
  if (this->sorting_code().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sorting_code());
  }

  // string administrative_area = 6[json_name = "administrativeArea"];
  if (this->administrative_area().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_administrative_area());
  }

  // string locality = 7[json_name = "locality"];
  if (this->locality().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_locality());
  }

  // string sublocality = 8[json_name = "sublocality"];
  if (this->sublocality().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sublocality());
  }

  // string organization = 11[json_name = "organization"];
  if (this->organization().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_organization());
  }

  // int32 revision = 1[json_name = "revision"];
  if (this->revision() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_revision());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PostalAddress::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.type.PostalAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const PostalAddress* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PostalAddress>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.type.PostalAddress)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.type.PostalAddress)
    MergeFrom(*source);
  }
}

void PostalAddress::MergeFrom(const PostalAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.type.PostalAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  address_lines_.MergeFrom(from.address_lines_);
  recipients_.MergeFrom(from.recipients_);
  if (from.region_code().size() > 0) {
    _internal_set_region_code(from._internal_region_code());
  }
  if (from.language_code().size() > 0) {
    _internal_set_language_code(from._internal_language_code());
  }
  if (from.postal_code().size() > 0) {
    _internal_set_postal_code(from._internal_postal_code());
  }
  if (from.sorting_code().size() > 0) {
    _internal_set_sorting_code(from._internal_sorting_code());
  }
  if (from.administrative_area().size() > 0) {
    _internal_set_administrative_area(from._internal_administrative_area());
  }
  if (from.locality().size() > 0) {
    _internal_set_locality(from._internal_locality());
  }
  if (from.sublocality().size() > 0) {
    _internal_set_sublocality(from._internal_sublocality());
  }
  if (from.organization().size() > 0) {
    _internal_set_organization(from._internal_organization());
  }
  if (from.revision() != 0) {
    _internal_set_revision(from._internal_revision());
  }
}

void PostalAddress::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.type.PostalAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PostalAddress::CopyFrom(const PostalAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.type.PostalAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PostalAddress::IsInitialized() const {
  return true;
}

void PostalAddress::InternalSwap(PostalAddress* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  address_lines_.InternalSwap(&other->address_lines_);
  recipients_.InternalSwap(&other->recipients_);
  region_code_.Swap(&other->region_code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  language_code_.Swap(&other->language_code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  postal_code_.Swap(&other->postal_code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sorting_code_.Swap(&other->sorting_code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  administrative_area_.Swap(&other->administrative_area_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  locality_.Swap(&other->locality_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sublocality_.Swap(&other->sublocality_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  organization_.Swap(&other->organization_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(revision_, other->revision_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PostalAddress::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace type
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::type::PostalAddress* Arena::CreateMaybeMessage< ::google::type::PostalAddress >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::type::PostalAddress >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
