// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc/reflection/v1alpha/reflection.proto

#include "grpc/reflection/v1alpha/reflection.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_grpc_2freflection_2fv1alpha_2freflection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ErrorResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_grpc_2freflection_2fv1alpha_2freflection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExtensionNumberResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_grpc_2freflection_2fv1alpha_2freflection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExtensionRequest_grpc_2freflection_2fv1alpha_2freflection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_grpc_2freflection_2fv1alpha_2freflection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FileDescriptorResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_grpc_2freflection_2fv1alpha_2freflection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListServiceResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_grpc_2freflection_2fv1alpha_2freflection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ServerReflectionRequest_grpc_2freflection_2fv1alpha_2freflection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_grpc_2freflection_2fv1alpha_2freflection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ServiceResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto;
namespace grpc {
namespace reflection {
namespace v1alpha {
class ServerReflectionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServerReflectionRequest> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_by_filename_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_containing_symbol_;
  const ::grpc::reflection::v1alpha::ExtensionRequest* file_containing_extension_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr all_extension_numbers_of_type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr list_services_;
} _ServerReflectionRequest_default_instance_;
class ExtensionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExtensionRequest> _instance;
} _ExtensionRequest_default_instance_;
class ServerReflectionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServerReflectionResponse> _instance;
  const ::grpc::reflection::v1alpha::FileDescriptorResponse* file_descriptor_response_;
  const ::grpc::reflection::v1alpha::ExtensionNumberResponse* all_extension_numbers_response_;
  const ::grpc::reflection::v1alpha::ListServiceResponse* list_services_response_;
  const ::grpc::reflection::v1alpha::ErrorResponse* error_response_;
} _ServerReflectionResponse_default_instance_;
class FileDescriptorResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FileDescriptorResponse> _instance;
} _FileDescriptorResponse_default_instance_;
class ExtensionNumberResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExtensionNumberResponse> _instance;
} _ExtensionNumberResponse_default_instance_;
class ListServiceResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListServiceResponse> _instance;
} _ListServiceResponse_default_instance_;
class ServiceResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServiceResponse> _instance;
} _ServiceResponse_default_instance_;
class ErrorResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ErrorResponse> _instance;
} _ErrorResponse_default_instance_;
}  // namespace v1alpha
}  // namespace reflection
}  // namespace grpc
static void InitDefaultsscc_info_ErrorResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::reflection::v1alpha::_ErrorResponse_default_instance_;
    new (ptr) ::grpc::reflection::v1alpha::ErrorResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::reflection::v1alpha::ErrorResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ErrorResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ErrorResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto}, {}};

static void InitDefaultsscc_info_ExtensionNumberResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::reflection::v1alpha::_ExtensionNumberResponse_default_instance_;
    new (ptr) ::grpc::reflection::v1alpha::ExtensionNumberResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::reflection::v1alpha::ExtensionNumberResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExtensionNumberResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExtensionNumberResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto}, {}};

static void InitDefaultsscc_info_ExtensionRequest_grpc_2freflection_2fv1alpha_2freflection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::reflection::v1alpha::_ExtensionRequest_default_instance_;
    new (ptr) ::grpc::reflection::v1alpha::ExtensionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::reflection::v1alpha::ExtensionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExtensionRequest_grpc_2freflection_2fv1alpha_2freflection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExtensionRequest_grpc_2freflection_2fv1alpha_2freflection_2eproto}, {}};

static void InitDefaultsscc_info_FileDescriptorResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::reflection::v1alpha::_FileDescriptorResponse_default_instance_;
    new (ptr) ::grpc::reflection::v1alpha::FileDescriptorResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::reflection::v1alpha::FileDescriptorResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FileDescriptorResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FileDescriptorResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto}, {}};

static void InitDefaultsscc_info_ListServiceResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::reflection::v1alpha::_ListServiceResponse_default_instance_;
    new (ptr) ::grpc::reflection::v1alpha::ListServiceResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::reflection::v1alpha::ListServiceResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListServiceResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListServiceResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto}, {
      &scc_info_ServiceResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base,}};

static void InitDefaultsscc_info_ServerReflectionRequest_grpc_2freflection_2fv1alpha_2freflection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::reflection::v1alpha::_ServerReflectionRequest_default_instance_;
    new (ptr) ::grpc::reflection::v1alpha::ServerReflectionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::reflection::v1alpha::ServerReflectionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ServerReflectionRequest_grpc_2freflection_2fv1alpha_2freflection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ServerReflectionRequest_grpc_2freflection_2fv1alpha_2freflection_2eproto}, {
      &scc_info_ExtensionRequest_grpc_2freflection_2fv1alpha_2freflection_2eproto.base,}};

static void InitDefaultsscc_info_ServerReflectionResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::reflection::v1alpha::_ServerReflectionResponse_default_instance_;
    new (ptr) ::grpc::reflection::v1alpha::ServerReflectionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::reflection::v1alpha::ServerReflectionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_ServerReflectionResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_ServerReflectionResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto}, {
      &scc_info_ServerReflectionRequest_grpc_2freflection_2fv1alpha_2freflection_2eproto.base,
      &scc_info_FileDescriptorResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base,
      &scc_info_ExtensionNumberResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base,
      &scc_info_ListServiceResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base,
      &scc_info_ErrorResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base,}};

static void InitDefaultsscc_info_ServiceResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::reflection::v1alpha::_ServiceResponse_default_instance_;
    new (ptr) ::grpc::reflection::v1alpha::ServiceResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::reflection::v1alpha::ServiceResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ServiceResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ServiceResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpc_2freflection_2fv1alpha_2freflection_2eproto[8];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grpc_2freflection_2fv1alpha_2freflection_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpc_2freflection_2fv1alpha_2freflection_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpc_2freflection_2fv1alpha_2freflection_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ServerReflectionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ServerReflectionRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ServerReflectionRequest, host_),
  offsetof(::grpc::reflection::v1alpha::ServerReflectionRequestDefaultTypeInternal, file_by_filename_),
  offsetof(::grpc::reflection::v1alpha::ServerReflectionRequestDefaultTypeInternal, file_containing_symbol_),
  offsetof(::grpc::reflection::v1alpha::ServerReflectionRequestDefaultTypeInternal, file_containing_extension_),
  offsetof(::grpc::reflection::v1alpha::ServerReflectionRequestDefaultTypeInternal, all_extension_numbers_of_type_),
  offsetof(::grpc::reflection::v1alpha::ServerReflectionRequestDefaultTypeInternal, list_services_),
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ServerReflectionRequest, message_request_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ExtensionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ExtensionRequest, containing_type_),
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ExtensionRequest, extension_number_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ServerReflectionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ServerReflectionResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ServerReflectionResponse, valid_host_),
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ServerReflectionResponse, original_request_),
  offsetof(::grpc::reflection::v1alpha::ServerReflectionResponseDefaultTypeInternal, file_descriptor_response_),
  offsetof(::grpc::reflection::v1alpha::ServerReflectionResponseDefaultTypeInternal, all_extension_numbers_response_),
  offsetof(::grpc::reflection::v1alpha::ServerReflectionResponseDefaultTypeInternal, list_services_response_),
  offsetof(::grpc::reflection::v1alpha::ServerReflectionResponseDefaultTypeInternal, error_response_),
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ServerReflectionResponse, message_response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::FileDescriptorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::FileDescriptorResponse, file_descriptor_proto_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ExtensionNumberResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ExtensionNumberResponse, base_type_name_),
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ExtensionNumberResponse, extension_number_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ListServiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ListServiceResponse, service_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ServiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ServiceResponse, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ErrorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ErrorResponse, error_code_),
  PROTOBUF_FIELD_OFFSET(::grpc::reflection::v1alpha::ErrorResponse, error_message_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpc::reflection::v1alpha::ServerReflectionRequest)},
  { 12, -1, sizeof(::grpc::reflection::v1alpha::ExtensionRequest)},
  { 19, -1, sizeof(::grpc::reflection::v1alpha::ServerReflectionResponse)},
  { 31, -1, sizeof(::grpc::reflection::v1alpha::FileDescriptorResponse)},
  { 37, -1, sizeof(::grpc::reflection::v1alpha::ExtensionNumberResponse)},
  { 44, -1, sizeof(::grpc::reflection::v1alpha::ListServiceResponse)},
  { 50, -1, sizeof(::grpc::reflection::v1alpha::ServiceResponse)},
  { 56, -1, sizeof(::grpc::reflection::v1alpha::ErrorResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::reflection::v1alpha::_ServerReflectionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::reflection::v1alpha::_ExtensionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::reflection::v1alpha::_ServerReflectionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::reflection::v1alpha::_FileDescriptorResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::reflection::v1alpha::_ExtensionNumberResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::reflection::v1alpha::_ListServiceResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::reflection::v1alpha::_ServiceResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::reflection::v1alpha::_ErrorResponse_default_instance_),
};

const char descriptor_table_protodef_grpc_2freflection_2fv1alpha_2freflection_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n(grpc/reflection/v1alpha/reflection.pro"
  "to\022\027grpc.reflection.v1alpha\"\370\002\n\027ServerRe"
  "flectionRequest\022\022\n\004host\030\001 \001(\tR\004host\022*\n\020f"
  "ile_by_filename\030\003 \001(\tH\000R\016fileByFilename\022"
  "6\n\026file_containing_symbol\030\004 \001(\tH\000R\024fileC"
  "ontainingSymbol\022g\n\031file_containing_exten"
  "sion\030\005 \001(\0132).grpc.reflection.v1alpha.Ext"
  "ensionRequestH\000R\027fileContainingExtension"
  "\022B\n\035all_extension_numbers_of_type\030\006 \001(\tH"
  "\000R\031allExtensionNumbersOfType\022%\n\rlist_ser"
  "vices\030\007 \001(\tH\000R\014listServicesB\021\n\017message_r"
  "equest\"f\n\020ExtensionRequest\022\'\n\017containing"
  "_type\030\001 \001(\tR\016containingType\022)\n\020extension"
  "_number\030\002 \001(\005R\017extensionNumber\"\307\004\n\030Serve"
  "rReflectionResponse\022\035\n\nvalid_host\030\001 \001(\tR"
  "\tvalidHost\022[\n\020original_request\030\002 \001(\01320.g"
  "rpc.reflection.v1alpha.ServerReflectionR"
  "equestR\017originalRequest\022k\n\030file_descript"
  "or_response\030\004 \001(\0132/.grpc.reflection.v1al"
  "pha.FileDescriptorResponseH\000R\026fileDescri"
  "ptorResponse\022w\n\036all_extension_numbers_re"
  "sponse\030\005 \001(\01320.grpc.reflection.v1alpha.E"
  "xtensionNumberResponseH\000R\033allExtensionNu"
  "mbersResponse\022d\n\026list_services_response\030"
  "\006 \001(\0132,.grpc.reflection.v1alpha.ListServ"
  "iceResponseH\000R\024listServicesResponse\022O\n\016e"
  "rror_response\030\007 \001(\0132&.grpc.reflection.v1"
  "alpha.ErrorResponseH\000R\rerrorResponseB\022\n\020"
  "message_response\"L\n\026FileDescriptorRespon"
  "se\0222\n\025file_descriptor_proto\030\001 \003(\014R\023fileD"
  "escriptorProto\"j\n\027ExtensionNumberRespons"
  "e\022$\n\016base_type_name\030\001 \001(\tR\014baseTypeName\022"
  ")\n\020extension_number\030\002 \003(\005R\017extensionNumb"
  "er\"Y\n\023ListServiceResponse\022B\n\007service\030\001 \003"
  "(\0132(.grpc.reflection.v1alpha.ServiceResp"
  "onseR\007service\"%\n\017ServiceResponse\022\022\n\004name"
  "\030\001 \001(\tR\004name\"S\n\rErrorResponse\022\035\n\nerror_c"
  "ode\030\001 \001(\005R\terrorCode\022#\n\rerror_message\030\002 "
  "\001(\tR\014errorMessage2\223\001\n\020ServerReflection\022\177"
  "\n\024ServerReflectionInfo\0220.grpc.reflection"
  ".v1alpha.ServerReflectionRequest\0321.grpc."
  "reflection.v1alpha.ServerReflectionRespo"
  "nse(\0010\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpc_2freflection_2fv1alpha_2freflection_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_grpc_2freflection_2fv1alpha_2freflection_2eproto_sccs[8] = {
  &scc_info_ErrorResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base,
  &scc_info_ExtensionNumberResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base,
  &scc_info_ExtensionRequest_grpc_2freflection_2fv1alpha_2freflection_2eproto.base,
  &scc_info_FileDescriptorResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base,
  &scc_info_ListServiceResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base,
  &scc_info_ServerReflectionRequest_grpc_2freflection_2fv1alpha_2freflection_2eproto.base,
  &scc_info_ServerReflectionResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base,
  &scc_info_ServiceResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpc_2freflection_2fv1alpha_2freflection_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpc_2freflection_2fv1alpha_2freflection_2eproto = {
  false, false, descriptor_table_protodef_grpc_2freflection_2fv1alpha_2freflection_2eproto, "grpc/reflection/v1alpha/reflection.proto", 1695,
  &descriptor_table_grpc_2freflection_2fv1alpha_2freflection_2eproto_once, descriptor_table_grpc_2freflection_2fv1alpha_2freflection_2eproto_sccs, descriptor_table_grpc_2freflection_2fv1alpha_2freflection_2eproto_deps, 8, 0,
  schemas, file_default_instances, TableStruct_grpc_2freflection_2fv1alpha_2freflection_2eproto::offsets,
  file_level_metadata_grpc_2freflection_2fv1alpha_2freflection_2eproto, 8, file_level_enum_descriptors_grpc_2freflection_2fv1alpha_2freflection_2eproto, file_level_service_descriptors_grpc_2freflection_2fv1alpha_2freflection_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_grpc_2freflection_2fv1alpha_2freflection_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_grpc_2freflection_2fv1alpha_2freflection_2eproto)), true);
namespace grpc {
namespace reflection {
namespace v1alpha {

// ===================================================================

void ServerReflectionRequest::InitAsDefaultInstance() {
  ::grpc::reflection::v1alpha::_ServerReflectionRequest_default_instance_.file_by_filename_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::grpc::reflection::v1alpha::_ServerReflectionRequest_default_instance_.file_containing_symbol_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::grpc::reflection::v1alpha::_ServerReflectionRequest_default_instance_.file_containing_extension_ = const_cast< ::grpc::reflection::v1alpha::ExtensionRequest*>(
      ::grpc::reflection::v1alpha::ExtensionRequest::internal_default_instance());
  ::grpc::reflection::v1alpha::_ServerReflectionRequest_default_instance_.all_extension_numbers_of_type_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::grpc::reflection::v1alpha::_ServerReflectionRequest_default_instance_.list_services_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
class ServerReflectionRequest::_Internal {
 public:
  static const ::grpc::reflection::v1alpha::ExtensionRequest& file_containing_extension(const ServerReflectionRequest* msg);
};

const ::grpc::reflection::v1alpha::ExtensionRequest&
ServerReflectionRequest::_Internal::file_containing_extension(const ServerReflectionRequest* msg) {
  return *msg->message_request_.file_containing_extension_;
}
void ServerReflectionRequest::set_allocated_file_containing_extension(::grpc::reflection::v1alpha::ExtensionRequest* file_containing_extension) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message_request();
  if (file_containing_extension) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(file_containing_extension);
    if (message_arena != submessage_arena) {
      file_containing_extension = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, file_containing_extension, submessage_arena);
    }
    set_has_file_containing_extension();
    message_request_.file_containing_extension_ = file_containing_extension;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1alpha.ServerReflectionRequest.file_containing_extension)
}
ServerReflectionRequest::ServerReflectionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.reflection.v1alpha.ServerReflectionRequest)
}
ServerReflectionRequest::ServerReflectionRequest(const ServerReflectionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_host().empty()) {
    host_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_host(),
      GetArena());
  }
  clear_has_message_request();
  switch (from.message_request_case()) {
    case kFileByFilename: {
      _internal_set_file_by_filename(from._internal_file_by_filename());
      break;
    }
    case kFileContainingSymbol: {
      _internal_set_file_containing_symbol(from._internal_file_containing_symbol());
      break;
    }
    case kFileContainingExtension: {
      _internal_mutable_file_containing_extension()->::grpc::reflection::v1alpha::ExtensionRequest::MergeFrom(from._internal_file_containing_extension());
      break;
    }
    case kAllExtensionNumbersOfType: {
      _internal_set_all_extension_numbers_of_type(from._internal_all_extension_numbers_of_type());
      break;
    }
    case kListServices: {
      _internal_set_list_services(from._internal_list_services());
      break;
    }
    case MESSAGE_REQUEST_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1alpha.ServerReflectionRequest)
}

void ServerReflectionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ServerReflectionRequest_grpc_2freflection_2fv1alpha_2freflection_2eproto.base);
  host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_has_message_request();
}

ServerReflectionRequest::~ServerReflectionRequest() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1alpha.ServerReflectionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerReflectionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  host_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_message_request()) {
    clear_message_request();
  }
}

void ServerReflectionRequest::ArenaDtor(void* object) {
  ServerReflectionRequest* _this = reinterpret_cast< ServerReflectionRequest* >(object);
  (void)_this;
}
void ServerReflectionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerReflectionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerReflectionRequest& ServerReflectionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServerReflectionRequest_grpc_2freflection_2fv1alpha_2freflection_2eproto.base);
  return *internal_default_instance();
}


void ServerReflectionRequest::clear_message_request() {
// @@protoc_insertion_point(one_of_clear_start:grpc.reflection.v1alpha.ServerReflectionRequest)
  switch (message_request_case()) {
    case kFileByFilename: {
      message_request_.file_by_filename_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kFileContainingSymbol: {
      message_request_.file_containing_symbol_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kFileContainingExtension: {
      if (GetArena() == nullptr) {
        delete message_request_.file_containing_extension_;
      }
      break;
    }
    case kAllExtensionNumbersOfType: {
      message_request_.all_extension_numbers_of_type_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kListServices: {
      message_request_.list_services_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case MESSAGE_REQUEST_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_REQUEST_NOT_SET;
}


void ServerReflectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.reflection.v1alpha.ServerReflectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  host_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  clear_message_request();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerReflectionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string host = 1[json_name = "host"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_host();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.reflection.v1alpha.ServerReflectionRequest.host"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string file_by_filename = 3[json_name = "fileByFilename"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_file_by_filename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.reflection.v1alpha.ServerReflectionRequest.file_by_filename"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string file_containing_symbol = 4[json_name = "fileContainingSymbol"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_file_containing_symbol();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.reflection.v1alpha.ServerReflectionRequest.file_containing_symbol"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc.reflection.v1alpha.ExtensionRequest file_containing_extension = 5[json_name = "fileContainingExtension"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_file_containing_extension(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string all_extension_numbers_of_type = 6[json_name = "allExtensionNumbersOfType"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_all_extension_numbers_of_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.reflection.v1alpha.ServerReflectionRequest.all_extension_numbers_of_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string list_services = 7[json_name = "listServices"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_list_services();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.reflection.v1alpha.ServerReflectionRequest.list_services"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerReflectionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1alpha.ServerReflectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host = 1[json_name = "host"];
  if (this->host().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_host().data(), static_cast<int>(this->_internal_host().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.reflection.v1alpha.ServerReflectionRequest.host");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_host(), target);
  }

  // string file_by_filename = 3[json_name = "fileByFilename"];
  if (_internal_has_file_by_filename()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_by_filename().data(), static_cast<int>(this->_internal_file_by_filename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.reflection.v1alpha.ServerReflectionRequest.file_by_filename");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_file_by_filename(), target);
  }

  // string file_containing_symbol = 4[json_name = "fileContainingSymbol"];
  if (_internal_has_file_containing_symbol()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_containing_symbol().data(), static_cast<int>(this->_internal_file_containing_symbol().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.reflection.v1alpha.ServerReflectionRequest.file_containing_symbol");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_file_containing_symbol(), target);
  }

  // .grpc.reflection.v1alpha.ExtensionRequest file_containing_extension = 5[json_name = "fileContainingExtension"];
  if (_internal_has_file_containing_extension()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::file_containing_extension(this), target, stream);
  }

  // string all_extension_numbers_of_type = 6[json_name = "allExtensionNumbersOfType"];
  if (_internal_has_all_extension_numbers_of_type()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_all_extension_numbers_of_type().data(), static_cast<int>(this->_internal_all_extension_numbers_of_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.reflection.v1alpha.ServerReflectionRequest.all_extension_numbers_of_type");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_all_extension_numbers_of_type(), target);
  }

  // string list_services = 7[json_name = "listServices"];
  if (_internal_has_list_services()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_list_services().data(), static_cast<int>(this->_internal_list_services().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.reflection.v1alpha.ServerReflectionRequest.list_services");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_list_services(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1alpha.ServerReflectionRequest)
  return target;
}

size_t ServerReflectionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.reflection.v1alpha.ServerReflectionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string host = 1[json_name = "host"];
  if (this->host().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_host());
  }

  switch (message_request_case()) {
    // string file_by_filename = 3[json_name = "fileByFilename"];
    case kFileByFilename: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_file_by_filename());
      break;
    }
    // string file_containing_symbol = 4[json_name = "fileContainingSymbol"];
    case kFileContainingSymbol: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_file_containing_symbol());
      break;
    }
    // .grpc.reflection.v1alpha.ExtensionRequest file_containing_extension = 5[json_name = "fileContainingExtension"];
    case kFileContainingExtension: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_request_.file_containing_extension_);
      break;
    }
    // string all_extension_numbers_of_type = 6[json_name = "allExtensionNumbersOfType"];
    case kAllExtensionNumbersOfType: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_all_extension_numbers_of_type());
      break;
    }
    // string list_services = 7[json_name = "listServices"];
    case kListServices: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_list_services());
      break;
    }
    case MESSAGE_REQUEST_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerReflectionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.reflection.v1alpha.ServerReflectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerReflectionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerReflectionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.reflection.v1alpha.ServerReflectionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.reflection.v1alpha.ServerReflectionRequest)
    MergeFrom(*source);
  }
}

void ServerReflectionRequest::MergeFrom(const ServerReflectionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.reflection.v1alpha.ServerReflectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.host().size() > 0) {
    _internal_set_host(from._internal_host());
  }
  switch (from.message_request_case()) {
    case kFileByFilename: {
      _internal_set_file_by_filename(from._internal_file_by_filename());
      break;
    }
    case kFileContainingSymbol: {
      _internal_set_file_containing_symbol(from._internal_file_containing_symbol());
      break;
    }
    case kFileContainingExtension: {
      _internal_mutable_file_containing_extension()->::grpc::reflection::v1alpha::ExtensionRequest::MergeFrom(from._internal_file_containing_extension());
      break;
    }
    case kAllExtensionNumbersOfType: {
      _internal_set_all_extension_numbers_of_type(from._internal_all_extension_numbers_of_type());
      break;
    }
    case kListServices: {
      _internal_set_list_services(from._internal_list_services());
      break;
    }
    case MESSAGE_REQUEST_NOT_SET: {
      break;
    }
  }
}

void ServerReflectionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.reflection.v1alpha.ServerReflectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerReflectionRequest::CopyFrom(const ServerReflectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.reflection.v1alpha.ServerReflectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerReflectionRequest::IsInitialized() const {
  return true;
}

void ServerReflectionRequest::InternalSwap(ServerReflectionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  host_.Swap(&other->host_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(message_request_, other->message_request_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerReflectionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ExtensionRequest::InitAsDefaultInstance() {
}
class ExtensionRequest::_Internal {
 public:
};

ExtensionRequest::ExtensionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.reflection.v1alpha.ExtensionRequest)
}
ExtensionRequest::ExtensionRequest(const ExtensionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  containing_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_containing_type().empty()) {
    containing_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_containing_type(),
      GetArena());
  }
  extension_number_ = from.extension_number_;
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1alpha.ExtensionRequest)
}

void ExtensionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExtensionRequest_grpc_2freflection_2fv1alpha_2freflection_2eproto.base);
  containing_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  extension_number_ = 0;
}

ExtensionRequest::~ExtensionRequest() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1alpha.ExtensionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExtensionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  containing_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ExtensionRequest::ArenaDtor(void* object) {
  ExtensionRequest* _this = reinterpret_cast< ExtensionRequest* >(object);
  (void)_this;
}
void ExtensionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExtensionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExtensionRequest& ExtensionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExtensionRequest_grpc_2freflection_2fv1alpha_2freflection_2eproto.base);
  return *internal_default_instance();
}


void ExtensionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.reflection.v1alpha.ExtensionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  containing_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  extension_number_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExtensionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string containing_type = 1[json_name = "containingType"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_containing_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.reflection.v1alpha.ExtensionRequest.containing_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 extension_number = 2[json_name = "extensionNumber"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          extension_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExtensionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1alpha.ExtensionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string containing_type = 1[json_name = "containingType"];
  if (this->containing_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_containing_type().data(), static_cast<int>(this->_internal_containing_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.reflection.v1alpha.ExtensionRequest.containing_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_containing_type(), target);
  }

  // int32 extension_number = 2[json_name = "extensionNumber"];
  if (this->extension_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_extension_number(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1alpha.ExtensionRequest)
  return target;
}

size_t ExtensionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.reflection.v1alpha.ExtensionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string containing_type = 1[json_name = "containingType"];
  if (this->containing_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_containing_type());
  }

  // int32 extension_number = 2[json_name = "extensionNumber"];
  if (this->extension_number() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_extension_number());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExtensionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.reflection.v1alpha.ExtensionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExtensionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExtensionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.reflection.v1alpha.ExtensionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.reflection.v1alpha.ExtensionRequest)
    MergeFrom(*source);
  }
}

void ExtensionRequest::MergeFrom(const ExtensionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.reflection.v1alpha.ExtensionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.containing_type().size() > 0) {
    _internal_set_containing_type(from._internal_containing_type());
  }
  if (from.extension_number() != 0) {
    _internal_set_extension_number(from._internal_extension_number());
  }
}

void ExtensionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.reflection.v1alpha.ExtensionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtensionRequest::CopyFrom(const ExtensionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.reflection.v1alpha.ExtensionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtensionRequest::IsInitialized() const {
  return true;
}

void ExtensionRequest::InternalSwap(ExtensionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  containing_type_.Swap(&other->containing_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(extension_number_, other->extension_number_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExtensionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ServerReflectionResponse::InitAsDefaultInstance() {
  ::grpc::reflection::v1alpha::_ServerReflectionResponse_default_instance_._instance.get_mutable()->original_request_ = const_cast< ::grpc::reflection::v1alpha::ServerReflectionRequest*>(
      ::grpc::reflection::v1alpha::ServerReflectionRequest::internal_default_instance());
  ::grpc::reflection::v1alpha::_ServerReflectionResponse_default_instance_.file_descriptor_response_ = const_cast< ::grpc::reflection::v1alpha::FileDescriptorResponse*>(
      ::grpc::reflection::v1alpha::FileDescriptorResponse::internal_default_instance());
  ::grpc::reflection::v1alpha::_ServerReflectionResponse_default_instance_.all_extension_numbers_response_ = const_cast< ::grpc::reflection::v1alpha::ExtensionNumberResponse*>(
      ::grpc::reflection::v1alpha::ExtensionNumberResponse::internal_default_instance());
  ::grpc::reflection::v1alpha::_ServerReflectionResponse_default_instance_.list_services_response_ = const_cast< ::grpc::reflection::v1alpha::ListServiceResponse*>(
      ::grpc::reflection::v1alpha::ListServiceResponse::internal_default_instance());
  ::grpc::reflection::v1alpha::_ServerReflectionResponse_default_instance_.error_response_ = const_cast< ::grpc::reflection::v1alpha::ErrorResponse*>(
      ::grpc::reflection::v1alpha::ErrorResponse::internal_default_instance());
}
class ServerReflectionResponse::_Internal {
 public:
  static const ::grpc::reflection::v1alpha::ServerReflectionRequest& original_request(const ServerReflectionResponse* msg);
  static const ::grpc::reflection::v1alpha::FileDescriptorResponse& file_descriptor_response(const ServerReflectionResponse* msg);
  static const ::grpc::reflection::v1alpha::ExtensionNumberResponse& all_extension_numbers_response(const ServerReflectionResponse* msg);
  static const ::grpc::reflection::v1alpha::ListServiceResponse& list_services_response(const ServerReflectionResponse* msg);
  static const ::grpc::reflection::v1alpha::ErrorResponse& error_response(const ServerReflectionResponse* msg);
};

const ::grpc::reflection::v1alpha::ServerReflectionRequest&
ServerReflectionResponse::_Internal::original_request(const ServerReflectionResponse* msg) {
  return *msg->original_request_;
}
const ::grpc::reflection::v1alpha::FileDescriptorResponse&
ServerReflectionResponse::_Internal::file_descriptor_response(const ServerReflectionResponse* msg) {
  return *msg->message_response_.file_descriptor_response_;
}
const ::grpc::reflection::v1alpha::ExtensionNumberResponse&
ServerReflectionResponse::_Internal::all_extension_numbers_response(const ServerReflectionResponse* msg) {
  return *msg->message_response_.all_extension_numbers_response_;
}
const ::grpc::reflection::v1alpha::ListServiceResponse&
ServerReflectionResponse::_Internal::list_services_response(const ServerReflectionResponse* msg) {
  return *msg->message_response_.list_services_response_;
}
const ::grpc::reflection::v1alpha::ErrorResponse&
ServerReflectionResponse::_Internal::error_response(const ServerReflectionResponse* msg) {
  return *msg->message_response_.error_response_;
}
void ServerReflectionResponse::set_allocated_file_descriptor_response(::grpc::reflection::v1alpha::FileDescriptorResponse* file_descriptor_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message_response();
  if (file_descriptor_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(file_descriptor_response);
    if (message_arena != submessage_arena) {
      file_descriptor_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, file_descriptor_response, submessage_arena);
    }
    set_has_file_descriptor_response();
    message_response_.file_descriptor_response_ = file_descriptor_response;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1alpha.ServerReflectionResponse.file_descriptor_response)
}
void ServerReflectionResponse::set_allocated_all_extension_numbers_response(::grpc::reflection::v1alpha::ExtensionNumberResponse* all_extension_numbers_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message_response();
  if (all_extension_numbers_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(all_extension_numbers_response);
    if (message_arena != submessage_arena) {
      all_extension_numbers_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, all_extension_numbers_response, submessage_arena);
    }
    set_has_all_extension_numbers_response();
    message_response_.all_extension_numbers_response_ = all_extension_numbers_response;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1alpha.ServerReflectionResponse.all_extension_numbers_response)
}
void ServerReflectionResponse::set_allocated_list_services_response(::grpc::reflection::v1alpha::ListServiceResponse* list_services_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message_response();
  if (list_services_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(list_services_response);
    if (message_arena != submessage_arena) {
      list_services_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, list_services_response, submessage_arena);
    }
    set_has_list_services_response();
    message_response_.list_services_response_ = list_services_response;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1alpha.ServerReflectionResponse.list_services_response)
}
void ServerReflectionResponse::set_allocated_error_response(::grpc::reflection::v1alpha::ErrorResponse* error_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message_response();
  if (error_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(error_response);
    if (message_arena != submessage_arena) {
      error_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, error_response, submessage_arena);
    }
    set_has_error_response();
    message_response_.error_response_ = error_response;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1alpha.ServerReflectionResponse.error_response)
}
ServerReflectionResponse::ServerReflectionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.reflection.v1alpha.ServerReflectionResponse)
}
ServerReflectionResponse::ServerReflectionResponse(const ServerReflectionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  valid_host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_valid_host().empty()) {
    valid_host_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_valid_host(),
      GetArena());
  }
  if (from._internal_has_original_request()) {
    original_request_ = new ::grpc::reflection::v1alpha::ServerReflectionRequest(*from.original_request_);
  } else {
    original_request_ = nullptr;
  }
  clear_has_message_response();
  switch (from.message_response_case()) {
    case kFileDescriptorResponse: {
      _internal_mutable_file_descriptor_response()->::grpc::reflection::v1alpha::FileDescriptorResponse::MergeFrom(from._internal_file_descriptor_response());
      break;
    }
    case kAllExtensionNumbersResponse: {
      _internal_mutable_all_extension_numbers_response()->::grpc::reflection::v1alpha::ExtensionNumberResponse::MergeFrom(from._internal_all_extension_numbers_response());
      break;
    }
    case kListServicesResponse: {
      _internal_mutable_list_services_response()->::grpc::reflection::v1alpha::ListServiceResponse::MergeFrom(from._internal_list_services_response());
      break;
    }
    case kErrorResponse: {
      _internal_mutable_error_response()->::grpc::reflection::v1alpha::ErrorResponse::MergeFrom(from._internal_error_response());
      break;
    }
    case MESSAGE_RESPONSE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1alpha.ServerReflectionResponse)
}

void ServerReflectionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ServerReflectionResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base);
  valid_host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  original_request_ = nullptr;
  clear_has_message_response();
}

ServerReflectionResponse::~ServerReflectionResponse() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1alpha.ServerReflectionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerReflectionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  valid_host_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete original_request_;
  if (has_message_response()) {
    clear_message_response();
  }
}

void ServerReflectionResponse::ArenaDtor(void* object) {
  ServerReflectionResponse* _this = reinterpret_cast< ServerReflectionResponse* >(object);
  (void)_this;
}
void ServerReflectionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerReflectionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerReflectionResponse& ServerReflectionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServerReflectionResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base);
  return *internal_default_instance();
}


void ServerReflectionResponse::clear_message_response() {
// @@protoc_insertion_point(one_of_clear_start:grpc.reflection.v1alpha.ServerReflectionResponse)
  switch (message_response_case()) {
    case kFileDescriptorResponse: {
      if (GetArena() == nullptr) {
        delete message_response_.file_descriptor_response_;
      }
      break;
    }
    case kAllExtensionNumbersResponse: {
      if (GetArena() == nullptr) {
        delete message_response_.all_extension_numbers_response_;
      }
      break;
    }
    case kListServicesResponse: {
      if (GetArena() == nullptr) {
        delete message_response_.list_services_response_;
      }
      break;
    }
    case kErrorResponse: {
      if (GetArena() == nullptr) {
        delete message_response_.error_response_;
      }
      break;
    }
    case MESSAGE_RESPONSE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_RESPONSE_NOT_SET;
}


void ServerReflectionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.reflection.v1alpha.ServerReflectionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  valid_host_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && original_request_ != nullptr) {
    delete original_request_;
  }
  original_request_ = nullptr;
  clear_message_response();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerReflectionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string valid_host = 1[json_name = "validHost"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_valid_host();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.reflection.v1alpha.ServerReflectionResponse.valid_host"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc.reflection.v1alpha.ServerReflectionRequest original_request = 2[json_name = "originalRequest"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_original_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc.reflection.v1alpha.FileDescriptorResponse file_descriptor_response = 4[json_name = "fileDescriptorResponse"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_file_descriptor_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc.reflection.v1alpha.ExtensionNumberResponse all_extension_numbers_response = 5[json_name = "allExtensionNumbersResponse"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_all_extension_numbers_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc.reflection.v1alpha.ListServiceResponse list_services_response = 6[json_name = "listServicesResponse"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_services_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc.reflection.v1alpha.ErrorResponse error_response = 7[json_name = "errorResponse"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_error_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerReflectionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1alpha.ServerReflectionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string valid_host = 1[json_name = "validHost"];
  if (this->valid_host().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_valid_host().data(), static_cast<int>(this->_internal_valid_host().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.reflection.v1alpha.ServerReflectionResponse.valid_host");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_valid_host(), target);
  }

  // .grpc.reflection.v1alpha.ServerReflectionRequest original_request = 2[json_name = "originalRequest"];
  if (this->has_original_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::original_request(this), target, stream);
  }

  // .grpc.reflection.v1alpha.FileDescriptorResponse file_descriptor_response = 4[json_name = "fileDescriptorResponse"];
  if (_internal_has_file_descriptor_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::file_descriptor_response(this), target, stream);
  }

  // .grpc.reflection.v1alpha.ExtensionNumberResponse all_extension_numbers_response = 5[json_name = "allExtensionNumbersResponse"];
  if (_internal_has_all_extension_numbers_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::all_extension_numbers_response(this), target, stream);
  }

  // .grpc.reflection.v1alpha.ListServiceResponse list_services_response = 6[json_name = "listServicesResponse"];
  if (_internal_has_list_services_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::list_services_response(this), target, stream);
  }

  // .grpc.reflection.v1alpha.ErrorResponse error_response = 7[json_name = "errorResponse"];
  if (_internal_has_error_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::error_response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1alpha.ServerReflectionResponse)
  return target;
}

size_t ServerReflectionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.reflection.v1alpha.ServerReflectionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string valid_host = 1[json_name = "validHost"];
  if (this->valid_host().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_valid_host());
  }

  // .grpc.reflection.v1alpha.ServerReflectionRequest original_request = 2[json_name = "originalRequest"];
  if (this->has_original_request()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *original_request_);
  }

  switch (message_response_case()) {
    // .grpc.reflection.v1alpha.FileDescriptorResponse file_descriptor_response = 4[json_name = "fileDescriptorResponse"];
    case kFileDescriptorResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_response_.file_descriptor_response_);
      break;
    }
    // .grpc.reflection.v1alpha.ExtensionNumberResponse all_extension_numbers_response = 5[json_name = "allExtensionNumbersResponse"];
    case kAllExtensionNumbersResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_response_.all_extension_numbers_response_);
      break;
    }
    // .grpc.reflection.v1alpha.ListServiceResponse list_services_response = 6[json_name = "listServicesResponse"];
    case kListServicesResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_response_.list_services_response_);
      break;
    }
    // .grpc.reflection.v1alpha.ErrorResponse error_response = 7[json_name = "errorResponse"];
    case kErrorResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_response_.error_response_);
      break;
    }
    case MESSAGE_RESPONSE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerReflectionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.reflection.v1alpha.ServerReflectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerReflectionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerReflectionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.reflection.v1alpha.ServerReflectionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.reflection.v1alpha.ServerReflectionResponse)
    MergeFrom(*source);
  }
}

void ServerReflectionResponse::MergeFrom(const ServerReflectionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.reflection.v1alpha.ServerReflectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.valid_host().size() > 0) {
    _internal_set_valid_host(from._internal_valid_host());
  }
  if (from.has_original_request()) {
    _internal_mutable_original_request()->::grpc::reflection::v1alpha::ServerReflectionRequest::MergeFrom(from._internal_original_request());
  }
  switch (from.message_response_case()) {
    case kFileDescriptorResponse: {
      _internal_mutable_file_descriptor_response()->::grpc::reflection::v1alpha::FileDescriptorResponse::MergeFrom(from._internal_file_descriptor_response());
      break;
    }
    case kAllExtensionNumbersResponse: {
      _internal_mutable_all_extension_numbers_response()->::grpc::reflection::v1alpha::ExtensionNumberResponse::MergeFrom(from._internal_all_extension_numbers_response());
      break;
    }
    case kListServicesResponse: {
      _internal_mutable_list_services_response()->::grpc::reflection::v1alpha::ListServiceResponse::MergeFrom(from._internal_list_services_response());
      break;
    }
    case kErrorResponse: {
      _internal_mutable_error_response()->::grpc::reflection::v1alpha::ErrorResponse::MergeFrom(from._internal_error_response());
      break;
    }
    case MESSAGE_RESPONSE_NOT_SET: {
      break;
    }
  }
}

void ServerReflectionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.reflection.v1alpha.ServerReflectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerReflectionResponse::CopyFrom(const ServerReflectionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.reflection.v1alpha.ServerReflectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerReflectionResponse::IsInitialized() const {
  return true;
}

void ServerReflectionResponse::InternalSwap(ServerReflectionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  valid_host_.Swap(&other->valid_host_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(original_request_, other->original_request_);
  swap(message_response_, other->message_response_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerReflectionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FileDescriptorResponse::InitAsDefaultInstance() {
}
class FileDescriptorResponse::_Internal {
 public:
};

FileDescriptorResponse::FileDescriptorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  file_descriptor_proto_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.reflection.v1alpha.FileDescriptorResponse)
}
FileDescriptorResponse::FileDescriptorResponse(const FileDescriptorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      file_descriptor_proto_(from.file_descriptor_proto_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1alpha.FileDescriptorResponse)
}

void FileDescriptorResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FileDescriptorResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base);
}

FileDescriptorResponse::~FileDescriptorResponse() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1alpha.FileDescriptorResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FileDescriptorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FileDescriptorResponse::ArenaDtor(void* object) {
  FileDescriptorResponse* _this = reinterpret_cast< FileDescriptorResponse* >(object);
  (void)_this;
}
void FileDescriptorResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FileDescriptorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FileDescriptorResponse& FileDescriptorResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FileDescriptorResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base);
  return *internal_default_instance();
}


void FileDescriptorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.reflection.v1alpha.FileDescriptorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_descriptor_proto_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileDescriptorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated bytes file_descriptor_proto = 1[json_name = "fileDescriptorProto"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_file_descriptor_proto();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FileDescriptorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1alpha.FileDescriptorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes file_descriptor_proto = 1[json_name = "fileDescriptorProto"];
  for (int i = 0, n = this->_internal_file_descriptor_proto_size(); i < n; i++) {
    const auto& s = this->_internal_file_descriptor_proto(i);
    target = stream->WriteBytes(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1alpha.FileDescriptorResponse)
  return target;
}

size_t FileDescriptorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.reflection.v1alpha.FileDescriptorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes file_descriptor_proto = 1[json_name = "fileDescriptorProto"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(file_descriptor_proto_.size());
  for (int i = 0, n = file_descriptor_proto_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      file_descriptor_proto_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileDescriptorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.reflection.v1alpha.FileDescriptorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FileDescriptorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FileDescriptorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.reflection.v1alpha.FileDescriptorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.reflection.v1alpha.FileDescriptorResponse)
    MergeFrom(*source);
  }
}

void FileDescriptorResponse::MergeFrom(const FileDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.reflection.v1alpha.FileDescriptorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  file_descriptor_proto_.MergeFrom(from.file_descriptor_proto_);
}

void FileDescriptorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.reflection.v1alpha.FileDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileDescriptorResponse::CopyFrom(const FileDescriptorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.reflection.v1alpha.FileDescriptorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileDescriptorResponse::IsInitialized() const {
  return true;
}

void FileDescriptorResponse::InternalSwap(FileDescriptorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  file_descriptor_proto_.InternalSwap(&other->file_descriptor_proto_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FileDescriptorResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ExtensionNumberResponse::InitAsDefaultInstance() {
}
class ExtensionNumberResponse::_Internal {
 public:
};

ExtensionNumberResponse::ExtensionNumberResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  extension_number_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.reflection.v1alpha.ExtensionNumberResponse)
}
ExtensionNumberResponse::ExtensionNumberResponse(const ExtensionNumberResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      extension_number_(from.extension_number_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  base_type_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_base_type_name().empty()) {
    base_type_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_base_type_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1alpha.ExtensionNumberResponse)
}

void ExtensionNumberResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExtensionNumberResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base);
  base_type_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ExtensionNumberResponse::~ExtensionNumberResponse() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1alpha.ExtensionNumberResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExtensionNumberResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  base_type_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ExtensionNumberResponse::ArenaDtor(void* object) {
  ExtensionNumberResponse* _this = reinterpret_cast< ExtensionNumberResponse* >(object);
  (void)_this;
}
void ExtensionNumberResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExtensionNumberResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExtensionNumberResponse& ExtensionNumberResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExtensionNumberResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base);
  return *internal_default_instance();
}


void ExtensionNumberResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.reflection.v1alpha.ExtensionNumberResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extension_number_.Clear();
  base_type_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExtensionNumberResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string base_type_name = 1[json_name = "baseTypeName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_base_type_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.reflection.v1alpha.ExtensionNumberResponse.base_type_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 extension_number = 2[json_name = "extensionNumber"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_extension_number(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_extension_number(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExtensionNumberResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1alpha.ExtensionNumberResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string base_type_name = 1[json_name = "baseTypeName"];
  if (this->base_type_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_base_type_name().data(), static_cast<int>(this->_internal_base_type_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.reflection.v1alpha.ExtensionNumberResponse.base_type_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_base_type_name(), target);
  }

  // repeated int32 extension_number = 2[json_name = "extensionNumber"];
  {
    int byte_size = _extension_number_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_extension_number(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1alpha.ExtensionNumberResponse)
  return target;
}

size_t ExtensionNumberResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.reflection.v1alpha.ExtensionNumberResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 extension_number = 2[json_name = "extensionNumber"];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->extension_number_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _extension_number_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string base_type_name = 1[json_name = "baseTypeName"];
  if (this->base_type_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_base_type_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExtensionNumberResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.reflection.v1alpha.ExtensionNumberResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExtensionNumberResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExtensionNumberResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.reflection.v1alpha.ExtensionNumberResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.reflection.v1alpha.ExtensionNumberResponse)
    MergeFrom(*source);
  }
}

void ExtensionNumberResponse::MergeFrom(const ExtensionNumberResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.reflection.v1alpha.ExtensionNumberResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extension_number_.MergeFrom(from.extension_number_);
  if (from.base_type_name().size() > 0) {
    _internal_set_base_type_name(from._internal_base_type_name());
  }
}

void ExtensionNumberResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.reflection.v1alpha.ExtensionNumberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtensionNumberResponse::CopyFrom(const ExtensionNumberResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.reflection.v1alpha.ExtensionNumberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtensionNumberResponse::IsInitialized() const {
  return true;
}

void ExtensionNumberResponse::InternalSwap(ExtensionNumberResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  extension_number_.InternalSwap(&other->extension_number_);
  base_type_name_.Swap(&other->base_type_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ExtensionNumberResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListServiceResponse::InitAsDefaultInstance() {
}
class ListServiceResponse::_Internal {
 public:
};

ListServiceResponse::ListServiceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  service_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.reflection.v1alpha.ListServiceResponse)
}
ListServiceResponse::ListServiceResponse(const ListServiceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      service_(from.service_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1alpha.ListServiceResponse)
}

void ListServiceResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListServiceResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base);
}

ListServiceResponse::~ListServiceResponse() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1alpha.ListServiceResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListServiceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListServiceResponse::ArenaDtor(void* object) {
  ListServiceResponse* _this = reinterpret_cast< ListServiceResponse* >(object);
  (void)_this;
}
void ListServiceResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListServiceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListServiceResponse& ListServiceResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListServiceResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base);
  return *internal_default_instance();
}


void ListServiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.reflection.v1alpha.ListServiceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListServiceResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .grpc.reflection.v1alpha.ServiceResponse service = 1[json_name = "service"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_service(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListServiceResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1alpha.ListServiceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc.reflection.v1alpha.ServiceResponse service = 1[json_name = "service"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_service_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_service(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1alpha.ListServiceResponse)
  return target;
}

size_t ListServiceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.reflection.v1alpha.ListServiceResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc.reflection.v1alpha.ServiceResponse service = 1[json_name = "service"];
  total_size += 1UL * this->_internal_service_size();
  for (const auto& msg : this->service_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListServiceResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.reflection.v1alpha.ListServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListServiceResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListServiceResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.reflection.v1alpha.ListServiceResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.reflection.v1alpha.ListServiceResponse)
    MergeFrom(*source);
  }
}

void ListServiceResponse::MergeFrom(const ListServiceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.reflection.v1alpha.ListServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  service_.MergeFrom(from.service_);
}

void ListServiceResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.reflection.v1alpha.ListServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListServiceResponse::CopyFrom(const ListServiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.reflection.v1alpha.ListServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServiceResponse::IsInitialized() const {
  return true;
}

void ListServiceResponse::InternalSwap(ListServiceResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  service_.InternalSwap(&other->service_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListServiceResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ServiceResponse::InitAsDefaultInstance() {
}
class ServiceResponse::_Internal {
 public:
};

ServiceResponse::ServiceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.reflection.v1alpha.ServiceResponse)
}
ServiceResponse::ServiceResponse(const ServiceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1alpha.ServiceResponse)
}

void ServiceResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ServiceResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ServiceResponse::~ServiceResponse() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1alpha.ServiceResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServiceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ServiceResponse::ArenaDtor(void* object) {
  ServiceResponse* _this = reinterpret_cast< ServiceResponse* >(object);
  (void)_this;
}
void ServiceResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServiceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServiceResponse& ServiceResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServiceResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base);
  return *internal_default_instance();
}


void ServiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.reflection.v1alpha.ServiceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServiceResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1[json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.reflection.v1alpha.ServiceResponse.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServiceResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1alpha.ServiceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1[json_name = "name"];
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.reflection.v1alpha.ServiceResponse.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1alpha.ServiceResponse)
  return target;
}

size_t ServiceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.reflection.v1alpha.ServiceResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1[json_name = "name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServiceResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.reflection.v1alpha.ServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServiceResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.reflection.v1alpha.ServiceResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.reflection.v1alpha.ServiceResponse)
    MergeFrom(*source);
  }
}

void ServiceResponse::MergeFrom(const ServiceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.reflection.v1alpha.ServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void ServiceResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.reflection.v1alpha.ServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceResponse::CopyFrom(const ServiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.reflection.v1alpha.ServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceResponse::IsInitialized() const {
  return true;
}

void ServiceResponse::InternalSwap(ServiceResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ServiceResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ErrorResponse::InitAsDefaultInstance() {
}
class ErrorResponse::_Internal {
 public:
};

ErrorResponse::ErrorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.reflection.v1alpha.ErrorResponse)
}
ErrorResponse::ErrorResponse(const ErrorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error_message().empty()) {
    error_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_error_message(),
      GetArena());
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1alpha.ErrorResponse)
}

void ErrorResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ErrorResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base);
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
}

ErrorResponse::~ErrorResponse() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1alpha.ErrorResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ErrorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  error_message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ErrorResponse::ArenaDtor(void* object) {
  ErrorResponse* _this = reinterpret_cast< ErrorResponse* >(object);
  (void)_this;
}
void ErrorResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ErrorResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ErrorResponse& ErrorResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ErrorResponse_grpc_2freflection_2fv1alpha_2freflection_2eproto.base);
  return *internal_default_instance();
}


void ErrorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.reflection.v1alpha.ErrorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ErrorResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 error_code = 1[json_name = "errorCode"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          error_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string error_message = 2[json_name = "errorMessage"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.reflection.v1alpha.ErrorResponse.error_message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ErrorResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1alpha.ErrorResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 error_code = 1[json_name = "errorCode"];
  if (this->error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_error_code(), target);
  }

  // string error_message = 2[json_name = "errorMessage"];
  if (this->error_message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.reflection.v1alpha.ErrorResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1alpha.ErrorResponse)
  return target;
}

size_t ErrorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.reflection.v1alpha.ErrorResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 2[json_name = "errorMessage"];
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // int32 error_code = 1[json_name = "errorCode"];
  if (this->error_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_error_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ErrorResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.reflection.v1alpha.ErrorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ErrorResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.reflection.v1alpha.ErrorResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.reflection.v1alpha.ErrorResponse)
    MergeFrom(*source);
  }
}

void ErrorResponse::MergeFrom(const ErrorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.reflection.v1alpha.ErrorResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_message().size() > 0) {
    _internal_set_error_message(from._internal_error_message());
  }
  if (from.error_code() != 0) {
    _internal_set_error_code(from._internal_error_code());
  }
}

void ErrorResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.reflection.v1alpha.ErrorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorResponse::CopyFrom(const ErrorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.reflection.v1alpha.ErrorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorResponse::IsInitialized() const {
  return true;
}

void ErrorResponse::InternalSwap(ErrorResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  error_message_.Swap(&other->error_message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(error_code_, other->error_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ErrorResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha
}  // namespace reflection
}  // namespace grpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpc::reflection::v1alpha::ServerReflectionRequest* Arena::CreateMaybeMessage< ::grpc::reflection::v1alpha::ServerReflectionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::reflection::v1alpha::ServerReflectionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::reflection::v1alpha::ExtensionRequest* Arena::CreateMaybeMessage< ::grpc::reflection::v1alpha::ExtensionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::reflection::v1alpha::ExtensionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::reflection::v1alpha::ServerReflectionResponse* Arena::CreateMaybeMessage< ::grpc::reflection::v1alpha::ServerReflectionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::reflection::v1alpha::ServerReflectionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::reflection::v1alpha::FileDescriptorResponse* Arena::CreateMaybeMessage< ::grpc::reflection::v1alpha::FileDescriptorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::reflection::v1alpha::FileDescriptorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::reflection::v1alpha::ExtensionNumberResponse* Arena::CreateMaybeMessage< ::grpc::reflection::v1alpha::ExtensionNumberResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::reflection::v1alpha::ExtensionNumberResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::reflection::v1alpha::ListServiceResponse* Arena::CreateMaybeMessage< ::grpc::reflection::v1alpha::ListServiceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::reflection::v1alpha::ListServiceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::reflection::v1alpha::ServiceResponse* Arena::CreateMaybeMessage< ::grpc::reflection::v1alpha::ServiceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::reflection::v1alpha::ServiceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::reflection::v1alpha::ErrorResponse* Arena::CreateMaybeMessage< ::grpc::reflection::v1alpha::ErrorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::reflection::v1alpha::ErrorResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
