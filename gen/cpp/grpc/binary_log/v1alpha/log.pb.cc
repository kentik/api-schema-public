// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc/binary_log/v1alpha/log.proto

#include "grpc/binary_log/v1alpha/log.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_KeyValuePair_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Metadata_ClientInitialMetadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Metadata_ServerInitialMetadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Metadata_ServerStatus_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Metadata_UserData_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto;
namespace grpc {
namespace binary_log {
namespace v1alpha {
class KeyValuePairDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<KeyValuePair> _instance;
} _KeyValuePair_default_instance_;
class Metadata_ClientInitialMetadataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Metadata_ClientInitialMetadata> _instance;
} _Metadata_ClientInitialMetadata_default_instance_;
class Metadata_UserDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Metadata_UserData> _instance;
} _Metadata_UserData_default_instance_;
class Metadata_ServerInitialMetadataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Metadata_ServerInitialMetadata> _instance;
} _Metadata_ServerInitialMetadata_default_instance_;
class Metadata_ServerStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Metadata_ServerStatus> _instance;
} _Metadata_ServerStatus_default_instance_;
class MetadataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Metadata> _instance;
  const ::grpc::binary_log::v1alpha::Metadata_ClientInitialMetadata* client_initial_metadata_;
  const ::grpc::binary_log::v1alpha::Metadata_UserData* user_data_;
  const ::grpc::binary_log::v1alpha::Metadata_ServerInitialMetadata* server_initial_metadata_;
  const ::grpc::binary_log::v1alpha::Metadata_ServerStatus* server_status_;
} _Metadata_default_instance_;
class MessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message> _instance;
} _Message_default_instance_;
}  // namespace v1alpha
}  // namespace binary_log
}  // namespace grpc
static void InitDefaultsscc_info_KeyValuePair_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::binary_log::v1alpha::_KeyValuePair_default_instance_;
    new (ptr) ::grpc::binary_log::v1alpha::KeyValuePair();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::binary_log::v1alpha::KeyValuePair::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_KeyValuePair_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_KeyValuePair_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto}, {}};

static void InitDefaultsscc_info_Message_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::binary_log::v1alpha::_Message_default_instance_;
    new (ptr) ::grpc::binary_log::v1alpha::Message();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::binary_log::v1alpha::Message::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto}, {}};

static void InitDefaultsscc_info_Metadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::binary_log::v1alpha::_Metadata_default_instance_;
    new (ptr) ::grpc::binary_log::v1alpha::Metadata();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::binary_log::v1alpha::Metadata::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_Metadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 6, 0, InitDefaultsscc_info_Metadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_KeyValuePair_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base,
      &scc_info_Metadata_ClientInitialMetadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base,
      &scc_info_Metadata_UserData_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base,
      &scc_info_Metadata_ServerInitialMetadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base,
      &scc_info_Metadata_ServerStatus_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base,}};

static void InitDefaultsscc_info_Metadata_ClientInitialMetadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::binary_log::v1alpha::_Metadata_ClientInitialMetadata_default_instance_;
    new (ptr) ::grpc::binary_log::v1alpha::Metadata_ClientInitialMetadata();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::binary_log::v1alpha::Metadata_ClientInitialMetadata::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Metadata_ClientInitialMetadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Metadata_ClientInitialMetadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_Metadata_ServerInitialMetadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::binary_log::v1alpha::_Metadata_ServerInitialMetadata_default_instance_;
    new (ptr) ::grpc::binary_log::v1alpha::Metadata_ServerInitialMetadata();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::binary_log::v1alpha::Metadata_ServerInitialMetadata::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Metadata_ServerInitialMetadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Metadata_ServerInitialMetadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto}, {}};

static void InitDefaultsscc_info_Metadata_ServerStatus_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::binary_log::v1alpha::_Metadata_ServerStatus_default_instance_;
    new (ptr) ::grpc::binary_log::v1alpha::Metadata_ServerStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::binary_log::v1alpha::Metadata_ServerStatus::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Metadata_ServerStatus_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Metadata_ServerStatus_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto}, {}};

static void InitDefaultsscc_info_Metadata_UserData_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::binary_log::v1alpha::_Metadata_UserData_default_instance_;
    new (ptr) ::grpc::binary_log::v1alpha::Metadata_UserData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::binary_log::v1alpha::Metadata_UserData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Metadata_UserData_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Metadata_UserData_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto[7];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::KeyValuePair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::KeyValuePair, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::KeyValuePair, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::Metadata_ClientInitialMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::Metadata_ClientInitialMetadata, method_name_),
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::Metadata_ClientInitialMetadata, deadline_),
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::Metadata_ClientInitialMetadata, peer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::Metadata_UserData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::Metadata_ServerInitialMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::Metadata_ServerStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::Metadata_ServerStatus, code_),
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::Metadata_ServerStatus, details_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::Metadata, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::Metadata, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::Metadata, rpc_id_),
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::Metadata, timestamp_),
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::Metadata, direction_),
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::Metadata, metadata_),
  offsetof(::grpc::binary_log::v1alpha::MetadataDefaultTypeInternal, client_initial_metadata_),
  offsetof(::grpc::binary_log::v1alpha::MetadataDefaultTypeInternal, user_data_),
  offsetof(::grpc::binary_log::v1alpha::MetadataDefaultTypeInternal, server_initial_metadata_),
  offsetof(::grpc::binary_log::v1alpha::MetadataDefaultTypeInternal, server_status_),
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::Metadata, kind_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::Message, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::Message, rpc_id_),
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::Message, sequence_number_),
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::Message, direction_),
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::Message, length_),
  PROTOBUF_FIELD_OFFSET(::grpc::binary_log::v1alpha::Message, data_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpc::binary_log::v1alpha::KeyValuePair)},
  { 7, -1, sizeof(::grpc::binary_log::v1alpha::Metadata_ClientInitialMetadata)},
  { 15, -1, sizeof(::grpc::binary_log::v1alpha::Metadata_UserData)},
  { 20, -1, sizeof(::grpc::binary_log::v1alpha::Metadata_ServerInitialMetadata)},
  { 25, -1, sizeof(::grpc::binary_log::v1alpha::Metadata_ServerStatus)},
  { 32, -1, sizeof(::grpc::binary_log::v1alpha::Metadata)},
  { 46, -1, sizeof(::grpc::binary_log::v1alpha::Message)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::binary_log::v1alpha::_KeyValuePair_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::binary_log::v1alpha::_Metadata_ClientInitialMetadata_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::binary_log::v1alpha::_Metadata_UserData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::binary_log::v1alpha::_Metadata_ServerInitialMetadata_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::binary_log::v1alpha::_Metadata_ServerStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::binary_log::v1alpha::_Metadata_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::binary_log::v1alpha::_Message_default_instance_),
};

const char descriptor_table_protodef_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!grpc/binary_log/v1alpha/log.proto\022\027grp"
  "c.binary_log.v1alpha\032\037google/protobuf/ti"
  "mestamp.proto\"6\n\014KeyValuePair\022\020\n\003key\030\001 \001"
  "(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value\"\332\006\n\010Metada"
  "ta\022\025\n\006rpc_id\030\001 \001(\004R\005rpcId\0228\n\ttimestamp\030\002"
  " \001(\0132\032.google.protobuf.TimestampR\ttimest"
  "amp\022@\n\tdirection\030\003 \001(\0162\".grpc.binary_log"
  ".v1alpha.DirectionR\tdirection\022A\n\010metadat"
  "a\030\004 \003(\0132%.grpc.binary_log.v1alpha.KeyVal"
  "uePairR\010metadata\022q\n\027client_initial_metad"
  "ata\030\005 \001(\01327.grpc.binary_log.v1alpha.Meta"
  "data.ClientInitialMetadataH\000R\025clientInit"
  "ialMetadata\022I\n\tuser_data\030\006 \001(\0132*.grpc.bi"
  "nary_log.v1alpha.Metadata.UserDataH\000R\010us"
  "erData\022q\n\027server_initial_metadata\030\007 \001(\0132"
  "7.grpc.binary_log.v1alpha.Metadata.Serve"
  "rInitialMetadataH\000R\025serverInitialMetadat"
  "a\022U\n\rserver_status\030\010 \001(\0132..grpc.binary_l"
  "og.v1alpha.Metadata.ServerStatusH\000R\014serv"
  "erStatus\032\204\001\n\025ClientInitialMetadata\022\037\n\013me"
  "thod_name\030\001 \001(\tR\nmethodName\0226\n\010deadline\030"
  "\002 \001(\0132\032.google.protobuf.TimestampR\010deadl"
  "ine\022\022\n\004peer\030\003 \001(\tR\004peer\032\n\n\010UserData\032\027\n\025S"
  "erverInitialMetadata\032<\n\014ServerStatus\022\022\n\004"
  "code\030\001 \001(\rR\004code\022\030\n\007details\030\002 \001(\tR\007detai"
  "lsB\006\n\004kind\"\267\001\n\007Message\022\025\n\006rpc_id\030\001 \001(\004R\005"
  "rpcId\022\'\n\017sequence_number\030\002 \001(\rR\016sequence"
  "Number\022@\n\tdirection\030\003 \001(\0162\".grpc.binary_"
  "log.v1alpha.DirectionR\tdirection\022\026\n\006leng"
  "th\030\004 \001(\rR\006length\022\022\n\004data\030\005 \001(\014R\004data*O\n\t"
  "Direction\022\017\n\013SERVER_SEND\020\000\022\017\n\013SERVER_REC"
  "V\020\001\022\017\n\013CLIENT_SEND\020\002\022\017\n\013CLIENT_RECV\020\003b\006p"
  "roto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto_sccs[7] = {
  &scc_info_KeyValuePair_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base,
  &scc_info_Message_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base,
  &scc_info_Metadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base,
  &scc_info_Metadata_ClientInitialMetadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base,
  &scc_info_Metadata_ServerInitialMetadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base,
  &scc_info_Metadata_ServerStatus_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base,
  &scc_info_Metadata_UserData_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto = {
  false, false, descriptor_table_protodef_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto, "grpc/binary_log/v1alpha/log.proto", 1285,
  &descriptor_table_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto_once, descriptor_table_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto_sccs, descriptor_table_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto_deps, 7, 1,
  schemas, file_default_instances, TableStruct_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto::offsets,
  file_level_metadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto, 7, file_level_enum_descriptors_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto, file_level_service_descriptors_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto)), true);
namespace grpc {
namespace binary_log {
namespace v1alpha {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Direction_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto);
  return file_level_enum_descriptors_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto[0];
}
bool Direction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void KeyValuePair::InitAsDefaultInstance() {
}
class KeyValuePair::_Internal {
 public:
};

KeyValuePair::KeyValuePair(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.binary_log.v1alpha.KeyValuePair)
}
KeyValuePair::KeyValuePair(const KeyValuePair& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_key(),
      GetArena());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc.binary_log.v1alpha.KeyValuePair)
}

void KeyValuePair::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_KeyValuePair_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

KeyValuePair::~KeyValuePair() {
  // @@protoc_insertion_point(destructor:grpc.binary_log.v1alpha.KeyValuePair)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void KeyValuePair::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void KeyValuePair::ArenaDtor(void* object) {
  KeyValuePair* _this = reinterpret_cast< KeyValuePair* >(object);
  (void)_this;
}
void KeyValuePair::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void KeyValuePair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const KeyValuePair& KeyValuePair::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_KeyValuePair_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base);
  return *internal_default_instance();
}


void KeyValuePair::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.binary_log.v1alpha.KeyValuePair)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KeyValuePair::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string key = 1[json_name = "key"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.binary_log.v1alpha.KeyValuePair.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string value = 2[json_name = "value"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.binary_log.v1alpha.KeyValuePair.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* KeyValuePair::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.binary_log.v1alpha.KeyValuePair)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1[json_name = "key"];
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.binary_log.v1alpha.KeyValuePair.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // string value = 2[json_name = "value"];
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.binary_log.v1alpha.KeyValuePair.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.binary_log.v1alpha.KeyValuePair)
  return target;
}

size_t KeyValuePair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.binary_log.v1alpha.KeyValuePair)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1[json_name = "key"];
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // string value = 2[json_name = "value"];
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyValuePair::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.binary_log.v1alpha.KeyValuePair)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyValuePair* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<KeyValuePair>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.binary_log.v1alpha.KeyValuePair)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.binary_log.v1alpha.KeyValuePair)
    MergeFrom(*source);
  }
}

void KeyValuePair::MergeFrom(const KeyValuePair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.binary_log.v1alpha.KeyValuePair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
}

void KeyValuePair::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.binary_log.v1alpha.KeyValuePair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyValuePair::CopyFrom(const KeyValuePair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.binary_log.v1alpha.KeyValuePair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValuePair::IsInitialized() const {
  return true;
}

void KeyValuePair::InternalSwap(KeyValuePair* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata KeyValuePair::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Metadata_ClientInitialMetadata::InitAsDefaultInstance() {
  ::grpc::binary_log::v1alpha::_Metadata_ClientInitialMetadata_default_instance_._instance.get_mutable()->deadline_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class Metadata_ClientInitialMetadata::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& deadline(const Metadata_ClientInitialMetadata* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
Metadata_ClientInitialMetadata::_Internal::deadline(const Metadata_ClientInitialMetadata* msg) {
  return *msg->deadline_;
}
void Metadata_ClientInitialMetadata::clear_deadline() {
  if (GetArena() == nullptr && deadline_ != nullptr) {
    delete deadline_;
  }
  deadline_ = nullptr;
}
Metadata_ClientInitialMetadata::Metadata_ClientInitialMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.binary_log.v1alpha.Metadata.ClientInitialMetadata)
}
Metadata_ClientInitialMetadata::Metadata_ClientInitialMetadata(const Metadata_ClientInitialMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  method_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_method_name().empty()) {
    method_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_method_name(),
      GetArena());
  }
  peer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_peer().empty()) {
    peer_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_peer(),
      GetArena());
  }
  if (from._internal_has_deadline()) {
    deadline_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.deadline_);
  } else {
    deadline_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc.binary_log.v1alpha.Metadata.ClientInitialMetadata)
}

void Metadata_ClientInitialMetadata::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Metadata_ClientInitialMetadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base);
  method_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  peer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  deadline_ = nullptr;
}

Metadata_ClientInitialMetadata::~Metadata_ClientInitialMetadata() {
  // @@protoc_insertion_point(destructor:grpc.binary_log.v1alpha.Metadata.ClientInitialMetadata)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Metadata_ClientInitialMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  method_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  peer_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete deadline_;
}

void Metadata_ClientInitialMetadata::ArenaDtor(void* object) {
  Metadata_ClientInitialMetadata* _this = reinterpret_cast< Metadata_ClientInitialMetadata* >(object);
  (void)_this;
}
void Metadata_ClientInitialMetadata::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Metadata_ClientInitialMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Metadata_ClientInitialMetadata& Metadata_ClientInitialMetadata::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Metadata_ClientInitialMetadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base);
  return *internal_default_instance();
}


void Metadata_ClientInitialMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.binary_log.v1alpha.Metadata.ClientInitialMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  method_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  peer_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && deadline_ != nullptr) {
    delete deadline_;
  }
  deadline_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Metadata_ClientInitialMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string method_name = 1[json_name = "methodName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_method_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.binary_log.v1alpha.Metadata.ClientInitialMetadata.method_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp deadline = 2[json_name = "deadline"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_deadline(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string peer = 3[json_name = "peer"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_peer();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.binary_log.v1alpha.Metadata.ClientInitialMetadata.peer"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Metadata_ClientInitialMetadata::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.binary_log.v1alpha.Metadata.ClientInitialMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string method_name = 1[json_name = "methodName"];
  if (this->method_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_method_name().data(), static_cast<int>(this->_internal_method_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.binary_log.v1alpha.Metadata.ClientInitialMetadata.method_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_method_name(), target);
  }

  // .google.protobuf.Timestamp deadline = 2[json_name = "deadline"];
  if (this->has_deadline()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::deadline(this), target, stream);
  }

  // string peer = 3[json_name = "peer"];
  if (this->peer().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_peer().data(), static_cast<int>(this->_internal_peer().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.binary_log.v1alpha.Metadata.ClientInitialMetadata.peer");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_peer(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.binary_log.v1alpha.Metadata.ClientInitialMetadata)
  return target;
}

size_t Metadata_ClientInitialMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.binary_log.v1alpha.Metadata.ClientInitialMetadata)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string method_name = 1[json_name = "methodName"];
  if (this->method_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_method_name());
  }

  // string peer = 3[json_name = "peer"];
  if (this->peer().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_peer());
  }

  // .google.protobuf.Timestamp deadline = 2[json_name = "deadline"];
  if (this->has_deadline()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *deadline_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Metadata_ClientInitialMetadata::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.binary_log.v1alpha.Metadata.ClientInitialMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const Metadata_ClientInitialMetadata* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Metadata_ClientInitialMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.binary_log.v1alpha.Metadata.ClientInitialMetadata)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.binary_log.v1alpha.Metadata.ClientInitialMetadata)
    MergeFrom(*source);
  }
}

void Metadata_ClientInitialMetadata::MergeFrom(const Metadata_ClientInitialMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.binary_log.v1alpha.Metadata.ClientInitialMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.method_name().size() > 0) {
    _internal_set_method_name(from._internal_method_name());
  }
  if (from.peer().size() > 0) {
    _internal_set_peer(from._internal_peer());
  }
  if (from.has_deadline()) {
    _internal_mutable_deadline()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_deadline());
  }
}

void Metadata_ClientInitialMetadata::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.binary_log.v1alpha.Metadata.ClientInitialMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metadata_ClientInitialMetadata::CopyFrom(const Metadata_ClientInitialMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.binary_log.v1alpha.Metadata.ClientInitialMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Metadata_ClientInitialMetadata::IsInitialized() const {
  return true;
}

void Metadata_ClientInitialMetadata::InternalSwap(Metadata_ClientInitialMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  method_name_.Swap(&other->method_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  peer_.Swap(&other->peer_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(deadline_, other->deadline_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Metadata_ClientInitialMetadata::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Metadata_UserData::InitAsDefaultInstance() {
}
class Metadata_UserData::_Internal {
 public:
};

Metadata_UserData::Metadata_UserData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.binary_log.v1alpha.Metadata.UserData)
}
Metadata_UserData::Metadata_UserData(const Metadata_UserData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc.binary_log.v1alpha.Metadata.UserData)
}

void Metadata_UserData::SharedCtor() {
}

Metadata_UserData::~Metadata_UserData() {
  // @@protoc_insertion_point(destructor:grpc.binary_log.v1alpha.Metadata.UserData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Metadata_UserData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Metadata_UserData::ArenaDtor(void* object) {
  Metadata_UserData* _this = reinterpret_cast< Metadata_UserData* >(object);
  (void)_this;
}
void Metadata_UserData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Metadata_UserData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Metadata_UserData& Metadata_UserData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Metadata_UserData_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base);
  return *internal_default_instance();
}


void Metadata_UserData::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.binary_log.v1alpha.Metadata.UserData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Metadata_UserData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Metadata_UserData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.binary_log.v1alpha.Metadata.UserData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.binary_log.v1alpha.Metadata.UserData)
  return target;
}

size_t Metadata_UserData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.binary_log.v1alpha.Metadata.UserData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Metadata_UserData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.binary_log.v1alpha.Metadata.UserData)
  GOOGLE_DCHECK_NE(&from, this);
  const Metadata_UserData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Metadata_UserData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.binary_log.v1alpha.Metadata.UserData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.binary_log.v1alpha.Metadata.UserData)
    MergeFrom(*source);
  }
}

void Metadata_UserData::MergeFrom(const Metadata_UserData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.binary_log.v1alpha.Metadata.UserData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Metadata_UserData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.binary_log.v1alpha.Metadata.UserData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metadata_UserData::CopyFrom(const Metadata_UserData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.binary_log.v1alpha.Metadata.UserData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Metadata_UserData::IsInitialized() const {
  return true;
}

void Metadata_UserData::InternalSwap(Metadata_UserData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Metadata_UserData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Metadata_ServerInitialMetadata::InitAsDefaultInstance() {
}
class Metadata_ServerInitialMetadata::_Internal {
 public:
};

Metadata_ServerInitialMetadata::Metadata_ServerInitialMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.binary_log.v1alpha.Metadata.ServerInitialMetadata)
}
Metadata_ServerInitialMetadata::Metadata_ServerInitialMetadata(const Metadata_ServerInitialMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc.binary_log.v1alpha.Metadata.ServerInitialMetadata)
}

void Metadata_ServerInitialMetadata::SharedCtor() {
}

Metadata_ServerInitialMetadata::~Metadata_ServerInitialMetadata() {
  // @@protoc_insertion_point(destructor:grpc.binary_log.v1alpha.Metadata.ServerInitialMetadata)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Metadata_ServerInitialMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Metadata_ServerInitialMetadata::ArenaDtor(void* object) {
  Metadata_ServerInitialMetadata* _this = reinterpret_cast< Metadata_ServerInitialMetadata* >(object);
  (void)_this;
}
void Metadata_ServerInitialMetadata::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Metadata_ServerInitialMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Metadata_ServerInitialMetadata& Metadata_ServerInitialMetadata::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Metadata_ServerInitialMetadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base);
  return *internal_default_instance();
}


void Metadata_ServerInitialMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.binary_log.v1alpha.Metadata.ServerInitialMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Metadata_ServerInitialMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Metadata_ServerInitialMetadata::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.binary_log.v1alpha.Metadata.ServerInitialMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.binary_log.v1alpha.Metadata.ServerInitialMetadata)
  return target;
}

size_t Metadata_ServerInitialMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.binary_log.v1alpha.Metadata.ServerInitialMetadata)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Metadata_ServerInitialMetadata::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.binary_log.v1alpha.Metadata.ServerInitialMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const Metadata_ServerInitialMetadata* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Metadata_ServerInitialMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.binary_log.v1alpha.Metadata.ServerInitialMetadata)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.binary_log.v1alpha.Metadata.ServerInitialMetadata)
    MergeFrom(*source);
  }
}

void Metadata_ServerInitialMetadata::MergeFrom(const Metadata_ServerInitialMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.binary_log.v1alpha.Metadata.ServerInitialMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Metadata_ServerInitialMetadata::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.binary_log.v1alpha.Metadata.ServerInitialMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metadata_ServerInitialMetadata::CopyFrom(const Metadata_ServerInitialMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.binary_log.v1alpha.Metadata.ServerInitialMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Metadata_ServerInitialMetadata::IsInitialized() const {
  return true;
}

void Metadata_ServerInitialMetadata::InternalSwap(Metadata_ServerInitialMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Metadata_ServerInitialMetadata::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Metadata_ServerStatus::InitAsDefaultInstance() {
}
class Metadata_ServerStatus::_Internal {
 public:
};

Metadata_ServerStatus::Metadata_ServerStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.binary_log.v1alpha.Metadata.ServerStatus)
}
Metadata_ServerStatus::Metadata_ServerStatus(const Metadata_ServerStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  details_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_details().empty()) {
    details_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_details(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:grpc.binary_log.v1alpha.Metadata.ServerStatus)
}

void Metadata_ServerStatus::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Metadata_ServerStatus_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base);
  details_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0u;
}

Metadata_ServerStatus::~Metadata_ServerStatus() {
  // @@protoc_insertion_point(destructor:grpc.binary_log.v1alpha.Metadata.ServerStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Metadata_ServerStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  details_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Metadata_ServerStatus::ArenaDtor(void* object) {
  Metadata_ServerStatus* _this = reinterpret_cast< Metadata_ServerStatus* >(object);
  (void)_this;
}
void Metadata_ServerStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Metadata_ServerStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Metadata_ServerStatus& Metadata_ServerStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Metadata_ServerStatus_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base);
  return *internal_default_instance();
}


void Metadata_ServerStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.binary_log.v1alpha.Metadata.ServerStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  details_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Metadata_ServerStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 code = 1[json_name = "code"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string details = 2[json_name = "details"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_details();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.binary_log.v1alpha.Metadata.ServerStatus.details"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Metadata_ServerStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.binary_log.v1alpha.Metadata.ServerStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 code = 1[json_name = "code"];
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_code(), target);
  }

  // string details = 2[json_name = "details"];
  if (this->details().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_details().data(), static_cast<int>(this->_internal_details().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.binary_log.v1alpha.Metadata.ServerStatus.details");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_details(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.binary_log.v1alpha.Metadata.ServerStatus)
  return target;
}

size_t Metadata_ServerStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.binary_log.v1alpha.Metadata.ServerStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string details = 2[json_name = "details"];
  if (this->details().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_details());
  }

  // uint32 code = 1[json_name = "code"];
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Metadata_ServerStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.binary_log.v1alpha.Metadata.ServerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const Metadata_ServerStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Metadata_ServerStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.binary_log.v1alpha.Metadata.ServerStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.binary_log.v1alpha.Metadata.ServerStatus)
    MergeFrom(*source);
  }
}

void Metadata_ServerStatus::MergeFrom(const Metadata_ServerStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.binary_log.v1alpha.Metadata.ServerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.details().size() > 0) {
    _internal_set_details(from._internal_details());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void Metadata_ServerStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.binary_log.v1alpha.Metadata.ServerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metadata_ServerStatus::CopyFrom(const Metadata_ServerStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.binary_log.v1alpha.Metadata.ServerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Metadata_ServerStatus::IsInitialized() const {
  return true;
}

void Metadata_ServerStatus::InternalSwap(Metadata_ServerStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  details_.Swap(&other->details_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Metadata_ServerStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Metadata::InitAsDefaultInstance() {
  ::grpc::binary_log::v1alpha::_Metadata_default_instance_._instance.get_mutable()->timestamp_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::grpc::binary_log::v1alpha::_Metadata_default_instance_.client_initial_metadata_ = const_cast< ::grpc::binary_log::v1alpha::Metadata_ClientInitialMetadata*>(
      ::grpc::binary_log::v1alpha::Metadata_ClientInitialMetadata::internal_default_instance());
  ::grpc::binary_log::v1alpha::_Metadata_default_instance_.user_data_ = const_cast< ::grpc::binary_log::v1alpha::Metadata_UserData*>(
      ::grpc::binary_log::v1alpha::Metadata_UserData::internal_default_instance());
  ::grpc::binary_log::v1alpha::_Metadata_default_instance_.server_initial_metadata_ = const_cast< ::grpc::binary_log::v1alpha::Metadata_ServerInitialMetadata*>(
      ::grpc::binary_log::v1alpha::Metadata_ServerInitialMetadata::internal_default_instance());
  ::grpc::binary_log::v1alpha::_Metadata_default_instance_.server_status_ = const_cast< ::grpc::binary_log::v1alpha::Metadata_ServerStatus*>(
      ::grpc::binary_log::v1alpha::Metadata_ServerStatus::internal_default_instance());
}
class Metadata::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& timestamp(const Metadata* msg);
  static const ::grpc::binary_log::v1alpha::Metadata_ClientInitialMetadata& client_initial_metadata(const Metadata* msg);
  static const ::grpc::binary_log::v1alpha::Metadata_UserData& user_data(const Metadata* msg);
  static const ::grpc::binary_log::v1alpha::Metadata_ServerInitialMetadata& server_initial_metadata(const Metadata* msg);
  static const ::grpc::binary_log::v1alpha::Metadata_ServerStatus& server_status(const Metadata* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
Metadata::_Internal::timestamp(const Metadata* msg) {
  return *msg->timestamp_;
}
const ::grpc::binary_log::v1alpha::Metadata_ClientInitialMetadata&
Metadata::_Internal::client_initial_metadata(const Metadata* msg) {
  return *msg->kind_.client_initial_metadata_;
}
const ::grpc::binary_log::v1alpha::Metadata_UserData&
Metadata::_Internal::user_data(const Metadata* msg) {
  return *msg->kind_.user_data_;
}
const ::grpc::binary_log::v1alpha::Metadata_ServerInitialMetadata&
Metadata::_Internal::server_initial_metadata(const Metadata* msg) {
  return *msg->kind_.server_initial_metadata_;
}
const ::grpc::binary_log::v1alpha::Metadata_ServerStatus&
Metadata::_Internal::server_status(const Metadata* msg) {
  return *msg->kind_.server_status_;
}
void Metadata::clear_timestamp() {
  if (GetArena() == nullptr && timestamp_ != nullptr) {
    delete timestamp_;
  }
  timestamp_ = nullptr;
}
void Metadata::set_allocated_client_initial_metadata(::grpc::binary_log::v1alpha::Metadata_ClientInitialMetadata* client_initial_metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_kind();
  if (client_initial_metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(client_initial_metadata);
    if (message_arena != submessage_arena) {
      client_initial_metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, client_initial_metadata, submessage_arena);
    }
    set_has_client_initial_metadata();
    kind_.client_initial_metadata_ = client_initial_metadata;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.binary_log.v1alpha.Metadata.client_initial_metadata)
}
void Metadata::set_allocated_user_data(::grpc::binary_log::v1alpha::Metadata_UserData* user_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_kind();
  if (user_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(user_data);
    if (message_arena != submessage_arena) {
      user_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user_data, submessage_arena);
    }
    set_has_user_data();
    kind_.user_data_ = user_data;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.binary_log.v1alpha.Metadata.user_data)
}
void Metadata::set_allocated_server_initial_metadata(::grpc::binary_log::v1alpha::Metadata_ServerInitialMetadata* server_initial_metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_kind();
  if (server_initial_metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(server_initial_metadata);
    if (message_arena != submessage_arena) {
      server_initial_metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, server_initial_metadata, submessage_arena);
    }
    set_has_server_initial_metadata();
    kind_.server_initial_metadata_ = server_initial_metadata;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.binary_log.v1alpha.Metadata.server_initial_metadata)
}
void Metadata::set_allocated_server_status(::grpc::binary_log::v1alpha::Metadata_ServerStatus* server_status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_kind();
  if (server_status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(server_status);
    if (message_arena != submessage_arena) {
      server_status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, server_status, submessage_arena);
    }
    set_has_server_status();
    kind_.server_status_ = server_status;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.binary_log.v1alpha.Metadata.server_status)
}
Metadata::Metadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.binary_log.v1alpha.Metadata)
}
Metadata::Metadata(const Metadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      metadata_(from.metadata_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_timestamp()) {
    timestamp_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.timestamp_);
  } else {
    timestamp_ = nullptr;
  }
  ::memcpy(&rpc_id_, &from.rpc_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&direction_) -
    reinterpret_cast<char*>(&rpc_id_)) + sizeof(direction_));
  clear_has_kind();
  switch (from.kind_case()) {
    case kClientInitialMetadata: {
      _internal_mutable_client_initial_metadata()->::grpc::binary_log::v1alpha::Metadata_ClientInitialMetadata::MergeFrom(from._internal_client_initial_metadata());
      break;
    }
    case kUserData: {
      _internal_mutable_user_data()->::grpc::binary_log::v1alpha::Metadata_UserData::MergeFrom(from._internal_user_data());
      break;
    }
    case kServerInitialMetadata: {
      _internal_mutable_server_initial_metadata()->::grpc::binary_log::v1alpha::Metadata_ServerInitialMetadata::MergeFrom(from._internal_server_initial_metadata());
      break;
    }
    case kServerStatus: {
      _internal_mutable_server_status()->::grpc::binary_log::v1alpha::Metadata_ServerStatus::MergeFrom(from._internal_server_status());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:grpc.binary_log.v1alpha.Metadata)
}

void Metadata::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Metadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base);
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&direction_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(direction_));
  clear_has_kind();
}

Metadata::~Metadata() {
  // @@protoc_insertion_point(destructor:grpc.binary_log.v1alpha.Metadata)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Metadata::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete timestamp_;
  if (has_kind()) {
    clear_kind();
  }
}

void Metadata::ArenaDtor(void* object) {
  Metadata* _this = reinterpret_cast< Metadata* >(object);
  (void)_this;
}
void Metadata::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Metadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Metadata& Metadata::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Metadata_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base);
  return *internal_default_instance();
}


void Metadata::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:grpc.binary_log.v1alpha.Metadata)
  switch (kind_case()) {
    case kClientInitialMetadata: {
      if (GetArena() == nullptr) {
        delete kind_.client_initial_metadata_;
      }
      break;
    }
    case kUserData: {
      if (GetArena() == nullptr) {
        delete kind_.user_data_;
      }
      break;
    }
    case kServerInitialMetadata: {
      if (GetArena() == nullptr) {
        delete kind_.server_initial_metadata_;
      }
      break;
    }
    case kServerStatus: {
      if (GetArena() == nullptr) {
        delete kind_.server_status_;
      }
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KIND_NOT_SET;
}


void Metadata::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.binary_log.v1alpha.Metadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  if (GetArena() == nullptr && timestamp_ != nullptr) {
    delete timestamp_;
  }
  timestamp_ = nullptr;
  ::memset(&rpc_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&direction_) -
      reinterpret_cast<char*>(&rpc_id_)) + sizeof(direction_));
  clear_kind();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Metadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 rpc_id = 1[json_name = "rpcId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          rpc_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp timestamp = 2[json_name = "timestamp"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_timestamp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc.binary_log.v1alpha.Direction direction = 3[json_name = "direction"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_direction(static_cast<::grpc::binary_log::v1alpha::Direction>(val));
        } else goto handle_unusual;
        continue;
      // repeated .grpc.binary_log.v1alpha.KeyValuePair metadata = 4[json_name = "metadata"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_metadata(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // .grpc.binary_log.v1alpha.Metadata.ClientInitialMetadata client_initial_metadata = 5[json_name = "clientInitialMetadata"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_client_initial_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc.binary_log.v1alpha.Metadata.UserData user_data = 6[json_name = "userData"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_user_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc.binary_log.v1alpha.Metadata.ServerInitialMetadata server_initial_metadata = 7[json_name = "serverInitialMetadata"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_server_initial_metadata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc.binary_log.v1alpha.Metadata.ServerStatus server_status = 8[json_name = "serverStatus"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_server_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Metadata::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.binary_log.v1alpha.Metadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 rpc_id = 1[json_name = "rpcId"];
  if (this->rpc_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_rpc_id(), target);
  }

  // .google.protobuf.Timestamp timestamp = 2[json_name = "timestamp"];
  if (this->has_timestamp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::timestamp(this), target, stream);
  }

  // .grpc.binary_log.v1alpha.Direction direction = 3[json_name = "direction"];
  if (this->direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_direction(), target);
  }

  // repeated .grpc.binary_log.v1alpha.KeyValuePair metadata = 4[json_name = "metadata"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_metadata_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_metadata(i), target, stream);
  }

  // .grpc.binary_log.v1alpha.Metadata.ClientInitialMetadata client_initial_metadata = 5[json_name = "clientInitialMetadata"];
  if (_internal_has_client_initial_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::client_initial_metadata(this), target, stream);
  }

  // .grpc.binary_log.v1alpha.Metadata.UserData user_data = 6[json_name = "userData"];
  if (_internal_has_user_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::user_data(this), target, stream);
  }

  // .grpc.binary_log.v1alpha.Metadata.ServerInitialMetadata server_initial_metadata = 7[json_name = "serverInitialMetadata"];
  if (_internal_has_server_initial_metadata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::server_initial_metadata(this), target, stream);
  }

  // .grpc.binary_log.v1alpha.Metadata.ServerStatus server_status = 8[json_name = "serverStatus"];
  if (_internal_has_server_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::server_status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.binary_log.v1alpha.Metadata)
  return target;
}

size_t Metadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.binary_log.v1alpha.Metadata)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc.binary_log.v1alpha.KeyValuePair metadata = 4[json_name = "metadata"];
  total_size += 1UL * this->_internal_metadata_size();
  for (const auto& msg : this->metadata_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .google.protobuf.Timestamp timestamp = 2[json_name = "timestamp"];
  if (this->has_timestamp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *timestamp_);
  }

  // uint64 rpc_id = 1[json_name = "rpcId"];
  if (this->rpc_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_rpc_id());
  }

  // .grpc.binary_log.v1alpha.Direction direction = 3[json_name = "direction"];
  if (this->direction() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_direction());
  }

  switch (kind_case()) {
    // .grpc.binary_log.v1alpha.Metadata.ClientInitialMetadata client_initial_metadata = 5[json_name = "clientInitialMetadata"];
    case kClientInitialMetadata: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *kind_.client_initial_metadata_);
      break;
    }
    // .grpc.binary_log.v1alpha.Metadata.UserData user_data = 6[json_name = "userData"];
    case kUserData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *kind_.user_data_);
      break;
    }
    // .grpc.binary_log.v1alpha.Metadata.ServerInitialMetadata server_initial_metadata = 7[json_name = "serverInitialMetadata"];
    case kServerInitialMetadata: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *kind_.server_initial_metadata_);
      break;
    }
    // .grpc.binary_log.v1alpha.Metadata.ServerStatus server_status = 8[json_name = "serverStatus"];
    case kServerStatus: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *kind_.server_status_);
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Metadata::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.binary_log.v1alpha.Metadata)
  GOOGLE_DCHECK_NE(&from, this);
  const Metadata* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Metadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.binary_log.v1alpha.Metadata)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.binary_log.v1alpha.Metadata)
    MergeFrom(*source);
  }
}

void Metadata::MergeFrom(const Metadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.binary_log.v1alpha.Metadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.has_timestamp()) {
    _internal_mutable_timestamp()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_timestamp());
  }
  if (from.rpc_id() != 0) {
    _internal_set_rpc_id(from._internal_rpc_id());
  }
  if (from.direction() != 0) {
    _internal_set_direction(from._internal_direction());
  }
  switch (from.kind_case()) {
    case kClientInitialMetadata: {
      _internal_mutable_client_initial_metadata()->::grpc::binary_log::v1alpha::Metadata_ClientInitialMetadata::MergeFrom(from._internal_client_initial_metadata());
      break;
    }
    case kUserData: {
      _internal_mutable_user_data()->::grpc::binary_log::v1alpha::Metadata_UserData::MergeFrom(from._internal_user_data());
      break;
    }
    case kServerInitialMetadata: {
      _internal_mutable_server_initial_metadata()->::grpc::binary_log::v1alpha::Metadata_ServerInitialMetadata::MergeFrom(from._internal_server_initial_metadata());
      break;
    }
    case kServerStatus: {
      _internal_mutable_server_status()->::grpc::binary_log::v1alpha::Metadata_ServerStatus::MergeFrom(from._internal_server_status());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
}

void Metadata::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.binary_log.v1alpha.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metadata::CopyFrom(const Metadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.binary_log.v1alpha.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Metadata::IsInitialized() const {
  return true;
}

void Metadata::InternalSwap(Metadata* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  metadata_.InternalSwap(&other->metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Metadata, direction_)
      + sizeof(Metadata::direction_)
      - PROTOBUF_FIELD_OFFSET(Metadata, timestamp_)>(
          reinterpret_cast<char*>(&timestamp_),
          reinterpret_cast<char*>(&other->timestamp_));
  swap(kind_, other->kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Metadata::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message::InitAsDefaultInstance() {
}
class Message::_Internal {
 public:
};

Message::Message(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.binary_log.v1alpha.Message)
}
Message::Message(const Message& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  ::memcpy(&rpc_id_, &from.rpc_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&length_) -
    reinterpret_cast<char*>(&rpc_id_)) + sizeof(length_));
  // @@protoc_insertion_point(copy_constructor:grpc.binary_log.v1alpha.Message)
}

void Message::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&rpc_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&length_) -
      reinterpret_cast<char*>(&rpc_id_)) + sizeof(length_));
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:grpc.binary_log.v1alpha.Message)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message::ArenaDtor(void* object) {
  Message* _this = reinterpret_cast< Message* >(object);
  (void)_this;
}
void Message::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message& Message::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_grpc_2fbinary_5flog_2fv1alpha_2flog_2eproto.base);
  return *internal_default_instance();
}


void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.binary_log.v1alpha.Message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&rpc_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&length_) -
      reinterpret_cast<char*>(&rpc_id_)) + sizeof(length_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 rpc_id = 1[json_name = "rpcId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          rpc_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 sequence_number = 2[json_name = "sequenceNumber"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          sequence_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc.binary_log.v1alpha.Direction direction = 3[json_name = "direction"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_direction(static_cast<::grpc::binary_log::v1alpha::Direction>(val));
        } else goto handle_unusual;
        continue;
      // uint32 length = 4[json_name = "length"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 5[json_name = "data"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.binary_log.v1alpha.Message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 rpc_id = 1[json_name = "rpcId"];
  if (this->rpc_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_rpc_id(), target);
  }

  // uint32 sequence_number = 2[json_name = "sequenceNumber"];
  if (this->sequence_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_sequence_number(), target);
  }

  // .grpc.binary_log.v1alpha.Direction direction = 3[json_name = "direction"];
  if (this->direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_direction(), target);
  }

  // uint32 length = 4[json_name = "length"];
  if (this->length() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_length(), target);
  }

  // bytes data = 5[json_name = "data"];
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.binary_log.v1alpha.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.binary_log.v1alpha.Message)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 5[json_name = "data"];
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // uint64 rpc_id = 1[json_name = "rpcId"];
  if (this->rpc_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_rpc_id());
  }

  // uint32 sequence_number = 2[json_name = "sequenceNumber"];
  if (this->sequence_number() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_sequence_number());
  }

  // .grpc.binary_log.v1alpha.Direction direction = 3[json_name = "direction"];
  if (this->direction() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_direction());
  }

  // uint32 length = 4[json_name = "length"];
  if (this->length() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_length());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.binary_log.v1alpha.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Message* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.binary_log.v1alpha.Message)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.binary_log.v1alpha.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.binary_log.v1alpha.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.rpc_id() != 0) {
    _internal_set_rpc_id(from._internal_rpc_id());
  }
  if (from.sequence_number() != 0) {
    _internal_set_sequence_number(from._internal_sequence_number());
  }
  if (from.direction() != 0) {
    _internal_set_direction(from._internal_direction());
  }
  if (from.length() != 0) {
    _internal_set_length(from._internal_length());
  }
}

void Message::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.binary_log.v1alpha.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.binary_log.v1alpha.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::InternalSwap(Message* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message, length_)
      + sizeof(Message::length_)
      - PROTOBUF_FIELD_OFFSET(Message, rpc_id_)>(
          reinterpret_cast<char*>(&rpc_id_),
          reinterpret_cast<char*>(&other->rpc_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Message::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha
}  // namespace binary_log
}  // namespace grpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpc::binary_log::v1alpha::KeyValuePair* Arena::CreateMaybeMessage< ::grpc::binary_log::v1alpha::KeyValuePair >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::binary_log::v1alpha::KeyValuePair >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::binary_log::v1alpha::Metadata_ClientInitialMetadata* Arena::CreateMaybeMessage< ::grpc::binary_log::v1alpha::Metadata_ClientInitialMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::binary_log::v1alpha::Metadata_ClientInitialMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::binary_log::v1alpha::Metadata_UserData* Arena::CreateMaybeMessage< ::grpc::binary_log::v1alpha::Metadata_UserData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::binary_log::v1alpha::Metadata_UserData >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::binary_log::v1alpha::Metadata_ServerInitialMetadata* Arena::CreateMaybeMessage< ::grpc::binary_log::v1alpha::Metadata_ServerInitialMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::binary_log::v1alpha::Metadata_ServerInitialMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::binary_log::v1alpha::Metadata_ServerStatus* Arena::CreateMaybeMessage< ::grpc::binary_log::v1alpha::Metadata_ServerStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::binary_log::v1alpha::Metadata_ServerStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::binary_log::v1alpha::Metadata* Arena::CreateMaybeMessage< ::grpc::binary_log::v1alpha::Metadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::binary_log::v1alpha::Metadata >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::binary_log::v1alpha::Message* Arena::CreateMaybeMessage< ::grpc::binary_log::v1alpha::Message >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::binary_log::v1alpha::Message >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
