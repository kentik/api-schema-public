// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protoc-gen-openapiv2/options/openapiv2.proto

#include "protoc-gen-openapiv2/options/openapiv2.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fstruct_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Contact_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExternalDocumentation_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Header_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Info_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Info_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JSONSchema_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_License_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Operation_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Operation_ResponsesEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_Response_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Response_ExamplesEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Response_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Response_HeadersEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Schema_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Scopes_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Scopes_ScopeEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SecurityDefinitions_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SecurityDefinitions_SecurityEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SecurityRequirement_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SecurityRequirement_SecurityRequirementEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SecurityRequirement_SecurityRequirementValue_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SecurityScheme_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SecurityScheme_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Swagger_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Swagger_ResponsesEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto;
namespace grpc {
namespace gateway {
namespace protoc_gen_openapiv2 {
namespace options {
class Swagger_ResponsesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Swagger_ResponsesEntry_DoNotUse> _instance;
} _Swagger_ResponsesEntry_DoNotUse_default_instance_;
class Swagger_ExtensionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Swagger_ExtensionsEntry_DoNotUse> _instance;
} _Swagger_ExtensionsEntry_DoNotUse_default_instance_;
class SwaggerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Swagger> _instance;
} _Swagger_default_instance_;
class Operation_ResponsesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Operation_ResponsesEntry_DoNotUse> _instance;
} _Operation_ResponsesEntry_DoNotUse_default_instance_;
class Operation_ExtensionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Operation_ExtensionsEntry_DoNotUse> _instance;
} _Operation_ExtensionsEntry_DoNotUse_default_instance_;
class OperationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Operation> _instance;
} _Operation_default_instance_;
class HeaderDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Header> _instance;
} _Header_default_instance_;
class Response_HeadersEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Response_HeadersEntry_DoNotUse> _instance;
} _Response_HeadersEntry_DoNotUse_default_instance_;
class Response_ExamplesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Response_ExamplesEntry_DoNotUse> _instance;
} _Response_ExamplesEntry_DoNotUse_default_instance_;
class Response_ExtensionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Response_ExtensionsEntry_DoNotUse> _instance;
} _Response_ExtensionsEntry_DoNotUse_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Response> _instance;
} _Response_default_instance_;
class Info_ExtensionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Info_ExtensionsEntry_DoNotUse> _instance;
} _Info_ExtensionsEntry_DoNotUse_default_instance_;
class InfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Info> _instance;
} _Info_default_instance_;
class ContactDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Contact> _instance;
} _Contact_default_instance_;
class LicenseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<License> _instance;
} _License_default_instance_;
class ExternalDocumentationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExternalDocumentation> _instance;
} _ExternalDocumentation_default_instance_;
class SchemaDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Schema> _instance;
} _Schema_default_instance_;
class JSONSchemaDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JSONSchema> _instance;
} _JSONSchema_default_instance_;
class TagDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Tag> _instance;
} _Tag_default_instance_;
class SecurityDefinitions_SecurityEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SecurityDefinitions_SecurityEntry_DoNotUse> _instance;
} _SecurityDefinitions_SecurityEntry_DoNotUse_default_instance_;
class SecurityDefinitionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SecurityDefinitions> _instance;
} _SecurityDefinitions_default_instance_;
class SecurityScheme_ExtensionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SecurityScheme_ExtensionsEntry_DoNotUse> _instance;
} _SecurityScheme_ExtensionsEntry_DoNotUse_default_instance_;
class SecuritySchemeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SecurityScheme> _instance;
} _SecurityScheme_default_instance_;
class SecurityRequirement_SecurityRequirementValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SecurityRequirement_SecurityRequirementValue> _instance;
} _SecurityRequirement_SecurityRequirementValue_default_instance_;
class SecurityRequirement_SecurityRequirementEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SecurityRequirement_SecurityRequirementEntry_DoNotUse> _instance;
} _SecurityRequirement_SecurityRequirementEntry_DoNotUse_default_instance_;
class SecurityRequirementDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SecurityRequirement> _instance;
} _SecurityRequirement_default_instance_;
class Scopes_ScopeEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Scopes_ScopeEntry_DoNotUse> _instance;
} _Scopes_ScopeEntry_DoNotUse_default_instance_;
class ScopesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Scopes> _instance;
} _Scopes_default_instance_;
}  // namespace options
}  // namespace protoc_gen_openapiv2
}  // namespace gateway
}  // namespace grpc
static void InitDefaultsscc_info_Contact_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_Contact_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::Contact();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::Contact::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Contact_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Contact_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {}};

static void InitDefaultsscc_info_ExternalDocumentation_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_ExternalDocumentation_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExternalDocumentation_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExternalDocumentation_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {}};

static void InitDefaultsscc_info_Header_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_Header_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::Header();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::Header::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Header_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Header_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {}};

static void InitDefaultsscc_info_Info_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_Info_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::Info();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::Info::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Info_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_Info_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {
      &scc_info_Contact_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
      &scc_info_License_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
      &scc_info_Info_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,}};

static void InitDefaultsscc_info_Info_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_Info_ExtensionsEntry_DoNotUse_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::Info_ExtensionsEntry_DoNotUse();
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::Info_ExtensionsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Info_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Info_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsscc_info_JSONSchema_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_JSONSchema_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_JSONSchema_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_JSONSchema_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {}};

static void InitDefaultsscc_info_License_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_License_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::License();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::License::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_License_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_License_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {}};

static void InitDefaultsscc_info_Operation_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_Operation_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::Operation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::Operation::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_Operation_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_Operation_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {
      &scc_info_ExternalDocumentation_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
      &scc_info_Operation_ResponsesEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
      &scc_info_SecurityRequirement_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
      &scc_info_Operation_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,}};

static void InitDefaultsscc_info_Operation_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_Operation_ExtensionsEntry_DoNotUse_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::Operation_ExtensionsEntry_DoNotUse();
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::Operation_ExtensionsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Operation_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Operation_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsscc_info_Operation_ResponsesEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_Operation_ResponsesEntry_DoNotUse_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::Operation_ResponsesEntry_DoNotUse();
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::Operation_ResponsesEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Operation_ResponsesEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Operation_ResponsesEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {
      &scc_info_Response_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,}};

static void InitDefaultsscc_info_Response_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_Response_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::Response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::Response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_Response_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_Response_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {
      &scc_info_Schema_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
      &scc_info_Response_HeadersEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
      &scc_info_Response_ExamplesEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
      &scc_info_Response_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,}};

static void InitDefaultsscc_info_Response_ExamplesEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_Response_ExamplesEntry_DoNotUse_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::Response_ExamplesEntry_DoNotUse();
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::Response_ExamplesEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Response_ExamplesEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Response_ExamplesEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {}};

static void InitDefaultsscc_info_Response_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_Response_ExtensionsEntry_DoNotUse_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::Response_ExtensionsEntry_DoNotUse();
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::Response_ExtensionsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Response_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Response_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsscc_info_Response_HeadersEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_Response_HeadersEntry_DoNotUse_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::Response_HeadersEntry_DoNotUse();
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::Response_HeadersEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Response_HeadersEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Response_HeadersEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {
      &scc_info_Header_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,}};

static void InitDefaultsscc_info_Schema_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_Schema_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::Schema();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::Schema::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Schema_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Schema_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {
      &scc_info_JSONSchema_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
      &scc_info_ExternalDocumentation_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,}};

static void InitDefaultsscc_info_Scopes_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_Scopes_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::Scopes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::Scopes::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Scopes_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Scopes_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {
      &scc_info_Scopes_ScopeEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,}};

static void InitDefaultsscc_info_Scopes_ScopeEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_Scopes_ScopeEntry_DoNotUse_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::Scopes_ScopeEntry_DoNotUse();
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::Scopes_ScopeEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Scopes_ScopeEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Scopes_ScopeEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {}};

static void InitDefaultsscc_info_SecurityDefinitions_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_SecurityDefinitions_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SecurityDefinitions_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SecurityDefinitions_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {
      &scc_info_SecurityDefinitions_SecurityEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,}};

static void InitDefaultsscc_info_SecurityDefinitions_SecurityEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_SecurityDefinitions_SecurityEntry_DoNotUse_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions_SecurityEntry_DoNotUse();
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions_SecurityEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SecurityDefinitions_SecurityEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SecurityDefinitions_SecurityEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {
      &scc_info_SecurityScheme_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,}};

static void InitDefaultsscc_info_SecurityRequirement_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_SecurityRequirement_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SecurityRequirement_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SecurityRequirement_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {
      &scc_info_SecurityRequirement_SecurityRequirementEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,}};

static void InitDefaultsscc_info_SecurityRequirement_SecurityRequirementEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_SecurityRequirement_SecurityRequirementEntry_DoNotUse_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementEntry_DoNotUse();
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SecurityRequirement_SecurityRequirementEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SecurityRequirement_SecurityRequirementEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {
      &scc_info_SecurityRequirement_SecurityRequirementValue_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,}};

static void InitDefaultsscc_info_SecurityRequirement_SecurityRequirementValue_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_SecurityRequirement_SecurityRequirementValue_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SecurityRequirement_SecurityRequirementValue_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SecurityRequirement_SecurityRequirementValue_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {}};

static void InitDefaultsscc_info_SecurityScheme_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_SecurityScheme_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SecurityScheme_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SecurityScheme_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {
      &scc_info_Scopes_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
      &scc_info_SecurityScheme_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,}};

static void InitDefaultsscc_info_SecurityScheme_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_SecurityScheme_ExtensionsEntry_DoNotUse_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_ExtensionsEntry_DoNotUse();
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_ExtensionsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SecurityScheme_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SecurityScheme_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsscc_info_Swagger_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_Swagger_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::Swagger();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::Swagger::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_Swagger_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 6, 0, InitDefaultsscc_info_Swagger_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {
      &scc_info_Info_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
      &scc_info_Swagger_ResponsesEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
      &scc_info_SecurityDefinitions_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
      &scc_info_SecurityRequirement_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
      &scc_info_ExternalDocumentation_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
      &scc_info_Swagger_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,}};

static void InitDefaultsscc_info_Swagger_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_Swagger_ExtensionsEntry_DoNotUse_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ExtensionsEntry_DoNotUse();
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ExtensionsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Swagger_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Swagger_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsscc_info_Swagger_ResponsesEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_Swagger_ResponsesEntry_DoNotUse_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ResponsesEntry_DoNotUse();
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ResponsesEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Swagger_ResponsesEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Swagger_ResponsesEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {
      &scc_info_Response_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,}};

static void InitDefaultsscc_info_Tag_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc::gateway::protoc_gen_openapiv2::options::_Tag_default_instance_;
    new (ptr) ::grpc::gateway::protoc_gen_openapiv2::options::Tag();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc::gateway::protoc_gen_openapiv2::options::Tag::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Tag_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Tag_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto}, {
      &scc_info_ExternalDocumentation_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[28];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ResponsesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ResponsesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ResponsesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ResponsesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ExtensionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ExtensionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ExtensionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ExtensionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, swagger_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, info_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, host_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, base_path_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, schemes_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, consumes_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, produces_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, responses_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, security_definitions_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, security_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, external_docs_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Swagger, extensions_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation_ResponsesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation_ResponsesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation_ResponsesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation_ResponsesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation_ExtensionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation_ExtensionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation_ExtensionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation_ExtensionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, tags_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, summary_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, description_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, external_docs_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, operation_id_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, consumes_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, produces_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, responses_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, schemes_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, deprecated_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, security_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Operation, extensions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Header, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Header, description_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Header, type_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Header, format_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Header, default__),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Header, pattern_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_HeadersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_HeadersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_HeadersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_HeadersEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_ExamplesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_ExamplesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_ExamplesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_ExamplesEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_ExtensionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_ExtensionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_ExtensionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response_ExtensionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response, description_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response, schema_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response, headers_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response, examples_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Response, extensions_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info_ExtensionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info_ExtensionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info_ExtensionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info_ExtensionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info, title_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info, description_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info, terms_of_service_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info, contact_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info, license_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info, version_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Info, extensions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Contact, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Contact, name_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Contact, url_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Contact, email_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::License, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::License, name_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::License, url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation, description_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation, url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Schema, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Schema, json_schema_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Schema, discriminator_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Schema, read_only_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Schema, external_docs_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Schema, example_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, ref_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, title_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, description_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, default__),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, read_only_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, example_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, multiple_of_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, maximum_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, exclusive_maximum_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, minimum_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, exclusive_minimum_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, max_length_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, min_length_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, pattern_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, max_items_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, min_items_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, unique_items_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, max_properties_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, min_properties_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, required_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, array_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, type_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, format_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema, enum__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Tag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Tag, description_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Tag, external_docs_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions_SecurityEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions_SecurityEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions_SecurityEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions_SecurityEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions, security_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_ExtensionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_ExtensionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_ExtensionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_ExtensionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme, type_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme, description_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme, name_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme, in_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme, flow_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme, authorization_url_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme, token_url_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme, scopes_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme, extensions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue, scope_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement, security_requirement_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Scopes_ScopeEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Scopes_ScopeEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Scopes_ScopeEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Scopes_ScopeEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Scopes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc::gateway::protoc_gen_openapiv2::options::Scopes, scope_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ResponsesEntry_DoNotUse)},
  { 9, 16, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ExtensionsEntry_DoNotUse)},
  { 18, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Swagger)},
  { 35, 42, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Operation_ResponsesEntry_DoNotUse)},
  { 44, 51, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Operation_ExtensionsEntry_DoNotUse)},
  { 53, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Operation)},
  { 70, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Header)},
  { 80, 87, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Response_HeadersEntry_DoNotUse)},
  { 89, 96, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Response_ExamplesEntry_DoNotUse)},
  { 98, 105, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Response_ExtensionsEntry_DoNotUse)},
  { 107, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Response)},
  { 117, 124, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Info_ExtensionsEntry_DoNotUse)},
  { 126, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Info)},
  { 138, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Contact)},
  { 146, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::License)},
  { 153, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation)},
  { 160, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Schema)},
  { 170, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema)},
  { 199, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Tag)},
  { 206, 213, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions_SecurityEntry_DoNotUse)},
  { 215, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions)},
  { 221, 228, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_ExtensionsEntry_DoNotUse)},
  { 230, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme)},
  { 244, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue)},
  { 250, 257, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementEntry_DoNotUse)},
  { 259, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement)},
  { 265, 272, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Scopes_ScopeEntry_DoNotUse)},
  { 274, -1, sizeof(::grpc::gateway::protoc_gen_openapiv2::options::Scopes)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Swagger_ResponsesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Swagger_ExtensionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Swagger_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Operation_ResponsesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Operation_ExtensionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Operation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Header_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Response_HeadersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Response_ExamplesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Response_ExtensionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Info_ExtensionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Info_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Contact_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_License_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_ExternalDocumentation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Schema_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_JSONSchema_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Tag_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_SecurityDefinitions_SecurityEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_SecurityDefinitions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_SecurityScheme_ExtensionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_SecurityScheme_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_SecurityRequirement_SecurityRequirementValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_SecurityRequirement_SecurityRequirementEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_SecurityRequirement_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Scopes_ScopeEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc::gateway::protoc_gen_openapiv2::options::_Scopes_default_instance_),
};

const char descriptor_table_protodef_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n,protoc-gen-openapiv2/options/openapiv2"
  ".proto\022)grpc.gateway.protoc_gen_openapiv"
  "2.options\032\034google/protobuf/struct.proto\""
  "\365\007\n\007Swagger\022\030\n\007swagger\030\001 \001(\tR\007swagger\022C\n"
  "\004info\030\002 \001(\0132/.grpc.gateway.protoc_gen_op"
  "enapiv2.options.InfoR\004info\022\022\n\004host\030\003 \001(\t"
  "R\004host\022\033\n\tbase_path\030\004 \001(\tR\010basePath\022K\n\007s"
  "chemes\030\005 \003(\01621.grpc.gateway.protoc_gen_o"
  "penapiv2.options.SchemeR\007schemes\022\032\n\010cons"
  "umes\030\006 \003(\tR\010consumes\022\032\n\010produces\030\007 \003(\tR\010"
  "produces\022_\n\tresponses\030\n \003(\0132A.grpc.gatew"
  "ay.protoc_gen_openapiv2.options.Swagger."
  "ResponsesEntryR\tresponses\022q\n\024security_de"
  "finitions\030\013 \001(\0132>.grpc.gateway.protoc_ge"
  "n_openapiv2.options.SecurityDefinitionsR"
  "\023securityDefinitions\022Z\n\010security\030\014 \003(\0132>"
  ".grpc.gateway.protoc_gen_openapiv2.optio"
  "ns.SecurityRequirementR\010security\022e\n\rexte"
  "rnal_docs\030\016 \001(\0132@.grpc.gateway.protoc_ge"
  "n_openapiv2.options.ExternalDocumentatio"
  "nR\014externalDocs\022b\n\nextensions\030\017 \003(\0132B.gr"
  "pc.gateway.protoc_gen_openapiv2.options."
  "Swagger.ExtensionsEntryR\nextensions\032q\n\016R"
  "esponsesEntry\022\020\n\003key\030\001 \001(\tR\003key\022I\n\005value"
  "\030\002 \001(\01323.grpc.gateway.protoc_gen_openapi"
  "v2.options.ResponseR\005value:\0028\001\032U\n\017Extens"
  "ionsEntry\022\020\n\003key\030\001 \001(\tR\003key\022,\n\005value\030\002 \001"
  "(\0132\026.google.protobuf.ValueR\005value:\0028\001J\004\010"
  "\010\020\tJ\004\010\t\020\nJ\004\010\r\020\016\"\377\006\n\tOperation\022\022\n\004tags\030\001 "
  "\003(\tR\004tags\022\030\n\007summary\030\002 \001(\tR\007summary\022 \n\013d"
  "escription\030\003 \001(\tR\013description\022e\n\rexterna"
  "l_docs\030\004 \001(\0132@.grpc.gateway.protoc_gen_o"
  "penapiv2.options.ExternalDocumentationR\014"
  "externalDocs\022!\n\014operation_id\030\005 \001(\tR\013oper"
  "ationId\022\032\n\010consumes\030\006 \003(\tR\010consumes\022\032\n\010p"
  "roduces\030\007 \003(\tR\010produces\022a\n\tresponses\030\t \003"
  "(\0132C.grpc.gateway.protoc_gen_openapiv2.o"
  "ptions.Operation.ResponsesEntryR\trespons"
  "es\022K\n\007schemes\030\n \003(\01621.grpc.gateway.proto"
  "c_gen_openapiv2.options.SchemeR\007schemes\022"
  "\036\n\ndeprecated\030\013 \001(\010R\ndeprecated\022Z\n\010secur"
  "ity\030\014 \003(\0132>.grpc.gateway.protoc_gen_open"
  "apiv2.options.SecurityRequirementR\010secur"
  "ity\022d\n\nextensions\030\r \003(\0132D.grpc.gateway.p"
  "rotoc_gen_openapiv2.options.Operation.Ex"
  "tensionsEntryR\nextensions\032q\n\016ResponsesEn"
  "try\022\020\n\003key\030\001 \001(\tR\003key\022I\n\005value\030\002 \001(\01323.g"
  "rpc.gateway.protoc_gen_openapiv2.options"
  ".ResponseR\005value:\0028\001\032U\n\017ExtensionsEntry\022"
  "\020\n\003key\030\001 \001(\tR\003key\022,\n\005value\030\002 \001(\0132\026.googl"
  "e.protobuf.ValueR\005value:\0028\001J\004\010\010\020\t\"\330\001\n\006He"
  "ader\022 \n\013description\030\001 \001(\tR\013description\022\022"
  "\n\004type\030\002 \001(\tR\004type\022\026\n\006format\030\003 \001(\tR\006form"
  "at\022\030\n\007default\030\006 \001(\tR\007default\022\030\n\007pattern\030"
  "\r \001(\tR\007patternJ\004\010\004\020\005J\004\010\005\020\006J\004\010\007\020\010J\004\010\010\020\tJ\004"
  "\010\t\020\nJ\004\010\n\020\013J\004\010\013\020\014J\004\010\014\020\rJ\004\010\016\020\017J\004\010\017\020\020J\004\010\020\020\021"
  "J\004\010\021\020\022J\004\010\022\020\023\"\232\005\n\010Response\022 \n\013description"
  "\030\001 \001(\tR\013description\022I\n\006schema\030\002 \001(\01321.gr"
  "pc.gateway.protoc_gen_openapiv2.options."
  "SchemaR\006schema\022Z\n\007headers\030\003 \003(\0132@.grpc.g"
  "ateway.protoc_gen_openapiv2.options.Resp"
  "onse.HeadersEntryR\007headers\022]\n\010examples\030\004"
  " \003(\0132A.grpc.gateway.protoc_gen_openapiv2"
  ".options.Response.ExamplesEntryR\010example"
  "s\022c\n\nextensions\030\005 \003(\0132C.grpc.gateway.pro"
  "toc_gen_openapiv2.options.Response.Exten"
  "sionsEntryR\nextensions\032m\n\014HeadersEntry\022\020"
  "\n\003key\030\001 \001(\tR\003key\022G\n\005value\030\002 \001(\01321.grpc.g"
  "ateway.protoc_gen_openapiv2.options.Head"
  "erR\005value:\0028\001\032;\n\rExamplesEntry\022\020\n\003key\030\001 "
  "\001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001\032U\n\017Ex"
  "tensionsEntry\022\020\n\003key\030\001 \001(\tR\003key\022,\n\005value"
  "\030\002 \001(\0132\026.google.protobuf.ValueR\005value:\0028"
  "\001\"\326\003\n\004Info\022\024\n\005title\030\001 \001(\tR\005title\022 \n\013desc"
  "ription\030\002 \001(\tR\013description\022(\n\020terms_of_s"
  "ervice\030\003 \001(\tR\016termsOfService\022L\n\007contact\030"
  "\004 \001(\01322.grpc.gateway.protoc_gen_openapiv"
  "2.options.ContactR\007contact\022L\n\007license\030\005 "
  "\001(\01322.grpc.gateway.protoc_gen_openapiv2."
  "options.LicenseR\007license\022\030\n\007version\030\006 \001("
  "\tR\007version\022_\n\nextensions\030\007 \003(\0132\?.grpc.ga"
  "teway.protoc_gen_openapiv2.options.Info."
  "ExtensionsEntryR\nextensions\032U\n\017Extension"
  "sEntry\022\020\n\003key\030\001 \001(\tR\003key\022,\n\005value\030\002 \001(\0132"
  "\026.google.protobuf.ValueR\005value:\0028\001\"E\n\007Co"
  "ntact\022\022\n\004name\030\001 \001(\tR\004name\022\020\n\003url\030\002 \001(\tR\003"
  "url\022\024\n\005email\030\003 \001(\tR\005email\"/\n\007License\022\022\n\004"
  "name\030\001 \001(\tR\004name\022\020\n\003url\030\002 \001(\tR\003url\"K\n\025Ex"
  "ternalDocumentation\022 \n\013description\030\001 \001(\t"
  "R\013description\022\020\n\003url\030\002 \001(\tR\003url\"\252\002\n\006Sche"
  "ma\022V\n\013json_schema\030\001 \001(\01325.grpc.gateway.p"
  "rotoc_gen_openapiv2.options.JSONSchemaR\n"
  "jsonSchema\022$\n\rdiscriminator\030\002 \001(\tR\rdiscr"
  "iminator\022\033\n\tread_only\030\003 \001(\010R\010readOnly\022e\n"
  "\rexternal_docs\030\005 \001(\0132@.grpc.gateway.prot"
  "oc_gen_openapiv2.options.ExternalDocumen"
  "tationR\014externalDocs\022\030\n\007example\030\006 \001(\tR\007e"
  "xampleJ\004\010\004\020\005\"\337\007\n\nJSONSchema\022\020\n\003ref\030\003 \001(\t"
  "R\003ref\022\024\n\005title\030\005 \001(\tR\005title\022 \n\013descripti"
  "on\030\006 \001(\tR\013description\022\030\n\007default\030\007 \001(\tR\007"
  "default\022\033\n\tread_only\030\010 \001(\010R\010readOnly\022\030\n\007"
  "example\030\t \001(\tR\007example\022\037\n\013multiple_of\030\n "
  "\001(\001R\nmultipleOf\022\030\n\007maximum\030\013 \001(\001R\007maximu"
  "m\022+\n\021exclusive_maximum\030\014 \001(\010R\020exclusiveM"
  "aximum\022\030\n\007minimum\030\r \001(\001R\007minimum\022+\n\021excl"
  "usive_minimum\030\016 \001(\010R\020exclusiveMinimum\022\035\n"
  "\nmax_length\030\017 \001(\004R\tmaxLength\022\035\n\nmin_leng"
  "th\030\020 \001(\004R\tminLength\022\030\n\007pattern\030\021 \001(\tR\007pa"
  "ttern\022\033\n\tmax_items\030\024 \001(\004R\010maxItems\022\033\n\tmi"
  "n_items\030\025 \001(\004R\010minItems\022!\n\014unique_items\030"
  "\026 \001(\010R\013uniqueItems\022%\n\016max_properties\030\030 \001"
  "(\004R\rmaxProperties\022%\n\016min_properties\030\031 \001("
  "\004R\rminProperties\022\032\n\010required\030\032 \003(\tR\010requ"
  "ired\022\024\n\005array\030\" \003(\tR\005array\022_\n\004type\030# \003(\016"
  "2K.grpc.gateway.protoc_gen_openapiv2.opt"
  "ions.JSONSchema.JSONSchemaSimpleTypesR\004t"
  "ype\022\026\n\006format\030$ \001(\tR\006format\022\022\n\004enum\030. \003("
  "\tR\004enum\"w\n\025JSONSchemaSimpleTypes\022\013\n\007UNKN"
  "OWN\020\000\022\t\n\005ARRAY\020\001\022\013\n\007BOOLEAN\020\002\022\013\n\007INTEGER"
  "\020\003\022\010\n\004NULL\020\004\022\n\n\006NUMBER\020\005\022\n\n\006OBJECT\020\006\022\n\n\006"
  "STRING\020\007J\004\010\001\020\002J\004\010\002\020\003J\004\010\004\020\005J\004\010\022\020\023J\004\010\023\020\024J\004"
  "\010\027\020\030J\004\010\033\020\034J\004\010\034\020\035J\004\010\035\020\036J\004\010\036\020\"J\004\010%\020*J\004\010*\020+"
  "J\004\010+\020.\"\224\001\n\003Tag\022 \n\013description\030\002 \001(\tR\013des"
  "cription\022e\n\rexternal_docs\030\003 \001(\0132@.grpc.g"
  "ateway.protoc_gen_openapiv2.options.Exte"
  "rnalDocumentationR\014externalDocsJ\004\010\001\020\002\"\367\001"
  "\n\023SecurityDefinitions\022h\n\010security\030\001 \003(\0132"
  "L.grpc.gateway.protoc_gen_openapiv2.opti"
  "ons.SecurityDefinitions.SecurityEntryR\010s"
  "ecurity\032v\n\rSecurityEntry\022\020\n\003key\030\001 \001(\tR\003k"
  "ey\022O\n\005value\030\002 \001(\01329.grpc.gateway.protoc_"
  "gen_openapiv2.options.SecuritySchemeR\005va"
  "lue:\0028\001\"\377\006\n\016SecurityScheme\022R\n\004type\030\001 \001(\016"
  "2>.grpc.gateway.protoc_gen_openapiv2.opt"
  "ions.SecurityScheme.TypeR\004type\022 \n\013descri"
  "ption\030\002 \001(\tR\013description\022\022\n\004name\030\003 \001(\tR\004"
  "name\022L\n\002in\030\004 \001(\0162<.grpc.gateway.protoc_g"
  "en_openapiv2.options.SecurityScheme.InR\002"
  "in\022R\n\004flow\030\005 \001(\0162>.grpc.gateway.protoc_g"
  "en_openapiv2.options.SecurityScheme.Flow"
  "R\004flow\022+\n\021authorization_url\030\006 \001(\tR\020autho"
  "rizationUrl\022\033\n\ttoken_url\030\007 \001(\tR\010tokenUrl"
  "\022I\n\006scopes\030\010 \001(\01321.grpc.gateway.protoc_g"
  "en_openapiv2.options.ScopesR\006scopes\022i\n\ne"
  "xtensions\030\t \003(\0132I.grpc.gateway.protoc_ge"
  "n_openapiv2.options.SecurityScheme.Exten"
  "sionsEntryR\nextensions\032U\n\017ExtensionsEntr"
  "y\022\020\n\003key\030\001 \001(\tR\003key\022,\n\005value\030\002 \001(\0132\026.goo"
  "gle.protobuf.ValueR\005value:\0028\001\"K\n\004Type\022\020\n"
  "\014TYPE_INVALID\020\000\022\016\n\nTYPE_BASIC\020\001\022\020\n\014TYPE_"
  "API_KEY\020\002\022\017\n\013TYPE_OAUTH2\020\003\"1\n\002In\022\016\n\nIN_I"
  "NVALID\020\000\022\014\n\010IN_QUERY\020\001\022\r\n\tIN_HEADER\020\002\"j\n"
  "\004Flow\022\020\n\014FLOW_INVALID\020\000\022\021\n\rFLOW_IMPLICIT"
  "\020\001\022\021\n\rFLOW_PASSWORD\020\002\022\024\n\020FLOW_APPLICATIO"
  "N\020\003\022\024\n\020FLOW_ACCESS_CODE\020\004\"\366\002\n\023SecurityRe"
  "quirement\022\212\001\n\024security_requirement\030\001 \003(\013"
  "2W.grpc.gateway.protoc_gen_openapiv2.opt"
  "ions.SecurityRequirement.SecurityRequire"
  "mentEntryR\023securityRequirement\0320\n\030Securi"
  "tyRequirementValue\022\024\n\005scope\030\001 \003(\tR\005scope"
  "\032\237\001\n\030SecurityRequirementEntry\022\020\n\003key\030\001 \001"
  "(\tR\003key\022m\n\005value\030\002 \001(\0132W.grpc.gateway.pr"
  "otoc_gen_openapiv2.options.SecurityRequi"
  "rement.SecurityRequirementValueR\005value:\002"
  "8\001\"\226\001\n\006Scopes\022R\n\005scope\030\001 \003(\0132<.grpc.gate"
  "way.protoc_gen_openapiv2.options.Scopes."
  "ScopeEntryR\005scope\0328\n\nScopeEntry\022\020\n\003key\030\001"
  " \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001*;\n\006S"
  "cheme\022\013\n\007UNKNOWN\020\000\022\010\n\004HTTP\020\001\022\t\n\005HTTPS\020\002\022"
  "\006\n\002WS\020\003\022\007\n\003WSS\020\004BHZFgithub.com/grpc-ecos"
  "ystem/grpc-gateway/v2/protoc-gen-openapi"
  "v2/optionsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_sccs[28] = {
  &scc_info_Contact_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_ExternalDocumentation_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_Header_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_Info_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_Info_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_JSONSchema_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_License_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_Operation_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_Operation_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_Operation_ResponsesEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_Response_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_Response_ExamplesEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_Response_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_Response_HeadersEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_Schema_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_Scopes_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_Scopes_ScopeEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_SecurityDefinitions_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_SecurityDefinitions_SecurityEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_SecurityRequirement_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_SecurityRequirement_SecurityRequirementEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_SecurityRequirement_SecurityRequirementValue_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_SecurityScheme_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_SecurityScheme_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_Swagger_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_Swagger_ExtensionsEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_Swagger_ResponsesEntry_DoNotUse_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
  &scc_info_Tag_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto = {
  false, false, descriptor_table_protodef_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto, "protoc-gen-openapiv2/options/openapiv2.proto", 6858,
  &descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_once, descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_sccs, descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto_deps, 28, 1,
  schemas, file_default_instances, TableStruct_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto::offsets,
  file_level_metadata_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto, 28, file_level_enum_descriptors_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto, file_level_service_descriptors_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto)), true);
namespace grpc {
namespace gateway {
namespace protoc_gen_openapiv2 {
namespace options {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* JSONSchema_JSONSchemaSimpleTypes_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto);
  return file_level_enum_descriptors_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[0];
}
bool JSONSchema_JSONSchemaSimpleTypes_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr JSONSchema_JSONSchemaSimpleTypes JSONSchema::UNKNOWN;
constexpr JSONSchema_JSONSchemaSimpleTypes JSONSchema::ARRAY;
constexpr JSONSchema_JSONSchemaSimpleTypes JSONSchema::BOOLEAN;
constexpr JSONSchema_JSONSchemaSimpleTypes JSONSchema::INTEGER;
constexpr JSONSchema_JSONSchemaSimpleTypes JSONSchema::NULL_;
constexpr JSONSchema_JSONSchemaSimpleTypes JSONSchema::NUMBER;
constexpr JSONSchema_JSONSchemaSimpleTypes JSONSchema::OBJECT;
constexpr JSONSchema_JSONSchemaSimpleTypes JSONSchema::STRING;
constexpr JSONSchema_JSONSchemaSimpleTypes JSONSchema::JSONSchemaSimpleTypes_MIN;
constexpr JSONSchema_JSONSchemaSimpleTypes JSONSchema::JSONSchemaSimpleTypes_MAX;
constexpr int JSONSchema::JSONSchemaSimpleTypes_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SecurityScheme_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto);
  return file_level_enum_descriptors_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[1];
}
bool SecurityScheme_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SecurityScheme_Type SecurityScheme::TYPE_INVALID;
constexpr SecurityScheme_Type SecurityScheme::TYPE_BASIC;
constexpr SecurityScheme_Type SecurityScheme::TYPE_API_KEY;
constexpr SecurityScheme_Type SecurityScheme::TYPE_OAUTH2;
constexpr SecurityScheme_Type SecurityScheme::Type_MIN;
constexpr SecurityScheme_Type SecurityScheme::Type_MAX;
constexpr int SecurityScheme::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SecurityScheme_In_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto);
  return file_level_enum_descriptors_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[2];
}
bool SecurityScheme_In_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SecurityScheme_In SecurityScheme::IN_INVALID;
constexpr SecurityScheme_In SecurityScheme::IN_QUERY;
constexpr SecurityScheme_In SecurityScheme::IN_HEADER;
constexpr SecurityScheme_In SecurityScheme::In_MIN;
constexpr SecurityScheme_In SecurityScheme::In_MAX;
constexpr int SecurityScheme::In_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SecurityScheme_Flow_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto);
  return file_level_enum_descriptors_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[3];
}
bool SecurityScheme_Flow_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SecurityScheme_Flow SecurityScheme::FLOW_INVALID;
constexpr SecurityScheme_Flow SecurityScheme::FLOW_IMPLICIT;
constexpr SecurityScheme_Flow SecurityScheme::FLOW_PASSWORD;
constexpr SecurityScheme_Flow SecurityScheme::FLOW_APPLICATION;
constexpr SecurityScheme_Flow SecurityScheme::FLOW_ACCESS_CODE;
constexpr SecurityScheme_Flow SecurityScheme::Flow_MIN;
constexpr SecurityScheme_Flow SecurityScheme::Flow_MAX;
constexpr int SecurityScheme::Flow_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scheme_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto);
  return file_level_enum_descriptors_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto[4];
}
bool Scheme_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

Swagger_ResponsesEntry_DoNotUse::Swagger_ResponsesEntry_DoNotUse() {}
Swagger_ResponsesEntry_DoNotUse::Swagger_ResponsesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Swagger_ResponsesEntry_DoNotUse::MergeFrom(const Swagger_ResponsesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Swagger_ResponsesEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void Swagger_ResponsesEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

Swagger_ExtensionsEntry_DoNotUse::Swagger_ExtensionsEntry_DoNotUse() {}
Swagger_ExtensionsEntry_DoNotUse::Swagger_ExtensionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Swagger_ExtensionsEntry_DoNotUse::MergeFrom(const Swagger_ExtensionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Swagger_ExtensionsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void Swagger_ExtensionsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void Swagger::InitAsDefaultInstance() {
  ::grpc::gateway::protoc_gen_openapiv2::options::_Swagger_default_instance_._instance.get_mutable()->info_ = const_cast< ::grpc::gateway::protoc_gen_openapiv2::options::Info*>(
      ::grpc::gateway::protoc_gen_openapiv2::options::Info::internal_default_instance());
  ::grpc::gateway::protoc_gen_openapiv2::options::_Swagger_default_instance_._instance.get_mutable()->security_definitions_ = const_cast< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions*>(
      ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions::internal_default_instance());
  ::grpc::gateway::protoc_gen_openapiv2::options::_Swagger_default_instance_._instance.get_mutable()->external_docs_ = const_cast< ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation*>(
      ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation::internal_default_instance());
}
class Swagger::_Internal {
 public:
  static const ::grpc::gateway::protoc_gen_openapiv2::options::Info& info(const Swagger* msg);
  static const ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions& security_definitions(const Swagger* msg);
  static const ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation& external_docs(const Swagger* msg);
};

const ::grpc::gateway::protoc_gen_openapiv2::options::Info&
Swagger::_Internal::info(const Swagger* msg) {
  return *msg->info_;
}
const ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions&
Swagger::_Internal::security_definitions(const Swagger* msg) {
  return *msg->security_definitions_;
}
const ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation&
Swagger::_Internal::external_docs(const Swagger* msg) {
  return *msg->external_docs_;
}
void Swagger::clear_extensions() {
  extensions_.Clear();
}
Swagger::Swagger(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  schemes_(arena),
  consumes_(arena),
  produces_(arena),
  responses_(arena),
  security_(arena),
  extensions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.Swagger)
}
Swagger::Swagger(const Swagger& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      schemes_(from.schemes_),
      consumes_(from.consumes_),
      produces_(from.produces_),
      security_(from.security_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  responses_.MergeFrom(from.responses_);
  extensions_.MergeFrom(from.extensions_);
  swagger_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_swagger().empty()) {
    swagger_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_swagger(),
      GetArena());
  }
  host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_host().empty()) {
    host_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_host(),
      GetArena());
  }
  base_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_base_path().empty()) {
    base_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_base_path(),
      GetArena());
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc::gateway::protoc_gen_openapiv2::options::Info(*from.info_);
  } else {
    info_ = nullptr;
  }
  if (from._internal_has_security_definitions()) {
    security_definitions_ = new ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions(*from.security_definitions_);
  } else {
    security_definitions_ = nullptr;
  }
  if (from._internal_has_external_docs()) {
    external_docs_ = new ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation(*from.external_docs_);
  } else {
    external_docs_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.Swagger)
}

void Swagger::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Swagger_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  swagger_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  host_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  base_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&external_docs_) -
      reinterpret_cast<char*>(&info_)) + sizeof(external_docs_));
}

Swagger::~Swagger() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.Swagger)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Swagger::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  swagger_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  host_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  base_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete info_;
  if (this != internal_default_instance()) delete security_definitions_;
  if (this != internal_default_instance()) delete external_docs_;
}

void Swagger::ArenaDtor(void* object) {
  Swagger* _this = reinterpret_cast< Swagger* >(object);
  (void)_this;
}
void Swagger::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Swagger::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Swagger& Swagger::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Swagger_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  return *internal_default_instance();
}


void Swagger::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.Swagger)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  schemes_.Clear();
  consumes_.Clear();
  produces_.Clear();
  responses_.Clear();
  security_.Clear();
  extensions_.Clear();
  swagger_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  host_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  base_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  if (GetArena() == nullptr && security_definitions_ != nullptr) {
    delete security_definitions_;
  }
  security_definitions_ = nullptr;
  if (GetArena() == nullptr && external_docs_ != nullptr) {
    delete external_docs_;
  }
  external_docs_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Swagger::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string swagger = 1[json_name = "swagger"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_swagger();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Swagger.swagger"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.Info info = 2[json_name = "info"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string host = 3[json_name = "host"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_host();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Swagger.host"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string base_path = 4[json_name = "basePath"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_base_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Swagger.base_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .grpc.gateway.protoc_gen_openapiv2.options.Scheme schemes = 5[json_name = "schemes"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_schemes(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_schemes(static_cast<::grpc::gateway::protoc_gen_openapiv2::options::Scheme>(val));
        } else goto handle_unusual;
        continue;
      // repeated string consumes = 6[json_name = "consumes"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_consumes();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Swagger.consumes"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string produces = 7[json_name = "produces"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_produces();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Swagger.produces"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, .grpc.gateway.protoc_gen_openapiv2.options.Response> responses = 10[json_name = "responses"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&responses_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions security_definitions = 11[json_name = "securityDefinitions"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_security_definitions(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement security = 12[json_name = "security"];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_security(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 14[json_name = "externalDocs"];
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_external_docs(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .google.protobuf.Value> extensions = 15[json_name = "extensions"];
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&extensions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<122>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Swagger::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.Swagger)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string swagger = 1[json_name = "swagger"];
  if (this->swagger().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swagger().data(), static_cast<int>(this->_internal_swagger().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Swagger.swagger");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_swagger(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Info info = 2[json_name = "info"];
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::info(this), target, stream);
  }

  // string host = 3[json_name = "host"];
  if (this->host().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_host().data(), static_cast<int>(this->_internal_host().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Swagger.host");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_host(), target);
  }

  // string base_path = 4[json_name = "basePath"];
  if (this->base_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_base_path().data(), static_cast<int>(this->_internal_base_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Swagger.base_path");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_base_path(), target);
  }

  // repeated .grpc.gateway.protoc_gen_openapiv2.options.Scheme schemes = 5[json_name = "schemes"];
  {
    int byte_size = _schemes_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          5, schemes_, byte_size, target);
    }
  }

  // repeated string consumes = 6[json_name = "consumes"];
  for (int i = 0, n = this->_internal_consumes_size(); i < n; i++) {
    const auto& s = this->_internal_consumes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Swagger.consumes");
    target = stream->WriteString(6, s, target);
  }

  // repeated string produces = 7[json_name = "produces"];
  for (int i = 0, n = this->_internal_produces_size(); i < n; i++) {
    const auto& s = this->_internal_produces(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Swagger.produces");
    target = stream->WriteString(7, s, target);
  }

  // map<string, .grpc.gateway.protoc_gen_openapiv2.options.Response> responses = 10[json_name = "responses"];
  if (!this->_internal_responses().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Response >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.Swagger.ResponsesEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_responses().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_responses().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Response >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Response >::const_iterator
          it = this->_internal_responses().begin();
          it != this->_internal_responses().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Swagger_ResponsesEntry_DoNotUse::Funcs::InternalSerialize(10, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Response >::const_iterator
          it = this->_internal_responses().begin();
          it != this->_internal_responses().end(); ++it) {
        target = Swagger_ResponsesEntry_DoNotUse::Funcs::InternalSerialize(10, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions security_definitions = 11[json_name = "securityDefinitions"];
  if (this->has_security_definitions()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::security_definitions(this), target, stream);
  }

  // repeated .grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement security = 12[json_name = "security"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_security_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, this->_internal_security(i), target, stream);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 14[json_name = "externalDocs"];
  if (this->has_external_docs()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::external_docs(this), target, stream);
  }

  // map<string, .google.protobuf.Value> extensions = 15[json_name = "extensions"];
  if (!this->_internal_extensions().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.Swagger.ExtensionsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_extensions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_extensions().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::const_iterator
          it = this->_internal_extensions().begin();
          it != this->_internal_extensions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Swagger_ExtensionsEntry_DoNotUse::Funcs::InternalSerialize(15, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::const_iterator
          it = this->_internal_extensions().begin();
          it != this->_internal_extensions().end(); ++it) {
        target = Swagger_ExtensionsEntry_DoNotUse::Funcs::InternalSerialize(15, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.Swagger)
  return target;
}

size_t Swagger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.Swagger)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc.gateway.protoc_gen_openapiv2.options.Scheme schemes = 5[json_name = "schemes"];
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_schemes_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_schemes(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _schemes_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated string consumes = 6[json_name = "consumes"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(consumes_.size());
  for (int i = 0, n = consumes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      consumes_.Get(i));
  }

  // repeated string produces = 7[json_name = "produces"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(produces_.size());
  for (int i = 0, n = produces_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      produces_.Get(i));
  }

  // map<string, .grpc.gateway.protoc_gen_openapiv2.options.Response> responses = 10[json_name = "responses"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_responses_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Response >::const_iterator
      it = this->_internal_responses().begin();
      it != this->_internal_responses().end(); ++it) {
    total_size += Swagger_ResponsesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated .grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement security = 12[json_name = "security"];
  total_size += 1UL * this->_internal_security_size();
  for (const auto& msg : this->security_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<string, .google.protobuf.Value> extensions = 15[json_name = "extensions"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_extensions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::const_iterator
      it = this->_internal_extensions().begin();
      it != this->_internal_extensions().end(); ++it) {
    total_size += Swagger_ExtensionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string swagger = 1[json_name = "swagger"];
  if (this->swagger().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swagger());
  }

  // string host = 3[json_name = "host"];
  if (this->host().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_host());
  }

  // string base_path = 4[json_name = "basePath"];
  if (this->base_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_base_path());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Info info = 2[json_name = "info"];
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions security_definitions = 11[json_name = "securityDefinitions"];
  if (this->has_security_definitions()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *security_definitions_);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 14[json_name = "externalDocs"];
  if (this->has_external_docs()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *external_docs_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Swagger::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Swagger)
  GOOGLE_DCHECK_NE(&from, this);
  const Swagger* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Swagger>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.gateway.protoc_gen_openapiv2.options.Swagger)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.gateway.protoc_gen_openapiv2.options.Swagger)
    MergeFrom(*source);
  }
}

void Swagger::MergeFrom(const Swagger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Swagger)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  schemes_.MergeFrom(from.schemes_);
  consumes_.MergeFrom(from.consumes_);
  produces_.MergeFrom(from.produces_);
  responses_.MergeFrom(from.responses_);
  security_.MergeFrom(from.security_);
  extensions_.MergeFrom(from.extensions_);
  if (from.swagger().size() > 0) {
    _internal_set_swagger(from._internal_swagger());
  }
  if (from.host().size() > 0) {
    _internal_set_host(from._internal_host());
  }
  if (from.base_path().size() > 0) {
    _internal_set_base_path(from._internal_base_path());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc::gateway::protoc_gen_openapiv2::options::Info::MergeFrom(from._internal_info());
  }
  if (from.has_security_definitions()) {
    _internal_mutable_security_definitions()->::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions::MergeFrom(from._internal_security_definitions());
  }
  if (from.has_external_docs()) {
    _internal_mutable_external_docs()->::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation::MergeFrom(from._internal_external_docs());
  }
}

void Swagger::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Swagger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Swagger::CopyFrom(const Swagger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Swagger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Swagger::IsInitialized() const {
  return true;
}

void Swagger::InternalSwap(Swagger* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  schemes_.InternalSwap(&other->schemes_);
  consumes_.InternalSwap(&other->consumes_);
  produces_.InternalSwap(&other->produces_);
  responses_.Swap(&other->responses_);
  security_.InternalSwap(&other->security_);
  extensions_.Swap(&other->extensions_);
  swagger_.Swap(&other->swagger_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  host_.Swap(&other->host_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  base_path_.Swap(&other->base_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Swagger, external_docs_)
      + sizeof(Swagger::external_docs_)
      - PROTOBUF_FIELD_OFFSET(Swagger, info_)>(
          reinterpret_cast<char*>(&info_),
          reinterpret_cast<char*>(&other->info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Swagger::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

Operation_ResponsesEntry_DoNotUse::Operation_ResponsesEntry_DoNotUse() {}
Operation_ResponsesEntry_DoNotUse::Operation_ResponsesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Operation_ResponsesEntry_DoNotUse::MergeFrom(const Operation_ResponsesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Operation_ResponsesEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void Operation_ResponsesEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

Operation_ExtensionsEntry_DoNotUse::Operation_ExtensionsEntry_DoNotUse() {}
Operation_ExtensionsEntry_DoNotUse::Operation_ExtensionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Operation_ExtensionsEntry_DoNotUse::MergeFrom(const Operation_ExtensionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Operation_ExtensionsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void Operation_ExtensionsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void Operation::InitAsDefaultInstance() {
  ::grpc::gateway::protoc_gen_openapiv2::options::_Operation_default_instance_._instance.get_mutable()->external_docs_ = const_cast< ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation*>(
      ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation::internal_default_instance());
}
class Operation::_Internal {
 public:
  static const ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation& external_docs(const Operation* msg);
};

const ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation&
Operation::_Internal::external_docs(const Operation* msg) {
  return *msg->external_docs_;
}
void Operation::clear_extensions() {
  extensions_.Clear();
}
Operation::Operation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tags_(arena),
  consumes_(arena),
  produces_(arena),
  responses_(arena),
  schemes_(arena),
  security_(arena),
  extensions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.Operation)
}
Operation::Operation(const Operation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tags_(from.tags_),
      consumes_(from.consumes_),
      produces_(from.produces_),
      schemes_(from.schemes_),
      security_(from.security_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  responses_.MergeFrom(from.responses_);
  extensions_.MergeFrom(from.extensions_);
  summary_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_summary().empty()) {
    summary_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_summary(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  operation_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_operation_id().empty()) {
    operation_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_operation_id(),
      GetArena());
  }
  if (from._internal_has_external_docs()) {
    external_docs_ = new ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation(*from.external_docs_);
  } else {
    external_docs_ = nullptr;
  }
  deprecated_ = from.deprecated_;
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.Operation)
}

void Operation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Operation_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  summary_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  operation_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&external_docs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deprecated_) -
      reinterpret_cast<char*>(&external_docs_)) + sizeof(deprecated_));
}

Operation::~Operation() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.Operation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Operation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  summary_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  operation_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete external_docs_;
}

void Operation::ArenaDtor(void* object) {
  Operation* _this = reinterpret_cast< Operation* >(object);
  (void)_this;
}
void Operation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Operation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Operation& Operation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Operation_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  return *internal_default_instance();
}


void Operation::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.Operation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  consumes_.Clear();
  produces_.Clear();
  responses_.Clear();
  schemes_.Clear();
  security_.Clear();
  extensions_.Clear();
  summary_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  operation_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && external_docs_ != nullptr) {
    delete external_docs_;
  }
  external_docs_ = nullptr;
  deprecated_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Operation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string tags = 1[json_name = "tags"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_tags();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Operation.tags"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string summary = 2[json_name = "summary"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_summary();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Operation.summary"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 3[json_name = "description"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Operation.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 4[json_name = "externalDocs"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_external_docs(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string operation_id = 5[json_name = "operationId"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_operation_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Operation.operation_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string consumes = 6[json_name = "consumes"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_consumes();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Operation.consumes"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string produces = 7[json_name = "produces"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_produces();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Operation.produces"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, .grpc.gateway.protoc_gen_openapiv2.options.Response> responses = 9[json_name = "responses"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&responses_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .grpc.gateway.protoc_gen_openapiv2.options.Scheme schemes = 10[json_name = "schemes"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_schemes(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_schemes(static_cast<::grpc::gateway::protoc_gen_openapiv2::options::Scheme>(val));
        } else goto handle_unusual;
        continue;
      // bool deprecated = 11[json_name = "deprecated"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          deprecated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement security = 12[json_name = "security"];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_security(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, .google.protobuf.Value> extensions = 13[json_name = "extensions"];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&extensions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Operation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.Operation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string tags = 1[json_name = "tags"];
  for (int i = 0, n = this->_internal_tags_size(); i < n; i++) {
    const auto& s = this->_internal_tags(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Operation.tags");
    target = stream->WriteString(1, s, target);
  }

  // string summary = 2[json_name = "summary"];
  if (this->summary().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_summary().data(), static_cast<int>(this->_internal_summary().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Operation.summary");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_summary(), target);
  }

  // string description = 3[json_name = "description"];
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Operation.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 4[json_name = "externalDocs"];
  if (this->has_external_docs()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::external_docs(this), target, stream);
  }

  // string operation_id = 5[json_name = "operationId"];
  if (this->operation_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_operation_id().data(), static_cast<int>(this->_internal_operation_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Operation.operation_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_operation_id(), target);
  }

  // repeated string consumes = 6[json_name = "consumes"];
  for (int i = 0, n = this->_internal_consumes_size(); i < n; i++) {
    const auto& s = this->_internal_consumes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Operation.consumes");
    target = stream->WriteString(6, s, target);
  }

  // repeated string produces = 7[json_name = "produces"];
  for (int i = 0, n = this->_internal_produces_size(); i < n; i++) {
    const auto& s = this->_internal_produces(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Operation.produces");
    target = stream->WriteString(7, s, target);
  }

  // map<string, .grpc.gateway.protoc_gen_openapiv2.options.Response> responses = 9[json_name = "responses"];
  if (!this->_internal_responses().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Response >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.Operation.ResponsesEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_responses().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_responses().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Response >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Response >::const_iterator
          it = this->_internal_responses().begin();
          it != this->_internal_responses().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Operation_ResponsesEntry_DoNotUse::Funcs::InternalSerialize(9, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Response >::const_iterator
          it = this->_internal_responses().begin();
          it != this->_internal_responses().end(); ++it) {
        target = Operation_ResponsesEntry_DoNotUse::Funcs::InternalSerialize(9, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // repeated .grpc.gateway.protoc_gen_openapiv2.options.Scheme schemes = 10[json_name = "schemes"];
  {
    int byte_size = _schemes_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          10, schemes_, byte_size, target);
    }
  }

  // bool deprecated = 11[json_name = "deprecated"];
  if (this->deprecated() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(11, this->_internal_deprecated(), target);
  }

  // repeated .grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement security = 12[json_name = "security"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_security_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, this->_internal_security(i), target, stream);
  }

  // map<string, .google.protobuf.Value> extensions = 13[json_name = "extensions"];
  if (!this->_internal_extensions().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.Operation.ExtensionsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_extensions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_extensions().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::const_iterator
          it = this->_internal_extensions().begin();
          it != this->_internal_extensions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Operation_ExtensionsEntry_DoNotUse::Funcs::InternalSerialize(13, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::const_iterator
          it = this->_internal_extensions().begin();
          it != this->_internal_extensions().end(); ++it) {
        target = Operation_ExtensionsEntry_DoNotUse::Funcs::InternalSerialize(13, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.Operation)
  return target;
}

size_t Operation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.Operation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 1[json_name = "tags"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(tags_.size());
  for (int i = 0, n = tags_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      tags_.Get(i));
  }

  // repeated string consumes = 6[json_name = "consumes"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(consumes_.size());
  for (int i = 0, n = consumes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      consumes_.Get(i));
  }

  // repeated string produces = 7[json_name = "produces"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(produces_.size());
  for (int i = 0, n = produces_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      produces_.Get(i));
  }

  // map<string, .grpc.gateway.protoc_gen_openapiv2.options.Response> responses = 9[json_name = "responses"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_responses_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Response >::const_iterator
      it = this->_internal_responses().begin();
      it != this->_internal_responses().end(); ++it) {
    total_size += Operation_ResponsesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated .grpc.gateway.protoc_gen_openapiv2.options.Scheme schemes = 10[json_name = "schemes"];
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_schemes_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_schemes(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _schemes_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement security = 12[json_name = "security"];
  total_size += 1UL * this->_internal_security_size();
  for (const auto& msg : this->security_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<string, .google.protobuf.Value> extensions = 13[json_name = "extensions"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_extensions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::const_iterator
      it = this->_internal_extensions().begin();
      it != this->_internal_extensions().end(); ++it) {
    total_size += Operation_ExtensionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string summary = 2[json_name = "summary"];
  if (this->summary().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_summary());
  }

  // string description = 3[json_name = "description"];
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string operation_id = 5[json_name = "operationId"];
  if (this->operation_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_operation_id());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 4[json_name = "externalDocs"];
  if (this->has_external_docs()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *external_docs_);
  }

  // bool deprecated = 11[json_name = "deprecated"];
  if (this->deprecated() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Operation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Operation)
  GOOGLE_DCHECK_NE(&from, this);
  const Operation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Operation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.gateway.protoc_gen_openapiv2.options.Operation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.gateway.protoc_gen_openapiv2.options.Operation)
    MergeFrom(*source);
  }
}

void Operation::MergeFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Operation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  consumes_.MergeFrom(from.consumes_);
  produces_.MergeFrom(from.produces_);
  responses_.MergeFrom(from.responses_);
  schemes_.MergeFrom(from.schemes_);
  security_.MergeFrom(from.security_);
  extensions_.MergeFrom(from.extensions_);
  if (from.summary().size() > 0) {
    _internal_set_summary(from._internal_summary());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.operation_id().size() > 0) {
    _internal_set_operation_id(from._internal_operation_id());
  }
  if (from.has_external_docs()) {
    _internal_mutable_external_docs()->::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation::MergeFrom(from._internal_external_docs());
  }
  if (from.deprecated() != 0) {
    _internal_set_deprecated(from._internal_deprecated());
  }
}

void Operation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Operation::CopyFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operation::IsInitialized() const {
  return true;
}

void Operation::InternalSwap(Operation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tags_.InternalSwap(&other->tags_);
  consumes_.InternalSwap(&other->consumes_);
  produces_.InternalSwap(&other->produces_);
  responses_.Swap(&other->responses_);
  schemes_.InternalSwap(&other->schemes_);
  security_.InternalSwap(&other->security_);
  extensions_.Swap(&other->extensions_);
  summary_.Swap(&other->summary_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  operation_id_.Swap(&other->operation_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operation, deprecated_)
      + sizeof(Operation::deprecated_)
      - PROTOBUF_FIELD_OFFSET(Operation, external_docs_)>(
          reinterpret_cast<char*>(&external_docs_),
          reinterpret_cast<char*>(&other->external_docs_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Operation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Header::InitAsDefaultInstance() {
}
class Header::_Internal {
 public:
};

Header::Header(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.Header)
}
Header::Header(const Header& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_type(),
      GetArena());
  }
  format_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_format().empty()) {
    format_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_format(),
      GetArena());
  }
  default__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_default_().empty()) {
    default__.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_default_(),
      GetArena());
  }
  pattern_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pattern().empty()) {
    pattern_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pattern(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.Header)
}

void Header::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Header_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  format_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  default__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pattern_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Header::~Header() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.Header)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Header::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  format_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  default__.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pattern_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Header::ArenaDtor(void* object) {
  Header* _this = reinterpret_cast< Header* >(object);
  (void)_this;
}
void Header::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Header::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Header& Header::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Header_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  return *internal_default_instance();
}


void Header::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.Header)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  format_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  default__.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pattern_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Header::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string description = 1[json_name = "description"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Header.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type = 2[json_name = "type"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Header.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string format = 3[json_name = "format"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_format();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Header.format"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string default = 6[json_name = "default"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_default_();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Header.default"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pattern = 13[json_name = "pattern"];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_pattern();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Header.pattern"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Header::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.Header)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 1[json_name = "description"];
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Header.description");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_description(), target);
  }

  // string type = 2[json_name = "type"];
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Header.type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type(), target);
  }

  // string format = 3[json_name = "format"];
  if (this->format().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_format().data(), static_cast<int>(this->_internal_format().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Header.format");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_format(), target);
  }

  // string default = 6[json_name = "default"];
  if (this->default_().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_default_().data(), static_cast<int>(this->_internal_default_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Header.default");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_default_(), target);
  }

  // string pattern = 13[json_name = "pattern"];
  if (this->pattern().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pattern().data(), static_cast<int>(this->_internal_pattern().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Header.pattern");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_pattern(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.Header)
  return target;
}

size_t Header::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.Header)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string description = 1[json_name = "description"];
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string type = 2[json_name = "type"];
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string format = 3[json_name = "format"];
  if (this->format().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_format());
  }

  // string default = 6[json_name = "default"];
  if (this->default_().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_default_());
  }

  // string pattern = 13[json_name = "pattern"];
  if (this->pattern().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pattern());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Header::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Header)
  GOOGLE_DCHECK_NE(&from, this);
  const Header* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Header>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.gateway.protoc_gen_openapiv2.options.Header)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.gateway.protoc_gen_openapiv2.options.Header)
    MergeFrom(*source);
  }
}

void Header::MergeFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Header)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.format().size() > 0) {
    _internal_set_format(from._internal_format());
  }
  if (from.default_().size() > 0) {
    _internal_set_default_(from._internal_default_());
  }
  if (from.pattern().size() > 0) {
    _internal_set_pattern(from._internal_pattern());
  }
}

void Header::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Header::CopyFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Header::IsInitialized() const {
  return true;
}

void Header::InternalSwap(Header* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  format_.Swap(&other->format_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  default__.Swap(&other->default__, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pattern_.Swap(&other->pattern_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Header::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

Response_HeadersEntry_DoNotUse::Response_HeadersEntry_DoNotUse() {}
Response_HeadersEntry_DoNotUse::Response_HeadersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Response_HeadersEntry_DoNotUse::MergeFrom(const Response_HeadersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Response_HeadersEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void Response_HeadersEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

Response_ExamplesEntry_DoNotUse::Response_ExamplesEntry_DoNotUse() {}
Response_ExamplesEntry_DoNotUse::Response_ExamplesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Response_ExamplesEntry_DoNotUse::MergeFrom(const Response_ExamplesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Response_ExamplesEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void Response_ExamplesEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

Response_ExtensionsEntry_DoNotUse::Response_ExtensionsEntry_DoNotUse() {}
Response_ExtensionsEntry_DoNotUse::Response_ExtensionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Response_ExtensionsEntry_DoNotUse::MergeFrom(const Response_ExtensionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Response_ExtensionsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void Response_ExtensionsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void Response::InitAsDefaultInstance() {
  ::grpc::gateway::protoc_gen_openapiv2::options::_Response_default_instance_._instance.get_mutable()->schema_ = const_cast< ::grpc::gateway::protoc_gen_openapiv2::options::Schema*>(
      ::grpc::gateway::protoc_gen_openapiv2::options::Schema::internal_default_instance());
}
class Response::_Internal {
 public:
  static const ::grpc::gateway::protoc_gen_openapiv2::options::Schema& schema(const Response* msg);
};

const ::grpc::gateway::protoc_gen_openapiv2::options::Schema&
Response::_Internal::schema(const Response* msg) {
  return *msg->schema_;
}
void Response::clear_extensions() {
  extensions_.Clear();
}
Response::Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  headers_(arena),
  examples_(arena),
  extensions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.Response)
}
Response::Response(const Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  headers_.MergeFrom(from.headers_);
  examples_.MergeFrom(from.examples_);
  extensions_.MergeFrom(from.extensions_);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  if (from._internal_has_schema()) {
    schema_ = new ::grpc::gateway::protoc_gen_openapiv2::options::Schema(*from.schema_);
  } else {
    schema_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.Response)
}

void Response::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Response_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  schema_ = nullptr;
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete schema_;
}

void Response::ArenaDtor(void* object) {
  Response* _this = reinterpret_cast< Response* >(object);
  (void)_this;
}
void Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Response& Response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Response_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  return *internal_default_instance();
}


void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  headers_.Clear();
  examples_.Clear();
  extensions_.Clear();
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && schema_ != nullptr) {
    delete schema_;
  }
  schema_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string description = 1[json_name = "description"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Response.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.Schema schema = 2[json_name = "schema"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_schema(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .grpc.gateway.protoc_gen_openapiv2.options.Header> headers = 3[json_name = "headers"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&headers_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, string> examples = 4[json_name = "examples"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&examples_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, .google.protobuf.Value> extensions = 5[json_name = "extensions"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&extensions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 1[json_name = "description"];
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Response.description");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_description(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Schema schema = 2[json_name = "schema"];
  if (this->has_schema()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::schema(this), target, stream);
  }

  // map<string, .grpc.gateway.protoc_gen_openapiv2.options.Header> headers = 3[json_name = "headers"];
  if (!this->_internal_headers().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Header >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.Response.HeadersEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_headers().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_headers().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Header >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Header >::const_iterator
          it = this->_internal_headers().begin();
          it != this->_internal_headers().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Response_HeadersEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Header >::const_iterator
          it = this->_internal_headers().begin();
          it != this->_internal_headers().end(); ++it) {
        target = Response_HeadersEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, string> examples = 4[json_name = "examples"];
  if (!this->_internal_examples().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.Response.ExamplesEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.Response.ExamplesEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_examples().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_examples().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_examples().begin();
          it != this->_internal_examples().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Response_ExamplesEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_examples().begin();
          it != this->_internal_examples().end(); ++it) {
        target = Response_ExamplesEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, .google.protobuf.Value> extensions = 5[json_name = "extensions"];
  if (!this->_internal_extensions().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.Response.ExtensionsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_extensions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_extensions().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::const_iterator
          it = this->_internal_extensions().begin();
          it != this->_internal_extensions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Response_ExtensionsEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::const_iterator
          it = this->_internal_extensions().begin();
          it != this->_internal_extensions().end(); ++it) {
        target = Response_ExtensionsEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .grpc.gateway.protoc_gen_openapiv2.options.Header> headers = 3[json_name = "headers"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_headers_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::Header >::const_iterator
      it = this->_internal_headers().begin();
      it != this->_internal_headers().end(); ++it) {
    total_size += Response_HeadersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, string> examples = 4[json_name = "examples"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_examples_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_examples().begin();
      it != this->_internal_examples().end(); ++it) {
    total_size += Response_ExamplesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<string, .google.protobuf.Value> extensions = 5[json_name = "extensions"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_extensions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::const_iterator
      it = this->_internal_extensions().begin();
      it != this->_internal_extensions().end(); ++it) {
    total_size += Response_ExtensionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string description = 1[json_name = "description"];
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Schema schema = 2[json_name = "schema"];
  if (this->has_schema()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *schema_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.gateway.protoc_gen_openapiv2.options.Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.gateway.protoc_gen_openapiv2.options.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  headers_.MergeFrom(from.headers_);
  examples_.MergeFrom(from.examples_);
  extensions_.MergeFrom(from.extensions_);
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.has_schema()) {
    _internal_mutable_schema()->::grpc::gateway::protoc_gen_openapiv2::options::Schema::MergeFrom(from._internal_schema());
  }
}

void Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::InternalSwap(Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  headers_.Swap(&other->headers_);
  examples_.Swap(&other->examples_);
  extensions_.Swap(&other->extensions_);
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(schema_, other->schema_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

Info_ExtensionsEntry_DoNotUse::Info_ExtensionsEntry_DoNotUse() {}
Info_ExtensionsEntry_DoNotUse::Info_ExtensionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Info_ExtensionsEntry_DoNotUse::MergeFrom(const Info_ExtensionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Info_ExtensionsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void Info_ExtensionsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void Info::InitAsDefaultInstance() {
  ::grpc::gateway::protoc_gen_openapiv2::options::_Info_default_instance_._instance.get_mutable()->contact_ = const_cast< ::grpc::gateway::protoc_gen_openapiv2::options::Contact*>(
      ::grpc::gateway::protoc_gen_openapiv2::options::Contact::internal_default_instance());
  ::grpc::gateway::protoc_gen_openapiv2::options::_Info_default_instance_._instance.get_mutable()->license_ = const_cast< ::grpc::gateway::protoc_gen_openapiv2::options::License*>(
      ::grpc::gateway::protoc_gen_openapiv2::options::License::internal_default_instance());
}
class Info::_Internal {
 public:
  static const ::grpc::gateway::protoc_gen_openapiv2::options::Contact& contact(const Info* msg);
  static const ::grpc::gateway::protoc_gen_openapiv2::options::License& license(const Info* msg);
};

const ::grpc::gateway::protoc_gen_openapiv2::options::Contact&
Info::_Internal::contact(const Info* msg) {
  return *msg->contact_;
}
const ::grpc::gateway::protoc_gen_openapiv2::options::License&
Info::_Internal::license(const Info* msg) {
  return *msg->license_;
}
void Info::clear_extensions() {
  extensions_.Clear();
}
Info::Info(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  extensions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.Info)
}
Info::Info(const Info& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  extensions_.MergeFrom(from.extensions_);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_title().empty()) {
    title_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_title(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  terms_of_service_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_terms_of_service().empty()) {
    terms_of_service_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_terms_of_service(),
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version(),
      GetArena());
  }
  if (from._internal_has_contact()) {
    contact_ = new ::grpc::gateway::protoc_gen_openapiv2::options::Contact(*from.contact_);
  } else {
    contact_ = nullptr;
  }
  if (from._internal_has_license()) {
    license_ = new ::grpc::gateway::protoc_gen_openapiv2::options::License(*from.license_);
  } else {
    license_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.Info)
}

void Info::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Info_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  terms_of_service_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&contact_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&license_) -
      reinterpret_cast<char*>(&contact_)) + sizeof(license_));
}

Info::~Info() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.Info)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Info::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  title_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  terms_of_service_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete contact_;
  if (this != internal_default_instance()) delete license_;
}

void Info::ArenaDtor(void* object) {
  Info* _this = reinterpret_cast< Info* >(object);
  (void)_this;
}
void Info::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Info& Info::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Info_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  return *internal_default_instance();
}


void Info::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.Info)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extensions_.Clear();
  title_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  terms_of_service_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && contact_ != nullptr) {
    delete contact_;
  }
  contact_ = nullptr;
  if (GetArena() == nullptr && license_ != nullptr) {
    delete license_;
  }
  license_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Info::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string title = 1[json_name = "title"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_title();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Info.title"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 2[json_name = "description"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Info.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string terms_of_service = 3[json_name = "termsOfService"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_terms_of_service();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Info.terms_of_service"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.Contact contact = 4[json_name = "contact"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_contact(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.License license = 5[json_name = "license"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_license(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version = 6[json_name = "version"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Info.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .google.protobuf.Value> extensions = 7[json_name = "extensions"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&extensions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Info::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.Info)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1[json_name = "title"];
  if (this->title().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Info.title");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_title(), target);
  }

  // string description = 2[json_name = "description"];
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Info.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // string terms_of_service = 3[json_name = "termsOfService"];
  if (this->terms_of_service().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_terms_of_service().data(), static_cast<int>(this->_internal_terms_of_service().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Info.terms_of_service");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_terms_of_service(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Contact contact = 4[json_name = "contact"];
  if (this->has_contact()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::contact(this), target, stream);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.License license = 5[json_name = "license"];
  if (this->has_license()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::license(this), target, stream);
  }

  // string version = 6[json_name = "version"];
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Info.version");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_version(), target);
  }

  // map<string, .google.protobuf.Value> extensions = 7[json_name = "extensions"];
  if (!this->_internal_extensions().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.Info.ExtensionsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_extensions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_extensions().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::const_iterator
          it = this->_internal_extensions().begin();
          it != this->_internal_extensions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Info_ExtensionsEntry_DoNotUse::Funcs::InternalSerialize(7, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::const_iterator
          it = this->_internal_extensions().begin();
          it != this->_internal_extensions().end(); ++it) {
        target = Info_ExtensionsEntry_DoNotUse::Funcs::InternalSerialize(7, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.Info)
  return target;
}

size_t Info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.Info)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .google.protobuf.Value> extensions = 7[json_name = "extensions"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_extensions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::const_iterator
      it = this->_internal_extensions().begin();
      it != this->_internal_extensions().end(); ++it) {
    total_size += Info_ExtensionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string title = 1[json_name = "title"];
  if (this->title().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // string description = 2[json_name = "description"];
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string terms_of_service = 3[json_name = "termsOfService"];
  if (this->terms_of_service().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_terms_of_service());
  }

  // string version = 6[json_name = "version"];
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Contact contact = 4[json_name = "contact"];
  if (this->has_contact()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *contact_);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.License license = 5[json_name = "license"];
  if (this->has_license()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *license_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Info::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Info)
  GOOGLE_DCHECK_NE(&from, this);
  const Info* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Info>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.gateway.protoc_gen_openapiv2.options.Info)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.gateway.protoc_gen_openapiv2.options.Info)
    MergeFrom(*source);
  }
}

void Info::MergeFrom(const Info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extensions_.MergeFrom(from.extensions_);
  if (from.title().size() > 0) {
    _internal_set_title(from._internal_title());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.terms_of_service().size() > 0) {
    _internal_set_terms_of_service(from._internal_terms_of_service());
  }
  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
  if (from.has_contact()) {
    _internal_mutable_contact()->::grpc::gateway::protoc_gen_openapiv2::options::Contact::MergeFrom(from._internal_contact());
  }
  if (from.has_license()) {
    _internal_mutable_license()->::grpc::gateway::protoc_gen_openapiv2::options::License::MergeFrom(from._internal_license());
  }
}

void Info::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Info::CopyFrom(const Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Info::IsInitialized() const {
  return true;
}

void Info::InternalSwap(Info* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  extensions_.Swap(&other->extensions_);
  title_.Swap(&other->title_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  terms_of_service_.Swap(&other->terms_of_service_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Info, license_)
      + sizeof(Info::license_)
      - PROTOBUF_FIELD_OFFSET(Info, contact_)>(
          reinterpret_cast<char*>(&contact_),
          reinterpret_cast<char*>(&other->contact_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Info::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Contact::InitAsDefaultInstance() {
}
class Contact::_Internal {
 public:
};

Contact::Contact(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.Contact)
}
Contact::Contact(const Contact& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_url(),
      GetArena());
  }
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email().empty()) {
    email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_email(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.Contact)
}

void Contact::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Contact_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Contact::~Contact() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.Contact)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Contact::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Contact::ArenaDtor(void* object) {
  Contact* _this = reinterpret_cast< Contact* >(object);
  (void)_this;
}
void Contact::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Contact::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Contact& Contact::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Contact_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  return *internal_default_instance();
}


void Contact::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.Contact)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  email_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Contact::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1[json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Contact.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string url = 2[json_name = "url"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Contact.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string email = 3[json_name = "email"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Contact.email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Contact::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.Contact)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1[json_name = "name"];
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Contact.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string url = 2[json_name = "url"];
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Contact.url");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_url(), target);
  }

  // string email = 3[json_name = "email"];
  if (this->email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Contact.email");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_email(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.Contact)
  return target;
}

size_t Contact::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.Contact)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1[json_name = "name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string url = 2[json_name = "url"];
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string email = 3[json_name = "email"];
  if (this->email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Contact::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Contact)
  GOOGLE_DCHECK_NE(&from, this);
  const Contact* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Contact>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.gateway.protoc_gen_openapiv2.options.Contact)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.gateway.protoc_gen_openapiv2.options.Contact)
    MergeFrom(*source);
  }
}

void Contact::MergeFrom(const Contact& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Contact)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
  if (from.email().size() > 0) {
    _internal_set_email(from._internal_email());
  }
}

void Contact::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Contact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Contact::CopyFrom(const Contact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Contact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Contact::IsInitialized() const {
  return true;
}

void Contact::InternalSwap(Contact* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  email_.Swap(&other->email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Contact::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void License::InitAsDefaultInstance() {
}
class License::_Internal {
 public:
};

License::License(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.License)
}
License::License(const License& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_url(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.License)
}

void License::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_License_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

License::~License() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.License)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void License::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void License::ArenaDtor(void* object) {
  License* _this = reinterpret_cast< License* >(object);
  (void)_this;
}
void License::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void License::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const License& License::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_License_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  return *internal_default_instance();
}


void License::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.License)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* License::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1[json_name = "name"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.License.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string url = 2[json_name = "url"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.License.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* License::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.License)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1[json_name = "name"];
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.License.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string url = 2[json_name = "url"];
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.License.url");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.License)
  return target;
}

size_t License::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.License)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1[json_name = "name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string url = 2[json_name = "url"];
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void License::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.License)
  GOOGLE_DCHECK_NE(&from, this);
  const License* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<License>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.gateway.protoc_gen_openapiv2.options.License)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.gateway.protoc_gen_openapiv2.options.License)
    MergeFrom(*source);
  }
}

void License::MergeFrom(const License& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.License)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
}

void License::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.License)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void License::CopyFrom(const License& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.License)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool License::IsInitialized() const {
  return true;
}

void License::InternalSwap(License* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata License::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ExternalDocumentation::InitAsDefaultInstance() {
}
class ExternalDocumentation::_Internal {
 public:
};

ExternalDocumentation::ExternalDocumentation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation)
}
ExternalDocumentation::ExternalDocumentation(const ExternalDocumentation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_url(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation)
}

void ExternalDocumentation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExternalDocumentation_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ExternalDocumentation::~ExternalDocumentation() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExternalDocumentation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ExternalDocumentation::ArenaDtor(void* object) {
  ExternalDocumentation* _this = reinterpret_cast< ExternalDocumentation* >(object);
  (void)_this;
}
void ExternalDocumentation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExternalDocumentation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExternalDocumentation& ExternalDocumentation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExternalDocumentation_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  return *internal_default_instance();
}


void ExternalDocumentation::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExternalDocumentation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string description = 1[json_name = "description"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string url = 2[json_name = "url"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExternalDocumentation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 1[json_name = "description"];
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation.description");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_description(), target);
  }

  // string url = 2[json_name = "url"];
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation.url");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation)
  return target;
}

size_t ExternalDocumentation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string description = 1[json_name = "description"];
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string url = 2[json_name = "url"];
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExternalDocumentation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation)
  GOOGLE_DCHECK_NE(&from, this);
  const ExternalDocumentation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExternalDocumentation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation)
    MergeFrom(*source);
  }
}

void ExternalDocumentation::MergeFrom(const ExternalDocumentation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
}

void ExternalDocumentation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternalDocumentation::CopyFrom(const ExternalDocumentation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternalDocumentation::IsInitialized() const {
  return true;
}

void ExternalDocumentation::InternalSwap(ExternalDocumentation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ExternalDocumentation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Schema::InitAsDefaultInstance() {
  ::grpc::gateway::protoc_gen_openapiv2::options::_Schema_default_instance_._instance.get_mutable()->json_schema_ = const_cast< ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema*>(
      ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema::internal_default_instance());
  ::grpc::gateway::protoc_gen_openapiv2::options::_Schema_default_instance_._instance.get_mutable()->external_docs_ = const_cast< ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation*>(
      ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation::internal_default_instance());
}
class Schema::_Internal {
 public:
  static const ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema& json_schema(const Schema* msg);
  static const ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation& external_docs(const Schema* msg);
};

const ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema&
Schema::_Internal::json_schema(const Schema* msg) {
  return *msg->json_schema_;
}
const ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation&
Schema::_Internal::external_docs(const Schema* msg) {
  return *msg->external_docs_;
}
Schema::Schema(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.Schema)
}
Schema::Schema(const Schema& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  discriminator_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_discriminator().empty()) {
    discriminator_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_discriminator(),
      GetArena());
  }
  example_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_example().empty()) {
    example_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_example(),
      GetArena());
  }
  if (from._internal_has_json_schema()) {
    json_schema_ = new ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema(*from.json_schema_);
  } else {
    json_schema_ = nullptr;
  }
  if (from._internal_has_external_docs()) {
    external_docs_ = new ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation(*from.external_docs_);
  } else {
    external_docs_ = nullptr;
  }
  read_only_ = from.read_only_;
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.Schema)
}

void Schema::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Schema_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  discriminator_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  example_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&json_schema_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&read_only_) -
      reinterpret_cast<char*>(&json_schema_)) + sizeof(read_only_));
}

Schema::~Schema() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.Schema)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Schema::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  discriminator_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  example_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete json_schema_;
  if (this != internal_default_instance()) delete external_docs_;
}

void Schema::ArenaDtor(void* object) {
  Schema* _this = reinterpret_cast< Schema* >(object);
  (void)_this;
}
void Schema::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Schema::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Schema& Schema::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Schema_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  return *internal_default_instance();
}


void Schema::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.Schema)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  discriminator_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  example_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && json_schema_ != nullptr) {
    delete json_schema_;
  }
  json_schema_ = nullptr;
  if (GetArena() == nullptr && external_docs_ != nullptr) {
    delete external_docs_;
  }
  external_docs_ = nullptr;
  read_only_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Schema::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc.gateway.protoc_gen_openapiv2.options.JSONSchema json_schema = 1[json_name = "jsonSchema"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_json_schema(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string discriminator = 2[json_name = "discriminator"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_discriminator();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Schema.discriminator"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool read_only = 3[json_name = "readOnly"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          read_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 5[json_name = "externalDocs"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_external_docs(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string example = 6[json_name = "example"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_example();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Schema.example"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Schema::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.Schema)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc.gateway.protoc_gen_openapiv2.options.JSONSchema json_schema = 1[json_name = "jsonSchema"];
  if (this->has_json_schema()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::json_schema(this), target, stream);
  }

  // string discriminator = 2[json_name = "discriminator"];
  if (this->discriminator().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_discriminator().data(), static_cast<int>(this->_internal_discriminator().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Schema.discriminator");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_discriminator(), target);
  }

  // bool read_only = 3[json_name = "readOnly"];
  if (this->read_only() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_read_only(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 5[json_name = "externalDocs"];
  if (this->has_external_docs()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::external_docs(this), target, stream);
  }

  // string example = 6[json_name = "example"];
  if (this->example().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_example().data(), static_cast<int>(this->_internal_example().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Schema.example");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_example(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.Schema)
  return target;
}

size_t Schema::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.Schema)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string discriminator = 2[json_name = "discriminator"];
  if (this->discriminator().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_discriminator());
  }

  // string example = 6[json_name = "example"];
  if (this->example().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_example());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.JSONSchema json_schema = 1[json_name = "jsonSchema"];
  if (this->has_json_schema()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *json_schema_);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 5[json_name = "externalDocs"];
  if (this->has_external_docs()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *external_docs_);
  }

  // bool read_only = 3[json_name = "readOnly"];
  if (this->read_only() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Schema::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Schema)
  GOOGLE_DCHECK_NE(&from, this);
  const Schema* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Schema>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.gateway.protoc_gen_openapiv2.options.Schema)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.gateway.protoc_gen_openapiv2.options.Schema)
    MergeFrom(*source);
  }
}

void Schema::MergeFrom(const Schema& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Schema)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.discriminator().size() > 0) {
    _internal_set_discriminator(from._internal_discriminator());
  }
  if (from.example().size() > 0) {
    _internal_set_example(from._internal_example());
  }
  if (from.has_json_schema()) {
    _internal_mutable_json_schema()->::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema::MergeFrom(from._internal_json_schema());
  }
  if (from.has_external_docs()) {
    _internal_mutable_external_docs()->::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation::MergeFrom(from._internal_external_docs());
  }
  if (from.read_only() != 0) {
    _internal_set_read_only(from._internal_read_only());
  }
}

void Schema::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Schema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Schema::CopyFrom(const Schema& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Schema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Schema::IsInitialized() const {
  return true;
}

void Schema::InternalSwap(Schema* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  discriminator_.Swap(&other->discriminator_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  example_.Swap(&other->example_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Schema, read_only_)
      + sizeof(Schema::read_only_)
      - PROTOBUF_FIELD_OFFSET(Schema, json_schema_)>(
          reinterpret_cast<char*>(&json_schema_),
          reinterpret_cast<char*>(&other->json_schema_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Schema::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void JSONSchema::InitAsDefaultInstance() {
}
class JSONSchema::_Internal {
 public:
};

JSONSchema::JSONSchema(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  required_(arena),
  array_(arena),
  type_(arena),
  enum__(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema)
}
JSONSchema::JSONSchema(const JSONSchema& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      required_(from.required_),
      array_(from.array_),
      type_(from.type_),
      enum__(from.enum__) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ref_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ref().empty()) {
    ref_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ref(),
      GetArena());
  }
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_title().empty()) {
    title_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_title(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  default__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_default_().empty()) {
    default__.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_default_(),
      GetArena());
  }
  example_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_example().empty()) {
    example_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_example(),
      GetArena());
  }
  pattern_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pattern().empty()) {
    pattern_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pattern(),
      GetArena());
  }
  format_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_format().empty()) {
    format_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_format(),
      GetArena());
  }
  ::memcpy(&multiple_of_, &from.multiple_of_,
    static_cast<size_t>(reinterpret_cast<char*>(&unique_items_) -
    reinterpret_cast<char*>(&multiple_of_)) + sizeof(unique_items_));
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema)
}

void JSONSchema::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_JSONSchema_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  ref_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  default__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  example_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pattern_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  format_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&multiple_of_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unique_items_) -
      reinterpret_cast<char*>(&multiple_of_)) + sizeof(unique_items_));
}

JSONSchema::~JSONSchema() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JSONSchema::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ref_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  default__.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  example_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pattern_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  format_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void JSONSchema::ArenaDtor(void* object) {
  JSONSchema* _this = reinterpret_cast< JSONSchema* >(object);
  (void)_this;
}
void JSONSchema::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JSONSchema::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JSONSchema& JSONSchema::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JSONSchema_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  return *internal_default_instance();
}


void JSONSchema::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  required_.Clear();
  array_.Clear();
  type_.Clear();
  enum__.Clear();
  ref_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  title_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  default__.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  example_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pattern_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  format_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&multiple_of_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unique_items_) -
      reinterpret_cast<char*>(&multiple_of_)) + sizeof(unique_items_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JSONSchema::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ref = 3[json_name = "ref"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_ref();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.ref"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string title = 5[json_name = "title"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_title();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.title"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 6[json_name = "description"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string default = 7[json_name = "default"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_default_();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.default"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool read_only = 8[json_name = "readOnly"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          read_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string example = 9[json_name = "example"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_example();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.example"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double multiple_of = 10[json_name = "multipleOf"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 81)) {
          multiple_of_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double maximum = 11[json_name = "maximum"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 89)) {
          maximum_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // bool exclusive_maximum = 12[json_name = "exclusiveMaximum"];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          exclusive_maximum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double minimum = 13[json_name = "minimum"];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 105)) {
          minimum_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // bool exclusive_minimum = 14[json_name = "exclusiveMinimum"];
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          exclusive_minimum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 max_length = 15[json_name = "maxLength"];
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          max_length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 min_length = 16[json_name = "minLength"];
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          min_length_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string pattern = 17[json_name = "pattern"];
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          auto str = _internal_mutable_pattern();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.pattern"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 max_items = 20[json_name = "maxItems"];
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          max_items_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 min_items = 21[json_name = "minItems"];
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          min_items_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool unique_items = 22[json_name = "uniqueItems"];
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          unique_items_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 max_properties = 24[json_name = "maxProperties"];
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          max_properties_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 min_properties = 25[json_name = "minProperties"];
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 200)) {
          min_properties_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string required = 26[json_name = "required"];
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_required();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.required"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<210>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string array = 34[json_name = "array"];
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_array();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.array"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<274>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.JSONSchemaSimpleTypes type = 35[json_name = "type"];
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_type(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_type(static_cast<::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema_JSONSchemaSimpleTypes>(val));
        } else goto handle_unusual;
        continue;
      // string format = 36[json_name = "format"];
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_format();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.format"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string enum = 46[json_name = "enum"];
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_enum_();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.enum"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<370>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JSONSchema::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ref = 3[json_name = "ref"];
  if (this->ref().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ref().data(), static_cast<int>(this->_internal_ref().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.ref");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_ref(), target);
  }

  // string title = 5[json_name = "title"];
  if (this->title().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.title");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_title(), target);
  }

  // string description = 6[json_name = "description"];
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.description");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_description(), target);
  }

  // string default = 7[json_name = "default"];
  if (this->default_().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_default_().data(), static_cast<int>(this->_internal_default_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.default");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_default_(), target);
  }

  // bool read_only = 8[json_name = "readOnly"];
  if (this->read_only() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_read_only(), target);
  }

  // string example = 9[json_name = "example"];
  if (this->example().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_example().data(), static_cast<int>(this->_internal_example().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.example");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_example(), target);
  }

  // double multiple_of = 10[json_name = "multipleOf"];
  if (!(this->multiple_of() <= 0 && this->multiple_of() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(10, this->_internal_multiple_of(), target);
  }

  // double maximum = 11[json_name = "maximum"];
  if (!(this->maximum() <= 0 && this->maximum() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(11, this->_internal_maximum(), target);
  }

  // bool exclusive_maximum = 12[json_name = "exclusiveMaximum"];
  if (this->exclusive_maximum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_exclusive_maximum(), target);
  }

  // double minimum = 13[json_name = "minimum"];
  if (!(this->minimum() <= 0 && this->minimum() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(13, this->_internal_minimum(), target);
  }

  // bool exclusive_minimum = 14[json_name = "exclusiveMinimum"];
  if (this->exclusive_minimum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(14, this->_internal_exclusive_minimum(), target);
  }

  // uint64 max_length = 15[json_name = "maxLength"];
  if (this->max_length() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(15, this->_internal_max_length(), target);
  }

  // uint64 min_length = 16[json_name = "minLength"];
  if (this->min_length() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(16, this->_internal_min_length(), target);
  }

  // string pattern = 17[json_name = "pattern"];
  if (this->pattern().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pattern().data(), static_cast<int>(this->_internal_pattern().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.pattern");
    target = stream->WriteStringMaybeAliased(
        17, this->_internal_pattern(), target);
  }

  // uint64 max_items = 20[json_name = "maxItems"];
  if (this->max_items() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(20, this->_internal_max_items(), target);
  }

  // uint64 min_items = 21[json_name = "minItems"];
  if (this->min_items() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(21, this->_internal_min_items(), target);
  }

  // bool unique_items = 22[json_name = "uniqueItems"];
  if (this->unique_items() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(22, this->_internal_unique_items(), target);
  }

  // uint64 max_properties = 24[json_name = "maxProperties"];
  if (this->max_properties() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(24, this->_internal_max_properties(), target);
  }

  // uint64 min_properties = 25[json_name = "minProperties"];
  if (this->min_properties() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(25, this->_internal_min_properties(), target);
  }

  // repeated string required = 26[json_name = "required"];
  for (int i = 0, n = this->_internal_required_size(); i < n; i++) {
    const auto& s = this->_internal_required(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.required");
    target = stream->WriteString(26, s, target);
  }

  // repeated string array = 34[json_name = "array"];
  for (int i = 0, n = this->_internal_array_size(); i < n; i++) {
    const auto& s = this->_internal_array(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.array");
    target = stream->WriteString(34, s, target);
  }

  // repeated .grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.JSONSchemaSimpleTypes type = 35[json_name = "type"];
  {
    int byte_size = _type_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          35, type_, byte_size, target);
    }
  }

  // string format = 36[json_name = "format"];
  if (this->format().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_format().data(), static_cast<int>(this->_internal_format().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.format");
    target = stream->WriteStringMaybeAliased(
        36, this->_internal_format(), target);
  }

  // repeated string enum = 46[json_name = "enum"];
  for (int i = 0, n = this->_internal_enum__size(); i < n; i++) {
    const auto& s = this->_internal_enum_(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.enum");
    target = stream->WriteString(46, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema)
  return target;
}

size_t JSONSchema::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string required = 26[json_name = "required"];
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(required_.size());
  for (int i = 0, n = required_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      required_.Get(i));
  }

  // repeated string array = 34[json_name = "array"];
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(array_.size());
  for (int i = 0, n = array_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      array_.Get(i));
  }

  // repeated .grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.JSONSchemaSimpleTypes type = 35[json_name = "type"];
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_type_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_type(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _type_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated string enum = 46[json_name = "enum"];
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(enum__.size());
  for (int i = 0, n = enum__.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      enum__.Get(i));
  }

  // string ref = 3[json_name = "ref"];
  if (this->ref().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ref());
  }

  // string title = 5[json_name = "title"];
  if (this->title().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // string description = 6[json_name = "description"];
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string default = 7[json_name = "default"];
  if (this->default_().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_default_());
  }

  // string example = 9[json_name = "example"];
  if (this->example().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_example());
  }

  // string pattern = 17[json_name = "pattern"];
  if (this->pattern().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pattern());
  }

  // string format = 36[json_name = "format"];
  if (this->format().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_format());
  }

  // double multiple_of = 10[json_name = "multipleOf"];
  if (!(this->multiple_of() <= 0 && this->multiple_of() >= 0)) {
    total_size += 1 + 8;
  }

  // double maximum = 11[json_name = "maximum"];
  if (!(this->maximum() <= 0 && this->maximum() >= 0)) {
    total_size += 1 + 8;
  }

  // double minimum = 13[json_name = "minimum"];
  if (!(this->minimum() <= 0 && this->minimum() >= 0)) {
    total_size += 1 + 8;
  }

  // uint64 max_length = 15[json_name = "maxLength"];
  if (this->max_length() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_max_length());
  }

  // uint64 min_length = 16[json_name = "minLength"];
  if (this->min_length() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_min_length());
  }

  // uint64 max_items = 20[json_name = "maxItems"];
  if (this->max_items() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_max_items());
  }

  // uint64 min_items = 21[json_name = "minItems"];
  if (this->min_items() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_min_items());
  }

  // uint64 max_properties = 24[json_name = "maxProperties"];
  if (this->max_properties() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_max_properties());
  }

  // uint64 min_properties = 25[json_name = "minProperties"];
  if (this->min_properties() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_min_properties());
  }

  // bool read_only = 8[json_name = "readOnly"];
  if (this->read_only() != 0) {
    total_size += 1 + 1;
  }

  // bool exclusive_maximum = 12[json_name = "exclusiveMaximum"];
  if (this->exclusive_maximum() != 0) {
    total_size += 1 + 1;
  }

  // bool exclusive_minimum = 14[json_name = "exclusiveMinimum"];
  if (this->exclusive_minimum() != 0) {
    total_size += 1 + 1;
  }

  // bool unique_items = 22[json_name = "uniqueItems"];
  if (this->unique_items() != 0) {
    total_size += 2 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JSONSchema::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema)
  GOOGLE_DCHECK_NE(&from, this);
  const JSONSchema* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JSONSchema>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema)
    MergeFrom(*source);
  }
}

void JSONSchema::MergeFrom(const JSONSchema& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  required_.MergeFrom(from.required_);
  array_.MergeFrom(from.array_);
  type_.MergeFrom(from.type_);
  enum__.MergeFrom(from.enum__);
  if (from.ref().size() > 0) {
    _internal_set_ref(from._internal_ref());
  }
  if (from.title().size() > 0) {
    _internal_set_title(from._internal_title());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.default_().size() > 0) {
    _internal_set_default_(from._internal_default_());
  }
  if (from.example().size() > 0) {
    _internal_set_example(from._internal_example());
  }
  if (from.pattern().size() > 0) {
    _internal_set_pattern(from._internal_pattern());
  }
  if (from.format().size() > 0) {
    _internal_set_format(from._internal_format());
  }
  if (!(from.multiple_of() <= 0 && from.multiple_of() >= 0)) {
    _internal_set_multiple_of(from._internal_multiple_of());
  }
  if (!(from.maximum() <= 0 && from.maximum() >= 0)) {
    _internal_set_maximum(from._internal_maximum());
  }
  if (!(from.minimum() <= 0 && from.minimum() >= 0)) {
    _internal_set_minimum(from._internal_minimum());
  }
  if (from.max_length() != 0) {
    _internal_set_max_length(from._internal_max_length());
  }
  if (from.min_length() != 0) {
    _internal_set_min_length(from._internal_min_length());
  }
  if (from.max_items() != 0) {
    _internal_set_max_items(from._internal_max_items());
  }
  if (from.min_items() != 0) {
    _internal_set_min_items(from._internal_min_items());
  }
  if (from.max_properties() != 0) {
    _internal_set_max_properties(from._internal_max_properties());
  }
  if (from.min_properties() != 0) {
    _internal_set_min_properties(from._internal_min_properties());
  }
  if (from.read_only() != 0) {
    _internal_set_read_only(from._internal_read_only());
  }
  if (from.exclusive_maximum() != 0) {
    _internal_set_exclusive_maximum(from._internal_exclusive_maximum());
  }
  if (from.exclusive_minimum() != 0) {
    _internal_set_exclusive_minimum(from._internal_exclusive_minimum());
  }
  if (from.unique_items() != 0) {
    _internal_set_unique_items(from._internal_unique_items());
  }
}

void JSONSchema::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JSONSchema::CopyFrom(const JSONSchema& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.JSONSchema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSONSchema::IsInitialized() const {
  return true;
}

void JSONSchema::InternalSwap(JSONSchema* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  required_.InternalSwap(&other->required_);
  array_.InternalSwap(&other->array_);
  type_.InternalSwap(&other->type_);
  enum__.InternalSwap(&other->enum__);
  ref_.Swap(&other->ref_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  title_.Swap(&other->title_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  default__.Swap(&other->default__, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  example_.Swap(&other->example_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pattern_.Swap(&other->pattern_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  format_.Swap(&other->format_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JSONSchema, unique_items_)
      + sizeof(JSONSchema::unique_items_)
      - PROTOBUF_FIELD_OFFSET(JSONSchema, multiple_of_)>(
          reinterpret_cast<char*>(&multiple_of_),
          reinterpret_cast<char*>(&other->multiple_of_));
}

::PROTOBUF_NAMESPACE_ID::Metadata JSONSchema::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Tag::InitAsDefaultInstance() {
  ::grpc::gateway::protoc_gen_openapiv2::options::_Tag_default_instance_._instance.get_mutable()->external_docs_ = const_cast< ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation*>(
      ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation::internal_default_instance());
}
class Tag::_Internal {
 public:
  static const ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation& external_docs(const Tag* msg);
};

const ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation&
Tag::_Internal::external_docs(const Tag* msg) {
  return *msg->external_docs_;
}
Tag::Tag(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.Tag)
}
Tag::Tag(const Tag& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  if (from._internal_has_external_docs()) {
    external_docs_ = new ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation(*from.external_docs_);
  } else {
    external_docs_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.Tag)
}

void Tag::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Tag_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  external_docs_ = nullptr;
}

Tag::~Tag() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.Tag)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Tag::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete external_docs_;
}

void Tag::ArenaDtor(void* object) {
  Tag* _this = reinterpret_cast< Tag* >(object);
  (void)_this;
}
void Tag::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Tag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Tag& Tag::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Tag_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  return *internal_default_instance();
}


void Tag::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.Tag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && external_docs_ != nullptr) {
    delete external_docs_;
  }
  external_docs_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Tag::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string description = 2[json_name = "description"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.Tag.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 3[json_name = "externalDocs"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_external_docs(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Tag::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.Tag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 2[json_name = "description"];
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.Tag.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 3[json_name = "externalDocs"];
  if (this->has_external_docs()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::external_docs(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.Tag)
  return target;
}

size_t Tag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.Tag)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string description = 2[json_name = "description"];
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation external_docs = 3[json_name = "externalDocs"];
  if (this->has_external_docs()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *external_docs_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Tag::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  const Tag* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Tag>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.gateway.protoc_gen_openapiv2.options.Tag)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.gateway.protoc_gen_openapiv2.options.Tag)
    MergeFrom(*source);
  }
}

void Tag::MergeFrom(const Tag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.has_external_docs()) {
    _internal_mutable_external_docs()->::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation::MergeFrom(from._internal_external_docs());
  }
}

void Tag::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tag::CopyFrom(const Tag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tag::IsInitialized() const {
  return true;
}

void Tag::InternalSwap(Tag* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(external_docs_, other->external_docs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Tag::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

SecurityDefinitions_SecurityEntry_DoNotUse::SecurityDefinitions_SecurityEntry_DoNotUse() {}
SecurityDefinitions_SecurityEntry_DoNotUse::SecurityDefinitions_SecurityEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SecurityDefinitions_SecurityEntry_DoNotUse::MergeFrom(const SecurityDefinitions_SecurityEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SecurityDefinitions_SecurityEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void SecurityDefinitions_SecurityEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void SecurityDefinitions::InitAsDefaultInstance() {
}
class SecurityDefinitions::_Internal {
 public:
};

SecurityDefinitions::SecurityDefinitions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  security_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions)
}
SecurityDefinitions::SecurityDefinitions(const SecurityDefinitions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  security_.MergeFrom(from.security_);
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions)
}

void SecurityDefinitions::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SecurityDefinitions_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
}

SecurityDefinitions::~SecurityDefinitions() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SecurityDefinitions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SecurityDefinitions::ArenaDtor(void* object) {
  SecurityDefinitions* _this = reinterpret_cast< SecurityDefinitions* >(object);
  (void)_this;
}
void SecurityDefinitions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SecurityDefinitions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SecurityDefinitions& SecurityDefinitions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SecurityDefinitions_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  return *internal_default_instance();
}


void SecurityDefinitions::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  security_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SecurityDefinitions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme> security = 1[json_name = "security"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&security_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SecurityDefinitions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme> security = 1[json_name = "security"];
  if (!this->_internal_security().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions.SecurityEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_security().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_security().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme >::const_iterator
          it = this->_internal_security().begin();
          it != this->_internal_security().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = SecurityDefinitions_SecurityEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme >::const_iterator
          it = this->_internal_security().begin();
          it != this->_internal_security().end(); ++it) {
        target = SecurityDefinitions_SecurityEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions)
  return target;
}

size_t SecurityDefinitions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme> security = 1[json_name = "security"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_security_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme >::const_iterator
      it = this->_internal_security().begin();
      it != this->_internal_security().end(); ++it) {
    total_size += SecurityDefinitions_SecurityEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SecurityDefinitions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions)
  GOOGLE_DCHECK_NE(&from, this);
  const SecurityDefinitions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SecurityDefinitions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions)
    MergeFrom(*source);
  }
}

void SecurityDefinitions::MergeFrom(const SecurityDefinitions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  security_.MergeFrom(from.security_);
}

void SecurityDefinitions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SecurityDefinitions::CopyFrom(const SecurityDefinitions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SecurityDefinitions::IsInitialized() const {
  return true;
}

void SecurityDefinitions::InternalSwap(SecurityDefinitions* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  security_.Swap(&other->security_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SecurityDefinitions::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

SecurityScheme_ExtensionsEntry_DoNotUse::SecurityScheme_ExtensionsEntry_DoNotUse() {}
SecurityScheme_ExtensionsEntry_DoNotUse::SecurityScheme_ExtensionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SecurityScheme_ExtensionsEntry_DoNotUse::MergeFrom(const SecurityScheme_ExtensionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SecurityScheme_ExtensionsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void SecurityScheme_ExtensionsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void SecurityScheme::InitAsDefaultInstance() {
  ::grpc::gateway::protoc_gen_openapiv2::options::_SecurityScheme_default_instance_._instance.get_mutable()->scopes_ = const_cast< ::grpc::gateway::protoc_gen_openapiv2::options::Scopes*>(
      ::grpc::gateway::protoc_gen_openapiv2::options::Scopes::internal_default_instance());
}
class SecurityScheme::_Internal {
 public:
  static const ::grpc::gateway::protoc_gen_openapiv2::options::Scopes& scopes(const SecurityScheme* msg);
};

const ::grpc::gateway::protoc_gen_openapiv2::options::Scopes&
SecurityScheme::_Internal::scopes(const SecurityScheme* msg) {
  return *msg->scopes_;
}
void SecurityScheme::clear_extensions() {
  extensions_.Clear();
}
SecurityScheme::SecurityScheme(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  extensions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme)
}
SecurityScheme::SecurityScheme(const SecurityScheme& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  extensions_.MergeFrom(from.extensions_);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  authorization_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_authorization_url().empty()) {
    authorization_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_authorization_url(),
      GetArena());
  }
  token_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token_url().empty()) {
    token_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token_url(),
      GetArena());
  }
  if (from._internal_has_scopes()) {
    scopes_ = new ::grpc::gateway::protoc_gen_openapiv2::options::Scopes(*from.scopes_);
  } else {
    scopes_ = nullptr;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&flow_) -
    reinterpret_cast<char*>(&type_)) + sizeof(flow_));
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme)
}

void SecurityScheme::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SecurityScheme_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  authorization_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&scopes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flow_) -
      reinterpret_cast<char*>(&scopes_)) + sizeof(flow_));
}

SecurityScheme::~SecurityScheme() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SecurityScheme::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  authorization_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete scopes_;
}

void SecurityScheme::ArenaDtor(void* object) {
  SecurityScheme* _this = reinterpret_cast< SecurityScheme* >(object);
  (void)_this;
}
void SecurityScheme::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SecurityScheme::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SecurityScheme& SecurityScheme::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SecurityScheme_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  return *internal_default_instance();
}


void SecurityScheme::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extensions_.Clear();
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  authorization_url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  token_url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && scopes_ != nullptr) {
    delete scopes_;
  }
  scopes_ = nullptr;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flow_) -
      reinterpret_cast<char*>(&type_)) + sizeof(flow_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SecurityScheme::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.Type type = 1[json_name = "type"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_Type>(val));
        } else goto handle_unusual;
        continue;
      // string description = 2[json_name = "description"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3[json_name = "name"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.In in = 4[json_name = "in"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_in(static_cast<::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_In>(val));
        } else goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.Flow flow = 5[json_name = "flow"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_flow(static_cast<::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_Flow>(val));
        } else goto handle_unusual;
        continue;
      // string authorization_url = 6[json_name = "authorizationUrl"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_authorization_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.authorization_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string token_url = 7[json_name = "tokenUrl"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_token_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.token_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc.gateway.protoc_gen_openapiv2.options.Scopes scopes = 8[json_name = "scopes"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_scopes(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .google.protobuf.Value> extensions = 9[json_name = "extensions"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&extensions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SecurityScheme::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.Type type = 1[json_name = "type"];
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // string description = 2[json_name = "description"];
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // string name = 3[json_name = "name"];
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.In in = 4[json_name = "in"];
  if (this->in() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_in(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.Flow flow = 5[json_name = "flow"];
  if (this->flow() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_flow(), target);
  }

  // string authorization_url = 6[json_name = "authorizationUrl"];
  if (this->authorization_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_authorization_url().data(), static_cast<int>(this->_internal_authorization_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.authorization_url");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_authorization_url(), target);
  }

  // string token_url = 7[json_name = "tokenUrl"];
  if (this->token_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token_url().data(), static_cast<int>(this->_internal_token_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.token_url");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_token_url(), target);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Scopes scopes = 8[json_name = "scopes"];
  if (this->has_scopes()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::scopes(this), target, stream);
  }

  // map<string, .google.protobuf.Value> extensions = 9[json_name = "extensions"];
  if (!this->_internal_extensions().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.ExtensionsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_extensions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_extensions().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::const_iterator
          it = this->_internal_extensions().begin();
          it != this->_internal_extensions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = SecurityScheme_ExtensionsEntry_DoNotUse::Funcs::InternalSerialize(9, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::const_iterator
          it = this->_internal_extensions().begin();
          it != this->_internal_extensions().end(); ++it) {
        target = SecurityScheme_ExtensionsEntry_DoNotUse::Funcs::InternalSerialize(9, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme)
  return target;
}

size_t SecurityScheme::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .google.protobuf.Value> extensions = 9[json_name = "extensions"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_extensions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, PROTOBUF_NAMESPACE_ID::Value >::const_iterator
      it = this->_internal_extensions().begin();
      it != this->_internal_extensions().end(); ++it) {
    total_size += SecurityScheme_ExtensionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string description = 2[json_name = "description"];
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string name = 3[json_name = "name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string authorization_url = 6[json_name = "authorizationUrl"];
  if (this->authorization_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_authorization_url());
  }

  // string token_url = 7[json_name = "tokenUrl"];
  if (this->token_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token_url());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.Scopes scopes = 8[json_name = "scopes"];
  if (this->has_scopes()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *scopes_);
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.Type type = 1[json_name = "type"];
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.In in = 4[json_name = "in"];
  if (this->in() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_in());
  }

  // .grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.Flow flow = 5[json_name = "flow"];
  if (this->flow() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_flow());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SecurityScheme::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme)
  GOOGLE_DCHECK_NE(&from, this);
  const SecurityScheme* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SecurityScheme>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme)
    MergeFrom(*source);
  }
}

void SecurityScheme::MergeFrom(const SecurityScheme& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extensions_.MergeFrom(from.extensions_);
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.authorization_url().size() > 0) {
    _internal_set_authorization_url(from._internal_authorization_url());
  }
  if (from.token_url().size() > 0) {
    _internal_set_token_url(from._internal_token_url());
  }
  if (from.has_scopes()) {
    _internal_mutable_scopes()->::grpc::gateway::protoc_gen_openapiv2::options::Scopes::MergeFrom(from._internal_scopes());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.in() != 0) {
    _internal_set_in(from._internal_in());
  }
  if (from.flow() != 0) {
    _internal_set_flow(from._internal_flow());
  }
}

void SecurityScheme::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SecurityScheme::CopyFrom(const SecurityScheme& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SecurityScheme::IsInitialized() const {
  return true;
}

void SecurityScheme::InternalSwap(SecurityScheme* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  extensions_.Swap(&other->extensions_);
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  authorization_url_.Swap(&other->authorization_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  token_url_.Swap(&other->token_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SecurityScheme, flow_)
      + sizeof(SecurityScheme::flow_)
      - PROTOBUF_FIELD_OFFSET(SecurityScheme, scopes_)>(
          reinterpret_cast<char*>(&scopes_),
          reinterpret_cast<char*>(&other->scopes_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SecurityScheme::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SecurityRequirement_SecurityRequirementValue::InitAsDefaultInstance() {
}
class SecurityRequirement_SecurityRequirementValue::_Internal {
 public:
};

SecurityRequirement_SecurityRequirementValue::SecurityRequirement_SecurityRequirementValue(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  scope_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue)
}
SecurityRequirement_SecurityRequirementValue::SecurityRequirement_SecurityRequirementValue(const SecurityRequirement_SecurityRequirementValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      scope_(from.scope_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue)
}

void SecurityRequirement_SecurityRequirementValue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SecurityRequirement_SecurityRequirementValue_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
}

SecurityRequirement_SecurityRequirementValue::~SecurityRequirement_SecurityRequirementValue() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SecurityRequirement_SecurityRequirementValue::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SecurityRequirement_SecurityRequirementValue::ArenaDtor(void* object) {
  SecurityRequirement_SecurityRequirementValue* _this = reinterpret_cast< SecurityRequirement_SecurityRequirementValue* >(object);
  (void)_this;
}
void SecurityRequirement_SecurityRequirementValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SecurityRequirement_SecurityRequirementValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SecurityRequirement_SecurityRequirementValue& SecurityRequirement_SecurityRequirementValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SecurityRequirement_SecurityRequirementValue_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  return *internal_default_instance();
}


void SecurityRequirement_SecurityRequirementValue::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scope_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SecurityRequirement_SecurityRequirementValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string scope = 1[json_name = "scope"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_scope();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue.scope"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SecurityRequirement_SecurityRequirementValue::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string scope = 1[json_name = "scope"];
  for (int i = 0, n = this->_internal_scope_size(); i < n; i++) {
    const auto& s = this->_internal_scope(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue.scope");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue)
  return target;
}

size_t SecurityRequirement_SecurityRequirementValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string scope = 1[json_name = "scope"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(scope_.size());
  for (int i = 0, n = scope_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      scope_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SecurityRequirement_SecurityRequirementValue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue)
  GOOGLE_DCHECK_NE(&from, this);
  const SecurityRequirement_SecurityRequirementValue* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SecurityRequirement_SecurityRequirementValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue)
    MergeFrom(*source);
  }
}

void SecurityRequirement_SecurityRequirementValue::MergeFrom(const SecurityRequirement_SecurityRequirementValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scope_.MergeFrom(from.scope_);
}

void SecurityRequirement_SecurityRequirementValue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SecurityRequirement_SecurityRequirementValue::CopyFrom(const SecurityRequirement_SecurityRequirementValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SecurityRequirement_SecurityRequirementValue::IsInitialized() const {
  return true;
}

void SecurityRequirement_SecurityRequirementValue::InternalSwap(SecurityRequirement_SecurityRequirementValue* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  scope_.InternalSwap(&other->scope_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SecurityRequirement_SecurityRequirementValue::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

SecurityRequirement_SecurityRequirementEntry_DoNotUse::SecurityRequirement_SecurityRequirementEntry_DoNotUse() {}
SecurityRequirement_SecurityRequirementEntry_DoNotUse::SecurityRequirement_SecurityRequirementEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SecurityRequirement_SecurityRequirementEntry_DoNotUse::MergeFrom(const SecurityRequirement_SecurityRequirementEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SecurityRequirement_SecurityRequirementEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void SecurityRequirement_SecurityRequirementEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void SecurityRequirement::InitAsDefaultInstance() {
}
class SecurityRequirement::_Internal {
 public:
};

SecurityRequirement::SecurityRequirement(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  security_requirement_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement)
}
SecurityRequirement::SecurityRequirement(const SecurityRequirement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  security_requirement_.MergeFrom(from.security_requirement_);
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement)
}

void SecurityRequirement::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SecurityRequirement_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
}

SecurityRequirement::~SecurityRequirement() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SecurityRequirement::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SecurityRequirement::ArenaDtor(void* object) {
  SecurityRequirement* _this = reinterpret_cast< SecurityRequirement* >(object);
  (void)_this;
}
void SecurityRequirement::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SecurityRequirement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SecurityRequirement& SecurityRequirement::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SecurityRequirement_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  return *internal_default_instance();
}


void SecurityRequirement::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  security_requirement_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SecurityRequirement::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, .grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue> security_requirement = 1[json_name = "securityRequirement"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&security_requirement_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SecurityRequirement::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue> security_requirement = 1[json_name = "securityRequirement"];
  if (!this->_internal_security_requirement().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_security_requirement().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_security_requirement().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue >::const_iterator
          it = this->_internal_security_requirement().begin();
          it != this->_internal_security_requirement().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = SecurityRequirement_SecurityRequirementEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue >::const_iterator
          it = this->_internal_security_requirement().begin();
          it != this->_internal_security_requirement().end(); ++it) {
        target = SecurityRequirement_SecurityRequirementEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement)
  return target;
}

size_t SecurityRequirement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue> security_requirement = 1[json_name = "securityRequirement"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_security_requirement_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue >::const_iterator
      it = this->_internal_security_requirement().begin();
      it != this->_internal_security_requirement().end(); ++it) {
    total_size += SecurityRequirement_SecurityRequirementEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SecurityRequirement::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement)
  GOOGLE_DCHECK_NE(&from, this);
  const SecurityRequirement* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SecurityRequirement>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement)
    MergeFrom(*source);
  }
}

void SecurityRequirement::MergeFrom(const SecurityRequirement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  security_requirement_.MergeFrom(from.security_requirement_);
}

void SecurityRequirement::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SecurityRequirement::CopyFrom(const SecurityRequirement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SecurityRequirement::IsInitialized() const {
  return true;
}

void SecurityRequirement::InternalSwap(SecurityRequirement* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  security_requirement_.Swap(&other->security_requirement_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SecurityRequirement::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

Scopes_ScopeEntry_DoNotUse::Scopes_ScopeEntry_DoNotUse() {}
Scopes_ScopeEntry_DoNotUse::Scopes_ScopeEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Scopes_ScopeEntry_DoNotUse::MergeFrom(const Scopes_ScopeEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Scopes_ScopeEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void Scopes_ScopeEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void Scopes::InitAsDefaultInstance() {
}
class Scopes::_Internal {
 public:
};

Scopes::Scopes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  scope_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.gateway.protoc_gen_openapiv2.options.Scopes)
}
Scopes::Scopes(const Scopes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  scope_.MergeFrom(from.scope_);
  // @@protoc_insertion_point(copy_constructor:grpc.gateway.protoc_gen_openapiv2.options.Scopes)
}

void Scopes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Scopes_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
}

Scopes::~Scopes() {
  // @@protoc_insertion_point(destructor:grpc.gateway.protoc_gen_openapiv2.options.Scopes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Scopes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Scopes::ArenaDtor(void* object) {
  Scopes* _this = reinterpret_cast< Scopes* >(object);
  (void)_this;
}
void Scopes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Scopes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Scopes& Scopes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Scopes_protoc_2dgen_2dopenapiv2_2foptions_2fopenapiv2_2eproto.base);
  return *internal_default_instance();
}


void Scopes::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.gateway.protoc_gen_openapiv2.options.Scopes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scope_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Scopes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, string> scope = 1[json_name = "scope"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&scope_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Scopes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.gateway.protoc_gen_openapiv2.options.Scopes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> scope = 1[json_name = "scope"];
  if (!this->_internal_scope().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.Scopes.ScopeEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc.gateway.protoc_gen_openapiv2.options.Scopes.ScopeEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_scope().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_scope().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_scope().begin();
          it != this->_internal_scope().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Scopes_ScopeEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_scope().begin();
          it != this->_internal_scope().end(); ++it) {
        target = Scopes_ScopeEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.gateway.protoc_gen_openapiv2.options.Scopes)
  return target;
}

size_t Scopes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc.gateway.protoc_gen_openapiv2.options.Scopes)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> scope = 1[json_name = "scope"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_scope_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_scope().begin();
      it != this->_internal_scope().end(); ++it) {
    total_size += Scopes_ScopeEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Scopes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Scopes)
  GOOGLE_DCHECK_NE(&from, this);
  const Scopes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Scopes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc.gateway.protoc_gen_openapiv2.options.Scopes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc.gateway.protoc_gen_openapiv2.options.Scopes)
    MergeFrom(*source);
  }
}

void Scopes::MergeFrom(const Scopes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc.gateway.protoc_gen_openapiv2.options.Scopes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scope_.MergeFrom(from.scope_);
}

void Scopes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Scopes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Scopes::CopyFrom(const Scopes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.gateway.protoc_gen_openapiv2.options.Scopes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scopes::IsInitialized() const {
  return true;
}

void Scopes::InternalSwap(Scopes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  scope_.Swap(&other->scope_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Scopes::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace options
}  // namespace protoc_gen_openapiv2
}  // namespace gateway
}  // namespace grpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ResponsesEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ResponsesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ResponsesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ExtensionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ExtensionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Swagger_ExtensionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Swagger* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Swagger >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Swagger >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Operation_ResponsesEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Operation_ResponsesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Operation_ResponsesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Operation_ExtensionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Operation_ExtensionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Operation_ExtensionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Operation* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Operation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Operation >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Header* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Header >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Header >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Response_HeadersEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Response_HeadersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Response_HeadersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Response_ExamplesEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Response_ExamplesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Response_ExamplesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Response_ExtensionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Response_ExtensionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Response_ExtensionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Response* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Info_ExtensionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Info_ExtensionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Info_ExtensionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Info* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Info >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Info >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Contact* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Contact >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Contact >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::License* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::License >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::License >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::ExternalDocumentation >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Schema* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Schema >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Schema >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::JSONSchema >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Tag* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Tag >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Tag >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions_SecurityEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions_SecurityEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions_SecurityEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityDefinitions >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_ExtensionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_ExtensionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme_ExtensionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityScheme >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementValue >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement_SecurityRequirementEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::SecurityRequirement >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Scopes_ScopeEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Scopes_ScopeEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Scopes_ScopeEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc::gateway::protoc_gen_openapiv2::options::Scopes* Arena::CreateMaybeMessage< ::grpc::gateway::protoc_gen_openapiv2::options::Scopes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc::gateway::protoc_gen_openapiv2::options::Scopes >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
