// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/synthetics/v202309/synthetics.proto
// Protobuf C++ Version: 5.29.3

#ifndef kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto_2epb_2eh
#define kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "kentik/core/v202303/annotations.pb.h"
#include "kentik/core/v202303/user_info.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
namespace kentik {
namespace synthetics {
namespace v202309 {
class ActivationSettings;
struct ActivationSettingsDefaultTypeInternal;
extern ActivationSettingsDefaultTypeInternal _ActivationSettings_default_instance_;
class Agent;
struct AgentDefaultTypeInternal;
extern AgentDefaultTypeInternal _Agent_default_instance_;
class AgentAlert;
struct AgentAlertDefaultTypeInternal;
extern AgentAlertDefaultTypeInternal _AgentAlert_default_instance_;
class AgentMetadata;
struct AgentMetadataDefaultTypeInternal;
extern AgentMetadataDefaultTypeInternal _AgentMetadata_default_instance_;
class AgentMetadata_IpValue;
struct AgentMetadata_IpValueDefaultTypeInternal;
extern AgentMetadata_IpValueDefaultTypeInternal _AgentMetadata_IpValue_default_instance_;
class AgentResults;
struct AgentResultsDefaultTypeInternal;
extern AgentResultsDefaultTypeInternal _AgentResults_default_instance_;
class AgentTest;
struct AgentTestDefaultTypeInternal;
extern AgentTestDefaultTypeInternal _AgentTest_default_instance_;
class AlertingSettings;
struct AlertingSettingsDefaultTypeInternal;
extern AlertingSettingsDefaultTypeInternal _AlertingSettings_default_instance_;
class CreateAgentAlertRequest;
struct CreateAgentAlertRequestDefaultTypeInternal;
extern CreateAgentAlertRequestDefaultTypeInternal _CreateAgentAlertRequest_default_instance_;
class CreateAgentAlertResponse;
struct CreateAgentAlertResponseDefaultTypeInternal;
extern CreateAgentAlertResponseDefaultTypeInternal _CreateAgentAlertResponse_default_instance_;
class CreateTestRequest;
struct CreateTestRequestDefaultTypeInternal;
extern CreateTestRequestDefaultTypeInternal _CreateTestRequest_default_instance_;
class CreateTestResponse;
struct CreateTestResponseDefaultTypeInternal;
extern CreateTestResponseDefaultTypeInternal _CreateTestResponse_default_instance_;
class DNSResponseData;
struct DNSResponseDataDefaultTypeInternal;
extern DNSResponseDataDefaultTypeInternal _DNSResponseData_default_instance_;
class DNSResults;
struct DNSResultsDefaultTypeInternal;
extern DNSResultsDefaultTypeInternal _DNSResults_default_instance_;
class DeleteAgentAlertRequest;
struct DeleteAgentAlertRequestDefaultTypeInternal;
extern DeleteAgentAlertRequestDefaultTypeInternal _DeleteAgentAlertRequest_default_instance_;
class DeleteAgentAlertResponse;
struct DeleteAgentAlertResponseDefaultTypeInternal;
extern DeleteAgentAlertResponseDefaultTypeInternal _DeleteAgentAlertResponse_default_instance_;
class DeleteAgentRequest;
struct DeleteAgentRequestDefaultTypeInternal;
extern DeleteAgentRequestDefaultTypeInternal _DeleteAgentRequest_default_instance_;
class DeleteAgentResponse;
struct DeleteAgentResponseDefaultTypeInternal;
extern DeleteAgentResponseDefaultTypeInternal _DeleteAgentResponse_default_instance_;
class DeleteTestRequest;
struct DeleteTestRequestDefaultTypeInternal;
extern DeleteTestRequestDefaultTypeInternal _DeleteTestRequest_default_instance_;
class DeleteTestResponse;
struct DeleteTestResponseDefaultTypeInternal;
extern DeleteTestResponseDefaultTypeInternal _DeleteTestResponse_default_instance_;
class DisabledMetrics;
struct DisabledMetricsDefaultTypeInternal;
extern DisabledMetricsDefaultTypeInternal _DisabledMetrics_default_instance_;
class DnsTest;
struct DnsTestDefaultTypeInternal;
extern DnsTestDefaultTypeInternal _DnsTest_default_instance_;
class FlowTest;
struct FlowTestDefaultTypeInternal;
extern FlowTestDefaultTypeInternal _FlowTest_default_instance_;
class GetAgentAlertRequest;
struct GetAgentAlertRequestDefaultTypeInternal;
extern GetAgentAlertRequestDefaultTypeInternal _GetAgentAlertRequest_default_instance_;
class GetAgentAlertResponse;
struct GetAgentAlertResponseDefaultTypeInternal;
extern GetAgentAlertResponseDefaultTypeInternal _GetAgentAlertResponse_default_instance_;
class GetAgentRequest;
struct GetAgentRequestDefaultTypeInternal;
extern GetAgentRequestDefaultTypeInternal _GetAgentRequest_default_instance_;
class GetAgentResponse;
struct GetAgentResponseDefaultTypeInternal;
extern GetAgentResponseDefaultTypeInternal _GetAgentResponse_default_instance_;
class GetResultsForTestsRequest;
struct GetResultsForTestsRequestDefaultTypeInternal;
extern GetResultsForTestsRequestDefaultTypeInternal _GetResultsForTestsRequest_default_instance_;
class GetResultsForTestsResponse;
struct GetResultsForTestsResponseDefaultTypeInternal;
extern GetResultsForTestsResponseDefaultTypeInternal _GetResultsForTestsResponse_default_instance_;
class GetTestRequest;
struct GetTestRequestDefaultTypeInternal;
extern GetTestRequestDefaultTypeInternal _GetTestRequest_default_instance_;
class GetTestResponse;
struct GetTestResponseDefaultTypeInternal;
extern GetTestResponseDefaultTypeInternal _GetTestResponse_default_instance_;
class GetTraceForTestRequest;
struct GetTraceForTestRequestDefaultTypeInternal;
extern GetTraceForTestRequestDefaultTypeInternal _GetTraceForTestRequest_default_instance_;
class GetTraceForTestResponse;
struct GetTraceForTestResponseDefaultTypeInternal;
extern GetTraceForTestResponseDefaultTypeInternal _GetTraceForTestResponse_default_instance_;
class GetTraceForTestResponse_NodesEntry_DoNotUse;
struct GetTraceForTestResponse_NodesEntry_DoNotUseDefaultTypeInternal;
extern GetTraceForTestResponse_NodesEntry_DoNotUseDefaultTypeInternal _GetTraceForTestResponse_NodesEntry_DoNotUse_default_instance_;
class HTTPResponseData;
struct HTTPResponseDataDefaultTypeInternal;
extern HTTPResponseDataDefaultTypeInternal _HTTPResponseData_default_instance_;
class HTTPResults;
struct HTTPResultsDefaultTypeInternal;
extern HTTPResultsDefaultTypeInternal _HTTPResults_default_instance_;
class HealthSettings;
struct HealthSettingsDefaultTypeInternal;
extern HealthSettingsDefaultTypeInternal _HealthSettings_default_instance_;
class HostnameTest;
struct HostnameTestDefaultTypeInternal;
extern HostnameTestDefaultTypeInternal _HostnameTest_default_instance_;
class IpTest;
struct IpTestDefaultTypeInternal;
extern IpTestDefaultTypeInternal _IpTest_default_instance_;
class ListAgentAlertsRequest;
struct ListAgentAlertsRequestDefaultTypeInternal;
extern ListAgentAlertsRequestDefaultTypeInternal _ListAgentAlertsRequest_default_instance_;
class ListAgentAlertsResponse;
struct ListAgentAlertsResponseDefaultTypeInternal;
extern ListAgentAlertsResponseDefaultTypeInternal _ListAgentAlertsResponse_default_instance_;
class ListAgentsRequest;
struct ListAgentsRequestDefaultTypeInternal;
extern ListAgentsRequestDefaultTypeInternal _ListAgentsRequest_default_instance_;
class ListAgentsResponse;
struct ListAgentsResponseDefaultTypeInternal;
extern ListAgentsResponseDefaultTypeInternal _ListAgentsResponse_default_instance_;
class ListTestsRequest;
struct ListTestsRequestDefaultTypeInternal;
extern ListTestsRequestDefaultTypeInternal _ListTestsRequest_default_instance_;
class ListTestsResponse;
struct ListTestsResponseDefaultTypeInternal;
extern ListTestsResponseDefaultTypeInternal _ListTestsResponse_default_instance_;
class Location;
struct LocationDefaultTypeInternal;
extern LocationDefaultTypeInternal _Location_default_instance_;
class MetricData;
struct MetricDataDefaultTypeInternal;
extern MetricDataDefaultTypeInternal _MetricData_default_instance_;
class NetNode;
struct NetNodeDefaultTypeInternal;
extern NetNodeDefaultTypeInternal _NetNode_default_instance_;
class NetworkMeshTest;
struct NetworkMeshTestDefaultTypeInternal;
extern NetworkMeshTestDefaultTypeInternal _NetworkMeshTest_default_instance_;
class PacketLossData;
struct PacketLossDataDefaultTypeInternal;
extern PacketLossDataDefaultTypeInternal _PacketLossData_default_instance_;
class PageLoadTest;
struct PageLoadTestDefaultTypeInternal;
extern PageLoadTestDefaultTypeInternal _PageLoadTest_default_instance_;
class PageLoadTest_CssSelectorsEntry_DoNotUse;
struct PageLoadTest_CssSelectorsEntry_DoNotUseDefaultTypeInternal;
extern PageLoadTest_CssSelectorsEntry_DoNotUseDefaultTypeInternal _PageLoadTest_CssSelectorsEntry_DoNotUse_default_instance_;
class PageLoadTest_HeadersEntry_DoNotUse;
struct PageLoadTest_HeadersEntry_DoNotUseDefaultTypeInternal;
extern PageLoadTest_HeadersEntry_DoNotUseDefaultTypeInternal _PageLoadTest_HeadersEntry_DoNotUse_default_instance_;
class Path;
struct PathDefaultTypeInternal;
extern PathDefaultTypeInternal _Path_default_instance_;
class PathTrace;
struct PathTraceDefaultTypeInternal;
extern PathTraceDefaultTypeInternal _PathTrace_default_instance_;
class PingResults;
struct PingResultsDefaultTypeInternal;
extern PingResultsDefaultTypeInternal _PingResults_default_instance_;
class ScheduleSettings;
struct ScheduleSettingsDefaultTypeInternal;
extern ScheduleSettingsDefaultTypeInternal _ScheduleSettings_default_instance_;
class SetTestStatusRequest;
struct SetTestStatusRequestDefaultTypeInternal;
extern SetTestStatusRequestDefaultTypeInternal _SetTestStatusRequest_default_instance_;
class SetTestStatusResponse;
struct SetTestStatusResponseDefaultTypeInternal;
extern SetTestStatusResponseDefaultTypeInternal _SetTestStatusResponse_default_instance_;
class Stats;
struct StatsDefaultTypeInternal;
extern StatsDefaultTypeInternal _Stats_default_instance_;
class TaskResults;
struct TaskResultsDefaultTypeInternal;
extern TaskResultsDefaultTypeInternal _TaskResults_default_instance_;
class Test;
struct TestDefaultTypeInternal;
extern TestDefaultTypeInternal _Test_default_instance_;
class TestPingSettings;
struct TestPingSettingsDefaultTypeInternal;
extern TestPingSettingsDefaultTypeInternal _TestPingSettings_default_instance_;
class TestResults;
struct TestResultsDefaultTypeInternal;
extern TestResultsDefaultTypeInternal _TestResults_default_instance_;
class TestSettings;
struct TestSettingsDefaultTypeInternal;
extern TestSettingsDefaultTypeInternal _TestSettings_default_instance_;
class TestThroughputSettings;
struct TestThroughputSettingsDefaultTypeInternal;
extern TestThroughputSettingsDefaultTypeInternal _TestThroughputSettings_default_instance_;
class TestTraceSettings;
struct TestTraceSettingsDefaultTypeInternal;
extern TestTraceSettingsDefaultTypeInternal _TestTraceSettings_default_instance_;
class TraceHop;
struct TraceHopDefaultTypeInternal;
extern TraceHopDefaultTypeInternal _TraceHop_default_instance_;
class UpdateAgentAlertRequest;
struct UpdateAgentAlertRequestDefaultTypeInternal;
extern UpdateAgentAlertRequestDefaultTypeInternal _UpdateAgentAlertRequest_default_instance_;
class UpdateAgentAlertResponse;
struct UpdateAgentAlertResponseDefaultTypeInternal;
extern UpdateAgentAlertResponseDefaultTypeInternal _UpdateAgentAlertResponse_default_instance_;
class UpdateAgentRequest;
struct UpdateAgentRequestDefaultTypeInternal;
extern UpdateAgentRequestDefaultTypeInternal _UpdateAgentRequest_default_instance_;
class UpdateAgentResponse;
struct UpdateAgentResponseDefaultTypeInternal;
extern UpdateAgentResponseDefaultTypeInternal _UpdateAgentResponse_default_instance_;
class UpdateTestRequest;
struct UpdateTestRequestDefaultTypeInternal;
extern UpdateTestRequestDefaultTypeInternal _UpdateTestRequest_default_instance_;
class UpdateTestResponse;
struct UpdateTestResponseDefaultTypeInternal;
extern UpdateTestResponseDefaultTypeInternal _UpdateTestResponse_default_instance_;
class UrlTest;
struct UrlTestDefaultTypeInternal;
extern UrlTestDefaultTypeInternal _UrlTest_default_instance_;
class UrlTest_HeadersEntry_DoNotUse;
struct UrlTest_HeadersEntry_DoNotUseDefaultTypeInternal;
extern UrlTest_HeadersEntry_DoNotUseDefaultTypeInternal _UrlTest_HeadersEntry_DoNotUse_default_instance_;
}  // namespace v202309
}  // namespace synthetics
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kentik {
namespace synthetics {
namespace v202309 {
enum ImplementType : int {
  IMPLEMENT_TYPE_UNSPECIFIED = 0,
  IMPLEMENT_TYPE_RUST = 1,
  IMPLEMENT_TYPE_NODE = 2,
  IMPLEMENT_TYPE_NETWORK = 3,
  ImplementType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ImplementType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ImplementType_IsValid(int value);
extern const uint32_t ImplementType_internal_data_[];
constexpr ImplementType ImplementType_MIN = static_cast<ImplementType>(0);
constexpr ImplementType ImplementType_MAX = static_cast<ImplementType>(3);
constexpr int ImplementType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
ImplementType_descriptor();
template <typename T>
const std::string& ImplementType_Name(T value) {
  static_assert(std::is_same<T, ImplementType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ImplementType_Name().");
  return ImplementType_Name(static_cast<ImplementType>(value));
}
template <>
inline const std::string& ImplementType_Name(ImplementType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ImplementType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool ImplementType_Parse(absl::string_view name, ImplementType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ImplementType>(
      ImplementType_descriptor(), name, value);
}
enum IPFamily : int {
  IP_FAMILY_UNSPECIFIED = 0,
  IP_FAMILY_V4 = 1,
  IP_FAMILY_V6 = 2,
  IP_FAMILY_DUAL = 3,
  IPFamily_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  IPFamily_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool IPFamily_IsValid(int value);
extern const uint32_t IPFamily_internal_data_[];
constexpr IPFamily IPFamily_MIN = static_cast<IPFamily>(0);
constexpr IPFamily IPFamily_MAX = static_cast<IPFamily>(3);
constexpr int IPFamily_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
IPFamily_descriptor();
template <typename T>
const std::string& IPFamily_Name(T value) {
  static_assert(std::is_same<T, IPFamily>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to IPFamily_Name().");
  return IPFamily_Name(static_cast<IPFamily>(value));
}
template <>
inline const std::string& IPFamily_Name(IPFamily value) {
  return ::google::protobuf::internal::NameOfDenseEnum<IPFamily_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool IPFamily_Parse(absl::string_view name, IPFamily* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IPFamily>(
      IPFamily_descriptor(), name, value);
}
enum TestStatus : int {
  TEST_STATUS_UNSPECIFIED = 0,
  TEST_STATUS_ACTIVE = 1,
  TEST_STATUS_PAUSED = 2,
  TEST_STATUS_DELETED = 3,
  TEST_STATUS_PREVIEW = 4,
  TestStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TestStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool TestStatus_IsValid(int value);
extern const uint32_t TestStatus_internal_data_[];
constexpr TestStatus TestStatus_MIN = static_cast<TestStatus>(0);
constexpr TestStatus TestStatus_MAX = static_cast<TestStatus>(4);
constexpr int TestStatus_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
TestStatus_descriptor();
template <typename T>
const std::string& TestStatus_Name(T value) {
  static_assert(std::is_same<T, TestStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TestStatus_Name().");
  return TestStatus_Name(static_cast<TestStatus>(value));
}
template <>
inline const std::string& TestStatus_Name(TestStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TestStatus_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool TestStatus_Parse(absl::string_view name, TestStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TestStatus>(
      TestStatus_descriptor(), name, value);
}
enum AgentStatus : int {
  AGENT_STATUS_UNSPECIFIED = 0,
  AGENT_STATUS_OK = 1,
  AGENT_STATUS_WAIT = 2,
  AGENT_STATUS_DELETED = 3,
  AgentStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  AgentStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool AgentStatus_IsValid(int value);
extern const uint32_t AgentStatus_internal_data_[];
constexpr AgentStatus AgentStatus_MIN = static_cast<AgentStatus>(0);
constexpr AgentStatus AgentStatus_MAX = static_cast<AgentStatus>(3);
constexpr int AgentStatus_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
AgentStatus_descriptor();
template <typename T>
const std::string& AgentStatus_Name(T value) {
  static_assert(std::is_same<T, AgentStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AgentStatus_Name().");
  return AgentStatus_Name(static_cast<AgentStatus>(value));
}
template <>
inline const std::string& AgentStatus_Name(AgentStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<AgentStatus_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool AgentStatus_Parse(absl::string_view name, AgentStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AgentStatus>(
      AgentStatus_descriptor(), name, value);
}
enum DNSRecord : int {
  DNS_RECORD_UNSPECIFIED = 0,
  DNS_RECORD_A = 1,
  DNS_RECORD_AAAA = 2,
  DNS_RECORD_CNAME = 3,
  DNS_RECORD_DNAME = 4,
  DNS_RECORD_NS = 5,
  DNS_RECORD_MX = 6,
  DNS_RECORD_PTR = 7,
  DNS_RECORD_SOA = 8,
  DNSRecord_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  DNSRecord_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool DNSRecord_IsValid(int value);
extern const uint32_t DNSRecord_internal_data_[];
constexpr DNSRecord DNSRecord_MIN = static_cast<DNSRecord>(0);
constexpr DNSRecord DNSRecord_MAX = static_cast<DNSRecord>(8);
constexpr int DNSRecord_ARRAYSIZE = 8 + 1;
const ::google::protobuf::EnumDescriptor*
DNSRecord_descriptor();
template <typename T>
const std::string& DNSRecord_Name(T value) {
  static_assert(std::is_same<T, DNSRecord>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to DNSRecord_Name().");
  return DNSRecord_Name(static_cast<DNSRecord>(value));
}
template <>
inline const std::string& DNSRecord_Name(DNSRecord value) {
  return ::google::protobuf::internal::NameOfDenseEnum<DNSRecord_descriptor,
                                                 0, 8>(
      static_cast<int>(value));
}
inline bool DNSRecord_Parse(absl::string_view name, DNSRecord* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DNSRecord>(
      DNSRecord_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class UrlTest_HeadersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  UrlTest_HeadersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UrlTest_HeadersEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit UrlTest_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const UrlTest_HeadersEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const UrlTest_HeadersEntry_DoNotUse*>(
        &_UrlTest_HeadersEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      63, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class UpdateAgentAlertRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.UpdateAgentAlertRequest) */ {
 public:
  inline UpdateAgentAlertRequest() : UpdateAgentAlertRequest(nullptr) {}
  ~UpdateAgentAlertRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateAgentAlertRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateAgentAlertRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateAgentAlertRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateAgentAlertRequest(const UpdateAgentAlertRequest& from) : UpdateAgentAlertRequest(nullptr, from) {}
  inline UpdateAgentAlertRequest(UpdateAgentAlertRequest&& from) noexcept
      : UpdateAgentAlertRequest(nullptr, std::move(from)) {}
  inline UpdateAgentAlertRequest& operator=(const UpdateAgentAlertRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateAgentAlertRequest& operator=(UpdateAgentAlertRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateAgentAlertRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateAgentAlertRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateAgentAlertRequest*>(
        &_UpdateAgentAlertRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 68;
  friend void swap(UpdateAgentAlertRequest& a, UpdateAgentAlertRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateAgentAlertRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateAgentAlertRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateAgentAlertRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateAgentAlertRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateAgentAlertRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateAgentAlertRequest& from) { UpdateAgentAlertRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateAgentAlertRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.UpdateAgentAlertRequest"; }

 protected:
  explicit UpdateAgentAlertRequest(::google::protobuf::Arena* arena);
  UpdateAgentAlertRequest(::google::protobuf::Arena* arena, const UpdateAgentAlertRequest& from);
  UpdateAgentAlertRequest(::google::protobuf::Arena* arena, UpdateAgentAlertRequest&& from) noexcept
      : UpdateAgentAlertRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNotificationChannelIdsFieldNumber = 3,
    kIdFieldNumber = 1,
    kThresholdSecondsFieldNumber = 2,
  };
  // repeated string notification_channel_ids = 3 [json_name = "notificationChannelIds"];
  int notification_channel_ids_size() const;
  private:
  int _internal_notification_channel_ids_size() const;

  public:
  void clear_notification_channel_ids() ;
  const std::string& notification_channel_ids(int index) const;
  std::string* mutable_notification_channel_ids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_notification_channel_ids(int index, Arg_&& value, Args_... args);
  std::string* add_notification_channel_ids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_notification_channel_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& notification_channel_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_notification_channel_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_notification_channel_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_notification_channel_ids();

  public:
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // uint32 threshold_seconds = 2 [json_name = "thresholdSeconds"];
  void clear_threshold_seconds() ;
  ::uint32_t threshold_seconds() const;
  void set_threshold_seconds(::uint32_t value);

  private:
  ::uint32_t _internal_threshold_seconds() const;
  void _internal_set_threshold_seconds(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.UpdateAgentAlertRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      84, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateAgentAlertRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> notification_channel_ids_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::uint32_t threshold_seconds_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class TraceHop final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.TraceHop) */ {
 public:
  inline TraceHop() : TraceHop(nullptr) {}
  ~TraceHop() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TraceHop* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TraceHop));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TraceHop(
      ::google::protobuf::internal::ConstantInitialized);

  inline TraceHop(const TraceHop& from) : TraceHop(nullptr, from) {}
  inline TraceHop(TraceHop&& from) noexcept
      : TraceHop(nullptr, std::move(from)) {}
  inline TraceHop& operator=(const TraceHop& from) {
    CopyFrom(from);
    return *this;
  }
  inline TraceHop& operator=(TraceHop&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TraceHop& default_instance() {
    return *internal_default_instance();
  }
  static inline const TraceHop* internal_default_instance() {
    return reinterpret_cast<const TraceHop*>(
        &_TraceHop_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(TraceHop& a, TraceHop& b) { a.Swap(&b); }
  inline void Swap(TraceHop* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TraceHop* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TraceHop* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TraceHop>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TraceHop& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TraceHop& from) { TraceHop::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TraceHop* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.TraceHop"; }

 protected:
  explicit TraceHop(::google::protobuf::Arena* arena);
  TraceHop(::google::protobuf::Arena* arena, const TraceHop& from);
  TraceHop(::google::protobuf::Arena* arena, TraceHop&& from) noexcept
      : TraceHop(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodeIdFieldNumber = 5,
    kLatencyFieldNumber = 3,
  };
  // string node_id = 5 [json_name = "nodeId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_node_id() ;
  const std::string& node_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_node_id(Arg_&& arg, Args_... args);
  std::string* mutable_node_id();
  PROTOBUF_NODISCARD std::string* release_node_id();
  void set_allocated_node_id(std::string* value);

  private:
  const std::string& _internal_node_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_node_id(
      const std::string& value);
  std::string* _internal_mutable_node_id();

  public:
  // int32 latency = 3 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_latency() ;
  ::int32_t latency() const;
  void set_latency(::int32_t value);

  private:
  ::int32_t _internal_latency() const;
  void _internal_set_latency(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.TraceHop)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 0,
      50, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TraceHop& from_msg);
    ::google::protobuf::internal::ArenaStringPtr node_id_;
    ::int32_t latency_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class TestTraceSettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.TestTraceSettings) */ {
 public:
  inline TestTraceSettings() : TestTraceSettings(nullptr) {}
  ~TestTraceSettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TestTraceSettings* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TestTraceSettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestTraceSettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestTraceSettings(const TestTraceSettings& from) : TestTraceSettings(nullptr, from) {}
  inline TestTraceSettings(TestTraceSettings&& from) noexcept
      : TestTraceSettings(nullptr, std::move(from)) {}
  inline TestTraceSettings& operator=(const TestTraceSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestTraceSettings& operator=(TestTraceSettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestTraceSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestTraceSettings* internal_default_instance() {
    return reinterpret_cast<const TestTraceSettings*>(
        &_TestTraceSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(TestTraceSettings& a, TestTraceSettings& b) { a.Swap(&b); }
  inline void Swap(TestTraceSettings* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestTraceSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestTraceSettings* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TestTraceSettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestTraceSettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestTraceSettings& from) { TestTraceSettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TestTraceSettings* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.TestTraceSettings"; }

 protected:
  explicit TestTraceSettings(::google::protobuf::Arena* arena);
  TestTraceSettings(::google::protobuf::Arena* arena, const TestTraceSettings& from);
  TestTraceSettings(::google::protobuf::Arena* arena, TestTraceSettings&& from) noexcept
      : TestTraceSettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProtocolFieldNumber = 2,
    kCountFieldNumber = 1,
    kPortFieldNumber = 3,
    kTimeoutFieldNumber = 4,
    kLimitFieldNumber = 5,
    kDelayFieldNumber = 6,
    kDscpFieldNumber = 7,
  };
  // string protocol = 2 [json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_protocol() ;
  const std::string& protocol() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_protocol(Arg_&& arg, Args_... args);
  std::string* mutable_protocol();
  PROTOBUF_NODISCARD std::string* release_protocol();
  void set_allocated_protocol(std::string* value);

  private:
  const std::string& _internal_protocol() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_protocol(
      const std::string& value);
  std::string* _internal_mutable_protocol();

  public:
  // uint32 count = 1 [json_name = "count", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_count() ;
  ::uint32_t count() const;
  void set_count(::uint32_t value);

  private:
  ::uint32_t _internal_count() const;
  void _internal_set_count(::uint32_t value);

  public:
  // uint32 port = 3 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_port() ;
  ::uint32_t port() const;
  void set_port(::uint32_t value);

  private:
  ::uint32_t _internal_port() const;
  void _internal_set_port(::uint32_t value);

  public:
  // uint32 timeout = 4 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_timeout() ;
  ::uint32_t timeout() const;
  void set_timeout(::uint32_t value);

  private:
  ::uint32_t _internal_timeout() const;
  void _internal_set_timeout(::uint32_t value);

  public:
  // uint32 limit = 5 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_limit() ;
  ::uint32_t limit() const;
  void set_limit(::uint32_t value);

  private:
  ::uint32_t _internal_limit() const;
  void _internal_set_limit(::uint32_t value);

  public:
  // float delay = 6 [json_name = "delay", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_delay() ;
  float delay() const;
  void set_delay(float value);

  private:
  float _internal_delay() const;
  void _internal_set_delay(float value);

  public:
  // uint32 dscp = 7 [json_name = "dscp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_dscp() ;
  ::uint32_t dscp() const;
  void set_dscp(::uint32_t value);

  private:
  ::uint32_t _internal_dscp() const;
  void _internal_set_dscp(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.TestTraceSettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      60, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestTraceSettings& from_msg);
    ::google::protobuf::internal::ArenaStringPtr protocol_;
    ::uint32_t count_;
    ::uint32_t port_;
    ::uint32_t timeout_;
    ::uint32_t limit_;
    float delay_;
    ::uint32_t dscp_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class TestThroughputSettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.TestThroughputSettings) */ {
 public:
  inline TestThroughputSettings() : TestThroughputSettings(nullptr) {}
  ~TestThroughputSettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TestThroughputSettings* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TestThroughputSettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestThroughputSettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestThroughputSettings(const TestThroughputSettings& from) : TestThroughputSettings(nullptr, from) {}
  inline TestThroughputSettings(TestThroughputSettings&& from) noexcept
      : TestThroughputSettings(nullptr, std::move(from)) {}
  inline TestThroughputSettings& operator=(const TestThroughputSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestThroughputSettings& operator=(TestThroughputSettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestThroughputSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestThroughputSettings* internal_default_instance() {
    return reinterpret_cast<const TestThroughputSettings*>(
        &_TestThroughputSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(TestThroughputSettings& a, TestThroughputSettings& b) { a.Swap(&b); }
  inline void Swap(TestThroughputSettings* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestThroughputSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestThroughputSettings* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TestThroughputSettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestThroughputSettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestThroughputSettings& from) { TestThroughputSettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TestThroughputSettings* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.TestThroughputSettings"; }

 protected:
  explicit TestThroughputSettings(::google::protobuf::Arena* arena);
  TestThroughputSettings(::google::protobuf::Arena* arena, const TestThroughputSettings& from);
  TestThroughputSettings(::google::protobuf::Arena* arena, TestThroughputSettings&& from) noexcept
      : TestThroughputSettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProtocolFieldNumber = 5,
    kPortFieldNumber = 1,
    kOmitFieldNumber = 2,
    kDurationFieldNumber = 3,
    kBandwidthFieldNumber = 4,
  };
  // string protocol = 5 [json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_protocol() ;
  const std::string& protocol() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_protocol(Arg_&& arg, Args_... args);
  std::string* mutable_protocol();
  PROTOBUF_NODISCARD std::string* release_protocol();
  void set_allocated_protocol(std::string* value);

  private:
  const std::string& _internal_protocol() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_protocol(
      const std::string& value);
  std::string* _internal_mutable_protocol();

  public:
  // uint32 port = 1 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_port() ;
  ::uint32_t port() const;
  void set_port(::uint32_t value);

  private:
  ::uint32_t _internal_port() const;
  void _internal_set_port(::uint32_t value);

  public:
  // uint32 omit = 2 [json_name = "omit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_omit() ;
  ::uint32_t omit() const;
  void set_omit(::uint32_t value);

  private:
  ::uint32_t _internal_omit() const;
  void _internal_set_omit(::uint32_t value);

  public:
  // uint32 duration = 3 [json_name = "duration", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_duration() ;
  ::uint32_t duration() const;
  void set_duration(::uint32_t value);

  private:
  ::uint32_t _internal_duration() const;
  void _internal_set_duration(::uint32_t value);

  public:
  // uint32 bandwidth = 4 [json_name = "bandwidth", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_bandwidth() ;
  ::uint32_t bandwidth() const;
  void set_bandwidth(::uint32_t value);

  private:
  ::uint32_t _internal_bandwidth() const;
  void _internal_set_bandwidth(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.TestThroughputSettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      65, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestThroughputSettings& from_msg);
    ::google::protobuf::internal::ArenaStringPtr protocol_;
    ::uint32_t port_;
    ::uint32_t omit_;
    ::uint32_t duration_;
    ::uint32_t bandwidth_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class TestPingSettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.TestPingSettings) */ {
 public:
  inline TestPingSettings() : TestPingSettings(nullptr) {}
  ~TestPingSettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TestPingSettings* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TestPingSettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestPingSettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestPingSettings(const TestPingSettings& from) : TestPingSettings(nullptr, from) {}
  inline TestPingSettings(TestPingSettings&& from) noexcept
      : TestPingSettings(nullptr, std::move(from)) {}
  inline TestPingSettings& operator=(const TestPingSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestPingSettings& operator=(TestPingSettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestPingSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestPingSettings* internal_default_instance() {
    return reinterpret_cast<const TestPingSettings*>(
        &_TestPingSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(TestPingSettings& a, TestPingSettings& b) { a.Swap(&b); }
  inline void Swap(TestPingSettings* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestPingSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestPingSettings* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TestPingSettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestPingSettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestPingSettings& from) { TestPingSettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TestPingSettings* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.TestPingSettings"; }

 protected:
  explicit TestPingSettings(::google::protobuf::Arena* arena);
  TestPingSettings(::google::protobuf::Arena* arena, const TestPingSettings& from);
  TestPingSettings(::google::protobuf::Arena* arena, TestPingSettings&& from) noexcept
      : TestPingSettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProtocolFieldNumber = 2,
    kCountFieldNumber = 1,
    kPortFieldNumber = 3,
    kTimeoutFieldNumber = 4,
    kDelayFieldNumber = 5,
    kDscpFieldNumber = 6,
  };
  // string protocol = 2 [json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_protocol() ;
  const std::string& protocol() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_protocol(Arg_&& arg, Args_... args);
  std::string* mutable_protocol();
  PROTOBUF_NODISCARD std::string* release_protocol();
  void set_allocated_protocol(std::string* value);

  private:
  const std::string& _internal_protocol() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_protocol(
      const std::string& value);
  std::string* _internal_mutable_protocol();

  public:
  // uint32 count = 1 [json_name = "count", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_count() ;
  ::uint32_t count() const;
  void set_count(::uint32_t value);

  private:
  ::uint32_t _internal_count() const;
  void _internal_set_count(::uint32_t value);

  public:
  // uint32 port = 3 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_port() ;
  ::uint32_t port() const;
  void set_port(::uint32_t value);

  private:
  ::uint32_t _internal_port() const;
  void _internal_set_port(::uint32_t value);

  public:
  // uint32 timeout = 4 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_timeout() ;
  ::uint32_t timeout() const;
  void set_timeout(::uint32_t value);

  private:
  ::uint32_t _internal_timeout() const;
  void _internal_set_timeout(::uint32_t value);

  public:
  // float delay = 5 [json_name = "delay", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_delay() ;
  float delay() const;
  void set_delay(float value);

  private:
  float _internal_delay() const;
  void _internal_set_delay(float value);

  public:
  // uint32 dscp = 6 [json_name = "dscp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_dscp() ;
  ::uint32_t dscp() const;
  void set_dscp(::uint32_t value);

  private:
  ::uint32_t _internal_dscp() const;
  void _internal_set_dscp(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.TestPingSettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      59, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestPingSettings& from_msg);
    ::google::protobuf::internal::ArenaStringPtr protocol_;
    ::uint32_t count_;
    ::uint32_t port_;
    ::uint32_t timeout_;
    float delay_;
    ::uint32_t dscp_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class Stats final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.Stats) */ {
 public:
  inline Stats() : Stats(nullptr) {}
  ~Stats() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Stats* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Stats));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Stats(
      ::google::protobuf::internal::ConstantInitialized);

  inline Stats(const Stats& from) : Stats(nullptr, from) {}
  inline Stats(Stats&& from) noexcept
      : Stats(nullptr, std::move(from)) {}
  inline Stats& operator=(const Stats& from) {
    CopyFrom(from);
    return *this;
  }
  inline Stats& operator=(Stats&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Stats& default_instance() {
    return *internal_default_instance();
  }
  static inline const Stats* internal_default_instance() {
    return reinterpret_cast<const Stats*>(
        &_Stats_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(Stats& a, Stats& b) { a.Swap(&b); }
  inline void Swap(Stats* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Stats* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Stats* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Stats>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Stats& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Stats& from) { Stats::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Stats* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.Stats"; }

 protected:
  explicit Stats(::google::protobuf::Arena* arena);
  Stats(::google::protobuf::Arena* arena, const Stats& from);
  Stats(::google::protobuf::Arena* arena, Stats&& from) noexcept
      : Stats(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAverageFieldNumber = 1,
    kMinFieldNumber = 2,
    kMaxFieldNumber = 3,
  };
  // int32 average = 1 [json_name = "average", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_average() ;
  ::int32_t average() const;
  void set_average(::int32_t value);

  private:
  ::int32_t _internal_average() const;
  void _internal_set_average(::int32_t value);

  public:
  // int32 min = 2 [json_name = "min", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_min() ;
  ::int32_t min() const;
  void set_min(::int32_t value);

  private:
  ::int32_t _internal_min() const;
  void _internal_set_min(::int32_t value);

  public:
  // int32 max = 3 [json_name = "max", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_max() ;
  ::int32_t max() const;
  void set_max(::int32_t value);

  private:
  ::int32_t _internal_max() const;
  void _internal_set_max(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.Stats)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Stats& from_msg);
    ::int32_t average_;
    ::int32_t min_;
    ::int32_t max_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class SetTestStatusResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.SetTestStatusResponse) */ {
 public:
  inline SetTestStatusResponse() : SetTestStatusResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetTestStatusResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetTestStatusResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetTestStatusResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetTestStatusResponse(const SetTestStatusResponse& from) : SetTestStatusResponse(nullptr, from) {}
  inline SetTestStatusResponse(SetTestStatusResponse&& from) noexcept
      : SetTestStatusResponse(nullptr, std::move(from)) {}
  inline SetTestStatusResponse& operator=(const SetTestStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetTestStatusResponse& operator=(SetTestStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetTestStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetTestStatusResponse* internal_default_instance() {
    return reinterpret_cast<const SetTestStatusResponse*>(
        &_SetTestStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 64;
  friend void swap(SetTestStatusResponse& a, SetTestStatusResponse& b) { a.Swap(&b); }
  inline void Swap(SetTestStatusResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetTestStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetTestStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SetTestStatusResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetTestStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetTestStatusResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.SetTestStatusResponse"; }

 protected:
  explicit SetTestStatusResponse(::google::protobuf::Arena* arena);
  SetTestStatusResponse(::google::protobuf::Arena* arena, const SetTestStatusResponse& from);
  SetTestStatusResponse(::google::protobuf::Arena* arena, SetTestStatusResponse&& from) noexcept
      : SetTestStatusResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.SetTestStatusResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetTestStatusResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class SetTestStatusRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.SetTestStatusRequest) */ {
 public:
  inline SetTestStatusRequest() : SetTestStatusRequest(nullptr) {}
  ~SetTestStatusRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SetTestStatusRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SetTestStatusRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetTestStatusRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetTestStatusRequest(const SetTestStatusRequest& from) : SetTestStatusRequest(nullptr, from) {}
  inline SetTestStatusRequest(SetTestStatusRequest&& from) noexcept
      : SetTestStatusRequest(nullptr, std::move(from)) {}
  inline SetTestStatusRequest& operator=(const SetTestStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetTestStatusRequest& operator=(SetTestStatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetTestStatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetTestStatusRequest* internal_default_instance() {
    return reinterpret_cast<const SetTestStatusRequest*>(
        &_SetTestStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 63;
  friend void swap(SetTestStatusRequest& a, SetTestStatusRequest& b) { a.Swap(&b); }
  inline void Swap(SetTestStatusRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetTestStatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetTestStatusRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SetTestStatusRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetTestStatusRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetTestStatusRequest& from) { SetTestStatusRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SetTestStatusRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.SetTestStatusRequest"; }

 protected:
  explicit SetTestStatusRequest(::google::protobuf::Arena* arena);
  SetTestStatusRequest(::google::protobuf::Arena* arena, const SetTestStatusRequest& from);
  SetTestStatusRequest(::google::protobuf::Arena* arena, SetTestStatusRequest&& from) noexcept
      : SetTestStatusRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // .kentik.synthetics.v202309.TestStatus status = 2 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_status() ;
  ::kentik::synthetics::v202309::TestStatus status() const;
  void set_status(::kentik::synthetics::v202309::TestStatus value);

  private:
  ::kentik::synthetics::v202309::TestStatus _internal_status() const;
  void _internal_set_status(::kentik::synthetics::v202309::TestStatus value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.SetTestStatusRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      57, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetTestStatusRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    int status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class ScheduleSettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.ScheduleSettings) */ {
 public:
  inline ScheduleSettings() : ScheduleSettings(nullptr) {}
  ~ScheduleSettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScheduleSettings* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScheduleSettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScheduleSettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScheduleSettings(const ScheduleSettings& from) : ScheduleSettings(nullptr, from) {}
  inline ScheduleSettings(ScheduleSettings&& from) noexcept
      : ScheduleSettings(nullptr, std::move(from)) {}
  inline ScheduleSettings& operator=(const ScheduleSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScheduleSettings& operator=(ScheduleSettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScheduleSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScheduleSettings* internal_default_instance() {
    return reinterpret_cast<const ScheduleSettings*>(
        &_ScheduleSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(ScheduleSettings& a, ScheduleSettings& b) { a.Swap(&b); }
  inline void Swap(ScheduleSettings* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScheduleSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScheduleSettings* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ScheduleSettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ScheduleSettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ScheduleSettings& from) { ScheduleSettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ScheduleSettings* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.ScheduleSettings"; }

 protected:
  explicit ScheduleSettings(::google::protobuf::Arena* arena);
  ScheduleSettings(::google::protobuf::Arena* arena, const ScheduleSettings& from);
  ScheduleSettings(::google::protobuf::Arena* arena, ScheduleSettings&& from) noexcept
      : ScheduleSettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEnabledFieldNumber = 1,
    kStartFieldNumber = 2,
    kEndFieldNumber = 3,
  };
  // bool enabled = 1 [json_name = "enabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_enabled() ;
  bool enabled() const;
  void set_enabled(bool value);

  private:
  bool _internal_enabled() const;
  void _internal_set_enabled(bool value);

  public:
  // uint32 start = 2 [json_name = "start", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_start() ;
  ::uint32_t start() const;
  void set_start(::uint32_t value);

  private:
  ::uint32_t _internal_start() const;
  void _internal_set_start(::uint32_t value);

  public:
  // uint32 end = 3 [json_name = "end", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_end() ;
  ::uint32_t end() const;
  void set_end(::uint32_t value);

  private:
  ::uint32_t _internal_end() const;
  void _internal_set_end(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.ScheduleSettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScheduleSettings& from_msg);
    bool enabled_;
    ::uint32_t start_;
    ::uint32_t end_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class PageLoadTest_HeadersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  PageLoadTest_HeadersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PageLoadTest_HeadersEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit PageLoadTest_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const PageLoadTest_HeadersEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const PageLoadTest_HeadersEntry_DoNotUse*>(
        &_PageLoadTest_HeadersEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      68, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class PageLoadTest_CssSelectorsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  PageLoadTest_CssSelectorsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PageLoadTest_CssSelectorsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit PageLoadTest_CssSelectorsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const PageLoadTest_CssSelectorsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const PageLoadTest_CssSelectorsEntry_DoNotUse*>(
        &_PageLoadTest_CssSelectorsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      73, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class PacketLossData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.PacketLossData) */ {
 public:
  inline PacketLossData() : PacketLossData(nullptr) {}
  ~PacketLossData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PacketLossData* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PacketLossData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PacketLossData(
      ::google::protobuf::internal::ConstantInitialized);

  inline PacketLossData(const PacketLossData& from) : PacketLossData(nullptr, from) {}
  inline PacketLossData(PacketLossData&& from) noexcept
      : PacketLossData(nullptr, std::move(from)) {}
  inline PacketLossData& operator=(const PacketLossData& from) {
    CopyFrom(from);
    return *this;
  }
  inline PacketLossData& operator=(PacketLossData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PacketLossData& default_instance() {
    return *internal_default_instance();
  }
  static inline const PacketLossData* internal_default_instance() {
    return reinterpret_cast<const PacketLossData*>(
        &_PacketLossData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(PacketLossData& a, PacketLossData& b) { a.Swap(&b); }
  inline void Swap(PacketLossData* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PacketLossData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PacketLossData* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PacketLossData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PacketLossData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PacketLossData& from) { PacketLossData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PacketLossData* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.PacketLossData"; }

 protected:
  explicit PacketLossData(::google::protobuf::Arena* arena);
  PacketLossData(::google::protobuf::Arena* arena, const PacketLossData& from);
  PacketLossData(::google::protobuf::Arena* arena, PacketLossData&& from) noexcept
      : PacketLossData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHealthFieldNumber = 2,
    kCurrentFieldNumber = 1,
  };
  // string health = 2 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_health() ;
  const std::string& health() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_health(Arg_&& arg, Args_... args);
  std::string* mutable_health();
  PROTOBUF_NODISCARD std::string* release_health();
  void set_allocated_health(std::string* value);

  private:
  const std::string& _internal_health() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_health(
      const std::string& value);
  std::string* _internal_mutable_health();

  public:
  // double current = 1 [json_name = "current", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_current() ;
  double current() const;
  void set_current(double value);

  private:
  double _internal_current() const;
  void _internal_set_current(double value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.PacketLossData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      55, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PacketLossData& from_msg);
    ::google::protobuf::internal::ArenaStringPtr health_;
    double current_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class NetworkMeshTest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.NetworkMeshTest) */ {
 public:
  inline NetworkMeshTest() : NetworkMeshTest(nullptr) {}
  ~NetworkMeshTest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NetworkMeshTest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NetworkMeshTest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetworkMeshTest(
      ::google::protobuf::internal::ConstantInitialized);

  inline NetworkMeshTest(const NetworkMeshTest& from) : NetworkMeshTest(nullptr, from) {}
  inline NetworkMeshTest(NetworkMeshTest&& from) noexcept
      : NetworkMeshTest(nullptr, std::move(from)) {}
  inline NetworkMeshTest& operator=(const NetworkMeshTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkMeshTest& operator=(NetworkMeshTest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NetworkMeshTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NetworkMeshTest* internal_default_instance() {
    return reinterpret_cast<const NetworkMeshTest*>(
        &_NetworkMeshTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(NetworkMeshTest& a, NetworkMeshTest& b) { a.Swap(&b); }
  inline void Swap(NetworkMeshTest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetworkMeshTest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetworkMeshTest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NetworkMeshTest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NetworkMeshTest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NetworkMeshTest& from) { NetworkMeshTest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NetworkMeshTest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.NetworkMeshTest"; }

 protected:
  explicit NetworkMeshTest(::google::protobuf::Arena* arena);
  NetworkMeshTest(::google::protobuf::Arena* arena, const NetworkMeshTest& from);
  NetworkMeshTest(::google::protobuf::Arena* arena, NetworkMeshTest&& from) noexcept
      : NetworkMeshTest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUseLocalIpFieldNumber = 1,
  };
  // bool use_local_ip = 1 [json_name = "useLocalIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_use_local_ip() ;
  bool use_local_ip() const;
  void set_use_local_ip(bool value);

  private:
  bool _internal_use_local_ip() const;
  void _internal_set_use_local_ip(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.NetworkMeshTest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NetworkMeshTest& from_msg);
    bool use_local_ip_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class MetricData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.MetricData) */ {
 public:
  inline MetricData() : MetricData(nullptr) {}
  ~MetricData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MetricData* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MetricData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MetricData(
      ::google::protobuf::internal::ConstantInitialized);

  inline MetricData(const MetricData& from) : MetricData(nullptr, from) {}
  inline MetricData(MetricData&& from) noexcept
      : MetricData(nullptr, std::move(from)) {}
  inline MetricData& operator=(const MetricData& from) {
    CopyFrom(from);
    return *this;
  }
  inline MetricData& operator=(MetricData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MetricData& default_instance() {
    return *internal_default_instance();
  }
  static inline const MetricData* internal_default_instance() {
    return reinterpret_cast<const MetricData*>(
        &_MetricData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(MetricData& a, MetricData& b) { a.Swap(&b); }
  inline void Swap(MetricData* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MetricData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MetricData* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MetricData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MetricData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MetricData& from) { MetricData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MetricData* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.MetricData"; }

 protected:
  explicit MetricData(::google::protobuf::Arena* arena);
  MetricData(::google::protobuf::Arena* arena, const MetricData& from);
  MetricData(::google::protobuf::Arena* arena, MetricData&& from) noexcept
      : MetricData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHealthFieldNumber = 4,
    kCurrentFieldNumber = 1,
    kRollingAvgFieldNumber = 2,
    kRollingStddevFieldNumber = 3,
  };
  // string health = 4 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_health() ;
  const std::string& health() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_health(Arg_&& arg, Args_... args);
  std::string* mutable_health();
  PROTOBUF_NODISCARD std::string* release_health();
  void set_allocated_health(std::string* value);

  private:
  const std::string& _internal_health() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_health(
      const std::string& value);
  std::string* _internal_mutable_health();

  public:
  // uint32 current = 1 [json_name = "current", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_current() ;
  ::uint32_t current() const;
  void set_current(::uint32_t value);

  private:
  ::uint32_t _internal_current() const;
  void _internal_set_current(::uint32_t value);

  public:
  // uint32 rolling_avg = 2 [json_name = "rollingAvg", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_rolling_avg() ;
  ::uint32_t rolling_avg() const;
  void set_rolling_avg(::uint32_t value);

  private:
  ::uint32_t _internal_rolling_avg() const;
  void _internal_set_rolling_avg(::uint32_t value);

  public:
  // uint32 rolling_stddev = 3 [json_name = "rollingStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_rolling_stddev() ;
  ::uint32_t rolling_stddev() const;
  void set_rolling_stddev(::uint32_t value);

  private:
  ::uint32_t _internal_rolling_stddev() const;
  void _internal_set_rolling_stddev(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.MetricData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      51, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MetricData& from_msg);
    ::google::protobuf::internal::ArenaStringPtr health_;
    ::uint32_t current_;
    ::uint32_t rolling_avg_;
    ::uint32_t rolling_stddev_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class Location final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.Location) */ {
 public:
  inline Location() : Location(nullptr) {}
  ~Location() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Location* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Location));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Location(
      ::google::protobuf::internal::ConstantInitialized);

  inline Location(const Location& from) : Location(nullptr, from) {}
  inline Location(Location&& from) noexcept
      : Location(nullptr, std::move(from)) {}
  inline Location& operator=(const Location& from) {
    CopyFrom(from);
    return *this;
  }
  inline Location& operator=(Location&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Location& default_instance() {
    return *internal_default_instance();
  }
  static inline const Location* internal_default_instance() {
    return reinterpret_cast<const Location*>(
        &_Location_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(Location& a, Location& b) { a.Swap(&b); }
  inline void Swap(Location* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Location* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Location* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Location>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Location& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Location& from) { Location::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Location* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.Location"; }

 protected:
  explicit Location(::google::protobuf::Arena* arena);
  Location(::google::protobuf::Arena* arena, const Location& from);
  Location(::google::protobuf::Arena* arena, Location&& from) noexcept
      : Location(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCountryFieldNumber = 1,
    kRegionFieldNumber = 2,
    kCityFieldNumber = 3,
    kLatitudeFieldNumber = 8,
    kLongitudeFieldNumber = 9,
  };
  // string country = 1 [json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_country() ;
  const std::string& country() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_country(Arg_&& arg, Args_... args);
  std::string* mutable_country();
  PROTOBUF_NODISCARD std::string* release_country();
  void set_allocated_country(std::string* value);

  private:
  const std::string& _internal_country() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_country(
      const std::string& value);
  std::string* _internal_mutable_country();

  public:
  // string region = 2 [json_name = "region", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_region() ;
  const std::string& region() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_region(Arg_&& arg, Args_... args);
  std::string* mutable_region();
  PROTOBUF_NODISCARD std::string* release_region();
  void set_allocated_region(std::string* value);

  private:
  const std::string& _internal_region() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_region(
      const std::string& value);
  std::string* _internal_mutable_region();

  public:
  // string city = 3 [json_name = "city", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_city() ;
  const std::string& city() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_city(Arg_&& arg, Args_... args);
  std::string* mutable_city();
  PROTOBUF_NODISCARD std::string* release_city();
  void set_allocated_city(std::string* value);

  private:
  const std::string& _internal_city() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_city(
      const std::string& value);
  std::string* _internal_mutable_city();

  public:
  // double latitude = 8 [json_name = "latitude", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_latitude() ;
  double latitude() const;
  void set_latitude(double value);

  private:
  double _internal_latitude() const;
  void _internal_set_latitude(double value);

  public:
  // double longitude = 9 [json_name = "longitude", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_longitude() ;
  double longitude() const;
  void set_longitude(double value);

  private:
  double _internal_longitude() const;
  void _internal_set_longitude(double value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.Location)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 0,
      60, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Location& from_msg);
    ::google::protobuf::internal::ArenaStringPtr country_;
    ::google::protobuf::internal::ArenaStringPtr region_;
    ::google::protobuf::internal::ArenaStringPtr city_;
    double latitude_;
    double longitude_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class ListTestsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.ListTestsRequest) */ {
 public:
  inline ListTestsRequest() : ListTestsRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListTestsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListTestsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListTestsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListTestsRequest(const ListTestsRequest& from) : ListTestsRequest(nullptr, from) {}
  inline ListTestsRequest(ListTestsRequest&& from) noexcept
      : ListTestsRequest(nullptr, std::move(from)) {}
  inline ListTestsRequest& operator=(const ListTestsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListTestsRequest& operator=(ListTestsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListTestsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListTestsRequest* internal_default_instance() {
    return reinterpret_cast<const ListTestsRequest*>(
        &_ListTestsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 53;
  friend void swap(ListTestsRequest& a, ListTestsRequest& b) { a.Swap(&b); }
  inline void Swap(ListTestsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListTestsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListTestsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ListTestsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ListTestsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ListTestsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.ListTestsRequest"; }

 protected:
  explicit ListTestsRequest(::google::protobuf::Arena* arena);
  ListTestsRequest(::google::protobuf::Arena* arena, const ListTestsRequest& from);
  ListTestsRequest(::google::protobuf::Arena* arena, ListTestsRequest&& from) noexcept
      : ListTestsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.ListTestsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListTestsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class ListAgentsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.ListAgentsRequest) */ {
 public:
  inline ListAgentsRequest() : ListAgentsRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListAgentsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListAgentsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListAgentsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListAgentsRequest(const ListAgentsRequest& from) : ListAgentsRequest(nullptr, from) {}
  inline ListAgentsRequest(ListAgentsRequest&& from) noexcept
      : ListAgentsRequest(nullptr, std::move(from)) {}
  inline ListAgentsRequest& operator=(const ListAgentsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListAgentsRequest& operator=(ListAgentsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListAgentsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListAgentsRequest* internal_default_instance() {
    return reinterpret_cast<const ListAgentsRequest*>(
        &_ListAgentsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 45;
  friend void swap(ListAgentsRequest& a, ListAgentsRequest& b) { a.Swap(&b); }
  inline void Swap(ListAgentsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListAgentsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListAgentsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ListAgentsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ListAgentsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ListAgentsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.ListAgentsRequest"; }

 protected:
  explicit ListAgentsRequest(::google::protobuf::Arena* arena);
  ListAgentsRequest(::google::protobuf::Arena* arena, const ListAgentsRequest& from);
  ListAgentsRequest(::google::protobuf::Arena* arena, ListAgentsRequest&& from) noexcept
      : ListAgentsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.ListAgentsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListAgentsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class ListAgentAlertsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.ListAgentAlertsRequest) */ {
 public:
  inline ListAgentAlertsRequest() : ListAgentAlertsRequest(nullptr) {}
  ~ListAgentAlertsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListAgentAlertsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListAgentAlertsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListAgentAlertsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListAgentAlertsRequest(const ListAgentAlertsRequest& from) : ListAgentAlertsRequest(nullptr, from) {}
  inline ListAgentAlertsRequest(ListAgentAlertsRequest&& from) noexcept
      : ListAgentAlertsRequest(nullptr, std::move(from)) {}
  inline ListAgentAlertsRequest& operator=(const ListAgentAlertsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListAgentAlertsRequest& operator=(ListAgentAlertsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListAgentAlertsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListAgentAlertsRequest* internal_default_instance() {
    return reinterpret_cast<const ListAgentAlertsRequest*>(
        &_ListAgentAlertsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 72;
  friend void swap(ListAgentAlertsRequest& a, ListAgentAlertsRequest& b) { a.Swap(&b); }
  inline void Swap(ListAgentAlertsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListAgentAlertsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListAgentAlertsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListAgentAlertsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListAgentAlertsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListAgentAlertsRequest& from) { ListAgentAlertsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListAgentAlertsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.ListAgentAlertsRequest"; }

 protected:
  explicit ListAgentAlertsRequest(::google::protobuf::Arena* arena);
  ListAgentAlertsRequest(::google::protobuf::Arena* arena, const ListAgentAlertsRequest& from);
  ListAgentAlertsRequest(::google::protobuf::Arena* arena, ListAgentAlertsRequest&& from) noexcept
      : ListAgentAlertsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAgentIdsFieldNumber = 1,
  };
  // repeated string agent_ids = 1 [json_name = "agentIds"];
  int agent_ids_size() const;
  private:
  int _internal_agent_ids_size() const;

  public:
  void clear_agent_ids() ;
  const std::string& agent_ids(int index) const;
  std::string* mutable_agent_ids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_agent_ids(int index, Arg_&& value, Args_... args);
  std::string* add_agent_ids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_agent_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& agent_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_agent_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_agent_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_agent_ids();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.ListAgentAlertsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      66, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListAgentAlertsRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> agent_ids_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class IpTest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.IpTest) */ {
 public:
  inline IpTest() : IpTest(nullptr) {}
  ~IpTest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(IpTest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(IpTest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IpTest(
      ::google::protobuf::internal::ConstantInitialized);

  inline IpTest(const IpTest& from) : IpTest(nullptr, from) {}
  inline IpTest(IpTest&& from) noexcept
      : IpTest(nullptr, std::move(from)) {}
  inline IpTest& operator=(const IpTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline IpTest& operator=(IpTest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IpTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const IpTest* internal_default_instance() {
    return reinterpret_cast<const IpTest*>(
        &_IpTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(IpTest& a, IpTest& b) { a.Swap(&b); }
  inline void Swap(IpTest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IpTest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IpTest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<IpTest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IpTest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const IpTest& from) { IpTest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(IpTest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.IpTest"; }

 protected:
  explicit IpTest(::google::protobuf::Arena* arena);
  IpTest(::google::protobuf::Arena* arena, const IpTest& from);
  IpTest(::google::protobuf::Arena* arena, IpTest&& from) noexcept
      : IpTest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetsFieldNumber = 1,
    kUseLocalIpFieldNumber = 2,
  };
  // repeated string targets = 1 [json_name = "targets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int targets_size() const;
  private:
  int _internal_targets_size() const;

  public:
  void clear_targets() ;
  const std::string& targets(int index) const;
  std::string* mutable_targets(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_targets(int index, Arg_&& value, Args_... args);
  std::string* add_targets();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_targets(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& targets() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_targets();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_targets() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_targets();

  public:
  // bool use_local_ip = 2 [json_name = "useLocalIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_use_local_ip() ;
  bool use_local_ip() const;
  void set_use_local_ip(bool value);

  private:
  bool _internal_use_local_ip() const;
  void _internal_set_use_local_ip(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.IpTest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      48, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const IpTest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> targets_;
    bool use_local_ip_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class HostnameTest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.HostnameTest) */ {
 public:
  inline HostnameTest() : HostnameTest(nullptr) {}
  ~HostnameTest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(HostnameTest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(HostnameTest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HostnameTest(
      ::google::protobuf::internal::ConstantInitialized);

  inline HostnameTest(const HostnameTest& from) : HostnameTest(nullptr, from) {}
  inline HostnameTest(HostnameTest&& from) noexcept
      : HostnameTest(nullptr, std::move(from)) {}
  inline HostnameTest& operator=(const HostnameTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline HostnameTest& operator=(HostnameTest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HostnameTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const HostnameTest* internal_default_instance() {
    return reinterpret_cast<const HostnameTest*>(
        &_HostnameTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(HostnameTest& a, HostnameTest& b) { a.Swap(&b); }
  inline void Swap(HostnameTest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HostnameTest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HostnameTest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<HostnameTest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HostnameTest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HostnameTest& from) { HostnameTest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(HostnameTest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.HostnameTest"; }

 protected:
  explicit HostnameTest(::google::protobuf::Arena* arena);
  HostnameTest(::google::protobuf::Arena* arena, const HostnameTest& from);
  HostnameTest(::google::protobuf::Arena* arena, HostnameTest&& from) noexcept
      : HostnameTest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetFieldNumber = 1,
  };
  // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_target() ;
  const std::string& target() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_target(Arg_&& arg, Args_... args);
  std::string* mutable_target();
  PROTOBUF_NODISCARD std::string* release_target();
  void set_allocated_target(std::string* value);

  private:
  const std::string& _internal_target() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_target(
      const std::string& value);
  std::string* _internal_mutable_target();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.HostnameTest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      53, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HostnameTest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr target_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class HTTPResponseData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.HTTPResponseData) */ {
 public:
  inline HTTPResponseData() : HTTPResponseData(nullptr) {}
  ~HTTPResponseData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(HTTPResponseData* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(HTTPResponseData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HTTPResponseData(
      ::google::protobuf::internal::ConstantInitialized);

  inline HTTPResponseData(const HTTPResponseData& from) : HTTPResponseData(nullptr, from) {}
  inline HTTPResponseData(HTTPResponseData&& from) noexcept
      : HTTPResponseData(nullptr, std::move(from)) {}
  inline HTTPResponseData& operator=(const HTTPResponseData& from) {
    CopyFrom(from);
    return *this;
  }
  inline HTTPResponseData& operator=(HTTPResponseData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HTTPResponseData& default_instance() {
    return *internal_default_instance();
  }
  static inline const HTTPResponseData* internal_default_instance() {
    return reinterpret_cast<const HTTPResponseData*>(
        &_HTTPResponseData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(HTTPResponseData& a, HTTPResponseData& b) { a.Swap(&b); }
  inline void Swap(HTTPResponseData* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HTTPResponseData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HTTPResponseData* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<HTTPResponseData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HTTPResponseData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HTTPResponseData& from) { HTTPResponseData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(HTTPResponseData* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.HTTPResponseData"; }

 protected:
  explicit HTTPResponseData(::google::protobuf::Arena* arena);
  HTTPResponseData(::google::protobuf::Arena* arena, const HTTPResponseData& from);
  HTTPResponseData(::google::protobuf::Arena* arena, HTTPResponseData&& from) noexcept
      : HTTPResponseData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 3,
    kStatusFieldNumber = 1,
    kSizeFieldNumber = 2,
  };
  // string data = 3 [json_name = "data", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // uint32 status = 1 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_status() ;
  ::uint32_t status() const;
  void set_status(::uint32_t value);

  private:
  ::uint32_t _internal_status() const;
  void _internal_set_status(::uint32_t value);

  public:
  // uint32 size = 2 [json_name = "size", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_size() ;
  ::uint32_t size() const;
  void set_size(::uint32_t value);

  private:
  ::uint32_t _internal_size() const;
  void _internal_set_size(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.HTTPResponseData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      55, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HTTPResponseData& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::uint32_t status_;
    ::uint32_t size_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class GetTestRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.GetTestRequest) */ {
 public:
  inline GetTestRequest() : GetTestRequest(nullptr) {}
  ~GetTestRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetTestRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetTestRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetTestRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetTestRequest(const GetTestRequest& from) : GetTestRequest(nullptr, from) {}
  inline GetTestRequest(GetTestRequest&& from) noexcept
      : GetTestRequest(nullptr, std::move(from)) {}
  inline GetTestRequest& operator=(const GetTestRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTestRequest& operator=(GetTestRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTestRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTestRequest* internal_default_instance() {
    return reinterpret_cast<const GetTestRequest*>(
        &_GetTestRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 57;
  friend void swap(GetTestRequest& a, GetTestRequest& b) { a.Swap(&b); }
  inline void Swap(GetTestRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTestRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTestRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetTestRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetTestRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetTestRequest& from) { GetTestRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetTestRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.GetTestRequest"; }

 protected:
  explicit GetTestRequest(::google::protobuf::Arena* arena);
  GetTestRequest(::google::protobuf::Arena* arena, const GetTestRequest& from);
  GetTestRequest(::google::protobuf::Arena* arena, GetTestRequest&& from) noexcept
      : GetTestRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.GetTestRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      51, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetTestRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class GetAgentRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.GetAgentRequest) */ {
 public:
  inline GetAgentRequest() : GetAgentRequest(nullptr) {}
  ~GetAgentRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetAgentRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetAgentRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetAgentRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetAgentRequest(const GetAgentRequest& from) : GetAgentRequest(nullptr, from) {}
  inline GetAgentRequest(GetAgentRequest&& from) noexcept
      : GetAgentRequest(nullptr, std::move(from)) {}
  inline GetAgentRequest& operator=(const GetAgentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAgentRequest& operator=(GetAgentRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAgentRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAgentRequest* internal_default_instance() {
    return reinterpret_cast<const GetAgentRequest*>(
        &_GetAgentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 47;
  friend void swap(GetAgentRequest& a, GetAgentRequest& b) { a.Swap(&b); }
  inline void Swap(GetAgentRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAgentRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAgentRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetAgentRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetAgentRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetAgentRequest& from) { GetAgentRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetAgentRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.GetAgentRequest"; }

 protected:
  explicit GetAgentRequest(::google::protobuf::Arena* arena);
  GetAgentRequest(::google::protobuf::Arena* arena, const GetAgentRequest& from);
  GetAgentRequest(::google::protobuf::Arena* arena, GetAgentRequest&& from) noexcept
      : GetAgentRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.GetAgentRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      52, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetAgentRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class GetAgentAlertRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.GetAgentAlertRequest) */ {
 public:
  inline GetAgentAlertRequest() : GetAgentAlertRequest(nullptr) {}
  ~GetAgentAlertRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetAgentAlertRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetAgentAlertRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetAgentAlertRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetAgentAlertRequest(const GetAgentAlertRequest& from) : GetAgentAlertRequest(nullptr, from) {}
  inline GetAgentAlertRequest(GetAgentAlertRequest&& from) noexcept
      : GetAgentAlertRequest(nullptr, std::move(from)) {}
  inline GetAgentAlertRequest& operator=(const GetAgentAlertRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAgentAlertRequest& operator=(GetAgentAlertRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAgentAlertRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAgentAlertRequest* internal_default_instance() {
    return reinterpret_cast<const GetAgentAlertRequest*>(
        &_GetAgentAlertRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 70;
  friend void swap(GetAgentAlertRequest& a, GetAgentAlertRequest& b) { a.Swap(&b); }
  inline void Swap(GetAgentAlertRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAgentAlertRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAgentAlertRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetAgentAlertRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetAgentAlertRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetAgentAlertRequest& from) { GetAgentAlertRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetAgentAlertRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.GetAgentAlertRequest"; }

 protected:
  explicit GetAgentAlertRequest(::google::protobuf::Arena* arena);
  GetAgentAlertRequest(::google::protobuf::Arena* arena, const GetAgentAlertRequest& from);
  GetAgentAlertRequest(::google::protobuf::Arena* arena, GetAgentAlertRequest&& from) noexcept
      : GetAgentAlertRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.GetAgentAlertRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      57, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetAgentAlertRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class FlowTest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.FlowTest) */ {
 public:
  inline FlowTest() : FlowTest(nullptr) {}
  ~FlowTest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FlowTest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FlowTest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FlowTest(
      ::google::protobuf::internal::ConstantInitialized);

  inline FlowTest(const FlowTest& from) : FlowTest(nullptr, from) {}
  inline FlowTest(FlowTest&& from) noexcept
      : FlowTest(nullptr, std::move(from)) {}
  inline FlowTest& operator=(const FlowTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlowTest& operator=(FlowTest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlowTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FlowTest* internal_default_instance() {
    return reinterpret_cast<const FlowTest*>(
        &_FlowTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(FlowTest& a, FlowTest& b) { a.Swap(&b); }
  inline void Swap(FlowTest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlowTest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FlowTest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FlowTest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FlowTest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FlowTest& from) { FlowTest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FlowTest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.FlowTest"; }

 protected:
  explicit FlowTest(::google::protobuf::Arena* arena);
  FlowTest(::google::protobuf::Arena* arena, const FlowTest& from);
  FlowTest(::google::protobuf::Arena* arena, FlowTest&& from) noexcept
      : FlowTest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetFieldNumber = 1,
    kTypeFieldNumber = 5,
    kInetDirectionFieldNumber = 6,
    kDirectionFieldNumber = 7,
    kTargetRefreshIntervalMillisFieldNumber = 2,
    kMaxProvidersFieldNumber = 3,
    kMaxIpTargetsFieldNumber = 4,
  };
  // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_target() ;
  const std::string& target() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_target(Arg_&& arg, Args_... args);
  std::string* mutable_target();
  PROTOBUF_NODISCARD std::string* release_target();
  void set_allocated_target(std::string* value);

  private:
  const std::string& _internal_target() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_target(
      const std::string& value);
  std::string* _internal_mutable_target();

  public:
  // string type = 5 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // string inet_direction = 6 [json_name = "inetDirection", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_inet_direction() ;
  const std::string& inet_direction() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_inet_direction(Arg_&& arg, Args_... args);
  std::string* mutable_inet_direction();
  PROTOBUF_NODISCARD std::string* release_inet_direction();
  void set_allocated_inet_direction(std::string* value);

  private:
  const std::string& _internal_inet_direction() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_inet_direction(
      const std::string& value);
  std::string* _internal_mutable_inet_direction();

  public:
  // string direction = 7 [json_name = "direction", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_direction() ;
  const std::string& direction() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_direction(Arg_&& arg, Args_... args);
  std::string* mutable_direction();
  PROTOBUF_NODISCARD std::string* release_direction();
  void set_allocated_direction(std::string* value);

  private:
  const std::string& _internal_direction() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_direction(
      const std::string& value);
  std::string* _internal_mutable_direction();

  public:
  // uint32 target_refresh_interval_millis = 2 [json_name = "targetRefreshIntervalMillis", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_target_refresh_interval_millis() ;
  ::uint32_t target_refresh_interval_millis() const;
  void set_target_refresh_interval_millis(::uint32_t value);

  private:
  ::uint32_t _internal_target_refresh_interval_millis() const;
  void _internal_set_target_refresh_interval_millis(::uint32_t value);

  public:
  // uint32 max_providers = 3 [json_name = "maxProviders", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_max_providers() ;
  ::uint32_t max_providers() const;
  void set_max_providers(::uint32_t value);

  private:
  ::uint32_t _internal_max_providers() const;
  void _internal_set_max_providers(::uint32_t value);

  public:
  // uint32 max_ip_targets = 4 [json_name = "maxIpTargets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_max_ip_targets() ;
  ::uint32_t max_ip_targets() const;
  void set_max_ip_targets(::uint32_t value);

  private:
  ::uint32_t _internal_max_ip_targets() const;
  void _internal_set_max_ip_targets(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.FlowTest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      76, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FlowTest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr target_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr inet_direction_;
    ::google::protobuf::internal::ArenaStringPtr direction_;
    ::uint32_t target_refresh_interval_millis_;
    ::uint32_t max_providers_;
    ::uint32_t max_ip_targets_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class DnsTest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.DnsTest) */ {
 public:
  inline DnsTest() : DnsTest(nullptr) {}
  ~DnsTest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DnsTest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DnsTest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DnsTest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DnsTest(const DnsTest& from) : DnsTest(nullptr, from) {}
  inline DnsTest(DnsTest&& from) noexcept
      : DnsTest(nullptr, std::move(from)) {}
  inline DnsTest& operator=(const DnsTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DnsTest& operator=(DnsTest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DnsTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DnsTest* internal_default_instance() {
    return reinterpret_cast<const DnsTest*>(
        &_DnsTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(DnsTest& a, DnsTest& b) { a.Swap(&b); }
  inline void Swap(DnsTest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DnsTest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DnsTest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DnsTest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DnsTest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DnsTest& from) { DnsTest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DnsTest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.DnsTest"; }

 protected:
  explicit DnsTest(::google::protobuf::Arena* arena);
  DnsTest(::google::protobuf::Arena* arena, const DnsTest& from);
  DnsTest(::google::protobuf::Arena* arena, DnsTest&& from) noexcept
      : DnsTest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kServersFieldNumber = 4,
    kTargetFieldNumber = 1,
    kTimeoutFieldNumber = 2,
    kRecordTypeFieldNumber = 3,
    kPortFieldNumber = 5,
  };
  // repeated string servers = 4 [json_name = "servers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int servers_size() const;
  private:
  int _internal_servers_size() const;

  public:
  void clear_servers() ;
  const std::string& servers(int index) const;
  std::string* mutable_servers(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_servers(int index, Arg_&& value, Args_... args);
  std::string* add_servers();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_servers(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& servers() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_servers();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_servers() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_servers();

  public:
  // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_target() ;
  const std::string& target() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_target(Arg_&& arg, Args_... args);
  std::string* mutable_target();
  PROTOBUF_NODISCARD std::string* release_target();
  void set_allocated_target(std::string* value);

  private:
  const std::string& _internal_target() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_target(
      const std::string& value);
  std::string* _internal_mutable_target();

  public:
  // uint32 timeout = 2 [json_name = "timeout", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  [[deprecated]]  void clear_timeout() ;
  [[deprecated]] ::uint32_t timeout() const;
  [[deprecated]] void set_timeout(::uint32_t value);

  private:
  ::uint32_t _internal_timeout() const;
  void _internal_set_timeout(::uint32_t value);

  public:
  // .kentik.synthetics.v202309.DNSRecord record_type = 3 [json_name = "recordType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_record_type() ;
  ::kentik::synthetics::v202309::DNSRecord record_type() const;
  void set_record_type(::kentik::synthetics::v202309::DNSRecord value);

  private:
  ::kentik::synthetics::v202309::DNSRecord _internal_record_type() const;
  void _internal_set_record_type(::kentik::synthetics::v202309::DNSRecord value);

  public:
  // uint32 port = 5 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_port() ;
  ::uint32_t port() const;
  void set_port(::uint32_t value);

  private:
  ::uint32_t _internal_port() const;
  void _internal_set_port(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.DnsTest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      55, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DnsTest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> servers_;
    ::google::protobuf::internal::ArenaStringPtr target_;
    ::uint32_t timeout_;
    int record_type_;
    ::uint32_t port_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class DisabledMetrics final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.DisabledMetrics) */ {
 public:
  inline DisabledMetrics() : DisabledMetrics(nullptr) {}
  ~DisabledMetrics() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DisabledMetrics* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DisabledMetrics));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DisabledMetrics(
      ::google::protobuf::internal::ConstantInitialized);

  inline DisabledMetrics(const DisabledMetrics& from) : DisabledMetrics(nullptr, from) {}
  inline DisabledMetrics(DisabledMetrics&& from) noexcept
      : DisabledMetrics(nullptr, std::move(from)) {}
  inline DisabledMetrics& operator=(const DisabledMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline DisabledMetrics& operator=(DisabledMetrics&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DisabledMetrics& default_instance() {
    return *internal_default_instance();
  }
  static inline const DisabledMetrics* internal_default_instance() {
    return reinterpret_cast<const DisabledMetrics*>(
        &_DisabledMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(DisabledMetrics& a, DisabledMetrics& b) { a.Swap(&b); }
  inline void Swap(DisabledMetrics* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DisabledMetrics* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DisabledMetrics* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DisabledMetrics>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DisabledMetrics& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DisabledMetrics& from) { DisabledMetrics::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DisabledMetrics* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.DisabledMetrics"; }

 protected:
  explicit DisabledMetrics(::google::protobuf::Arena* arena);
  DisabledMetrics(::google::protobuf::Arena* arena, const DisabledMetrics& from);
  DisabledMetrics(::google::protobuf::Arena* arena, DisabledMetrics&& from) noexcept
      : DisabledMetrics(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPingLatencyFieldNumber = 1,
    kPingJitterFieldNumber = 2,
    kPingPacketLossFieldNumber = 3,
    kHttpLatencyFieldNumber = 4,
    kHttpHeadersFieldNumber = 5,
    kHttpCodesFieldNumber = 6,
    kHttpCertExpiryFieldNumber = 7,
    kTransactionLatencyFieldNumber = 8,
    kDnsLatencyFieldNumber = 9,
    kDnsCodesFieldNumber = 10,
    kDnsIpsFieldNumber = 11,
    kThroughputBandwidthFieldNumber = 12,
  };
  // bool ping_latency = 1 [json_name = "pingLatency"];
  void clear_ping_latency() ;
  bool ping_latency() const;
  void set_ping_latency(bool value);

  private:
  bool _internal_ping_latency() const;
  void _internal_set_ping_latency(bool value);

  public:
  // bool ping_jitter = 2 [json_name = "pingJitter"];
  void clear_ping_jitter() ;
  bool ping_jitter() const;
  void set_ping_jitter(bool value);

  private:
  bool _internal_ping_jitter() const;
  void _internal_set_ping_jitter(bool value);

  public:
  // bool ping_packet_loss = 3 [json_name = "pingPacketLoss"];
  void clear_ping_packet_loss() ;
  bool ping_packet_loss() const;
  void set_ping_packet_loss(bool value);

  private:
  bool _internal_ping_packet_loss() const;
  void _internal_set_ping_packet_loss(bool value);

  public:
  // bool http_latency = 4 [json_name = "httpLatency"];
  void clear_http_latency() ;
  bool http_latency() const;
  void set_http_latency(bool value);

  private:
  bool _internal_http_latency() const;
  void _internal_set_http_latency(bool value);

  public:
  // bool http_headers = 5 [json_name = "httpHeaders"];
  void clear_http_headers() ;
  bool http_headers() const;
  void set_http_headers(bool value);

  private:
  bool _internal_http_headers() const;
  void _internal_set_http_headers(bool value);

  public:
  // bool http_codes = 6 [json_name = "httpCodes"];
  void clear_http_codes() ;
  bool http_codes() const;
  void set_http_codes(bool value);

  private:
  bool _internal_http_codes() const;
  void _internal_set_http_codes(bool value);

  public:
  // bool http_cert_expiry = 7 [json_name = "httpCertExpiry"];
  void clear_http_cert_expiry() ;
  bool http_cert_expiry() const;
  void set_http_cert_expiry(bool value);

  private:
  bool _internal_http_cert_expiry() const;
  void _internal_set_http_cert_expiry(bool value);

  public:
  // bool transaction_latency = 8 [json_name = "transactionLatency"];
  void clear_transaction_latency() ;
  bool transaction_latency() const;
  void set_transaction_latency(bool value);

  private:
  bool _internal_transaction_latency() const;
  void _internal_set_transaction_latency(bool value);

  public:
  // bool dns_latency = 9 [json_name = "dnsLatency"];
  void clear_dns_latency() ;
  bool dns_latency() const;
  void set_dns_latency(bool value);

  private:
  bool _internal_dns_latency() const;
  void _internal_set_dns_latency(bool value);

  public:
  // bool dns_codes = 10 [json_name = "dnsCodes"];
  void clear_dns_codes() ;
  bool dns_codes() const;
  void set_dns_codes(bool value);

  private:
  bool _internal_dns_codes() const;
  void _internal_set_dns_codes(bool value);

  public:
  // bool dns_ips = 11 [json_name = "dnsIps"];
  void clear_dns_ips() ;
  bool dns_ips() const;
  void set_dns_ips(bool value);

  private:
  bool _internal_dns_ips() const;
  void _internal_set_dns_ips(bool value);

  public:
  // bool throughput_bandwidth = 12 [json_name = "throughputBandwidth"];
  void clear_throughput_bandwidth() ;
  bool throughput_bandwidth() const;
  void set_throughput_bandwidth(bool value);

  private:
  bool _internal_throughput_bandwidth() const;
  void _internal_set_throughput_bandwidth(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.DisabledMetrics)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DisabledMetrics& from_msg);
    bool ping_latency_;
    bool ping_jitter_;
    bool ping_packet_loss_;
    bool http_latency_;
    bool http_headers_;
    bool http_codes_;
    bool http_cert_expiry_;
    bool transaction_latency_;
    bool dns_latency_;
    bool dns_codes_;
    bool dns_ips_;
    bool throughput_bandwidth_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class DeleteTestResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.DeleteTestResponse) */ {
 public:
  inline DeleteTestResponse() : DeleteTestResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteTestResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteTestResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteTestResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteTestResponse(const DeleteTestResponse& from) : DeleteTestResponse(nullptr, from) {}
  inline DeleteTestResponse(DeleteTestResponse&& from) noexcept
      : DeleteTestResponse(nullptr, std::move(from)) {}
  inline DeleteTestResponse& operator=(const DeleteTestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteTestResponse& operator=(DeleteTestResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteTestResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteTestResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteTestResponse*>(
        &_DeleteTestResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 62;
  friend void swap(DeleteTestResponse& a, DeleteTestResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteTestResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteTestResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteTestResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeleteTestResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeleteTestResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeleteTestResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.DeleteTestResponse"; }

 protected:
  explicit DeleteTestResponse(::google::protobuf::Arena* arena);
  DeleteTestResponse(::google::protobuf::Arena* arena, const DeleteTestResponse& from);
  DeleteTestResponse(::google::protobuf::Arena* arena, DeleteTestResponse&& from) noexcept
      : DeleteTestResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.DeleteTestResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteTestResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class DeleteTestRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.DeleteTestRequest) */ {
 public:
  inline DeleteTestRequest() : DeleteTestRequest(nullptr) {}
  ~DeleteTestRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteTestRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteTestRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteTestRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteTestRequest(const DeleteTestRequest& from) : DeleteTestRequest(nullptr, from) {}
  inline DeleteTestRequest(DeleteTestRequest&& from) noexcept
      : DeleteTestRequest(nullptr, std::move(from)) {}
  inline DeleteTestRequest& operator=(const DeleteTestRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteTestRequest& operator=(DeleteTestRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteTestRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteTestRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteTestRequest*>(
        &_DeleteTestRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 61;
  friend void swap(DeleteTestRequest& a, DeleteTestRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteTestRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteTestRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteTestRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteTestRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteTestRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteTestRequest& from) { DeleteTestRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteTestRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.DeleteTestRequest"; }

 protected:
  explicit DeleteTestRequest(::google::protobuf::Arena* arena);
  DeleteTestRequest(::google::protobuf::Arena* arena, const DeleteTestRequest& from);
  DeleteTestRequest(::google::protobuf::Arena* arena, DeleteTestRequest&& from) noexcept
      : DeleteTestRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.DeleteTestRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      54, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteTestRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class DeleteAgentResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.DeleteAgentResponse) */ {
 public:
  inline DeleteAgentResponse() : DeleteAgentResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteAgentResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteAgentResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteAgentResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteAgentResponse(const DeleteAgentResponse& from) : DeleteAgentResponse(nullptr, from) {}
  inline DeleteAgentResponse(DeleteAgentResponse&& from) noexcept
      : DeleteAgentResponse(nullptr, std::move(from)) {}
  inline DeleteAgentResponse& operator=(const DeleteAgentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteAgentResponse& operator=(DeleteAgentResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteAgentResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteAgentResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteAgentResponse*>(
        &_DeleteAgentResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 52;
  friend void swap(DeleteAgentResponse& a, DeleteAgentResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteAgentResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteAgentResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteAgentResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeleteAgentResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeleteAgentResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeleteAgentResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.DeleteAgentResponse"; }

 protected:
  explicit DeleteAgentResponse(::google::protobuf::Arena* arena);
  DeleteAgentResponse(::google::protobuf::Arena* arena, const DeleteAgentResponse& from);
  DeleteAgentResponse(::google::protobuf::Arena* arena, DeleteAgentResponse&& from) noexcept
      : DeleteAgentResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.DeleteAgentResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteAgentResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class DeleteAgentRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.DeleteAgentRequest) */ {
 public:
  inline DeleteAgentRequest() : DeleteAgentRequest(nullptr) {}
  ~DeleteAgentRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteAgentRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteAgentRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteAgentRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteAgentRequest(const DeleteAgentRequest& from) : DeleteAgentRequest(nullptr, from) {}
  inline DeleteAgentRequest(DeleteAgentRequest&& from) noexcept
      : DeleteAgentRequest(nullptr, std::move(from)) {}
  inline DeleteAgentRequest& operator=(const DeleteAgentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteAgentRequest& operator=(DeleteAgentRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteAgentRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteAgentRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteAgentRequest*>(
        &_DeleteAgentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 51;
  friend void swap(DeleteAgentRequest& a, DeleteAgentRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteAgentRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteAgentRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteAgentRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteAgentRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteAgentRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteAgentRequest& from) { DeleteAgentRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteAgentRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.DeleteAgentRequest"; }

 protected:
  explicit DeleteAgentRequest(::google::protobuf::Arena* arena);
  DeleteAgentRequest(::google::protobuf::Arena* arena, const DeleteAgentRequest& from);
  DeleteAgentRequest(::google::protobuf::Arena* arena, DeleteAgentRequest&& from) noexcept
      : DeleteAgentRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.DeleteAgentRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      55, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteAgentRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class DeleteAgentAlertResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.DeleteAgentAlertResponse) */ {
 public:
  inline DeleteAgentAlertResponse() : DeleteAgentAlertResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteAgentAlertResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteAgentAlertResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteAgentAlertResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteAgentAlertResponse(const DeleteAgentAlertResponse& from) : DeleteAgentAlertResponse(nullptr, from) {}
  inline DeleteAgentAlertResponse(DeleteAgentAlertResponse&& from) noexcept
      : DeleteAgentAlertResponse(nullptr, std::move(from)) {}
  inline DeleteAgentAlertResponse& operator=(const DeleteAgentAlertResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteAgentAlertResponse& operator=(DeleteAgentAlertResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteAgentAlertResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteAgentAlertResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteAgentAlertResponse*>(
        &_DeleteAgentAlertResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 75;
  friend void swap(DeleteAgentAlertResponse& a, DeleteAgentAlertResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteAgentAlertResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteAgentAlertResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteAgentAlertResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeleteAgentAlertResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeleteAgentAlertResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeleteAgentAlertResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.DeleteAgentAlertResponse"; }

 protected:
  explicit DeleteAgentAlertResponse(::google::protobuf::Arena* arena);
  DeleteAgentAlertResponse(::google::protobuf::Arena* arena, const DeleteAgentAlertResponse& from);
  DeleteAgentAlertResponse(::google::protobuf::Arena* arena, DeleteAgentAlertResponse&& from) noexcept
      : DeleteAgentAlertResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.DeleteAgentAlertResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteAgentAlertResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class DeleteAgentAlertRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.DeleteAgentAlertRequest) */ {
 public:
  inline DeleteAgentAlertRequest() : DeleteAgentAlertRequest(nullptr) {}
  ~DeleteAgentAlertRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteAgentAlertRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteAgentAlertRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteAgentAlertRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteAgentAlertRequest(const DeleteAgentAlertRequest& from) : DeleteAgentAlertRequest(nullptr, from) {}
  inline DeleteAgentAlertRequest(DeleteAgentAlertRequest&& from) noexcept
      : DeleteAgentAlertRequest(nullptr, std::move(from)) {}
  inline DeleteAgentAlertRequest& operator=(const DeleteAgentAlertRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteAgentAlertRequest& operator=(DeleteAgentAlertRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteAgentAlertRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteAgentAlertRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteAgentAlertRequest*>(
        &_DeleteAgentAlertRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 74;
  friend void swap(DeleteAgentAlertRequest& a, DeleteAgentAlertRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteAgentAlertRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteAgentAlertRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteAgentAlertRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteAgentAlertRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteAgentAlertRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteAgentAlertRequest& from) { DeleteAgentAlertRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteAgentAlertRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.DeleteAgentAlertRequest"; }

 protected:
  explicit DeleteAgentAlertRequest(::google::protobuf::Arena* arena);
  DeleteAgentAlertRequest(::google::protobuf::Arena* arena, const DeleteAgentAlertRequest& from);
  DeleteAgentAlertRequest(::google::protobuf::Arena* arena, DeleteAgentAlertRequest&& from) noexcept
      : DeleteAgentAlertRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.DeleteAgentAlertRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      60, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteAgentAlertRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class DNSResponseData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.DNSResponseData) */ {
 public:
  inline DNSResponseData() : DNSResponseData(nullptr) {}
  ~DNSResponseData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DNSResponseData* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DNSResponseData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DNSResponseData(
      ::google::protobuf::internal::ConstantInitialized);

  inline DNSResponseData(const DNSResponseData& from) : DNSResponseData(nullptr, from) {}
  inline DNSResponseData(DNSResponseData&& from) noexcept
      : DNSResponseData(nullptr, std::move(from)) {}
  inline DNSResponseData& operator=(const DNSResponseData& from) {
    CopyFrom(from);
    return *this;
  }
  inline DNSResponseData& operator=(DNSResponseData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DNSResponseData& default_instance() {
    return *internal_default_instance();
  }
  static inline const DNSResponseData* internal_default_instance() {
    return reinterpret_cast<const DNSResponseData*>(
        &_DNSResponseData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(DNSResponseData& a, DNSResponseData& b) { a.Swap(&b); }
  inline void Swap(DNSResponseData* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DNSResponseData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DNSResponseData* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DNSResponseData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DNSResponseData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DNSResponseData& from) { DNSResponseData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DNSResponseData* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.DNSResponseData"; }

 protected:
  explicit DNSResponseData(::google::protobuf::Arena* arena);
  DNSResponseData(::google::protobuf::Arena* arena, const DNSResponseData& from);
  DNSResponseData(::google::protobuf::Arena* arena, DNSResponseData&& from) noexcept
      : DNSResponseData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // string data = 2 [json_name = "data", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // uint32 status = 1 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_status() ;
  ::uint32_t status() const;
  void set_status(::uint32_t value);

  private:
  ::uint32_t _internal_status() const;
  void _internal_set_status(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.DNSResponseData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      54, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DNSResponseData& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::uint32_t status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class CreateAgentAlertRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.CreateAgentAlertRequest) */ {
 public:
  inline CreateAgentAlertRequest() : CreateAgentAlertRequest(nullptr) {}
  ~CreateAgentAlertRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateAgentAlertRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateAgentAlertRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateAgentAlertRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateAgentAlertRequest(const CreateAgentAlertRequest& from) : CreateAgentAlertRequest(nullptr, from) {}
  inline CreateAgentAlertRequest(CreateAgentAlertRequest&& from) noexcept
      : CreateAgentAlertRequest(nullptr, std::move(from)) {}
  inline CreateAgentAlertRequest& operator=(const CreateAgentAlertRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateAgentAlertRequest& operator=(CreateAgentAlertRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateAgentAlertRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateAgentAlertRequest* internal_default_instance() {
    return reinterpret_cast<const CreateAgentAlertRequest*>(
        &_CreateAgentAlertRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 66;
  friend void swap(CreateAgentAlertRequest& a, CreateAgentAlertRequest& b) { a.Swap(&b); }
  inline void Swap(CreateAgentAlertRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateAgentAlertRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateAgentAlertRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateAgentAlertRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateAgentAlertRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateAgentAlertRequest& from) { CreateAgentAlertRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateAgentAlertRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.CreateAgentAlertRequest"; }

 protected:
  explicit CreateAgentAlertRequest(::google::protobuf::Arena* arena);
  CreateAgentAlertRequest(::google::protobuf::Arena* arena, const CreateAgentAlertRequest& from);
  CreateAgentAlertRequest(::google::protobuf::Arena* arena, CreateAgentAlertRequest&& from) noexcept
      : CreateAgentAlertRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNotificationChannelIdsFieldNumber = 2,
    kAgentIdFieldNumber = 3,
    kThresholdSecondsFieldNumber = 1,
  };
  // repeated string notification_channel_ids = 2 [json_name = "notificationChannelIds"];
  int notification_channel_ids_size() const;
  private:
  int _internal_notification_channel_ids_size() const;

  public:
  void clear_notification_channel_ids() ;
  const std::string& notification_channel_ids(int index) const;
  std::string* mutable_notification_channel_ids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_notification_channel_ids(int index, Arg_&& value, Args_... args);
  std::string* add_notification_channel_ids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_notification_channel_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& notification_channel_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_notification_channel_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_notification_channel_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_notification_channel_ids();

  public:
  // string agent_id = 3 [json_name = "agentId"];
  void clear_agent_id() ;
  const std::string& agent_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_agent_id(Arg_&& arg, Args_... args);
  std::string* mutable_agent_id();
  PROTOBUF_NODISCARD std::string* release_agent_id();
  void set_allocated_agent_id(std::string* value);

  private:
  const std::string& _internal_agent_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_agent_id(
      const std::string& value);
  std::string* _internal_mutable_agent_id();

  public:
  // uint32 threshold_seconds = 1 [json_name = "thresholdSeconds"];
  void clear_threshold_seconds() ;
  ::uint32_t threshold_seconds() const;
  void set_threshold_seconds(::uint32_t value);

  private:
  ::uint32_t _internal_threshold_seconds() const;
  void _internal_set_threshold_seconds(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.CreateAgentAlertRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      90, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateAgentAlertRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> notification_channel_ids_;
    ::google::protobuf::internal::ArenaStringPtr agent_id_;
    ::uint32_t threshold_seconds_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class AlertingSettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.AlertingSettings) */ {
 public:
  inline AlertingSettings() : AlertingSettings(nullptr) {}
  ~AlertingSettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AlertingSettings* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AlertingSettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AlertingSettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline AlertingSettings(const AlertingSettings& from) : AlertingSettings(nullptr, from) {}
  inline AlertingSettings(AlertingSettings&& from) noexcept
      : AlertingSettings(nullptr, std::move(from)) {}
  inline AlertingSettings& operator=(const AlertingSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline AlertingSettings& operator=(AlertingSettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AlertingSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const AlertingSettings* internal_default_instance() {
    return reinterpret_cast<const AlertingSettings*>(
        &_AlertingSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(AlertingSettings& a, AlertingSettings& b) { a.Swap(&b); }
  inline void Swap(AlertingSettings* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AlertingSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AlertingSettings* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AlertingSettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AlertingSettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AlertingSettings& from) { AlertingSettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AlertingSettings* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.AlertingSettings"; }

 protected:
  explicit AlertingSettings(::google::protobuf::Arena* arena);
  AlertingSettings(::google::protobuf::Arena* arena, const AlertingSettings& from);
  AlertingSettings(::google::protobuf::Arena* arena, AlertingSettings&& from) noexcept
      : AlertingSettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDisableWarningNotificationsFieldNumber = 1,
  };
  // bool disable_warning_notifications = 1 [json_name = "disableWarningNotifications", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_disable_warning_notifications() ;
  bool disable_warning_notifications() const;
  void set_disable_warning_notifications(bool value);

  private:
  bool _internal_disable_warning_notifications() const;
  void _internal_set_disable_warning_notifications(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.AlertingSettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AlertingSettings& from_msg);
    bool disable_warning_notifications_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class AgentTest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.AgentTest) */ {
 public:
  inline AgentTest() : AgentTest(nullptr) {}
  ~AgentTest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AgentTest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AgentTest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AgentTest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AgentTest(const AgentTest& from) : AgentTest(nullptr, from) {}
  inline AgentTest(AgentTest&& from) noexcept
      : AgentTest(nullptr, std::move(from)) {}
  inline AgentTest& operator=(const AgentTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgentTest& operator=(AgentTest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AgentTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AgentTest* internal_default_instance() {
    return reinterpret_cast<const AgentTest*>(
        &_AgentTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(AgentTest& a, AgentTest& b) { a.Swap(&b); }
  inline void Swap(AgentTest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgentTest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AgentTest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AgentTest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AgentTest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AgentTest& from) { AgentTest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AgentTest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.AgentTest"; }

 protected:
  explicit AgentTest(::google::protobuf::Arena* arena);
  AgentTest(::google::protobuf::Arena* arena, const AgentTest& from);
  AgentTest(::google::protobuf::Arena* arena, AgentTest&& from) noexcept
      : AgentTest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetFieldNumber = 1,
    kUseLocalIpFieldNumber = 2,
    kReciprocalFieldNumber = 3,
  };
  // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_target() ;
  const std::string& target() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_target(Arg_&& arg, Args_... args);
  std::string* mutable_target();
  PROTOBUF_NODISCARD std::string* release_target();
  void set_allocated_target(std::string* value);

  private:
  const std::string& _internal_target() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_target(
      const std::string& value);
  std::string* _internal_mutable_target();

  public:
  // bool use_local_ip = 2 [json_name = "useLocalIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_use_local_ip() ;
  bool use_local_ip() const;
  void set_use_local_ip(bool value);

  private:
  bool _internal_use_local_ip() const;
  void _internal_set_use_local_ip(bool value);

  public:
  // bool reciprocal = 3 [json_name = "reciprocal", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_reciprocal() ;
  bool reciprocal() const;
  void set_reciprocal(bool value);

  private:
  bool _internal_reciprocal() const;
  void _internal_set_reciprocal(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.AgentTest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      50, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AgentTest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr target_;
    bool use_local_ip_;
    bool reciprocal_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class AgentMetadata_IpValue final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.AgentMetadata.IpValue) */ {
 public:
  inline AgentMetadata_IpValue() : AgentMetadata_IpValue(nullptr) {}
  ~AgentMetadata_IpValue() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AgentMetadata_IpValue* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AgentMetadata_IpValue));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AgentMetadata_IpValue(
      ::google::protobuf::internal::ConstantInitialized);

  inline AgentMetadata_IpValue(const AgentMetadata_IpValue& from) : AgentMetadata_IpValue(nullptr, from) {}
  inline AgentMetadata_IpValue(AgentMetadata_IpValue&& from) noexcept
      : AgentMetadata_IpValue(nullptr, std::move(from)) {}
  inline AgentMetadata_IpValue& operator=(const AgentMetadata_IpValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgentMetadata_IpValue& operator=(AgentMetadata_IpValue&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AgentMetadata_IpValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const AgentMetadata_IpValue* internal_default_instance() {
    return reinterpret_cast<const AgentMetadata_IpValue*>(
        &_AgentMetadata_IpValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(AgentMetadata_IpValue& a, AgentMetadata_IpValue& b) { a.Swap(&b); }
  inline void Swap(AgentMetadata_IpValue* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgentMetadata_IpValue* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AgentMetadata_IpValue* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AgentMetadata_IpValue>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AgentMetadata_IpValue& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AgentMetadata_IpValue& from) { AgentMetadata_IpValue::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AgentMetadata_IpValue* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.AgentMetadata.IpValue"; }

 protected:
  explicit AgentMetadata_IpValue(::google::protobuf::Arena* arena);
  AgentMetadata_IpValue(::google::protobuf::Arena* arena, const AgentMetadata_IpValue& from);
  AgentMetadata_IpValue(::google::protobuf::Arena* arena, AgentMetadata_IpValue&& from) noexcept
      : AgentMetadata_IpValue(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
  };
  // string value = 1 [json_name = "value"];
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.AgentMetadata.IpValue)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AgentMetadata_IpValue& from_msg);
    ::google::protobuf::internal::ArenaStringPtr value_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class AgentAlert final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.AgentAlert) */ {
 public:
  inline AgentAlert() : AgentAlert(nullptr) {}
  ~AgentAlert() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AgentAlert* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AgentAlert));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AgentAlert(
      ::google::protobuf::internal::ConstantInitialized);

  inline AgentAlert(const AgentAlert& from) : AgentAlert(nullptr, from) {}
  inline AgentAlert(AgentAlert&& from) noexcept
      : AgentAlert(nullptr, std::move(from)) {}
  inline AgentAlert& operator=(const AgentAlert& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgentAlert& operator=(AgentAlert&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AgentAlert& default_instance() {
    return *internal_default_instance();
  }
  static inline const AgentAlert* internal_default_instance() {
    return reinterpret_cast<const AgentAlert*>(
        &_AgentAlert_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 65;
  friend void swap(AgentAlert& a, AgentAlert& b) { a.Swap(&b); }
  inline void Swap(AgentAlert* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgentAlert* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AgentAlert* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AgentAlert>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AgentAlert& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AgentAlert& from) { AgentAlert::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AgentAlert* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.AgentAlert"; }

 protected:
  explicit AgentAlert(::google::protobuf::Arena* arena);
  AgentAlert(::google::protobuf::Arena* arena, const AgentAlert& from);
  AgentAlert(::google::protobuf::Arena* arena, AgentAlert&& from) noexcept
      : AgentAlert(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNotificationChannelIdsFieldNumber = 3,
    kIdFieldNumber = 1,
    kAgentIdFieldNumber = 4,
    kAgentNameFieldNumber = 5,
    kThresholdSecondsFieldNumber = 2,
  };
  // repeated string notification_channel_ids = 3 [json_name = "notificationChannelIds"];
  int notification_channel_ids_size() const;
  private:
  int _internal_notification_channel_ids_size() const;

  public:
  void clear_notification_channel_ids() ;
  const std::string& notification_channel_ids(int index) const;
  std::string* mutable_notification_channel_ids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_notification_channel_ids(int index, Arg_&& value, Args_... args);
  std::string* add_notification_channel_ids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_notification_channel_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& notification_channel_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_notification_channel_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_notification_channel_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_notification_channel_ids();

  public:
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string agent_id = 4 [json_name = "agentId"];
  void clear_agent_id() ;
  const std::string& agent_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_agent_id(Arg_&& arg, Args_... args);
  std::string* mutable_agent_id();
  PROTOBUF_NODISCARD std::string* release_agent_id();
  void set_allocated_agent_id(std::string* value);

  private:
  const std::string& _internal_agent_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_agent_id(
      const std::string& value);
  std::string* _internal_mutable_agent_id();

  public:
  // string agent_name = 5 [json_name = "agentName"];
  void clear_agent_name() ;
  const std::string& agent_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_agent_name(Arg_&& arg, Args_... args);
  std::string* mutable_agent_name();
  PROTOBUF_NODISCARD std::string* release_agent_name();
  void set_allocated_agent_name(std::string* value);

  private:
  const std::string& _internal_agent_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_agent_name(
      const std::string& value);
  std::string* _internal_mutable_agent_name();

  public:
  // uint32 threshold_seconds = 2 [json_name = "thresholdSeconds"];
  void clear_threshold_seconds() ;
  ::uint32_t threshold_seconds() const;
  void set_threshold_seconds(::uint32_t value);

  private:
  ::uint32_t _internal_threshold_seconds() const;
  void _internal_set_threshold_seconds(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.AgentAlert)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      89, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AgentAlert& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> notification_channel_ids_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr agent_id_;
    ::google::protobuf::internal::ArenaStringPtr agent_name_;
    ::uint32_t threshold_seconds_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class ActivationSettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.ActivationSettings) */ {
 public:
  inline ActivationSettings() : ActivationSettings(nullptr) {}
  ~ActivationSettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ActivationSettings* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ActivationSettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ActivationSettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline ActivationSettings(const ActivationSettings& from) : ActivationSettings(nullptr, from) {}
  inline ActivationSettings(ActivationSettings&& from) noexcept
      : ActivationSettings(nullptr, std::move(from)) {}
  inline ActivationSettings& operator=(const ActivationSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActivationSettings& operator=(ActivationSettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ActivationSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const ActivationSettings* internal_default_instance() {
    return reinterpret_cast<const ActivationSettings*>(
        &_ActivationSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(ActivationSettings& a, ActivationSettings& b) { a.Swap(&b); }
  inline void Swap(ActivationSettings* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActivationSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ActivationSettings* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ActivationSettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ActivationSettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ActivationSettings& from) { ActivationSettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ActivationSettings* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.ActivationSettings"; }

 protected:
  explicit ActivationSettings(::google::protobuf::Arena* arena);
  ActivationSettings(::google::protobuf::Arena* arena, const ActivationSettings& from);
  ActivationSettings(::google::protobuf::Arena* arena, ActivationSettings&& from) noexcept
      : ActivationSettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGracePeriodFieldNumber = 1,
    kTimeUnitFieldNumber = 2,
    kTimeWindowFieldNumber = 3,
    kTimesFieldNumber = 4,
  };
  // string grace_period = 1 [json_name = "gracePeriod", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_grace_period() ;
  const std::string& grace_period() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_grace_period(Arg_&& arg, Args_... args);
  std::string* mutable_grace_period();
  PROTOBUF_NODISCARD std::string* release_grace_period();
  void set_allocated_grace_period(std::string* value);

  private:
  const std::string& _internal_grace_period() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_grace_period(
      const std::string& value);
  std::string* _internal_mutable_grace_period();

  public:
  // string time_unit = 2 [json_name = "timeUnit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_time_unit() ;
  const std::string& time_unit() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_time_unit(Arg_&& arg, Args_... args);
  std::string* mutable_time_unit();
  PROTOBUF_NODISCARD std::string* release_time_unit();
  void set_allocated_time_unit(std::string* value);

  private:
  const std::string& _internal_time_unit() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_time_unit(
      const std::string& value);
  std::string* _internal_mutable_time_unit();

  public:
  // string time_window = 3 [json_name = "timeWindow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_time_window() ;
  const std::string& time_window() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_time_window(Arg_&& arg, Args_... args);
  std::string* mutable_time_window();
  PROTOBUF_NODISCARD std::string* release_time_window();
  void set_allocated_time_window(std::string* value);

  private:
  const std::string& _internal_time_window() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_time_window(
      const std::string& value);
  std::string* _internal_mutable_time_window();

  public:
  // string times = 4 [json_name = "times", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_times() ;
  const std::string& times() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_times(Arg_&& arg, Args_... args);
  std::string* mutable_times();
  PROTOBUF_NODISCARD std::string* release_times();
  void set_allocated_times(std::string* value);

  private:
  const std::string& _internal_times() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_times(
      const std::string& value);
  std::string* _internal_mutable_times();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.ActivationSettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      90, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ActivationSettings& from_msg);
    ::google::protobuf::internal::ArenaStringPtr grace_period_;
    ::google::protobuf::internal::ArenaStringPtr time_unit_;
    ::google::protobuf::internal::ArenaStringPtr time_window_;
    ::google::protobuf::internal::ArenaStringPtr times_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class UrlTest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.UrlTest) */ {
 public:
  inline UrlTest() : UrlTest(nullptr) {}
  ~UrlTest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UrlTest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UrlTest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UrlTest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UrlTest(const UrlTest& from) : UrlTest(nullptr, from) {}
  inline UrlTest(UrlTest&& from) noexcept
      : UrlTest(nullptr, std::move(from)) {}
  inline UrlTest& operator=(const UrlTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UrlTest& operator=(UrlTest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UrlTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UrlTest* internal_default_instance() {
    return reinterpret_cast<const UrlTest*>(
        &_UrlTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(UrlTest& a, UrlTest& b) { a.Swap(&b); }
  inline void Swap(UrlTest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UrlTest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UrlTest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UrlTest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UrlTest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UrlTest& from) { UrlTest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UrlTest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.UrlTest"; }

 protected:
  explicit UrlTest(::google::protobuf::Arena* arena);
  UrlTest(::google::protobuf::Arena* arena, const UrlTest& from);
  UrlTest(::google::protobuf::Arena* arena, UrlTest&& from) noexcept
      : UrlTest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeadersFieldNumber = 4,
    kTargetFieldNumber = 1,
    kMethodFieldNumber = 3,
    kBodyFieldNumber = 5,
    kTimeoutFieldNumber = 2,
    kIgnoreTlsErrorsFieldNumber = 6,
  };
  // map<string, string> headers = 4 [json_name = "headers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int headers_size() const;
  private:
  int _internal_headers_size() const;

  public:
  void clear_headers() ;
  const ::google::protobuf::Map<std::string, std::string>& headers() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_headers();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_headers() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_headers();

  public:
  // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_target() ;
  const std::string& target() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_target(Arg_&& arg, Args_... args);
  std::string* mutable_target();
  PROTOBUF_NODISCARD std::string* release_target();
  void set_allocated_target(std::string* value);

  private:
  const std::string& _internal_target() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_target(
      const std::string& value);
  std::string* _internal_mutable_target();

  public:
  // string method = 3 [json_name = "method", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_method() ;
  const std::string& method() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_method(Arg_&& arg, Args_... args);
  std::string* mutable_method();
  PROTOBUF_NODISCARD std::string* release_method();
  void set_allocated_method(std::string* value);

  private:
  const std::string& _internal_method() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_method(
      const std::string& value);
  std::string* _internal_mutable_method();

  public:
  // string body = 5 [json_name = "body", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_body() ;
  const std::string& body() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_body(Arg_&& arg, Args_... args);
  std::string* mutable_body();
  PROTOBUF_NODISCARD std::string* release_body();
  void set_allocated_body(std::string* value);

  private:
  const std::string& _internal_body() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_body(
      const std::string& value);
  std::string* _internal_mutable_body();

  public:
  // uint32 timeout = 2 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_timeout() ;
  ::uint32_t timeout() const;
  void set_timeout(::uint32_t value);

  private:
  ::uint32_t _internal_timeout() const;
  void _internal_set_timeout(::uint32_t value);

  public:
  // bool ignore_tls_errors = 6 [json_name = "ignoreTlsErrors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_ignore_tls_errors() ;
  bool ignore_tls_errors() const;
  void set_ignore_tls_errors(bool value);

  private:
  bool _internal_ignore_tls_errors() const;
  void _internal_set_ignore_tls_errors(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.UrlTest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      65, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UrlTest& from_msg);
    ::google::protobuf::internal::MapField<UrlTest_HeadersEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        headers_;
    ::google::protobuf::internal::ArenaStringPtr target_;
    ::google::protobuf::internal::ArenaStringPtr method_;
    ::google::protobuf::internal::ArenaStringPtr body_;
    ::uint32_t timeout_;
    bool ignore_tls_errors_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class UpdateAgentAlertResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.UpdateAgentAlertResponse) */ {
 public:
  inline UpdateAgentAlertResponse() : UpdateAgentAlertResponse(nullptr) {}
  ~UpdateAgentAlertResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateAgentAlertResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateAgentAlertResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateAgentAlertResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateAgentAlertResponse(const UpdateAgentAlertResponse& from) : UpdateAgentAlertResponse(nullptr, from) {}
  inline UpdateAgentAlertResponse(UpdateAgentAlertResponse&& from) noexcept
      : UpdateAgentAlertResponse(nullptr, std::move(from)) {}
  inline UpdateAgentAlertResponse& operator=(const UpdateAgentAlertResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateAgentAlertResponse& operator=(UpdateAgentAlertResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateAgentAlertResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateAgentAlertResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateAgentAlertResponse*>(
        &_UpdateAgentAlertResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 69;
  friend void swap(UpdateAgentAlertResponse& a, UpdateAgentAlertResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateAgentAlertResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateAgentAlertResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateAgentAlertResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateAgentAlertResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateAgentAlertResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateAgentAlertResponse& from) { UpdateAgentAlertResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateAgentAlertResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.UpdateAgentAlertResponse"; }

 protected:
  explicit UpdateAgentAlertResponse(::google::protobuf::Arena* arena);
  UpdateAgentAlertResponse(::google::protobuf::Arena* arena, const UpdateAgentAlertResponse& from);
  UpdateAgentAlertResponse(::google::protobuf::Arena* arena, UpdateAgentAlertResponse&& from) noexcept
      : UpdateAgentAlertResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAgentAlertFieldNumber = 1,
  };
  // .kentik.synthetics.v202309.AgentAlert agent_alert = 1 [json_name = "agentAlert"];
  bool has_agent_alert() const;
  void clear_agent_alert() ;
  const ::kentik::synthetics::v202309::AgentAlert& agent_alert() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::AgentAlert* release_agent_alert();
  ::kentik::synthetics::v202309::AgentAlert* mutable_agent_alert();
  void set_allocated_agent_alert(::kentik::synthetics::v202309::AgentAlert* value);
  void unsafe_arena_set_allocated_agent_alert(::kentik::synthetics::v202309::AgentAlert* value);
  ::kentik::synthetics::v202309::AgentAlert* unsafe_arena_release_agent_alert();

  private:
  const ::kentik::synthetics::v202309::AgentAlert& _internal_agent_alert() const;
  ::kentik::synthetics::v202309::AgentAlert* _internal_mutable_agent_alert();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.UpdateAgentAlertResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateAgentAlertResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::synthetics::v202309::AgentAlert* agent_alert_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class PingResults final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.PingResults) */ {
 public:
  inline PingResults() : PingResults(nullptr) {}
  ~PingResults() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PingResults* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PingResults));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PingResults(
      ::google::protobuf::internal::ConstantInitialized);

  inline PingResults(const PingResults& from) : PingResults(nullptr, from) {}
  inline PingResults(PingResults&& from) noexcept
      : PingResults(nullptr, std::move(from)) {}
  inline PingResults& operator=(const PingResults& from) {
    CopyFrom(from);
    return *this;
  }
  inline PingResults& operator=(PingResults&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PingResults& default_instance() {
    return *internal_default_instance();
  }
  static inline const PingResults* internal_default_instance() {
    return reinterpret_cast<const PingResults*>(
        &_PingResults_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(PingResults& a, PingResults& b) { a.Swap(&b); }
  inline void Swap(PingResults* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PingResults* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PingResults* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PingResults>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PingResults& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PingResults& from) { PingResults::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PingResults* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.PingResults"; }

 protected:
  explicit PingResults(::google::protobuf::Arena* arena);
  PingResults(::google::protobuf::Arena* arena, const PingResults& from);
  PingResults(::google::protobuf::Arena* arena, PingResults&& from) noexcept
      : PingResults(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetFieldNumber = 1,
    kDstIpFieldNumber = 5,
    kPacketLossFieldNumber = 2,
    kLatencyFieldNumber = 3,
    kJitterFieldNumber = 4,
  };
  // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_target() ;
  const std::string& target() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_target(Arg_&& arg, Args_... args);
  std::string* mutable_target();
  PROTOBUF_NODISCARD std::string* release_target();
  void set_allocated_target(std::string* value);

  private:
  const std::string& _internal_target() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_target(
      const std::string& value);
  std::string* _internal_mutable_target();

  public:
  // string dst_ip = 5 [json_name = "dstIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_dst_ip() ;
  const std::string& dst_ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dst_ip(Arg_&& arg, Args_... args);
  std::string* mutable_dst_ip();
  PROTOBUF_NODISCARD std::string* release_dst_ip();
  void set_allocated_dst_ip(std::string* value);

  private:
  const std::string& _internal_dst_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dst_ip(
      const std::string& value);
  std::string* _internal_mutable_dst_ip();

  public:
  // .kentik.synthetics.v202309.PacketLossData packet_loss = 2 [json_name = "packetLoss", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_packet_loss() const;
  void clear_packet_loss() ;
  const ::kentik::synthetics::v202309::PacketLossData& packet_loss() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::PacketLossData* release_packet_loss();
  ::kentik::synthetics::v202309::PacketLossData* mutable_packet_loss();
  void set_allocated_packet_loss(::kentik::synthetics::v202309::PacketLossData* value);
  void unsafe_arena_set_allocated_packet_loss(::kentik::synthetics::v202309::PacketLossData* value);
  ::kentik::synthetics::v202309::PacketLossData* unsafe_arena_release_packet_loss();

  private:
  const ::kentik::synthetics::v202309::PacketLossData& _internal_packet_loss() const;
  ::kentik::synthetics::v202309::PacketLossData* _internal_mutable_packet_loss();

  public:
  // .kentik.synthetics.v202309.MetricData latency = 3 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_latency() const;
  void clear_latency() ;
  const ::kentik::synthetics::v202309::MetricData& latency() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::MetricData* release_latency();
  ::kentik::synthetics::v202309::MetricData* mutable_latency();
  void set_allocated_latency(::kentik::synthetics::v202309::MetricData* value);
  void unsafe_arena_set_allocated_latency(::kentik::synthetics::v202309::MetricData* value);
  ::kentik::synthetics::v202309::MetricData* unsafe_arena_release_latency();

  private:
  const ::kentik::synthetics::v202309::MetricData& _internal_latency() const;
  ::kentik::synthetics::v202309::MetricData* _internal_mutable_latency();

  public:
  // .kentik.synthetics.v202309.MetricData jitter = 4 [json_name = "jitter", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_jitter() const;
  void clear_jitter() ;
  const ::kentik::synthetics::v202309::MetricData& jitter() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::MetricData* release_jitter();
  ::kentik::synthetics::v202309::MetricData* mutable_jitter();
  void set_allocated_jitter(::kentik::synthetics::v202309::MetricData* value);
  void unsafe_arena_set_allocated_jitter(::kentik::synthetics::v202309::MetricData* value);
  ::kentik::synthetics::v202309::MetricData* unsafe_arena_release_jitter();

  private:
  const ::kentik::synthetics::v202309::MetricData& _internal_jitter() const;
  ::kentik::synthetics::v202309::MetricData* _internal_mutable_jitter();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.PingResults)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 3,
      58, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PingResults& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr target_;
    ::google::protobuf::internal::ArenaStringPtr dst_ip_;
    ::kentik::synthetics::v202309::PacketLossData* packet_loss_;
    ::kentik::synthetics::v202309::MetricData* latency_;
    ::kentik::synthetics::v202309::MetricData* jitter_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class PathTrace final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.PathTrace) */ {
 public:
  inline PathTrace() : PathTrace(nullptr) {}
  ~PathTrace() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PathTrace* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PathTrace));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PathTrace(
      ::google::protobuf::internal::ConstantInitialized);

  inline PathTrace(const PathTrace& from) : PathTrace(nullptr, from) {}
  inline PathTrace(PathTrace&& from) noexcept
      : PathTrace(nullptr, std::move(from)) {}
  inline PathTrace& operator=(const PathTrace& from) {
    CopyFrom(from);
    return *this;
  }
  inline PathTrace& operator=(PathTrace&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PathTrace& default_instance() {
    return *internal_default_instance();
  }
  static inline const PathTrace* internal_default_instance() {
    return reinterpret_cast<const PathTrace*>(
        &_PathTrace_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(PathTrace& a, PathTrace& b) { a.Swap(&b); }
  inline void Swap(PathTrace* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PathTrace* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PathTrace* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PathTrace>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PathTrace& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PathTrace& from) { PathTrace::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PathTrace* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.PathTrace"; }

 protected:
  explicit PathTrace(::google::protobuf::Arena* arena);
  PathTrace(::google::protobuf::Arena* arena, const PathTrace& from);
  PathTrace(::google::protobuf::Arena* arena, PathTrace&& from) noexcept
      : PathTrace(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAsPathFieldNumber = 1,
    kHopsFieldNumber = 6,
    kIsCompleteFieldNumber = 2,
  };
  // repeated int32 as_path = 1 [json_name = "asPath", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int as_path_size() const;
  private:
  int _internal_as_path_size() const;

  public:
  void clear_as_path() ;
  ::int32_t as_path(int index) const;
  void set_as_path(int index, ::int32_t value);
  void add_as_path(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& as_path() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_as_path();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_as_path() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_as_path();

  public:
  // repeated .kentik.synthetics.v202309.TraceHop hops = 6 [json_name = "hops", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int hops_size() const;
  private:
  int _internal_hops_size() const;

  public:
  void clear_hops() ;
  ::kentik::synthetics::v202309::TraceHop* mutable_hops(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TraceHop>* mutable_hops();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TraceHop>& _internal_hops() const;
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TraceHop>* _internal_mutable_hops();
  public:
  const ::kentik::synthetics::v202309::TraceHop& hops(int index) const;
  ::kentik::synthetics::v202309::TraceHop* add_hops();
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TraceHop>& hops() const;
  // bool is_complete = 2 [json_name = "isComplete", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_is_complete() ;
  bool is_complete() const;
  void set_is_complete(bool value);

  private:
  bool _internal_is_complete() const;
  void _internal_set_is_complete(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.PathTrace)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 3, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PathTrace& from_msg);
    ::google::protobuf::RepeatedField<::int32_t> as_path_;
    ::google::protobuf::internal::CachedSize _as_path_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField< ::kentik::synthetics::v202309::TraceHop > hops_;
    bool is_complete_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class PageLoadTest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.PageLoadTest) */ {
 public:
  inline PageLoadTest() : PageLoadTest(nullptr) {}
  ~PageLoadTest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PageLoadTest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PageLoadTest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PageLoadTest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PageLoadTest(const PageLoadTest& from) : PageLoadTest(nullptr, from) {}
  inline PageLoadTest(PageLoadTest&& from) noexcept
      : PageLoadTest(nullptr, std::move(from)) {}
  inline PageLoadTest& operator=(const PageLoadTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PageLoadTest& operator=(PageLoadTest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PageLoadTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PageLoadTest* internal_default_instance() {
    return reinterpret_cast<const PageLoadTest*>(
        &_PageLoadTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(PageLoadTest& a, PageLoadTest& b) { a.Swap(&b); }
  inline void Swap(PageLoadTest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PageLoadTest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PageLoadTest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PageLoadTest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PageLoadTest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PageLoadTest& from) { PageLoadTest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PageLoadTest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.PageLoadTest"; }

 protected:
  explicit PageLoadTest(::google::protobuf::Arena* arena);
  PageLoadTest(::google::protobuf::Arena* arena, const PageLoadTest& from);
  PageLoadTest(::google::protobuf::Arena* arena, PageLoadTest&& from) noexcept
      : PageLoadTest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeadersFieldNumber = 3,
    kCssSelectorsFieldNumber = 5,
    kTargetFieldNumber = 1,
    kTimeoutFieldNumber = 2,
    kIgnoreTlsErrorsFieldNumber = 4,
  };
  // map<string, string> headers = 3 [json_name = "headers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int headers_size() const;
  private:
  int _internal_headers_size() const;

  public:
  void clear_headers() ;
  const ::google::protobuf::Map<std::string, std::string>& headers() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_headers();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_headers() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_headers();

  public:
  // map<string, string> css_selectors = 5 [json_name = "cssSelectors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int css_selectors_size() const;
  private:
  int _internal_css_selectors_size() const;

  public:
  void clear_css_selectors() ;
  const ::google::protobuf::Map<std::string, std::string>& css_selectors() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_css_selectors();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_css_selectors() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_css_selectors();

  public:
  // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_target() ;
  const std::string& target() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_target(Arg_&& arg, Args_... args);
  std::string* mutable_target();
  PROTOBUF_NODISCARD std::string* release_target();
  void set_allocated_target(std::string* value);

  private:
  const std::string& _internal_target() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_target(
      const std::string& value);
  std::string* _internal_mutable_target();

  public:
  // uint32 timeout = 2 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_timeout() ;
  ::uint32_t timeout() const;
  void set_timeout(::uint32_t value);

  private:
  ::uint32_t _internal_timeout() const;
  void _internal_set_timeout(::uint32_t value);

  public:
  // bool ignore_tls_errors = 4 [json_name = "ignoreTlsErrors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_ignore_tls_errors() ;
  bool ignore_tls_errors() const;
  void set_ignore_tls_errors(bool value);

  private:
  bool _internal_ignore_tls_errors() const;
  void _internal_set_ignore_tls_errors(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.PageLoadTest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 2,
      73, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PageLoadTest& from_msg);
    ::google::protobuf::internal::MapField<PageLoadTest_HeadersEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        headers_;
    ::google::protobuf::internal::MapField<PageLoadTest_CssSelectorsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        css_selectors_;
    ::google::protobuf::internal::ArenaStringPtr target_;
    ::uint32_t timeout_;
    bool ignore_tls_errors_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class NetNode final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.NetNode) */ {
 public:
  inline NetNode() : NetNode(nullptr) {}
  ~NetNode() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NetNode* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NetNode));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetNode(
      ::google::protobuf::internal::ConstantInitialized);

  inline NetNode(const NetNode& from) : NetNode(nullptr, from) {}
  inline NetNode(NetNode&& from) noexcept
      : NetNode(nullptr, std::move(from)) {}
  inline NetNode& operator=(const NetNode& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetNode& operator=(NetNode&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NetNode& default_instance() {
    return *internal_default_instance();
  }
  static inline const NetNode* internal_default_instance() {
    return reinterpret_cast<const NetNode*>(
        &_NetNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(NetNode& a, NetNode& b) { a.Swap(&b); }
  inline void Swap(NetNode* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetNode* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetNode* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NetNode>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NetNode& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NetNode& from) { NetNode::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NetNode* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.NetNode"; }

 protected:
  explicit NetNode(::google::protobuf::Arena* arena);
  NetNode(::google::protobuf::Arena* arena, const NetNode& from);
  NetNode(::google::protobuf::Arena* arena, NetNode&& from) noexcept
      : NetNode(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIpFieldNumber = 2,
    kAsNameFieldNumber = 4,
    kDnsNameFieldNumber = 6,
    kDeviceIdFieldNumber = 7,
    kSiteIdFieldNumber = 8,
    kLocationFieldNumber = 5,
    kAsnFieldNumber = 3,
  };
  // string ip = 2 [json_name = "ip", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_ip() ;
  const std::string& ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ip(Arg_&& arg, Args_... args);
  std::string* mutable_ip();
  PROTOBUF_NODISCARD std::string* release_ip();
  void set_allocated_ip(std::string* value);

  private:
  const std::string& _internal_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ip(
      const std::string& value);
  std::string* _internal_mutable_ip();

  public:
  // string as_name = 4 [json_name = "asName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_as_name() ;
  const std::string& as_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_as_name(Arg_&& arg, Args_... args);
  std::string* mutable_as_name();
  PROTOBUF_NODISCARD std::string* release_as_name();
  void set_allocated_as_name(std::string* value);

  private:
  const std::string& _internal_as_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_as_name(
      const std::string& value);
  std::string* _internal_mutable_as_name();

  public:
  // string dns_name = 6 [json_name = "dnsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_dns_name() ;
  const std::string& dns_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dns_name(Arg_&& arg, Args_... args);
  std::string* mutable_dns_name();
  PROTOBUF_NODISCARD std::string* release_dns_name();
  void set_allocated_dns_name(std::string* value);

  private:
  const std::string& _internal_dns_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dns_name(
      const std::string& value);
  std::string* _internal_mutable_dns_name();

  public:
  // string device_id = 7 [json_name = "deviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_id() ;
  const std::string& device_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_id(Arg_&& arg, Args_... args);
  std::string* mutable_device_id();
  PROTOBUF_NODISCARD std::string* release_device_id();
  void set_allocated_device_id(std::string* value);

  private:
  const std::string& _internal_device_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_id(
      const std::string& value);
  std::string* _internal_mutable_device_id();

  public:
  // string site_id = 8 [json_name = "siteId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_site_id() ;
  const std::string& site_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_site_id(Arg_&& arg, Args_... args);
  std::string* mutable_site_id();
  PROTOBUF_NODISCARD std::string* release_site_id();
  void set_allocated_site_id(std::string* value);

  private:
  const std::string& _internal_site_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_site_id(
      const std::string& value);
  std::string* _internal_mutable_site_id();

  public:
  // .kentik.synthetics.v202309.Location location = 5 [json_name = "location", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_location() const;
  void clear_location() ;
  const ::kentik::synthetics::v202309::Location& location() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::Location* release_location();
  ::kentik::synthetics::v202309::Location* mutable_location();
  void set_allocated_location(::kentik::synthetics::v202309::Location* value);
  void unsafe_arena_set_allocated_location(::kentik::synthetics::v202309::Location* value);
  ::kentik::synthetics::v202309::Location* unsafe_arena_release_location();

  private:
  const ::kentik::synthetics::v202309::Location& _internal_location() const;
  ::kentik::synthetics::v202309::Location* _internal_mutable_location();

  public:
  // uint32 asn = 3 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_asn() ;
  ::uint32_t asn() const;
  void set_asn(::uint32_t value);

  private:
  ::uint32_t _internal_asn() const;
  void _internal_set_asn(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.NetNode)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      75, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NetNode& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr ip_;
    ::google::protobuf::internal::ArenaStringPtr as_name_;
    ::google::protobuf::internal::ArenaStringPtr dns_name_;
    ::google::protobuf::internal::ArenaStringPtr device_id_;
    ::google::protobuf::internal::ArenaStringPtr site_id_;
    ::kentik::synthetics::v202309::Location* location_;
    ::uint32_t asn_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class ListAgentAlertsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.ListAgentAlertsResponse) */ {
 public:
  inline ListAgentAlertsResponse() : ListAgentAlertsResponse(nullptr) {}
  ~ListAgentAlertsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListAgentAlertsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListAgentAlertsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListAgentAlertsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListAgentAlertsResponse(const ListAgentAlertsResponse& from) : ListAgentAlertsResponse(nullptr, from) {}
  inline ListAgentAlertsResponse(ListAgentAlertsResponse&& from) noexcept
      : ListAgentAlertsResponse(nullptr, std::move(from)) {}
  inline ListAgentAlertsResponse& operator=(const ListAgentAlertsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListAgentAlertsResponse& operator=(ListAgentAlertsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListAgentAlertsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListAgentAlertsResponse* internal_default_instance() {
    return reinterpret_cast<const ListAgentAlertsResponse*>(
        &_ListAgentAlertsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 73;
  friend void swap(ListAgentAlertsResponse& a, ListAgentAlertsResponse& b) { a.Swap(&b); }
  inline void Swap(ListAgentAlertsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListAgentAlertsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListAgentAlertsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListAgentAlertsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListAgentAlertsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListAgentAlertsResponse& from) { ListAgentAlertsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListAgentAlertsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.ListAgentAlertsResponse"; }

 protected:
  explicit ListAgentAlertsResponse(::google::protobuf::Arena* arena);
  ListAgentAlertsResponse(::google::protobuf::Arena* arena, const ListAgentAlertsResponse& from);
  ListAgentAlertsResponse(::google::protobuf::Arena* arena, ListAgentAlertsResponse&& from) noexcept
      : ListAgentAlertsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAgentAlertsFieldNumber = 1,
  };
  // repeated .kentik.synthetics.v202309.AgentAlert agent_alerts = 1 [json_name = "agentAlerts"];
  int agent_alerts_size() const;
  private:
  int _internal_agent_alerts_size() const;

  public:
  void clear_agent_alerts() ;
  ::kentik::synthetics::v202309::AgentAlert* mutable_agent_alerts(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentAlert>* mutable_agent_alerts();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentAlert>& _internal_agent_alerts() const;
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentAlert>* _internal_mutable_agent_alerts();
  public:
  const ::kentik::synthetics::v202309::AgentAlert& agent_alerts(int index) const;
  ::kentik::synthetics::v202309::AgentAlert* add_agent_alerts();
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentAlert>& agent_alerts() const;
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.ListAgentAlertsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListAgentAlertsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::synthetics::v202309::AgentAlert > agent_alerts_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class HealthSettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.HealthSettings) */ {
 public:
  inline HealthSettings() : HealthSettings(nullptr) {}
  ~HealthSettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(HealthSettings* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(HealthSettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HealthSettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline HealthSettings(const HealthSettings& from) : HealthSettings(nullptr, from) {}
  inline HealthSettings(HealthSettings&& from) noexcept
      : HealthSettings(nullptr, std::move(from)) {}
  inline HealthSettings& operator=(const HealthSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline HealthSettings& operator=(HealthSettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HealthSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const HealthSettings* internal_default_instance() {
    return reinterpret_cast<const HealthSettings*>(
        &_HealthSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(HealthSettings& a, HealthSettings& b) { a.Swap(&b); }
  inline void Swap(HealthSettings* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HealthSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HealthSettings* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<HealthSettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HealthSettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HealthSettings& from) { HealthSettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(HealthSettings* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.HealthSettings"; }

 protected:
  explicit HealthSettings(::google::protobuf::Arena* arena);
  HealthSettings(::google::protobuf::Arena* arena, const HealthSettings& from);
  HealthSettings(::google::protobuf::Arena* arena, HealthSettings&& from) noexcept
      : HealthSettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHttpValidCodesFieldNumber = 9,
    kDnsValidCodesFieldNumber = 10,
    kDnsValidIpsFieldNumber = 21,
    kActivationFieldNumber = 18,
    kDisabledMetricsFieldNumber = 27,
    kLatencyCriticalFieldNumber = 1,
    kLatencyWarningFieldNumber = 2,
    kPacketLossCriticalFieldNumber = 3,
    kPacketLossWarningFieldNumber = 4,
    kJitterCriticalFieldNumber = 5,
    kJitterWarningFieldNumber = 6,
    kHttpLatencyCriticalFieldNumber = 7,
    kHttpLatencyWarningFieldNumber = 8,
    kLatencyCriticalStddevFieldNumber = 11,
    kLatencyWarningStddevFieldNumber = 12,
    kJitterCriticalStddevFieldNumber = 13,
    kJitterWarningStddevFieldNumber = 14,
    kHttpLatencyCriticalStddevFieldNumber = 15,
    kHttpLatencyWarningStddevFieldNumber = 16,
    kUnhealthySubtestThresholdFieldNumber = 17,
    kCertExpiryWarningFieldNumber = 19,
    kCertExpiryCriticalFieldNumber = 20,
    kDnsLatencyCriticalFieldNumber = 22,
    kDnsLatencyWarningFieldNumber = 23,
    kDnsLatencyCriticalStddevFieldNumber = 24,
    kDnsLatencyWarningStddevFieldNumber = 25,
    kPerAgentAlertingFieldNumber = 26,
    kHealthDisabledFieldNumber = 28,
    kThroughputCriticalFieldNumber = 29,
    kThroughputWarningFieldNumber = 30,
    kThroughputCriticalStddevFieldNumber = 31,
    kThroughputWarningStddevFieldNumber = 32,
  };
  // repeated uint32 http_valid_codes = 9 [json_name = "httpValidCodes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int http_valid_codes_size() const;
  private:
  int _internal_http_valid_codes_size() const;

  public:
  void clear_http_valid_codes() ;
  ::uint32_t http_valid_codes(int index) const;
  void set_http_valid_codes(int index, ::uint32_t value);
  void add_http_valid_codes(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& http_valid_codes() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_http_valid_codes();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_http_valid_codes() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_http_valid_codes();

  public:
  // repeated uint32 dns_valid_codes = 10 [json_name = "dnsValidCodes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int dns_valid_codes_size() const;
  private:
  int _internal_dns_valid_codes_size() const;

  public:
  void clear_dns_valid_codes() ;
  ::uint32_t dns_valid_codes(int index) const;
  void set_dns_valid_codes(int index, ::uint32_t value);
  void add_dns_valid_codes(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& dns_valid_codes() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_dns_valid_codes();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_dns_valid_codes() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_dns_valid_codes();

  public:
  // string dns_valid_ips = 21 [json_name = "dnsValidIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_dns_valid_ips() ;
  const std::string& dns_valid_ips() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dns_valid_ips(Arg_&& arg, Args_... args);
  std::string* mutable_dns_valid_ips();
  PROTOBUF_NODISCARD std::string* release_dns_valid_ips();
  void set_allocated_dns_valid_ips(std::string* value);

  private:
  const std::string& _internal_dns_valid_ips() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dns_valid_ips(
      const std::string& value);
  std::string* _internal_mutable_dns_valid_ips();

  public:
  // .kentik.synthetics.v202309.ActivationSettings activation = 18 [json_name = "activation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_activation() const;
  void clear_activation() ;
  const ::kentik::synthetics::v202309::ActivationSettings& activation() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::ActivationSettings* release_activation();
  ::kentik::synthetics::v202309::ActivationSettings* mutable_activation();
  void set_allocated_activation(::kentik::synthetics::v202309::ActivationSettings* value);
  void unsafe_arena_set_allocated_activation(::kentik::synthetics::v202309::ActivationSettings* value);
  ::kentik::synthetics::v202309::ActivationSettings* unsafe_arena_release_activation();

  private:
  const ::kentik::synthetics::v202309::ActivationSettings& _internal_activation() const;
  ::kentik::synthetics::v202309::ActivationSettings* _internal_mutable_activation();

  public:
  // .kentik.synthetics.v202309.DisabledMetrics disabled_metrics = 27 [json_name = "disabledMetrics", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_disabled_metrics() const;
  void clear_disabled_metrics() ;
  const ::kentik::synthetics::v202309::DisabledMetrics& disabled_metrics() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::DisabledMetrics* release_disabled_metrics();
  ::kentik::synthetics::v202309::DisabledMetrics* mutable_disabled_metrics();
  void set_allocated_disabled_metrics(::kentik::synthetics::v202309::DisabledMetrics* value);
  void unsafe_arena_set_allocated_disabled_metrics(::kentik::synthetics::v202309::DisabledMetrics* value);
  ::kentik::synthetics::v202309::DisabledMetrics* unsafe_arena_release_disabled_metrics();

  private:
  const ::kentik::synthetics::v202309::DisabledMetrics& _internal_disabled_metrics() const;
  ::kentik::synthetics::v202309::DisabledMetrics* _internal_mutable_disabled_metrics();

  public:
  // float latency_critical = 1 [json_name = "latencyCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_latency_critical() ;
  float latency_critical() const;
  void set_latency_critical(float value);

  private:
  float _internal_latency_critical() const;
  void _internal_set_latency_critical(float value);

  public:
  // float latency_warning = 2 [json_name = "latencyWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_latency_warning() ;
  float latency_warning() const;
  void set_latency_warning(float value);

  private:
  float _internal_latency_warning() const;
  void _internal_set_latency_warning(float value);

  public:
  // float packet_loss_critical = 3 [json_name = "packetLossCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_packet_loss_critical() ;
  float packet_loss_critical() const;
  void set_packet_loss_critical(float value);

  private:
  float _internal_packet_loss_critical() const;
  void _internal_set_packet_loss_critical(float value);

  public:
  // float packet_loss_warning = 4 [json_name = "packetLossWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_packet_loss_warning() ;
  float packet_loss_warning() const;
  void set_packet_loss_warning(float value);

  private:
  float _internal_packet_loss_warning() const;
  void _internal_set_packet_loss_warning(float value);

  public:
  // float jitter_critical = 5 [json_name = "jitterCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_jitter_critical() ;
  float jitter_critical() const;
  void set_jitter_critical(float value);

  private:
  float _internal_jitter_critical() const;
  void _internal_set_jitter_critical(float value);

  public:
  // float jitter_warning = 6 [json_name = "jitterWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_jitter_warning() ;
  float jitter_warning() const;
  void set_jitter_warning(float value);

  private:
  float _internal_jitter_warning() const;
  void _internal_set_jitter_warning(float value);

  public:
  // float http_latency_critical = 7 [json_name = "httpLatencyCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_http_latency_critical() ;
  float http_latency_critical() const;
  void set_http_latency_critical(float value);

  private:
  float _internal_http_latency_critical() const;
  void _internal_set_http_latency_critical(float value);

  public:
  // float http_latency_warning = 8 [json_name = "httpLatencyWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_http_latency_warning() ;
  float http_latency_warning() const;
  void set_http_latency_warning(float value);

  private:
  float _internal_http_latency_warning() const;
  void _internal_set_http_latency_warning(float value);

  public:
  // float latency_critical_stddev = 11 [json_name = "latencyCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_latency_critical_stddev() ;
  float latency_critical_stddev() const;
  void set_latency_critical_stddev(float value);

  private:
  float _internal_latency_critical_stddev() const;
  void _internal_set_latency_critical_stddev(float value);

  public:
  // float latency_warning_stddev = 12 [json_name = "latencyWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_latency_warning_stddev() ;
  float latency_warning_stddev() const;
  void set_latency_warning_stddev(float value);

  private:
  float _internal_latency_warning_stddev() const;
  void _internal_set_latency_warning_stddev(float value);

  public:
  // float jitter_critical_stddev = 13 [json_name = "jitterCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_jitter_critical_stddev() ;
  float jitter_critical_stddev() const;
  void set_jitter_critical_stddev(float value);

  private:
  float _internal_jitter_critical_stddev() const;
  void _internal_set_jitter_critical_stddev(float value);

  public:
  // float jitter_warning_stddev = 14 [json_name = "jitterWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_jitter_warning_stddev() ;
  float jitter_warning_stddev() const;
  void set_jitter_warning_stddev(float value);

  private:
  float _internal_jitter_warning_stddev() const;
  void _internal_set_jitter_warning_stddev(float value);

  public:
  // float http_latency_critical_stddev = 15 [json_name = "httpLatencyCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_http_latency_critical_stddev() ;
  float http_latency_critical_stddev() const;
  void set_http_latency_critical_stddev(float value);

  private:
  float _internal_http_latency_critical_stddev() const;
  void _internal_set_http_latency_critical_stddev(float value);

  public:
  // float http_latency_warning_stddev = 16 [json_name = "httpLatencyWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_http_latency_warning_stddev() ;
  float http_latency_warning_stddev() const;
  void set_http_latency_warning_stddev(float value);

  private:
  float _internal_http_latency_warning_stddev() const;
  void _internal_set_http_latency_warning_stddev(float value);

  public:
  // uint32 unhealthy_subtest_threshold = 17 [json_name = "unhealthySubtestThreshold", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  [[deprecated]]  void clear_unhealthy_subtest_threshold() ;
  [[deprecated]] ::uint32_t unhealthy_subtest_threshold() const;
  [[deprecated]] void set_unhealthy_subtest_threshold(::uint32_t value);

  private:
  ::uint32_t _internal_unhealthy_subtest_threshold() const;
  void _internal_set_unhealthy_subtest_threshold(::uint32_t value);

  public:
  // uint32 cert_expiry_warning = 19 [json_name = "certExpiryWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_cert_expiry_warning() ;
  ::uint32_t cert_expiry_warning() const;
  void set_cert_expiry_warning(::uint32_t value);

  private:
  ::uint32_t _internal_cert_expiry_warning() const;
  void _internal_set_cert_expiry_warning(::uint32_t value);

  public:
  // uint32 cert_expiry_critical = 20 [json_name = "certExpiryCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_cert_expiry_critical() ;
  ::uint32_t cert_expiry_critical() const;
  void set_cert_expiry_critical(::uint32_t value);

  private:
  ::uint32_t _internal_cert_expiry_critical() const;
  void _internal_set_cert_expiry_critical(::uint32_t value);

  public:
  // float dns_latency_critical = 22 [json_name = "dnsLatencyCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_dns_latency_critical() ;
  float dns_latency_critical() const;
  void set_dns_latency_critical(float value);

  private:
  float _internal_dns_latency_critical() const;
  void _internal_set_dns_latency_critical(float value);

  public:
  // float dns_latency_warning = 23 [json_name = "dnsLatencyWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_dns_latency_warning() ;
  float dns_latency_warning() const;
  void set_dns_latency_warning(float value);

  private:
  float _internal_dns_latency_warning() const;
  void _internal_set_dns_latency_warning(float value);

  public:
  // float dns_latency_critical_stddev = 24 [json_name = "dnsLatencyCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_dns_latency_critical_stddev() ;
  float dns_latency_critical_stddev() const;
  void set_dns_latency_critical_stddev(float value);

  private:
  float _internal_dns_latency_critical_stddev() const;
  void _internal_set_dns_latency_critical_stddev(float value);

  public:
  // float dns_latency_warning_stddev = 25 [json_name = "dnsLatencyWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_dns_latency_warning_stddev() ;
  float dns_latency_warning_stddev() const;
  void set_dns_latency_warning_stddev(float value);

  private:
  float _internal_dns_latency_warning_stddev() const;
  void _internal_set_dns_latency_warning_stddev(float value);

  public:
  // bool per_agent_alerting = 26 [json_name = "perAgentAlerting", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  [[deprecated]]  void clear_per_agent_alerting() ;
  [[deprecated]] bool per_agent_alerting() const;
  [[deprecated]] void set_per_agent_alerting(bool value);

  private:
  bool _internal_per_agent_alerting() const;
  void _internal_set_per_agent_alerting(bool value);

  public:
  // bool health_disabled = 28 [json_name = "healthDisabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_health_disabled() ;
  bool health_disabled() const;
  void set_health_disabled(bool value);

  private:
  bool _internal_health_disabled() const;
  void _internal_set_health_disabled(bool value);

  public:
  // float throughput_critical = 29 [json_name = "throughputCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_throughput_critical() ;
  float throughput_critical() const;
  void set_throughput_critical(float value);

  private:
  float _internal_throughput_critical() const;
  void _internal_set_throughput_critical(float value);

  public:
  // float throughput_warning = 30 [json_name = "throughputWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_throughput_warning() ;
  float throughput_warning() const;
  void set_throughput_warning(float value);

  private:
  float _internal_throughput_warning() const;
  void _internal_set_throughput_warning(float value);

  public:
  // float throughput_critical_stddev = 31 [json_name = "throughputCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_throughput_critical_stddev() ;
  float throughput_critical_stddev() const;
  void set_throughput_critical_stddev(float value);

  private:
  float _internal_throughput_critical_stddev() const;
  void _internal_set_throughput_critical_stddev(float value);

  public:
  // float throughput_warning_stddev = 32 [json_name = "throughputWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_throughput_warning_stddev() ;
  float throughput_warning_stddev() const;
  void set_throughput_warning_stddev(float value);

  private:
  float _internal_throughput_warning_stddev() const;
  void _internal_set_throughput_warning_stddev(float value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.HealthSettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 32, 2,
      94, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HealthSettings& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint32_t> http_valid_codes_;
    ::google::protobuf::internal::CachedSize _http_valid_codes_cached_byte_size_;
    ::google::protobuf::RepeatedField<::uint32_t> dns_valid_codes_;
    ::google::protobuf::internal::CachedSize _dns_valid_codes_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr dns_valid_ips_;
    ::kentik::synthetics::v202309::ActivationSettings* activation_;
    ::kentik::synthetics::v202309::DisabledMetrics* disabled_metrics_;
    float latency_critical_;
    float latency_warning_;
    float packet_loss_critical_;
    float packet_loss_warning_;
    float jitter_critical_;
    float jitter_warning_;
    float http_latency_critical_;
    float http_latency_warning_;
    float latency_critical_stddev_;
    float latency_warning_stddev_;
    float jitter_critical_stddev_;
    float jitter_warning_stddev_;
    float http_latency_critical_stddev_;
    float http_latency_warning_stddev_;
    ::uint32_t unhealthy_subtest_threshold_;
    ::uint32_t cert_expiry_warning_;
    ::uint32_t cert_expiry_critical_;
    float dns_latency_critical_;
    float dns_latency_warning_;
    float dns_latency_critical_stddev_;
    float dns_latency_warning_stddev_;
    bool per_agent_alerting_;
    bool health_disabled_;
    float throughput_critical_;
    float throughput_warning_;
    float throughput_critical_stddev_;
    float throughput_warning_stddev_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class HTTPResults final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.HTTPResults) */ {
 public:
  inline HTTPResults() : HTTPResults(nullptr) {}
  ~HTTPResults() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(HTTPResults* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(HTTPResults));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HTTPResults(
      ::google::protobuf::internal::ConstantInitialized);

  inline HTTPResults(const HTTPResults& from) : HTTPResults(nullptr, from) {}
  inline HTTPResults(HTTPResults&& from) noexcept
      : HTTPResults(nullptr, std::move(from)) {}
  inline HTTPResults& operator=(const HTTPResults& from) {
    CopyFrom(from);
    return *this;
  }
  inline HTTPResults& operator=(HTTPResults&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HTTPResults& default_instance() {
    return *internal_default_instance();
  }
  static inline const HTTPResults* internal_default_instance() {
    return reinterpret_cast<const HTTPResults*>(
        &_HTTPResults_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(HTTPResults& a, HTTPResults& b) { a.Swap(&b); }
  inline void Swap(HTTPResults* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HTTPResults* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HTTPResults* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<HTTPResults>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HTTPResults& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HTTPResults& from) { HTTPResults::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(HTTPResults* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.HTTPResults"; }

 protected:
  explicit HTTPResults(::google::protobuf::Arena* arena);
  HTTPResults(::google::protobuf::Arena* arena, const HTTPResults& from);
  HTTPResults(::google::protobuf::Arena* arena, HTTPResults&& from) noexcept
      : HTTPResults(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetFieldNumber = 1,
    kDstIpFieldNumber = 5,
    kLatencyFieldNumber = 2,
    kResponseFieldNumber = 4,
  };
  // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_target() ;
  const std::string& target() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_target(Arg_&& arg, Args_... args);
  std::string* mutable_target();
  PROTOBUF_NODISCARD std::string* release_target();
  void set_allocated_target(std::string* value);

  private:
  const std::string& _internal_target() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_target(
      const std::string& value);
  std::string* _internal_mutable_target();

  public:
  // string dst_ip = 5 [json_name = "dstIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_dst_ip() ;
  const std::string& dst_ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dst_ip(Arg_&& arg, Args_... args);
  std::string* mutable_dst_ip();
  PROTOBUF_NODISCARD std::string* release_dst_ip();
  void set_allocated_dst_ip(std::string* value);

  private:
  const std::string& _internal_dst_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dst_ip(
      const std::string& value);
  std::string* _internal_mutable_dst_ip();

  public:
  // .kentik.synthetics.v202309.MetricData latency = 2 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_latency() const;
  void clear_latency() ;
  const ::kentik::synthetics::v202309::MetricData& latency() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::MetricData* release_latency();
  ::kentik::synthetics::v202309::MetricData* mutable_latency();
  void set_allocated_latency(::kentik::synthetics::v202309::MetricData* value);
  void unsafe_arena_set_allocated_latency(::kentik::synthetics::v202309::MetricData* value);
  ::kentik::synthetics::v202309::MetricData* unsafe_arena_release_latency();

  private:
  const ::kentik::synthetics::v202309::MetricData& _internal_latency() const;
  ::kentik::synthetics::v202309::MetricData* _internal_mutable_latency();

  public:
  // .kentik.synthetics.v202309.HTTPResponseData response = 4 [json_name = "response", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_response() const;
  void clear_response() ;
  const ::kentik::synthetics::v202309::HTTPResponseData& response() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::HTTPResponseData* release_response();
  ::kentik::synthetics::v202309::HTTPResponseData* mutable_response();
  void set_allocated_response(::kentik::synthetics::v202309::HTTPResponseData* value);
  void unsafe_arena_set_allocated_response(::kentik::synthetics::v202309::HTTPResponseData* value);
  ::kentik::synthetics::v202309::HTTPResponseData* unsafe_arena_release_response();

  private:
  const ::kentik::synthetics::v202309::HTTPResponseData& _internal_response() const;
  ::kentik::synthetics::v202309::HTTPResponseData* _internal_mutable_response();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.HTTPResults)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 2,
      58, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HTTPResults& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr target_;
    ::google::protobuf::internal::ArenaStringPtr dst_ip_;
    ::kentik::synthetics::v202309::MetricData* latency_;
    ::kentik::synthetics::v202309::HTTPResponseData* response_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class GetTraceForTestRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.GetTraceForTestRequest) */ {
 public:
  inline GetTraceForTestRequest() : GetTraceForTestRequest(nullptr) {}
  ~GetTraceForTestRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetTraceForTestRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetTraceForTestRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetTraceForTestRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetTraceForTestRequest(const GetTraceForTestRequest& from) : GetTraceForTestRequest(nullptr, from) {}
  inline GetTraceForTestRequest(GetTraceForTestRequest&& from) noexcept
      : GetTraceForTestRequest(nullptr, std::move(from)) {}
  inline GetTraceForTestRequest& operator=(const GetTraceForTestRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTraceForTestRequest& operator=(GetTraceForTestRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTraceForTestRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTraceForTestRequest* internal_default_instance() {
    return reinterpret_cast<const GetTraceForTestRequest*>(
        &_GetTraceForTestRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 42;
  friend void swap(GetTraceForTestRequest& a, GetTraceForTestRequest& b) { a.Swap(&b); }
  inline void Swap(GetTraceForTestRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTraceForTestRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTraceForTestRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetTraceForTestRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetTraceForTestRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetTraceForTestRequest& from) { GetTraceForTestRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetTraceForTestRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.GetTraceForTestRequest"; }

 protected:
  explicit GetTraceForTestRequest(::google::protobuf::Arena* arena);
  GetTraceForTestRequest(::google::protobuf::Arena* arena, const GetTraceForTestRequest& from);
  GetTraceForTestRequest(::google::protobuf::Arena* arena, GetTraceForTestRequest&& from) noexcept
      : GetTraceForTestRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAgentIdsFieldNumber = 4,
    kTargetIpsFieldNumber = 5,
    kIdFieldNumber = 1,
    kStartTimeFieldNumber = 2,
    kEndTimeFieldNumber = 3,
  };
  // repeated string agent_ids = 4 [json_name = "agentIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int agent_ids_size() const;
  private:
  int _internal_agent_ids_size() const;

  public:
  void clear_agent_ids() ;
  const std::string& agent_ids(int index) const;
  std::string* mutable_agent_ids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_agent_ids(int index, Arg_&& value, Args_... args);
  std::string* add_agent_ids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_agent_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& agent_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_agent_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_agent_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_agent_ids();

  public:
  // repeated string target_ips = 5 [json_name = "targetIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int target_ips_size() const;
  private:
  int _internal_target_ips_size() const;

  public:
  void clear_target_ips() ;
  const std::string& target_ips(int index) const;
  std::string* mutable_target_ips(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_target_ips(int index, Arg_&& value, Args_... args);
  std::string* add_target_ips();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_target_ips(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& target_ips() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_target_ips();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_target_ips() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_target_ips();

  public:
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // .google.protobuf.Timestamp start_time = 2 [json_name = "startTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_start_time() const;
  void clear_start_time() ;
  const ::google::protobuf::Timestamp& start_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_start_time();
  ::google::protobuf::Timestamp* mutable_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_start_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_start_time();

  private:
  const ::google::protobuf::Timestamp& _internal_start_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_start_time();

  public:
  // .google.protobuf.Timestamp end_time = 3 [json_name = "endTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_end_time() const;
  void clear_end_time() ;
  const ::google::protobuf::Timestamp& end_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_end_time();
  ::google::protobuf::Timestamp* mutable_end_time();
  void set_allocated_end_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_end_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_end_time();

  private:
  const ::google::protobuf::Timestamp& _internal_end_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_end_time();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.GetTraceForTestRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      78, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetTraceForTestRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> agent_ids_;
    ::google::protobuf::RepeatedPtrField<std::string> target_ips_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::Timestamp* start_time_;
    ::google::protobuf::Timestamp* end_time_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class GetResultsForTestsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.GetResultsForTestsRequest) */ {
 public:
  inline GetResultsForTestsRequest() : GetResultsForTestsRequest(nullptr) {}
  ~GetResultsForTestsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetResultsForTestsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetResultsForTestsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetResultsForTestsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetResultsForTestsRequest(const GetResultsForTestsRequest& from) : GetResultsForTestsRequest(nullptr, from) {}
  inline GetResultsForTestsRequest(GetResultsForTestsRequest&& from) noexcept
      : GetResultsForTestsRequest(nullptr, std::move(from)) {}
  inline GetResultsForTestsRequest& operator=(const GetResultsForTestsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetResultsForTestsRequest& operator=(GetResultsForTestsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetResultsForTestsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetResultsForTestsRequest* internal_default_instance() {
    return reinterpret_cast<const GetResultsForTestsRequest*>(
        &_GetResultsForTestsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 40;
  friend void swap(GetResultsForTestsRequest& a, GetResultsForTestsRequest& b) { a.Swap(&b); }
  inline void Swap(GetResultsForTestsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetResultsForTestsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetResultsForTestsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetResultsForTestsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetResultsForTestsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetResultsForTestsRequest& from) { GetResultsForTestsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetResultsForTestsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.GetResultsForTestsRequest"; }

 protected:
  explicit GetResultsForTestsRequest(::google::protobuf::Arena* arena);
  GetResultsForTestsRequest(::google::protobuf::Arena* arena, const GetResultsForTestsRequest& from);
  GetResultsForTestsRequest(::google::protobuf::Arena* arena, GetResultsForTestsRequest&& from) noexcept
      : GetResultsForTestsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdsFieldNumber = 1,
    kAgentIdsFieldNumber = 4,
    kTargetsFieldNumber = 5,
    kStartTimeFieldNumber = 2,
    kEndTimeFieldNumber = 3,
    kAggregateFieldNumber = 6,
  };
  // repeated string ids = 1 [json_name = "ids", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int ids_size() const;
  private:
  int _internal_ids_size() const;

  public:
  void clear_ids() ;
  const std::string& ids(int index) const;
  std::string* mutable_ids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ids(int index, Arg_&& value, Args_... args);
  std::string* add_ids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_ids();

  public:
  // repeated string agent_ids = 4 [json_name = "agentIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int agent_ids_size() const;
  private:
  int _internal_agent_ids_size() const;

  public:
  void clear_agent_ids() ;
  const std::string& agent_ids(int index) const;
  std::string* mutable_agent_ids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_agent_ids(int index, Arg_&& value, Args_... args);
  std::string* add_agent_ids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_agent_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& agent_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_agent_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_agent_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_agent_ids();

  public:
  // repeated string targets = 5 [json_name = "targets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int targets_size() const;
  private:
  int _internal_targets_size() const;

  public:
  void clear_targets() ;
  const std::string& targets(int index) const;
  std::string* mutable_targets(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_targets(int index, Arg_&& value, Args_... args);
  std::string* add_targets();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_targets(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& targets() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_targets();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_targets() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_targets();

  public:
  // .google.protobuf.Timestamp start_time = 2 [json_name = "startTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_start_time() const;
  void clear_start_time() ;
  const ::google::protobuf::Timestamp& start_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_start_time();
  ::google::protobuf::Timestamp* mutable_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_start_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_start_time();

  private:
  const ::google::protobuf::Timestamp& _internal_start_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_start_time();

  public:
  // .google.protobuf.Timestamp end_time = 3 [json_name = "endTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_end_time() const;
  void clear_end_time() ;
  const ::google::protobuf::Timestamp& end_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_end_time();
  ::google::protobuf::Timestamp* mutable_end_time();
  void set_allocated_end_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_end_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_end_time();

  private:
  const ::google::protobuf::Timestamp& _internal_end_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_end_time();

  public:
  // bool aggregate = 6 [json_name = "aggregate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_aggregate() ;
  bool aggregate() const;
  void set_aggregate(bool value);

  private:
  bool _internal_aggregate() const;
  void _internal_set_aggregate(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.GetResultsForTestsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      79, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetResultsForTestsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> ids_;
    ::google::protobuf::RepeatedPtrField<std::string> agent_ids_;
    ::google::protobuf::RepeatedPtrField<std::string> targets_;
    ::google::protobuf::Timestamp* start_time_;
    ::google::protobuf::Timestamp* end_time_;
    bool aggregate_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class GetAgentAlertResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.GetAgentAlertResponse) */ {
 public:
  inline GetAgentAlertResponse() : GetAgentAlertResponse(nullptr) {}
  ~GetAgentAlertResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetAgentAlertResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetAgentAlertResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetAgentAlertResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetAgentAlertResponse(const GetAgentAlertResponse& from) : GetAgentAlertResponse(nullptr, from) {}
  inline GetAgentAlertResponse(GetAgentAlertResponse&& from) noexcept
      : GetAgentAlertResponse(nullptr, std::move(from)) {}
  inline GetAgentAlertResponse& operator=(const GetAgentAlertResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAgentAlertResponse& operator=(GetAgentAlertResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAgentAlertResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAgentAlertResponse* internal_default_instance() {
    return reinterpret_cast<const GetAgentAlertResponse*>(
        &_GetAgentAlertResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 71;
  friend void swap(GetAgentAlertResponse& a, GetAgentAlertResponse& b) { a.Swap(&b); }
  inline void Swap(GetAgentAlertResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAgentAlertResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAgentAlertResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetAgentAlertResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetAgentAlertResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetAgentAlertResponse& from) { GetAgentAlertResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetAgentAlertResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.GetAgentAlertResponse"; }

 protected:
  explicit GetAgentAlertResponse(::google::protobuf::Arena* arena);
  GetAgentAlertResponse(::google::protobuf::Arena* arena, const GetAgentAlertResponse& from);
  GetAgentAlertResponse(::google::protobuf::Arena* arena, GetAgentAlertResponse&& from) noexcept
      : GetAgentAlertResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAgentAlertFieldNumber = 1,
  };
  // .kentik.synthetics.v202309.AgentAlert agent_alert = 1 [json_name = "agentAlert"];
  bool has_agent_alert() const;
  void clear_agent_alert() ;
  const ::kentik::synthetics::v202309::AgentAlert& agent_alert() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::AgentAlert* release_agent_alert();
  ::kentik::synthetics::v202309::AgentAlert* mutable_agent_alert();
  void set_allocated_agent_alert(::kentik::synthetics::v202309::AgentAlert* value);
  void unsafe_arena_set_allocated_agent_alert(::kentik::synthetics::v202309::AgentAlert* value);
  ::kentik::synthetics::v202309::AgentAlert* unsafe_arena_release_agent_alert();

  private:
  const ::kentik::synthetics::v202309::AgentAlert& _internal_agent_alert() const;
  ::kentik::synthetics::v202309::AgentAlert* _internal_mutable_agent_alert();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.GetAgentAlertResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetAgentAlertResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::synthetics::v202309::AgentAlert* agent_alert_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class DNSResults final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.DNSResults) */ {
 public:
  inline DNSResults() : DNSResults(nullptr) {}
  ~DNSResults() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DNSResults* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DNSResults));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DNSResults(
      ::google::protobuf::internal::ConstantInitialized);

  inline DNSResults(const DNSResults& from) : DNSResults(nullptr, from) {}
  inline DNSResults(DNSResults&& from) noexcept
      : DNSResults(nullptr, std::move(from)) {}
  inline DNSResults& operator=(const DNSResults& from) {
    CopyFrom(from);
    return *this;
  }
  inline DNSResults& operator=(DNSResults&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DNSResults& default_instance() {
    return *internal_default_instance();
  }
  static inline const DNSResults* internal_default_instance() {
    return reinterpret_cast<const DNSResults*>(
        &_DNSResults_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(DNSResults& a, DNSResults& b) { a.Swap(&b); }
  inline void Swap(DNSResults* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DNSResults* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DNSResults* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DNSResults>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DNSResults& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DNSResults& from) { DNSResults::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DNSResults* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.DNSResults"; }

 protected:
  explicit DNSResults(::google::protobuf::Arena* arena);
  DNSResults(::google::protobuf::Arena* arena, const DNSResults& from);
  DNSResults(::google::protobuf::Arena* arena, DNSResults&& from) noexcept
      : DNSResults(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetFieldNumber = 1,
    kServerFieldNumber = 2,
    kLatencyFieldNumber = 3,
    kResponseFieldNumber = 5,
  };
  // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_target() ;
  const std::string& target() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_target(Arg_&& arg, Args_... args);
  std::string* mutable_target();
  PROTOBUF_NODISCARD std::string* release_target();
  void set_allocated_target(std::string* value);

  private:
  const std::string& _internal_target() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_target(
      const std::string& value);
  std::string* _internal_mutable_target();

  public:
  // string server = 2 [json_name = "server", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_server() ;
  const std::string& server() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_server(Arg_&& arg, Args_... args);
  std::string* mutable_server();
  PROTOBUF_NODISCARD std::string* release_server();
  void set_allocated_server(std::string* value);

  private:
  const std::string& _internal_server() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_server(
      const std::string& value);
  std::string* _internal_mutable_server();

  public:
  // .kentik.synthetics.v202309.MetricData latency = 3 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_latency() const;
  void clear_latency() ;
  const ::kentik::synthetics::v202309::MetricData& latency() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::MetricData* release_latency();
  ::kentik::synthetics::v202309::MetricData* mutable_latency();
  void set_allocated_latency(::kentik::synthetics::v202309::MetricData* value);
  void unsafe_arena_set_allocated_latency(::kentik::synthetics::v202309::MetricData* value);
  ::kentik::synthetics::v202309::MetricData* unsafe_arena_release_latency();

  private:
  const ::kentik::synthetics::v202309::MetricData& _internal_latency() const;
  ::kentik::synthetics::v202309::MetricData* _internal_mutable_latency();

  public:
  // .kentik.synthetics.v202309.DNSResponseData response = 5 [json_name = "response", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_response() const;
  void clear_response() ;
  const ::kentik::synthetics::v202309::DNSResponseData& response() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::DNSResponseData* release_response();
  ::kentik::synthetics::v202309::DNSResponseData* mutable_response();
  void set_allocated_response(::kentik::synthetics::v202309::DNSResponseData* value);
  void unsafe_arena_set_allocated_response(::kentik::synthetics::v202309::DNSResponseData* value);
  ::kentik::synthetics::v202309::DNSResponseData* unsafe_arena_release_response();

  private:
  const ::kentik::synthetics::v202309::DNSResponseData& _internal_response() const;
  ::kentik::synthetics::v202309::DNSResponseData* _internal_mutable_response();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.DNSResults)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 2,
      57, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DNSResults& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr target_;
    ::google::protobuf::internal::ArenaStringPtr server_;
    ::kentik::synthetics::v202309::MetricData* latency_;
    ::kentik::synthetics::v202309::DNSResponseData* response_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class CreateAgentAlertResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.CreateAgentAlertResponse) */ {
 public:
  inline CreateAgentAlertResponse() : CreateAgentAlertResponse(nullptr) {}
  ~CreateAgentAlertResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateAgentAlertResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateAgentAlertResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateAgentAlertResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateAgentAlertResponse(const CreateAgentAlertResponse& from) : CreateAgentAlertResponse(nullptr, from) {}
  inline CreateAgentAlertResponse(CreateAgentAlertResponse&& from) noexcept
      : CreateAgentAlertResponse(nullptr, std::move(from)) {}
  inline CreateAgentAlertResponse& operator=(const CreateAgentAlertResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateAgentAlertResponse& operator=(CreateAgentAlertResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateAgentAlertResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateAgentAlertResponse* internal_default_instance() {
    return reinterpret_cast<const CreateAgentAlertResponse*>(
        &_CreateAgentAlertResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 67;
  friend void swap(CreateAgentAlertResponse& a, CreateAgentAlertResponse& b) { a.Swap(&b); }
  inline void Swap(CreateAgentAlertResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateAgentAlertResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateAgentAlertResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateAgentAlertResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateAgentAlertResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateAgentAlertResponse& from) { CreateAgentAlertResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateAgentAlertResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.CreateAgentAlertResponse"; }

 protected:
  explicit CreateAgentAlertResponse(::google::protobuf::Arena* arena);
  CreateAgentAlertResponse(::google::protobuf::Arena* arena, const CreateAgentAlertResponse& from);
  CreateAgentAlertResponse(::google::protobuf::Arena* arena, CreateAgentAlertResponse&& from) noexcept
      : CreateAgentAlertResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAgentAlertFieldNumber = 1,
  };
  // .kentik.synthetics.v202309.AgentAlert agent_alert = 1 [json_name = "agentAlert"];
  bool has_agent_alert() const;
  void clear_agent_alert() ;
  const ::kentik::synthetics::v202309::AgentAlert& agent_alert() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::AgentAlert* release_agent_alert();
  ::kentik::synthetics::v202309::AgentAlert* mutable_agent_alert();
  void set_allocated_agent_alert(::kentik::synthetics::v202309::AgentAlert* value);
  void unsafe_arena_set_allocated_agent_alert(::kentik::synthetics::v202309::AgentAlert* value);
  ::kentik::synthetics::v202309::AgentAlert* unsafe_arena_release_agent_alert();

  private:
  const ::kentik::synthetics::v202309::AgentAlert& _internal_agent_alert() const;
  ::kentik::synthetics::v202309::AgentAlert* _internal_mutable_agent_alert();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.CreateAgentAlertResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateAgentAlertResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::synthetics::v202309::AgentAlert* agent_alert_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class AgentMetadata final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.AgentMetadata) */ {
 public:
  inline AgentMetadata() : AgentMetadata(nullptr) {}
  ~AgentMetadata() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AgentMetadata* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AgentMetadata));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AgentMetadata(
      ::google::protobuf::internal::ConstantInitialized);

  inline AgentMetadata(const AgentMetadata& from) : AgentMetadata(nullptr, from) {}
  inline AgentMetadata(AgentMetadata&& from) noexcept
      : AgentMetadata(nullptr, std::move(from)) {}
  inline AgentMetadata& operator=(const AgentMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgentMetadata& operator=(AgentMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AgentMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const AgentMetadata* internal_default_instance() {
    return reinterpret_cast<const AgentMetadata*>(
        &_AgentMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(AgentMetadata& a, AgentMetadata& b) { a.Swap(&b); }
  inline void Swap(AgentMetadata* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgentMetadata* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AgentMetadata* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AgentMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AgentMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AgentMetadata& from) { AgentMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AgentMetadata* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.AgentMetadata"; }

 protected:
  explicit AgentMetadata(::google::protobuf::Arena* arena);
  AgentMetadata(::google::protobuf::Arena* arena, const AgentMetadata& from);
  AgentMetadata(::google::protobuf::Arena* arena, AgentMetadata&& from) noexcept
      : AgentMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using IpValue = AgentMetadata_IpValue;

  // accessors -------------------------------------------------------
  enum : int {
    kPrivateIpv4AddressesFieldNumber = 1,
    kPublicIpv4AddressesFieldNumber = 2,
    kPrivateIpv6AddressesFieldNumber = 3,
    kPublicIpv6AddressesFieldNumber = 4,
  };
  // repeated .kentik.synthetics.v202309.AgentMetadata.IpValue private_ipv4_addresses = 1 [json_name = "privateIpv4Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int private_ipv4_addresses_size() const;
  private:
  int _internal_private_ipv4_addresses_size() const;

  public:
  void clear_private_ipv4_addresses() ;
  ::kentik::synthetics::v202309::AgentMetadata_IpValue* mutable_private_ipv4_addresses(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>* mutable_private_ipv4_addresses();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>& _internal_private_ipv4_addresses() const;
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>* _internal_mutable_private_ipv4_addresses();
  public:
  const ::kentik::synthetics::v202309::AgentMetadata_IpValue& private_ipv4_addresses(int index) const;
  ::kentik::synthetics::v202309::AgentMetadata_IpValue* add_private_ipv4_addresses();
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>& private_ipv4_addresses() const;
  // repeated .kentik.synthetics.v202309.AgentMetadata.IpValue public_ipv4_addresses = 2 [json_name = "publicIpv4Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int public_ipv4_addresses_size() const;
  private:
  int _internal_public_ipv4_addresses_size() const;

  public:
  void clear_public_ipv4_addresses() ;
  ::kentik::synthetics::v202309::AgentMetadata_IpValue* mutable_public_ipv4_addresses(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>* mutable_public_ipv4_addresses();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>& _internal_public_ipv4_addresses() const;
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>* _internal_mutable_public_ipv4_addresses();
  public:
  const ::kentik::synthetics::v202309::AgentMetadata_IpValue& public_ipv4_addresses(int index) const;
  ::kentik::synthetics::v202309::AgentMetadata_IpValue* add_public_ipv4_addresses();
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>& public_ipv4_addresses() const;
  // repeated .kentik.synthetics.v202309.AgentMetadata.IpValue private_ipv6_addresses = 3 [json_name = "privateIpv6Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int private_ipv6_addresses_size() const;
  private:
  int _internal_private_ipv6_addresses_size() const;

  public:
  void clear_private_ipv6_addresses() ;
  ::kentik::synthetics::v202309::AgentMetadata_IpValue* mutable_private_ipv6_addresses(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>* mutable_private_ipv6_addresses();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>& _internal_private_ipv6_addresses() const;
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>* _internal_mutable_private_ipv6_addresses();
  public:
  const ::kentik::synthetics::v202309::AgentMetadata_IpValue& private_ipv6_addresses(int index) const;
  ::kentik::synthetics::v202309::AgentMetadata_IpValue* add_private_ipv6_addresses();
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>& private_ipv6_addresses() const;
  // repeated .kentik.synthetics.v202309.AgentMetadata.IpValue public_ipv6_addresses = 4 [json_name = "publicIpv6Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int public_ipv6_addresses_size() const;
  private:
  int _internal_public_ipv6_addresses_size() const;

  public:
  void clear_public_ipv6_addresses() ;
  ::kentik::synthetics::v202309::AgentMetadata_IpValue* mutable_public_ipv6_addresses(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>* mutable_public_ipv6_addresses();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>& _internal_public_ipv6_addresses() const;
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>* _internal_mutable_public_ipv6_addresses();
  public:
  const ::kentik::synthetics::v202309::AgentMetadata_IpValue& public_ipv6_addresses(int index) const;
  ::kentik::synthetics::v202309::AgentMetadata_IpValue* add_public_ipv6_addresses();
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>& public_ipv6_addresses() const;
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.AgentMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 4,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AgentMetadata& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::synthetics::v202309::AgentMetadata_IpValue > private_ipv4_addresses_;
    ::google::protobuf::RepeatedPtrField< ::kentik::synthetics::v202309::AgentMetadata_IpValue > public_ipv4_addresses_;
    ::google::protobuf::RepeatedPtrField< ::kentik::synthetics::v202309::AgentMetadata_IpValue > private_ipv6_addresses_;
    ::google::protobuf::RepeatedPtrField< ::kentik::synthetics::v202309::AgentMetadata_IpValue > public_ipv6_addresses_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class TestSettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.TestSettings) */ {
 public:
  inline TestSettings() : TestSettings(nullptr) {}
  ~TestSettings() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TestSettings* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TestSettings));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestSettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestSettings(const TestSettings& from) : TestSettings(nullptr, from) {}
  inline TestSettings(TestSettings&& from) noexcept
      : TestSettings(nullptr, std::move(from)) {}
  inline TestSettings& operator=(const TestSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestSettings& operator=(TestSettings&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestSettings& default_instance() {
    return *internal_default_instance();
  }
  enum DefinitionCase {
    kHostname = 1,
    kIp = 2,
    kAgent = 3,
    kFlow = 4,
    kDns = 5,
    kUrl = 6,
    kNetworkGrid = 7,
    kPageLoad = 8,
    kDnsGrid = 9,
    kNetworkMesh = 18,
    DEFINITION_NOT_SET = 0,
  };
  static inline const TestSettings* internal_default_instance() {
    return reinterpret_cast<const TestSettings*>(
        &_TestSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(TestSettings& a, TestSettings& b) { a.Swap(&b); }
  inline void Swap(TestSettings* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestSettings* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TestSettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestSettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestSettings& from) { TestSettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TestSettings* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.TestSettings"; }

 protected:
  explicit TestSettings(::google::protobuf::Arena* arena);
  TestSettings(::google::protobuf::Arena* arena, const TestSettings& from);
  TestSettings(::google::protobuf::Arena* arena, TestSettings&& from) noexcept
      : TestSettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAgentIdsFieldNumber = 10,
    kTasksFieldNumber = 11,
    kNotificationChannelsFieldNumber = 17,
    kNotesFieldNumber = 19,
    kHealthSettingsFieldNumber = 12,
    kPingFieldNumber = 13,
    kTraceFieldNumber = 14,
    kThroughputFieldNumber = 20,
    kScheduleFieldNumber = 21,
    kAlertingFieldNumber = 22,
    kPeriodFieldNumber = 15,
    kFamilyFieldNumber = 16,
    kHostnameFieldNumber = 1,
    kIpFieldNumber = 2,
    kAgentFieldNumber = 3,
    kFlowFieldNumber = 4,
    kDnsFieldNumber = 5,
    kUrlFieldNumber = 6,
    kNetworkGridFieldNumber = 7,
    kPageLoadFieldNumber = 8,
    kDnsGridFieldNumber = 9,
    kNetworkMeshFieldNumber = 18,
  };
  // repeated string agent_ids = 10 [json_name = "agentIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int agent_ids_size() const;
  private:
  int _internal_agent_ids_size() const;

  public:
  void clear_agent_ids() ;
  const std::string& agent_ids(int index) const;
  std::string* mutable_agent_ids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_agent_ids(int index, Arg_&& value, Args_... args);
  std::string* add_agent_ids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_agent_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& agent_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_agent_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_agent_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_agent_ids();

  public:
  // repeated string tasks = 11 [json_name = "tasks", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int tasks_size() const;
  private:
  int _internal_tasks_size() const;

  public:
  void clear_tasks() ;
  const std::string& tasks(int index) const;
  std::string* mutable_tasks(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tasks(int index, Arg_&& value, Args_... args);
  std::string* add_tasks();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_tasks(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& tasks() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_tasks();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_tasks() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_tasks();

  public:
  // repeated string notification_channels = 17 [json_name = "notificationChannels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int notification_channels_size() const;
  private:
  int _internal_notification_channels_size() const;

  public:
  void clear_notification_channels() ;
  const std::string& notification_channels(int index) const;
  std::string* mutable_notification_channels(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_notification_channels(int index, Arg_&& value, Args_... args);
  std::string* add_notification_channels();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_notification_channels(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& notification_channels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_notification_channels();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_notification_channels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_notification_channels();

  public:
  // string notes = 19 [json_name = "notes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_notes() ;
  const std::string& notes() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_notes(Arg_&& arg, Args_... args);
  std::string* mutable_notes();
  PROTOBUF_NODISCARD std::string* release_notes();
  void set_allocated_notes(std::string* value);

  private:
  const std::string& _internal_notes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_notes(
      const std::string& value);
  std::string* _internal_mutable_notes();

  public:
  // .kentik.synthetics.v202309.HealthSettings health_settings = 12 [json_name = "healthSettings", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_health_settings() const;
  void clear_health_settings() ;
  const ::kentik::synthetics::v202309::HealthSettings& health_settings() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::HealthSettings* release_health_settings();
  ::kentik::synthetics::v202309::HealthSettings* mutable_health_settings();
  void set_allocated_health_settings(::kentik::synthetics::v202309::HealthSettings* value);
  void unsafe_arena_set_allocated_health_settings(::kentik::synthetics::v202309::HealthSettings* value);
  ::kentik::synthetics::v202309::HealthSettings* unsafe_arena_release_health_settings();

  private:
  const ::kentik::synthetics::v202309::HealthSettings& _internal_health_settings() const;
  ::kentik::synthetics::v202309::HealthSettings* _internal_mutable_health_settings();

  public:
  // .kentik.synthetics.v202309.TestPingSettings ping = 13 [json_name = "ping", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_ping() const;
  void clear_ping() ;
  const ::kentik::synthetics::v202309::TestPingSettings& ping() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::TestPingSettings* release_ping();
  ::kentik::synthetics::v202309::TestPingSettings* mutable_ping();
  void set_allocated_ping(::kentik::synthetics::v202309::TestPingSettings* value);
  void unsafe_arena_set_allocated_ping(::kentik::synthetics::v202309::TestPingSettings* value);
  ::kentik::synthetics::v202309::TestPingSettings* unsafe_arena_release_ping();

  private:
  const ::kentik::synthetics::v202309::TestPingSettings& _internal_ping() const;
  ::kentik::synthetics::v202309::TestPingSettings* _internal_mutable_ping();

  public:
  // .kentik.synthetics.v202309.TestTraceSettings trace = 14 [json_name = "trace", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_trace() const;
  void clear_trace() ;
  const ::kentik::synthetics::v202309::TestTraceSettings& trace() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::TestTraceSettings* release_trace();
  ::kentik::synthetics::v202309::TestTraceSettings* mutable_trace();
  void set_allocated_trace(::kentik::synthetics::v202309::TestTraceSettings* value);
  void unsafe_arena_set_allocated_trace(::kentik::synthetics::v202309::TestTraceSettings* value);
  ::kentik::synthetics::v202309::TestTraceSettings* unsafe_arena_release_trace();

  private:
  const ::kentik::synthetics::v202309::TestTraceSettings& _internal_trace() const;
  ::kentik::synthetics::v202309::TestTraceSettings* _internal_mutable_trace();

  public:
  // .kentik.synthetics.v202309.TestThroughputSettings throughput = 20 [json_name = "throughput", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_throughput() const;
  void clear_throughput() ;
  const ::kentik::synthetics::v202309::TestThroughputSettings& throughput() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::TestThroughputSettings* release_throughput();
  ::kentik::synthetics::v202309::TestThroughputSettings* mutable_throughput();
  void set_allocated_throughput(::kentik::synthetics::v202309::TestThroughputSettings* value);
  void unsafe_arena_set_allocated_throughput(::kentik::synthetics::v202309::TestThroughputSettings* value);
  ::kentik::synthetics::v202309::TestThroughputSettings* unsafe_arena_release_throughput();

  private:
  const ::kentik::synthetics::v202309::TestThroughputSettings& _internal_throughput() const;
  ::kentik::synthetics::v202309::TestThroughputSettings* _internal_mutable_throughput();

  public:
  // .kentik.synthetics.v202309.ScheduleSettings schedule = 21 [json_name = "schedule", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_schedule() const;
  void clear_schedule() ;
  const ::kentik::synthetics::v202309::ScheduleSettings& schedule() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::ScheduleSettings* release_schedule();
  ::kentik::synthetics::v202309::ScheduleSettings* mutable_schedule();
  void set_allocated_schedule(::kentik::synthetics::v202309::ScheduleSettings* value);
  void unsafe_arena_set_allocated_schedule(::kentik::synthetics::v202309::ScheduleSettings* value);
  ::kentik::synthetics::v202309::ScheduleSettings* unsafe_arena_release_schedule();

  private:
  const ::kentik::synthetics::v202309::ScheduleSettings& _internal_schedule() const;
  ::kentik::synthetics::v202309::ScheduleSettings* _internal_mutable_schedule();

  public:
  // .kentik.synthetics.v202309.AlertingSettings alerting = 22 [json_name = "alerting", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_alerting() const;
  void clear_alerting() ;
  const ::kentik::synthetics::v202309::AlertingSettings& alerting() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::AlertingSettings* release_alerting();
  ::kentik::synthetics::v202309::AlertingSettings* mutable_alerting();
  void set_allocated_alerting(::kentik::synthetics::v202309::AlertingSettings* value);
  void unsafe_arena_set_allocated_alerting(::kentik::synthetics::v202309::AlertingSettings* value);
  ::kentik::synthetics::v202309::AlertingSettings* unsafe_arena_release_alerting();

  private:
  const ::kentik::synthetics::v202309::AlertingSettings& _internal_alerting() const;
  ::kentik::synthetics::v202309::AlertingSettings* _internal_mutable_alerting();

  public:
  // uint32 period = 15 [json_name = "period", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_period() ;
  ::uint32_t period() const;
  void set_period(::uint32_t value);

  private:
  ::uint32_t _internal_period() const;
  void _internal_set_period(::uint32_t value);

  public:
  // .kentik.synthetics.v202309.IPFamily family = 16 [json_name = "family", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_family() ;
  ::kentik::synthetics::v202309::IPFamily family() const;
  void set_family(::kentik::synthetics::v202309::IPFamily value);

  private:
  ::kentik::synthetics::v202309::IPFamily _internal_family() const;
  void _internal_set_family(::kentik::synthetics::v202309::IPFamily value);

  public:
  // .kentik.synthetics.v202309.HostnameTest hostname = 1 [json_name = "hostname"];
  bool has_hostname() const;
  private:
  bool _internal_has_hostname() const;

  public:
  void clear_hostname() ;
  const ::kentik::synthetics::v202309::HostnameTest& hostname() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::HostnameTest* release_hostname();
  ::kentik::synthetics::v202309::HostnameTest* mutable_hostname();
  void set_allocated_hostname(::kentik::synthetics::v202309::HostnameTest* value);
  void unsafe_arena_set_allocated_hostname(::kentik::synthetics::v202309::HostnameTest* value);
  ::kentik::synthetics::v202309::HostnameTest* unsafe_arena_release_hostname();

  private:
  const ::kentik::synthetics::v202309::HostnameTest& _internal_hostname() const;
  ::kentik::synthetics::v202309::HostnameTest* _internal_mutable_hostname();

  public:
  // .kentik.synthetics.v202309.IpTest ip = 2 [json_name = "ip"];
  bool has_ip() const;
  private:
  bool _internal_has_ip() const;

  public:
  void clear_ip() ;
  const ::kentik::synthetics::v202309::IpTest& ip() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::IpTest* release_ip();
  ::kentik::synthetics::v202309::IpTest* mutable_ip();
  void set_allocated_ip(::kentik::synthetics::v202309::IpTest* value);
  void unsafe_arena_set_allocated_ip(::kentik::synthetics::v202309::IpTest* value);
  ::kentik::synthetics::v202309::IpTest* unsafe_arena_release_ip();

  private:
  const ::kentik::synthetics::v202309::IpTest& _internal_ip() const;
  ::kentik::synthetics::v202309::IpTest* _internal_mutable_ip();

  public:
  // .kentik.synthetics.v202309.AgentTest agent = 3 [json_name = "agent"];
  bool has_agent() const;
  private:
  bool _internal_has_agent() const;

  public:
  void clear_agent() ;
  const ::kentik::synthetics::v202309::AgentTest& agent() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::AgentTest* release_agent();
  ::kentik::synthetics::v202309::AgentTest* mutable_agent();
  void set_allocated_agent(::kentik::synthetics::v202309::AgentTest* value);
  void unsafe_arena_set_allocated_agent(::kentik::synthetics::v202309::AgentTest* value);
  ::kentik::synthetics::v202309::AgentTest* unsafe_arena_release_agent();

  private:
  const ::kentik::synthetics::v202309::AgentTest& _internal_agent() const;
  ::kentik::synthetics::v202309::AgentTest* _internal_mutable_agent();

  public:
  // .kentik.synthetics.v202309.FlowTest flow = 4 [json_name = "flow"];
  bool has_flow() const;
  private:
  bool _internal_has_flow() const;

  public:
  void clear_flow() ;
  const ::kentik::synthetics::v202309::FlowTest& flow() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::FlowTest* release_flow();
  ::kentik::synthetics::v202309::FlowTest* mutable_flow();
  void set_allocated_flow(::kentik::synthetics::v202309::FlowTest* value);
  void unsafe_arena_set_allocated_flow(::kentik::synthetics::v202309::FlowTest* value);
  ::kentik::synthetics::v202309::FlowTest* unsafe_arena_release_flow();

  private:
  const ::kentik::synthetics::v202309::FlowTest& _internal_flow() const;
  ::kentik::synthetics::v202309::FlowTest* _internal_mutable_flow();

  public:
  // .kentik.synthetics.v202309.DnsTest dns = 5 [json_name = "dns"];
  bool has_dns() const;
  private:
  bool _internal_has_dns() const;

  public:
  void clear_dns() ;
  const ::kentik::synthetics::v202309::DnsTest& dns() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::DnsTest* release_dns();
  ::kentik::synthetics::v202309::DnsTest* mutable_dns();
  void set_allocated_dns(::kentik::synthetics::v202309::DnsTest* value);
  void unsafe_arena_set_allocated_dns(::kentik::synthetics::v202309::DnsTest* value);
  ::kentik::synthetics::v202309::DnsTest* unsafe_arena_release_dns();

  private:
  const ::kentik::synthetics::v202309::DnsTest& _internal_dns() const;
  ::kentik::synthetics::v202309::DnsTest* _internal_mutable_dns();

  public:
  // .kentik.synthetics.v202309.UrlTest url = 6 [json_name = "url"];
  bool has_url() const;
  private:
  bool _internal_has_url() const;

  public:
  void clear_url() ;
  const ::kentik::synthetics::v202309::UrlTest& url() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::UrlTest* release_url();
  ::kentik::synthetics::v202309::UrlTest* mutable_url();
  void set_allocated_url(::kentik::synthetics::v202309::UrlTest* value);
  void unsafe_arena_set_allocated_url(::kentik::synthetics::v202309::UrlTest* value);
  ::kentik::synthetics::v202309::UrlTest* unsafe_arena_release_url();

  private:
  const ::kentik::synthetics::v202309::UrlTest& _internal_url() const;
  ::kentik::synthetics::v202309::UrlTest* _internal_mutable_url();

  public:
  // .kentik.synthetics.v202309.IpTest network_grid = 7 [json_name = "networkGrid"];
  bool has_network_grid() const;
  private:
  bool _internal_has_network_grid() const;

  public:
  void clear_network_grid() ;
  const ::kentik::synthetics::v202309::IpTest& network_grid() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::IpTest* release_network_grid();
  ::kentik::synthetics::v202309::IpTest* mutable_network_grid();
  void set_allocated_network_grid(::kentik::synthetics::v202309::IpTest* value);
  void unsafe_arena_set_allocated_network_grid(::kentik::synthetics::v202309::IpTest* value);
  ::kentik::synthetics::v202309::IpTest* unsafe_arena_release_network_grid();

  private:
  const ::kentik::synthetics::v202309::IpTest& _internal_network_grid() const;
  ::kentik::synthetics::v202309::IpTest* _internal_mutable_network_grid();

  public:
  // .kentik.synthetics.v202309.PageLoadTest page_load = 8 [json_name = "pageLoad"];
  bool has_page_load() const;
  private:
  bool _internal_has_page_load() const;

  public:
  void clear_page_load() ;
  const ::kentik::synthetics::v202309::PageLoadTest& page_load() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::PageLoadTest* release_page_load();
  ::kentik::synthetics::v202309::PageLoadTest* mutable_page_load();
  void set_allocated_page_load(::kentik::synthetics::v202309::PageLoadTest* value);
  void unsafe_arena_set_allocated_page_load(::kentik::synthetics::v202309::PageLoadTest* value);
  ::kentik::synthetics::v202309::PageLoadTest* unsafe_arena_release_page_load();

  private:
  const ::kentik::synthetics::v202309::PageLoadTest& _internal_page_load() const;
  ::kentik::synthetics::v202309::PageLoadTest* _internal_mutable_page_load();

  public:
  // .kentik.synthetics.v202309.DnsTest dns_grid = 9 [json_name = "dnsGrid"];
  bool has_dns_grid() const;
  private:
  bool _internal_has_dns_grid() const;

  public:
  void clear_dns_grid() ;
  const ::kentik::synthetics::v202309::DnsTest& dns_grid() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::DnsTest* release_dns_grid();
  ::kentik::synthetics::v202309::DnsTest* mutable_dns_grid();
  void set_allocated_dns_grid(::kentik::synthetics::v202309::DnsTest* value);
  void unsafe_arena_set_allocated_dns_grid(::kentik::synthetics::v202309::DnsTest* value);
  ::kentik::synthetics::v202309::DnsTest* unsafe_arena_release_dns_grid();

  private:
  const ::kentik::synthetics::v202309::DnsTest& _internal_dns_grid() const;
  ::kentik::synthetics::v202309::DnsTest* _internal_mutable_dns_grid();

  public:
  // .kentik.synthetics.v202309.NetworkMeshTest network_mesh = 18 [json_name = "networkMesh"];
  bool has_network_mesh() const;
  private:
  bool _internal_has_network_mesh() const;

  public:
  void clear_network_mesh() ;
  const ::kentik::synthetics::v202309::NetworkMeshTest& network_mesh() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::NetworkMeshTest* release_network_mesh();
  ::kentik::synthetics::v202309::NetworkMeshTest* mutable_network_mesh();
  void set_allocated_network_mesh(::kentik::synthetics::v202309::NetworkMeshTest* value);
  void unsafe_arena_set_allocated_network_mesh(::kentik::synthetics::v202309::NetworkMeshTest* value);
  ::kentik::synthetics::v202309::NetworkMeshTest* unsafe_arena_release_network_mesh();

  private:
  const ::kentik::synthetics::v202309::NetworkMeshTest& _internal_network_mesh() const;
  ::kentik::synthetics::v202309::NetworkMeshTest* _internal_mutable_network_mesh();

  public:
  void clear_definition();
  DefinitionCase definition_case() const;
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.TestSettings)
 private:
  class _Internal;
  void set_has_hostname();
  void set_has_ip();
  void set_has_agent();
  void set_has_flow();
  void set_has_dns();
  void set_has_url();
  void set_has_network_grid();
  void set_has_page_load();
  void set_has_dns_grid();
  void set_has_network_mesh();
  inline bool has_definition() const;
  inline void clear_has_definition();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 22, 16,
      103, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestSettings& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> agent_ids_;
    ::google::protobuf::RepeatedPtrField<std::string> tasks_;
    ::google::protobuf::RepeatedPtrField<std::string> notification_channels_;
    ::google::protobuf::internal::ArenaStringPtr notes_;
    ::kentik::synthetics::v202309::HealthSettings* health_settings_;
    ::kentik::synthetics::v202309::TestPingSettings* ping_;
    ::kentik::synthetics::v202309::TestTraceSettings* trace_;
    ::kentik::synthetics::v202309::TestThroughputSettings* throughput_;
    ::kentik::synthetics::v202309::ScheduleSettings* schedule_;
    ::kentik::synthetics::v202309::AlertingSettings* alerting_;
    ::uint32_t period_;
    int family_;
    union DefinitionUnion {
      constexpr DefinitionUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::kentik::synthetics::v202309::HostnameTest* hostname_;
      ::kentik::synthetics::v202309::IpTest* ip_;
      ::kentik::synthetics::v202309::AgentTest* agent_;
      ::kentik::synthetics::v202309::FlowTest* flow_;
      ::kentik::synthetics::v202309::DnsTest* dns_;
      ::kentik::synthetics::v202309::UrlTest* url_;
      ::kentik::synthetics::v202309::IpTest* network_grid_;
      ::kentik::synthetics::v202309::PageLoadTest* page_load_;
      ::kentik::synthetics::v202309::DnsTest* dns_grid_;
      ::kentik::synthetics::v202309::NetworkMeshTest* network_mesh_;
    } definition_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class TaskResults final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.TaskResults) */ {
 public:
  inline TaskResults() : TaskResults(nullptr) {}
  ~TaskResults() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TaskResults* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TaskResults));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TaskResults(
      ::google::protobuf::internal::ConstantInitialized);

  inline TaskResults(const TaskResults& from) : TaskResults(nullptr, from) {}
  inline TaskResults(TaskResults&& from) noexcept
      : TaskResults(nullptr, std::move(from)) {}
  inline TaskResults& operator=(const TaskResults& from) {
    CopyFrom(from);
    return *this;
  }
  inline TaskResults& operator=(TaskResults&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TaskResults& default_instance() {
    return *internal_default_instance();
  }
  enum TaskTypeCase {
    kPing = 1,
    kHttp = 2,
    kDns = 3,
    TASK_TYPE_NOT_SET = 0,
  };
  static inline const TaskResults* internal_default_instance() {
    return reinterpret_cast<const TaskResults*>(
        &_TaskResults_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(TaskResults& a, TaskResults& b) { a.Swap(&b); }
  inline void Swap(TaskResults* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TaskResults* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TaskResults* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TaskResults>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TaskResults& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TaskResults& from) { TaskResults::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TaskResults* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.TaskResults"; }

 protected:
  explicit TaskResults(::google::protobuf::Arena* arena);
  TaskResults(::google::protobuf::Arena* arena, const TaskResults& from);
  TaskResults(::google::protobuf::Arena* arena, TaskResults&& from) noexcept
      : TaskResults(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHealthFieldNumber = 4,
    kPingFieldNumber = 1,
    kHttpFieldNumber = 2,
    kDnsFieldNumber = 3,
  };
  // string health = 4 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_health() ;
  const std::string& health() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_health(Arg_&& arg, Args_... args);
  std::string* mutable_health();
  PROTOBUF_NODISCARD std::string* release_health();
  void set_allocated_health(std::string* value);

  private:
  const std::string& _internal_health() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_health(
      const std::string& value);
  std::string* _internal_mutable_health();

  public:
  // .kentik.synthetics.v202309.PingResults ping = 1 [json_name = "ping", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_ping() const;
  private:
  bool _internal_has_ping() const;

  public:
  void clear_ping() ;
  const ::kentik::synthetics::v202309::PingResults& ping() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::PingResults* release_ping();
  ::kentik::synthetics::v202309::PingResults* mutable_ping();
  void set_allocated_ping(::kentik::synthetics::v202309::PingResults* value);
  void unsafe_arena_set_allocated_ping(::kentik::synthetics::v202309::PingResults* value);
  ::kentik::synthetics::v202309::PingResults* unsafe_arena_release_ping();

  private:
  const ::kentik::synthetics::v202309::PingResults& _internal_ping() const;
  ::kentik::synthetics::v202309::PingResults* _internal_mutable_ping();

  public:
  // .kentik.synthetics.v202309.HTTPResults http = 2 [json_name = "http", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_http() const;
  private:
  bool _internal_has_http() const;

  public:
  void clear_http() ;
  const ::kentik::synthetics::v202309::HTTPResults& http() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::HTTPResults* release_http();
  ::kentik::synthetics::v202309::HTTPResults* mutable_http();
  void set_allocated_http(::kentik::synthetics::v202309::HTTPResults* value);
  void unsafe_arena_set_allocated_http(::kentik::synthetics::v202309::HTTPResults* value);
  ::kentik::synthetics::v202309::HTTPResults* unsafe_arena_release_http();

  private:
  const ::kentik::synthetics::v202309::HTTPResults& _internal_http() const;
  ::kentik::synthetics::v202309::HTTPResults* _internal_mutable_http();

  public:
  // .kentik.synthetics.v202309.DNSResults dns = 3 [json_name = "dns", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_dns() const;
  private:
  bool _internal_has_dns() const;

  public:
  void clear_dns() ;
  const ::kentik::synthetics::v202309::DNSResults& dns() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::DNSResults* release_dns();
  ::kentik::synthetics::v202309::DNSResults* mutable_dns();
  void set_allocated_dns(::kentik::synthetics::v202309::DNSResults* value);
  void unsafe_arena_set_allocated_dns(::kentik::synthetics::v202309::DNSResults* value);
  ::kentik::synthetics::v202309::DNSResults* unsafe_arena_release_dns();

  private:
  const ::kentik::synthetics::v202309::DNSResults& _internal_dns() const;
  ::kentik::synthetics::v202309::DNSResults* _internal_mutable_dns();

  public:
  void clear_task_type();
  TaskTypeCase task_type_case() const;
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.TaskResults)
 private:
  class _Internal;
  void set_has_ping();
  void set_has_http();
  void set_has_dns();
  inline bool has_task_type() const;
  inline void clear_has_task_type();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 4, 3,
      52, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TaskResults& from_msg);
    ::google::protobuf::internal::ArenaStringPtr health_;
    union TaskTypeUnion {
      constexpr TaskTypeUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::kentik::synthetics::v202309::PingResults* ping_;
      ::kentik::synthetics::v202309::HTTPResults* http_;
      ::kentik::synthetics::v202309::DNSResults* dns_;
    } task_type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class Path final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.Path) */ {
 public:
  inline Path() : Path(nullptr) {}
  ~Path() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Path* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Path));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Path(
      ::google::protobuf::internal::ConstantInitialized);

  inline Path(const Path& from) : Path(nullptr, from) {}
  inline Path(Path&& from) noexcept
      : Path(nullptr, std::move(from)) {}
  inline Path& operator=(const Path& from) {
    CopyFrom(from);
    return *this;
  }
  inline Path& operator=(Path&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Path& default_instance() {
    return *internal_default_instance();
  }
  static inline const Path* internal_default_instance() {
    return reinterpret_cast<const Path*>(
        &_Path_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 39;
  friend void swap(Path& a, Path& b) { a.Swap(&b); }
  inline void Swap(Path* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Path* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Path* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Path>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Path& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Path& from) { Path::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Path* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.Path"; }

 protected:
  explicit Path(::google::protobuf::Arena* arena);
  Path(::google::protobuf::Arena* arena, const Path& from);
  Path(::google::protobuf::Arena* arena, Path&& from) noexcept
      : Path(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTracesFieldNumber = 8,
    kAgentIdFieldNumber = 1,
    kTargetIpFieldNumber = 3,
    kHopCountFieldNumber = 4,
    kTimeFieldNumber = 9,
    kMaxAsPathLengthFieldNumber = 7,
  };
  // repeated .kentik.synthetics.v202309.PathTrace traces = 8 [json_name = "traces", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int traces_size() const;
  private:
  int _internal_traces_size() const;

  public:
  void clear_traces() ;
  ::kentik::synthetics::v202309::PathTrace* mutable_traces(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::PathTrace>* mutable_traces();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::PathTrace>& _internal_traces() const;
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::PathTrace>* _internal_mutable_traces();
  public:
  const ::kentik::synthetics::v202309::PathTrace& traces(int index) const;
  ::kentik::synthetics::v202309::PathTrace* add_traces();
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::PathTrace>& traces() const;
  // string agent_id = 1 [json_name = "agentId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_agent_id() ;
  const std::string& agent_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_agent_id(Arg_&& arg, Args_... args);
  std::string* mutable_agent_id();
  PROTOBUF_NODISCARD std::string* release_agent_id();
  void set_allocated_agent_id(std::string* value);

  private:
  const std::string& _internal_agent_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_agent_id(
      const std::string& value);
  std::string* _internal_mutable_agent_id();

  public:
  // string target_ip = 3 [json_name = "targetIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_target_ip() ;
  const std::string& target_ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_target_ip(Arg_&& arg, Args_... args);
  std::string* mutable_target_ip();
  PROTOBUF_NODISCARD std::string* release_target_ip();
  void set_allocated_target_ip(std::string* value);

  private:
  const std::string& _internal_target_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_target_ip(
      const std::string& value);
  std::string* _internal_mutable_target_ip();

  public:
  // .kentik.synthetics.v202309.Stats hop_count = 4 [json_name = "hopCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_hop_count() const;
  void clear_hop_count() ;
  const ::kentik::synthetics::v202309::Stats& hop_count() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::Stats* release_hop_count();
  ::kentik::synthetics::v202309::Stats* mutable_hop_count();
  void set_allocated_hop_count(::kentik::synthetics::v202309::Stats* value);
  void unsafe_arena_set_allocated_hop_count(::kentik::synthetics::v202309::Stats* value);
  ::kentik::synthetics::v202309::Stats* unsafe_arena_release_hop_count();

  private:
  const ::kentik::synthetics::v202309::Stats& _internal_hop_count() const;
  ::kentik::synthetics::v202309::Stats* _internal_mutable_hop_count();

  public:
  // .google.protobuf.Timestamp time = 9 [json_name = "time", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_time() const;
  void clear_time() ;
  const ::google::protobuf::Timestamp& time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_time();
  ::google::protobuf::Timestamp* mutable_time();
  void set_allocated_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_time();

  private:
  const ::google::protobuf::Timestamp& _internal_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_time();

  public:
  // int32 max_as_path_length = 7 [json_name = "maxAsPathLength", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_max_as_path_length() ;
  ::int32_t max_as_path_length() const;
  void set_max_as_path_length(::int32_t value);

  private:
  ::int32_t _internal_max_as_path_length() const;
  void _internal_set_max_as_path_length(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.Path)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 3,
      56, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Path& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::kentik::synthetics::v202309::PathTrace > traces_;
    ::google::protobuf::internal::ArenaStringPtr agent_id_;
    ::google::protobuf::internal::ArenaStringPtr target_ip_;
    ::kentik::synthetics::v202309::Stats* hop_count_;
    ::google::protobuf::Timestamp* time_;
    ::int32_t max_as_path_length_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class GetTraceForTestResponse_NodesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::google::protobuf::Message,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::google::protobuf::Message,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  GetTraceForTestResponse_NodesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetTraceForTestResponse_NodesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetTraceForTestResponse_NodesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const GetTraceForTestResponse_NodesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const GetTraceForTestResponse_NodesEntry_DoNotUse*>(
        &_GetTraceForTestResponse_NodesEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      72, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class Agent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.Agent) */ {
 public:
  inline Agent() : Agent(nullptr) {}
  ~Agent() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Agent* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Agent));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Agent(
      ::google::protobuf::internal::ConstantInitialized);

  inline Agent(const Agent& from) : Agent(nullptr, from) {}
  inline Agent(Agent&& from) noexcept
      : Agent(nullptr, std::move(from)) {}
  inline Agent& operator=(const Agent& from) {
    CopyFrom(from);
    return *this;
  }
  inline Agent& operator=(Agent&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Agent& default_instance() {
    return *internal_default_instance();
  }
  static inline const Agent* internal_default_instance() {
    return reinterpret_cast<const Agent*>(
        &_Agent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Agent& a, Agent& b) { a.Swap(&b); }
  inline void Swap(Agent* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Agent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Agent* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Agent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Agent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Agent& from) { Agent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Agent* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.Agent"; }

 protected:
  explicit Agent(::google::protobuf::Arena* arena);
  Agent(::google::protobuf::Arena* arena, const Agent& from);
  Agent(::google::protobuf::Arena* arena, Agent&& from) noexcept
      : Agent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTestIdsFieldNumber = 19,
    kLabelsFieldNumber = 25,
    kIdFieldNumber = 1,
    kSiteNameFieldNumber = 2,
    kAliasFieldNumber = 4,
    kTypeFieldNumber = 5,
    kOsFieldNumber = 6,
    kIpFieldNumber = 7,
    kSiteIdFieldNumber = 13,
    kVersionFieldNumber = 14,
    kCityFieldNumber = 16,
    kRegionFieldNumber = 17,
    kCountryFieldNumber = 18,
    kLocalIpFieldNumber = 20,
    kCloudRegionFieldNumber = 22,
    kCloudProviderFieldNumber = 23,
    kLastAuthedFieldNumber = 10,
    kMetadataFieldNumber = 26,
    kStatusFieldNumber = 3,
    kFamilyFieldNumber = 11,
    kLatFieldNumber = 8,
    kLongFieldNumber = 9,
    kAsnFieldNumber = 12,
    kAgentImplFieldNumber = 24,
  };
  // repeated string test_ids = 19 [json_name = "testIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int test_ids_size() const;
  private:
  int _internal_test_ids_size() const;

  public:
  void clear_test_ids() ;
  const std::string& test_ids(int index) const;
  std::string* mutable_test_ids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_test_ids(int index, Arg_&& value, Args_... args);
  std::string* add_test_ids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_test_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& test_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_test_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_test_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_test_ids();

  public:
  // repeated string labels = 25 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int labels_size() const;
  private:
  int _internal_labels_size() const;

  public:
  void clear_labels() ;
  const std::string& labels(int index) const;
  std::string* mutable_labels(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_labels(int index, Arg_&& value, Args_... args);
  std::string* add_labels();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_labels(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& labels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_labels();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_labels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_labels();

  public:
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string site_name = 2 [json_name = "siteName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_site_name() ;
  const std::string& site_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_site_name(Arg_&& arg, Args_... args);
  std::string* mutable_site_name();
  PROTOBUF_NODISCARD std::string* release_site_name();
  void set_allocated_site_name(std::string* value);

  private:
  const std::string& _internal_site_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_site_name(
      const std::string& value);
  std::string* _internal_mutable_site_name();

  public:
  // string alias = 4 [json_name = "alias", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_alias() ;
  const std::string& alias() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_alias(Arg_&& arg, Args_... args);
  std::string* mutable_alias();
  PROTOBUF_NODISCARD std::string* release_alias();
  void set_allocated_alias(std::string* value);

  private:
  const std::string& _internal_alias() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_alias(
      const std::string& value);
  std::string* _internal_mutable_alias();

  public:
  // string type = 5 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // string os = 6 [json_name = "os", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_os() ;
  const std::string& os() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_os(Arg_&& arg, Args_... args);
  std::string* mutable_os();
  PROTOBUF_NODISCARD std::string* release_os();
  void set_allocated_os(std::string* value);

  private:
  const std::string& _internal_os() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_os(
      const std::string& value);
  std::string* _internal_mutable_os();

  public:
  // string ip = 7 [json_name = "ip", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  [[deprecated]]  void clear_ip() ;
  [[deprecated]] const std::string& ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_ip(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_ip();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_ip();
  [[deprecated]] void set_allocated_ip(std::string* value);

  private:
  const std::string& _internal_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ip(
      const std::string& value);
  std::string* _internal_mutable_ip();

  public:
  // string site_id = 13 [json_name = "siteId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_site_id() ;
  const std::string& site_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_site_id(Arg_&& arg, Args_... args);
  std::string* mutable_site_id();
  PROTOBUF_NODISCARD std::string* release_site_id();
  void set_allocated_site_id(std::string* value);

  private:
  const std::string& _internal_site_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_site_id(
      const std::string& value);
  std::string* _internal_mutable_site_id();

  public:
  // string version = 14 [json_name = "version", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // string city = 16 [json_name = "city", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_city() ;
  const std::string& city() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_city(Arg_&& arg, Args_... args);
  std::string* mutable_city();
  PROTOBUF_NODISCARD std::string* release_city();
  void set_allocated_city(std::string* value);

  private:
  const std::string& _internal_city() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_city(
      const std::string& value);
  std::string* _internal_mutable_city();

  public:
  // string region = 17 [json_name = "region", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_region() ;
  const std::string& region() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_region(Arg_&& arg, Args_... args);
  std::string* mutable_region();
  PROTOBUF_NODISCARD std::string* release_region();
  void set_allocated_region(std::string* value);

  private:
  const std::string& _internal_region() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_region(
      const std::string& value);
  std::string* _internal_mutable_region();

  public:
  // string country = 18 [json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_country() ;
  const std::string& country() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_country(Arg_&& arg, Args_... args);
  std::string* mutable_country();
  PROTOBUF_NODISCARD std::string* release_country();
  void set_allocated_country(std::string* value);

  private:
  const std::string& _internal_country() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_country(
      const std::string& value);
  std::string* _internal_mutable_country();

  public:
  // string local_ip = 20 [json_name = "localIp", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  [[deprecated]]  void clear_local_ip() ;
  [[deprecated]] const std::string& local_ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_local_ip(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_local_ip();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_local_ip();
  [[deprecated]] void set_allocated_local_ip(std::string* value);

  private:
  const std::string& _internal_local_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_local_ip(
      const std::string& value);
  std::string* _internal_mutable_local_ip();

  public:
  // string cloud_region = 22 [json_name = "cloudRegion", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_cloud_region() ;
  const std::string& cloud_region() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cloud_region(Arg_&& arg, Args_... args);
  std::string* mutable_cloud_region();
  PROTOBUF_NODISCARD std::string* release_cloud_region();
  void set_allocated_cloud_region(std::string* value);

  private:
  const std::string& _internal_cloud_region() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cloud_region(
      const std::string& value);
  std::string* _internal_mutable_cloud_region();

  public:
  // string cloud_provider = 23 [json_name = "cloudProvider", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_cloud_provider() ;
  const std::string& cloud_provider() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cloud_provider(Arg_&& arg, Args_... args);
  std::string* mutable_cloud_provider();
  PROTOBUF_NODISCARD std::string* release_cloud_provider();
  void set_allocated_cloud_provider(std::string* value);

  private:
  const std::string& _internal_cloud_provider() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cloud_provider(
      const std::string& value);
  std::string* _internal_mutable_cloud_provider();

  public:
  // .google.protobuf.Timestamp last_authed = 10 [json_name = "lastAuthed", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_last_authed() const;
  void clear_last_authed() ;
  const ::google::protobuf::Timestamp& last_authed() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_last_authed();
  ::google::protobuf::Timestamp* mutable_last_authed();
  void set_allocated_last_authed(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_last_authed(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_last_authed();

  private:
  const ::google::protobuf::Timestamp& _internal_last_authed() const;
  ::google::protobuf::Timestamp* _internal_mutable_last_authed();

  public:
  // .kentik.synthetics.v202309.AgentMetadata metadata = 26 [json_name = "metadata", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_metadata() const;
  void clear_metadata() ;
  const ::kentik::synthetics::v202309::AgentMetadata& metadata() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::AgentMetadata* release_metadata();
  ::kentik::synthetics::v202309::AgentMetadata* mutable_metadata();
  void set_allocated_metadata(::kentik::synthetics::v202309::AgentMetadata* value);
  void unsafe_arena_set_allocated_metadata(::kentik::synthetics::v202309::AgentMetadata* value);
  ::kentik::synthetics::v202309::AgentMetadata* unsafe_arena_release_metadata();

  private:
  const ::kentik::synthetics::v202309::AgentMetadata& _internal_metadata() const;
  ::kentik::synthetics::v202309::AgentMetadata* _internal_mutable_metadata();

  public:
  // .kentik.synthetics.v202309.AgentStatus status = 3 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_status() ;
  ::kentik::synthetics::v202309::AgentStatus status() const;
  void set_status(::kentik::synthetics::v202309::AgentStatus value);

  private:
  ::kentik::synthetics::v202309::AgentStatus _internal_status() const;
  void _internal_set_status(::kentik::synthetics::v202309::AgentStatus value);

  public:
  // .kentik.synthetics.v202309.IPFamily family = 11 [json_name = "family", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_family() ;
  ::kentik::synthetics::v202309::IPFamily family() const;
  void set_family(::kentik::synthetics::v202309::IPFamily value);

  private:
  ::kentik::synthetics::v202309::IPFamily _internal_family() const;
  void _internal_set_family(::kentik::synthetics::v202309::IPFamily value);

  public:
  // double lat = 8 [json_name = "lat", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_lat() ;
  double lat() const;
  void set_lat(double value);

  private:
  double _internal_lat() const;
  void _internal_set_lat(double value);

  public:
  // double long = 9 [json_name = "long", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_long_() ;
  double long_() const;
  void set_long_(double value);

  private:
  double _internal_long_() const;
  void _internal_set_long_(double value);

  public:
  // uint32 asn = 12 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_asn() ;
  ::uint32_t asn() const;
  void set_asn(::uint32_t value);

  private:
  ::uint32_t _internal_asn() const;
  void _internal_set_asn(::uint32_t value);

  public:
  // .kentik.synthetics.v202309.ImplementType agent_impl = 24 [json_name = "agentImpl", (.google.api.field_behavior) = OUTPUT_ONLY];
  void clear_agent_impl() ;
  ::kentik::synthetics::v202309::ImplementType agent_impl() const;
  void set_agent_impl(::kentik::synthetics::v202309::ImplementType value);

  private:
  ::kentik::synthetics::v202309::ImplementType _internal_agent_impl() const;
  void _internal_set_agent_impl(::kentik::synthetics::v202309::ImplementType value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.Agent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 24, 2,
      167, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Agent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> test_ids_;
    ::google::protobuf::RepeatedPtrField<std::string> labels_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr site_name_;
    ::google::protobuf::internal::ArenaStringPtr alias_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr os_;
    ::google::protobuf::internal::ArenaStringPtr ip_;
    ::google::protobuf::internal::ArenaStringPtr site_id_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::google::protobuf::internal::ArenaStringPtr city_;
    ::google::protobuf::internal::ArenaStringPtr region_;
    ::google::protobuf::internal::ArenaStringPtr country_;
    ::google::protobuf::internal::ArenaStringPtr local_ip_;
    ::google::protobuf::internal::ArenaStringPtr cloud_region_;
    ::google::protobuf::internal::ArenaStringPtr cloud_provider_;
    ::google::protobuf::Timestamp* last_authed_;
    ::kentik::synthetics::v202309::AgentMetadata* metadata_;
    int status_;
    int family_;
    double lat_;
    double long__;
    ::uint32_t asn_;
    int agent_impl_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class UpdateAgentResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.UpdateAgentResponse) */ {
 public:
  inline UpdateAgentResponse() : UpdateAgentResponse(nullptr) {}
  ~UpdateAgentResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateAgentResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateAgentResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateAgentResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateAgentResponse(const UpdateAgentResponse& from) : UpdateAgentResponse(nullptr, from) {}
  inline UpdateAgentResponse(UpdateAgentResponse&& from) noexcept
      : UpdateAgentResponse(nullptr, std::move(from)) {}
  inline UpdateAgentResponse& operator=(const UpdateAgentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateAgentResponse& operator=(UpdateAgentResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateAgentResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateAgentResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateAgentResponse*>(
        &_UpdateAgentResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 50;
  friend void swap(UpdateAgentResponse& a, UpdateAgentResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateAgentResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateAgentResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateAgentResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateAgentResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateAgentResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateAgentResponse& from) { UpdateAgentResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateAgentResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.UpdateAgentResponse"; }

 protected:
  explicit UpdateAgentResponse(::google::protobuf::Arena* arena);
  UpdateAgentResponse(::google::protobuf::Arena* arena, const UpdateAgentResponse& from);
  UpdateAgentResponse(::google::protobuf::Arena* arena, UpdateAgentResponse&& from) noexcept
      : UpdateAgentResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAgentFieldNumber = 1,
  };
  // .kentik.synthetics.v202309.Agent agent = 1 [json_name = "agent", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_agent() const;
  void clear_agent() ;
  const ::kentik::synthetics::v202309::Agent& agent() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::Agent* release_agent();
  ::kentik::synthetics::v202309::Agent* mutable_agent();
  void set_allocated_agent(::kentik::synthetics::v202309::Agent* value);
  void unsafe_arena_set_allocated_agent(::kentik::synthetics::v202309::Agent* value);
  ::kentik::synthetics::v202309::Agent* unsafe_arena_release_agent();

  private:
  const ::kentik::synthetics::v202309::Agent& _internal_agent() const;
  ::kentik::synthetics::v202309::Agent* _internal_mutable_agent();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.UpdateAgentResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateAgentResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::synthetics::v202309::Agent* agent_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class UpdateAgentRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.UpdateAgentRequest) */ {
 public:
  inline UpdateAgentRequest() : UpdateAgentRequest(nullptr) {}
  ~UpdateAgentRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateAgentRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateAgentRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateAgentRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateAgentRequest(const UpdateAgentRequest& from) : UpdateAgentRequest(nullptr, from) {}
  inline UpdateAgentRequest(UpdateAgentRequest&& from) noexcept
      : UpdateAgentRequest(nullptr, std::move(from)) {}
  inline UpdateAgentRequest& operator=(const UpdateAgentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateAgentRequest& operator=(UpdateAgentRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateAgentRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateAgentRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateAgentRequest*>(
        &_UpdateAgentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 49;
  friend void swap(UpdateAgentRequest& a, UpdateAgentRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateAgentRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateAgentRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateAgentRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateAgentRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateAgentRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateAgentRequest& from) { UpdateAgentRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateAgentRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.UpdateAgentRequest"; }

 protected:
  explicit UpdateAgentRequest(::google::protobuf::Arena* arena);
  UpdateAgentRequest(::google::protobuf::Arena* arena, const UpdateAgentRequest& from);
  UpdateAgentRequest(::google::protobuf::Arena* arena, UpdateAgentRequest&& from) noexcept
      : UpdateAgentRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAgentFieldNumber = 1,
  };
  // .kentik.synthetics.v202309.Agent agent = 1 [json_name = "agent", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_agent() const;
  void clear_agent() ;
  const ::kentik::synthetics::v202309::Agent& agent() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::Agent* release_agent();
  ::kentik::synthetics::v202309::Agent* mutable_agent();
  void set_allocated_agent(::kentik::synthetics::v202309::Agent* value);
  void unsafe_arena_set_allocated_agent(::kentik::synthetics::v202309::Agent* value);
  ::kentik::synthetics::v202309::Agent* unsafe_arena_release_agent();

  private:
  const ::kentik::synthetics::v202309::Agent& _internal_agent() const;
  ::kentik::synthetics::v202309::Agent* _internal_mutable_agent();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.UpdateAgentRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateAgentRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::synthetics::v202309::Agent* agent_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class Test final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.Test) */ {
 public:
  inline Test() : Test(nullptr) {}
  ~Test() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Test* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Test));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Test(
      ::google::protobuf::internal::ConstantInitialized);

  inline Test(const Test& from) : Test(nullptr, from) {}
  inline Test(Test&& from) noexcept
      : Test(nullptr, std::move(from)) {}
  inline Test& operator=(const Test& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test& operator=(Test&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Test& default_instance() {
    return *internal_default_instance();
  }
  static inline const Test* internal_default_instance() {
    return reinterpret_cast<const Test*>(
        &_Test_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Test& a, Test& b) { a.Swap(&b); }
  inline void Swap(Test* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Test* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Test* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Test>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Test& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Test& from) { Test::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Test* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.Test"; }

 protected:
  explicit Test(::google::protobuf::Arena* arena);
  Test(::google::protobuf::Arena* arena, const Test& from);
  Test(::google::protobuf::Arena* arena, Test&& from) noexcept
      : Test(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLabelsFieldNumber = 11,
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kTypeFieldNumber = 3,
    kSettingsFieldNumber = 6,
    kCdateFieldNumber = 7,
    kEdateFieldNumber = 8,
    kCreatedByFieldNumber = 9,
    kLastUpdatedByFieldNumber = 10,
    kStatusFieldNumber = 5,
  };
  // repeated string labels = 11 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int labels_size() const;
  private:
  int _internal_labels_size() const;

  public:
  void clear_labels() ;
  const std::string& labels(int index) const;
  std::string* mutable_labels(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_labels(int index, Arg_&& value, Args_... args);
  std::string* add_labels();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_labels(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& labels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_labels();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_labels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_labels();

  public:
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string type = 3 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // .kentik.synthetics.v202309.TestSettings settings = 6 [json_name = "settings", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_settings() const;
  void clear_settings() ;
  const ::kentik::synthetics::v202309::TestSettings& settings() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::TestSettings* release_settings();
  ::kentik::synthetics::v202309::TestSettings* mutable_settings();
  void set_allocated_settings(::kentik::synthetics::v202309::TestSettings* value);
  void unsafe_arena_set_allocated_settings(::kentik::synthetics::v202309::TestSettings* value);
  ::kentik::synthetics::v202309::TestSettings* unsafe_arena_release_settings();

  private:
  const ::kentik::synthetics::v202309::TestSettings& _internal_settings() const;
  ::kentik::synthetics::v202309::TestSettings* _internal_mutable_settings();

  public:
  // .google.protobuf.Timestamp cdate = 7 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_cdate() const;
  void clear_cdate() ;
  const ::google::protobuf::Timestamp& cdate() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_cdate();
  ::google::protobuf::Timestamp* mutable_cdate();
  void set_allocated_cdate(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_cdate(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_cdate();

  private:
  const ::google::protobuf::Timestamp& _internal_cdate() const;
  ::google::protobuf::Timestamp* _internal_mutable_cdate();

  public:
  // .google.protobuf.Timestamp edate = 8 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_edate() const;
  void clear_edate() ;
  const ::google::protobuf::Timestamp& edate() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_edate();
  ::google::protobuf::Timestamp* mutable_edate();
  void set_allocated_edate(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_edate(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_edate();

  private:
  const ::google::protobuf::Timestamp& _internal_edate() const;
  ::google::protobuf::Timestamp* _internal_mutable_edate();

  public:
  // .kentik.core.v202303.UserInfo created_by = 9 [json_name = "createdBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_created_by() const;
  void clear_created_by() ;
  const ::kentik::core::v202303::UserInfo& created_by() const;
  PROTOBUF_NODISCARD ::kentik::core::v202303::UserInfo* release_created_by();
  ::kentik::core::v202303::UserInfo* mutable_created_by();
  void set_allocated_created_by(::kentik::core::v202303::UserInfo* value);
  void unsafe_arena_set_allocated_created_by(::kentik::core::v202303::UserInfo* value);
  ::kentik::core::v202303::UserInfo* unsafe_arena_release_created_by();

  private:
  const ::kentik::core::v202303::UserInfo& _internal_created_by() const;
  ::kentik::core::v202303::UserInfo* _internal_mutable_created_by();

  public:
  // .kentik.core.v202303.UserInfo last_updated_by = 10 [json_name = "lastUpdatedBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_last_updated_by() const;
  void clear_last_updated_by() ;
  const ::kentik::core::v202303::UserInfo& last_updated_by() const;
  PROTOBUF_NODISCARD ::kentik::core::v202303::UserInfo* release_last_updated_by();
  ::kentik::core::v202303::UserInfo* mutable_last_updated_by();
  void set_allocated_last_updated_by(::kentik::core::v202303::UserInfo* value);
  void unsafe_arena_set_allocated_last_updated_by(::kentik::core::v202303::UserInfo* value);
  ::kentik::core::v202303::UserInfo* unsafe_arena_release_last_updated_by();

  private:
  const ::kentik::core::v202303::UserInfo& _internal_last_updated_by() const;
  ::kentik::core::v202303::UserInfo* _internal_mutable_last_updated_by();

  public:
  // .kentik.synthetics.v202309.TestStatus status = 5 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_status() ;
  ::kentik::synthetics::v202309::TestStatus status() const;
  void set_status(::kentik::synthetics::v202309::TestStatus value);

  private:
  ::kentik::synthetics::v202309::TestStatus _internal_status() const;
  void _internal_set_status(::kentik::synthetics::v202309::TestStatus value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.Test)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 5,
      63, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Test& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> labels_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::kentik::synthetics::v202309::TestSettings* settings_;
    ::google::protobuf::Timestamp* cdate_;
    ::google::protobuf::Timestamp* edate_;
    ::kentik::core::v202303::UserInfo* created_by_;
    ::kentik::core::v202303::UserInfo* last_updated_by_;
    int status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class ListAgentsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.ListAgentsResponse) */ {
 public:
  inline ListAgentsResponse() : ListAgentsResponse(nullptr) {}
  ~ListAgentsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListAgentsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListAgentsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListAgentsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListAgentsResponse(const ListAgentsResponse& from) : ListAgentsResponse(nullptr, from) {}
  inline ListAgentsResponse(ListAgentsResponse&& from) noexcept
      : ListAgentsResponse(nullptr, std::move(from)) {}
  inline ListAgentsResponse& operator=(const ListAgentsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListAgentsResponse& operator=(ListAgentsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListAgentsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListAgentsResponse* internal_default_instance() {
    return reinterpret_cast<const ListAgentsResponse*>(
        &_ListAgentsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 46;
  friend void swap(ListAgentsResponse& a, ListAgentsResponse& b) { a.Swap(&b); }
  inline void Swap(ListAgentsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListAgentsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListAgentsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListAgentsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListAgentsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListAgentsResponse& from) { ListAgentsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListAgentsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.ListAgentsResponse"; }

 protected:
  explicit ListAgentsResponse(::google::protobuf::Arena* arena);
  ListAgentsResponse(::google::protobuf::Arena* arena, const ListAgentsResponse& from);
  ListAgentsResponse(::google::protobuf::Arena* arena, ListAgentsResponse&& from) noexcept
      : ListAgentsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAgentsFieldNumber = 1,
    kInvalidCountFieldNumber = 2,
  };
  // repeated .kentik.synthetics.v202309.Agent agents = 1 [json_name = "agents", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int agents_size() const;
  private:
  int _internal_agents_size() const;

  public:
  void clear_agents() ;
  ::kentik::synthetics::v202309::Agent* mutable_agents(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Agent>* mutable_agents();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Agent>& _internal_agents() const;
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Agent>* _internal_mutable_agents();
  public:
  const ::kentik::synthetics::v202309::Agent& agents(int index) const;
  ::kentik::synthetics::v202309::Agent* add_agents();
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Agent>& agents() const;
  // uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_invalid_count() ;
  ::uint32_t invalid_count() const;
  void set_invalid_count(::uint32_t value);

  private:
  ::uint32_t _internal_invalid_count() const;
  void _internal_set_invalid_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.ListAgentsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListAgentsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::synthetics::v202309::Agent > agents_;
    ::uint32_t invalid_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class GetTraceForTestResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.GetTraceForTestResponse) */ {
 public:
  inline GetTraceForTestResponse() : GetTraceForTestResponse(nullptr) {}
  ~GetTraceForTestResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetTraceForTestResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetTraceForTestResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetTraceForTestResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetTraceForTestResponse(const GetTraceForTestResponse& from) : GetTraceForTestResponse(nullptr, from) {}
  inline GetTraceForTestResponse(GetTraceForTestResponse&& from) noexcept
      : GetTraceForTestResponse(nullptr, std::move(from)) {}
  inline GetTraceForTestResponse& operator=(const GetTraceForTestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTraceForTestResponse& operator=(GetTraceForTestResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTraceForTestResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTraceForTestResponse* internal_default_instance() {
    return reinterpret_cast<const GetTraceForTestResponse*>(
        &_GetTraceForTestResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 44;
  friend void swap(GetTraceForTestResponse& a, GetTraceForTestResponse& b) { a.Swap(&b); }
  inline void Swap(GetTraceForTestResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTraceForTestResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTraceForTestResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetTraceForTestResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetTraceForTestResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetTraceForTestResponse& from) { GetTraceForTestResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetTraceForTestResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.GetTraceForTestResponse"; }

 protected:
  explicit GetTraceForTestResponse(::google::protobuf::Arena* arena);
  GetTraceForTestResponse(::google::protobuf::Arena* arena, const GetTraceForTestResponse& from);
  GetTraceForTestResponse(::google::protobuf::Arena* arena, GetTraceForTestResponse&& from) noexcept
      : GetTraceForTestResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodesFieldNumber = 1,
    kPathsFieldNumber = 2,
  };
  // map<string, .kentik.synthetics.v202309.NetNode> nodes = 1 [json_name = "nodes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int nodes_size() const;
  private:
  int _internal_nodes_size() const;

  public:
  void clear_nodes() ;
  const ::google::protobuf::Map<std::string, ::kentik::synthetics::v202309::NetNode>& nodes() const;
  ::google::protobuf::Map<std::string, ::kentik::synthetics::v202309::NetNode>* mutable_nodes();

  private:
  const ::google::protobuf::Map<std::string, ::kentik::synthetics::v202309::NetNode>& _internal_nodes() const;
  ::google::protobuf::Map<std::string, ::kentik::synthetics::v202309::NetNode>* _internal_mutable_nodes();

  public:
  // repeated .kentik.synthetics.v202309.Path paths = 2 [json_name = "paths", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int paths_size() const;
  private:
  int _internal_paths_size() const;

  public:
  void clear_paths() ;
  ::kentik::synthetics::v202309::Path* mutable_paths(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Path>* mutable_paths();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Path>& _internal_paths() const;
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Path>* _internal_mutable_paths();
  public:
  const ::kentik::synthetics::v202309::Path& paths(int index) const;
  ::kentik::synthetics::v202309::Path* add_paths();
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Path>& paths() const;
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.GetTraceForTestResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 3,
      63, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetTraceForTestResponse& from_msg);
    ::google::protobuf::internal::MapField<GetTraceForTestResponse_NodesEntry_DoNotUse, std::string, ::kentik::synthetics::v202309::NetNode,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        nodes_;
    ::google::protobuf::RepeatedPtrField< ::kentik::synthetics::v202309::Path > paths_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class GetAgentResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.GetAgentResponse) */ {
 public:
  inline GetAgentResponse() : GetAgentResponse(nullptr) {}
  ~GetAgentResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetAgentResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetAgentResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetAgentResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetAgentResponse(const GetAgentResponse& from) : GetAgentResponse(nullptr, from) {}
  inline GetAgentResponse(GetAgentResponse&& from) noexcept
      : GetAgentResponse(nullptr, std::move(from)) {}
  inline GetAgentResponse& operator=(const GetAgentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAgentResponse& operator=(GetAgentResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAgentResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAgentResponse* internal_default_instance() {
    return reinterpret_cast<const GetAgentResponse*>(
        &_GetAgentResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 48;
  friend void swap(GetAgentResponse& a, GetAgentResponse& b) { a.Swap(&b); }
  inline void Swap(GetAgentResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAgentResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAgentResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetAgentResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetAgentResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetAgentResponse& from) { GetAgentResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetAgentResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.GetAgentResponse"; }

 protected:
  explicit GetAgentResponse(::google::protobuf::Arena* arena);
  GetAgentResponse(::google::protobuf::Arena* arena, const GetAgentResponse& from);
  GetAgentResponse(::google::protobuf::Arena* arena, GetAgentResponse&& from) noexcept
      : GetAgentResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAgentFieldNumber = 1,
  };
  // .kentik.synthetics.v202309.Agent agent = 1 [json_name = "agent", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_agent() const;
  void clear_agent() ;
  const ::kentik::synthetics::v202309::Agent& agent() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::Agent* release_agent();
  ::kentik::synthetics::v202309::Agent* mutable_agent();
  void set_allocated_agent(::kentik::synthetics::v202309::Agent* value);
  void unsafe_arena_set_allocated_agent(::kentik::synthetics::v202309::Agent* value);
  ::kentik::synthetics::v202309::Agent* unsafe_arena_release_agent();

  private:
  const ::kentik::synthetics::v202309::Agent& _internal_agent() const;
  ::kentik::synthetics::v202309::Agent* _internal_mutable_agent();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.GetAgentResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetAgentResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::synthetics::v202309::Agent* agent_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class AgentResults final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.AgentResults) */ {
 public:
  inline AgentResults() : AgentResults(nullptr) {}
  ~AgentResults() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AgentResults* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AgentResults));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AgentResults(
      ::google::protobuf::internal::ConstantInitialized);

  inline AgentResults(const AgentResults& from) : AgentResults(nullptr, from) {}
  inline AgentResults(AgentResults&& from) noexcept
      : AgentResults(nullptr, std::move(from)) {}
  inline AgentResults& operator=(const AgentResults& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgentResults& operator=(AgentResults&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AgentResults& default_instance() {
    return *internal_default_instance();
  }
  static inline const AgentResults* internal_default_instance() {
    return reinterpret_cast<const AgentResults*>(
        &_AgentResults_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(AgentResults& a, AgentResults& b) { a.Swap(&b); }
  inline void Swap(AgentResults* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgentResults* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AgentResults* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AgentResults>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AgentResults& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AgentResults& from) { AgentResults::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AgentResults* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.AgentResults"; }

 protected:
  explicit AgentResults(::google::protobuf::Arena* arena);
  AgentResults(::google::protobuf::Arena* arena, const AgentResults& from);
  AgentResults(::google::protobuf::Arena* arena, AgentResults&& from) noexcept
      : AgentResults(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTasksFieldNumber = 3,
    kAgentIdFieldNumber = 1,
    kHealthFieldNumber = 2,
  };
  // repeated .kentik.synthetics.v202309.TaskResults tasks = 3 [json_name = "tasks", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int tasks_size() const;
  private:
  int _internal_tasks_size() const;

  public:
  void clear_tasks() ;
  ::kentik::synthetics::v202309::TaskResults* mutable_tasks(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TaskResults>* mutable_tasks();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TaskResults>& _internal_tasks() const;
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TaskResults>* _internal_mutable_tasks();
  public:
  const ::kentik::synthetics::v202309::TaskResults& tasks(int index) const;
  ::kentik::synthetics::v202309::TaskResults* add_tasks();
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TaskResults>& tasks() const;
  // string agent_id = 1 [json_name = "agentId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_agent_id() ;
  const std::string& agent_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_agent_id(Arg_&& arg, Args_... args);
  std::string* mutable_agent_id();
  PROTOBUF_NODISCARD std::string* release_agent_id();
  void set_allocated_agent_id(std::string* value);

  private:
  const std::string& _internal_agent_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_agent_id(
      const std::string& value);
  std::string* _internal_mutable_agent_id();

  public:
  // string health = 2 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_health() ;
  const std::string& health() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_health(Arg_&& arg, Args_... args);
  std::string* mutable_health();
  PROTOBUF_NODISCARD std::string* release_health();
  void set_allocated_health(std::string* value);

  private:
  const std::string& _internal_health() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_health(
      const std::string& value);
  std::string* _internal_mutable_health();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.AgentResults)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AgentResults& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::synthetics::v202309::TaskResults > tasks_;
    ::google::protobuf::internal::ArenaStringPtr agent_id_;
    ::google::protobuf::internal::ArenaStringPtr health_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class UpdateTestResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.UpdateTestResponse) */ {
 public:
  inline UpdateTestResponse() : UpdateTestResponse(nullptr) {}
  ~UpdateTestResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateTestResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateTestResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateTestResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateTestResponse(const UpdateTestResponse& from) : UpdateTestResponse(nullptr, from) {}
  inline UpdateTestResponse(UpdateTestResponse&& from) noexcept
      : UpdateTestResponse(nullptr, std::move(from)) {}
  inline UpdateTestResponse& operator=(const UpdateTestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateTestResponse& operator=(UpdateTestResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateTestResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateTestResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateTestResponse*>(
        &_UpdateTestResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 60;
  friend void swap(UpdateTestResponse& a, UpdateTestResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateTestResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateTestResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateTestResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateTestResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateTestResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateTestResponse& from) { UpdateTestResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateTestResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.UpdateTestResponse"; }

 protected:
  explicit UpdateTestResponse(::google::protobuf::Arena* arena);
  UpdateTestResponse(::google::protobuf::Arena* arena, const UpdateTestResponse& from);
  UpdateTestResponse(::google::protobuf::Arena* arena, UpdateTestResponse&& from) noexcept
      : UpdateTestResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTestFieldNumber = 1,
  };
  // .kentik.synthetics.v202309.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_test() const;
  void clear_test() ;
  const ::kentik::synthetics::v202309::Test& test() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::Test* release_test();
  ::kentik::synthetics::v202309::Test* mutable_test();
  void set_allocated_test(::kentik::synthetics::v202309::Test* value);
  void unsafe_arena_set_allocated_test(::kentik::synthetics::v202309::Test* value);
  ::kentik::synthetics::v202309::Test* unsafe_arena_release_test();

  private:
  const ::kentik::synthetics::v202309::Test& _internal_test() const;
  ::kentik::synthetics::v202309::Test* _internal_mutable_test();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.UpdateTestResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateTestResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::synthetics::v202309::Test* test_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class UpdateTestRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.UpdateTestRequest) */ {
 public:
  inline UpdateTestRequest() : UpdateTestRequest(nullptr) {}
  ~UpdateTestRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateTestRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateTestRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateTestRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateTestRequest(const UpdateTestRequest& from) : UpdateTestRequest(nullptr, from) {}
  inline UpdateTestRequest(UpdateTestRequest&& from) noexcept
      : UpdateTestRequest(nullptr, std::move(from)) {}
  inline UpdateTestRequest& operator=(const UpdateTestRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateTestRequest& operator=(UpdateTestRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateTestRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateTestRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateTestRequest*>(
        &_UpdateTestRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 59;
  friend void swap(UpdateTestRequest& a, UpdateTestRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateTestRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateTestRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateTestRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateTestRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateTestRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateTestRequest& from) { UpdateTestRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateTestRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.UpdateTestRequest"; }

 protected:
  explicit UpdateTestRequest(::google::protobuf::Arena* arena);
  UpdateTestRequest(::google::protobuf::Arena* arena, const UpdateTestRequest& from);
  UpdateTestRequest(::google::protobuf::Arena* arena, UpdateTestRequest&& from) noexcept
      : UpdateTestRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTestFieldNumber = 1,
  };
  // .kentik.synthetics.v202309.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_test() const;
  void clear_test() ;
  const ::kentik::synthetics::v202309::Test& test() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::Test* release_test();
  ::kentik::synthetics::v202309::Test* mutable_test();
  void set_allocated_test(::kentik::synthetics::v202309::Test* value);
  void unsafe_arena_set_allocated_test(::kentik::synthetics::v202309::Test* value);
  ::kentik::synthetics::v202309::Test* unsafe_arena_release_test();

  private:
  const ::kentik::synthetics::v202309::Test& _internal_test() const;
  ::kentik::synthetics::v202309::Test* _internal_mutable_test();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.UpdateTestRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateTestRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::synthetics::v202309::Test* test_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class TestResults final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.TestResults) */ {
 public:
  inline TestResults() : TestResults(nullptr) {}
  ~TestResults() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TestResults* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TestResults));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestResults(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestResults(const TestResults& from) : TestResults(nullptr, from) {}
  inline TestResults(TestResults&& from) noexcept
      : TestResults(nullptr, std::move(from)) {}
  inline TestResults& operator=(const TestResults& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestResults& operator=(TestResults&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestResults& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestResults* internal_default_instance() {
    return reinterpret_cast<const TestResults*>(
        &_TestResults_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(TestResults& a, TestResults& b) { a.Swap(&b); }
  inline void Swap(TestResults* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestResults* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestResults* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TestResults>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestResults& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestResults& from) { TestResults::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TestResults* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.TestResults"; }

 protected:
  explicit TestResults(::google::protobuf::Arena* arena);
  TestResults(::google::protobuf::Arena* arena, const TestResults& from);
  TestResults(::google::protobuf::Arena* arena, TestResults&& from) noexcept
      : TestResults(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAgentsFieldNumber = 4,
    kTestIdFieldNumber = 1,
    kHealthFieldNumber = 3,
    kTimeFieldNumber = 2,
  };
  // repeated .kentik.synthetics.v202309.AgentResults agents = 4 [json_name = "agents", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int agents_size() const;
  private:
  int _internal_agents_size() const;

  public:
  void clear_agents() ;
  ::kentik::synthetics::v202309::AgentResults* mutable_agents(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentResults>* mutable_agents();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentResults>& _internal_agents() const;
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentResults>* _internal_mutable_agents();
  public:
  const ::kentik::synthetics::v202309::AgentResults& agents(int index) const;
  ::kentik::synthetics::v202309::AgentResults* add_agents();
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentResults>& agents() const;
  // string test_id = 1 [json_name = "testId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_test_id() ;
  const std::string& test_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_test_id(Arg_&& arg, Args_... args);
  std::string* mutable_test_id();
  PROTOBUF_NODISCARD std::string* release_test_id();
  void set_allocated_test_id(std::string* value);

  private:
  const std::string& _internal_test_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_test_id(
      const std::string& value);
  std::string* _internal_mutable_test_id();

  public:
  // string health = 3 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_health() ;
  const std::string& health() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_health(Arg_&& arg, Args_... args);
  std::string* mutable_health();
  PROTOBUF_NODISCARD std::string* release_health();
  void set_allocated_health(std::string* value);

  private:
  const std::string& _internal_health() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_health(
      const std::string& value);
  std::string* _internal_mutable_health();

  public:
  // .google.protobuf.Timestamp time = 2 [json_name = "time", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_time() const;
  void clear_time() ;
  const ::google::protobuf::Timestamp& time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_time();
  ::google::protobuf::Timestamp* mutable_time();
  void set_allocated_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_time();

  private:
  const ::google::protobuf::Timestamp& _internal_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_time();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.TestResults)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      59, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestResults& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::kentik::synthetics::v202309::AgentResults > agents_;
    ::google::protobuf::internal::ArenaStringPtr test_id_;
    ::google::protobuf::internal::ArenaStringPtr health_;
    ::google::protobuf::Timestamp* time_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class ListTestsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.ListTestsResponse) */ {
 public:
  inline ListTestsResponse() : ListTestsResponse(nullptr) {}
  ~ListTestsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListTestsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListTestsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListTestsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListTestsResponse(const ListTestsResponse& from) : ListTestsResponse(nullptr, from) {}
  inline ListTestsResponse(ListTestsResponse&& from) noexcept
      : ListTestsResponse(nullptr, std::move(from)) {}
  inline ListTestsResponse& operator=(const ListTestsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListTestsResponse& operator=(ListTestsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListTestsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListTestsResponse* internal_default_instance() {
    return reinterpret_cast<const ListTestsResponse*>(
        &_ListTestsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 54;
  friend void swap(ListTestsResponse& a, ListTestsResponse& b) { a.Swap(&b); }
  inline void Swap(ListTestsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListTestsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListTestsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListTestsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListTestsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListTestsResponse& from) { ListTestsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListTestsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.ListTestsResponse"; }

 protected:
  explicit ListTestsResponse(::google::protobuf::Arena* arena);
  ListTestsResponse(::google::protobuf::Arena* arena, const ListTestsResponse& from);
  ListTestsResponse(::google::protobuf::Arena* arena, ListTestsResponse&& from) noexcept
      : ListTestsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTestsFieldNumber = 1,
    kInvalidCountFieldNumber = 2,
  };
  // repeated .kentik.synthetics.v202309.Test tests = 1 [json_name = "tests", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int tests_size() const;
  private:
  int _internal_tests_size() const;

  public:
  void clear_tests() ;
  ::kentik::synthetics::v202309::Test* mutable_tests(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Test>* mutable_tests();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Test>& _internal_tests() const;
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Test>* _internal_mutable_tests();
  public:
  const ::kentik::synthetics::v202309::Test& tests(int index) const;
  ::kentik::synthetics::v202309::Test* add_tests();
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Test>& tests() const;
  // uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_invalid_count() ;
  ::uint32_t invalid_count() const;
  void set_invalid_count(::uint32_t value);

  private:
  ::uint32_t _internal_invalid_count() const;
  void _internal_set_invalid_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.ListTestsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListTestsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::synthetics::v202309::Test > tests_;
    ::uint32_t invalid_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class GetTestResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.GetTestResponse) */ {
 public:
  inline GetTestResponse() : GetTestResponse(nullptr) {}
  ~GetTestResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetTestResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetTestResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetTestResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetTestResponse(const GetTestResponse& from) : GetTestResponse(nullptr, from) {}
  inline GetTestResponse(GetTestResponse&& from) noexcept
      : GetTestResponse(nullptr, std::move(from)) {}
  inline GetTestResponse& operator=(const GetTestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTestResponse& operator=(GetTestResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTestResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTestResponse* internal_default_instance() {
    return reinterpret_cast<const GetTestResponse*>(
        &_GetTestResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 58;
  friend void swap(GetTestResponse& a, GetTestResponse& b) { a.Swap(&b); }
  inline void Swap(GetTestResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTestResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTestResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetTestResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetTestResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetTestResponse& from) { GetTestResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetTestResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.GetTestResponse"; }

 protected:
  explicit GetTestResponse(::google::protobuf::Arena* arena);
  GetTestResponse(::google::protobuf::Arena* arena, const GetTestResponse& from);
  GetTestResponse(::google::protobuf::Arena* arena, GetTestResponse&& from) noexcept
      : GetTestResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTestFieldNumber = 1,
  };
  // .kentik.synthetics.v202309.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_test() const;
  void clear_test() ;
  const ::kentik::synthetics::v202309::Test& test() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::Test* release_test();
  ::kentik::synthetics::v202309::Test* mutable_test();
  void set_allocated_test(::kentik::synthetics::v202309::Test* value);
  void unsafe_arena_set_allocated_test(::kentik::synthetics::v202309::Test* value);
  ::kentik::synthetics::v202309::Test* unsafe_arena_release_test();

  private:
  const ::kentik::synthetics::v202309::Test& _internal_test() const;
  ::kentik::synthetics::v202309::Test* _internal_mutable_test();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.GetTestResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetTestResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::synthetics::v202309::Test* test_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class CreateTestResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.CreateTestResponse) */ {
 public:
  inline CreateTestResponse() : CreateTestResponse(nullptr) {}
  ~CreateTestResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateTestResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateTestResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateTestResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateTestResponse(const CreateTestResponse& from) : CreateTestResponse(nullptr, from) {}
  inline CreateTestResponse(CreateTestResponse&& from) noexcept
      : CreateTestResponse(nullptr, std::move(from)) {}
  inline CreateTestResponse& operator=(const CreateTestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateTestResponse& operator=(CreateTestResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateTestResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateTestResponse* internal_default_instance() {
    return reinterpret_cast<const CreateTestResponse*>(
        &_CreateTestResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 56;
  friend void swap(CreateTestResponse& a, CreateTestResponse& b) { a.Swap(&b); }
  inline void Swap(CreateTestResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateTestResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateTestResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateTestResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateTestResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateTestResponse& from) { CreateTestResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateTestResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.CreateTestResponse"; }

 protected:
  explicit CreateTestResponse(::google::protobuf::Arena* arena);
  CreateTestResponse(::google::protobuf::Arena* arena, const CreateTestResponse& from);
  CreateTestResponse(::google::protobuf::Arena* arena, CreateTestResponse&& from) noexcept
      : CreateTestResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTestFieldNumber = 1,
  };
  // .kentik.synthetics.v202309.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_test() const;
  void clear_test() ;
  const ::kentik::synthetics::v202309::Test& test() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::Test* release_test();
  ::kentik::synthetics::v202309::Test* mutable_test();
  void set_allocated_test(::kentik::synthetics::v202309::Test* value);
  void unsafe_arena_set_allocated_test(::kentik::synthetics::v202309::Test* value);
  ::kentik::synthetics::v202309::Test* unsafe_arena_release_test();

  private:
  const ::kentik::synthetics::v202309::Test& _internal_test() const;
  ::kentik::synthetics::v202309::Test* _internal_mutable_test();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.CreateTestResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateTestResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::synthetics::v202309::Test* test_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class CreateTestRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.CreateTestRequest) */ {
 public:
  inline CreateTestRequest() : CreateTestRequest(nullptr) {}
  ~CreateTestRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateTestRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateTestRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateTestRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateTestRequest(const CreateTestRequest& from) : CreateTestRequest(nullptr, from) {}
  inline CreateTestRequest(CreateTestRequest&& from) noexcept
      : CreateTestRequest(nullptr, std::move(from)) {}
  inline CreateTestRequest& operator=(const CreateTestRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateTestRequest& operator=(CreateTestRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateTestRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateTestRequest* internal_default_instance() {
    return reinterpret_cast<const CreateTestRequest*>(
        &_CreateTestRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 55;
  friend void swap(CreateTestRequest& a, CreateTestRequest& b) { a.Swap(&b); }
  inline void Swap(CreateTestRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateTestRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateTestRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateTestRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateTestRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateTestRequest& from) { CreateTestRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateTestRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.CreateTestRequest"; }

 protected:
  explicit CreateTestRequest(::google::protobuf::Arena* arena);
  CreateTestRequest(::google::protobuf::Arena* arena, const CreateTestRequest& from);
  CreateTestRequest(::google::protobuf::Arena* arena, CreateTestRequest&& from) noexcept
      : CreateTestRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTestFieldNumber = 1,
  };
  // .kentik.synthetics.v202309.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_test() const;
  void clear_test() ;
  const ::kentik::synthetics::v202309::Test& test() const;
  PROTOBUF_NODISCARD ::kentik::synthetics::v202309::Test* release_test();
  ::kentik::synthetics::v202309::Test* mutable_test();
  void set_allocated_test(::kentik::synthetics::v202309::Test* value);
  void unsafe_arena_set_allocated_test(::kentik::synthetics::v202309::Test* value);
  ::kentik::synthetics::v202309::Test* unsafe_arena_release_test();

  private:
  const ::kentik::synthetics::v202309::Test& _internal_test() const;
  ::kentik::synthetics::v202309::Test* _internal_mutable_test();

  public:
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.CreateTestRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateTestRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::synthetics::v202309::Test* test_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};
// -------------------------------------------------------------------

class GetResultsForTestsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.synthetics.v202309.GetResultsForTestsResponse) */ {
 public:
  inline GetResultsForTestsResponse() : GetResultsForTestsResponse(nullptr) {}
  ~GetResultsForTestsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetResultsForTestsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetResultsForTestsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetResultsForTestsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetResultsForTestsResponse(const GetResultsForTestsResponse& from) : GetResultsForTestsResponse(nullptr, from) {}
  inline GetResultsForTestsResponse(GetResultsForTestsResponse&& from) noexcept
      : GetResultsForTestsResponse(nullptr, std::move(from)) {}
  inline GetResultsForTestsResponse& operator=(const GetResultsForTestsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetResultsForTestsResponse& operator=(GetResultsForTestsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetResultsForTestsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetResultsForTestsResponse* internal_default_instance() {
    return reinterpret_cast<const GetResultsForTestsResponse*>(
        &_GetResultsForTestsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 41;
  friend void swap(GetResultsForTestsResponse& a, GetResultsForTestsResponse& b) { a.Swap(&b); }
  inline void Swap(GetResultsForTestsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetResultsForTestsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetResultsForTestsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetResultsForTestsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetResultsForTestsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetResultsForTestsResponse& from) { GetResultsForTestsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetResultsForTestsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.synthetics.v202309.GetResultsForTestsResponse"; }

 protected:
  explicit GetResultsForTestsResponse(::google::protobuf::Arena* arena);
  GetResultsForTestsResponse(::google::protobuf::Arena* arena, const GetResultsForTestsResponse& from);
  GetResultsForTestsResponse(::google::protobuf::Arena* arena, GetResultsForTestsResponse&& from) noexcept
      : GetResultsForTestsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultsFieldNumber = 1,
  };
  // repeated .kentik.synthetics.v202309.TestResults results = 1 [json_name = "results"];
  int results_size() const;
  private:
  int _internal_results_size() const;

  public:
  void clear_results() ;
  ::kentik::synthetics::v202309::TestResults* mutable_results(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TestResults>* mutable_results();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TestResults>& _internal_results() const;
  ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TestResults>* _internal_mutable_results();
  public:
  const ::kentik::synthetics::v202309::TestResults& results(int index) const;
  ::kentik::synthetics::v202309::TestResults* add_results();
  const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TestResults>& results() const;
  // @@protoc_insertion_point(class_scope:kentik.synthetics.v202309.GetResultsForTestsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetResultsForTestsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::synthetics::v202309::TestResults > results_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DisabledMetrics

// bool ping_latency = 1 [json_name = "pingLatency"];
inline void DisabledMetrics::clear_ping_latency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ping_latency_ = false;
}
inline bool DisabledMetrics::ping_latency() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DisabledMetrics.ping_latency)
  return _internal_ping_latency();
}
inline void DisabledMetrics::set_ping_latency(bool value) {
  _internal_set_ping_latency(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DisabledMetrics.ping_latency)
}
inline bool DisabledMetrics::_internal_ping_latency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ping_latency_;
}
inline void DisabledMetrics::_internal_set_ping_latency(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ping_latency_ = value;
}

// bool ping_jitter = 2 [json_name = "pingJitter"];
inline void DisabledMetrics::clear_ping_jitter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ping_jitter_ = false;
}
inline bool DisabledMetrics::ping_jitter() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DisabledMetrics.ping_jitter)
  return _internal_ping_jitter();
}
inline void DisabledMetrics::set_ping_jitter(bool value) {
  _internal_set_ping_jitter(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DisabledMetrics.ping_jitter)
}
inline bool DisabledMetrics::_internal_ping_jitter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ping_jitter_;
}
inline void DisabledMetrics::_internal_set_ping_jitter(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ping_jitter_ = value;
}

// bool ping_packet_loss = 3 [json_name = "pingPacketLoss"];
inline void DisabledMetrics::clear_ping_packet_loss() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ping_packet_loss_ = false;
}
inline bool DisabledMetrics::ping_packet_loss() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DisabledMetrics.ping_packet_loss)
  return _internal_ping_packet_loss();
}
inline void DisabledMetrics::set_ping_packet_loss(bool value) {
  _internal_set_ping_packet_loss(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DisabledMetrics.ping_packet_loss)
}
inline bool DisabledMetrics::_internal_ping_packet_loss() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ping_packet_loss_;
}
inline void DisabledMetrics::_internal_set_ping_packet_loss(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ping_packet_loss_ = value;
}

// bool http_latency = 4 [json_name = "httpLatency"];
inline void DisabledMetrics::clear_http_latency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.http_latency_ = false;
}
inline bool DisabledMetrics::http_latency() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DisabledMetrics.http_latency)
  return _internal_http_latency();
}
inline void DisabledMetrics::set_http_latency(bool value) {
  _internal_set_http_latency(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DisabledMetrics.http_latency)
}
inline bool DisabledMetrics::_internal_http_latency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.http_latency_;
}
inline void DisabledMetrics::_internal_set_http_latency(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.http_latency_ = value;
}

// bool http_headers = 5 [json_name = "httpHeaders"];
inline void DisabledMetrics::clear_http_headers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.http_headers_ = false;
}
inline bool DisabledMetrics::http_headers() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DisabledMetrics.http_headers)
  return _internal_http_headers();
}
inline void DisabledMetrics::set_http_headers(bool value) {
  _internal_set_http_headers(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DisabledMetrics.http_headers)
}
inline bool DisabledMetrics::_internal_http_headers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.http_headers_;
}
inline void DisabledMetrics::_internal_set_http_headers(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.http_headers_ = value;
}

// bool http_codes = 6 [json_name = "httpCodes"];
inline void DisabledMetrics::clear_http_codes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.http_codes_ = false;
}
inline bool DisabledMetrics::http_codes() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DisabledMetrics.http_codes)
  return _internal_http_codes();
}
inline void DisabledMetrics::set_http_codes(bool value) {
  _internal_set_http_codes(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DisabledMetrics.http_codes)
}
inline bool DisabledMetrics::_internal_http_codes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.http_codes_;
}
inline void DisabledMetrics::_internal_set_http_codes(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.http_codes_ = value;
}

// bool http_cert_expiry = 7 [json_name = "httpCertExpiry"];
inline void DisabledMetrics::clear_http_cert_expiry() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.http_cert_expiry_ = false;
}
inline bool DisabledMetrics::http_cert_expiry() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DisabledMetrics.http_cert_expiry)
  return _internal_http_cert_expiry();
}
inline void DisabledMetrics::set_http_cert_expiry(bool value) {
  _internal_set_http_cert_expiry(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DisabledMetrics.http_cert_expiry)
}
inline bool DisabledMetrics::_internal_http_cert_expiry() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.http_cert_expiry_;
}
inline void DisabledMetrics::_internal_set_http_cert_expiry(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.http_cert_expiry_ = value;
}

// bool transaction_latency = 8 [json_name = "transactionLatency"];
inline void DisabledMetrics::clear_transaction_latency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transaction_latency_ = false;
}
inline bool DisabledMetrics::transaction_latency() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DisabledMetrics.transaction_latency)
  return _internal_transaction_latency();
}
inline void DisabledMetrics::set_transaction_latency(bool value) {
  _internal_set_transaction_latency(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DisabledMetrics.transaction_latency)
}
inline bool DisabledMetrics::_internal_transaction_latency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.transaction_latency_;
}
inline void DisabledMetrics::_internal_set_transaction_latency(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transaction_latency_ = value;
}

// bool dns_latency = 9 [json_name = "dnsLatency"];
inline void DisabledMetrics::clear_dns_latency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_latency_ = false;
}
inline bool DisabledMetrics::dns_latency() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DisabledMetrics.dns_latency)
  return _internal_dns_latency();
}
inline void DisabledMetrics::set_dns_latency(bool value) {
  _internal_set_dns_latency(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DisabledMetrics.dns_latency)
}
inline bool DisabledMetrics::_internal_dns_latency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dns_latency_;
}
inline void DisabledMetrics::_internal_set_dns_latency(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_latency_ = value;
}

// bool dns_codes = 10 [json_name = "dnsCodes"];
inline void DisabledMetrics::clear_dns_codes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_codes_ = false;
}
inline bool DisabledMetrics::dns_codes() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DisabledMetrics.dns_codes)
  return _internal_dns_codes();
}
inline void DisabledMetrics::set_dns_codes(bool value) {
  _internal_set_dns_codes(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DisabledMetrics.dns_codes)
}
inline bool DisabledMetrics::_internal_dns_codes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dns_codes_;
}
inline void DisabledMetrics::_internal_set_dns_codes(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_codes_ = value;
}

// bool dns_ips = 11 [json_name = "dnsIps"];
inline void DisabledMetrics::clear_dns_ips() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_ips_ = false;
}
inline bool DisabledMetrics::dns_ips() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DisabledMetrics.dns_ips)
  return _internal_dns_ips();
}
inline void DisabledMetrics::set_dns_ips(bool value) {
  _internal_set_dns_ips(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DisabledMetrics.dns_ips)
}
inline bool DisabledMetrics::_internal_dns_ips() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dns_ips_;
}
inline void DisabledMetrics::_internal_set_dns_ips(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_ips_ = value;
}

// bool throughput_bandwidth = 12 [json_name = "throughputBandwidth"];
inline void DisabledMetrics::clear_throughput_bandwidth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.throughput_bandwidth_ = false;
}
inline bool DisabledMetrics::throughput_bandwidth() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DisabledMetrics.throughput_bandwidth)
  return _internal_throughput_bandwidth();
}
inline void DisabledMetrics::set_throughput_bandwidth(bool value) {
  _internal_set_throughput_bandwidth(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DisabledMetrics.throughput_bandwidth)
}
inline bool DisabledMetrics::_internal_throughput_bandwidth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.throughput_bandwidth_;
}
inline void DisabledMetrics::_internal_set_throughput_bandwidth(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.throughput_bandwidth_ = value;
}

// -------------------------------------------------------------------

// Agent

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Agent::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Agent::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Agent::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Agent.id)
}
inline std::string* Agent::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Agent.id)
  return _s;
}
inline const std::string& Agent::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Agent::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Agent::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Agent::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Agent.id)
  return _impl_.id_.Release();
}
inline void Agent::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Agent.id)
}

// string site_name = 2 [json_name = "siteName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Agent::clear_site_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_name_.ClearToEmpty();
}
inline const std::string& Agent::site_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.site_name)
  return _internal_site_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Agent::set_site_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Agent.site_name)
}
inline std::string* Agent::mutable_site_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_site_name();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Agent.site_name)
  return _s;
}
inline const std::string& Agent::_internal_site_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.site_name_.Get();
}
inline void Agent::_internal_set_site_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_name_.Set(value, GetArena());
}
inline std::string* Agent::_internal_mutable_site_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.site_name_.Mutable( GetArena());
}
inline std::string* Agent::release_site_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Agent.site_name)
  return _impl_.site_name_.Release();
}
inline void Agent::set_allocated_site_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.site_name_.IsDefault()) {
    _impl_.site_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Agent.site_name)
}

// .kentik.synthetics.v202309.AgentStatus status = 3 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Agent::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::kentik::synthetics::v202309::AgentStatus Agent::status() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.status)
  return _internal_status();
}
inline void Agent::set_status(::kentik::synthetics::v202309::AgentStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Agent.status)
}
inline ::kentik::synthetics::v202309::AgentStatus Agent::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::synthetics::v202309::AgentStatus>(_impl_.status_);
}
inline void Agent::_internal_set_status(::kentik::synthetics::v202309::AgentStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// string alias = 4 [json_name = "alias", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Agent::clear_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_.ClearToEmpty();
}
inline const std::string& Agent::alias() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.alias)
  return _internal_alias();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Agent::set_alias(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Agent.alias)
}
inline std::string* Agent::mutable_alias() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_alias();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Agent.alias)
  return _s;
}
inline const std::string& Agent::_internal_alias() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alias_.Get();
}
inline void Agent::_internal_set_alias(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_.Set(value, GetArena());
}
inline std::string* Agent::_internal_mutable_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.alias_.Mutable( GetArena());
}
inline std::string* Agent::release_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Agent.alias)
  return _impl_.alias_.Release();
}
inline void Agent::set_allocated_alias(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.alias_.IsDefault()) {
    _impl_.alias_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Agent.alias)
}

// string type = 5 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Agent::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
}
inline const std::string& Agent::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Agent::set_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Agent.type)
}
inline std::string* Agent::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Agent.type)
  return _s;
}
inline const std::string& Agent::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void Agent::_internal_set_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(value, GetArena());
}
inline std::string* Agent::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* Agent::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Agent.type)
  return _impl_.type_.Release();
}
inline void Agent::set_allocated_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_.IsDefault()) {
    _impl_.type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Agent.type)
}

// string os = 6 [json_name = "os", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Agent::clear_os() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.os_.ClearToEmpty();
}
inline const std::string& Agent::os() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.os)
  return _internal_os();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Agent::set_os(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.os_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Agent.os)
}
inline std::string* Agent::mutable_os() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_os();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Agent.os)
  return _s;
}
inline const std::string& Agent::_internal_os() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.os_.Get();
}
inline void Agent::_internal_set_os(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.os_.Set(value, GetArena());
}
inline std::string* Agent::_internal_mutable_os() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.os_.Mutable( GetArena());
}
inline std::string* Agent::release_os() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Agent.os)
  return _impl_.os_.Release();
}
inline void Agent::set_allocated_os(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.os_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.os_.IsDefault()) {
    _impl_.os_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Agent.os)
}

// string ip = 7 [json_name = "ip", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Agent::clear_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_.ClearToEmpty();
}
inline const std::string& Agent::ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.ip)
  return _internal_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Agent::set_ip(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Agent.ip)
}
inline std::string* Agent::mutable_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ip();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Agent.ip)
  return _s;
}
inline const std::string& Agent::_internal_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ip_.Get();
}
inline void Agent::_internal_set_ip(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_.Set(value, GetArena());
}
inline std::string* Agent::_internal_mutable_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ip_.Mutable( GetArena());
}
inline std::string* Agent::release_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Agent.ip)
  return _impl_.ip_.Release();
}
inline void Agent::set_allocated_ip(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.ip_.IsDefault()) {
    _impl_.ip_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Agent.ip)
}

// double lat = 8 [json_name = "lat", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Agent::clear_lat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lat_ = 0;
}
inline double Agent::lat() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.lat)
  return _internal_lat();
}
inline void Agent::set_lat(double value) {
  _internal_set_lat(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Agent.lat)
}
inline double Agent::_internal_lat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lat_;
}
inline void Agent::_internal_set_lat(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lat_ = value;
}

// double long = 9 [json_name = "long", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Agent::clear_long_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.long__ = 0;
}
inline double Agent::long_() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.long)
  return _internal_long_();
}
inline void Agent::set_long_(double value) {
  _internal_set_long_(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Agent.long)
}
inline double Agent::_internal_long_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.long__;
}
inline void Agent::_internal_set_long_(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.long__ = value;
}

// .google.protobuf.Timestamp last_authed = 10 [json_name = "lastAuthed", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Agent::has_last_authed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.last_authed_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Agent::_internal_last_authed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.last_authed_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Agent::last_authed() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.last_authed)
  return _internal_last_authed();
}
inline void Agent::unsafe_arena_set_allocated_last_authed(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_authed_);
  }
  _impl_.last_authed_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.Agent.last_authed)
}
inline ::google::protobuf::Timestamp* Agent::release_last_authed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.last_authed_;
  _impl_.last_authed_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Agent::unsafe_arena_release_last_authed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Agent.last_authed)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.last_authed_;
  _impl_.last_authed_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Agent::_internal_mutable_last_authed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_authed_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.last_authed_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.last_authed_;
}
inline ::google::protobuf::Timestamp* Agent::mutable_last_authed() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_last_authed();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Agent.last_authed)
  return _msg;
}
inline void Agent::set_allocated_last_authed(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_authed_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.last_authed_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Agent.last_authed)
}

// .kentik.synthetics.v202309.IPFamily family = 11 [json_name = "family", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Agent::clear_family() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.family_ = 0;
}
inline ::kentik::synthetics::v202309::IPFamily Agent::family() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.family)
  return _internal_family();
}
inline void Agent::set_family(::kentik::synthetics::v202309::IPFamily value) {
  _internal_set_family(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Agent.family)
}
inline ::kentik::synthetics::v202309::IPFamily Agent::_internal_family() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::synthetics::v202309::IPFamily>(_impl_.family_);
}
inline void Agent::_internal_set_family(::kentik::synthetics::v202309::IPFamily value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.family_ = value;
}

// uint32 asn = 12 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Agent::clear_asn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.asn_ = 0u;
}
inline ::uint32_t Agent::asn() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.asn)
  return _internal_asn();
}
inline void Agent::set_asn(::uint32_t value) {
  _internal_set_asn(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Agent.asn)
}
inline ::uint32_t Agent::_internal_asn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.asn_;
}
inline void Agent::_internal_set_asn(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.asn_ = value;
}

// string site_id = 13 [json_name = "siteId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Agent::clear_site_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_id_.ClearToEmpty();
}
inline const std::string& Agent::site_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.site_id)
  return _internal_site_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Agent::set_site_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Agent.site_id)
}
inline std::string* Agent::mutable_site_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_site_id();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Agent.site_id)
  return _s;
}
inline const std::string& Agent::_internal_site_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.site_id_.Get();
}
inline void Agent::_internal_set_site_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_id_.Set(value, GetArena());
}
inline std::string* Agent::_internal_mutable_site_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.site_id_.Mutable( GetArena());
}
inline std::string* Agent::release_site_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Agent.site_id)
  return _impl_.site_id_.Release();
}
inline void Agent::set_allocated_site_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.site_id_.IsDefault()) {
    _impl_.site_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Agent.site_id)
}

// string version = 14 [json_name = "version", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Agent::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& Agent::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Agent::set_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Agent.version)
}
inline std::string* Agent::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Agent.version)
  return _s;
}
inline const std::string& Agent::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_.Get();
}
inline void Agent::_internal_set_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(value, GetArena());
}
inline std::string* Agent::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* Agent::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Agent.version)
  return _impl_.version_.Release();
}
inline void Agent::set_allocated_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.version_.IsDefault()) {
    _impl_.version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Agent.version)
}

// string city = 16 [json_name = "city", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Agent::clear_city() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_.ClearToEmpty();
}
inline const std::string& Agent::city() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.city)
  return _internal_city();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Agent::set_city(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Agent.city)
}
inline std::string* Agent::mutable_city() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_city();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Agent.city)
  return _s;
}
inline const std::string& Agent::_internal_city() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.city_.Get();
}
inline void Agent::_internal_set_city(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_.Set(value, GetArena());
}
inline std::string* Agent::_internal_mutable_city() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.city_.Mutable( GetArena());
}
inline std::string* Agent::release_city() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Agent.city)
  return _impl_.city_.Release();
}
inline void Agent::set_allocated_city(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.city_.IsDefault()) {
    _impl_.city_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Agent.city)
}

// string region = 17 [json_name = "region", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Agent::clear_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_.ClearToEmpty();
}
inline const std::string& Agent::region() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.region)
  return _internal_region();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Agent::set_region(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Agent.region)
}
inline std::string* Agent::mutable_region() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_region();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Agent.region)
  return _s;
}
inline const std::string& Agent::_internal_region() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.region_.Get();
}
inline void Agent::_internal_set_region(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_.Set(value, GetArena());
}
inline std::string* Agent::_internal_mutable_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.region_.Mutable( GetArena());
}
inline std::string* Agent::release_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Agent.region)
  return _impl_.region_.Release();
}
inline void Agent::set_allocated_region(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.region_.IsDefault()) {
    _impl_.region_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Agent.region)
}

// string country = 18 [json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Agent::clear_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.ClearToEmpty();
}
inline const std::string& Agent::country() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.country)
  return _internal_country();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Agent::set_country(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Agent.country)
}
inline std::string* Agent::mutable_country() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_country();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Agent.country)
  return _s;
}
inline const std::string& Agent::_internal_country() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.country_.Get();
}
inline void Agent::_internal_set_country(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.Set(value, GetArena());
}
inline std::string* Agent::_internal_mutable_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.country_.Mutable( GetArena());
}
inline std::string* Agent::release_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Agent.country)
  return _impl_.country_.Release();
}
inline void Agent::set_allocated_country(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.country_.IsDefault()) {
    _impl_.country_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Agent.country)
}

// repeated string test_ids = 19 [json_name = "testIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Agent::_internal_test_ids_size() const {
  return _internal_test_ids().size();
}
inline int Agent::test_ids_size() const {
  return _internal_test_ids_size();
}
inline void Agent::clear_test_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.test_ids_.Clear();
}
inline std::string* Agent::add_test_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_test_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.synthetics.v202309.Agent.test_ids)
  return _s;
}
inline const std::string& Agent::test_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.test_ids)
  return _internal_test_ids().Get(index);
}
inline std::string* Agent::mutable_test_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Agent.test_ids)
  return _internal_mutable_test_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Agent::set_test_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_test_ids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Agent.test_ids)
}
template <typename Arg_, typename... Args_>
inline void Agent::add_test_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_test_ids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.Agent.test_ids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Agent::test_ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.Agent.test_ids)
  return _internal_test_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Agent::mutable_test_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.Agent.test_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_test_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Agent::_internal_test_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.test_ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Agent::_internal_mutable_test_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.test_ids_;
}

// string local_ip = 20 [json_name = "localIp", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Agent::clear_local_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_ip_.ClearToEmpty();
}
inline const std::string& Agent::local_ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.local_ip)
  return _internal_local_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Agent::set_local_ip(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Agent.local_ip)
}
inline std::string* Agent::mutable_local_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_local_ip();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Agent.local_ip)
  return _s;
}
inline const std::string& Agent::_internal_local_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.local_ip_.Get();
}
inline void Agent::_internal_set_local_ip(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_ip_.Set(value, GetArena());
}
inline std::string* Agent::_internal_mutable_local_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.local_ip_.Mutable( GetArena());
}
inline std::string* Agent::release_local_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Agent.local_ip)
  return _impl_.local_ip_.Release();
}
inline void Agent::set_allocated_local_ip(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_ip_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.local_ip_.IsDefault()) {
    _impl_.local_ip_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Agent.local_ip)
}

// string cloud_region = 22 [json_name = "cloudRegion", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Agent::clear_cloud_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cloud_region_.ClearToEmpty();
}
inline const std::string& Agent::cloud_region() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.cloud_region)
  return _internal_cloud_region();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Agent::set_cloud_region(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cloud_region_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Agent.cloud_region)
}
inline std::string* Agent::mutable_cloud_region() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cloud_region();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Agent.cloud_region)
  return _s;
}
inline const std::string& Agent::_internal_cloud_region() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cloud_region_.Get();
}
inline void Agent::_internal_set_cloud_region(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cloud_region_.Set(value, GetArena());
}
inline std::string* Agent::_internal_mutable_cloud_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.cloud_region_.Mutable( GetArena());
}
inline std::string* Agent::release_cloud_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Agent.cloud_region)
  return _impl_.cloud_region_.Release();
}
inline void Agent::set_allocated_cloud_region(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cloud_region_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.cloud_region_.IsDefault()) {
    _impl_.cloud_region_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Agent.cloud_region)
}

// string cloud_provider = 23 [json_name = "cloudProvider", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Agent::clear_cloud_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cloud_provider_.ClearToEmpty();
}
inline const std::string& Agent::cloud_provider() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.cloud_provider)
  return _internal_cloud_provider();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Agent::set_cloud_provider(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cloud_provider_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Agent.cloud_provider)
}
inline std::string* Agent::mutable_cloud_provider() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cloud_provider();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Agent.cloud_provider)
  return _s;
}
inline const std::string& Agent::_internal_cloud_provider() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cloud_provider_.Get();
}
inline void Agent::_internal_set_cloud_provider(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cloud_provider_.Set(value, GetArena());
}
inline std::string* Agent::_internal_mutable_cloud_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.cloud_provider_.Mutable( GetArena());
}
inline std::string* Agent::release_cloud_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Agent.cloud_provider)
  return _impl_.cloud_provider_.Release();
}
inline void Agent::set_allocated_cloud_provider(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cloud_provider_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.cloud_provider_.IsDefault()) {
    _impl_.cloud_provider_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Agent.cloud_provider)
}

// .kentik.synthetics.v202309.ImplementType agent_impl = 24 [json_name = "agentImpl", (.google.api.field_behavior) = OUTPUT_ONLY];
inline void Agent::clear_agent_impl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_impl_ = 0;
}
inline ::kentik::synthetics::v202309::ImplementType Agent::agent_impl() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.agent_impl)
  return _internal_agent_impl();
}
inline void Agent::set_agent_impl(::kentik::synthetics::v202309::ImplementType value) {
  _internal_set_agent_impl(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Agent.agent_impl)
}
inline ::kentik::synthetics::v202309::ImplementType Agent::_internal_agent_impl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::synthetics::v202309::ImplementType>(_impl_.agent_impl_);
}
inline void Agent::_internal_set_agent_impl(::kentik::synthetics::v202309::ImplementType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_impl_ = value;
}

// repeated string labels = 25 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Agent::_internal_labels_size() const {
  return _internal_labels().size();
}
inline int Agent::labels_size() const {
  return _internal_labels_size();
}
inline void Agent::clear_labels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.labels_.Clear();
}
inline std::string* Agent::add_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_labels()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.synthetics.v202309.Agent.labels)
  return _s;
}
inline const std::string& Agent::labels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.labels)
  return _internal_labels().Get(index);
}
inline std::string* Agent::mutable_labels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Agent.labels)
  return _internal_mutable_labels()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Agent::set_labels(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_labels()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Agent.labels)
}
template <typename Arg_, typename... Args_>
inline void Agent::add_labels(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_labels(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.Agent.labels)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Agent::labels() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.Agent.labels)
  return _internal_labels();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Agent::mutable_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.Agent.labels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_labels();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Agent::_internal_labels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.labels_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Agent::_internal_mutable_labels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.labels_;
}

// .kentik.synthetics.v202309.AgentMetadata metadata = 26 [json_name = "metadata", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Agent::has_metadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.metadata_ != nullptr);
  return value;
}
inline void Agent::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ != nullptr) _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::kentik::synthetics::v202309::AgentMetadata& Agent::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::AgentMetadata* p = _impl_.metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::AgentMetadata&>(::kentik::synthetics::v202309::_AgentMetadata_default_instance_);
}
inline const ::kentik::synthetics::v202309::AgentMetadata& Agent::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Agent.metadata)
  return _internal_metadata();
}
inline void Agent::unsafe_arena_set_allocated_metadata(::kentik::synthetics::v202309::AgentMetadata* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }
  _impl_.metadata_ = reinterpret_cast<::kentik::synthetics::v202309::AgentMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.Agent.metadata)
}
inline ::kentik::synthetics::v202309::AgentMetadata* Agent::release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::synthetics::v202309::AgentMetadata* released = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::AgentMetadata* Agent::unsafe_arena_release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Agent.metadata)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::synthetics::v202309::AgentMetadata* temp = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::AgentMetadata* Agent::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::AgentMetadata>(GetArena());
    _impl_.metadata_ = reinterpret_cast<::kentik::synthetics::v202309::AgentMetadata*>(p);
  }
  return _impl_.metadata_;
}
inline ::kentik::synthetics::v202309::AgentMetadata* Agent::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::synthetics::v202309::AgentMetadata* _msg = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Agent.metadata)
  return _msg;
}
inline void Agent::set_allocated_metadata(::kentik::synthetics::v202309::AgentMetadata* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.metadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.metadata_ = reinterpret_cast<::kentik::synthetics::v202309::AgentMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Agent.metadata)
}

// -------------------------------------------------------------------

// AgentMetadata_IpValue

// string value = 1 [json_name = "value"];
inline void AgentMetadata_IpValue::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& AgentMetadata_IpValue::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.AgentMetadata.IpValue.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AgentMetadata_IpValue::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.AgentMetadata.IpValue.value)
}
inline std::string* AgentMetadata_IpValue::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.AgentMetadata.IpValue.value)
  return _s;
}
inline const std::string& AgentMetadata_IpValue::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void AgentMetadata_IpValue::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* AgentMetadata_IpValue::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* AgentMetadata_IpValue::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.AgentMetadata.IpValue.value)
  return _impl_.value_.Release();
}
inline void AgentMetadata_IpValue::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.value_.IsDefault()) {
    _impl_.value_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.AgentMetadata.IpValue.value)
}

// -------------------------------------------------------------------

// AgentMetadata

// repeated .kentik.synthetics.v202309.AgentMetadata.IpValue private_ipv4_addresses = 1 [json_name = "privateIpv4Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int AgentMetadata::_internal_private_ipv4_addresses_size() const {
  return _internal_private_ipv4_addresses().size();
}
inline int AgentMetadata::private_ipv4_addresses_size() const {
  return _internal_private_ipv4_addresses_size();
}
inline void AgentMetadata::clear_private_ipv4_addresses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.private_ipv4_addresses_.Clear();
}
inline ::kentik::synthetics::v202309::AgentMetadata_IpValue* AgentMetadata::mutable_private_ipv4_addresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.AgentMetadata.private_ipv4_addresses)
  return _internal_mutable_private_ipv4_addresses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>* AgentMetadata::mutable_private_ipv4_addresses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.AgentMetadata.private_ipv4_addresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_private_ipv4_addresses();
}
inline const ::kentik::synthetics::v202309::AgentMetadata_IpValue& AgentMetadata::private_ipv4_addresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.AgentMetadata.private_ipv4_addresses)
  return _internal_private_ipv4_addresses().Get(index);
}
inline ::kentik::synthetics::v202309::AgentMetadata_IpValue* AgentMetadata::add_private_ipv4_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::synthetics::v202309::AgentMetadata_IpValue* _add = _internal_mutable_private_ipv4_addresses()->Add();
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.AgentMetadata.private_ipv4_addresses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>& AgentMetadata::private_ipv4_addresses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.AgentMetadata.private_ipv4_addresses)
  return _internal_private_ipv4_addresses();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>&
AgentMetadata::_internal_private_ipv4_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.private_ipv4_addresses_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>*
AgentMetadata::_internal_mutable_private_ipv4_addresses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.private_ipv4_addresses_;
}

// repeated .kentik.synthetics.v202309.AgentMetadata.IpValue public_ipv4_addresses = 2 [json_name = "publicIpv4Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int AgentMetadata::_internal_public_ipv4_addresses_size() const {
  return _internal_public_ipv4_addresses().size();
}
inline int AgentMetadata::public_ipv4_addresses_size() const {
  return _internal_public_ipv4_addresses_size();
}
inline void AgentMetadata::clear_public_ipv4_addresses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_ipv4_addresses_.Clear();
}
inline ::kentik::synthetics::v202309::AgentMetadata_IpValue* AgentMetadata::mutable_public_ipv4_addresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.AgentMetadata.public_ipv4_addresses)
  return _internal_mutable_public_ipv4_addresses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>* AgentMetadata::mutable_public_ipv4_addresses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.AgentMetadata.public_ipv4_addresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_public_ipv4_addresses();
}
inline const ::kentik::synthetics::v202309::AgentMetadata_IpValue& AgentMetadata::public_ipv4_addresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.AgentMetadata.public_ipv4_addresses)
  return _internal_public_ipv4_addresses().Get(index);
}
inline ::kentik::synthetics::v202309::AgentMetadata_IpValue* AgentMetadata::add_public_ipv4_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::synthetics::v202309::AgentMetadata_IpValue* _add = _internal_mutable_public_ipv4_addresses()->Add();
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.AgentMetadata.public_ipv4_addresses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>& AgentMetadata::public_ipv4_addresses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.AgentMetadata.public_ipv4_addresses)
  return _internal_public_ipv4_addresses();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>&
AgentMetadata::_internal_public_ipv4_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.public_ipv4_addresses_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>*
AgentMetadata::_internal_mutable_public_ipv4_addresses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.public_ipv4_addresses_;
}

// repeated .kentik.synthetics.v202309.AgentMetadata.IpValue private_ipv6_addresses = 3 [json_name = "privateIpv6Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int AgentMetadata::_internal_private_ipv6_addresses_size() const {
  return _internal_private_ipv6_addresses().size();
}
inline int AgentMetadata::private_ipv6_addresses_size() const {
  return _internal_private_ipv6_addresses_size();
}
inline void AgentMetadata::clear_private_ipv6_addresses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.private_ipv6_addresses_.Clear();
}
inline ::kentik::synthetics::v202309::AgentMetadata_IpValue* AgentMetadata::mutable_private_ipv6_addresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.AgentMetadata.private_ipv6_addresses)
  return _internal_mutable_private_ipv6_addresses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>* AgentMetadata::mutable_private_ipv6_addresses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.AgentMetadata.private_ipv6_addresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_private_ipv6_addresses();
}
inline const ::kentik::synthetics::v202309::AgentMetadata_IpValue& AgentMetadata::private_ipv6_addresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.AgentMetadata.private_ipv6_addresses)
  return _internal_private_ipv6_addresses().Get(index);
}
inline ::kentik::synthetics::v202309::AgentMetadata_IpValue* AgentMetadata::add_private_ipv6_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::synthetics::v202309::AgentMetadata_IpValue* _add = _internal_mutable_private_ipv6_addresses()->Add();
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.AgentMetadata.private_ipv6_addresses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>& AgentMetadata::private_ipv6_addresses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.AgentMetadata.private_ipv6_addresses)
  return _internal_private_ipv6_addresses();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>&
AgentMetadata::_internal_private_ipv6_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.private_ipv6_addresses_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>*
AgentMetadata::_internal_mutable_private_ipv6_addresses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.private_ipv6_addresses_;
}

// repeated .kentik.synthetics.v202309.AgentMetadata.IpValue public_ipv6_addresses = 4 [json_name = "publicIpv6Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int AgentMetadata::_internal_public_ipv6_addresses_size() const {
  return _internal_public_ipv6_addresses().size();
}
inline int AgentMetadata::public_ipv6_addresses_size() const {
  return _internal_public_ipv6_addresses_size();
}
inline void AgentMetadata::clear_public_ipv6_addresses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_ipv6_addresses_.Clear();
}
inline ::kentik::synthetics::v202309::AgentMetadata_IpValue* AgentMetadata::mutable_public_ipv6_addresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.AgentMetadata.public_ipv6_addresses)
  return _internal_mutable_public_ipv6_addresses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>* AgentMetadata::mutable_public_ipv6_addresses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.AgentMetadata.public_ipv6_addresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_public_ipv6_addresses();
}
inline const ::kentik::synthetics::v202309::AgentMetadata_IpValue& AgentMetadata::public_ipv6_addresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.AgentMetadata.public_ipv6_addresses)
  return _internal_public_ipv6_addresses().Get(index);
}
inline ::kentik::synthetics::v202309::AgentMetadata_IpValue* AgentMetadata::add_public_ipv6_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::synthetics::v202309::AgentMetadata_IpValue* _add = _internal_mutable_public_ipv6_addresses()->Add();
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.AgentMetadata.public_ipv6_addresses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>& AgentMetadata::public_ipv6_addresses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.AgentMetadata.public_ipv6_addresses)
  return _internal_public_ipv6_addresses();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>&
AgentMetadata::_internal_public_ipv6_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.public_ipv6_addresses_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentMetadata_IpValue>*
AgentMetadata::_internal_mutable_public_ipv6_addresses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.public_ipv6_addresses_;
}

// -------------------------------------------------------------------

// Test

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Test::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Test::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Test.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Test::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Test.id)
}
inline std::string* Test::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Test.id)
  return _s;
}
inline const std::string& Test::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Test::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Test::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Test::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Test.id)
  return _impl_.id_.Release();
}
inline void Test::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Test.id)
}

// string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Test::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Test::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Test.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Test::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Test.name)
}
inline std::string* Test::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Test.name)
  return _s;
}
inline const std::string& Test::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Test::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Test::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Test::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Test.name)
  return _impl_.name_.Release();
}
inline void Test::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Test.name)
}

// string type = 3 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Test::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
}
inline const std::string& Test::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Test.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Test::set_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Test.type)
}
inline std::string* Test::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Test.type)
  return _s;
}
inline const std::string& Test::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void Test::_internal_set_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(value, GetArena());
}
inline std::string* Test::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* Test::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Test.type)
  return _impl_.type_.Release();
}
inline void Test::set_allocated_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_.IsDefault()) {
    _impl_.type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Test.type)
}

// .kentik.synthetics.v202309.TestStatus status = 5 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Test::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::kentik::synthetics::v202309::TestStatus Test::status() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Test.status)
  return _internal_status();
}
inline void Test::set_status(::kentik::synthetics::v202309::TestStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Test.status)
}
inline ::kentik::synthetics::v202309::TestStatus Test::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::synthetics::v202309::TestStatus>(_impl_.status_);
}
inline void Test::_internal_set_status(::kentik::synthetics::v202309::TestStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// .kentik.synthetics.v202309.TestSettings settings = 6 [json_name = "settings", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Test::has_settings() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.settings_ != nullptr);
  return value;
}
inline void Test::clear_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.settings_ != nullptr) _impl_.settings_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::synthetics::v202309::TestSettings& Test::_internal_settings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::TestSettings* p = _impl_.settings_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::TestSettings&>(::kentik::synthetics::v202309::_TestSettings_default_instance_);
}
inline const ::kentik::synthetics::v202309::TestSettings& Test::settings() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Test.settings)
  return _internal_settings();
}
inline void Test::unsafe_arena_set_allocated_settings(::kentik::synthetics::v202309::TestSettings* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.settings_);
  }
  _impl_.settings_ = reinterpret_cast<::kentik::synthetics::v202309::TestSettings*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.Test.settings)
}
inline ::kentik::synthetics::v202309::TestSettings* Test::release_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::TestSettings* released = _impl_.settings_;
  _impl_.settings_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::TestSettings* Test::unsafe_arena_release_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Test.settings)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::TestSettings* temp = _impl_.settings_;
  _impl_.settings_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::TestSettings* Test::_internal_mutable_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.settings_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::TestSettings>(GetArena());
    _impl_.settings_ = reinterpret_cast<::kentik::synthetics::v202309::TestSettings*>(p);
  }
  return _impl_.settings_;
}
inline ::kentik::synthetics::v202309::TestSettings* Test::mutable_settings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::synthetics::v202309::TestSettings* _msg = _internal_mutable_settings();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Test.settings)
  return _msg;
}
inline void Test::set_allocated_settings(::kentik::synthetics::v202309::TestSettings* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.settings_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.settings_ = reinterpret_cast<::kentik::synthetics::v202309::TestSettings*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Test.settings)
}

// .google.protobuf.Timestamp cdate = 7 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Test::has_cdate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cdate_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Test::_internal_cdate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.cdate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Test::cdate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Test.cdate)
  return _internal_cdate();
}
inline void Test::unsafe_arena_set_allocated_cdate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cdate_);
  }
  _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.Test.cdate)
}
inline ::google::protobuf::Timestamp* Test::release_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.cdate_;
  _impl_.cdate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Test::unsafe_arena_release_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Test.cdate)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.cdate_;
  _impl_.cdate_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Test::_internal_mutable_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cdate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.cdate_;
}
inline ::google::protobuf::Timestamp* Test::mutable_cdate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_cdate();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Test.cdate)
  return _msg;
}
inline void Test::set_allocated_cdate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cdate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Test.cdate)
}

// .google.protobuf.Timestamp edate = 8 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Test::has_edate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.edate_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Test::_internal_edate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.edate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Test::edate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Test.edate)
  return _internal_edate();
}
inline void Test::unsafe_arena_set_allocated_edate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.edate_);
  }
  _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.Test.edate)
}
inline ::google::protobuf::Timestamp* Test::release_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.edate_;
  _impl_.edate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Test::unsafe_arena_release_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Test.edate)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.edate_;
  _impl_.edate_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Test::_internal_mutable_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.edate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.edate_;
}
inline ::google::protobuf::Timestamp* Test::mutable_edate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_edate();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Test.edate)
  return _msg;
}
inline void Test::set_allocated_edate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.edate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Test.edate)
}

// .kentik.core.v202303.UserInfo created_by = 9 [json_name = "createdBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Test::has_created_by() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_by_ != nullptr);
  return value;
}
inline const ::kentik::core::v202303::UserInfo& Test::_internal_created_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::core::v202303::UserInfo* p = _impl_.created_by_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::core::v202303::UserInfo&>(::kentik::core::v202303::_UserInfo_default_instance_);
}
inline const ::kentik::core::v202303::UserInfo& Test::created_by() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Test.created_by)
  return _internal_created_by();
}
inline void Test::unsafe_arena_set_allocated_created_by(::kentik::core::v202303::UserInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_by_);
  }
  _impl_.created_by_ = reinterpret_cast<::kentik::core::v202303::UserInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.Test.created_by)
}
inline ::kentik::core::v202303::UserInfo* Test::release_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::kentik::core::v202303::UserInfo* released = _impl_.created_by_;
  _impl_.created_by_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::core::v202303::UserInfo* Test::unsafe_arena_release_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Test.created_by)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::kentik::core::v202303::UserInfo* temp = _impl_.created_by_;
  _impl_.created_by_ = nullptr;
  return temp;
}
inline ::kentik::core::v202303::UserInfo* Test::_internal_mutable_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_by_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::core::v202303::UserInfo>(GetArena());
    _impl_.created_by_ = reinterpret_cast<::kentik::core::v202303::UserInfo*>(p);
  }
  return _impl_.created_by_;
}
inline ::kentik::core::v202303::UserInfo* Test::mutable_created_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::kentik::core::v202303::UserInfo* _msg = _internal_mutable_created_by();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Test.created_by)
  return _msg;
}
inline void Test::set_allocated_created_by(::kentik::core::v202303::UserInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_by_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.created_by_ = reinterpret_cast<::kentik::core::v202303::UserInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Test.created_by)
}

// .kentik.core.v202303.UserInfo last_updated_by = 10 [json_name = "lastUpdatedBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Test::has_last_updated_by() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.last_updated_by_ != nullptr);
  return value;
}
inline const ::kentik::core::v202303::UserInfo& Test::_internal_last_updated_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::core::v202303::UserInfo* p = _impl_.last_updated_by_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::core::v202303::UserInfo&>(::kentik::core::v202303::_UserInfo_default_instance_);
}
inline const ::kentik::core::v202303::UserInfo& Test::last_updated_by() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Test.last_updated_by)
  return _internal_last_updated_by();
}
inline void Test::unsafe_arena_set_allocated_last_updated_by(::kentik::core::v202303::UserInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_updated_by_);
  }
  _impl_.last_updated_by_ = reinterpret_cast<::kentik::core::v202303::UserInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.Test.last_updated_by)
}
inline ::kentik::core::v202303::UserInfo* Test::release_last_updated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::kentik::core::v202303::UserInfo* released = _impl_.last_updated_by_;
  _impl_.last_updated_by_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::core::v202303::UserInfo* Test::unsafe_arena_release_last_updated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Test.last_updated_by)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::kentik::core::v202303::UserInfo* temp = _impl_.last_updated_by_;
  _impl_.last_updated_by_ = nullptr;
  return temp;
}
inline ::kentik::core::v202303::UserInfo* Test::_internal_mutable_last_updated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_updated_by_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::core::v202303::UserInfo>(GetArena());
    _impl_.last_updated_by_ = reinterpret_cast<::kentik::core::v202303::UserInfo*>(p);
  }
  return _impl_.last_updated_by_;
}
inline ::kentik::core::v202303::UserInfo* Test::mutable_last_updated_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::kentik::core::v202303::UserInfo* _msg = _internal_mutable_last_updated_by();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Test.last_updated_by)
  return _msg;
}
inline void Test::set_allocated_last_updated_by(::kentik::core::v202303::UserInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_updated_by_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.last_updated_by_ = reinterpret_cast<::kentik::core::v202303::UserInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Test.last_updated_by)
}

// repeated string labels = 11 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Test::_internal_labels_size() const {
  return _internal_labels().size();
}
inline int Test::labels_size() const {
  return _internal_labels_size();
}
inline void Test::clear_labels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.labels_.Clear();
}
inline std::string* Test::add_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_labels()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.synthetics.v202309.Test.labels)
  return _s;
}
inline const std::string& Test::labels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Test.labels)
  return _internal_labels().Get(index);
}
inline std::string* Test::mutable_labels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Test.labels)
  return _internal_mutable_labels()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Test::set_labels(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_labels()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Test.labels)
}
template <typename Arg_, typename... Args_>
inline void Test::add_labels(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_labels(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.Test.labels)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Test::labels() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.Test.labels)
  return _internal_labels();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Test::mutable_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.Test.labels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_labels();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Test::_internal_labels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.labels_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Test::_internal_mutable_labels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.labels_;
}

// -------------------------------------------------------------------

// TestSettings

// .kentik.synthetics.v202309.HostnameTest hostname = 1 [json_name = "hostname"];
inline bool TestSettings::has_hostname() const {
  return definition_case() == kHostname;
}
inline bool TestSettings::_internal_has_hostname() const {
  return definition_case() == kHostname;
}
inline void TestSettings::set_has_hostname() {
  _impl_._oneof_case_[0] = kHostname;
}
inline void TestSettings::clear_hostname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (definition_case() == kHostname) {
    if (GetArena() == nullptr) {
      delete _impl_.definition_.hostname_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.definition_.hostname_);
    }
    clear_has_definition();
  }
}
inline ::kentik::synthetics::v202309::HostnameTest* TestSettings::release_hostname() {
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestSettings.hostname)
  if (definition_case() == kHostname) {
    clear_has_definition();
    auto* temp = _impl_.definition_.hostname_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.definition_.hostname_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::synthetics::v202309::HostnameTest& TestSettings::_internal_hostname() const {
  return definition_case() == kHostname ? *_impl_.definition_.hostname_ : reinterpret_cast<::kentik::synthetics::v202309::HostnameTest&>(::kentik::synthetics::v202309::_HostnameTest_default_instance_);
}
inline const ::kentik::synthetics::v202309::HostnameTest& TestSettings::hostname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestSettings.hostname)
  return _internal_hostname();
}
inline ::kentik::synthetics::v202309::HostnameTest* TestSettings::unsafe_arena_release_hostname() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.synthetics.v202309.TestSettings.hostname)
  if (definition_case() == kHostname) {
    clear_has_definition();
    auto* temp = _impl_.definition_.hostname_;
    _impl_.definition_.hostname_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TestSettings::unsafe_arena_set_allocated_hostname(::kentik::synthetics::v202309::HostnameTest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_definition();
  if (value) {
    set_has_hostname();
    _impl_.definition_.hostname_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.TestSettings.hostname)
}
inline ::kentik::synthetics::v202309::HostnameTest* TestSettings::_internal_mutable_hostname() {
  if (definition_case() != kHostname) {
    clear_definition();
    set_has_hostname();
    _impl_.definition_.hostname_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::HostnameTest>(GetArena());
  }
  return _impl_.definition_.hostname_;
}
inline ::kentik::synthetics::v202309::HostnameTest* TestSettings::mutable_hostname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::synthetics::v202309::HostnameTest* _msg = _internal_mutable_hostname();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestSettings.hostname)
  return _msg;
}

// .kentik.synthetics.v202309.IpTest ip = 2 [json_name = "ip"];
inline bool TestSettings::has_ip() const {
  return definition_case() == kIp;
}
inline bool TestSettings::_internal_has_ip() const {
  return definition_case() == kIp;
}
inline void TestSettings::set_has_ip() {
  _impl_._oneof_case_[0] = kIp;
}
inline void TestSettings::clear_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (definition_case() == kIp) {
    if (GetArena() == nullptr) {
      delete _impl_.definition_.ip_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.definition_.ip_);
    }
    clear_has_definition();
  }
}
inline ::kentik::synthetics::v202309::IpTest* TestSettings::release_ip() {
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestSettings.ip)
  if (definition_case() == kIp) {
    clear_has_definition();
    auto* temp = _impl_.definition_.ip_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.definition_.ip_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::synthetics::v202309::IpTest& TestSettings::_internal_ip() const {
  return definition_case() == kIp ? *_impl_.definition_.ip_ : reinterpret_cast<::kentik::synthetics::v202309::IpTest&>(::kentik::synthetics::v202309::_IpTest_default_instance_);
}
inline const ::kentik::synthetics::v202309::IpTest& TestSettings::ip() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestSettings.ip)
  return _internal_ip();
}
inline ::kentik::synthetics::v202309::IpTest* TestSettings::unsafe_arena_release_ip() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.synthetics.v202309.TestSettings.ip)
  if (definition_case() == kIp) {
    clear_has_definition();
    auto* temp = _impl_.definition_.ip_;
    _impl_.definition_.ip_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TestSettings::unsafe_arena_set_allocated_ip(::kentik::synthetics::v202309::IpTest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_definition();
  if (value) {
    set_has_ip();
    _impl_.definition_.ip_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.TestSettings.ip)
}
inline ::kentik::synthetics::v202309::IpTest* TestSettings::_internal_mutable_ip() {
  if (definition_case() != kIp) {
    clear_definition();
    set_has_ip();
    _impl_.definition_.ip_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::IpTest>(GetArena());
  }
  return _impl_.definition_.ip_;
}
inline ::kentik::synthetics::v202309::IpTest* TestSettings::mutable_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::synthetics::v202309::IpTest* _msg = _internal_mutable_ip();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestSettings.ip)
  return _msg;
}

// .kentik.synthetics.v202309.AgentTest agent = 3 [json_name = "agent"];
inline bool TestSettings::has_agent() const {
  return definition_case() == kAgent;
}
inline bool TestSettings::_internal_has_agent() const {
  return definition_case() == kAgent;
}
inline void TestSettings::set_has_agent() {
  _impl_._oneof_case_[0] = kAgent;
}
inline void TestSettings::clear_agent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (definition_case() == kAgent) {
    if (GetArena() == nullptr) {
      delete _impl_.definition_.agent_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.definition_.agent_);
    }
    clear_has_definition();
  }
}
inline ::kentik::synthetics::v202309::AgentTest* TestSettings::release_agent() {
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestSettings.agent)
  if (definition_case() == kAgent) {
    clear_has_definition();
    auto* temp = _impl_.definition_.agent_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.definition_.agent_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::synthetics::v202309::AgentTest& TestSettings::_internal_agent() const {
  return definition_case() == kAgent ? *_impl_.definition_.agent_ : reinterpret_cast<::kentik::synthetics::v202309::AgentTest&>(::kentik::synthetics::v202309::_AgentTest_default_instance_);
}
inline const ::kentik::synthetics::v202309::AgentTest& TestSettings::agent() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestSettings.agent)
  return _internal_agent();
}
inline ::kentik::synthetics::v202309::AgentTest* TestSettings::unsafe_arena_release_agent() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.synthetics.v202309.TestSettings.agent)
  if (definition_case() == kAgent) {
    clear_has_definition();
    auto* temp = _impl_.definition_.agent_;
    _impl_.definition_.agent_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TestSettings::unsafe_arena_set_allocated_agent(::kentik::synthetics::v202309::AgentTest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_definition();
  if (value) {
    set_has_agent();
    _impl_.definition_.agent_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.TestSettings.agent)
}
inline ::kentik::synthetics::v202309::AgentTest* TestSettings::_internal_mutable_agent() {
  if (definition_case() != kAgent) {
    clear_definition();
    set_has_agent();
    _impl_.definition_.agent_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::AgentTest>(GetArena());
  }
  return _impl_.definition_.agent_;
}
inline ::kentik::synthetics::v202309::AgentTest* TestSettings::mutable_agent() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::synthetics::v202309::AgentTest* _msg = _internal_mutable_agent();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestSettings.agent)
  return _msg;
}

// .kentik.synthetics.v202309.FlowTest flow = 4 [json_name = "flow"];
inline bool TestSettings::has_flow() const {
  return definition_case() == kFlow;
}
inline bool TestSettings::_internal_has_flow() const {
  return definition_case() == kFlow;
}
inline void TestSettings::set_has_flow() {
  _impl_._oneof_case_[0] = kFlow;
}
inline void TestSettings::clear_flow() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (definition_case() == kFlow) {
    if (GetArena() == nullptr) {
      delete _impl_.definition_.flow_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.definition_.flow_);
    }
    clear_has_definition();
  }
}
inline ::kentik::synthetics::v202309::FlowTest* TestSettings::release_flow() {
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestSettings.flow)
  if (definition_case() == kFlow) {
    clear_has_definition();
    auto* temp = _impl_.definition_.flow_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.definition_.flow_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::synthetics::v202309::FlowTest& TestSettings::_internal_flow() const {
  return definition_case() == kFlow ? *_impl_.definition_.flow_ : reinterpret_cast<::kentik::synthetics::v202309::FlowTest&>(::kentik::synthetics::v202309::_FlowTest_default_instance_);
}
inline const ::kentik::synthetics::v202309::FlowTest& TestSettings::flow() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestSettings.flow)
  return _internal_flow();
}
inline ::kentik::synthetics::v202309::FlowTest* TestSettings::unsafe_arena_release_flow() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.synthetics.v202309.TestSettings.flow)
  if (definition_case() == kFlow) {
    clear_has_definition();
    auto* temp = _impl_.definition_.flow_;
    _impl_.definition_.flow_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TestSettings::unsafe_arena_set_allocated_flow(::kentik::synthetics::v202309::FlowTest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_definition();
  if (value) {
    set_has_flow();
    _impl_.definition_.flow_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.TestSettings.flow)
}
inline ::kentik::synthetics::v202309::FlowTest* TestSettings::_internal_mutable_flow() {
  if (definition_case() != kFlow) {
    clear_definition();
    set_has_flow();
    _impl_.definition_.flow_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::FlowTest>(GetArena());
  }
  return _impl_.definition_.flow_;
}
inline ::kentik::synthetics::v202309::FlowTest* TestSettings::mutable_flow() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::synthetics::v202309::FlowTest* _msg = _internal_mutable_flow();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestSettings.flow)
  return _msg;
}

// .kentik.synthetics.v202309.DnsTest dns = 5 [json_name = "dns"];
inline bool TestSettings::has_dns() const {
  return definition_case() == kDns;
}
inline bool TestSettings::_internal_has_dns() const {
  return definition_case() == kDns;
}
inline void TestSettings::set_has_dns() {
  _impl_._oneof_case_[0] = kDns;
}
inline void TestSettings::clear_dns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (definition_case() == kDns) {
    if (GetArena() == nullptr) {
      delete _impl_.definition_.dns_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.definition_.dns_);
    }
    clear_has_definition();
  }
}
inline ::kentik::synthetics::v202309::DnsTest* TestSettings::release_dns() {
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestSettings.dns)
  if (definition_case() == kDns) {
    clear_has_definition();
    auto* temp = _impl_.definition_.dns_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.definition_.dns_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::synthetics::v202309::DnsTest& TestSettings::_internal_dns() const {
  return definition_case() == kDns ? *_impl_.definition_.dns_ : reinterpret_cast<::kentik::synthetics::v202309::DnsTest&>(::kentik::synthetics::v202309::_DnsTest_default_instance_);
}
inline const ::kentik::synthetics::v202309::DnsTest& TestSettings::dns() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestSettings.dns)
  return _internal_dns();
}
inline ::kentik::synthetics::v202309::DnsTest* TestSettings::unsafe_arena_release_dns() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.synthetics.v202309.TestSettings.dns)
  if (definition_case() == kDns) {
    clear_has_definition();
    auto* temp = _impl_.definition_.dns_;
    _impl_.definition_.dns_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TestSettings::unsafe_arena_set_allocated_dns(::kentik::synthetics::v202309::DnsTest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_definition();
  if (value) {
    set_has_dns();
    _impl_.definition_.dns_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.TestSettings.dns)
}
inline ::kentik::synthetics::v202309::DnsTest* TestSettings::_internal_mutable_dns() {
  if (definition_case() != kDns) {
    clear_definition();
    set_has_dns();
    _impl_.definition_.dns_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::DnsTest>(GetArena());
  }
  return _impl_.definition_.dns_;
}
inline ::kentik::synthetics::v202309::DnsTest* TestSettings::mutable_dns() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::synthetics::v202309::DnsTest* _msg = _internal_mutable_dns();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestSettings.dns)
  return _msg;
}

// .kentik.synthetics.v202309.UrlTest url = 6 [json_name = "url"];
inline bool TestSettings::has_url() const {
  return definition_case() == kUrl;
}
inline bool TestSettings::_internal_has_url() const {
  return definition_case() == kUrl;
}
inline void TestSettings::set_has_url() {
  _impl_._oneof_case_[0] = kUrl;
}
inline void TestSettings::clear_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (definition_case() == kUrl) {
    if (GetArena() == nullptr) {
      delete _impl_.definition_.url_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.definition_.url_);
    }
    clear_has_definition();
  }
}
inline ::kentik::synthetics::v202309::UrlTest* TestSettings::release_url() {
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestSettings.url)
  if (definition_case() == kUrl) {
    clear_has_definition();
    auto* temp = _impl_.definition_.url_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.definition_.url_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::synthetics::v202309::UrlTest& TestSettings::_internal_url() const {
  return definition_case() == kUrl ? *_impl_.definition_.url_ : reinterpret_cast<::kentik::synthetics::v202309::UrlTest&>(::kentik::synthetics::v202309::_UrlTest_default_instance_);
}
inline const ::kentik::synthetics::v202309::UrlTest& TestSettings::url() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestSettings.url)
  return _internal_url();
}
inline ::kentik::synthetics::v202309::UrlTest* TestSettings::unsafe_arena_release_url() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.synthetics.v202309.TestSettings.url)
  if (definition_case() == kUrl) {
    clear_has_definition();
    auto* temp = _impl_.definition_.url_;
    _impl_.definition_.url_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TestSettings::unsafe_arena_set_allocated_url(::kentik::synthetics::v202309::UrlTest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_definition();
  if (value) {
    set_has_url();
    _impl_.definition_.url_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.TestSettings.url)
}
inline ::kentik::synthetics::v202309::UrlTest* TestSettings::_internal_mutable_url() {
  if (definition_case() != kUrl) {
    clear_definition();
    set_has_url();
    _impl_.definition_.url_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::UrlTest>(GetArena());
  }
  return _impl_.definition_.url_;
}
inline ::kentik::synthetics::v202309::UrlTest* TestSettings::mutable_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::synthetics::v202309::UrlTest* _msg = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestSettings.url)
  return _msg;
}

// .kentik.synthetics.v202309.IpTest network_grid = 7 [json_name = "networkGrid"];
inline bool TestSettings::has_network_grid() const {
  return definition_case() == kNetworkGrid;
}
inline bool TestSettings::_internal_has_network_grid() const {
  return definition_case() == kNetworkGrid;
}
inline void TestSettings::set_has_network_grid() {
  _impl_._oneof_case_[0] = kNetworkGrid;
}
inline void TestSettings::clear_network_grid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (definition_case() == kNetworkGrid) {
    if (GetArena() == nullptr) {
      delete _impl_.definition_.network_grid_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.definition_.network_grid_);
    }
    clear_has_definition();
  }
}
inline ::kentik::synthetics::v202309::IpTest* TestSettings::release_network_grid() {
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestSettings.network_grid)
  if (definition_case() == kNetworkGrid) {
    clear_has_definition();
    auto* temp = _impl_.definition_.network_grid_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.definition_.network_grid_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::synthetics::v202309::IpTest& TestSettings::_internal_network_grid() const {
  return definition_case() == kNetworkGrid ? *_impl_.definition_.network_grid_ : reinterpret_cast<::kentik::synthetics::v202309::IpTest&>(::kentik::synthetics::v202309::_IpTest_default_instance_);
}
inline const ::kentik::synthetics::v202309::IpTest& TestSettings::network_grid() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestSettings.network_grid)
  return _internal_network_grid();
}
inline ::kentik::synthetics::v202309::IpTest* TestSettings::unsafe_arena_release_network_grid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.synthetics.v202309.TestSettings.network_grid)
  if (definition_case() == kNetworkGrid) {
    clear_has_definition();
    auto* temp = _impl_.definition_.network_grid_;
    _impl_.definition_.network_grid_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TestSettings::unsafe_arena_set_allocated_network_grid(::kentik::synthetics::v202309::IpTest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_definition();
  if (value) {
    set_has_network_grid();
    _impl_.definition_.network_grid_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.TestSettings.network_grid)
}
inline ::kentik::synthetics::v202309::IpTest* TestSettings::_internal_mutable_network_grid() {
  if (definition_case() != kNetworkGrid) {
    clear_definition();
    set_has_network_grid();
    _impl_.definition_.network_grid_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::IpTest>(GetArena());
  }
  return _impl_.definition_.network_grid_;
}
inline ::kentik::synthetics::v202309::IpTest* TestSettings::mutable_network_grid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::synthetics::v202309::IpTest* _msg = _internal_mutable_network_grid();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestSettings.network_grid)
  return _msg;
}

// .kentik.synthetics.v202309.PageLoadTest page_load = 8 [json_name = "pageLoad"];
inline bool TestSettings::has_page_load() const {
  return definition_case() == kPageLoad;
}
inline bool TestSettings::_internal_has_page_load() const {
  return definition_case() == kPageLoad;
}
inline void TestSettings::set_has_page_load() {
  _impl_._oneof_case_[0] = kPageLoad;
}
inline void TestSettings::clear_page_load() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (definition_case() == kPageLoad) {
    if (GetArena() == nullptr) {
      delete _impl_.definition_.page_load_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.definition_.page_load_);
    }
    clear_has_definition();
  }
}
inline ::kentik::synthetics::v202309::PageLoadTest* TestSettings::release_page_load() {
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestSettings.page_load)
  if (definition_case() == kPageLoad) {
    clear_has_definition();
    auto* temp = _impl_.definition_.page_load_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.definition_.page_load_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::synthetics::v202309::PageLoadTest& TestSettings::_internal_page_load() const {
  return definition_case() == kPageLoad ? *_impl_.definition_.page_load_ : reinterpret_cast<::kentik::synthetics::v202309::PageLoadTest&>(::kentik::synthetics::v202309::_PageLoadTest_default_instance_);
}
inline const ::kentik::synthetics::v202309::PageLoadTest& TestSettings::page_load() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestSettings.page_load)
  return _internal_page_load();
}
inline ::kentik::synthetics::v202309::PageLoadTest* TestSettings::unsafe_arena_release_page_load() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.synthetics.v202309.TestSettings.page_load)
  if (definition_case() == kPageLoad) {
    clear_has_definition();
    auto* temp = _impl_.definition_.page_load_;
    _impl_.definition_.page_load_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TestSettings::unsafe_arena_set_allocated_page_load(::kentik::synthetics::v202309::PageLoadTest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_definition();
  if (value) {
    set_has_page_load();
    _impl_.definition_.page_load_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.TestSettings.page_load)
}
inline ::kentik::synthetics::v202309::PageLoadTest* TestSettings::_internal_mutable_page_load() {
  if (definition_case() != kPageLoad) {
    clear_definition();
    set_has_page_load();
    _impl_.definition_.page_load_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::PageLoadTest>(GetArena());
  }
  return _impl_.definition_.page_load_;
}
inline ::kentik::synthetics::v202309::PageLoadTest* TestSettings::mutable_page_load() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::synthetics::v202309::PageLoadTest* _msg = _internal_mutable_page_load();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestSettings.page_load)
  return _msg;
}

// .kentik.synthetics.v202309.DnsTest dns_grid = 9 [json_name = "dnsGrid"];
inline bool TestSettings::has_dns_grid() const {
  return definition_case() == kDnsGrid;
}
inline bool TestSettings::_internal_has_dns_grid() const {
  return definition_case() == kDnsGrid;
}
inline void TestSettings::set_has_dns_grid() {
  _impl_._oneof_case_[0] = kDnsGrid;
}
inline void TestSettings::clear_dns_grid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (definition_case() == kDnsGrid) {
    if (GetArena() == nullptr) {
      delete _impl_.definition_.dns_grid_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.definition_.dns_grid_);
    }
    clear_has_definition();
  }
}
inline ::kentik::synthetics::v202309::DnsTest* TestSettings::release_dns_grid() {
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestSettings.dns_grid)
  if (definition_case() == kDnsGrid) {
    clear_has_definition();
    auto* temp = _impl_.definition_.dns_grid_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.definition_.dns_grid_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::synthetics::v202309::DnsTest& TestSettings::_internal_dns_grid() const {
  return definition_case() == kDnsGrid ? *_impl_.definition_.dns_grid_ : reinterpret_cast<::kentik::synthetics::v202309::DnsTest&>(::kentik::synthetics::v202309::_DnsTest_default_instance_);
}
inline const ::kentik::synthetics::v202309::DnsTest& TestSettings::dns_grid() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestSettings.dns_grid)
  return _internal_dns_grid();
}
inline ::kentik::synthetics::v202309::DnsTest* TestSettings::unsafe_arena_release_dns_grid() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.synthetics.v202309.TestSettings.dns_grid)
  if (definition_case() == kDnsGrid) {
    clear_has_definition();
    auto* temp = _impl_.definition_.dns_grid_;
    _impl_.definition_.dns_grid_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TestSettings::unsafe_arena_set_allocated_dns_grid(::kentik::synthetics::v202309::DnsTest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_definition();
  if (value) {
    set_has_dns_grid();
    _impl_.definition_.dns_grid_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.TestSettings.dns_grid)
}
inline ::kentik::synthetics::v202309::DnsTest* TestSettings::_internal_mutable_dns_grid() {
  if (definition_case() != kDnsGrid) {
    clear_definition();
    set_has_dns_grid();
    _impl_.definition_.dns_grid_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::DnsTest>(GetArena());
  }
  return _impl_.definition_.dns_grid_;
}
inline ::kentik::synthetics::v202309::DnsTest* TestSettings::mutable_dns_grid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::synthetics::v202309::DnsTest* _msg = _internal_mutable_dns_grid();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestSettings.dns_grid)
  return _msg;
}

// .kentik.synthetics.v202309.NetworkMeshTest network_mesh = 18 [json_name = "networkMesh"];
inline bool TestSettings::has_network_mesh() const {
  return definition_case() == kNetworkMesh;
}
inline bool TestSettings::_internal_has_network_mesh() const {
  return definition_case() == kNetworkMesh;
}
inline void TestSettings::set_has_network_mesh() {
  _impl_._oneof_case_[0] = kNetworkMesh;
}
inline void TestSettings::clear_network_mesh() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (definition_case() == kNetworkMesh) {
    if (GetArena() == nullptr) {
      delete _impl_.definition_.network_mesh_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.definition_.network_mesh_);
    }
    clear_has_definition();
  }
}
inline ::kentik::synthetics::v202309::NetworkMeshTest* TestSettings::release_network_mesh() {
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestSettings.network_mesh)
  if (definition_case() == kNetworkMesh) {
    clear_has_definition();
    auto* temp = _impl_.definition_.network_mesh_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.definition_.network_mesh_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::synthetics::v202309::NetworkMeshTest& TestSettings::_internal_network_mesh() const {
  return definition_case() == kNetworkMesh ? *_impl_.definition_.network_mesh_ : reinterpret_cast<::kentik::synthetics::v202309::NetworkMeshTest&>(::kentik::synthetics::v202309::_NetworkMeshTest_default_instance_);
}
inline const ::kentik::synthetics::v202309::NetworkMeshTest& TestSettings::network_mesh() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestSettings.network_mesh)
  return _internal_network_mesh();
}
inline ::kentik::synthetics::v202309::NetworkMeshTest* TestSettings::unsafe_arena_release_network_mesh() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.synthetics.v202309.TestSettings.network_mesh)
  if (definition_case() == kNetworkMesh) {
    clear_has_definition();
    auto* temp = _impl_.definition_.network_mesh_;
    _impl_.definition_.network_mesh_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TestSettings::unsafe_arena_set_allocated_network_mesh(::kentik::synthetics::v202309::NetworkMeshTest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_definition();
  if (value) {
    set_has_network_mesh();
    _impl_.definition_.network_mesh_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.TestSettings.network_mesh)
}
inline ::kentik::synthetics::v202309::NetworkMeshTest* TestSettings::_internal_mutable_network_mesh() {
  if (definition_case() != kNetworkMesh) {
    clear_definition();
    set_has_network_mesh();
    _impl_.definition_.network_mesh_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::NetworkMeshTest>(GetArena());
  }
  return _impl_.definition_.network_mesh_;
}
inline ::kentik::synthetics::v202309::NetworkMeshTest* TestSettings::mutable_network_mesh() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::synthetics::v202309::NetworkMeshTest* _msg = _internal_mutable_network_mesh();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestSettings.network_mesh)
  return _msg;
}

// repeated string agent_ids = 10 [json_name = "agentIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int TestSettings::_internal_agent_ids_size() const {
  return _internal_agent_ids().size();
}
inline int TestSettings::agent_ids_size() const {
  return _internal_agent_ids_size();
}
inline void TestSettings::clear_agent_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_ids_.Clear();
}
inline std::string* TestSettings::add_agent_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_agent_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.synthetics.v202309.TestSettings.agent_ids)
  return _s;
}
inline const std::string& TestSettings::agent_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestSettings.agent_ids)
  return _internal_agent_ids().Get(index);
}
inline std::string* TestSettings::mutable_agent_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestSettings.agent_ids)
  return _internal_mutable_agent_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void TestSettings::set_agent_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_agent_ids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestSettings.agent_ids)
}
template <typename Arg_, typename... Args_>
inline void TestSettings::add_agent_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_agent_ids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.TestSettings.agent_ids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestSettings::agent_ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.TestSettings.agent_ids)
  return _internal_agent_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestSettings::mutable_agent_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.TestSettings.agent_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_agent_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestSettings::_internal_agent_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.agent_ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestSettings::_internal_mutable_agent_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.agent_ids_;
}

// repeated string tasks = 11 [json_name = "tasks", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int TestSettings::_internal_tasks_size() const {
  return _internal_tasks().size();
}
inline int TestSettings::tasks_size() const {
  return _internal_tasks_size();
}
inline void TestSettings::clear_tasks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tasks_.Clear();
}
inline std::string* TestSettings::add_tasks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_tasks()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.synthetics.v202309.TestSettings.tasks)
  return _s;
}
inline const std::string& TestSettings::tasks(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestSettings.tasks)
  return _internal_tasks().Get(index);
}
inline std::string* TestSettings::mutable_tasks(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestSettings.tasks)
  return _internal_mutable_tasks()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void TestSettings::set_tasks(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_tasks()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestSettings.tasks)
}
template <typename Arg_, typename... Args_>
inline void TestSettings::add_tasks(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_tasks(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.TestSettings.tasks)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestSettings::tasks() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.TestSettings.tasks)
  return _internal_tasks();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestSettings::mutable_tasks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.TestSettings.tasks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_tasks();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestSettings::_internal_tasks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tasks_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestSettings::_internal_mutable_tasks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.tasks_;
}

// .kentik.synthetics.v202309.HealthSettings health_settings = 12 [json_name = "healthSettings", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool TestSettings::has_health_settings() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.health_settings_ != nullptr);
  return value;
}
inline void TestSettings::clear_health_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.health_settings_ != nullptr) _impl_.health_settings_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::synthetics::v202309::HealthSettings& TestSettings::_internal_health_settings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::HealthSettings* p = _impl_.health_settings_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::HealthSettings&>(::kentik::synthetics::v202309::_HealthSettings_default_instance_);
}
inline const ::kentik::synthetics::v202309::HealthSettings& TestSettings::health_settings() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestSettings.health_settings)
  return _internal_health_settings();
}
inline void TestSettings::unsafe_arena_set_allocated_health_settings(::kentik::synthetics::v202309::HealthSettings* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.health_settings_);
  }
  _impl_.health_settings_ = reinterpret_cast<::kentik::synthetics::v202309::HealthSettings*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.TestSettings.health_settings)
}
inline ::kentik::synthetics::v202309::HealthSettings* TestSettings::release_health_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::HealthSettings* released = _impl_.health_settings_;
  _impl_.health_settings_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::HealthSettings* TestSettings::unsafe_arena_release_health_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestSettings.health_settings)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::HealthSettings* temp = _impl_.health_settings_;
  _impl_.health_settings_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::HealthSettings* TestSettings::_internal_mutable_health_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.health_settings_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::HealthSettings>(GetArena());
    _impl_.health_settings_ = reinterpret_cast<::kentik::synthetics::v202309::HealthSettings*>(p);
  }
  return _impl_.health_settings_;
}
inline ::kentik::synthetics::v202309::HealthSettings* TestSettings::mutable_health_settings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::synthetics::v202309::HealthSettings* _msg = _internal_mutable_health_settings();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestSettings.health_settings)
  return _msg;
}
inline void TestSettings::set_allocated_health_settings(::kentik::synthetics::v202309::HealthSettings* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.health_settings_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.health_settings_ = reinterpret_cast<::kentik::synthetics::v202309::HealthSettings*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.TestSettings.health_settings)
}

// .kentik.synthetics.v202309.TestPingSettings ping = 13 [json_name = "ping", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool TestSettings::has_ping() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ping_ != nullptr);
  return value;
}
inline void TestSettings::clear_ping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ping_ != nullptr) _impl_.ping_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::kentik::synthetics::v202309::TestPingSettings& TestSettings::_internal_ping() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::TestPingSettings* p = _impl_.ping_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::TestPingSettings&>(::kentik::synthetics::v202309::_TestPingSettings_default_instance_);
}
inline const ::kentik::synthetics::v202309::TestPingSettings& TestSettings::ping() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestSettings.ping)
  return _internal_ping();
}
inline void TestSettings::unsafe_arena_set_allocated_ping(::kentik::synthetics::v202309::TestPingSettings* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ping_);
  }
  _impl_.ping_ = reinterpret_cast<::kentik::synthetics::v202309::TestPingSettings*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.TestSettings.ping)
}
inline ::kentik::synthetics::v202309::TestPingSettings* TestSettings::release_ping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::synthetics::v202309::TestPingSettings* released = _impl_.ping_;
  _impl_.ping_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::TestPingSettings* TestSettings::unsafe_arena_release_ping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestSettings.ping)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::synthetics::v202309::TestPingSettings* temp = _impl_.ping_;
  _impl_.ping_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::TestPingSettings* TestSettings::_internal_mutable_ping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ping_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::TestPingSettings>(GetArena());
    _impl_.ping_ = reinterpret_cast<::kentik::synthetics::v202309::TestPingSettings*>(p);
  }
  return _impl_.ping_;
}
inline ::kentik::synthetics::v202309::TestPingSettings* TestSettings::mutable_ping() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::synthetics::v202309::TestPingSettings* _msg = _internal_mutable_ping();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestSettings.ping)
  return _msg;
}
inline void TestSettings::set_allocated_ping(::kentik::synthetics::v202309::TestPingSettings* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.ping_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.ping_ = reinterpret_cast<::kentik::synthetics::v202309::TestPingSettings*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.TestSettings.ping)
}

// .kentik.synthetics.v202309.TestTraceSettings trace = 14 [json_name = "trace", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool TestSettings::has_trace() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.trace_ != nullptr);
  return value;
}
inline void TestSettings::clear_trace() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.trace_ != nullptr) _impl_.trace_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::kentik::synthetics::v202309::TestTraceSettings& TestSettings::_internal_trace() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::TestTraceSettings* p = _impl_.trace_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::TestTraceSettings&>(::kentik::synthetics::v202309::_TestTraceSettings_default_instance_);
}
inline const ::kentik::synthetics::v202309::TestTraceSettings& TestSettings::trace() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestSettings.trace)
  return _internal_trace();
}
inline void TestSettings::unsafe_arena_set_allocated_trace(::kentik::synthetics::v202309::TestTraceSettings* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.trace_);
  }
  _impl_.trace_ = reinterpret_cast<::kentik::synthetics::v202309::TestTraceSettings*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.TestSettings.trace)
}
inline ::kentik::synthetics::v202309::TestTraceSettings* TestSettings::release_trace() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::kentik::synthetics::v202309::TestTraceSettings* released = _impl_.trace_;
  _impl_.trace_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::TestTraceSettings* TestSettings::unsafe_arena_release_trace() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestSettings.trace)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::kentik::synthetics::v202309::TestTraceSettings* temp = _impl_.trace_;
  _impl_.trace_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::TestTraceSettings* TestSettings::_internal_mutable_trace() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.trace_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::TestTraceSettings>(GetArena());
    _impl_.trace_ = reinterpret_cast<::kentik::synthetics::v202309::TestTraceSettings*>(p);
  }
  return _impl_.trace_;
}
inline ::kentik::synthetics::v202309::TestTraceSettings* TestSettings::mutable_trace() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::kentik::synthetics::v202309::TestTraceSettings* _msg = _internal_mutable_trace();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestSettings.trace)
  return _msg;
}
inline void TestSettings::set_allocated_trace(::kentik::synthetics::v202309::TestTraceSettings* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.trace_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.trace_ = reinterpret_cast<::kentik::synthetics::v202309::TestTraceSettings*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.TestSettings.trace)
}

// uint32 period = 15 [json_name = "period", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestSettings::clear_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.period_ = 0u;
}
inline ::uint32_t TestSettings::period() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestSettings.period)
  return _internal_period();
}
inline void TestSettings::set_period(::uint32_t value) {
  _internal_set_period(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestSettings.period)
}
inline ::uint32_t TestSettings::_internal_period() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.period_;
}
inline void TestSettings::_internal_set_period(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.period_ = value;
}

// .kentik.synthetics.v202309.IPFamily family = 16 [json_name = "family", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestSettings::clear_family() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.family_ = 0;
}
inline ::kentik::synthetics::v202309::IPFamily TestSettings::family() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestSettings.family)
  return _internal_family();
}
inline void TestSettings::set_family(::kentik::synthetics::v202309::IPFamily value) {
  _internal_set_family(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestSettings.family)
}
inline ::kentik::synthetics::v202309::IPFamily TestSettings::_internal_family() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::synthetics::v202309::IPFamily>(_impl_.family_);
}
inline void TestSettings::_internal_set_family(::kentik::synthetics::v202309::IPFamily value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.family_ = value;
}

// repeated string notification_channels = 17 [json_name = "notificationChannels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int TestSettings::_internal_notification_channels_size() const {
  return _internal_notification_channels().size();
}
inline int TestSettings::notification_channels_size() const {
  return _internal_notification_channels_size();
}
inline void TestSettings::clear_notification_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notification_channels_.Clear();
}
inline std::string* TestSettings::add_notification_channels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_notification_channels()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.synthetics.v202309.TestSettings.notification_channels)
  return _s;
}
inline const std::string& TestSettings::notification_channels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestSettings.notification_channels)
  return _internal_notification_channels().Get(index);
}
inline std::string* TestSettings::mutable_notification_channels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestSettings.notification_channels)
  return _internal_mutable_notification_channels()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void TestSettings::set_notification_channels(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_notification_channels()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestSettings.notification_channels)
}
template <typename Arg_, typename... Args_>
inline void TestSettings::add_notification_channels(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_notification_channels(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.TestSettings.notification_channels)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestSettings::notification_channels() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.TestSettings.notification_channels)
  return _internal_notification_channels();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestSettings::mutable_notification_channels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.TestSettings.notification_channels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_notification_channels();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TestSettings::_internal_notification_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.notification_channels_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TestSettings::_internal_mutable_notification_channels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.notification_channels_;
}

// string notes = 19 [json_name = "notes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestSettings::clear_notes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notes_.ClearToEmpty();
}
inline const std::string& TestSettings::notes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestSettings.notes)
  return _internal_notes();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestSettings::set_notes(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notes_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestSettings.notes)
}
inline std::string* TestSettings::mutable_notes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_notes();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestSettings.notes)
  return _s;
}
inline const std::string& TestSettings::_internal_notes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.notes_.Get();
}
inline void TestSettings::_internal_set_notes(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notes_.Set(value, GetArena());
}
inline std::string* TestSettings::_internal_mutable_notes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.notes_.Mutable( GetArena());
}
inline std::string* TestSettings::release_notes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestSettings.notes)
  return _impl_.notes_.Release();
}
inline void TestSettings::set_allocated_notes(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notes_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.notes_.IsDefault()) {
    _impl_.notes_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.TestSettings.notes)
}

// .kentik.synthetics.v202309.TestThroughputSettings throughput = 20 [json_name = "throughput", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool TestSettings::has_throughput() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.throughput_ != nullptr);
  return value;
}
inline void TestSettings::clear_throughput() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.throughput_ != nullptr) _impl_.throughput_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::kentik::synthetics::v202309::TestThroughputSettings& TestSettings::_internal_throughput() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::TestThroughputSettings* p = _impl_.throughput_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::TestThroughputSettings&>(::kentik::synthetics::v202309::_TestThroughputSettings_default_instance_);
}
inline const ::kentik::synthetics::v202309::TestThroughputSettings& TestSettings::throughput() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestSettings.throughput)
  return _internal_throughput();
}
inline void TestSettings::unsafe_arena_set_allocated_throughput(::kentik::synthetics::v202309::TestThroughputSettings* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.throughput_);
  }
  _impl_.throughput_ = reinterpret_cast<::kentik::synthetics::v202309::TestThroughputSettings*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.TestSettings.throughput)
}
inline ::kentik::synthetics::v202309::TestThroughputSettings* TestSettings::release_throughput() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::kentik::synthetics::v202309::TestThroughputSettings* released = _impl_.throughput_;
  _impl_.throughput_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::TestThroughputSettings* TestSettings::unsafe_arena_release_throughput() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestSettings.throughput)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::kentik::synthetics::v202309::TestThroughputSettings* temp = _impl_.throughput_;
  _impl_.throughput_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::TestThroughputSettings* TestSettings::_internal_mutable_throughput() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.throughput_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::TestThroughputSettings>(GetArena());
    _impl_.throughput_ = reinterpret_cast<::kentik::synthetics::v202309::TestThroughputSettings*>(p);
  }
  return _impl_.throughput_;
}
inline ::kentik::synthetics::v202309::TestThroughputSettings* TestSettings::mutable_throughput() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::kentik::synthetics::v202309::TestThroughputSettings* _msg = _internal_mutable_throughput();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestSettings.throughput)
  return _msg;
}
inline void TestSettings::set_allocated_throughput(::kentik::synthetics::v202309::TestThroughputSettings* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.throughput_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.throughput_ = reinterpret_cast<::kentik::synthetics::v202309::TestThroughputSettings*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.TestSettings.throughput)
}

// .kentik.synthetics.v202309.ScheduleSettings schedule = 21 [json_name = "schedule", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool TestSettings::has_schedule() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.schedule_ != nullptr);
  return value;
}
inline void TestSettings::clear_schedule() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.schedule_ != nullptr) _impl_.schedule_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::kentik::synthetics::v202309::ScheduleSettings& TestSettings::_internal_schedule() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::ScheduleSettings* p = _impl_.schedule_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::ScheduleSettings&>(::kentik::synthetics::v202309::_ScheduleSettings_default_instance_);
}
inline const ::kentik::synthetics::v202309::ScheduleSettings& TestSettings::schedule() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestSettings.schedule)
  return _internal_schedule();
}
inline void TestSettings::unsafe_arena_set_allocated_schedule(::kentik::synthetics::v202309::ScheduleSettings* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.schedule_);
  }
  _impl_.schedule_ = reinterpret_cast<::kentik::synthetics::v202309::ScheduleSettings*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.TestSettings.schedule)
}
inline ::kentik::synthetics::v202309::ScheduleSettings* TestSettings::release_schedule() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::kentik::synthetics::v202309::ScheduleSettings* released = _impl_.schedule_;
  _impl_.schedule_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::ScheduleSettings* TestSettings::unsafe_arena_release_schedule() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestSettings.schedule)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::kentik::synthetics::v202309::ScheduleSettings* temp = _impl_.schedule_;
  _impl_.schedule_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::ScheduleSettings* TestSettings::_internal_mutable_schedule() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.schedule_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::ScheduleSettings>(GetArena());
    _impl_.schedule_ = reinterpret_cast<::kentik::synthetics::v202309::ScheduleSettings*>(p);
  }
  return _impl_.schedule_;
}
inline ::kentik::synthetics::v202309::ScheduleSettings* TestSettings::mutable_schedule() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::kentik::synthetics::v202309::ScheduleSettings* _msg = _internal_mutable_schedule();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestSettings.schedule)
  return _msg;
}
inline void TestSettings::set_allocated_schedule(::kentik::synthetics::v202309::ScheduleSettings* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.schedule_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.schedule_ = reinterpret_cast<::kentik::synthetics::v202309::ScheduleSettings*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.TestSettings.schedule)
}

// .kentik.synthetics.v202309.AlertingSettings alerting = 22 [json_name = "alerting", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool TestSettings::has_alerting() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.alerting_ != nullptr);
  return value;
}
inline void TestSettings::clear_alerting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.alerting_ != nullptr) _impl_.alerting_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::kentik::synthetics::v202309::AlertingSettings& TestSettings::_internal_alerting() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::AlertingSettings* p = _impl_.alerting_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::AlertingSettings&>(::kentik::synthetics::v202309::_AlertingSettings_default_instance_);
}
inline const ::kentik::synthetics::v202309::AlertingSettings& TestSettings::alerting() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestSettings.alerting)
  return _internal_alerting();
}
inline void TestSettings::unsafe_arena_set_allocated_alerting(::kentik::synthetics::v202309::AlertingSettings* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.alerting_);
  }
  _impl_.alerting_ = reinterpret_cast<::kentik::synthetics::v202309::AlertingSettings*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.TestSettings.alerting)
}
inline ::kentik::synthetics::v202309::AlertingSettings* TestSettings::release_alerting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::kentik::synthetics::v202309::AlertingSettings* released = _impl_.alerting_;
  _impl_.alerting_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::AlertingSettings* TestSettings::unsafe_arena_release_alerting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestSettings.alerting)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::kentik::synthetics::v202309::AlertingSettings* temp = _impl_.alerting_;
  _impl_.alerting_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::AlertingSettings* TestSettings::_internal_mutable_alerting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.alerting_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::AlertingSettings>(GetArena());
    _impl_.alerting_ = reinterpret_cast<::kentik::synthetics::v202309::AlertingSettings*>(p);
  }
  return _impl_.alerting_;
}
inline ::kentik::synthetics::v202309::AlertingSettings* TestSettings::mutable_alerting() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::kentik::synthetics::v202309::AlertingSettings* _msg = _internal_mutable_alerting();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestSettings.alerting)
  return _msg;
}
inline void TestSettings::set_allocated_alerting(::kentik::synthetics::v202309::AlertingSettings* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.alerting_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.alerting_ = reinterpret_cast<::kentik::synthetics::v202309::AlertingSettings*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.TestSettings.alerting)
}

inline bool TestSettings::has_definition() const {
  return definition_case() != DEFINITION_NOT_SET;
}
inline void TestSettings::clear_has_definition() {
  _impl_._oneof_case_[0] = DEFINITION_NOT_SET;
}
inline TestSettings::DefinitionCase TestSettings::definition_case() const {
  return TestSettings::DefinitionCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// TestPingSettings

// uint32 count = 1 [json_name = "count", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestPingSettings::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = 0u;
}
inline ::uint32_t TestPingSettings::count() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestPingSettings.count)
  return _internal_count();
}
inline void TestPingSettings::set_count(::uint32_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestPingSettings.count)
}
inline ::uint32_t TestPingSettings::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void TestPingSettings::_internal_set_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// string protocol = 2 [json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestPingSettings::clear_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_.ClearToEmpty();
}
inline const std::string& TestPingSettings::protocol() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestPingSettings.protocol)
  return _internal_protocol();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestPingSettings::set_protocol(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestPingSettings.protocol)
}
inline std::string* TestPingSettings::mutable_protocol() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_protocol();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestPingSettings.protocol)
  return _s;
}
inline const std::string& TestPingSettings::_internal_protocol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.protocol_.Get();
}
inline void TestPingSettings::_internal_set_protocol(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_.Set(value, GetArena());
}
inline std::string* TestPingSettings::_internal_mutable_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.protocol_.Mutable( GetArena());
}
inline std::string* TestPingSettings::release_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestPingSettings.protocol)
  return _impl_.protocol_.Release();
}
inline void TestPingSettings::set_allocated_protocol(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.protocol_.IsDefault()) {
    _impl_.protocol_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.TestPingSettings.protocol)
}

// uint32 port = 3 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestPingSettings::clear_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = 0u;
}
inline ::uint32_t TestPingSettings::port() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestPingSettings.port)
  return _internal_port();
}
inline void TestPingSettings::set_port(::uint32_t value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestPingSettings.port)
}
inline ::uint32_t TestPingSettings::_internal_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.port_;
}
inline void TestPingSettings::_internal_set_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = value;
}

// uint32 timeout = 4 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestPingSettings::clear_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_ = 0u;
}
inline ::uint32_t TestPingSettings::timeout() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestPingSettings.timeout)
  return _internal_timeout();
}
inline void TestPingSettings::set_timeout(::uint32_t value) {
  _internal_set_timeout(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestPingSettings.timeout)
}
inline ::uint32_t TestPingSettings::_internal_timeout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timeout_;
}
inline void TestPingSettings::_internal_set_timeout(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_ = value;
}

// float delay = 5 [json_name = "delay", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestPingSettings::clear_delay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delay_ = 0;
}
inline float TestPingSettings::delay() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestPingSettings.delay)
  return _internal_delay();
}
inline void TestPingSettings::set_delay(float value) {
  _internal_set_delay(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestPingSettings.delay)
}
inline float TestPingSettings::_internal_delay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delay_;
}
inline void TestPingSettings::_internal_set_delay(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delay_ = value;
}

// uint32 dscp = 6 [json_name = "dscp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestPingSettings::clear_dscp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dscp_ = 0u;
}
inline ::uint32_t TestPingSettings::dscp() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestPingSettings.dscp)
  return _internal_dscp();
}
inline void TestPingSettings::set_dscp(::uint32_t value) {
  _internal_set_dscp(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestPingSettings.dscp)
}
inline ::uint32_t TestPingSettings::_internal_dscp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dscp_;
}
inline void TestPingSettings::_internal_set_dscp(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dscp_ = value;
}

// -------------------------------------------------------------------

// TestTraceSettings

// uint32 count = 1 [json_name = "count", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestTraceSettings::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = 0u;
}
inline ::uint32_t TestTraceSettings::count() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestTraceSettings.count)
  return _internal_count();
}
inline void TestTraceSettings::set_count(::uint32_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestTraceSettings.count)
}
inline ::uint32_t TestTraceSettings::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void TestTraceSettings::_internal_set_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// string protocol = 2 [json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestTraceSettings::clear_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_.ClearToEmpty();
}
inline const std::string& TestTraceSettings::protocol() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestTraceSettings.protocol)
  return _internal_protocol();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestTraceSettings::set_protocol(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestTraceSettings.protocol)
}
inline std::string* TestTraceSettings::mutable_protocol() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_protocol();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestTraceSettings.protocol)
  return _s;
}
inline const std::string& TestTraceSettings::_internal_protocol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.protocol_.Get();
}
inline void TestTraceSettings::_internal_set_protocol(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_.Set(value, GetArena());
}
inline std::string* TestTraceSettings::_internal_mutable_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.protocol_.Mutable( GetArena());
}
inline std::string* TestTraceSettings::release_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestTraceSettings.protocol)
  return _impl_.protocol_.Release();
}
inline void TestTraceSettings::set_allocated_protocol(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.protocol_.IsDefault()) {
    _impl_.protocol_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.TestTraceSettings.protocol)
}

// uint32 port = 3 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestTraceSettings::clear_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = 0u;
}
inline ::uint32_t TestTraceSettings::port() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestTraceSettings.port)
  return _internal_port();
}
inline void TestTraceSettings::set_port(::uint32_t value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestTraceSettings.port)
}
inline ::uint32_t TestTraceSettings::_internal_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.port_;
}
inline void TestTraceSettings::_internal_set_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = value;
}

// uint32 timeout = 4 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestTraceSettings::clear_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_ = 0u;
}
inline ::uint32_t TestTraceSettings::timeout() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestTraceSettings.timeout)
  return _internal_timeout();
}
inline void TestTraceSettings::set_timeout(::uint32_t value) {
  _internal_set_timeout(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestTraceSettings.timeout)
}
inline ::uint32_t TestTraceSettings::_internal_timeout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timeout_;
}
inline void TestTraceSettings::_internal_set_timeout(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_ = value;
}

// uint32 limit = 5 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestTraceSettings::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = 0u;
}
inline ::uint32_t TestTraceSettings::limit() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestTraceSettings.limit)
  return _internal_limit();
}
inline void TestTraceSettings::set_limit(::uint32_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestTraceSettings.limit)
}
inline ::uint32_t TestTraceSettings::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void TestTraceSettings::_internal_set_limit(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// float delay = 6 [json_name = "delay", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestTraceSettings::clear_delay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delay_ = 0;
}
inline float TestTraceSettings::delay() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestTraceSettings.delay)
  return _internal_delay();
}
inline void TestTraceSettings::set_delay(float value) {
  _internal_set_delay(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestTraceSettings.delay)
}
inline float TestTraceSettings::_internal_delay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delay_;
}
inline void TestTraceSettings::_internal_set_delay(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delay_ = value;
}

// uint32 dscp = 7 [json_name = "dscp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestTraceSettings::clear_dscp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dscp_ = 0u;
}
inline ::uint32_t TestTraceSettings::dscp() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestTraceSettings.dscp)
  return _internal_dscp();
}
inline void TestTraceSettings::set_dscp(::uint32_t value) {
  _internal_set_dscp(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestTraceSettings.dscp)
}
inline ::uint32_t TestTraceSettings::_internal_dscp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dscp_;
}
inline void TestTraceSettings::_internal_set_dscp(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dscp_ = value;
}

// -------------------------------------------------------------------

// TestThroughputSettings

// uint32 port = 1 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestThroughputSettings::clear_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = 0u;
}
inline ::uint32_t TestThroughputSettings::port() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestThroughputSettings.port)
  return _internal_port();
}
inline void TestThroughputSettings::set_port(::uint32_t value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestThroughputSettings.port)
}
inline ::uint32_t TestThroughputSettings::_internal_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.port_;
}
inline void TestThroughputSettings::_internal_set_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = value;
}

// uint32 omit = 2 [json_name = "omit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestThroughputSettings::clear_omit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.omit_ = 0u;
}
inline ::uint32_t TestThroughputSettings::omit() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestThroughputSettings.omit)
  return _internal_omit();
}
inline void TestThroughputSettings::set_omit(::uint32_t value) {
  _internal_set_omit(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestThroughputSettings.omit)
}
inline ::uint32_t TestThroughputSettings::_internal_omit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.omit_;
}
inline void TestThroughputSettings::_internal_set_omit(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.omit_ = value;
}

// uint32 duration = 3 [json_name = "duration", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestThroughputSettings::clear_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_ = 0u;
}
inline ::uint32_t TestThroughputSettings::duration() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestThroughputSettings.duration)
  return _internal_duration();
}
inline void TestThroughputSettings::set_duration(::uint32_t value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestThroughputSettings.duration)
}
inline ::uint32_t TestThroughputSettings::_internal_duration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.duration_;
}
inline void TestThroughputSettings::_internal_set_duration(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_ = value;
}

// uint32 bandwidth = 4 [json_name = "bandwidth", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestThroughputSettings::clear_bandwidth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bandwidth_ = 0u;
}
inline ::uint32_t TestThroughputSettings::bandwidth() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestThroughputSettings.bandwidth)
  return _internal_bandwidth();
}
inline void TestThroughputSettings::set_bandwidth(::uint32_t value) {
  _internal_set_bandwidth(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestThroughputSettings.bandwidth)
}
inline ::uint32_t TestThroughputSettings::_internal_bandwidth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bandwidth_;
}
inline void TestThroughputSettings::_internal_set_bandwidth(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bandwidth_ = value;
}

// string protocol = 5 [json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestThroughputSettings::clear_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_.ClearToEmpty();
}
inline const std::string& TestThroughputSettings::protocol() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestThroughputSettings.protocol)
  return _internal_protocol();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestThroughputSettings::set_protocol(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestThroughputSettings.protocol)
}
inline std::string* TestThroughputSettings::mutable_protocol() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_protocol();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestThroughputSettings.protocol)
  return _s;
}
inline const std::string& TestThroughputSettings::_internal_protocol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.protocol_.Get();
}
inline void TestThroughputSettings::_internal_set_protocol(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_.Set(value, GetArena());
}
inline std::string* TestThroughputSettings::_internal_mutable_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.protocol_.Mutable( GetArena());
}
inline std::string* TestThroughputSettings::release_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestThroughputSettings.protocol)
  return _impl_.protocol_.Release();
}
inline void TestThroughputSettings::set_allocated_protocol(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.protocol_.IsDefault()) {
    _impl_.protocol_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.TestThroughputSettings.protocol)
}

// -------------------------------------------------------------------

// ScheduleSettings

// bool enabled = 1 [json_name = "enabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void ScheduleSettings::clear_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = false;
}
inline bool ScheduleSettings::enabled() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.ScheduleSettings.enabled)
  return _internal_enabled();
}
inline void ScheduleSettings::set_enabled(bool value) {
  _internal_set_enabled(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.ScheduleSettings.enabled)
}
inline bool ScheduleSettings::_internal_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enabled_;
}
inline void ScheduleSettings::_internal_set_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = value;
}

// uint32 start = 2 [json_name = "start", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void ScheduleSettings::clear_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_ = 0u;
}
inline ::uint32_t ScheduleSettings::start() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.ScheduleSettings.start)
  return _internal_start();
}
inline void ScheduleSettings::set_start(::uint32_t value) {
  _internal_set_start(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.ScheduleSettings.start)
}
inline ::uint32_t ScheduleSettings::_internal_start() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.start_;
}
inline void ScheduleSettings::_internal_set_start(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_ = value;
}

// uint32 end = 3 [json_name = "end", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void ScheduleSettings::clear_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_ = 0u;
}
inline ::uint32_t ScheduleSettings::end() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.ScheduleSettings.end)
  return _internal_end();
}
inline void ScheduleSettings::set_end(::uint32_t value) {
  _internal_set_end(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.ScheduleSettings.end)
}
inline ::uint32_t ScheduleSettings::_internal_end() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.end_;
}
inline void ScheduleSettings::_internal_set_end(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_ = value;
}

// -------------------------------------------------------------------

// AlertingSettings

// bool disable_warning_notifications = 1 [json_name = "disableWarningNotifications", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void AlertingSettings::clear_disable_warning_notifications() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disable_warning_notifications_ = false;
}
inline bool AlertingSettings::disable_warning_notifications() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.AlertingSettings.disable_warning_notifications)
  return _internal_disable_warning_notifications();
}
inline void AlertingSettings::set_disable_warning_notifications(bool value) {
  _internal_set_disable_warning_notifications(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.AlertingSettings.disable_warning_notifications)
}
inline bool AlertingSettings::_internal_disable_warning_notifications() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.disable_warning_notifications_;
}
inline void AlertingSettings::_internal_set_disable_warning_notifications(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disable_warning_notifications_ = value;
}

// -------------------------------------------------------------------

// ActivationSettings

// string grace_period = 1 [json_name = "gracePeriod", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void ActivationSettings::clear_grace_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grace_period_.ClearToEmpty();
}
inline const std::string& ActivationSettings::grace_period() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.ActivationSettings.grace_period)
  return _internal_grace_period();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ActivationSettings::set_grace_period(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grace_period_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.ActivationSettings.grace_period)
}
inline std::string* ActivationSettings::mutable_grace_period() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_grace_period();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.ActivationSettings.grace_period)
  return _s;
}
inline const std::string& ActivationSettings::_internal_grace_period() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grace_period_.Get();
}
inline void ActivationSettings::_internal_set_grace_period(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grace_period_.Set(value, GetArena());
}
inline std::string* ActivationSettings::_internal_mutable_grace_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.grace_period_.Mutable( GetArena());
}
inline std::string* ActivationSettings::release_grace_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.ActivationSettings.grace_period)
  return _impl_.grace_period_.Release();
}
inline void ActivationSettings::set_allocated_grace_period(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grace_period_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.grace_period_.IsDefault()) {
    _impl_.grace_period_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.ActivationSettings.grace_period)
}

// string time_unit = 2 [json_name = "timeUnit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void ActivationSettings::clear_time_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_unit_.ClearToEmpty();
}
inline const std::string& ActivationSettings::time_unit() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.ActivationSettings.time_unit)
  return _internal_time_unit();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ActivationSettings::set_time_unit(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_unit_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.ActivationSettings.time_unit)
}
inline std::string* ActivationSettings::mutable_time_unit() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_time_unit();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.ActivationSettings.time_unit)
  return _s;
}
inline const std::string& ActivationSettings::_internal_time_unit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_unit_.Get();
}
inline void ActivationSettings::_internal_set_time_unit(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_unit_.Set(value, GetArena());
}
inline std::string* ActivationSettings::_internal_mutable_time_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.time_unit_.Mutable( GetArena());
}
inline std::string* ActivationSettings::release_time_unit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.ActivationSettings.time_unit)
  return _impl_.time_unit_.Release();
}
inline void ActivationSettings::set_allocated_time_unit(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_unit_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.time_unit_.IsDefault()) {
    _impl_.time_unit_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.ActivationSettings.time_unit)
}

// string time_window = 3 [json_name = "timeWindow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void ActivationSettings::clear_time_window() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_window_.ClearToEmpty();
}
inline const std::string& ActivationSettings::time_window() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.ActivationSettings.time_window)
  return _internal_time_window();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ActivationSettings::set_time_window(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_window_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.ActivationSettings.time_window)
}
inline std::string* ActivationSettings::mutable_time_window() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_time_window();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.ActivationSettings.time_window)
  return _s;
}
inline const std::string& ActivationSettings::_internal_time_window() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_window_.Get();
}
inline void ActivationSettings::_internal_set_time_window(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_window_.Set(value, GetArena());
}
inline std::string* ActivationSettings::_internal_mutable_time_window() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.time_window_.Mutable( GetArena());
}
inline std::string* ActivationSettings::release_time_window() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.ActivationSettings.time_window)
  return _impl_.time_window_.Release();
}
inline void ActivationSettings::set_allocated_time_window(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_window_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.time_window_.IsDefault()) {
    _impl_.time_window_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.ActivationSettings.time_window)
}

// string times = 4 [json_name = "times", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void ActivationSettings::clear_times() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.times_.ClearToEmpty();
}
inline const std::string& ActivationSettings::times() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.ActivationSettings.times)
  return _internal_times();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ActivationSettings::set_times(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.times_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.ActivationSettings.times)
}
inline std::string* ActivationSettings::mutable_times() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_times();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.ActivationSettings.times)
  return _s;
}
inline const std::string& ActivationSettings::_internal_times() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.times_.Get();
}
inline void ActivationSettings::_internal_set_times(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.times_.Set(value, GetArena());
}
inline std::string* ActivationSettings::_internal_mutable_times() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.times_.Mutable( GetArena());
}
inline std::string* ActivationSettings::release_times() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.ActivationSettings.times)
  return _impl_.times_.Release();
}
inline void ActivationSettings::set_allocated_times(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.times_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.times_.IsDefault()) {
    _impl_.times_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.ActivationSettings.times)
}

// -------------------------------------------------------------------

// HealthSettings

// float latency_critical = 1 [json_name = "latencyCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_latency_critical() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latency_critical_ = 0;
}
inline float HealthSettings::latency_critical() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.latency_critical)
  return _internal_latency_critical();
}
inline void HealthSettings::set_latency_critical(float value) {
  _internal_set_latency_critical(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.latency_critical)
}
inline float HealthSettings::_internal_latency_critical() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latency_critical_;
}
inline void HealthSettings::_internal_set_latency_critical(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latency_critical_ = value;
}

// float latency_warning = 2 [json_name = "latencyWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_latency_warning() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latency_warning_ = 0;
}
inline float HealthSettings::latency_warning() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.latency_warning)
  return _internal_latency_warning();
}
inline void HealthSettings::set_latency_warning(float value) {
  _internal_set_latency_warning(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.latency_warning)
}
inline float HealthSettings::_internal_latency_warning() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latency_warning_;
}
inline void HealthSettings::_internal_set_latency_warning(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latency_warning_ = value;
}

// float packet_loss_critical = 3 [json_name = "packetLossCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_packet_loss_critical() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_loss_critical_ = 0;
}
inline float HealthSettings::packet_loss_critical() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.packet_loss_critical)
  return _internal_packet_loss_critical();
}
inline void HealthSettings::set_packet_loss_critical(float value) {
  _internal_set_packet_loss_critical(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.packet_loss_critical)
}
inline float HealthSettings::_internal_packet_loss_critical() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packet_loss_critical_;
}
inline void HealthSettings::_internal_set_packet_loss_critical(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_loss_critical_ = value;
}

// float packet_loss_warning = 4 [json_name = "packetLossWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_packet_loss_warning() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_loss_warning_ = 0;
}
inline float HealthSettings::packet_loss_warning() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.packet_loss_warning)
  return _internal_packet_loss_warning();
}
inline void HealthSettings::set_packet_loss_warning(float value) {
  _internal_set_packet_loss_warning(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.packet_loss_warning)
}
inline float HealthSettings::_internal_packet_loss_warning() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packet_loss_warning_;
}
inline void HealthSettings::_internal_set_packet_loss_warning(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_loss_warning_ = value;
}

// float jitter_critical = 5 [json_name = "jitterCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_jitter_critical() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jitter_critical_ = 0;
}
inline float HealthSettings::jitter_critical() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.jitter_critical)
  return _internal_jitter_critical();
}
inline void HealthSettings::set_jitter_critical(float value) {
  _internal_set_jitter_critical(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.jitter_critical)
}
inline float HealthSettings::_internal_jitter_critical() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.jitter_critical_;
}
inline void HealthSettings::_internal_set_jitter_critical(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jitter_critical_ = value;
}

// float jitter_warning = 6 [json_name = "jitterWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_jitter_warning() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jitter_warning_ = 0;
}
inline float HealthSettings::jitter_warning() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.jitter_warning)
  return _internal_jitter_warning();
}
inline void HealthSettings::set_jitter_warning(float value) {
  _internal_set_jitter_warning(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.jitter_warning)
}
inline float HealthSettings::_internal_jitter_warning() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.jitter_warning_;
}
inline void HealthSettings::_internal_set_jitter_warning(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jitter_warning_ = value;
}

// float http_latency_critical = 7 [json_name = "httpLatencyCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_http_latency_critical() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.http_latency_critical_ = 0;
}
inline float HealthSettings::http_latency_critical() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.http_latency_critical)
  return _internal_http_latency_critical();
}
inline void HealthSettings::set_http_latency_critical(float value) {
  _internal_set_http_latency_critical(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.http_latency_critical)
}
inline float HealthSettings::_internal_http_latency_critical() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.http_latency_critical_;
}
inline void HealthSettings::_internal_set_http_latency_critical(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.http_latency_critical_ = value;
}

// float http_latency_warning = 8 [json_name = "httpLatencyWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_http_latency_warning() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.http_latency_warning_ = 0;
}
inline float HealthSettings::http_latency_warning() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.http_latency_warning)
  return _internal_http_latency_warning();
}
inline void HealthSettings::set_http_latency_warning(float value) {
  _internal_set_http_latency_warning(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.http_latency_warning)
}
inline float HealthSettings::_internal_http_latency_warning() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.http_latency_warning_;
}
inline void HealthSettings::_internal_set_http_latency_warning(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.http_latency_warning_ = value;
}

// repeated uint32 http_valid_codes = 9 [json_name = "httpValidCodes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int HealthSettings::_internal_http_valid_codes_size() const {
  return _internal_http_valid_codes().size();
}
inline int HealthSettings::http_valid_codes_size() const {
  return _internal_http_valid_codes_size();
}
inline void HealthSettings::clear_http_valid_codes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.http_valid_codes_.Clear();
}
inline ::uint32_t HealthSettings::http_valid_codes(int index) const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.http_valid_codes)
  return _internal_http_valid_codes().Get(index);
}
inline void HealthSettings::set_http_valid_codes(int index, ::uint32_t value) {
  _internal_mutable_http_valid_codes()->Set(index, value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.http_valid_codes)
}
inline void HealthSettings::add_http_valid_codes(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_http_valid_codes()->Add(value);
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.HealthSettings.http_valid_codes)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& HealthSettings::http_valid_codes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.HealthSettings.http_valid_codes)
  return _internal_http_valid_codes();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* HealthSettings::mutable_http_valid_codes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.HealthSettings.http_valid_codes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_http_valid_codes();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
HealthSettings::_internal_http_valid_codes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.http_valid_codes_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* HealthSettings::_internal_mutable_http_valid_codes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.http_valid_codes_;
}

// repeated uint32 dns_valid_codes = 10 [json_name = "dnsValidCodes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int HealthSettings::_internal_dns_valid_codes_size() const {
  return _internal_dns_valid_codes().size();
}
inline int HealthSettings::dns_valid_codes_size() const {
  return _internal_dns_valid_codes_size();
}
inline void HealthSettings::clear_dns_valid_codes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_valid_codes_.Clear();
}
inline ::uint32_t HealthSettings::dns_valid_codes(int index) const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.dns_valid_codes)
  return _internal_dns_valid_codes().Get(index);
}
inline void HealthSettings::set_dns_valid_codes(int index, ::uint32_t value) {
  _internal_mutable_dns_valid_codes()->Set(index, value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.dns_valid_codes)
}
inline void HealthSettings::add_dns_valid_codes(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_dns_valid_codes()->Add(value);
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.HealthSettings.dns_valid_codes)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& HealthSettings::dns_valid_codes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.HealthSettings.dns_valid_codes)
  return _internal_dns_valid_codes();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* HealthSettings::mutable_dns_valid_codes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.HealthSettings.dns_valid_codes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_dns_valid_codes();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
HealthSettings::_internal_dns_valid_codes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dns_valid_codes_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* HealthSettings::_internal_mutable_dns_valid_codes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.dns_valid_codes_;
}

// float latency_critical_stddev = 11 [json_name = "latencyCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_latency_critical_stddev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latency_critical_stddev_ = 0;
}
inline float HealthSettings::latency_critical_stddev() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.latency_critical_stddev)
  return _internal_latency_critical_stddev();
}
inline void HealthSettings::set_latency_critical_stddev(float value) {
  _internal_set_latency_critical_stddev(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.latency_critical_stddev)
}
inline float HealthSettings::_internal_latency_critical_stddev() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latency_critical_stddev_;
}
inline void HealthSettings::_internal_set_latency_critical_stddev(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latency_critical_stddev_ = value;
}

// float latency_warning_stddev = 12 [json_name = "latencyWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_latency_warning_stddev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latency_warning_stddev_ = 0;
}
inline float HealthSettings::latency_warning_stddev() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.latency_warning_stddev)
  return _internal_latency_warning_stddev();
}
inline void HealthSettings::set_latency_warning_stddev(float value) {
  _internal_set_latency_warning_stddev(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.latency_warning_stddev)
}
inline float HealthSettings::_internal_latency_warning_stddev() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latency_warning_stddev_;
}
inline void HealthSettings::_internal_set_latency_warning_stddev(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latency_warning_stddev_ = value;
}

// float jitter_critical_stddev = 13 [json_name = "jitterCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_jitter_critical_stddev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jitter_critical_stddev_ = 0;
}
inline float HealthSettings::jitter_critical_stddev() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.jitter_critical_stddev)
  return _internal_jitter_critical_stddev();
}
inline void HealthSettings::set_jitter_critical_stddev(float value) {
  _internal_set_jitter_critical_stddev(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.jitter_critical_stddev)
}
inline float HealthSettings::_internal_jitter_critical_stddev() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.jitter_critical_stddev_;
}
inline void HealthSettings::_internal_set_jitter_critical_stddev(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jitter_critical_stddev_ = value;
}

// float jitter_warning_stddev = 14 [json_name = "jitterWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_jitter_warning_stddev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jitter_warning_stddev_ = 0;
}
inline float HealthSettings::jitter_warning_stddev() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.jitter_warning_stddev)
  return _internal_jitter_warning_stddev();
}
inline void HealthSettings::set_jitter_warning_stddev(float value) {
  _internal_set_jitter_warning_stddev(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.jitter_warning_stddev)
}
inline float HealthSettings::_internal_jitter_warning_stddev() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.jitter_warning_stddev_;
}
inline void HealthSettings::_internal_set_jitter_warning_stddev(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jitter_warning_stddev_ = value;
}

// float http_latency_critical_stddev = 15 [json_name = "httpLatencyCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_http_latency_critical_stddev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.http_latency_critical_stddev_ = 0;
}
inline float HealthSettings::http_latency_critical_stddev() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.http_latency_critical_stddev)
  return _internal_http_latency_critical_stddev();
}
inline void HealthSettings::set_http_latency_critical_stddev(float value) {
  _internal_set_http_latency_critical_stddev(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.http_latency_critical_stddev)
}
inline float HealthSettings::_internal_http_latency_critical_stddev() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.http_latency_critical_stddev_;
}
inline void HealthSettings::_internal_set_http_latency_critical_stddev(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.http_latency_critical_stddev_ = value;
}

// float http_latency_warning_stddev = 16 [json_name = "httpLatencyWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_http_latency_warning_stddev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.http_latency_warning_stddev_ = 0;
}
inline float HealthSettings::http_latency_warning_stddev() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.http_latency_warning_stddev)
  return _internal_http_latency_warning_stddev();
}
inline void HealthSettings::set_http_latency_warning_stddev(float value) {
  _internal_set_http_latency_warning_stddev(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.http_latency_warning_stddev)
}
inline float HealthSettings::_internal_http_latency_warning_stddev() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.http_latency_warning_stddev_;
}
inline void HealthSettings::_internal_set_http_latency_warning_stddev(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.http_latency_warning_stddev_ = value;
}

// uint32 unhealthy_subtest_threshold = 17 [json_name = "unhealthySubtestThreshold", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_unhealthy_subtest_threshold() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unhealthy_subtest_threshold_ = 0u;
}
inline ::uint32_t HealthSettings::unhealthy_subtest_threshold() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.unhealthy_subtest_threshold)
  return _internal_unhealthy_subtest_threshold();
}
inline void HealthSettings::set_unhealthy_subtest_threshold(::uint32_t value) {
  _internal_set_unhealthy_subtest_threshold(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.unhealthy_subtest_threshold)
}
inline ::uint32_t HealthSettings::_internal_unhealthy_subtest_threshold() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unhealthy_subtest_threshold_;
}
inline void HealthSettings::_internal_set_unhealthy_subtest_threshold(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unhealthy_subtest_threshold_ = value;
}

// .kentik.synthetics.v202309.ActivationSettings activation = 18 [json_name = "activation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool HealthSettings::has_activation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.activation_ != nullptr);
  return value;
}
inline void HealthSettings::clear_activation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.activation_ != nullptr) _impl_.activation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::synthetics::v202309::ActivationSettings& HealthSettings::_internal_activation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::ActivationSettings* p = _impl_.activation_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::ActivationSettings&>(::kentik::synthetics::v202309::_ActivationSettings_default_instance_);
}
inline const ::kentik::synthetics::v202309::ActivationSettings& HealthSettings::activation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.activation)
  return _internal_activation();
}
inline void HealthSettings::unsafe_arena_set_allocated_activation(::kentik::synthetics::v202309::ActivationSettings* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.activation_);
  }
  _impl_.activation_ = reinterpret_cast<::kentik::synthetics::v202309::ActivationSettings*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.HealthSettings.activation)
}
inline ::kentik::synthetics::v202309::ActivationSettings* HealthSettings::release_activation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::ActivationSettings* released = _impl_.activation_;
  _impl_.activation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::ActivationSettings* HealthSettings::unsafe_arena_release_activation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.HealthSettings.activation)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::ActivationSettings* temp = _impl_.activation_;
  _impl_.activation_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::ActivationSettings* HealthSettings::_internal_mutable_activation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.activation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::ActivationSettings>(GetArena());
    _impl_.activation_ = reinterpret_cast<::kentik::synthetics::v202309::ActivationSettings*>(p);
  }
  return _impl_.activation_;
}
inline ::kentik::synthetics::v202309::ActivationSettings* HealthSettings::mutable_activation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::synthetics::v202309::ActivationSettings* _msg = _internal_mutable_activation();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.HealthSettings.activation)
  return _msg;
}
inline void HealthSettings::set_allocated_activation(::kentik::synthetics::v202309::ActivationSettings* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.activation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.activation_ = reinterpret_cast<::kentik::synthetics::v202309::ActivationSettings*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.HealthSettings.activation)
}

// uint32 cert_expiry_warning = 19 [json_name = "certExpiryWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_cert_expiry_warning() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cert_expiry_warning_ = 0u;
}
inline ::uint32_t HealthSettings::cert_expiry_warning() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.cert_expiry_warning)
  return _internal_cert_expiry_warning();
}
inline void HealthSettings::set_cert_expiry_warning(::uint32_t value) {
  _internal_set_cert_expiry_warning(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.cert_expiry_warning)
}
inline ::uint32_t HealthSettings::_internal_cert_expiry_warning() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cert_expiry_warning_;
}
inline void HealthSettings::_internal_set_cert_expiry_warning(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cert_expiry_warning_ = value;
}

// uint32 cert_expiry_critical = 20 [json_name = "certExpiryCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_cert_expiry_critical() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cert_expiry_critical_ = 0u;
}
inline ::uint32_t HealthSettings::cert_expiry_critical() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.cert_expiry_critical)
  return _internal_cert_expiry_critical();
}
inline void HealthSettings::set_cert_expiry_critical(::uint32_t value) {
  _internal_set_cert_expiry_critical(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.cert_expiry_critical)
}
inline ::uint32_t HealthSettings::_internal_cert_expiry_critical() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cert_expiry_critical_;
}
inline void HealthSettings::_internal_set_cert_expiry_critical(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cert_expiry_critical_ = value;
}

// string dns_valid_ips = 21 [json_name = "dnsValidIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_dns_valid_ips() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_valid_ips_.ClearToEmpty();
}
inline const std::string& HealthSettings::dns_valid_ips() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.dns_valid_ips)
  return _internal_dns_valid_ips();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HealthSettings::set_dns_valid_ips(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_valid_ips_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.dns_valid_ips)
}
inline std::string* HealthSettings::mutable_dns_valid_ips() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dns_valid_ips();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.HealthSettings.dns_valid_ips)
  return _s;
}
inline const std::string& HealthSettings::_internal_dns_valid_ips() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dns_valid_ips_.Get();
}
inline void HealthSettings::_internal_set_dns_valid_ips(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_valid_ips_.Set(value, GetArena());
}
inline std::string* HealthSettings::_internal_mutable_dns_valid_ips() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dns_valid_ips_.Mutable( GetArena());
}
inline std::string* HealthSettings::release_dns_valid_ips() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.HealthSettings.dns_valid_ips)
  return _impl_.dns_valid_ips_.Release();
}
inline void HealthSettings::set_allocated_dns_valid_ips(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_valid_ips_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.dns_valid_ips_.IsDefault()) {
    _impl_.dns_valid_ips_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.HealthSettings.dns_valid_ips)
}

// float dns_latency_critical = 22 [json_name = "dnsLatencyCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_dns_latency_critical() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_latency_critical_ = 0;
}
inline float HealthSettings::dns_latency_critical() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.dns_latency_critical)
  return _internal_dns_latency_critical();
}
inline void HealthSettings::set_dns_latency_critical(float value) {
  _internal_set_dns_latency_critical(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.dns_latency_critical)
}
inline float HealthSettings::_internal_dns_latency_critical() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dns_latency_critical_;
}
inline void HealthSettings::_internal_set_dns_latency_critical(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_latency_critical_ = value;
}

// float dns_latency_warning = 23 [json_name = "dnsLatencyWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_dns_latency_warning() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_latency_warning_ = 0;
}
inline float HealthSettings::dns_latency_warning() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.dns_latency_warning)
  return _internal_dns_latency_warning();
}
inline void HealthSettings::set_dns_latency_warning(float value) {
  _internal_set_dns_latency_warning(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.dns_latency_warning)
}
inline float HealthSettings::_internal_dns_latency_warning() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dns_latency_warning_;
}
inline void HealthSettings::_internal_set_dns_latency_warning(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_latency_warning_ = value;
}

// float dns_latency_critical_stddev = 24 [json_name = "dnsLatencyCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_dns_latency_critical_stddev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_latency_critical_stddev_ = 0;
}
inline float HealthSettings::dns_latency_critical_stddev() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.dns_latency_critical_stddev)
  return _internal_dns_latency_critical_stddev();
}
inline void HealthSettings::set_dns_latency_critical_stddev(float value) {
  _internal_set_dns_latency_critical_stddev(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.dns_latency_critical_stddev)
}
inline float HealthSettings::_internal_dns_latency_critical_stddev() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dns_latency_critical_stddev_;
}
inline void HealthSettings::_internal_set_dns_latency_critical_stddev(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_latency_critical_stddev_ = value;
}

// float dns_latency_warning_stddev = 25 [json_name = "dnsLatencyWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_dns_latency_warning_stddev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_latency_warning_stddev_ = 0;
}
inline float HealthSettings::dns_latency_warning_stddev() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.dns_latency_warning_stddev)
  return _internal_dns_latency_warning_stddev();
}
inline void HealthSettings::set_dns_latency_warning_stddev(float value) {
  _internal_set_dns_latency_warning_stddev(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.dns_latency_warning_stddev)
}
inline float HealthSettings::_internal_dns_latency_warning_stddev() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dns_latency_warning_stddev_;
}
inline void HealthSettings::_internal_set_dns_latency_warning_stddev(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_latency_warning_stddev_ = value;
}

// bool per_agent_alerting = 26 [json_name = "perAgentAlerting", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_per_agent_alerting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.per_agent_alerting_ = false;
}
inline bool HealthSettings::per_agent_alerting() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.per_agent_alerting)
  return _internal_per_agent_alerting();
}
inline void HealthSettings::set_per_agent_alerting(bool value) {
  _internal_set_per_agent_alerting(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.per_agent_alerting)
}
inline bool HealthSettings::_internal_per_agent_alerting() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.per_agent_alerting_;
}
inline void HealthSettings::_internal_set_per_agent_alerting(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.per_agent_alerting_ = value;
}

// .kentik.synthetics.v202309.DisabledMetrics disabled_metrics = 27 [json_name = "disabledMetrics", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool HealthSettings::has_disabled_metrics() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.disabled_metrics_ != nullptr);
  return value;
}
inline void HealthSettings::clear_disabled_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.disabled_metrics_ != nullptr) _impl_.disabled_metrics_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::kentik::synthetics::v202309::DisabledMetrics& HealthSettings::_internal_disabled_metrics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::DisabledMetrics* p = _impl_.disabled_metrics_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::DisabledMetrics&>(::kentik::synthetics::v202309::_DisabledMetrics_default_instance_);
}
inline const ::kentik::synthetics::v202309::DisabledMetrics& HealthSettings::disabled_metrics() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.disabled_metrics)
  return _internal_disabled_metrics();
}
inline void HealthSettings::unsafe_arena_set_allocated_disabled_metrics(::kentik::synthetics::v202309::DisabledMetrics* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.disabled_metrics_);
  }
  _impl_.disabled_metrics_ = reinterpret_cast<::kentik::synthetics::v202309::DisabledMetrics*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.HealthSettings.disabled_metrics)
}
inline ::kentik::synthetics::v202309::DisabledMetrics* HealthSettings::release_disabled_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::synthetics::v202309::DisabledMetrics* released = _impl_.disabled_metrics_;
  _impl_.disabled_metrics_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::DisabledMetrics* HealthSettings::unsafe_arena_release_disabled_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.HealthSettings.disabled_metrics)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::synthetics::v202309::DisabledMetrics* temp = _impl_.disabled_metrics_;
  _impl_.disabled_metrics_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::DisabledMetrics* HealthSettings::_internal_mutable_disabled_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.disabled_metrics_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::DisabledMetrics>(GetArena());
    _impl_.disabled_metrics_ = reinterpret_cast<::kentik::synthetics::v202309::DisabledMetrics*>(p);
  }
  return _impl_.disabled_metrics_;
}
inline ::kentik::synthetics::v202309::DisabledMetrics* HealthSettings::mutable_disabled_metrics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::synthetics::v202309::DisabledMetrics* _msg = _internal_mutable_disabled_metrics();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.HealthSettings.disabled_metrics)
  return _msg;
}
inline void HealthSettings::set_allocated_disabled_metrics(::kentik::synthetics::v202309::DisabledMetrics* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.disabled_metrics_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.disabled_metrics_ = reinterpret_cast<::kentik::synthetics::v202309::DisabledMetrics*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.HealthSettings.disabled_metrics)
}

// bool health_disabled = 28 [json_name = "healthDisabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_health_disabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_disabled_ = false;
}
inline bool HealthSettings::health_disabled() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.health_disabled)
  return _internal_health_disabled();
}
inline void HealthSettings::set_health_disabled(bool value) {
  _internal_set_health_disabled(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.health_disabled)
}
inline bool HealthSettings::_internal_health_disabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.health_disabled_;
}
inline void HealthSettings::_internal_set_health_disabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_disabled_ = value;
}

// float throughput_critical = 29 [json_name = "throughputCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_throughput_critical() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.throughput_critical_ = 0;
}
inline float HealthSettings::throughput_critical() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.throughput_critical)
  return _internal_throughput_critical();
}
inline void HealthSettings::set_throughput_critical(float value) {
  _internal_set_throughput_critical(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.throughput_critical)
}
inline float HealthSettings::_internal_throughput_critical() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.throughput_critical_;
}
inline void HealthSettings::_internal_set_throughput_critical(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.throughput_critical_ = value;
}

// float throughput_warning = 30 [json_name = "throughputWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_throughput_warning() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.throughput_warning_ = 0;
}
inline float HealthSettings::throughput_warning() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.throughput_warning)
  return _internal_throughput_warning();
}
inline void HealthSettings::set_throughput_warning(float value) {
  _internal_set_throughput_warning(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.throughput_warning)
}
inline float HealthSettings::_internal_throughput_warning() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.throughput_warning_;
}
inline void HealthSettings::_internal_set_throughput_warning(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.throughput_warning_ = value;
}

// float throughput_critical_stddev = 31 [json_name = "throughputCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_throughput_critical_stddev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.throughput_critical_stddev_ = 0;
}
inline float HealthSettings::throughput_critical_stddev() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.throughput_critical_stddev)
  return _internal_throughput_critical_stddev();
}
inline void HealthSettings::set_throughput_critical_stddev(float value) {
  _internal_set_throughput_critical_stddev(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.throughput_critical_stddev)
}
inline float HealthSettings::_internal_throughput_critical_stddev() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.throughput_critical_stddev_;
}
inline void HealthSettings::_internal_set_throughput_critical_stddev(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.throughput_critical_stddev_ = value;
}

// float throughput_warning_stddev = 32 [json_name = "throughputWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HealthSettings::clear_throughput_warning_stddev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.throughput_warning_stddev_ = 0;
}
inline float HealthSettings::throughput_warning_stddev() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HealthSettings.throughput_warning_stddev)
  return _internal_throughput_warning_stddev();
}
inline void HealthSettings::set_throughput_warning_stddev(float value) {
  _internal_set_throughput_warning_stddev(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HealthSettings.throughput_warning_stddev)
}
inline float HealthSettings::_internal_throughput_warning_stddev() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.throughput_warning_stddev_;
}
inline void HealthSettings::_internal_set_throughput_warning_stddev(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.throughput_warning_stddev_ = value;
}

// -------------------------------------------------------------------

// HostnameTest

// string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HostnameTest::clear_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.ClearToEmpty();
}
inline const std::string& HostnameTest::target() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HostnameTest.target)
  return _internal_target();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HostnameTest::set_target(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HostnameTest.target)
}
inline std::string* HostnameTest::mutable_target() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_target();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.HostnameTest.target)
  return _s;
}
inline const std::string& HostnameTest::_internal_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_.Get();
}
inline void HostnameTest::_internal_set_target(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.Set(value, GetArena());
}
inline std::string* HostnameTest::_internal_mutable_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.target_.Mutable( GetArena());
}
inline std::string* HostnameTest::release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.HostnameTest.target)
  return _impl_.target_.Release();
}
inline void HostnameTest::set_allocated_target(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_.IsDefault()) {
    _impl_.target_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.HostnameTest.target)
}

// -------------------------------------------------------------------

// IpTest

// repeated string targets = 1 [json_name = "targets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int IpTest::_internal_targets_size() const {
  return _internal_targets().size();
}
inline int IpTest::targets_size() const {
  return _internal_targets_size();
}
inline void IpTest::clear_targets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targets_.Clear();
}
inline std::string* IpTest::add_targets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_targets()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.synthetics.v202309.IpTest.targets)
  return _s;
}
inline const std::string& IpTest::targets(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.IpTest.targets)
  return _internal_targets().Get(index);
}
inline std::string* IpTest::mutable_targets(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.IpTest.targets)
  return _internal_mutable_targets()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void IpTest::set_targets(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_targets()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.IpTest.targets)
}
template <typename Arg_, typename... Args_>
inline void IpTest::add_targets(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_targets(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.IpTest.targets)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
IpTest::targets() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.IpTest.targets)
  return _internal_targets();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
IpTest::mutable_targets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.IpTest.targets)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_targets();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
IpTest::_internal_targets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.targets_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
IpTest::_internal_mutable_targets() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.targets_;
}

// bool use_local_ip = 2 [json_name = "useLocalIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void IpTest::clear_use_local_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_local_ip_ = false;
}
inline bool IpTest::use_local_ip() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.IpTest.use_local_ip)
  return _internal_use_local_ip();
}
inline void IpTest::set_use_local_ip(bool value) {
  _internal_set_use_local_ip(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.IpTest.use_local_ip)
}
inline bool IpTest::_internal_use_local_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_local_ip_;
}
inline void IpTest::_internal_set_use_local_ip(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_local_ip_ = value;
}

// -------------------------------------------------------------------

// AgentTest

// string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void AgentTest::clear_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.ClearToEmpty();
}
inline const std::string& AgentTest::target() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.AgentTest.target)
  return _internal_target();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AgentTest::set_target(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.AgentTest.target)
}
inline std::string* AgentTest::mutable_target() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_target();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.AgentTest.target)
  return _s;
}
inline const std::string& AgentTest::_internal_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_.Get();
}
inline void AgentTest::_internal_set_target(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.Set(value, GetArena());
}
inline std::string* AgentTest::_internal_mutable_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.target_.Mutable( GetArena());
}
inline std::string* AgentTest::release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.AgentTest.target)
  return _impl_.target_.Release();
}
inline void AgentTest::set_allocated_target(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_.IsDefault()) {
    _impl_.target_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.AgentTest.target)
}

// bool use_local_ip = 2 [json_name = "useLocalIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void AgentTest::clear_use_local_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_local_ip_ = false;
}
inline bool AgentTest::use_local_ip() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.AgentTest.use_local_ip)
  return _internal_use_local_ip();
}
inline void AgentTest::set_use_local_ip(bool value) {
  _internal_set_use_local_ip(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.AgentTest.use_local_ip)
}
inline bool AgentTest::_internal_use_local_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_local_ip_;
}
inline void AgentTest::_internal_set_use_local_ip(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_local_ip_ = value;
}

// bool reciprocal = 3 [json_name = "reciprocal", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void AgentTest::clear_reciprocal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reciprocal_ = false;
}
inline bool AgentTest::reciprocal() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.AgentTest.reciprocal)
  return _internal_reciprocal();
}
inline void AgentTest::set_reciprocal(bool value) {
  _internal_set_reciprocal(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.AgentTest.reciprocal)
}
inline bool AgentTest::_internal_reciprocal() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reciprocal_;
}
inline void AgentTest::_internal_set_reciprocal(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reciprocal_ = value;
}

// -------------------------------------------------------------------

// FlowTest

// string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowTest::clear_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.ClearToEmpty();
}
inline const std::string& FlowTest::target() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.FlowTest.target)
  return _internal_target();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FlowTest::set_target(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.FlowTest.target)
}
inline std::string* FlowTest::mutable_target() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_target();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.FlowTest.target)
  return _s;
}
inline const std::string& FlowTest::_internal_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_.Get();
}
inline void FlowTest::_internal_set_target(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.Set(value, GetArena());
}
inline std::string* FlowTest::_internal_mutable_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.target_.Mutable( GetArena());
}
inline std::string* FlowTest::release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.FlowTest.target)
  return _impl_.target_.Release();
}
inline void FlowTest::set_allocated_target(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_.IsDefault()) {
    _impl_.target_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.FlowTest.target)
}

// uint32 target_refresh_interval_millis = 2 [json_name = "targetRefreshIntervalMillis", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowTest::clear_target_refresh_interval_millis() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_refresh_interval_millis_ = 0u;
}
inline ::uint32_t FlowTest::target_refresh_interval_millis() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.FlowTest.target_refresh_interval_millis)
  return _internal_target_refresh_interval_millis();
}
inline void FlowTest::set_target_refresh_interval_millis(::uint32_t value) {
  _internal_set_target_refresh_interval_millis(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.FlowTest.target_refresh_interval_millis)
}
inline ::uint32_t FlowTest::_internal_target_refresh_interval_millis() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_refresh_interval_millis_;
}
inline void FlowTest::_internal_set_target_refresh_interval_millis(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_refresh_interval_millis_ = value;
}

// uint32 max_providers = 3 [json_name = "maxProviders", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowTest::clear_max_providers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_providers_ = 0u;
}
inline ::uint32_t FlowTest::max_providers() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.FlowTest.max_providers)
  return _internal_max_providers();
}
inline void FlowTest::set_max_providers(::uint32_t value) {
  _internal_set_max_providers(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.FlowTest.max_providers)
}
inline ::uint32_t FlowTest::_internal_max_providers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_providers_;
}
inline void FlowTest::_internal_set_max_providers(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_providers_ = value;
}

// uint32 max_ip_targets = 4 [json_name = "maxIpTargets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowTest::clear_max_ip_targets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ip_targets_ = 0u;
}
inline ::uint32_t FlowTest::max_ip_targets() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.FlowTest.max_ip_targets)
  return _internal_max_ip_targets();
}
inline void FlowTest::set_max_ip_targets(::uint32_t value) {
  _internal_set_max_ip_targets(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.FlowTest.max_ip_targets)
}
inline ::uint32_t FlowTest::_internal_max_ip_targets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_ip_targets_;
}
inline void FlowTest::_internal_set_max_ip_targets(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ip_targets_ = value;
}

// string type = 5 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowTest::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
}
inline const std::string& FlowTest::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.FlowTest.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FlowTest::set_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.FlowTest.type)
}
inline std::string* FlowTest::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.FlowTest.type)
  return _s;
}
inline const std::string& FlowTest::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void FlowTest::_internal_set_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(value, GetArena());
}
inline std::string* FlowTest::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* FlowTest::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.FlowTest.type)
  return _impl_.type_.Release();
}
inline void FlowTest::set_allocated_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_.IsDefault()) {
    _impl_.type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.FlowTest.type)
}

// string inet_direction = 6 [json_name = "inetDirection", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowTest::clear_inet_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inet_direction_.ClearToEmpty();
}
inline const std::string& FlowTest::inet_direction() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.FlowTest.inet_direction)
  return _internal_inet_direction();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FlowTest::set_inet_direction(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inet_direction_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.FlowTest.inet_direction)
}
inline std::string* FlowTest::mutable_inet_direction() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_inet_direction();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.FlowTest.inet_direction)
  return _s;
}
inline const std::string& FlowTest::_internal_inet_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inet_direction_.Get();
}
inline void FlowTest::_internal_set_inet_direction(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inet_direction_.Set(value, GetArena());
}
inline std::string* FlowTest::_internal_mutable_inet_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.inet_direction_.Mutable( GetArena());
}
inline std::string* FlowTest::release_inet_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.FlowTest.inet_direction)
  return _impl_.inet_direction_.Release();
}
inline void FlowTest::set_allocated_inet_direction(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inet_direction_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.inet_direction_.IsDefault()) {
    _impl_.inet_direction_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.FlowTest.inet_direction)
}

// string direction = 7 [json_name = "direction", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowTest::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_.ClearToEmpty();
}
inline const std::string& FlowTest::direction() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.FlowTest.direction)
  return _internal_direction();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FlowTest::set_direction(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.FlowTest.direction)
}
inline std::string* FlowTest::mutable_direction() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_direction();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.FlowTest.direction)
  return _s;
}
inline const std::string& FlowTest::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.direction_.Get();
}
inline void FlowTest::_internal_set_direction(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_.Set(value, GetArena());
}
inline std::string* FlowTest::_internal_mutable_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.direction_.Mutable( GetArena());
}
inline std::string* FlowTest::release_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.FlowTest.direction)
  return _impl_.direction_.Release();
}
inline void FlowTest::set_allocated_direction(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.direction_.IsDefault()) {
    _impl_.direction_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.FlowTest.direction)
}

// -------------------------------------------------------------------

// DnsTest

// string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DnsTest::clear_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.ClearToEmpty();
}
inline const std::string& DnsTest::target() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DnsTest.target)
  return _internal_target();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DnsTest::set_target(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DnsTest.target)
}
inline std::string* DnsTest::mutable_target() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_target();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.DnsTest.target)
  return _s;
}
inline const std::string& DnsTest::_internal_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_.Get();
}
inline void DnsTest::_internal_set_target(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.Set(value, GetArena());
}
inline std::string* DnsTest::_internal_mutable_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.target_.Mutable( GetArena());
}
inline std::string* DnsTest::release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.DnsTest.target)
  return _impl_.target_.Release();
}
inline void DnsTest::set_allocated_target(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_.IsDefault()) {
    _impl_.target_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.DnsTest.target)
}

// uint32 timeout = 2 [json_name = "timeout", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DnsTest::clear_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_ = 0u;
}
inline ::uint32_t DnsTest::timeout() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DnsTest.timeout)
  return _internal_timeout();
}
inline void DnsTest::set_timeout(::uint32_t value) {
  _internal_set_timeout(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DnsTest.timeout)
}
inline ::uint32_t DnsTest::_internal_timeout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timeout_;
}
inline void DnsTest::_internal_set_timeout(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_ = value;
}

// .kentik.synthetics.v202309.DNSRecord record_type = 3 [json_name = "recordType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DnsTest::clear_record_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.record_type_ = 0;
}
inline ::kentik::synthetics::v202309::DNSRecord DnsTest::record_type() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DnsTest.record_type)
  return _internal_record_type();
}
inline void DnsTest::set_record_type(::kentik::synthetics::v202309::DNSRecord value) {
  _internal_set_record_type(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DnsTest.record_type)
}
inline ::kentik::synthetics::v202309::DNSRecord DnsTest::_internal_record_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::synthetics::v202309::DNSRecord>(_impl_.record_type_);
}
inline void DnsTest::_internal_set_record_type(::kentik::synthetics::v202309::DNSRecord value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.record_type_ = value;
}

// repeated string servers = 4 [json_name = "servers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int DnsTest::_internal_servers_size() const {
  return _internal_servers().size();
}
inline int DnsTest::servers_size() const {
  return _internal_servers_size();
}
inline void DnsTest::clear_servers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.servers_.Clear();
}
inline std::string* DnsTest::add_servers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_servers()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.synthetics.v202309.DnsTest.servers)
  return _s;
}
inline const std::string& DnsTest::servers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DnsTest.servers)
  return _internal_servers().Get(index);
}
inline std::string* DnsTest::mutable_servers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.DnsTest.servers)
  return _internal_mutable_servers()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void DnsTest::set_servers(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_servers()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DnsTest.servers)
}
template <typename Arg_, typename... Args_>
inline void DnsTest::add_servers(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_servers(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.DnsTest.servers)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DnsTest::servers() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.DnsTest.servers)
  return _internal_servers();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DnsTest::mutable_servers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.DnsTest.servers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_servers();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DnsTest::_internal_servers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.servers_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DnsTest::_internal_mutable_servers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.servers_;
}

// uint32 port = 5 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DnsTest::clear_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = 0u;
}
inline ::uint32_t DnsTest::port() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DnsTest.port)
  return _internal_port();
}
inline void DnsTest::set_port(::uint32_t value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DnsTest.port)
}
inline ::uint32_t DnsTest::_internal_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.port_;
}
inline void DnsTest::_internal_set_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// UrlTest

// string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void UrlTest::clear_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.ClearToEmpty();
}
inline const std::string& UrlTest::target() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.UrlTest.target)
  return _internal_target();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UrlTest::set_target(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.UrlTest.target)
}
inline std::string* UrlTest::mutable_target() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_target();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.UrlTest.target)
  return _s;
}
inline const std::string& UrlTest::_internal_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_.Get();
}
inline void UrlTest::_internal_set_target(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.Set(value, GetArena());
}
inline std::string* UrlTest::_internal_mutable_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.target_.Mutable( GetArena());
}
inline std::string* UrlTest::release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.UrlTest.target)
  return _impl_.target_.Release();
}
inline void UrlTest::set_allocated_target(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_.IsDefault()) {
    _impl_.target_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.UrlTest.target)
}

// uint32 timeout = 2 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void UrlTest::clear_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_ = 0u;
}
inline ::uint32_t UrlTest::timeout() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.UrlTest.timeout)
  return _internal_timeout();
}
inline void UrlTest::set_timeout(::uint32_t value) {
  _internal_set_timeout(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.UrlTest.timeout)
}
inline ::uint32_t UrlTest::_internal_timeout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timeout_;
}
inline void UrlTest::_internal_set_timeout(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_ = value;
}

// string method = 3 [json_name = "method", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void UrlTest::clear_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_.ClearToEmpty();
}
inline const std::string& UrlTest::method() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.UrlTest.method)
  return _internal_method();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UrlTest::set_method(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.UrlTest.method)
}
inline std::string* UrlTest::mutable_method() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_method();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.UrlTest.method)
  return _s;
}
inline const std::string& UrlTest::_internal_method() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.method_.Get();
}
inline void UrlTest::_internal_set_method(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_.Set(value, GetArena());
}
inline std::string* UrlTest::_internal_mutable_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.method_.Mutable( GetArena());
}
inline std::string* UrlTest::release_method() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.UrlTest.method)
  return _impl_.method_.Release();
}
inline void UrlTest::set_allocated_method(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.method_.IsDefault()) {
    _impl_.method_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.UrlTest.method)
}

// map<string, string> headers = 4 [json_name = "headers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int UrlTest::_internal_headers_size() const {
  return _internal_headers().size();
}
inline int UrlTest::headers_size() const {
  return _internal_headers_size();
}
inline void UrlTest::clear_headers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.headers_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& UrlTest::_internal_headers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.headers_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& UrlTest::headers() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:kentik.synthetics.v202309.UrlTest.headers)
  return _internal_headers();
}
inline ::google::protobuf::Map<std::string, std::string>* UrlTest::_internal_mutable_headers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.headers_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* UrlTest::mutable_headers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:kentik.synthetics.v202309.UrlTest.headers)
  return _internal_mutable_headers();
}

// string body = 5 [json_name = "body", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void UrlTest::clear_body() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.body_.ClearToEmpty();
}
inline const std::string& UrlTest::body() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.UrlTest.body)
  return _internal_body();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UrlTest::set_body(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.body_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.UrlTest.body)
}
inline std::string* UrlTest::mutable_body() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_body();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.UrlTest.body)
  return _s;
}
inline const std::string& UrlTest::_internal_body() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.body_.Get();
}
inline void UrlTest::_internal_set_body(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.body_.Set(value, GetArena());
}
inline std::string* UrlTest::_internal_mutable_body() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.body_.Mutable( GetArena());
}
inline std::string* UrlTest::release_body() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.UrlTest.body)
  return _impl_.body_.Release();
}
inline void UrlTest::set_allocated_body(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.body_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.body_.IsDefault()) {
    _impl_.body_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.UrlTest.body)
}

// bool ignore_tls_errors = 6 [json_name = "ignoreTlsErrors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void UrlTest::clear_ignore_tls_errors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ignore_tls_errors_ = false;
}
inline bool UrlTest::ignore_tls_errors() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.UrlTest.ignore_tls_errors)
  return _internal_ignore_tls_errors();
}
inline void UrlTest::set_ignore_tls_errors(bool value) {
  _internal_set_ignore_tls_errors(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.UrlTest.ignore_tls_errors)
}
inline bool UrlTest::_internal_ignore_tls_errors() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ignore_tls_errors_;
}
inline void UrlTest::_internal_set_ignore_tls_errors(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ignore_tls_errors_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PageLoadTest

// string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PageLoadTest::clear_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.ClearToEmpty();
}
inline const std::string& PageLoadTest::target() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.PageLoadTest.target)
  return _internal_target();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PageLoadTest::set_target(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.PageLoadTest.target)
}
inline std::string* PageLoadTest::mutable_target() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_target();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.PageLoadTest.target)
  return _s;
}
inline const std::string& PageLoadTest::_internal_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_.Get();
}
inline void PageLoadTest::_internal_set_target(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.Set(value, GetArena());
}
inline std::string* PageLoadTest::_internal_mutable_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.target_.Mutable( GetArena());
}
inline std::string* PageLoadTest::release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.PageLoadTest.target)
  return _impl_.target_.Release();
}
inline void PageLoadTest::set_allocated_target(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_.IsDefault()) {
    _impl_.target_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.PageLoadTest.target)
}

// uint32 timeout = 2 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PageLoadTest::clear_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_ = 0u;
}
inline ::uint32_t PageLoadTest::timeout() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.PageLoadTest.timeout)
  return _internal_timeout();
}
inline void PageLoadTest::set_timeout(::uint32_t value) {
  _internal_set_timeout(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.PageLoadTest.timeout)
}
inline ::uint32_t PageLoadTest::_internal_timeout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timeout_;
}
inline void PageLoadTest::_internal_set_timeout(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_ = value;
}

// map<string, string> headers = 3 [json_name = "headers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int PageLoadTest::_internal_headers_size() const {
  return _internal_headers().size();
}
inline int PageLoadTest::headers_size() const {
  return _internal_headers_size();
}
inline void PageLoadTest::clear_headers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.headers_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& PageLoadTest::_internal_headers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.headers_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& PageLoadTest::headers() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:kentik.synthetics.v202309.PageLoadTest.headers)
  return _internal_headers();
}
inline ::google::protobuf::Map<std::string, std::string>* PageLoadTest::_internal_mutable_headers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.headers_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PageLoadTest::mutable_headers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:kentik.synthetics.v202309.PageLoadTest.headers)
  return _internal_mutable_headers();
}

// bool ignore_tls_errors = 4 [json_name = "ignoreTlsErrors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PageLoadTest::clear_ignore_tls_errors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ignore_tls_errors_ = false;
}
inline bool PageLoadTest::ignore_tls_errors() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.PageLoadTest.ignore_tls_errors)
  return _internal_ignore_tls_errors();
}
inline void PageLoadTest::set_ignore_tls_errors(bool value) {
  _internal_set_ignore_tls_errors(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.PageLoadTest.ignore_tls_errors)
}
inline bool PageLoadTest::_internal_ignore_tls_errors() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ignore_tls_errors_;
}
inline void PageLoadTest::_internal_set_ignore_tls_errors(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ignore_tls_errors_ = value;
}

// map<string, string> css_selectors = 5 [json_name = "cssSelectors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int PageLoadTest::_internal_css_selectors_size() const {
  return _internal_css_selectors().size();
}
inline int PageLoadTest::css_selectors_size() const {
  return _internal_css_selectors_size();
}
inline void PageLoadTest::clear_css_selectors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.css_selectors_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& PageLoadTest::_internal_css_selectors() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.css_selectors_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& PageLoadTest::css_selectors() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:kentik.synthetics.v202309.PageLoadTest.css_selectors)
  return _internal_css_selectors();
}
inline ::google::protobuf::Map<std::string, std::string>* PageLoadTest::_internal_mutable_css_selectors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.css_selectors_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PageLoadTest::mutable_css_selectors() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:kentik.synthetics.v202309.PageLoadTest.css_selectors)
  return _internal_mutable_css_selectors();
}

// -------------------------------------------------------------------

// NetworkMeshTest

// bool use_local_ip = 1 [json_name = "useLocalIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void NetworkMeshTest::clear_use_local_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_local_ip_ = false;
}
inline bool NetworkMeshTest::use_local_ip() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.NetworkMeshTest.use_local_ip)
  return _internal_use_local_ip();
}
inline void NetworkMeshTest::set_use_local_ip(bool value) {
  _internal_set_use_local_ip(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.NetworkMeshTest.use_local_ip)
}
inline bool NetworkMeshTest::_internal_use_local_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_local_ip_;
}
inline void NetworkMeshTest::_internal_set_use_local_ip(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_local_ip_ = value;
}

// -------------------------------------------------------------------

// MetricData

// uint32 current = 1 [json_name = "current", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void MetricData::clear_current() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_ = 0u;
}
inline ::uint32_t MetricData::current() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.MetricData.current)
  return _internal_current();
}
inline void MetricData::set_current(::uint32_t value) {
  _internal_set_current(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.MetricData.current)
}
inline ::uint32_t MetricData::_internal_current() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.current_;
}
inline void MetricData::_internal_set_current(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_ = value;
}

// uint32 rolling_avg = 2 [json_name = "rollingAvg", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void MetricData::clear_rolling_avg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rolling_avg_ = 0u;
}
inline ::uint32_t MetricData::rolling_avg() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.MetricData.rolling_avg)
  return _internal_rolling_avg();
}
inline void MetricData::set_rolling_avg(::uint32_t value) {
  _internal_set_rolling_avg(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.MetricData.rolling_avg)
}
inline ::uint32_t MetricData::_internal_rolling_avg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rolling_avg_;
}
inline void MetricData::_internal_set_rolling_avg(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rolling_avg_ = value;
}

// uint32 rolling_stddev = 3 [json_name = "rollingStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void MetricData::clear_rolling_stddev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rolling_stddev_ = 0u;
}
inline ::uint32_t MetricData::rolling_stddev() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.MetricData.rolling_stddev)
  return _internal_rolling_stddev();
}
inline void MetricData::set_rolling_stddev(::uint32_t value) {
  _internal_set_rolling_stddev(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.MetricData.rolling_stddev)
}
inline ::uint32_t MetricData::_internal_rolling_stddev() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rolling_stddev_;
}
inline void MetricData::_internal_set_rolling_stddev(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rolling_stddev_ = value;
}

// string health = 4 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void MetricData::clear_health() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_.ClearToEmpty();
}
inline const std::string& MetricData::health() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.MetricData.health)
  return _internal_health();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MetricData::set_health(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.MetricData.health)
}
inline std::string* MetricData::mutable_health() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_health();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.MetricData.health)
  return _s;
}
inline const std::string& MetricData::_internal_health() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.health_.Get();
}
inline void MetricData::_internal_set_health(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_.Set(value, GetArena());
}
inline std::string* MetricData::_internal_mutable_health() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.health_.Mutable( GetArena());
}
inline std::string* MetricData::release_health() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.MetricData.health)
  return _impl_.health_.Release();
}
inline void MetricData::set_allocated_health(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.health_.IsDefault()) {
    _impl_.health_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.MetricData.health)
}

// -------------------------------------------------------------------

// PacketLossData

// double current = 1 [json_name = "current", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PacketLossData::clear_current() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_ = 0;
}
inline double PacketLossData::current() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.PacketLossData.current)
  return _internal_current();
}
inline void PacketLossData::set_current(double value) {
  _internal_set_current(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.PacketLossData.current)
}
inline double PacketLossData::_internal_current() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.current_;
}
inline void PacketLossData::_internal_set_current(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_ = value;
}

// string health = 2 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PacketLossData::clear_health() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_.ClearToEmpty();
}
inline const std::string& PacketLossData::health() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.PacketLossData.health)
  return _internal_health();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PacketLossData::set_health(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.PacketLossData.health)
}
inline std::string* PacketLossData::mutable_health() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_health();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.PacketLossData.health)
  return _s;
}
inline const std::string& PacketLossData::_internal_health() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.health_.Get();
}
inline void PacketLossData::_internal_set_health(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_.Set(value, GetArena());
}
inline std::string* PacketLossData::_internal_mutable_health() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.health_.Mutable( GetArena());
}
inline std::string* PacketLossData::release_health() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.PacketLossData.health)
  return _impl_.health_.Release();
}
inline void PacketLossData::set_allocated_health(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.health_.IsDefault()) {
    _impl_.health_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.PacketLossData.health)
}

// -------------------------------------------------------------------

// PingResults

// string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PingResults::clear_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.ClearToEmpty();
}
inline const std::string& PingResults::target() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.PingResults.target)
  return _internal_target();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PingResults::set_target(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.PingResults.target)
}
inline std::string* PingResults::mutable_target() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_target();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.PingResults.target)
  return _s;
}
inline const std::string& PingResults::_internal_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_.Get();
}
inline void PingResults::_internal_set_target(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.Set(value, GetArena());
}
inline std::string* PingResults::_internal_mutable_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.target_.Mutable( GetArena());
}
inline std::string* PingResults::release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.PingResults.target)
  return _impl_.target_.Release();
}
inline void PingResults::set_allocated_target(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_.IsDefault()) {
    _impl_.target_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.PingResults.target)
}

// .kentik.synthetics.v202309.PacketLossData packet_loss = 2 [json_name = "packetLoss", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool PingResults::has_packet_loss() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.packet_loss_ != nullptr);
  return value;
}
inline void PingResults::clear_packet_loss() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.packet_loss_ != nullptr) _impl_.packet_loss_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::synthetics::v202309::PacketLossData& PingResults::_internal_packet_loss() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::PacketLossData* p = _impl_.packet_loss_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::PacketLossData&>(::kentik::synthetics::v202309::_PacketLossData_default_instance_);
}
inline const ::kentik::synthetics::v202309::PacketLossData& PingResults::packet_loss() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.PingResults.packet_loss)
  return _internal_packet_loss();
}
inline void PingResults::unsafe_arena_set_allocated_packet_loss(::kentik::synthetics::v202309::PacketLossData* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.packet_loss_);
  }
  _impl_.packet_loss_ = reinterpret_cast<::kentik::synthetics::v202309::PacketLossData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.PingResults.packet_loss)
}
inline ::kentik::synthetics::v202309::PacketLossData* PingResults::release_packet_loss() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::PacketLossData* released = _impl_.packet_loss_;
  _impl_.packet_loss_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::PacketLossData* PingResults::unsafe_arena_release_packet_loss() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.PingResults.packet_loss)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::PacketLossData* temp = _impl_.packet_loss_;
  _impl_.packet_loss_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::PacketLossData* PingResults::_internal_mutable_packet_loss() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.packet_loss_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::PacketLossData>(GetArena());
    _impl_.packet_loss_ = reinterpret_cast<::kentik::synthetics::v202309::PacketLossData*>(p);
  }
  return _impl_.packet_loss_;
}
inline ::kentik::synthetics::v202309::PacketLossData* PingResults::mutable_packet_loss() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::synthetics::v202309::PacketLossData* _msg = _internal_mutable_packet_loss();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.PingResults.packet_loss)
  return _msg;
}
inline void PingResults::set_allocated_packet_loss(::kentik::synthetics::v202309::PacketLossData* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.packet_loss_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.packet_loss_ = reinterpret_cast<::kentik::synthetics::v202309::PacketLossData*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.PingResults.packet_loss)
}

// .kentik.synthetics.v202309.MetricData latency = 3 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool PingResults::has_latency() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.latency_ != nullptr);
  return value;
}
inline void PingResults::clear_latency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.latency_ != nullptr) _impl_.latency_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::kentik::synthetics::v202309::MetricData& PingResults::_internal_latency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::MetricData* p = _impl_.latency_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::MetricData&>(::kentik::synthetics::v202309::_MetricData_default_instance_);
}
inline const ::kentik::synthetics::v202309::MetricData& PingResults::latency() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.PingResults.latency)
  return _internal_latency();
}
inline void PingResults::unsafe_arena_set_allocated_latency(::kentik::synthetics::v202309::MetricData* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.latency_);
  }
  _impl_.latency_ = reinterpret_cast<::kentik::synthetics::v202309::MetricData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.PingResults.latency)
}
inline ::kentik::synthetics::v202309::MetricData* PingResults::release_latency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::synthetics::v202309::MetricData* released = _impl_.latency_;
  _impl_.latency_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::MetricData* PingResults::unsafe_arena_release_latency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.PingResults.latency)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::synthetics::v202309::MetricData* temp = _impl_.latency_;
  _impl_.latency_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::MetricData* PingResults::_internal_mutable_latency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.latency_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::MetricData>(GetArena());
    _impl_.latency_ = reinterpret_cast<::kentik::synthetics::v202309::MetricData*>(p);
  }
  return _impl_.latency_;
}
inline ::kentik::synthetics::v202309::MetricData* PingResults::mutable_latency() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::synthetics::v202309::MetricData* _msg = _internal_mutable_latency();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.PingResults.latency)
  return _msg;
}
inline void PingResults::set_allocated_latency(::kentik::synthetics::v202309::MetricData* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.latency_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.latency_ = reinterpret_cast<::kentik::synthetics::v202309::MetricData*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.PingResults.latency)
}

// .kentik.synthetics.v202309.MetricData jitter = 4 [json_name = "jitter", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool PingResults::has_jitter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.jitter_ != nullptr);
  return value;
}
inline void PingResults::clear_jitter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.jitter_ != nullptr) _impl_.jitter_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::kentik::synthetics::v202309::MetricData& PingResults::_internal_jitter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::MetricData* p = _impl_.jitter_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::MetricData&>(::kentik::synthetics::v202309::_MetricData_default_instance_);
}
inline const ::kentik::synthetics::v202309::MetricData& PingResults::jitter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.PingResults.jitter)
  return _internal_jitter();
}
inline void PingResults::unsafe_arena_set_allocated_jitter(::kentik::synthetics::v202309::MetricData* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.jitter_);
  }
  _impl_.jitter_ = reinterpret_cast<::kentik::synthetics::v202309::MetricData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.PingResults.jitter)
}
inline ::kentik::synthetics::v202309::MetricData* PingResults::release_jitter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::kentik::synthetics::v202309::MetricData* released = _impl_.jitter_;
  _impl_.jitter_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::MetricData* PingResults::unsafe_arena_release_jitter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.PingResults.jitter)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::kentik::synthetics::v202309::MetricData* temp = _impl_.jitter_;
  _impl_.jitter_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::MetricData* PingResults::_internal_mutable_jitter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.jitter_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::MetricData>(GetArena());
    _impl_.jitter_ = reinterpret_cast<::kentik::synthetics::v202309::MetricData*>(p);
  }
  return _impl_.jitter_;
}
inline ::kentik::synthetics::v202309::MetricData* PingResults::mutable_jitter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::kentik::synthetics::v202309::MetricData* _msg = _internal_mutable_jitter();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.PingResults.jitter)
  return _msg;
}
inline void PingResults::set_allocated_jitter(::kentik::synthetics::v202309::MetricData* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.jitter_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.jitter_ = reinterpret_cast<::kentik::synthetics::v202309::MetricData*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.PingResults.jitter)
}

// string dst_ip = 5 [json_name = "dstIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PingResults::clear_dst_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_ip_.ClearToEmpty();
}
inline const std::string& PingResults::dst_ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.PingResults.dst_ip)
  return _internal_dst_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PingResults::set_dst_ip(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.PingResults.dst_ip)
}
inline std::string* PingResults::mutable_dst_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dst_ip();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.PingResults.dst_ip)
  return _s;
}
inline const std::string& PingResults::_internal_dst_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dst_ip_.Get();
}
inline void PingResults::_internal_set_dst_ip(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_ip_.Set(value, GetArena());
}
inline std::string* PingResults::_internal_mutable_dst_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dst_ip_.Mutable( GetArena());
}
inline std::string* PingResults::release_dst_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.PingResults.dst_ip)
  return _impl_.dst_ip_.Release();
}
inline void PingResults::set_allocated_dst_ip(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_ip_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.dst_ip_.IsDefault()) {
    _impl_.dst_ip_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.PingResults.dst_ip)
}

// -------------------------------------------------------------------

// HTTPResponseData

// uint32 status = 1 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HTTPResponseData::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0u;
}
inline ::uint32_t HTTPResponseData::status() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HTTPResponseData.status)
  return _internal_status();
}
inline void HTTPResponseData::set_status(::uint32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HTTPResponseData.status)
}
inline ::uint32_t HTTPResponseData::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_;
}
inline void HTTPResponseData::_internal_set_status(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// uint32 size = 2 [json_name = "size", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HTTPResponseData::clear_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.size_ = 0u;
}
inline ::uint32_t HTTPResponseData::size() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HTTPResponseData.size)
  return _internal_size();
}
inline void HTTPResponseData::set_size(::uint32_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HTTPResponseData.size)
}
inline ::uint32_t HTTPResponseData::_internal_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.size_;
}
inline void HTTPResponseData::_internal_set_size(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.size_ = value;
}

// string data = 3 [json_name = "data", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HTTPResponseData::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& HTTPResponseData::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HTTPResponseData.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HTTPResponseData::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HTTPResponseData.data)
}
inline std::string* HTTPResponseData::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.HTTPResponseData.data)
  return _s;
}
inline const std::string& HTTPResponseData::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void HTTPResponseData::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* HTTPResponseData::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* HTTPResponseData::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.HTTPResponseData.data)
  return _impl_.data_.Release();
}
inline void HTTPResponseData::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.HTTPResponseData.data)
}

// -------------------------------------------------------------------

// HTTPResults

// string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HTTPResults::clear_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.ClearToEmpty();
}
inline const std::string& HTTPResults::target() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HTTPResults.target)
  return _internal_target();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HTTPResults::set_target(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HTTPResults.target)
}
inline std::string* HTTPResults::mutable_target() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_target();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.HTTPResults.target)
  return _s;
}
inline const std::string& HTTPResults::_internal_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_.Get();
}
inline void HTTPResults::_internal_set_target(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.Set(value, GetArena());
}
inline std::string* HTTPResults::_internal_mutable_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.target_.Mutable( GetArena());
}
inline std::string* HTTPResults::release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.HTTPResults.target)
  return _impl_.target_.Release();
}
inline void HTTPResults::set_allocated_target(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_.IsDefault()) {
    _impl_.target_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.HTTPResults.target)
}

// .kentik.synthetics.v202309.MetricData latency = 2 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool HTTPResults::has_latency() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.latency_ != nullptr);
  return value;
}
inline void HTTPResults::clear_latency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.latency_ != nullptr) _impl_.latency_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::synthetics::v202309::MetricData& HTTPResults::_internal_latency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::MetricData* p = _impl_.latency_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::MetricData&>(::kentik::synthetics::v202309::_MetricData_default_instance_);
}
inline const ::kentik::synthetics::v202309::MetricData& HTTPResults::latency() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HTTPResults.latency)
  return _internal_latency();
}
inline void HTTPResults::unsafe_arena_set_allocated_latency(::kentik::synthetics::v202309::MetricData* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.latency_);
  }
  _impl_.latency_ = reinterpret_cast<::kentik::synthetics::v202309::MetricData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.HTTPResults.latency)
}
inline ::kentik::synthetics::v202309::MetricData* HTTPResults::release_latency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::MetricData* released = _impl_.latency_;
  _impl_.latency_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::MetricData* HTTPResults::unsafe_arena_release_latency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.HTTPResults.latency)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::MetricData* temp = _impl_.latency_;
  _impl_.latency_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::MetricData* HTTPResults::_internal_mutable_latency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.latency_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::MetricData>(GetArena());
    _impl_.latency_ = reinterpret_cast<::kentik::synthetics::v202309::MetricData*>(p);
  }
  return _impl_.latency_;
}
inline ::kentik::synthetics::v202309::MetricData* HTTPResults::mutable_latency() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::synthetics::v202309::MetricData* _msg = _internal_mutable_latency();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.HTTPResults.latency)
  return _msg;
}
inline void HTTPResults::set_allocated_latency(::kentik::synthetics::v202309::MetricData* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.latency_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.latency_ = reinterpret_cast<::kentik::synthetics::v202309::MetricData*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.HTTPResults.latency)
}

// .kentik.synthetics.v202309.HTTPResponseData response = 4 [json_name = "response", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool HTTPResults::has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.response_ != nullptr);
  return value;
}
inline void HTTPResults::clear_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.response_ != nullptr) _impl_.response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::kentik::synthetics::v202309::HTTPResponseData& HTTPResults::_internal_response() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::HTTPResponseData* p = _impl_.response_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::HTTPResponseData&>(::kentik::synthetics::v202309::_HTTPResponseData_default_instance_);
}
inline const ::kentik::synthetics::v202309::HTTPResponseData& HTTPResults::response() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HTTPResults.response)
  return _internal_response();
}
inline void HTTPResults::unsafe_arena_set_allocated_response(::kentik::synthetics::v202309::HTTPResponseData* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.response_);
  }
  _impl_.response_ = reinterpret_cast<::kentik::synthetics::v202309::HTTPResponseData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.HTTPResults.response)
}
inline ::kentik::synthetics::v202309::HTTPResponseData* HTTPResults::release_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::synthetics::v202309::HTTPResponseData* released = _impl_.response_;
  _impl_.response_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::HTTPResponseData* HTTPResults::unsafe_arena_release_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.HTTPResults.response)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::synthetics::v202309::HTTPResponseData* temp = _impl_.response_;
  _impl_.response_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::HTTPResponseData* HTTPResults::_internal_mutable_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.response_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::HTTPResponseData>(GetArena());
    _impl_.response_ = reinterpret_cast<::kentik::synthetics::v202309::HTTPResponseData*>(p);
  }
  return _impl_.response_;
}
inline ::kentik::synthetics::v202309::HTTPResponseData* HTTPResults::mutable_response() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::synthetics::v202309::HTTPResponseData* _msg = _internal_mutable_response();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.HTTPResults.response)
  return _msg;
}
inline void HTTPResults::set_allocated_response(::kentik::synthetics::v202309::HTTPResponseData* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.response_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.response_ = reinterpret_cast<::kentik::synthetics::v202309::HTTPResponseData*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.HTTPResults.response)
}

// string dst_ip = 5 [json_name = "dstIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void HTTPResults::clear_dst_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_ip_.ClearToEmpty();
}
inline const std::string& HTTPResults::dst_ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.HTTPResults.dst_ip)
  return _internal_dst_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HTTPResults::set_dst_ip(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.HTTPResults.dst_ip)
}
inline std::string* HTTPResults::mutable_dst_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dst_ip();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.HTTPResults.dst_ip)
  return _s;
}
inline const std::string& HTTPResults::_internal_dst_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dst_ip_.Get();
}
inline void HTTPResults::_internal_set_dst_ip(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_ip_.Set(value, GetArena());
}
inline std::string* HTTPResults::_internal_mutable_dst_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dst_ip_.Mutable( GetArena());
}
inline std::string* HTTPResults::release_dst_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.HTTPResults.dst_ip)
  return _impl_.dst_ip_.Release();
}
inline void HTTPResults::set_allocated_dst_ip(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_ip_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.dst_ip_.IsDefault()) {
    _impl_.dst_ip_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.HTTPResults.dst_ip)
}

// -------------------------------------------------------------------

// DNSResponseData

// uint32 status = 1 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DNSResponseData::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0u;
}
inline ::uint32_t DNSResponseData::status() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DNSResponseData.status)
  return _internal_status();
}
inline void DNSResponseData::set_status(::uint32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DNSResponseData.status)
}
inline ::uint32_t DNSResponseData::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_;
}
inline void DNSResponseData::_internal_set_status(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// string data = 2 [json_name = "data", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DNSResponseData::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& DNSResponseData::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DNSResponseData.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DNSResponseData::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DNSResponseData.data)
}
inline std::string* DNSResponseData::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.DNSResponseData.data)
  return _s;
}
inline const std::string& DNSResponseData::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void DNSResponseData::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* DNSResponseData::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* DNSResponseData::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.DNSResponseData.data)
  return _impl_.data_.Release();
}
inline void DNSResponseData::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.DNSResponseData.data)
}

// -------------------------------------------------------------------

// DNSResults

// string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DNSResults::clear_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.ClearToEmpty();
}
inline const std::string& DNSResults::target() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DNSResults.target)
  return _internal_target();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DNSResults::set_target(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DNSResults.target)
}
inline std::string* DNSResults::mutable_target() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_target();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.DNSResults.target)
  return _s;
}
inline const std::string& DNSResults::_internal_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_.Get();
}
inline void DNSResults::_internal_set_target(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.Set(value, GetArena());
}
inline std::string* DNSResults::_internal_mutable_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.target_.Mutable( GetArena());
}
inline std::string* DNSResults::release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.DNSResults.target)
  return _impl_.target_.Release();
}
inline void DNSResults::set_allocated_target(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_.IsDefault()) {
    _impl_.target_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.DNSResults.target)
}

// string server = 2 [json_name = "server", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DNSResults::clear_server() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_.ClearToEmpty();
}
inline const std::string& DNSResults::server() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DNSResults.server)
  return _internal_server();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DNSResults::set_server(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DNSResults.server)
}
inline std::string* DNSResults::mutable_server() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_server();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.DNSResults.server)
  return _s;
}
inline const std::string& DNSResults::_internal_server() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.server_.Get();
}
inline void DNSResults::_internal_set_server(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_.Set(value, GetArena());
}
inline std::string* DNSResults::_internal_mutable_server() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.server_.Mutable( GetArena());
}
inline std::string* DNSResults::release_server() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.DNSResults.server)
  return _impl_.server_.Release();
}
inline void DNSResults::set_allocated_server(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.server_.IsDefault()) {
    _impl_.server_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.DNSResults.server)
}

// .kentik.synthetics.v202309.MetricData latency = 3 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool DNSResults::has_latency() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.latency_ != nullptr);
  return value;
}
inline void DNSResults::clear_latency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.latency_ != nullptr) _impl_.latency_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::synthetics::v202309::MetricData& DNSResults::_internal_latency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::MetricData* p = _impl_.latency_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::MetricData&>(::kentik::synthetics::v202309::_MetricData_default_instance_);
}
inline const ::kentik::synthetics::v202309::MetricData& DNSResults::latency() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DNSResults.latency)
  return _internal_latency();
}
inline void DNSResults::unsafe_arena_set_allocated_latency(::kentik::synthetics::v202309::MetricData* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.latency_);
  }
  _impl_.latency_ = reinterpret_cast<::kentik::synthetics::v202309::MetricData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.DNSResults.latency)
}
inline ::kentik::synthetics::v202309::MetricData* DNSResults::release_latency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::MetricData* released = _impl_.latency_;
  _impl_.latency_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::MetricData* DNSResults::unsafe_arena_release_latency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.DNSResults.latency)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::MetricData* temp = _impl_.latency_;
  _impl_.latency_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::MetricData* DNSResults::_internal_mutable_latency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.latency_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::MetricData>(GetArena());
    _impl_.latency_ = reinterpret_cast<::kentik::synthetics::v202309::MetricData*>(p);
  }
  return _impl_.latency_;
}
inline ::kentik::synthetics::v202309::MetricData* DNSResults::mutable_latency() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::synthetics::v202309::MetricData* _msg = _internal_mutable_latency();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.DNSResults.latency)
  return _msg;
}
inline void DNSResults::set_allocated_latency(::kentik::synthetics::v202309::MetricData* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.latency_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.latency_ = reinterpret_cast<::kentik::synthetics::v202309::MetricData*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.DNSResults.latency)
}

// .kentik.synthetics.v202309.DNSResponseData response = 5 [json_name = "response", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool DNSResults::has_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.response_ != nullptr);
  return value;
}
inline void DNSResults::clear_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.response_ != nullptr) _impl_.response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::kentik::synthetics::v202309::DNSResponseData& DNSResults::_internal_response() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::DNSResponseData* p = _impl_.response_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::DNSResponseData&>(::kentik::synthetics::v202309::_DNSResponseData_default_instance_);
}
inline const ::kentik::synthetics::v202309::DNSResponseData& DNSResults::response() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DNSResults.response)
  return _internal_response();
}
inline void DNSResults::unsafe_arena_set_allocated_response(::kentik::synthetics::v202309::DNSResponseData* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.response_);
  }
  _impl_.response_ = reinterpret_cast<::kentik::synthetics::v202309::DNSResponseData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.DNSResults.response)
}
inline ::kentik::synthetics::v202309::DNSResponseData* DNSResults::release_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::synthetics::v202309::DNSResponseData* released = _impl_.response_;
  _impl_.response_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::DNSResponseData* DNSResults::unsafe_arena_release_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.DNSResults.response)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::synthetics::v202309::DNSResponseData* temp = _impl_.response_;
  _impl_.response_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::DNSResponseData* DNSResults::_internal_mutable_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.response_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::DNSResponseData>(GetArena());
    _impl_.response_ = reinterpret_cast<::kentik::synthetics::v202309::DNSResponseData*>(p);
  }
  return _impl_.response_;
}
inline ::kentik::synthetics::v202309::DNSResponseData* DNSResults::mutable_response() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::synthetics::v202309::DNSResponseData* _msg = _internal_mutable_response();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.DNSResults.response)
  return _msg;
}
inline void DNSResults::set_allocated_response(::kentik::synthetics::v202309::DNSResponseData* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.response_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.response_ = reinterpret_cast<::kentik::synthetics::v202309::DNSResponseData*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.DNSResults.response)
}

// -------------------------------------------------------------------

// TaskResults

// .kentik.synthetics.v202309.PingResults ping = 1 [json_name = "ping", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool TaskResults::has_ping() const {
  return task_type_case() == kPing;
}
inline bool TaskResults::_internal_has_ping() const {
  return task_type_case() == kPing;
}
inline void TaskResults::set_has_ping() {
  _impl_._oneof_case_[0] = kPing;
}
inline void TaskResults::clear_ping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (task_type_case() == kPing) {
    if (GetArena() == nullptr) {
      delete _impl_.task_type_.ping_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.task_type_.ping_);
    }
    clear_has_task_type();
  }
}
inline ::kentik::synthetics::v202309::PingResults* TaskResults::release_ping() {
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TaskResults.ping)
  if (task_type_case() == kPing) {
    clear_has_task_type();
    auto* temp = _impl_.task_type_.ping_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.task_type_.ping_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::synthetics::v202309::PingResults& TaskResults::_internal_ping() const {
  return task_type_case() == kPing ? *_impl_.task_type_.ping_ : reinterpret_cast<::kentik::synthetics::v202309::PingResults&>(::kentik::synthetics::v202309::_PingResults_default_instance_);
}
inline const ::kentik::synthetics::v202309::PingResults& TaskResults::ping() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TaskResults.ping)
  return _internal_ping();
}
inline ::kentik::synthetics::v202309::PingResults* TaskResults::unsafe_arena_release_ping() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.synthetics.v202309.TaskResults.ping)
  if (task_type_case() == kPing) {
    clear_has_task_type();
    auto* temp = _impl_.task_type_.ping_;
    _impl_.task_type_.ping_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TaskResults::unsafe_arena_set_allocated_ping(::kentik::synthetics::v202309::PingResults* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_task_type();
  if (value) {
    set_has_ping();
    _impl_.task_type_.ping_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.TaskResults.ping)
}
inline ::kentik::synthetics::v202309::PingResults* TaskResults::_internal_mutable_ping() {
  if (task_type_case() != kPing) {
    clear_task_type();
    set_has_ping();
    _impl_.task_type_.ping_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::PingResults>(GetArena());
  }
  return _impl_.task_type_.ping_;
}
inline ::kentik::synthetics::v202309::PingResults* TaskResults::mutable_ping() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::synthetics::v202309::PingResults* _msg = _internal_mutable_ping();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TaskResults.ping)
  return _msg;
}

// .kentik.synthetics.v202309.HTTPResults http = 2 [json_name = "http", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool TaskResults::has_http() const {
  return task_type_case() == kHttp;
}
inline bool TaskResults::_internal_has_http() const {
  return task_type_case() == kHttp;
}
inline void TaskResults::set_has_http() {
  _impl_._oneof_case_[0] = kHttp;
}
inline void TaskResults::clear_http() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (task_type_case() == kHttp) {
    if (GetArena() == nullptr) {
      delete _impl_.task_type_.http_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.task_type_.http_);
    }
    clear_has_task_type();
  }
}
inline ::kentik::synthetics::v202309::HTTPResults* TaskResults::release_http() {
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TaskResults.http)
  if (task_type_case() == kHttp) {
    clear_has_task_type();
    auto* temp = _impl_.task_type_.http_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.task_type_.http_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::synthetics::v202309::HTTPResults& TaskResults::_internal_http() const {
  return task_type_case() == kHttp ? *_impl_.task_type_.http_ : reinterpret_cast<::kentik::synthetics::v202309::HTTPResults&>(::kentik::synthetics::v202309::_HTTPResults_default_instance_);
}
inline const ::kentik::synthetics::v202309::HTTPResults& TaskResults::http() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TaskResults.http)
  return _internal_http();
}
inline ::kentik::synthetics::v202309::HTTPResults* TaskResults::unsafe_arena_release_http() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.synthetics.v202309.TaskResults.http)
  if (task_type_case() == kHttp) {
    clear_has_task_type();
    auto* temp = _impl_.task_type_.http_;
    _impl_.task_type_.http_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TaskResults::unsafe_arena_set_allocated_http(::kentik::synthetics::v202309::HTTPResults* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_task_type();
  if (value) {
    set_has_http();
    _impl_.task_type_.http_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.TaskResults.http)
}
inline ::kentik::synthetics::v202309::HTTPResults* TaskResults::_internal_mutable_http() {
  if (task_type_case() != kHttp) {
    clear_task_type();
    set_has_http();
    _impl_.task_type_.http_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::HTTPResults>(GetArena());
  }
  return _impl_.task_type_.http_;
}
inline ::kentik::synthetics::v202309::HTTPResults* TaskResults::mutable_http() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::synthetics::v202309::HTTPResults* _msg = _internal_mutable_http();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TaskResults.http)
  return _msg;
}

// .kentik.synthetics.v202309.DNSResults dns = 3 [json_name = "dns", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool TaskResults::has_dns() const {
  return task_type_case() == kDns;
}
inline bool TaskResults::_internal_has_dns() const {
  return task_type_case() == kDns;
}
inline void TaskResults::set_has_dns() {
  _impl_._oneof_case_[0] = kDns;
}
inline void TaskResults::clear_dns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (task_type_case() == kDns) {
    if (GetArena() == nullptr) {
      delete _impl_.task_type_.dns_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.task_type_.dns_);
    }
    clear_has_task_type();
  }
}
inline ::kentik::synthetics::v202309::DNSResults* TaskResults::release_dns() {
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TaskResults.dns)
  if (task_type_case() == kDns) {
    clear_has_task_type();
    auto* temp = _impl_.task_type_.dns_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.task_type_.dns_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::synthetics::v202309::DNSResults& TaskResults::_internal_dns() const {
  return task_type_case() == kDns ? *_impl_.task_type_.dns_ : reinterpret_cast<::kentik::synthetics::v202309::DNSResults&>(::kentik::synthetics::v202309::_DNSResults_default_instance_);
}
inline const ::kentik::synthetics::v202309::DNSResults& TaskResults::dns() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TaskResults.dns)
  return _internal_dns();
}
inline ::kentik::synthetics::v202309::DNSResults* TaskResults::unsafe_arena_release_dns() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.synthetics.v202309.TaskResults.dns)
  if (task_type_case() == kDns) {
    clear_has_task_type();
    auto* temp = _impl_.task_type_.dns_;
    _impl_.task_type_.dns_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TaskResults::unsafe_arena_set_allocated_dns(::kentik::synthetics::v202309::DNSResults* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_task_type();
  if (value) {
    set_has_dns();
    _impl_.task_type_.dns_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.TaskResults.dns)
}
inline ::kentik::synthetics::v202309::DNSResults* TaskResults::_internal_mutable_dns() {
  if (task_type_case() != kDns) {
    clear_task_type();
    set_has_dns();
    _impl_.task_type_.dns_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::DNSResults>(GetArena());
  }
  return _impl_.task_type_.dns_;
}
inline ::kentik::synthetics::v202309::DNSResults* TaskResults::mutable_dns() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::synthetics::v202309::DNSResults* _msg = _internal_mutable_dns();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TaskResults.dns)
  return _msg;
}

// string health = 4 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TaskResults::clear_health() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_.ClearToEmpty();
}
inline const std::string& TaskResults::health() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TaskResults.health)
  return _internal_health();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TaskResults::set_health(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TaskResults.health)
}
inline std::string* TaskResults::mutable_health() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_health();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TaskResults.health)
  return _s;
}
inline const std::string& TaskResults::_internal_health() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.health_.Get();
}
inline void TaskResults::_internal_set_health(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_.Set(value, GetArena());
}
inline std::string* TaskResults::_internal_mutable_health() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.health_.Mutable( GetArena());
}
inline std::string* TaskResults::release_health() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TaskResults.health)
  return _impl_.health_.Release();
}
inline void TaskResults::set_allocated_health(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.health_.IsDefault()) {
    _impl_.health_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.TaskResults.health)
}

inline bool TaskResults::has_task_type() const {
  return task_type_case() != TASK_TYPE_NOT_SET;
}
inline void TaskResults::clear_has_task_type() {
  _impl_._oneof_case_[0] = TASK_TYPE_NOT_SET;
}
inline TaskResults::TaskTypeCase TaskResults::task_type_case() const {
  return TaskResults::TaskTypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// AgentResults

// string agent_id = 1 [json_name = "agentId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void AgentResults::clear_agent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.ClearToEmpty();
}
inline const std::string& AgentResults::agent_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.AgentResults.agent_id)
  return _internal_agent_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AgentResults::set_agent_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.AgentResults.agent_id)
}
inline std::string* AgentResults::mutable_agent_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_agent_id();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.AgentResults.agent_id)
  return _s;
}
inline const std::string& AgentResults::_internal_agent_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.agent_id_.Get();
}
inline void AgentResults::_internal_set_agent_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.Set(value, GetArena());
}
inline std::string* AgentResults::_internal_mutable_agent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.agent_id_.Mutable( GetArena());
}
inline std::string* AgentResults::release_agent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.AgentResults.agent_id)
  return _impl_.agent_id_.Release();
}
inline void AgentResults::set_allocated_agent_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.agent_id_.IsDefault()) {
    _impl_.agent_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.AgentResults.agent_id)
}

// string health = 2 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void AgentResults::clear_health() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_.ClearToEmpty();
}
inline const std::string& AgentResults::health() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.AgentResults.health)
  return _internal_health();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AgentResults::set_health(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.AgentResults.health)
}
inline std::string* AgentResults::mutable_health() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_health();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.AgentResults.health)
  return _s;
}
inline const std::string& AgentResults::_internal_health() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.health_.Get();
}
inline void AgentResults::_internal_set_health(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_.Set(value, GetArena());
}
inline std::string* AgentResults::_internal_mutable_health() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.health_.Mutable( GetArena());
}
inline std::string* AgentResults::release_health() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.AgentResults.health)
  return _impl_.health_.Release();
}
inline void AgentResults::set_allocated_health(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.health_.IsDefault()) {
    _impl_.health_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.AgentResults.health)
}

// repeated .kentik.synthetics.v202309.TaskResults tasks = 3 [json_name = "tasks", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int AgentResults::_internal_tasks_size() const {
  return _internal_tasks().size();
}
inline int AgentResults::tasks_size() const {
  return _internal_tasks_size();
}
inline void AgentResults::clear_tasks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tasks_.Clear();
}
inline ::kentik::synthetics::v202309::TaskResults* AgentResults::mutable_tasks(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.AgentResults.tasks)
  return _internal_mutable_tasks()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TaskResults>* AgentResults::mutable_tasks()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.AgentResults.tasks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_tasks();
}
inline const ::kentik::synthetics::v202309::TaskResults& AgentResults::tasks(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.AgentResults.tasks)
  return _internal_tasks().Get(index);
}
inline ::kentik::synthetics::v202309::TaskResults* AgentResults::add_tasks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::synthetics::v202309::TaskResults* _add = _internal_mutable_tasks()->Add();
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.AgentResults.tasks)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TaskResults>& AgentResults::tasks() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.AgentResults.tasks)
  return _internal_tasks();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TaskResults>&
AgentResults::_internal_tasks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tasks_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TaskResults>*
AgentResults::_internal_mutable_tasks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.tasks_;
}

// -------------------------------------------------------------------

// TestResults

// string test_id = 1 [json_name = "testId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestResults::clear_test_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.test_id_.ClearToEmpty();
}
inline const std::string& TestResults::test_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestResults.test_id)
  return _internal_test_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestResults::set_test_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.test_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestResults.test_id)
}
inline std::string* TestResults::mutable_test_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_test_id();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestResults.test_id)
  return _s;
}
inline const std::string& TestResults::_internal_test_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.test_id_.Get();
}
inline void TestResults::_internal_set_test_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.test_id_.Set(value, GetArena());
}
inline std::string* TestResults::_internal_mutable_test_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.test_id_.Mutable( GetArena());
}
inline std::string* TestResults::release_test_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestResults.test_id)
  return _impl_.test_id_.Release();
}
inline void TestResults::set_allocated_test_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.test_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.test_id_.IsDefault()) {
    _impl_.test_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.TestResults.test_id)
}

// .google.protobuf.Timestamp time = 2 [json_name = "time", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool TestResults::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& TestResults::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& TestResults::time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestResults.time)
  return _internal_time();
}
inline void TestResults::unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }
  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.TestResults.time)
}
inline ::google::protobuf::Timestamp* TestResults::release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.time_;
  _impl_.time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* TestResults::unsafe_arena_release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestResults.time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.time_;
  _impl_.time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* TestResults::_internal_mutable_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.time_;
}
inline ::google::protobuf::Timestamp* TestResults::mutable_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestResults.time)
  return _msg;
}
inline void TestResults::set_allocated_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.TestResults.time)
}

// string health = 3 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TestResults::clear_health() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_.ClearToEmpty();
}
inline const std::string& TestResults::health() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestResults.health)
  return _internal_health();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestResults::set_health(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TestResults.health)
}
inline std::string* TestResults::mutable_health() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_health();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestResults.health)
  return _s;
}
inline const std::string& TestResults::_internal_health() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.health_.Get();
}
inline void TestResults::_internal_set_health(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_.Set(value, GetArena());
}
inline std::string* TestResults::_internal_mutable_health() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.health_.Mutable( GetArena());
}
inline std::string* TestResults::release_health() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TestResults.health)
  return _impl_.health_.Release();
}
inline void TestResults::set_allocated_health(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.health_.IsDefault()) {
    _impl_.health_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.TestResults.health)
}

// repeated .kentik.synthetics.v202309.AgentResults agents = 4 [json_name = "agents", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int TestResults::_internal_agents_size() const {
  return _internal_agents().size();
}
inline int TestResults::agents_size() const {
  return _internal_agents_size();
}
inline void TestResults::clear_agents() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agents_.Clear();
}
inline ::kentik::synthetics::v202309::AgentResults* TestResults::mutable_agents(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TestResults.agents)
  return _internal_mutable_agents()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentResults>* TestResults::mutable_agents()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.TestResults.agents)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_agents();
}
inline const ::kentik::synthetics::v202309::AgentResults& TestResults::agents(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TestResults.agents)
  return _internal_agents().Get(index);
}
inline ::kentik::synthetics::v202309::AgentResults* TestResults::add_agents() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::synthetics::v202309::AgentResults* _add = _internal_mutable_agents()->Add();
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.TestResults.agents)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentResults>& TestResults::agents() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.TestResults.agents)
  return _internal_agents();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentResults>&
TestResults::_internal_agents() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.agents_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentResults>*
TestResults::_internal_mutable_agents() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.agents_;
}

// -------------------------------------------------------------------

// Stats

// int32 average = 1 [json_name = "average", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Stats::clear_average() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.average_ = 0;
}
inline ::int32_t Stats::average() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Stats.average)
  return _internal_average();
}
inline void Stats::set_average(::int32_t value) {
  _internal_set_average(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Stats.average)
}
inline ::int32_t Stats::_internal_average() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.average_;
}
inline void Stats::_internal_set_average(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.average_ = value;
}

// int32 min = 2 [json_name = "min", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Stats::clear_min() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_ = 0;
}
inline ::int32_t Stats::min() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Stats.min)
  return _internal_min();
}
inline void Stats::set_min(::int32_t value) {
  _internal_set_min(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Stats.min)
}
inline ::int32_t Stats::_internal_min() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_;
}
inline void Stats::_internal_set_min(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_ = value;
}

// int32 max = 3 [json_name = "max", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Stats::clear_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ = 0;
}
inline ::int32_t Stats::max() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Stats.max)
  return _internal_max();
}
inline void Stats::set_max(::int32_t value) {
  _internal_set_max(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Stats.max)
}
inline ::int32_t Stats::_internal_max() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_;
}
inline void Stats::_internal_set_max(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_ = value;
}

// -------------------------------------------------------------------

// Location

// double latitude = 8 [json_name = "latitude", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Location::clear_latitude() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latitude_ = 0;
}
inline double Location::latitude() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Location.latitude)
  return _internal_latitude();
}
inline void Location::set_latitude(double value) {
  _internal_set_latitude(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Location.latitude)
}
inline double Location::_internal_latitude() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latitude_;
}
inline void Location::_internal_set_latitude(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latitude_ = value;
}

// double longitude = 9 [json_name = "longitude", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Location::clear_longitude() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.longitude_ = 0;
}
inline double Location::longitude() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Location.longitude)
  return _internal_longitude();
}
inline void Location::set_longitude(double value) {
  _internal_set_longitude(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Location.longitude)
}
inline double Location::_internal_longitude() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.longitude_;
}
inline void Location::_internal_set_longitude(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.longitude_ = value;
}

// string country = 1 [json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Location::clear_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.ClearToEmpty();
}
inline const std::string& Location::country() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Location.country)
  return _internal_country();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Location::set_country(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Location.country)
}
inline std::string* Location::mutable_country() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_country();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Location.country)
  return _s;
}
inline const std::string& Location::_internal_country() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.country_.Get();
}
inline void Location::_internal_set_country(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.Set(value, GetArena());
}
inline std::string* Location::_internal_mutable_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.country_.Mutable( GetArena());
}
inline std::string* Location::release_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Location.country)
  return _impl_.country_.Release();
}
inline void Location::set_allocated_country(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.country_.IsDefault()) {
    _impl_.country_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Location.country)
}

// string region = 2 [json_name = "region", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Location::clear_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_.ClearToEmpty();
}
inline const std::string& Location::region() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Location.region)
  return _internal_region();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Location::set_region(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Location.region)
}
inline std::string* Location::mutable_region() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_region();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Location.region)
  return _s;
}
inline const std::string& Location::_internal_region() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.region_.Get();
}
inline void Location::_internal_set_region(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_.Set(value, GetArena());
}
inline std::string* Location::_internal_mutable_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.region_.Mutable( GetArena());
}
inline std::string* Location::release_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Location.region)
  return _impl_.region_.Release();
}
inline void Location::set_allocated_region(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.region_.IsDefault()) {
    _impl_.region_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Location.region)
}

// string city = 3 [json_name = "city", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Location::clear_city() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_.ClearToEmpty();
}
inline const std::string& Location::city() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Location.city)
  return _internal_city();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Location::set_city(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Location.city)
}
inline std::string* Location::mutable_city() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_city();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Location.city)
  return _s;
}
inline const std::string& Location::_internal_city() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.city_.Get();
}
inline void Location::_internal_set_city(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_.Set(value, GetArena());
}
inline std::string* Location::_internal_mutable_city() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.city_.Mutable( GetArena());
}
inline std::string* Location::release_city() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Location.city)
  return _impl_.city_.Release();
}
inline void Location::set_allocated_city(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.city_.IsDefault()) {
    _impl_.city_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Location.city)
}

// -------------------------------------------------------------------

// NetNode

// string ip = 2 [json_name = "ip", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void NetNode::clear_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_.ClearToEmpty();
}
inline const std::string& NetNode::ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.NetNode.ip)
  return _internal_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NetNode::set_ip(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.NetNode.ip)
}
inline std::string* NetNode::mutable_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ip();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.NetNode.ip)
  return _s;
}
inline const std::string& NetNode::_internal_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ip_.Get();
}
inline void NetNode::_internal_set_ip(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_.Set(value, GetArena());
}
inline std::string* NetNode::_internal_mutable_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ip_.Mutable( GetArena());
}
inline std::string* NetNode::release_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.NetNode.ip)
  return _impl_.ip_.Release();
}
inline void NetNode::set_allocated_ip(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.ip_.IsDefault()) {
    _impl_.ip_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.NetNode.ip)
}

// uint32 asn = 3 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void NetNode::clear_asn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.asn_ = 0u;
}
inline ::uint32_t NetNode::asn() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.NetNode.asn)
  return _internal_asn();
}
inline void NetNode::set_asn(::uint32_t value) {
  _internal_set_asn(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.NetNode.asn)
}
inline ::uint32_t NetNode::_internal_asn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.asn_;
}
inline void NetNode::_internal_set_asn(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.asn_ = value;
}

// string as_name = 4 [json_name = "asName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void NetNode::clear_as_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.as_name_.ClearToEmpty();
}
inline const std::string& NetNode::as_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.NetNode.as_name)
  return _internal_as_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NetNode::set_as_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.as_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.NetNode.as_name)
}
inline std::string* NetNode::mutable_as_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_as_name();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.NetNode.as_name)
  return _s;
}
inline const std::string& NetNode::_internal_as_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.as_name_.Get();
}
inline void NetNode::_internal_set_as_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.as_name_.Set(value, GetArena());
}
inline std::string* NetNode::_internal_mutable_as_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.as_name_.Mutable( GetArena());
}
inline std::string* NetNode::release_as_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.NetNode.as_name)
  return _impl_.as_name_.Release();
}
inline void NetNode::set_allocated_as_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.as_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.as_name_.IsDefault()) {
    _impl_.as_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.NetNode.as_name)
}

// .kentik.synthetics.v202309.Location location = 5 [json_name = "location", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool NetNode::has_location() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.location_ != nullptr);
  return value;
}
inline void NetNode::clear_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.location_ != nullptr) _impl_.location_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::synthetics::v202309::Location& NetNode::_internal_location() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::Location* p = _impl_.location_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::Location&>(::kentik::synthetics::v202309::_Location_default_instance_);
}
inline const ::kentik::synthetics::v202309::Location& NetNode::location() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.NetNode.location)
  return _internal_location();
}
inline void NetNode::unsafe_arena_set_allocated_location(::kentik::synthetics::v202309::Location* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.location_);
  }
  _impl_.location_ = reinterpret_cast<::kentik::synthetics::v202309::Location*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.NetNode.location)
}
inline ::kentik::synthetics::v202309::Location* NetNode::release_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::Location* released = _impl_.location_;
  _impl_.location_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::Location* NetNode::unsafe_arena_release_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.NetNode.location)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::Location* temp = _impl_.location_;
  _impl_.location_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::Location* NetNode::_internal_mutable_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.location_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::Location>(GetArena());
    _impl_.location_ = reinterpret_cast<::kentik::synthetics::v202309::Location*>(p);
  }
  return _impl_.location_;
}
inline ::kentik::synthetics::v202309::Location* NetNode::mutable_location() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::synthetics::v202309::Location* _msg = _internal_mutable_location();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.NetNode.location)
  return _msg;
}
inline void NetNode::set_allocated_location(::kentik::synthetics::v202309::Location* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.location_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.location_ = reinterpret_cast<::kentik::synthetics::v202309::Location*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.NetNode.location)
}

// string dns_name = 6 [json_name = "dnsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void NetNode::clear_dns_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_name_.ClearToEmpty();
}
inline const std::string& NetNode::dns_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.NetNode.dns_name)
  return _internal_dns_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NetNode::set_dns_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.NetNode.dns_name)
}
inline std::string* NetNode::mutable_dns_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dns_name();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.NetNode.dns_name)
  return _s;
}
inline const std::string& NetNode::_internal_dns_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dns_name_.Get();
}
inline void NetNode::_internal_set_dns_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_name_.Set(value, GetArena());
}
inline std::string* NetNode::_internal_mutable_dns_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dns_name_.Mutable( GetArena());
}
inline std::string* NetNode::release_dns_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.NetNode.dns_name)
  return _impl_.dns_name_.Release();
}
inline void NetNode::set_allocated_dns_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dns_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.dns_name_.IsDefault()) {
    _impl_.dns_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.NetNode.dns_name)
}

// string device_id = 7 [json_name = "deviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void NetNode::clear_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.ClearToEmpty();
}
inline const std::string& NetNode::device_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.NetNode.device_id)
  return _internal_device_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NetNode::set_device_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.NetNode.device_id)
}
inline std::string* NetNode::mutable_device_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_id();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.NetNode.device_id)
  return _s;
}
inline const std::string& NetNode::_internal_device_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_id_.Get();
}
inline void NetNode::_internal_set_device_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.Set(value, GetArena());
}
inline std::string* NetNode::_internal_mutable_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_id_.Mutable( GetArena());
}
inline std::string* NetNode::release_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.NetNode.device_id)
  return _impl_.device_id_.Release();
}
inline void NetNode::set_allocated_device_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_id_.IsDefault()) {
    _impl_.device_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.NetNode.device_id)
}

// string site_id = 8 [json_name = "siteId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void NetNode::clear_site_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_id_.ClearToEmpty();
}
inline const std::string& NetNode::site_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.NetNode.site_id)
  return _internal_site_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NetNode::set_site_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.NetNode.site_id)
}
inline std::string* NetNode::mutable_site_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_site_id();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.NetNode.site_id)
  return _s;
}
inline const std::string& NetNode::_internal_site_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.site_id_.Get();
}
inline void NetNode::_internal_set_site_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_id_.Set(value, GetArena());
}
inline std::string* NetNode::_internal_mutable_site_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.site_id_.Mutable( GetArena());
}
inline std::string* NetNode::release_site_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.NetNode.site_id)
  return _impl_.site_id_.Release();
}
inline void NetNode::set_allocated_site_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.site_id_.IsDefault()) {
    _impl_.site_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.NetNode.site_id)
}

// -------------------------------------------------------------------

// TraceHop

// int32 latency = 3 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TraceHop::clear_latency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latency_ = 0;
}
inline ::int32_t TraceHop::latency() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TraceHop.latency)
  return _internal_latency();
}
inline void TraceHop::set_latency(::int32_t value) {
  _internal_set_latency(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TraceHop.latency)
}
inline ::int32_t TraceHop::_internal_latency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latency_;
}
inline void TraceHop::_internal_set_latency(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latency_ = value;
}

// string node_id = 5 [json_name = "nodeId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void TraceHop::clear_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_.ClearToEmpty();
}
inline const std::string& TraceHop::node_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.TraceHop.node_id)
  return _internal_node_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TraceHop::set_node_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.TraceHop.node_id)
}
inline std::string* TraceHop::mutable_node_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_node_id();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.TraceHop.node_id)
  return _s;
}
inline const std::string& TraceHop::_internal_node_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_id_.Get();
}
inline void TraceHop::_internal_set_node_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_.Set(value, GetArena());
}
inline std::string* TraceHop::_internal_mutable_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.node_id_.Mutable( GetArena());
}
inline std::string* TraceHop::release_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.TraceHop.node_id)
  return _impl_.node_id_.Release();
}
inline void TraceHop::set_allocated_node_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.node_id_.IsDefault()) {
    _impl_.node_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.TraceHop.node_id)
}

// -------------------------------------------------------------------

// PathTrace

// repeated int32 as_path = 1 [json_name = "asPath", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int PathTrace::_internal_as_path_size() const {
  return _internal_as_path().size();
}
inline int PathTrace::as_path_size() const {
  return _internal_as_path_size();
}
inline void PathTrace::clear_as_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.as_path_.Clear();
}
inline ::int32_t PathTrace::as_path(int index) const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.PathTrace.as_path)
  return _internal_as_path().Get(index);
}
inline void PathTrace::set_as_path(int index, ::int32_t value) {
  _internal_mutable_as_path()->Set(index, value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.PathTrace.as_path)
}
inline void PathTrace::add_as_path(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_as_path()->Add(value);
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.PathTrace.as_path)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& PathTrace::as_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.PathTrace.as_path)
  return _internal_as_path();
}
inline ::google::protobuf::RepeatedField<::int32_t>* PathTrace::mutable_as_path()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.PathTrace.as_path)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_as_path();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
PathTrace::_internal_as_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.as_path_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* PathTrace::_internal_mutable_as_path() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.as_path_;
}

// bool is_complete = 2 [json_name = "isComplete", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PathTrace::clear_is_complete() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_complete_ = false;
}
inline bool PathTrace::is_complete() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.PathTrace.is_complete)
  return _internal_is_complete();
}
inline void PathTrace::set_is_complete(bool value) {
  _internal_set_is_complete(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.PathTrace.is_complete)
}
inline bool PathTrace::_internal_is_complete() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_complete_;
}
inline void PathTrace::_internal_set_is_complete(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_complete_ = value;
}

// repeated .kentik.synthetics.v202309.TraceHop hops = 6 [json_name = "hops", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int PathTrace::_internal_hops_size() const {
  return _internal_hops().size();
}
inline int PathTrace::hops_size() const {
  return _internal_hops_size();
}
inline void PathTrace::clear_hops() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hops_.Clear();
}
inline ::kentik::synthetics::v202309::TraceHop* PathTrace::mutable_hops(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.PathTrace.hops)
  return _internal_mutable_hops()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TraceHop>* PathTrace::mutable_hops()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.PathTrace.hops)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_hops();
}
inline const ::kentik::synthetics::v202309::TraceHop& PathTrace::hops(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.PathTrace.hops)
  return _internal_hops().Get(index);
}
inline ::kentik::synthetics::v202309::TraceHop* PathTrace::add_hops() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::synthetics::v202309::TraceHop* _add = _internal_mutable_hops()->Add();
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.PathTrace.hops)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TraceHop>& PathTrace::hops() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.PathTrace.hops)
  return _internal_hops();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TraceHop>&
PathTrace::_internal_hops() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hops_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TraceHop>*
PathTrace::_internal_mutable_hops() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.hops_;
}

// -------------------------------------------------------------------

// Path

// string agent_id = 1 [json_name = "agentId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Path::clear_agent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.ClearToEmpty();
}
inline const std::string& Path::agent_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Path.agent_id)
  return _internal_agent_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Path::set_agent_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Path.agent_id)
}
inline std::string* Path::mutable_agent_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_agent_id();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Path.agent_id)
  return _s;
}
inline const std::string& Path::_internal_agent_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.agent_id_.Get();
}
inline void Path::_internal_set_agent_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.Set(value, GetArena());
}
inline std::string* Path::_internal_mutable_agent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.agent_id_.Mutable( GetArena());
}
inline std::string* Path::release_agent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Path.agent_id)
  return _impl_.agent_id_.Release();
}
inline void Path::set_allocated_agent_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.agent_id_.IsDefault()) {
    _impl_.agent_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Path.agent_id)
}

// string target_ip = 3 [json_name = "targetIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Path::clear_target_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_ip_.ClearToEmpty();
}
inline const std::string& Path::target_ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Path.target_ip)
  return _internal_target_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Path::set_target_ip(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Path.target_ip)
}
inline std::string* Path::mutable_target_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_target_ip();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Path.target_ip)
  return _s;
}
inline const std::string& Path::_internal_target_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_ip_.Get();
}
inline void Path::_internal_set_target_ip(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_ip_.Set(value, GetArena());
}
inline std::string* Path::_internal_mutable_target_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.target_ip_.Mutable( GetArena());
}
inline std::string* Path::release_target_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Path.target_ip)
  return _impl_.target_ip_.Release();
}
inline void Path::set_allocated_target_ip(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_ip_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_ip_.IsDefault()) {
    _impl_.target_ip_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Path.target_ip)
}

// .kentik.synthetics.v202309.Stats hop_count = 4 [json_name = "hopCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Path::has_hop_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hop_count_ != nullptr);
  return value;
}
inline void Path::clear_hop_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hop_count_ != nullptr) _impl_.hop_count_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::synthetics::v202309::Stats& Path::_internal_hop_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::Stats* p = _impl_.hop_count_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::Stats&>(::kentik::synthetics::v202309::_Stats_default_instance_);
}
inline const ::kentik::synthetics::v202309::Stats& Path::hop_count() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Path.hop_count)
  return _internal_hop_count();
}
inline void Path::unsafe_arena_set_allocated_hop_count(::kentik::synthetics::v202309::Stats* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hop_count_);
  }
  _impl_.hop_count_ = reinterpret_cast<::kentik::synthetics::v202309::Stats*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.Path.hop_count)
}
inline ::kentik::synthetics::v202309::Stats* Path::release_hop_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::Stats* released = _impl_.hop_count_;
  _impl_.hop_count_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::Stats* Path::unsafe_arena_release_hop_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Path.hop_count)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::Stats* temp = _impl_.hop_count_;
  _impl_.hop_count_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::Stats* Path::_internal_mutable_hop_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hop_count_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::Stats>(GetArena());
    _impl_.hop_count_ = reinterpret_cast<::kentik::synthetics::v202309::Stats*>(p);
  }
  return _impl_.hop_count_;
}
inline ::kentik::synthetics::v202309::Stats* Path::mutable_hop_count() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::synthetics::v202309::Stats* _msg = _internal_mutable_hop_count();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Path.hop_count)
  return _msg;
}
inline void Path::set_allocated_hop_count(::kentik::synthetics::v202309::Stats* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.hop_count_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.hop_count_ = reinterpret_cast<::kentik::synthetics::v202309::Stats*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Path.hop_count)
}

// int32 max_as_path_length = 7 [json_name = "maxAsPathLength", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Path::clear_max_as_path_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_as_path_length_ = 0;
}
inline ::int32_t Path::max_as_path_length() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Path.max_as_path_length)
  return _internal_max_as_path_length();
}
inline void Path::set_max_as_path_length(::int32_t value) {
  _internal_set_max_as_path_length(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.Path.max_as_path_length)
}
inline ::int32_t Path::_internal_max_as_path_length() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_as_path_length_;
}
inline void Path::_internal_set_max_as_path_length(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_as_path_length_ = value;
}

// repeated .kentik.synthetics.v202309.PathTrace traces = 8 [json_name = "traces", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Path::_internal_traces_size() const {
  return _internal_traces().size();
}
inline int Path::traces_size() const {
  return _internal_traces_size();
}
inline void Path::clear_traces() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.traces_.Clear();
}
inline ::kentik::synthetics::v202309::PathTrace* Path::mutable_traces(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Path.traces)
  return _internal_mutable_traces()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::PathTrace>* Path::mutable_traces()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.Path.traces)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_traces();
}
inline const ::kentik::synthetics::v202309::PathTrace& Path::traces(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Path.traces)
  return _internal_traces().Get(index);
}
inline ::kentik::synthetics::v202309::PathTrace* Path::add_traces() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::synthetics::v202309::PathTrace* _add = _internal_mutable_traces()->Add();
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.Path.traces)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::PathTrace>& Path::traces() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.Path.traces)
  return _internal_traces();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::PathTrace>&
Path::_internal_traces() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.traces_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::PathTrace>*
Path::_internal_mutable_traces() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.traces_;
}

// .google.protobuf.Timestamp time = 9 [json_name = "time", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Path::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Path::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Path::time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.Path.time)
  return _internal_time();
}
inline void Path::unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }
  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.Path.time)
}
inline ::google::protobuf::Timestamp* Path::release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.time_;
  _impl_.time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Path::unsafe_arena_release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.Path.time)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.time_;
  _impl_.time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Path::_internal_mutable_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.time_;
}
inline ::google::protobuf::Timestamp* Path::mutable_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.Path.time)
  return _msg;
}
inline void Path::set_allocated_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.Path.time)
}

// -------------------------------------------------------------------

// GetResultsForTestsRequest

// repeated string ids = 1 [json_name = "ids", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int GetResultsForTestsRequest::_internal_ids_size() const {
  return _internal_ids().size();
}
inline int GetResultsForTestsRequest::ids_size() const {
  return _internal_ids_size();
}
inline void GetResultsForTestsRequest::clear_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ids_.Clear();
}
inline std::string* GetResultsForTestsRequest::add_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.synthetics.v202309.GetResultsForTestsRequest.ids)
  return _s;
}
inline const std::string& GetResultsForTestsRequest::ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.GetResultsForTestsRequest.ids)
  return _internal_ids().Get(index);
}
inline std::string* GetResultsForTestsRequest::mutable_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.GetResultsForTestsRequest.ids)
  return _internal_mutable_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetResultsForTestsRequest::set_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_ids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.GetResultsForTestsRequest.ids)
}
template <typename Arg_, typename... Args_>
inline void GetResultsForTestsRequest::add_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_ids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.GetResultsForTestsRequest.ids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetResultsForTestsRequest::ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.GetResultsForTestsRequest.ids)
  return _internal_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetResultsForTestsRequest::mutable_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.GetResultsForTestsRequest.ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetResultsForTestsRequest::_internal_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetResultsForTestsRequest::_internal_mutable_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ids_;
}

// .google.protobuf.Timestamp start_time = 2 [json_name = "startTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool GetResultsForTestsRequest::has_start_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.start_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& GetResultsForTestsRequest::_internal_start_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.start_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& GetResultsForTestsRequest::start_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.GetResultsForTestsRequest.start_time)
  return _internal_start_time();
}
inline void GetResultsForTestsRequest::unsafe_arena_set_allocated_start_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.start_time_);
  }
  _impl_.start_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.GetResultsForTestsRequest.start_time)
}
inline ::google::protobuf::Timestamp* GetResultsForTestsRequest::release_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.start_time_;
  _impl_.start_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* GetResultsForTestsRequest::unsafe_arena_release_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.GetResultsForTestsRequest.start_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.start_time_;
  _impl_.start_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* GetResultsForTestsRequest::_internal_mutable_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.start_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.start_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.start_time_;
}
inline ::google::protobuf::Timestamp* GetResultsForTestsRequest::mutable_start_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_start_time();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.GetResultsForTestsRequest.start_time)
  return _msg;
}
inline void GetResultsForTestsRequest::set_allocated_start_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.start_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.start_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.GetResultsForTestsRequest.start_time)
}

// .google.protobuf.Timestamp end_time = 3 [json_name = "endTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool GetResultsForTestsRequest::has_end_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.end_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& GetResultsForTestsRequest::_internal_end_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.end_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& GetResultsForTestsRequest::end_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.GetResultsForTestsRequest.end_time)
  return _internal_end_time();
}
inline void GetResultsForTestsRequest::unsafe_arena_set_allocated_end_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.end_time_);
  }
  _impl_.end_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.GetResultsForTestsRequest.end_time)
}
inline ::google::protobuf::Timestamp* GetResultsForTestsRequest::release_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.end_time_;
  _impl_.end_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* GetResultsForTestsRequest::unsafe_arena_release_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.GetResultsForTestsRequest.end_time)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.end_time_;
  _impl_.end_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* GetResultsForTestsRequest::_internal_mutable_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.end_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.end_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.end_time_;
}
inline ::google::protobuf::Timestamp* GetResultsForTestsRequest::mutable_end_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_end_time();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.GetResultsForTestsRequest.end_time)
  return _msg;
}
inline void GetResultsForTestsRequest::set_allocated_end_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.end_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.end_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.GetResultsForTestsRequest.end_time)
}

// repeated string agent_ids = 4 [json_name = "agentIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int GetResultsForTestsRequest::_internal_agent_ids_size() const {
  return _internal_agent_ids().size();
}
inline int GetResultsForTestsRequest::agent_ids_size() const {
  return _internal_agent_ids_size();
}
inline void GetResultsForTestsRequest::clear_agent_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_ids_.Clear();
}
inline std::string* GetResultsForTestsRequest::add_agent_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_agent_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.synthetics.v202309.GetResultsForTestsRequest.agent_ids)
  return _s;
}
inline const std::string& GetResultsForTestsRequest::agent_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.GetResultsForTestsRequest.agent_ids)
  return _internal_agent_ids().Get(index);
}
inline std::string* GetResultsForTestsRequest::mutable_agent_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.GetResultsForTestsRequest.agent_ids)
  return _internal_mutable_agent_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetResultsForTestsRequest::set_agent_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_agent_ids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.GetResultsForTestsRequest.agent_ids)
}
template <typename Arg_, typename... Args_>
inline void GetResultsForTestsRequest::add_agent_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_agent_ids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.GetResultsForTestsRequest.agent_ids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetResultsForTestsRequest::agent_ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.GetResultsForTestsRequest.agent_ids)
  return _internal_agent_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetResultsForTestsRequest::mutable_agent_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.GetResultsForTestsRequest.agent_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_agent_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetResultsForTestsRequest::_internal_agent_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.agent_ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetResultsForTestsRequest::_internal_mutable_agent_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.agent_ids_;
}

// repeated string targets = 5 [json_name = "targets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int GetResultsForTestsRequest::_internal_targets_size() const {
  return _internal_targets().size();
}
inline int GetResultsForTestsRequest::targets_size() const {
  return _internal_targets_size();
}
inline void GetResultsForTestsRequest::clear_targets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targets_.Clear();
}
inline std::string* GetResultsForTestsRequest::add_targets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_targets()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.synthetics.v202309.GetResultsForTestsRequest.targets)
  return _s;
}
inline const std::string& GetResultsForTestsRequest::targets(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.GetResultsForTestsRequest.targets)
  return _internal_targets().Get(index);
}
inline std::string* GetResultsForTestsRequest::mutable_targets(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.GetResultsForTestsRequest.targets)
  return _internal_mutable_targets()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetResultsForTestsRequest::set_targets(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_targets()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.GetResultsForTestsRequest.targets)
}
template <typename Arg_, typename... Args_>
inline void GetResultsForTestsRequest::add_targets(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_targets(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.GetResultsForTestsRequest.targets)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetResultsForTestsRequest::targets() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.GetResultsForTestsRequest.targets)
  return _internal_targets();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetResultsForTestsRequest::mutable_targets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.GetResultsForTestsRequest.targets)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_targets();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetResultsForTestsRequest::_internal_targets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.targets_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetResultsForTestsRequest::_internal_mutable_targets() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.targets_;
}

// bool aggregate = 6 [json_name = "aggregate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void GetResultsForTestsRequest::clear_aggregate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aggregate_ = false;
}
inline bool GetResultsForTestsRequest::aggregate() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.GetResultsForTestsRequest.aggregate)
  return _internal_aggregate();
}
inline void GetResultsForTestsRequest::set_aggregate(bool value) {
  _internal_set_aggregate(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.GetResultsForTestsRequest.aggregate)
}
inline bool GetResultsForTestsRequest::_internal_aggregate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.aggregate_;
}
inline void GetResultsForTestsRequest::_internal_set_aggregate(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aggregate_ = value;
}

// -------------------------------------------------------------------

// GetResultsForTestsResponse

// repeated .kentik.synthetics.v202309.TestResults results = 1 [json_name = "results"];
inline int GetResultsForTestsResponse::_internal_results_size() const {
  return _internal_results().size();
}
inline int GetResultsForTestsResponse::results_size() const {
  return _internal_results_size();
}
inline void GetResultsForTestsResponse::clear_results() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.results_.Clear();
}
inline ::kentik::synthetics::v202309::TestResults* GetResultsForTestsResponse::mutable_results(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.GetResultsForTestsResponse.results)
  return _internal_mutable_results()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TestResults>* GetResultsForTestsResponse::mutable_results()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.GetResultsForTestsResponse.results)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_results();
}
inline const ::kentik::synthetics::v202309::TestResults& GetResultsForTestsResponse::results(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.GetResultsForTestsResponse.results)
  return _internal_results().Get(index);
}
inline ::kentik::synthetics::v202309::TestResults* GetResultsForTestsResponse::add_results() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::synthetics::v202309::TestResults* _add = _internal_mutable_results()->Add();
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.GetResultsForTestsResponse.results)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TestResults>& GetResultsForTestsResponse::results() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.GetResultsForTestsResponse.results)
  return _internal_results();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TestResults>&
GetResultsForTestsResponse::_internal_results() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.results_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::TestResults>*
GetResultsForTestsResponse::_internal_mutable_results() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.results_;
}

// -------------------------------------------------------------------

// GetTraceForTestRequest

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void GetTraceForTestRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& GetTraceForTestRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.GetTraceForTestRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTraceForTestRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.GetTraceForTestRequest.id)
}
inline std::string* GetTraceForTestRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.GetTraceForTestRequest.id)
  return _s;
}
inline const std::string& GetTraceForTestRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void GetTraceForTestRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* GetTraceForTestRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* GetTraceForTestRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.GetTraceForTestRequest.id)
  return _impl_.id_.Release();
}
inline void GetTraceForTestRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.GetTraceForTestRequest.id)
}

// .google.protobuf.Timestamp start_time = 2 [json_name = "startTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool GetTraceForTestRequest::has_start_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.start_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& GetTraceForTestRequest::_internal_start_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.start_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& GetTraceForTestRequest::start_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.GetTraceForTestRequest.start_time)
  return _internal_start_time();
}
inline void GetTraceForTestRequest::unsafe_arena_set_allocated_start_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.start_time_);
  }
  _impl_.start_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.GetTraceForTestRequest.start_time)
}
inline ::google::protobuf::Timestamp* GetTraceForTestRequest::release_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.start_time_;
  _impl_.start_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* GetTraceForTestRequest::unsafe_arena_release_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.GetTraceForTestRequest.start_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.start_time_;
  _impl_.start_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* GetTraceForTestRequest::_internal_mutable_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.start_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.start_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.start_time_;
}
inline ::google::protobuf::Timestamp* GetTraceForTestRequest::mutable_start_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_start_time();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.GetTraceForTestRequest.start_time)
  return _msg;
}
inline void GetTraceForTestRequest::set_allocated_start_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.start_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.start_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.GetTraceForTestRequest.start_time)
}

// .google.protobuf.Timestamp end_time = 3 [json_name = "endTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool GetTraceForTestRequest::has_end_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.end_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& GetTraceForTestRequest::_internal_end_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.end_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& GetTraceForTestRequest::end_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.GetTraceForTestRequest.end_time)
  return _internal_end_time();
}
inline void GetTraceForTestRequest::unsafe_arena_set_allocated_end_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.end_time_);
  }
  _impl_.end_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.GetTraceForTestRequest.end_time)
}
inline ::google::protobuf::Timestamp* GetTraceForTestRequest::release_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.end_time_;
  _impl_.end_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* GetTraceForTestRequest::unsafe_arena_release_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.GetTraceForTestRequest.end_time)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.end_time_;
  _impl_.end_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* GetTraceForTestRequest::_internal_mutable_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.end_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.end_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.end_time_;
}
inline ::google::protobuf::Timestamp* GetTraceForTestRequest::mutable_end_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_end_time();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.GetTraceForTestRequest.end_time)
  return _msg;
}
inline void GetTraceForTestRequest::set_allocated_end_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.end_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.end_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.GetTraceForTestRequest.end_time)
}

// repeated string agent_ids = 4 [json_name = "agentIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int GetTraceForTestRequest::_internal_agent_ids_size() const {
  return _internal_agent_ids().size();
}
inline int GetTraceForTestRequest::agent_ids_size() const {
  return _internal_agent_ids_size();
}
inline void GetTraceForTestRequest::clear_agent_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_ids_.Clear();
}
inline std::string* GetTraceForTestRequest::add_agent_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_agent_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.synthetics.v202309.GetTraceForTestRequest.agent_ids)
  return _s;
}
inline const std::string& GetTraceForTestRequest::agent_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.GetTraceForTestRequest.agent_ids)
  return _internal_agent_ids().Get(index);
}
inline std::string* GetTraceForTestRequest::mutable_agent_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.GetTraceForTestRequest.agent_ids)
  return _internal_mutable_agent_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetTraceForTestRequest::set_agent_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_agent_ids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.GetTraceForTestRequest.agent_ids)
}
template <typename Arg_, typename... Args_>
inline void GetTraceForTestRequest::add_agent_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_agent_ids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.GetTraceForTestRequest.agent_ids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetTraceForTestRequest::agent_ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.GetTraceForTestRequest.agent_ids)
  return _internal_agent_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetTraceForTestRequest::mutable_agent_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.GetTraceForTestRequest.agent_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_agent_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetTraceForTestRequest::_internal_agent_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.agent_ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetTraceForTestRequest::_internal_mutable_agent_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.agent_ids_;
}

// repeated string target_ips = 5 [json_name = "targetIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int GetTraceForTestRequest::_internal_target_ips_size() const {
  return _internal_target_ips().size();
}
inline int GetTraceForTestRequest::target_ips_size() const {
  return _internal_target_ips_size();
}
inline void GetTraceForTestRequest::clear_target_ips() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_ips_.Clear();
}
inline std::string* GetTraceForTestRequest::add_target_ips() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_target_ips()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.synthetics.v202309.GetTraceForTestRequest.target_ips)
  return _s;
}
inline const std::string& GetTraceForTestRequest::target_ips(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.GetTraceForTestRequest.target_ips)
  return _internal_target_ips().Get(index);
}
inline std::string* GetTraceForTestRequest::mutable_target_ips(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.GetTraceForTestRequest.target_ips)
  return _internal_mutable_target_ips()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetTraceForTestRequest::set_target_ips(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_target_ips()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.GetTraceForTestRequest.target_ips)
}
template <typename Arg_, typename... Args_>
inline void GetTraceForTestRequest::add_target_ips(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_target_ips(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.GetTraceForTestRequest.target_ips)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetTraceForTestRequest::target_ips() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.GetTraceForTestRequest.target_ips)
  return _internal_target_ips();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetTraceForTestRequest::mutable_target_ips() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.GetTraceForTestRequest.target_ips)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_target_ips();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetTraceForTestRequest::_internal_target_ips() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_ips_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetTraceForTestRequest::_internal_mutable_target_ips() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.target_ips_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetTraceForTestResponse

// map<string, .kentik.synthetics.v202309.NetNode> nodes = 1 [json_name = "nodes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int GetTraceForTestResponse::_internal_nodes_size() const {
  return _internal_nodes().size();
}
inline int GetTraceForTestResponse::nodes_size() const {
  return _internal_nodes_size();
}
inline void GetTraceForTestResponse::clear_nodes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nodes_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::kentik::synthetics::v202309::NetNode>& GetTraceForTestResponse::_internal_nodes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nodes_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::kentik::synthetics::v202309::NetNode>& GetTraceForTestResponse::nodes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:kentik.synthetics.v202309.GetTraceForTestResponse.nodes)
  return _internal_nodes();
}
inline ::google::protobuf::Map<std::string, ::kentik::synthetics::v202309::NetNode>* GetTraceForTestResponse::_internal_mutable_nodes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.nodes_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::kentik::synthetics::v202309::NetNode>* GetTraceForTestResponse::mutable_nodes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:kentik.synthetics.v202309.GetTraceForTestResponse.nodes)
  return _internal_mutable_nodes();
}

// repeated .kentik.synthetics.v202309.Path paths = 2 [json_name = "paths", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int GetTraceForTestResponse::_internal_paths_size() const {
  return _internal_paths().size();
}
inline int GetTraceForTestResponse::paths_size() const {
  return _internal_paths_size();
}
inline void GetTraceForTestResponse::clear_paths() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.paths_.Clear();
}
inline ::kentik::synthetics::v202309::Path* GetTraceForTestResponse::mutable_paths(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.GetTraceForTestResponse.paths)
  return _internal_mutable_paths()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Path>* GetTraceForTestResponse::mutable_paths()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.GetTraceForTestResponse.paths)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_paths();
}
inline const ::kentik::synthetics::v202309::Path& GetTraceForTestResponse::paths(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.GetTraceForTestResponse.paths)
  return _internal_paths().Get(index);
}
inline ::kentik::synthetics::v202309::Path* GetTraceForTestResponse::add_paths() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::synthetics::v202309::Path* _add = _internal_mutable_paths()->Add();
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.GetTraceForTestResponse.paths)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Path>& GetTraceForTestResponse::paths() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.GetTraceForTestResponse.paths)
  return _internal_paths();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Path>&
GetTraceForTestResponse::_internal_paths() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.paths_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Path>*
GetTraceForTestResponse::_internal_mutable_paths() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.paths_;
}

// -------------------------------------------------------------------

// ListAgentsRequest

// -------------------------------------------------------------------

// ListAgentsResponse

// repeated .kentik.synthetics.v202309.Agent agents = 1 [json_name = "agents", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int ListAgentsResponse::_internal_agents_size() const {
  return _internal_agents().size();
}
inline int ListAgentsResponse::agents_size() const {
  return _internal_agents_size();
}
inline void ListAgentsResponse::clear_agents() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agents_.Clear();
}
inline ::kentik::synthetics::v202309::Agent* ListAgentsResponse::mutable_agents(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.ListAgentsResponse.agents)
  return _internal_mutable_agents()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Agent>* ListAgentsResponse::mutable_agents()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.ListAgentsResponse.agents)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_agents();
}
inline const ::kentik::synthetics::v202309::Agent& ListAgentsResponse::agents(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.ListAgentsResponse.agents)
  return _internal_agents().Get(index);
}
inline ::kentik::synthetics::v202309::Agent* ListAgentsResponse::add_agents() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::synthetics::v202309::Agent* _add = _internal_mutable_agents()->Add();
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.ListAgentsResponse.agents)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Agent>& ListAgentsResponse::agents() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.ListAgentsResponse.agents)
  return _internal_agents();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Agent>&
ListAgentsResponse::_internal_agents() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.agents_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Agent>*
ListAgentsResponse::_internal_mutable_agents() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.agents_;
}

// uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void ListAgentsResponse::clear_invalid_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_count_ = 0u;
}
inline ::uint32_t ListAgentsResponse::invalid_count() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.ListAgentsResponse.invalid_count)
  return _internal_invalid_count();
}
inline void ListAgentsResponse::set_invalid_count(::uint32_t value) {
  _internal_set_invalid_count(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.ListAgentsResponse.invalid_count)
}
inline ::uint32_t ListAgentsResponse::_internal_invalid_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.invalid_count_;
}
inline void ListAgentsResponse::_internal_set_invalid_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_count_ = value;
}

// -------------------------------------------------------------------

// GetAgentRequest

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void GetAgentRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& GetAgentRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.GetAgentRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetAgentRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.GetAgentRequest.id)
}
inline std::string* GetAgentRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.GetAgentRequest.id)
  return _s;
}
inline const std::string& GetAgentRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void GetAgentRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* GetAgentRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* GetAgentRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.GetAgentRequest.id)
  return _impl_.id_.Release();
}
inline void GetAgentRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.GetAgentRequest.id)
}

// -------------------------------------------------------------------

// GetAgentResponse

// .kentik.synthetics.v202309.Agent agent = 1 [json_name = "agent", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool GetAgentResponse::has_agent() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.agent_ != nullptr);
  return value;
}
inline void GetAgentResponse::clear_agent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.agent_ != nullptr) _impl_.agent_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::synthetics::v202309::Agent& GetAgentResponse::_internal_agent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::Agent* p = _impl_.agent_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::Agent&>(::kentik::synthetics::v202309::_Agent_default_instance_);
}
inline const ::kentik::synthetics::v202309::Agent& GetAgentResponse::agent() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.GetAgentResponse.agent)
  return _internal_agent();
}
inline void GetAgentResponse::unsafe_arena_set_allocated_agent(::kentik::synthetics::v202309::Agent* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.agent_);
  }
  _impl_.agent_ = reinterpret_cast<::kentik::synthetics::v202309::Agent*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.GetAgentResponse.agent)
}
inline ::kentik::synthetics::v202309::Agent* GetAgentResponse::release_agent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::Agent* released = _impl_.agent_;
  _impl_.agent_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::Agent* GetAgentResponse::unsafe_arena_release_agent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.GetAgentResponse.agent)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::Agent* temp = _impl_.agent_;
  _impl_.agent_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::Agent* GetAgentResponse::_internal_mutable_agent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.agent_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::Agent>(GetArena());
    _impl_.agent_ = reinterpret_cast<::kentik::synthetics::v202309::Agent*>(p);
  }
  return _impl_.agent_;
}
inline ::kentik::synthetics::v202309::Agent* GetAgentResponse::mutable_agent() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::synthetics::v202309::Agent* _msg = _internal_mutable_agent();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.GetAgentResponse.agent)
  return _msg;
}
inline void GetAgentResponse::set_allocated_agent(::kentik::synthetics::v202309::Agent* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.agent_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.agent_ = reinterpret_cast<::kentik::synthetics::v202309::Agent*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.GetAgentResponse.agent)
}

// -------------------------------------------------------------------

// UpdateAgentRequest

// .kentik.synthetics.v202309.Agent agent = 1 [json_name = "agent", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool UpdateAgentRequest::has_agent() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.agent_ != nullptr);
  return value;
}
inline void UpdateAgentRequest::clear_agent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.agent_ != nullptr) _impl_.agent_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::synthetics::v202309::Agent& UpdateAgentRequest::_internal_agent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::Agent* p = _impl_.agent_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::Agent&>(::kentik::synthetics::v202309::_Agent_default_instance_);
}
inline const ::kentik::synthetics::v202309::Agent& UpdateAgentRequest::agent() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.UpdateAgentRequest.agent)
  return _internal_agent();
}
inline void UpdateAgentRequest::unsafe_arena_set_allocated_agent(::kentik::synthetics::v202309::Agent* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.agent_);
  }
  _impl_.agent_ = reinterpret_cast<::kentik::synthetics::v202309::Agent*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.UpdateAgentRequest.agent)
}
inline ::kentik::synthetics::v202309::Agent* UpdateAgentRequest::release_agent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::Agent* released = _impl_.agent_;
  _impl_.agent_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::Agent* UpdateAgentRequest::unsafe_arena_release_agent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.UpdateAgentRequest.agent)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::Agent* temp = _impl_.agent_;
  _impl_.agent_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::Agent* UpdateAgentRequest::_internal_mutable_agent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.agent_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::Agent>(GetArena());
    _impl_.agent_ = reinterpret_cast<::kentik::synthetics::v202309::Agent*>(p);
  }
  return _impl_.agent_;
}
inline ::kentik::synthetics::v202309::Agent* UpdateAgentRequest::mutable_agent() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::synthetics::v202309::Agent* _msg = _internal_mutable_agent();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.UpdateAgentRequest.agent)
  return _msg;
}
inline void UpdateAgentRequest::set_allocated_agent(::kentik::synthetics::v202309::Agent* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.agent_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.agent_ = reinterpret_cast<::kentik::synthetics::v202309::Agent*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.UpdateAgentRequest.agent)
}

// -------------------------------------------------------------------

// UpdateAgentResponse

// .kentik.synthetics.v202309.Agent agent = 1 [json_name = "agent", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool UpdateAgentResponse::has_agent() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.agent_ != nullptr);
  return value;
}
inline void UpdateAgentResponse::clear_agent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.agent_ != nullptr) _impl_.agent_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::synthetics::v202309::Agent& UpdateAgentResponse::_internal_agent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::Agent* p = _impl_.agent_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::Agent&>(::kentik::synthetics::v202309::_Agent_default_instance_);
}
inline const ::kentik::synthetics::v202309::Agent& UpdateAgentResponse::agent() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.UpdateAgentResponse.agent)
  return _internal_agent();
}
inline void UpdateAgentResponse::unsafe_arena_set_allocated_agent(::kentik::synthetics::v202309::Agent* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.agent_);
  }
  _impl_.agent_ = reinterpret_cast<::kentik::synthetics::v202309::Agent*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.UpdateAgentResponse.agent)
}
inline ::kentik::synthetics::v202309::Agent* UpdateAgentResponse::release_agent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::Agent* released = _impl_.agent_;
  _impl_.agent_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::Agent* UpdateAgentResponse::unsafe_arena_release_agent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.UpdateAgentResponse.agent)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::Agent* temp = _impl_.agent_;
  _impl_.agent_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::Agent* UpdateAgentResponse::_internal_mutable_agent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.agent_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::Agent>(GetArena());
    _impl_.agent_ = reinterpret_cast<::kentik::synthetics::v202309::Agent*>(p);
  }
  return _impl_.agent_;
}
inline ::kentik::synthetics::v202309::Agent* UpdateAgentResponse::mutable_agent() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::synthetics::v202309::Agent* _msg = _internal_mutable_agent();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.UpdateAgentResponse.agent)
  return _msg;
}
inline void UpdateAgentResponse::set_allocated_agent(::kentik::synthetics::v202309::Agent* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.agent_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.agent_ = reinterpret_cast<::kentik::synthetics::v202309::Agent*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.UpdateAgentResponse.agent)
}

// -------------------------------------------------------------------

// DeleteAgentRequest

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeleteAgentRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& DeleteAgentRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DeleteAgentRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteAgentRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DeleteAgentRequest.id)
}
inline std::string* DeleteAgentRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.DeleteAgentRequest.id)
  return _s;
}
inline const std::string& DeleteAgentRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void DeleteAgentRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* DeleteAgentRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* DeleteAgentRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.DeleteAgentRequest.id)
  return _impl_.id_.Release();
}
inline void DeleteAgentRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.DeleteAgentRequest.id)
}

// -------------------------------------------------------------------

// DeleteAgentResponse

// -------------------------------------------------------------------

// ListTestsRequest

// -------------------------------------------------------------------

// ListTestsResponse

// repeated .kentik.synthetics.v202309.Test tests = 1 [json_name = "tests", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int ListTestsResponse::_internal_tests_size() const {
  return _internal_tests().size();
}
inline int ListTestsResponse::tests_size() const {
  return _internal_tests_size();
}
inline void ListTestsResponse::clear_tests() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tests_.Clear();
}
inline ::kentik::synthetics::v202309::Test* ListTestsResponse::mutable_tests(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.ListTestsResponse.tests)
  return _internal_mutable_tests()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Test>* ListTestsResponse::mutable_tests()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.ListTestsResponse.tests)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_tests();
}
inline const ::kentik::synthetics::v202309::Test& ListTestsResponse::tests(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.ListTestsResponse.tests)
  return _internal_tests().Get(index);
}
inline ::kentik::synthetics::v202309::Test* ListTestsResponse::add_tests() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::synthetics::v202309::Test* _add = _internal_mutable_tests()->Add();
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.ListTestsResponse.tests)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Test>& ListTestsResponse::tests() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.ListTestsResponse.tests)
  return _internal_tests();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Test>&
ListTestsResponse::_internal_tests() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tests_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::Test>*
ListTestsResponse::_internal_mutable_tests() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.tests_;
}

// uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void ListTestsResponse::clear_invalid_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_count_ = 0u;
}
inline ::uint32_t ListTestsResponse::invalid_count() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.ListTestsResponse.invalid_count)
  return _internal_invalid_count();
}
inline void ListTestsResponse::set_invalid_count(::uint32_t value) {
  _internal_set_invalid_count(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.ListTestsResponse.invalid_count)
}
inline ::uint32_t ListTestsResponse::_internal_invalid_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.invalid_count_;
}
inline void ListTestsResponse::_internal_set_invalid_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_count_ = value;
}

// -------------------------------------------------------------------

// CreateTestRequest

// .kentik.synthetics.v202309.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool CreateTestRequest::has_test() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.test_ != nullptr);
  return value;
}
inline void CreateTestRequest::clear_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.test_ != nullptr) _impl_.test_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::synthetics::v202309::Test& CreateTestRequest::_internal_test() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::Test* p = _impl_.test_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::Test&>(::kentik::synthetics::v202309::_Test_default_instance_);
}
inline const ::kentik::synthetics::v202309::Test& CreateTestRequest::test() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.CreateTestRequest.test)
  return _internal_test();
}
inline void CreateTestRequest::unsafe_arena_set_allocated_test(::kentik::synthetics::v202309::Test* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.test_);
  }
  _impl_.test_ = reinterpret_cast<::kentik::synthetics::v202309::Test*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.CreateTestRequest.test)
}
inline ::kentik::synthetics::v202309::Test* CreateTestRequest::release_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::Test* released = _impl_.test_;
  _impl_.test_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::Test* CreateTestRequest::unsafe_arena_release_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.CreateTestRequest.test)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::Test* temp = _impl_.test_;
  _impl_.test_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::Test* CreateTestRequest::_internal_mutable_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.test_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::Test>(GetArena());
    _impl_.test_ = reinterpret_cast<::kentik::synthetics::v202309::Test*>(p);
  }
  return _impl_.test_;
}
inline ::kentik::synthetics::v202309::Test* CreateTestRequest::mutable_test() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::synthetics::v202309::Test* _msg = _internal_mutable_test();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.CreateTestRequest.test)
  return _msg;
}
inline void CreateTestRequest::set_allocated_test(::kentik::synthetics::v202309::Test* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.test_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.test_ = reinterpret_cast<::kentik::synthetics::v202309::Test*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.CreateTestRequest.test)
}

// -------------------------------------------------------------------

// CreateTestResponse

// .kentik.synthetics.v202309.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool CreateTestResponse::has_test() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.test_ != nullptr);
  return value;
}
inline void CreateTestResponse::clear_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.test_ != nullptr) _impl_.test_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::synthetics::v202309::Test& CreateTestResponse::_internal_test() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::Test* p = _impl_.test_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::Test&>(::kentik::synthetics::v202309::_Test_default_instance_);
}
inline const ::kentik::synthetics::v202309::Test& CreateTestResponse::test() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.CreateTestResponse.test)
  return _internal_test();
}
inline void CreateTestResponse::unsafe_arena_set_allocated_test(::kentik::synthetics::v202309::Test* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.test_);
  }
  _impl_.test_ = reinterpret_cast<::kentik::synthetics::v202309::Test*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.CreateTestResponse.test)
}
inline ::kentik::synthetics::v202309::Test* CreateTestResponse::release_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::Test* released = _impl_.test_;
  _impl_.test_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::Test* CreateTestResponse::unsafe_arena_release_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.CreateTestResponse.test)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::Test* temp = _impl_.test_;
  _impl_.test_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::Test* CreateTestResponse::_internal_mutable_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.test_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::Test>(GetArena());
    _impl_.test_ = reinterpret_cast<::kentik::synthetics::v202309::Test*>(p);
  }
  return _impl_.test_;
}
inline ::kentik::synthetics::v202309::Test* CreateTestResponse::mutable_test() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::synthetics::v202309::Test* _msg = _internal_mutable_test();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.CreateTestResponse.test)
  return _msg;
}
inline void CreateTestResponse::set_allocated_test(::kentik::synthetics::v202309::Test* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.test_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.test_ = reinterpret_cast<::kentik::synthetics::v202309::Test*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.CreateTestResponse.test)
}

// -------------------------------------------------------------------

// GetTestRequest

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void GetTestRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& GetTestRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.GetTestRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTestRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.GetTestRequest.id)
}
inline std::string* GetTestRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.GetTestRequest.id)
  return _s;
}
inline const std::string& GetTestRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void GetTestRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* GetTestRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* GetTestRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.GetTestRequest.id)
  return _impl_.id_.Release();
}
inline void GetTestRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.GetTestRequest.id)
}

// -------------------------------------------------------------------

// GetTestResponse

// .kentik.synthetics.v202309.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool GetTestResponse::has_test() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.test_ != nullptr);
  return value;
}
inline void GetTestResponse::clear_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.test_ != nullptr) _impl_.test_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::synthetics::v202309::Test& GetTestResponse::_internal_test() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::Test* p = _impl_.test_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::Test&>(::kentik::synthetics::v202309::_Test_default_instance_);
}
inline const ::kentik::synthetics::v202309::Test& GetTestResponse::test() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.GetTestResponse.test)
  return _internal_test();
}
inline void GetTestResponse::unsafe_arena_set_allocated_test(::kentik::synthetics::v202309::Test* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.test_);
  }
  _impl_.test_ = reinterpret_cast<::kentik::synthetics::v202309::Test*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.GetTestResponse.test)
}
inline ::kentik::synthetics::v202309::Test* GetTestResponse::release_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::Test* released = _impl_.test_;
  _impl_.test_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::Test* GetTestResponse::unsafe_arena_release_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.GetTestResponse.test)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::Test* temp = _impl_.test_;
  _impl_.test_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::Test* GetTestResponse::_internal_mutable_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.test_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::Test>(GetArena());
    _impl_.test_ = reinterpret_cast<::kentik::synthetics::v202309::Test*>(p);
  }
  return _impl_.test_;
}
inline ::kentik::synthetics::v202309::Test* GetTestResponse::mutable_test() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::synthetics::v202309::Test* _msg = _internal_mutable_test();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.GetTestResponse.test)
  return _msg;
}
inline void GetTestResponse::set_allocated_test(::kentik::synthetics::v202309::Test* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.test_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.test_ = reinterpret_cast<::kentik::synthetics::v202309::Test*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.GetTestResponse.test)
}

// -------------------------------------------------------------------

// UpdateTestRequest

// .kentik.synthetics.v202309.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool UpdateTestRequest::has_test() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.test_ != nullptr);
  return value;
}
inline void UpdateTestRequest::clear_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.test_ != nullptr) _impl_.test_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::synthetics::v202309::Test& UpdateTestRequest::_internal_test() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::Test* p = _impl_.test_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::Test&>(::kentik::synthetics::v202309::_Test_default_instance_);
}
inline const ::kentik::synthetics::v202309::Test& UpdateTestRequest::test() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.UpdateTestRequest.test)
  return _internal_test();
}
inline void UpdateTestRequest::unsafe_arena_set_allocated_test(::kentik::synthetics::v202309::Test* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.test_);
  }
  _impl_.test_ = reinterpret_cast<::kentik::synthetics::v202309::Test*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.UpdateTestRequest.test)
}
inline ::kentik::synthetics::v202309::Test* UpdateTestRequest::release_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::Test* released = _impl_.test_;
  _impl_.test_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::Test* UpdateTestRequest::unsafe_arena_release_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.UpdateTestRequest.test)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::Test* temp = _impl_.test_;
  _impl_.test_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::Test* UpdateTestRequest::_internal_mutable_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.test_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::Test>(GetArena());
    _impl_.test_ = reinterpret_cast<::kentik::synthetics::v202309::Test*>(p);
  }
  return _impl_.test_;
}
inline ::kentik::synthetics::v202309::Test* UpdateTestRequest::mutable_test() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::synthetics::v202309::Test* _msg = _internal_mutable_test();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.UpdateTestRequest.test)
  return _msg;
}
inline void UpdateTestRequest::set_allocated_test(::kentik::synthetics::v202309::Test* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.test_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.test_ = reinterpret_cast<::kentik::synthetics::v202309::Test*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.UpdateTestRequest.test)
}

// -------------------------------------------------------------------

// UpdateTestResponse

// .kentik.synthetics.v202309.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool UpdateTestResponse::has_test() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.test_ != nullptr);
  return value;
}
inline void UpdateTestResponse::clear_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.test_ != nullptr) _impl_.test_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::synthetics::v202309::Test& UpdateTestResponse::_internal_test() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::Test* p = _impl_.test_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::Test&>(::kentik::synthetics::v202309::_Test_default_instance_);
}
inline const ::kentik::synthetics::v202309::Test& UpdateTestResponse::test() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.UpdateTestResponse.test)
  return _internal_test();
}
inline void UpdateTestResponse::unsafe_arena_set_allocated_test(::kentik::synthetics::v202309::Test* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.test_);
  }
  _impl_.test_ = reinterpret_cast<::kentik::synthetics::v202309::Test*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.UpdateTestResponse.test)
}
inline ::kentik::synthetics::v202309::Test* UpdateTestResponse::release_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::Test* released = _impl_.test_;
  _impl_.test_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::Test* UpdateTestResponse::unsafe_arena_release_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.UpdateTestResponse.test)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::Test* temp = _impl_.test_;
  _impl_.test_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::Test* UpdateTestResponse::_internal_mutable_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.test_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::Test>(GetArena());
    _impl_.test_ = reinterpret_cast<::kentik::synthetics::v202309::Test*>(p);
  }
  return _impl_.test_;
}
inline ::kentik::synthetics::v202309::Test* UpdateTestResponse::mutable_test() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::synthetics::v202309::Test* _msg = _internal_mutable_test();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.UpdateTestResponse.test)
  return _msg;
}
inline void UpdateTestResponse::set_allocated_test(::kentik::synthetics::v202309::Test* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.test_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.test_ = reinterpret_cast<::kentik::synthetics::v202309::Test*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.UpdateTestResponse.test)
}

// -------------------------------------------------------------------

// DeleteTestRequest

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeleteTestRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& DeleteTestRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DeleteTestRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteTestRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DeleteTestRequest.id)
}
inline std::string* DeleteTestRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.DeleteTestRequest.id)
  return _s;
}
inline const std::string& DeleteTestRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void DeleteTestRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* DeleteTestRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* DeleteTestRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.DeleteTestRequest.id)
  return _impl_.id_.Release();
}
inline void DeleteTestRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.DeleteTestRequest.id)
}

// -------------------------------------------------------------------

// DeleteTestResponse

// -------------------------------------------------------------------

// SetTestStatusRequest

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void SetTestStatusRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& SetTestStatusRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.SetTestStatusRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetTestStatusRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.SetTestStatusRequest.id)
}
inline std::string* SetTestStatusRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.SetTestStatusRequest.id)
  return _s;
}
inline const std::string& SetTestStatusRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void SetTestStatusRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* SetTestStatusRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* SetTestStatusRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.SetTestStatusRequest.id)
  return _impl_.id_.Release();
}
inline void SetTestStatusRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.SetTestStatusRequest.id)
}

// .kentik.synthetics.v202309.TestStatus status = 2 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void SetTestStatusRequest::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::kentik::synthetics::v202309::TestStatus SetTestStatusRequest::status() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.SetTestStatusRequest.status)
  return _internal_status();
}
inline void SetTestStatusRequest::set_status(::kentik::synthetics::v202309::TestStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.SetTestStatusRequest.status)
}
inline ::kentik::synthetics::v202309::TestStatus SetTestStatusRequest::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::synthetics::v202309::TestStatus>(_impl_.status_);
}
inline void SetTestStatusRequest::_internal_set_status(::kentik::synthetics::v202309::TestStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// SetTestStatusResponse

// -------------------------------------------------------------------

// AgentAlert

// string id = 1 [json_name = "id"];
inline void AgentAlert::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& AgentAlert::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.AgentAlert.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AgentAlert::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.AgentAlert.id)
}
inline std::string* AgentAlert::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.AgentAlert.id)
  return _s;
}
inline const std::string& AgentAlert::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void AgentAlert::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* AgentAlert::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* AgentAlert::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.AgentAlert.id)
  return _impl_.id_.Release();
}
inline void AgentAlert::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.AgentAlert.id)
}

// uint32 threshold_seconds = 2 [json_name = "thresholdSeconds"];
inline void AgentAlert::clear_threshold_seconds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.threshold_seconds_ = 0u;
}
inline ::uint32_t AgentAlert::threshold_seconds() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.AgentAlert.threshold_seconds)
  return _internal_threshold_seconds();
}
inline void AgentAlert::set_threshold_seconds(::uint32_t value) {
  _internal_set_threshold_seconds(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.AgentAlert.threshold_seconds)
}
inline ::uint32_t AgentAlert::_internal_threshold_seconds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.threshold_seconds_;
}
inline void AgentAlert::_internal_set_threshold_seconds(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.threshold_seconds_ = value;
}

// repeated string notification_channel_ids = 3 [json_name = "notificationChannelIds"];
inline int AgentAlert::_internal_notification_channel_ids_size() const {
  return _internal_notification_channel_ids().size();
}
inline int AgentAlert::notification_channel_ids_size() const {
  return _internal_notification_channel_ids_size();
}
inline void AgentAlert::clear_notification_channel_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notification_channel_ids_.Clear();
}
inline std::string* AgentAlert::add_notification_channel_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_notification_channel_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.synthetics.v202309.AgentAlert.notification_channel_ids)
  return _s;
}
inline const std::string& AgentAlert::notification_channel_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.AgentAlert.notification_channel_ids)
  return _internal_notification_channel_ids().Get(index);
}
inline std::string* AgentAlert::mutable_notification_channel_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.AgentAlert.notification_channel_ids)
  return _internal_mutable_notification_channel_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void AgentAlert::set_notification_channel_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_notification_channel_ids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.AgentAlert.notification_channel_ids)
}
template <typename Arg_, typename... Args_>
inline void AgentAlert::add_notification_channel_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_notification_channel_ids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.AgentAlert.notification_channel_ids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
AgentAlert::notification_channel_ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.AgentAlert.notification_channel_ids)
  return _internal_notification_channel_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
AgentAlert::mutable_notification_channel_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.AgentAlert.notification_channel_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_notification_channel_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
AgentAlert::_internal_notification_channel_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.notification_channel_ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
AgentAlert::_internal_mutable_notification_channel_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.notification_channel_ids_;
}

// string agent_id = 4 [json_name = "agentId"];
inline void AgentAlert::clear_agent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.ClearToEmpty();
}
inline const std::string& AgentAlert::agent_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.AgentAlert.agent_id)
  return _internal_agent_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AgentAlert::set_agent_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.AgentAlert.agent_id)
}
inline std::string* AgentAlert::mutable_agent_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_agent_id();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.AgentAlert.agent_id)
  return _s;
}
inline const std::string& AgentAlert::_internal_agent_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.agent_id_.Get();
}
inline void AgentAlert::_internal_set_agent_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.Set(value, GetArena());
}
inline std::string* AgentAlert::_internal_mutable_agent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.agent_id_.Mutable( GetArena());
}
inline std::string* AgentAlert::release_agent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.AgentAlert.agent_id)
  return _impl_.agent_id_.Release();
}
inline void AgentAlert::set_allocated_agent_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.agent_id_.IsDefault()) {
    _impl_.agent_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.AgentAlert.agent_id)
}

// string agent_name = 5 [json_name = "agentName"];
inline void AgentAlert::clear_agent_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_name_.ClearToEmpty();
}
inline const std::string& AgentAlert::agent_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.AgentAlert.agent_name)
  return _internal_agent_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AgentAlert::set_agent_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.AgentAlert.agent_name)
}
inline std::string* AgentAlert::mutable_agent_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_agent_name();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.AgentAlert.agent_name)
  return _s;
}
inline const std::string& AgentAlert::_internal_agent_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.agent_name_.Get();
}
inline void AgentAlert::_internal_set_agent_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_name_.Set(value, GetArena());
}
inline std::string* AgentAlert::_internal_mutable_agent_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.agent_name_.Mutable( GetArena());
}
inline std::string* AgentAlert::release_agent_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.AgentAlert.agent_name)
  return _impl_.agent_name_.Release();
}
inline void AgentAlert::set_allocated_agent_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.agent_name_.IsDefault()) {
    _impl_.agent_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.AgentAlert.agent_name)
}

// -------------------------------------------------------------------

// CreateAgentAlertRequest

// uint32 threshold_seconds = 1 [json_name = "thresholdSeconds"];
inline void CreateAgentAlertRequest::clear_threshold_seconds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.threshold_seconds_ = 0u;
}
inline ::uint32_t CreateAgentAlertRequest::threshold_seconds() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.CreateAgentAlertRequest.threshold_seconds)
  return _internal_threshold_seconds();
}
inline void CreateAgentAlertRequest::set_threshold_seconds(::uint32_t value) {
  _internal_set_threshold_seconds(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.CreateAgentAlertRequest.threshold_seconds)
}
inline ::uint32_t CreateAgentAlertRequest::_internal_threshold_seconds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.threshold_seconds_;
}
inline void CreateAgentAlertRequest::_internal_set_threshold_seconds(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.threshold_seconds_ = value;
}

// repeated string notification_channel_ids = 2 [json_name = "notificationChannelIds"];
inline int CreateAgentAlertRequest::_internal_notification_channel_ids_size() const {
  return _internal_notification_channel_ids().size();
}
inline int CreateAgentAlertRequest::notification_channel_ids_size() const {
  return _internal_notification_channel_ids_size();
}
inline void CreateAgentAlertRequest::clear_notification_channel_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notification_channel_ids_.Clear();
}
inline std::string* CreateAgentAlertRequest::add_notification_channel_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_notification_channel_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.synthetics.v202309.CreateAgentAlertRequest.notification_channel_ids)
  return _s;
}
inline const std::string& CreateAgentAlertRequest::notification_channel_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.CreateAgentAlertRequest.notification_channel_ids)
  return _internal_notification_channel_ids().Get(index);
}
inline std::string* CreateAgentAlertRequest::mutable_notification_channel_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.CreateAgentAlertRequest.notification_channel_ids)
  return _internal_mutable_notification_channel_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void CreateAgentAlertRequest::set_notification_channel_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_notification_channel_ids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.CreateAgentAlertRequest.notification_channel_ids)
}
template <typename Arg_, typename... Args_>
inline void CreateAgentAlertRequest::add_notification_channel_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_notification_channel_ids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.CreateAgentAlertRequest.notification_channel_ids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CreateAgentAlertRequest::notification_channel_ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.CreateAgentAlertRequest.notification_channel_ids)
  return _internal_notification_channel_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CreateAgentAlertRequest::mutable_notification_channel_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.CreateAgentAlertRequest.notification_channel_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_notification_channel_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CreateAgentAlertRequest::_internal_notification_channel_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.notification_channel_ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CreateAgentAlertRequest::_internal_mutable_notification_channel_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.notification_channel_ids_;
}

// string agent_id = 3 [json_name = "agentId"];
inline void CreateAgentAlertRequest::clear_agent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.ClearToEmpty();
}
inline const std::string& CreateAgentAlertRequest::agent_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.CreateAgentAlertRequest.agent_id)
  return _internal_agent_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateAgentAlertRequest::set_agent_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.CreateAgentAlertRequest.agent_id)
}
inline std::string* CreateAgentAlertRequest::mutable_agent_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_agent_id();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.CreateAgentAlertRequest.agent_id)
  return _s;
}
inline const std::string& CreateAgentAlertRequest::_internal_agent_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.agent_id_.Get();
}
inline void CreateAgentAlertRequest::_internal_set_agent_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.Set(value, GetArena());
}
inline std::string* CreateAgentAlertRequest::_internal_mutable_agent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.agent_id_.Mutable( GetArena());
}
inline std::string* CreateAgentAlertRequest::release_agent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.CreateAgentAlertRequest.agent_id)
  return _impl_.agent_id_.Release();
}
inline void CreateAgentAlertRequest::set_allocated_agent_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.agent_id_.IsDefault()) {
    _impl_.agent_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.CreateAgentAlertRequest.agent_id)
}

// -------------------------------------------------------------------

// CreateAgentAlertResponse

// .kentik.synthetics.v202309.AgentAlert agent_alert = 1 [json_name = "agentAlert"];
inline bool CreateAgentAlertResponse::has_agent_alert() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.agent_alert_ != nullptr);
  return value;
}
inline void CreateAgentAlertResponse::clear_agent_alert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.agent_alert_ != nullptr) _impl_.agent_alert_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::synthetics::v202309::AgentAlert& CreateAgentAlertResponse::_internal_agent_alert() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::AgentAlert* p = _impl_.agent_alert_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::AgentAlert&>(::kentik::synthetics::v202309::_AgentAlert_default_instance_);
}
inline const ::kentik::synthetics::v202309::AgentAlert& CreateAgentAlertResponse::agent_alert() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.CreateAgentAlertResponse.agent_alert)
  return _internal_agent_alert();
}
inline void CreateAgentAlertResponse::unsafe_arena_set_allocated_agent_alert(::kentik::synthetics::v202309::AgentAlert* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.agent_alert_);
  }
  _impl_.agent_alert_ = reinterpret_cast<::kentik::synthetics::v202309::AgentAlert*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.CreateAgentAlertResponse.agent_alert)
}
inline ::kentik::synthetics::v202309::AgentAlert* CreateAgentAlertResponse::release_agent_alert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::AgentAlert* released = _impl_.agent_alert_;
  _impl_.agent_alert_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::AgentAlert* CreateAgentAlertResponse::unsafe_arena_release_agent_alert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.CreateAgentAlertResponse.agent_alert)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::AgentAlert* temp = _impl_.agent_alert_;
  _impl_.agent_alert_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::AgentAlert* CreateAgentAlertResponse::_internal_mutable_agent_alert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.agent_alert_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::AgentAlert>(GetArena());
    _impl_.agent_alert_ = reinterpret_cast<::kentik::synthetics::v202309::AgentAlert*>(p);
  }
  return _impl_.agent_alert_;
}
inline ::kentik::synthetics::v202309::AgentAlert* CreateAgentAlertResponse::mutable_agent_alert() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::synthetics::v202309::AgentAlert* _msg = _internal_mutable_agent_alert();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.CreateAgentAlertResponse.agent_alert)
  return _msg;
}
inline void CreateAgentAlertResponse::set_allocated_agent_alert(::kentik::synthetics::v202309::AgentAlert* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.agent_alert_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.agent_alert_ = reinterpret_cast<::kentik::synthetics::v202309::AgentAlert*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.CreateAgentAlertResponse.agent_alert)
}

// -------------------------------------------------------------------

// UpdateAgentAlertRequest

// string id = 1 [json_name = "id"];
inline void UpdateAgentAlertRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& UpdateAgentAlertRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.UpdateAgentAlertRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateAgentAlertRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.UpdateAgentAlertRequest.id)
}
inline std::string* UpdateAgentAlertRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.UpdateAgentAlertRequest.id)
  return _s;
}
inline const std::string& UpdateAgentAlertRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void UpdateAgentAlertRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* UpdateAgentAlertRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* UpdateAgentAlertRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.UpdateAgentAlertRequest.id)
  return _impl_.id_.Release();
}
inline void UpdateAgentAlertRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.UpdateAgentAlertRequest.id)
}

// uint32 threshold_seconds = 2 [json_name = "thresholdSeconds"];
inline void UpdateAgentAlertRequest::clear_threshold_seconds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.threshold_seconds_ = 0u;
}
inline ::uint32_t UpdateAgentAlertRequest::threshold_seconds() const {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.UpdateAgentAlertRequest.threshold_seconds)
  return _internal_threshold_seconds();
}
inline void UpdateAgentAlertRequest::set_threshold_seconds(::uint32_t value) {
  _internal_set_threshold_seconds(value);
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.UpdateAgentAlertRequest.threshold_seconds)
}
inline ::uint32_t UpdateAgentAlertRequest::_internal_threshold_seconds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.threshold_seconds_;
}
inline void UpdateAgentAlertRequest::_internal_set_threshold_seconds(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.threshold_seconds_ = value;
}

// repeated string notification_channel_ids = 3 [json_name = "notificationChannelIds"];
inline int UpdateAgentAlertRequest::_internal_notification_channel_ids_size() const {
  return _internal_notification_channel_ids().size();
}
inline int UpdateAgentAlertRequest::notification_channel_ids_size() const {
  return _internal_notification_channel_ids_size();
}
inline void UpdateAgentAlertRequest::clear_notification_channel_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.notification_channel_ids_.Clear();
}
inline std::string* UpdateAgentAlertRequest::add_notification_channel_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_notification_channel_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.synthetics.v202309.UpdateAgentAlertRequest.notification_channel_ids)
  return _s;
}
inline const std::string& UpdateAgentAlertRequest::notification_channel_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.UpdateAgentAlertRequest.notification_channel_ids)
  return _internal_notification_channel_ids().Get(index);
}
inline std::string* UpdateAgentAlertRequest::mutable_notification_channel_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.UpdateAgentAlertRequest.notification_channel_ids)
  return _internal_mutable_notification_channel_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void UpdateAgentAlertRequest::set_notification_channel_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_notification_channel_ids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.UpdateAgentAlertRequest.notification_channel_ids)
}
template <typename Arg_, typename... Args_>
inline void UpdateAgentAlertRequest::add_notification_channel_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_notification_channel_ids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.UpdateAgentAlertRequest.notification_channel_ids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
UpdateAgentAlertRequest::notification_channel_ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.UpdateAgentAlertRequest.notification_channel_ids)
  return _internal_notification_channel_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
UpdateAgentAlertRequest::mutable_notification_channel_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.UpdateAgentAlertRequest.notification_channel_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_notification_channel_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
UpdateAgentAlertRequest::_internal_notification_channel_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.notification_channel_ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
UpdateAgentAlertRequest::_internal_mutable_notification_channel_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.notification_channel_ids_;
}

// -------------------------------------------------------------------

// UpdateAgentAlertResponse

// .kentik.synthetics.v202309.AgentAlert agent_alert = 1 [json_name = "agentAlert"];
inline bool UpdateAgentAlertResponse::has_agent_alert() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.agent_alert_ != nullptr);
  return value;
}
inline void UpdateAgentAlertResponse::clear_agent_alert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.agent_alert_ != nullptr) _impl_.agent_alert_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::synthetics::v202309::AgentAlert& UpdateAgentAlertResponse::_internal_agent_alert() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::AgentAlert* p = _impl_.agent_alert_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::AgentAlert&>(::kentik::synthetics::v202309::_AgentAlert_default_instance_);
}
inline const ::kentik::synthetics::v202309::AgentAlert& UpdateAgentAlertResponse::agent_alert() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.UpdateAgentAlertResponse.agent_alert)
  return _internal_agent_alert();
}
inline void UpdateAgentAlertResponse::unsafe_arena_set_allocated_agent_alert(::kentik::synthetics::v202309::AgentAlert* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.agent_alert_);
  }
  _impl_.agent_alert_ = reinterpret_cast<::kentik::synthetics::v202309::AgentAlert*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.UpdateAgentAlertResponse.agent_alert)
}
inline ::kentik::synthetics::v202309::AgentAlert* UpdateAgentAlertResponse::release_agent_alert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::AgentAlert* released = _impl_.agent_alert_;
  _impl_.agent_alert_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::AgentAlert* UpdateAgentAlertResponse::unsafe_arena_release_agent_alert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.UpdateAgentAlertResponse.agent_alert)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::AgentAlert* temp = _impl_.agent_alert_;
  _impl_.agent_alert_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::AgentAlert* UpdateAgentAlertResponse::_internal_mutable_agent_alert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.agent_alert_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::AgentAlert>(GetArena());
    _impl_.agent_alert_ = reinterpret_cast<::kentik::synthetics::v202309::AgentAlert*>(p);
  }
  return _impl_.agent_alert_;
}
inline ::kentik::synthetics::v202309::AgentAlert* UpdateAgentAlertResponse::mutable_agent_alert() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::synthetics::v202309::AgentAlert* _msg = _internal_mutable_agent_alert();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.UpdateAgentAlertResponse.agent_alert)
  return _msg;
}
inline void UpdateAgentAlertResponse::set_allocated_agent_alert(::kentik::synthetics::v202309::AgentAlert* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.agent_alert_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.agent_alert_ = reinterpret_cast<::kentik::synthetics::v202309::AgentAlert*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.UpdateAgentAlertResponse.agent_alert)
}

// -------------------------------------------------------------------

// GetAgentAlertRequest

// string id = 1 [json_name = "id"];
inline void GetAgentAlertRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& GetAgentAlertRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.GetAgentAlertRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetAgentAlertRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.GetAgentAlertRequest.id)
}
inline std::string* GetAgentAlertRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.GetAgentAlertRequest.id)
  return _s;
}
inline const std::string& GetAgentAlertRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void GetAgentAlertRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* GetAgentAlertRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* GetAgentAlertRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.GetAgentAlertRequest.id)
  return _impl_.id_.Release();
}
inline void GetAgentAlertRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.GetAgentAlertRequest.id)
}

// -------------------------------------------------------------------

// GetAgentAlertResponse

// .kentik.synthetics.v202309.AgentAlert agent_alert = 1 [json_name = "agentAlert"];
inline bool GetAgentAlertResponse::has_agent_alert() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.agent_alert_ != nullptr);
  return value;
}
inline void GetAgentAlertResponse::clear_agent_alert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.agent_alert_ != nullptr) _impl_.agent_alert_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::synthetics::v202309::AgentAlert& GetAgentAlertResponse::_internal_agent_alert() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::synthetics::v202309::AgentAlert* p = _impl_.agent_alert_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::synthetics::v202309::AgentAlert&>(::kentik::synthetics::v202309::_AgentAlert_default_instance_);
}
inline const ::kentik::synthetics::v202309::AgentAlert& GetAgentAlertResponse::agent_alert() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.GetAgentAlertResponse.agent_alert)
  return _internal_agent_alert();
}
inline void GetAgentAlertResponse::unsafe_arena_set_allocated_agent_alert(::kentik::synthetics::v202309::AgentAlert* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.agent_alert_);
  }
  _impl_.agent_alert_ = reinterpret_cast<::kentik::synthetics::v202309::AgentAlert*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.synthetics.v202309.GetAgentAlertResponse.agent_alert)
}
inline ::kentik::synthetics::v202309::AgentAlert* GetAgentAlertResponse::release_agent_alert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::AgentAlert* released = _impl_.agent_alert_;
  _impl_.agent_alert_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::synthetics::v202309::AgentAlert* GetAgentAlertResponse::unsafe_arena_release_agent_alert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.GetAgentAlertResponse.agent_alert)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::synthetics::v202309::AgentAlert* temp = _impl_.agent_alert_;
  _impl_.agent_alert_ = nullptr;
  return temp;
}
inline ::kentik::synthetics::v202309::AgentAlert* GetAgentAlertResponse::_internal_mutable_agent_alert() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.agent_alert_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::synthetics::v202309::AgentAlert>(GetArena());
    _impl_.agent_alert_ = reinterpret_cast<::kentik::synthetics::v202309::AgentAlert*>(p);
  }
  return _impl_.agent_alert_;
}
inline ::kentik::synthetics::v202309::AgentAlert* GetAgentAlertResponse::mutable_agent_alert() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::synthetics::v202309::AgentAlert* _msg = _internal_mutable_agent_alert();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.GetAgentAlertResponse.agent_alert)
  return _msg;
}
inline void GetAgentAlertResponse::set_allocated_agent_alert(::kentik::synthetics::v202309::AgentAlert* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.agent_alert_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.agent_alert_ = reinterpret_cast<::kentik::synthetics::v202309::AgentAlert*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.GetAgentAlertResponse.agent_alert)
}

// -------------------------------------------------------------------

// ListAgentAlertsRequest

// repeated string agent_ids = 1 [json_name = "agentIds"];
inline int ListAgentAlertsRequest::_internal_agent_ids_size() const {
  return _internal_agent_ids().size();
}
inline int ListAgentAlertsRequest::agent_ids_size() const {
  return _internal_agent_ids_size();
}
inline void ListAgentAlertsRequest::clear_agent_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_ids_.Clear();
}
inline std::string* ListAgentAlertsRequest::add_agent_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_agent_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.synthetics.v202309.ListAgentAlertsRequest.agent_ids)
  return _s;
}
inline const std::string& ListAgentAlertsRequest::agent_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.ListAgentAlertsRequest.agent_ids)
  return _internal_agent_ids().Get(index);
}
inline std::string* ListAgentAlertsRequest::mutable_agent_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.ListAgentAlertsRequest.agent_ids)
  return _internal_mutable_agent_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ListAgentAlertsRequest::set_agent_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_agent_ids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.ListAgentAlertsRequest.agent_ids)
}
template <typename Arg_, typename... Args_>
inline void ListAgentAlertsRequest::add_agent_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_agent_ids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.ListAgentAlertsRequest.agent_ids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListAgentAlertsRequest::agent_ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.ListAgentAlertsRequest.agent_ids)
  return _internal_agent_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListAgentAlertsRequest::mutable_agent_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.ListAgentAlertsRequest.agent_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_agent_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListAgentAlertsRequest::_internal_agent_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.agent_ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListAgentAlertsRequest::_internal_mutable_agent_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.agent_ids_;
}

// -------------------------------------------------------------------

// ListAgentAlertsResponse

// repeated .kentik.synthetics.v202309.AgentAlert agent_alerts = 1 [json_name = "agentAlerts"];
inline int ListAgentAlertsResponse::_internal_agent_alerts_size() const {
  return _internal_agent_alerts().size();
}
inline int ListAgentAlertsResponse::agent_alerts_size() const {
  return _internal_agent_alerts_size();
}
inline void ListAgentAlertsResponse::clear_agent_alerts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_alerts_.Clear();
}
inline ::kentik::synthetics::v202309::AgentAlert* ListAgentAlertsResponse::mutable_agent_alerts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.ListAgentAlertsResponse.agent_alerts)
  return _internal_mutable_agent_alerts()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentAlert>* ListAgentAlertsResponse::mutable_agent_alerts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.synthetics.v202309.ListAgentAlertsResponse.agent_alerts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_agent_alerts();
}
inline const ::kentik::synthetics::v202309::AgentAlert& ListAgentAlertsResponse::agent_alerts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.ListAgentAlertsResponse.agent_alerts)
  return _internal_agent_alerts().Get(index);
}
inline ::kentik::synthetics::v202309::AgentAlert* ListAgentAlertsResponse::add_agent_alerts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::synthetics::v202309::AgentAlert* _add = _internal_mutable_agent_alerts()->Add();
  // @@protoc_insertion_point(field_add:kentik.synthetics.v202309.ListAgentAlertsResponse.agent_alerts)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentAlert>& ListAgentAlertsResponse::agent_alerts() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.synthetics.v202309.ListAgentAlertsResponse.agent_alerts)
  return _internal_agent_alerts();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentAlert>&
ListAgentAlertsResponse::_internal_agent_alerts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.agent_alerts_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::synthetics::v202309::AgentAlert>*
ListAgentAlertsResponse::_internal_mutable_agent_alerts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.agent_alerts_;
}

// -------------------------------------------------------------------

// DeleteAgentAlertRequest

// string id = 1 [json_name = "id"];
inline void DeleteAgentAlertRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& DeleteAgentAlertRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.synthetics.v202309.DeleteAgentAlertRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteAgentAlertRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.synthetics.v202309.DeleteAgentAlertRequest.id)
}
inline std::string* DeleteAgentAlertRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.synthetics.v202309.DeleteAgentAlertRequest.id)
  return _s;
}
inline const std::string& DeleteAgentAlertRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void DeleteAgentAlertRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* DeleteAgentAlertRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* DeleteAgentAlertRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.synthetics.v202309.DeleteAgentAlertRequest.id)
  return _impl_.id_.Release();
}
inline void DeleteAgentAlertRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202309.DeleteAgentAlertRequest.id)
}

// -------------------------------------------------------------------

// DeleteAgentAlertResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v202309
}  // namespace synthetics
}  // namespace kentik


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::kentik::synthetics::v202309::ImplementType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::synthetics::v202309::ImplementType>() {
  return ::kentik::synthetics::v202309::ImplementType_descriptor();
}
template <>
struct is_proto_enum<::kentik::synthetics::v202309::IPFamily> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::synthetics::v202309::IPFamily>() {
  return ::kentik::synthetics::v202309::IPFamily_descriptor();
}
template <>
struct is_proto_enum<::kentik::synthetics::v202309::TestStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::synthetics::v202309::TestStatus>() {
  return ::kentik::synthetics::v202309::TestStatus_descriptor();
}
template <>
struct is_proto_enum<::kentik::synthetics::v202309::AgentStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::synthetics::v202309::AgentStatus>() {
  return ::kentik::synthetics::v202309::AgentStatus_descriptor();
}
template <>
struct is_proto_enum<::kentik::synthetics::v202309::DNSRecord> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::synthetics::v202309::DNSRecord>() {
  return ::kentik::synthetics::v202309::DNSRecord_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kentik_2fsynthetics_2fv202309_2fsynthetics_2eproto_2epb_2eh
