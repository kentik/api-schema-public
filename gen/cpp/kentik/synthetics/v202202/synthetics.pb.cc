// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/synthetics/v202202/synthetics.proto
// Protobuf C++ Version: 5.29.3

#include "kentik/synthetics/v202202/synthetics.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace kentik {
namespace synthetics {
namespace v202202 {
              template <typename>
PROTOBUF_CONSTEXPR UrlTest_HeadersEntry_DoNotUse::UrlTest_HeadersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : UrlTest_HeadersEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : UrlTest_HeadersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct UrlTest_HeadersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UrlTest_HeadersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UrlTest_HeadersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    UrlTest_HeadersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UrlTest_HeadersEntry_DoNotUseDefaultTypeInternal _UrlTest_HeadersEntry_DoNotUse_default_instance_;

inline constexpr TraceHop::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : node_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        latency_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TraceHop::TraceHop(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TraceHopDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TraceHopDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TraceHopDefaultTypeInternal() {}
  union {
    TraceHop _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TraceHopDefaultTypeInternal _TraceHop_default_instance_;

inline constexpr TestTraceSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : protocol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        count_{0u},
        port_{0u},
        timeout_{0u},
        limit_{0u},
        delay_{0},
        dscp_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestTraceSettings::TestTraceSettings(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestTraceSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestTraceSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestTraceSettingsDefaultTypeInternal() {}
  union {
    TestTraceSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestTraceSettingsDefaultTypeInternal _TestTraceSettings_default_instance_;

inline constexpr TestPingSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : protocol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        count_{0u},
        port_{0u},
        timeout_{0u},
        delay_{0},
        dscp_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestPingSettings::TestPingSettings(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestPingSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestPingSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestPingSettingsDefaultTypeInternal() {}
  union {
    TestPingSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestPingSettingsDefaultTypeInternal _TestPingSettings_default_instance_;

inline constexpr Stats::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : average_{0},
        min_{0},
        max_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Stats::Stats(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatsDefaultTypeInternal() {}
  union {
    Stats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatsDefaultTypeInternal _Stats_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR SetTestStatusResponse::SetTestStatusResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SetTestStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetTestStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetTestStatusResponseDefaultTypeInternal() {}
  union {
    SetTestStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetTestStatusResponseDefaultTypeInternal _SetTestStatusResponse_default_instance_;

inline constexpr SetTestStatusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{static_cast< ::kentik::synthetics::v202202::TestStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SetTestStatusRequest::SetTestStatusRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SetTestStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetTestStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetTestStatusRequestDefaultTypeInternal() {}
  union {
    SetTestStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetTestStatusRequestDefaultTypeInternal _SetTestStatusRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR PageLoadTest_HeadersEntry_DoNotUse::PageLoadTest_HeadersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : PageLoadTest_HeadersEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : PageLoadTest_HeadersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct PageLoadTest_HeadersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PageLoadTest_HeadersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PageLoadTest_HeadersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    PageLoadTest_HeadersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PageLoadTest_HeadersEntry_DoNotUseDefaultTypeInternal _PageLoadTest_HeadersEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR PageLoadTest_CssSelectorsEntry_DoNotUse::PageLoadTest_CssSelectorsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : PageLoadTest_CssSelectorsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : PageLoadTest_CssSelectorsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct PageLoadTest_CssSelectorsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PageLoadTest_CssSelectorsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PageLoadTest_CssSelectorsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    PageLoadTest_CssSelectorsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PageLoadTest_CssSelectorsEntry_DoNotUseDefaultTypeInternal _PageLoadTest_CssSelectorsEntry_DoNotUse_default_instance_;

inline constexpr PacketLossData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : health_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        current_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PacketLossData::PacketLossData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PacketLossDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PacketLossDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PacketLossDataDefaultTypeInternal() {}
  union {
    PacketLossData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PacketLossDataDefaultTypeInternal _PacketLossData_default_instance_;

inline constexpr NetworkMeshTest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : use_local_ip_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NetworkMeshTest::NetworkMeshTest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NetworkMeshTestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkMeshTestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkMeshTestDefaultTypeInternal() {}
  union {
    NetworkMeshTest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkMeshTestDefaultTypeInternal _NetworkMeshTest_default_instance_;

inline constexpr MetricData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : health_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        current_{0u},
        rolling_avg_{0u},
        rolling_stddev_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MetricData::MetricData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MetricDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetricDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetricDataDefaultTypeInternal() {}
  union {
    MetricData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetricDataDefaultTypeInternal _MetricData_default_instance_;

inline constexpr Location::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : country_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        region_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        city_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        latitude_{0},
        longitude_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Location::Location(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocationDefaultTypeInternal() {}
  union {
    Location _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocationDefaultTypeInternal _Location_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ListTestsRequest::ListTestsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ListTestsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListTestsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListTestsRequestDefaultTypeInternal() {}
  union {
    ListTestsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListTestsRequestDefaultTypeInternal _ListTestsRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ListAgentsRequest::ListAgentsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ListAgentsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListAgentsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListAgentsRequestDefaultTypeInternal() {}
  union {
    ListAgentsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListAgentsRequestDefaultTypeInternal _ListAgentsRequest_default_instance_;

inline constexpr IpTest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : targets_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR IpTest::IpTest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct IpTestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IpTestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IpTestDefaultTypeInternal() {}
  union {
    IpTest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IpTestDefaultTypeInternal _IpTest_default_instance_;

inline constexpr HostnameTest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : target_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HostnameTest::HostnameTest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HostnameTestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HostnameTestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HostnameTestDefaultTypeInternal() {}
  union {
    HostnameTest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HostnameTestDefaultTypeInternal _HostnameTest_default_instance_;

inline constexpr HTTPResponseData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{0u},
        size_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HTTPResponseData::HTTPResponseData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HTTPResponseDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HTTPResponseDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HTTPResponseDataDefaultTypeInternal() {}
  union {
    HTTPResponseData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HTTPResponseDataDefaultTypeInternal _HTTPResponseData_default_instance_;

inline constexpr GetTestRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetTestRequest::GetTestRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTestRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTestRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTestRequestDefaultTypeInternal() {}
  union {
    GetTestRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTestRequestDefaultTypeInternal _GetTestRequest_default_instance_;

inline constexpr GetAgentRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetAgentRequest::GetAgentRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetAgentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAgentRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAgentRequestDefaultTypeInternal() {}
  union {
    GetAgentRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAgentRequestDefaultTypeInternal _GetAgentRequest_default_instance_;

inline constexpr FlowTest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : target_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        inet_direction_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        direction_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_refresh_interval_millis_{0u},
        max_providers_{0u},
        max_ip_targets_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FlowTest::FlowTest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FlowTestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FlowTestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FlowTestDefaultTypeInternal() {}
  union {
    FlowTest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FlowTestDefaultTypeInternal _FlowTest_default_instance_;

inline constexpr DnsTest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : servers_{},
        target_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timeout_{0u},
        record_type_{static_cast< ::kentik::synthetics::v202202::DNSRecord >(0)},
        port_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DnsTest::DnsTest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DnsTestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DnsTestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DnsTestDefaultTypeInternal() {}
  union {
    DnsTest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DnsTestDefaultTypeInternal _DnsTest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR DeleteTestResponse::DeleteTestResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct DeleteTestResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteTestResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteTestResponseDefaultTypeInternal() {}
  union {
    DeleteTestResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteTestResponseDefaultTypeInternal _DeleteTestResponse_default_instance_;

inline constexpr DeleteTestRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteTestRequest::DeleteTestRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeleteTestRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteTestRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteTestRequestDefaultTypeInternal() {}
  union {
    DeleteTestRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteTestRequestDefaultTypeInternal _DeleteTestRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR DeleteAgentResponse::DeleteAgentResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct DeleteAgentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteAgentResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteAgentResponseDefaultTypeInternal() {}
  union {
    DeleteAgentResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteAgentResponseDefaultTypeInternal _DeleteAgentResponse_default_instance_;

inline constexpr DeleteAgentRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteAgentRequest::DeleteAgentRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeleteAgentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteAgentRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteAgentRequestDefaultTypeInternal() {}
  union {
    DeleteAgentRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteAgentRequestDefaultTypeInternal _DeleteAgentRequest_default_instance_;

inline constexpr DNSResponseData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DNSResponseData::DNSResponseData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DNSResponseDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DNSResponseDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DNSResponseDataDefaultTypeInternal() {}
  union {
    DNSResponseData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DNSResponseDataDefaultTypeInternal _DNSResponseData_default_instance_;

inline constexpr AgentTest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : target_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        use_local_ip_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AgentTest::AgentTest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AgentTestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgentTestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgentTestDefaultTypeInternal() {}
  union {
    AgentTest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgentTestDefaultTypeInternal _AgentTest_default_instance_;

inline constexpr AgentMetadata_IpValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AgentMetadata_IpValue::AgentMetadata_IpValue(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AgentMetadata_IpValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgentMetadata_IpValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgentMetadata_IpValueDefaultTypeInternal() {}
  union {
    AgentMetadata_IpValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgentMetadata_IpValueDefaultTypeInternal _AgentMetadata_IpValue_default_instance_;

inline constexpr ActivationSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : grace_period_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_unit_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_window_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        times_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ActivationSettings::ActivationSettings(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ActivationSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActivationSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActivationSettingsDefaultTypeInternal() {}
  union {
    ActivationSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActivationSettingsDefaultTypeInternal _ActivationSettings_default_instance_;

inline constexpr UrlTest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : headers_{},
        target_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        method_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        body_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timeout_{0u},
        ignore_tls_errors_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UrlTest::UrlTest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UrlTestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UrlTestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UrlTestDefaultTypeInternal() {}
  union {
    UrlTest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UrlTestDefaultTypeInternal _UrlTest_default_instance_;

inline constexpr PingResults::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        target_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dst_ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        packet_loss_{nullptr},
        latency_{nullptr},
        jitter_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PingResults::PingResults(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PingResultsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PingResultsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PingResultsDefaultTypeInternal() {}
  union {
    PingResults _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PingResultsDefaultTypeInternal _PingResults_default_instance_;

inline constexpr PathTrace::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : as_path_{},
        _as_path_cached_byte_size_{0},
        hops_{},
        is_complete_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PathTrace::PathTrace(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PathTraceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PathTraceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PathTraceDefaultTypeInternal() {}
  union {
    PathTrace _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PathTraceDefaultTypeInternal _PathTrace_default_instance_;

inline constexpr PageLoadTest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : headers_{},
        css_selectors_{},
        target_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timeout_{0u},
        ignore_tls_errors_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PageLoadTest::PageLoadTest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PageLoadTestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PageLoadTestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PageLoadTestDefaultTypeInternal() {}
  union {
    PageLoadTest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PageLoadTestDefaultTypeInternal _PageLoadTest_default_instance_;

inline constexpr NetNode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        as_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dns_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        site_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        location_{nullptr},
        asn_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR NetNode::NetNode(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NetNodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetNodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetNodeDefaultTypeInternal() {}
  union {
    NetNode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetNodeDefaultTypeInternal _NetNode_default_instance_;

inline constexpr HealthSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        http_valid_codes_{},
        _http_valid_codes_cached_byte_size_{0},
        dns_valid_codes_{},
        _dns_valid_codes_cached_byte_size_{0},
        dns_valid_ips_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        activation_{nullptr},
        latency_critical_{0},
        latency_warning_{0},
        packet_loss_critical_{0},
        packet_loss_warning_{0},
        jitter_critical_{0},
        jitter_warning_{0},
        http_latency_critical_{0},
        http_latency_warning_{0},
        latency_critical_stddev_{0},
        latency_warning_stddev_{0},
        jitter_critical_stddev_{0},
        jitter_warning_stddev_{0},
        http_latency_critical_stddev_{0},
        http_latency_warning_stddev_{0},
        unhealthy_subtest_threshold_{0u},
        cert_expiry_warning_{0u},
        cert_expiry_critical_{0u},
        dns_latency_critical_{0},
        dns_latency_warning_{0},
        dns_latency_critical_stddev_{0},
        dns_latency_warning_stddev_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HealthSettings::HealthSettings(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HealthSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HealthSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HealthSettingsDefaultTypeInternal() {}
  union {
    HealthSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HealthSettingsDefaultTypeInternal _HealthSettings_default_instance_;

inline constexpr HTTPResults::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        target_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dst_ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        latency_{nullptr},
        response_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR HTTPResults::HTTPResults(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HTTPResultsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HTTPResultsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HTTPResultsDefaultTypeInternal() {}
  union {
    HTTPResults _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HTTPResultsDefaultTypeInternal _HTTPResults_default_instance_;

inline constexpr GetTraceForTestRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        agent_ids_{},
        target_ips_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        start_time_{nullptr},
        end_time_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetTraceForTestRequest::GetTraceForTestRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTraceForTestRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTraceForTestRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTraceForTestRequestDefaultTypeInternal() {}
  union {
    GetTraceForTestRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTraceForTestRequestDefaultTypeInternal _GetTraceForTestRequest_default_instance_;

inline constexpr GetResultsForTestsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ids_{},
        agent_ids_{},
        targets_{},
        start_time_{nullptr},
        end_time_{nullptr},
        aggregate_{false} {}

template <typename>
PROTOBUF_CONSTEXPR GetResultsForTestsRequest::GetResultsForTestsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetResultsForTestsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResultsForTestsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResultsForTestsRequestDefaultTypeInternal() {}
  union {
    GetResultsForTestsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResultsForTestsRequestDefaultTypeInternal _GetResultsForTestsRequest_default_instance_;

inline constexpr DNSResults::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        target_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        server_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        latency_{nullptr},
        response_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DNSResults::DNSResults(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DNSResultsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DNSResultsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DNSResultsDefaultTypeInternal() {}
  union {
    DNSResults _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DNSResultsDefaultTypeInternal _DNSResults_default_instance_;

inline constexpr AgentMetadata::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : private_ipv4_addresses_{},
        public_ipv4_addresses_{},
        private_ipv6_addresses_{},
        public_ipv6_addresses_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AgentMetadata::AgentMetadata(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AgentMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgentMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgentMetadataDefaultTypeInternal() {}
  union {
    AgentMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgentMetadataDefaultTypeInternal _AgentMetadata_default_instance_;

inline constexpr TestSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        agent_ids_{},
        tasks_{},
        notification_channels_{},
        notes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        health_settings_{nullptr},
        ping_{nullptr},
        trace_{nullptr},
        period_{0u},
        family_{static_cast< ::kentik::synthetics::v202202::IPFamily >(0)},
        definition_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR TestSettings::TestSettings(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestSettingsDefaultTypeInternal() {}
  union {
    TestSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestSettingsDefaultTypeInternal _TestSettings_default_instance_;

inline constexpr TaskResults::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : health_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        task_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR TaskResults::TaskResults(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TaskResultsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskResultsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskResultsDefaultTypeInternal() {}
  union {
    TaskResults _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskResultsDefaultTypeInternal _TaskResults_default_instance_;

inline constexpr Path::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        traces_{},
        agent_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hop_count_{nullptr},
        time_{nullptr},
        max_as_path_length_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Path::Path(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PathDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PathDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PathDefaultTypeInternal() {}
  union {
    Path _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PathDefaultTypeInternal _Path_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR GetTraceForTestResponse_NodesEntry_DoNotUse::GetTraceForTestResponse_NodesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : GetTraceForTestResponse_NodesEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : GetTraceForTestResponse_NodesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct GetTraceForTestResponse_NodesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTraceForTestResponse_NodesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTraceForTestResponse_NodesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetTraceForTestResponse_NodesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTraceForTestResponse_NodesEntry_DoNotUseDefaultTypeInternal _GetTraceForTestResponse_NodesEntry_DoNotUse_default_instance_;

inline constexpr Agent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        test_ids_{},
        labels_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        site_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        alias_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        os_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        site_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        city_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        region_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        country_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        local_ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cloud_region_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cloud_provider_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_authed_{nullptr},
        metadata_{nullptr},
        status_{static_cast< ::kentik::synthetics::v202202::AgentStatus >(0)},
        family_{static_cast< ::kentik::synthetics::v202202::IPFamily >(0)},
        lat_{0},
        long__{0},
        asn_{0u},
        agent_impl_{static_cast< ::kentik::synthetics::v202202::ImplementType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Agent::Agent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AgentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgentDefaultTypeInternal() {}
  union {
    Agent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgentDefaultTypeInternal _Agent_default_instance_;

inline constexpr UpdateAgentResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        agent_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateAgentResponse::UpdateAgentResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateAgentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateAgentResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateAgentResponseDefaultTypeInternal() {}
  union {
    UpdateAgentResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateAgentResponseDefaultTypeInternal _UpdateAgentResponse_default_instance_;

inline constexpr UpdateAgentRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        agent_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateAgentRequest::UpdateAgentRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateAgentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateAgentRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateAgentRequestDefaultTypeInternal() {}
  union {
    UpdateAgentRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateAgentRequestDefaultTypeInternal _UpdateAgentRequest_default_instance_;

inline constexpr Test::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        labels_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        settings_{nullptr},
        cdate_{nullptr},
        edate_{nullptr},
        created_by_{nullptr},
        last_updated_by_{nullptr},
        status_{static_cast< ::kentik::synthetics::v202202::TestStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Test::Test(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestDefaultTypeInternal() {}
  union {
    Test _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestDefaultTypeInternal _Test_default_instance_;

inline constexpr ListAgentsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : agents_{},
        invalid_count_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListAgentsResponse::ListAgentsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListAgentsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListAgentsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListAgentsResponseDefaultTypeInternal() {}
  union {
    ListAgentsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListAgentsResponseDefaultTypeInternal _ListAgentsResponse_default_instance_;

inline constexpr GetTraceForTestResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : nodes_{},
        paths_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetTraceForTestResponse::GetTraceForTestResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTraceForTestResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTraceForTestResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTraceForTestResponseDefaultTypeInternal() {}
  union {
    GetTraceForTestResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTraceForTestResponseDefaultTypeInternal _GetTraceForTestResponse_default_instance_;

inline constexpr GetAgentResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        agent_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetAgentResponse::GetAgentResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetAgentResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAgentResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAgentResponseDefaultTypeInternal() {}
  union {
    GetAgentResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAgentResponseDefaultTypeInternal _GetAgentResponse_default_instance_;

inline constexpr AgentResults::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tasks_{},
        agent_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        health_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AgentResults::AgentResults(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AgentResultsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgentResultsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgentResultsDefaultTypeInternal() {}
  union {
    AgentResults _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgentResultsDefaultTypeInternal _AgentResults_default_instance_;

inline constexpr UpdateTestResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        test_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateTestResponse::UpdateTestResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateTestResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateTestResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateTestResponseDefaultTypeInternal() {}
  union {
    UpdateTestResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateTestResponseDefaultTypeInternal _UpdateTestResponse_default_instance_;

inline constexpr UpdateTestRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        test_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateTestRequest::UpdateTestRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateTestRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateTestRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateTestRequestDefaultTypeInternal() {}
  union {
    UpdateTestRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateTestRequestDefaultTypeInternal _UpdateTestRequest_default_instance_;

inline constexpr TestResults::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        agents_{},
        test_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        health_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TestResults::TestResults(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestResultsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestResultsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestResultsDefaultTypeInternal() {}
  union {
    TestResults _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestResultsDefaultTypeInternal _TestResults_default_instance_;

inline constexpr ListTestsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tests_{},
        invalid_count_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListTestsResponse::ListTestsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListTestsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListTestsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListTestsResponseDefaultTypeInternal() {}
  union {
    ListTestsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListTestsResponseDefaultTypeInternal _ListTestsResponse_default_instance_;

inline constexpr GetTestResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        test_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetTestResponse::GetTestResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTestResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTestResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTestResponseDefaultTypeInternal() {}
  union {
    GetTestResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTestResponseDefaultTypeInternal _GetTestResponse_default_instance_;

inline constexpr CreateTestResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        test_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateTestResponse::CreateTestResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateTestResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateTestResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateTestResponseDefaultTypeInternal() {}
  union {
    CreateTestResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateTestResponseDefaultTypeInternal _CreateTestResponse_default_instance_;

inline constexpr CreateTestRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        test_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateTestRequest::CreateTestRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateTestRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateTestRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateTestRequestDefaultTypeInternal() {}
  union {
    CreateTestRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateTestRequestDefaultTypeInternal _CreateTestRequest_default_instance_;

inline constexpr GetResultsForTestsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : results_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetResultsForTestsResponse::GetResultsForTestsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetResultsForTestsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetResultsForTestsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetResultsForTestsResponseDefaultTypeInternal() {}
  union {
    GetResultsForTestsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetResultsForTestsResponseDefaultTypeInternal _GetResultsForTestsResponse_default_instance_;
}  // namespace v202202
}  // namespace synthetics
}  // namespace kentik
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto[5];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto = nullptr;
const ::uint32_t
    TableStruct_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.site_name_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.alias_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.os_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.ip_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.lat_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.long__),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.last_authed_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.family_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.asn_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.site_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.city_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.region_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.country_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.test_ids_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.local_ip_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.cloud_region_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.cloud_provider_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.agent_impl_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.labels_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Agent, _impl_.metadata_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::AgentMetadata_IpValue, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::AgentMetadata_IpValue, _impl_.value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::AgentMetadata, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::AgentMetadata, _impl_.private_ipv4_addresses_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::AgentMetadata, _impl_.public_ipv4_addresses_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::AgentMetadata, _impl_.private_ipv6_addresses_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::AgentMetadata, _impl_.public_ipv6_addresses_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Test, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Test, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Test, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Test, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Test, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Test, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Test, _impl_.settings_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Test, _impl_.cdate_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Test, _impl_.edate_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Test, _impl_.created_by_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Test, _impl_.last_updated_by_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Test, _impl_.labels_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        2,
        3,
        4,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestSettings, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestSettings, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestSettings, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestSettings, _impl_.agent_ids_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestSettings, _impl_.tasks_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestSettings, _impl_.health_settings_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestSettings, _impl_.ping_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestSettings, _impl_.trace_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestSettings, _impl_.period_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestSettings, _impl_.family_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestSettings, _impl_.notification_channels_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestSettings, _impl_.notes_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestSettings, _impl_.definition_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestPingSettings, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestPingSettings, _impl_.count_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestPingSettings, _impl_.protocol_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestPingSettings, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestPingSettings, _impl_.timeout_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestPingSettings, _impl_.delay_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestPingSettings, _impl_.dscp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestTraceSettings, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestTraceSettings, _impl_.count_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestTraceSettings, _impl_.protocol_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestTraceSettings, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestTraceSettings, _impl_.timeout_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestTraceSettings, _impl_.limit_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestTraceSettings, _impl_.delay_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestTraceSettings, _impl_.dscp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::ActivationSettings, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::ActivationSettings, _impl_.grace_period_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::ActivationSettings, _impl_.time_unit_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::ActivationSettings, _impl_.time_window_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::ActivationSettings, _impl_.times_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.latency_critical_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.latency_warning_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.packet_loss_critical_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.packet_loss_warning_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.jitter_critical_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.jitter_warning_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.http_latency_critical_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.http_latency_warning_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.http_valid_codes_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.dns_valid_codes_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.latency_critical_stddev_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.latency_warning_stddev_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.jitter_critical_stddev_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.jitter_warning_stddev_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.http_latency_critical_stddev_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.http_latency_warning_stddev_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.unhealthy_subtest_threshold_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.activation_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.cert_expiry_warning_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.cert_expiry_critical_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.dns_valid_ips_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.dns_latency_critical_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.dns_latency_warning_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.dns_latency_critical_stddev_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HealthSettings, _impl_.dns_latency_warning_stddev_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HostnameTest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HostnameTest, _impl_.target_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::IpTest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::IpTest, _impl_.targets_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::AgentTest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::AgentTest, _impl_.target_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::AgentTest, _impl_.use_local_ip_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::FlowTest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::FlowTest, _impl_.target_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::FlowTest, _impl_.target_refresh_interval_millis_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::FlowTest, _impl_.max_providers_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::FlowTest, _impl_.max_ip_targets_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::FlowTest, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::FlowTest, _impl_.inet_direction_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::FlowTest, _impl_.direction_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::DnsTest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::DnsTest, _impl_.target_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::DnsTest, _impl_.timeout_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::DnsTest, _impl_.record_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::DnsTest, _impl_.servers_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::DnsTest, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UrlTest_HeadersEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UrlTest_HeadersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UrlTest_HeadersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UrlTest_HeadersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UrlTest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UrlTest, _impl_.target_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UrlTest, _impl_.timeout_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UrlTest, _impl_.method_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UrlTest, _impl_.headers_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UrlTest, _impl_.body_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UrlTest, _impl_.ignore_tls_errors_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PageLoadTest_HeadersEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PageLoadTest_HeadersEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PageLoadTest_HeadersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PageLoadTest_HeadersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PageLoadTest_CssSelectorsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PageLoadTest_CssSelectorsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PageLoadTest_CssSelectorsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PageLoadTest_CssSelectorsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PageLoadTest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PageLoadTest, _impl_.target_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PageLoadTest, _impl_.timeout_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PageLoadTest, _impl_.headers_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PageLoadTest, _impl_.ignore_tls_errors_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PageLoadTest, _impl_.css_selectors_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::NetworkMeshTest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::NetworkMeshTest, _impl_.use_local_ip_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::MetricData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::MetricData, _impl_.current_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::MetricData, _impl_.rolling_avg_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::MetricData, _impl_.rolling_stddev_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::MetricData, _impl_.health_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PacketLossData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PacketLossData, _impl_.current_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PacketLossData, _impl_.health_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PingResults, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PingResults, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PingResults, _impl_.target_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PingResults, _impl_.packet_loss_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PingResults, _impl_.latency_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PingResults, _impl_.jitter_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PingResults, _impl_.dst_ip_),
        ~0u,
        0,
        1,
        2,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HTTPResponseData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HTTPResponseData, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HTTPResponseData, _impl_.size_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HTTPResponseData, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HTTPResults, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HTTPResults, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HTTPResults, _impl_.target_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HTTPResults, _impl_.latency_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HTTPResults, _impl_.response_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::HTTPResults, _impl_.dst_ip_),
        ~0u,
        0,
        1,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::DNSResponseData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::DNSResponseData, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::DNSResponseData, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::DNSResults, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::DNSResults, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::DNSResults, _impl_.target_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::DNSResults, _impl_.server_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::DNSResults, _impl_.latency_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::DNSResults, _impl_.response_),
        ~0u,
        ~0u,
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TaskResults, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TaskResults, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TaskResults, _impl_.health_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TaskResults, _impl_.task_type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::AgentResults, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::AgentResults, _impl_.agent_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::AgentResults, _impl_.health_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::AgentResults, _impl_.tasks_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestResults, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestResults, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestResults, _impl_.test_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestResults, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestResults, _impl_.health_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestResults, _impl_.agents_),
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Stats, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Stats, _impl_.average_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Stats, _impl_.min_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Stats, _impl_.max_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Location, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Location, _impl_.latitude_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Location, _impl_.longitude_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Location, _impl_.country_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Location, _impl_.region_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Location, _impl_.city_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::NetNode, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::NetNode, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::NetNode, _impl_.ip_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::NetNode, _impl_.asn_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::NetNode, _impl_.as_name_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::NetNode, _impl_.location_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::NetNode, _impl_.dns_name_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::NetNode, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::NetNode, _impl_.site_id_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TraceHop, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TraceHop, _impl_.latency_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TraceHop, _impl_.node_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PathTrace, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PathTrace, _impl_.as_path_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PathTrace, _impl_.is_complete_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::PathTrace, _impl_.hops_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Path, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Path, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Path, _impl_.agent_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Path, _impl_.target_ip_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Path, _impl_.hop_count_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Path, _impl_.max_as_path_length_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Path, _impl_.traces_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::Path, _impl_.time_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        1,
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetResultsForTestsRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetResultsForTestsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetResultsForTestsRequest, _impl_.ids_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetResultsForTestsRequest, _impl_.start_time_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetResultsForTestsRequest, _impl_.end_time_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetResultsForTestsRequest, _impl_.agent_ids_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetResultsForTestsRequest, _impl_.targets_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetResultsForTestsRequest, _impl_.aggregate_),
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetResultsForTestsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetResultsForTestsResponse, _impl_.results_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetTraceForTestRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetTraceForTestRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetTraceForTestRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetTraceForTestRequest, _impl_.start_time_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetTraceForTestRequest, _impl_.end_time_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetTraceForTestRequest, _impl_.agent_ids_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetTraceForTestRequest, _impl_.target_ips_),
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetTraceForTestResponse_NodesEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetTraceForTestResponse_NodesEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetTraceForTestResponse_NodesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetTraceForTestResponse_NodesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetTraceForTestResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetTraceForTestResponse, _impl_.nodes_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetTraceForTestResponse, _impl_.paths_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::ListAgentsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::ListAgentsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::ListAgentsResponse, _impl_.agents_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::ListAgentsResponse, _impl_.invalid_count_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetAgentRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetAgentRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetAgentResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetAgentResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetAgentResponse, _impl_.agent_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UpdateAgentRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UpdateAgentRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UpdateAgentRequest, _impl_.agent_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UpdateAgentResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UpdateAgentResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UpdateAgentResponse, _impl_.agent_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::DeleteAgentRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::DeleteAgentRequest, _impl_.id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::DeleteAgentResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::ListTestsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::ListTestsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::ListTestsResponse, _impl_.tests_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::ListTestsResponse, _impl_.invalid_count_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::CreateTestRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::CreateTestRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::CreateTestRequest, _impl_.test_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::CreateTestResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::CreateTestResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::CreateTestResponse, _impl_.test_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetTestRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetTestRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetTestResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetTestResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::GetTestResponse, _impl_.test_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UpdateTestRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UpdateTestRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UpdateTestRequest, _impl_.test_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UpdateTestResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UpdateTestResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::UpdateTestResponse, _impl_.test_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::DeleteTestRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::DeleteTestRequest, _impl_.id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::DeleteTestResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::SetTestStatusRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::SetTestStatusRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::SetTestStatusRequest, _impl_.status_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::SetTestStatusResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 32, -1, sizeof(::kentik::synthetics::v202202::Agent)},
        {56, -1, -1, sizeof(::kentik::synthetics::v202202::AgentMetadata_IpValue)},
        {65, -1, -1, sizeof(::kentik::synthetics::v202202::AgentMetadata)},
        {77, 95, -1, sizeof(::kentik::synthetics::v202202::Test)},
        {105, 133, -1, sizeof(::kentik::synthetics::v202202::TestSettings)},
        {152, -1, -1, sizeof(::kentik::synthetics::v202202::TestPingSettings)},
        {166, -1, -1, sizeof(::kentik::synthetics::v202202::TestTraceSettings)},
        {181, -1, -1, sizeof(::kentik::synthetics::v202202::ActivationSettings)},
        {193, 226, -1, sizeof(::kentik::synthetics::v202202::HealthSettings)},
        {251, -1, -1, sizeof(::kentik::synthetics::v202202::HostnameTest)},
        {260, -1, -1, sizeof(::kentik::synthetics::v202202::IpTest)},
        {269, -1, -1, sizeof(::kentik::synthetics::v202202::AgentTest)},
        {279, -1, -1, sizeof(::kentik::synthetics::v202202::FlowTest)},
        {294, -1, -1, sizeof(::kentik::synthetics::v202202::DnsTest)},
        {307, 317, -1, sizeof(::kentik::synthetics::v202202::UrlTest_HeadersEntry_DoNotUse)},
        {319, -1, -1, sizeof(::kentik::synthetics::v202202::UrlTest)},
        {333, 343, -1, sizeof(::kentik::synthetics::v202202::PageLoadTest_HeadersEntry_DoNotUse)},
        {345, 355, -1, sizeof(::kentik::synthetics::v202202::PageLoadTest_CssSelectorsEntry_DoNotUse)},
        {357, -1, -1, sizeof(::kentik::synthetics::v202202::PageLoadTest)},
        {370, -1, -1, sizeof(::kentik::synthetics::v202202::NetworkMeshTest)},
        {379, -1, -1, sizeof(::kentik::synthetics::v202202::MetricData)},
        {391, -1, -1, sizeof(::kentik::synthetics::v202202::PacketLossData)},
        {401, 414, -1, sizeof(::kentik::synthetics::v202202::PingResults)},
        {419, -1, -1, sizeof(::kentik::synthetics::v202202::HTTPResponseData)},
        {430, 442, -1, sizeof(::kentik::synthetics::v202202::HTTPResults)},
        {446, -1, -1, sizeof(::kentik::synthetics::v202202::DNSResponseData)},
        {456, 468, -1, sizeof(::kentik::synthetics::v202202::DNSResults)},
        {472, -1, -1, sizeof(::kentik::synthetics::v202202::TaskResults)},
        {485, -1, -1, sizeof(::kentik::synthetics::v202202::AgentResults)},
        {496, 508, -1, sizeof(::kentik::synthetics::v202202::TestResults)},
        {512, -1, -1, sizeof(::kentik::synthetics::v202202::Stats)},
        {523, -1, -1, sizeof(::kentik::synthetics::v202202::Location)},
        {536, 551, -1, sizeof(::kentik::synthetics::v202202::NetNode)},
        {558, -1, -1, sizeof(::kentik::synthetics::v202202::TraceHop)},
        {568, -1, -1, sizeof(::kentik::synthetics::v202202::PathTrace)},
        {579, 593, -1, sizeof(::kentik::synthetics::v202202::Path)},
        {599, 613, -1, sizeof(::kentik::synthetics::v202202::GetResultsForTestsRequest)},
        {619, -1, -1, sizeof(::kentik::synthetics::v202202::GetResultsForTestsResponse)},
        {628, 641, -1, sizeof(::kentik::synthetics::v202202::GetTraceForTestRequest)},
        {646, 656, -1, sizeof(::kentik::synthetics::v202202::GetTraceForTestResponse_NodesEntry_DoNotUse)},
        {658, -1, -1, sizeof(::kentik::synthetics::v202202::GetTraceForTestResponse)},
        {668, -1, -1, sizeof(::kentik::synthetics::v202202::ListAgentsRequest)},
        {676, -1, -1, sizeof(::kentik::synthetics::v202202::ListAgentsResponse)},
        {686, -1, -1, sizeof(::kentik::synthetics::v202202::GetAgentRequest)},
        {695, 704, -1, sizeof(::kentik::synthetics::v202202::GetAgentResponse)},
        {705, 714, -1, sizeof(::kentik::synthetics::v202202::UpdateAgentRequest)},
        {715, 724, -1, sizeof(::kentik::synthetics::v202202::UpdateAgentResponse)},
        {725, -1, -1, sizeof(::kentik::synthetics::v202202::DeleteAgentRequest)},
        {734, -1, -1, sizeof(::kentik::synthetics::v202202::DeleteAgentResponse)},
        {742, -1, -1, sizeof(::kentik::synthetics::v202202::ListTestsRequest)},
        {750, -1, -1, sizeof(::kentik::synthetics::v202202::ListTestsResponse)},
        {760, 769, -1, sizeof(::kentik::synthetics::v202202::CreateTestRequest)},
        {770, 779, -1, sizeof(::kentik::synthetics::v202202::CreateTestResponse)},
        {780, -1, -1, sizeof(::kentik::synthetics::v202202::GetTestRequest)},
        {789, 798, -1, sizeof(::kentik::synthetics::v202202::GetTestResponse)},
        {799, 808, -1, sizeof(::kentik::synthetics::v202202::UpdateTestRequest)},
        {809, 818, -1, sizeof(::kentik::synthetics::v202202::UpdateTestResponse)},
        {819, -1, -1, sizeof(::kentik::synthetics::v202202::DeleteTestRequest)},
        {828, -1, -1, sizeof(::kentik::synthetics::v202202::DeleteTestResponse)},
        {836, -1, -1, sizeof(::kentik::synthetics::v202202::SetTestStatusRequest)},
        {846, -1, -1, sizeof(::kentik::synthetics::v202202::SetTestStatusResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::kentik::synthetics::v202202::_Agent_default_instance_._instance,
    &::kentik::synthetics::v202202::_AgentMetadata_IpValue_default_instance_._instance,
    &::kentik::synthetics::v202202::_AgentMetadata_default_instance_._instance,
    &::kentik::synthetics::v202202::_Test_default_instance_._instance,
    &::kentik::synthetics::v202202::_TestSettings_default_instance_._instance,
    &::kentik::synthetics::v202202::_TestPingSettings_default_instance_._instance,
    &::kentik::synthetics::v202202::_TestTraceSettings_default_instance_._instance,
    &::kentik::synthetics::v202202::_ActivationSettings_default_instance_._instance,
    &::kentik::synthetics::v202202::_HealthSettings_default_instance_._instance,
    &::kentik::synthetics::v202202::_HostnameTest_default_instance_._instance,
    &::kentik::synthetics::v202202::_IpTest_default_instance_._instance,
    &::kentik::synthetics::v202202::_AgentTest_default_instance_._instance,
    &::kentik::synthetics::v202202::_FlowTest_default_instance_._instance,
    &::kentik::synthetics::v202202::_DnsTest_default_instance_._instance,
    &::kentik::synthetics::v202202::_UrlTest_HeadersEntry_DoNotUse_default_instance_._instance,
    &::kentik::synthetics::v202202::_UrlTest_default_instance_._instance,
    &::kentik::synthetics::v202202::_PageLoadTest_HeadersEntry_DoNotUse_default_instance_._instance,
    &::kentik::synthetics::v202202::_PageLoadTest_CssSelectorsEntry_DoNotUse_default_instance_._instance,
    &::kentik::synthetics::v202202::_PageLoadTest_default_instance_._instance,
    &::kentik::synthetics::v202202::_NetworkMeshTest_default_instance_._instance,
    &::kentik::synthetics::v202202::_MetricData_default_instance_._instance,
    &::kentik::synthetics::v202202::_PacketLossData_default_instance_._instance,
    &::kentik::synthetics::v202202::_PingResults_default_instance_._instance,
    &::kentik::synthetics::v202202::_HTTPResponseData_default_instance_._instance,
    &::kentik::synthetics::v202202::_HTTPResults_default_instance_._instance,
    &::kentik::synthetics::v202202::_DNSResponseData_default_instance_._instance,
    &::kentik::synthetics::v202202::_DNSResults_default_instance_._instance,
    &::kentik::synthetics::v202202::_TaskResults_default_instance_._instance,
    &::kentik::synthetics::v202202::_AgentResults_default_instance_._instance,
    &::kentik::synthetics::v202202::_TestResults_default_instance_._instance,
    &::kentik::synthetics::v202202::_Stats_default_instance_._instance,
    &::kentik::synthetics::v202202::_Location_default_instance_._instance,
    &::kentik::synthetics::v202202::_NetNode_default_instance_._instance,
    &::kentik::synthetics::v202202::_TraceHop_default_instance_._instance,
    &::kentik::synthetics::v202202::_PathTrace_default_instance_._instance,
    &::kentik::synthetics::v202202::_Path_default_instance_._instance,
    &::kentik::synthetics::v202202::_GetResultsForTestsRequest_default_instance_._instance,
    &::kentik::synthetics::v202202::_GetResultsForTestsResponse_default_instance_._instance,
    &::kentik::synthetics::v202202::_GetTraceForTestRequest_default_instance_._instance,
    &::kentik::synthetics::v202202::_GetTraceForTestResponse_NodesEntry_DoNotUse_default_instance_._instance,
    &::kentik::synthetics::v202202::_GetTraceForTestResponse_default_instance_._instance,
    &::kentik::synthetics::v202202::_ListAgentsRequest_default_instance_._instance,
    &::kentik::synthetics::v202202::_ListAgentsResponse_default_instance_._instance,
    &::kentik::synthetics::v202202::_GetAgentRequest_default_instance_._instance,
    &::kentik::synthetics::v202202::_GetAgentResponse_default_instance_._instance,
    &::kentik::synthetics::v202202::_UpdateAgentRequest_default_instance_._instance,
    &::kentik::synthetics::v202202::_UpdateAgentResponse_default_instance_._instance,
    &::kentik::synthetics::v202202::_DeleteAgentRequest_default_instance_._instance,
    &::kentik::synthetics::v202202::_DeleteAgentResponse_default_instance_._instance,
    &::kentik::synthetics::v202202::_ListTestsRequest_default_instance_._instance,
    &::kentik::synthetics::v202202::_ListTestsResponse_default_instance_._instance,
    &::kentik::synthetics::v202202::_CreateTestRequest_default_instance_._instance,
    &::kentik::synthetics::v202202::_CreateTestResponse_default_instance_._instance,
    &::kentik::synthetics::v202202::_GetTestRequest_default_instance_._instance,
    &::kentik::synthetics::v202202::_GetTestResponse_default_instance_._instance,
    &::kentik::synthetics::v202202::_UpdateTestRequest_default_instance_._instance,
    &::kentik::synthetics::v202202::_UpdateTestResponse_default_instance_._instance,
    &::kentik::synthetics::v202202::_DeleteTestRequest_default_instance_._instance,
    &::kentik::synthetics::v202202::_DeleteTestResponse_default_instance_._instance,
    &::kentik::synthetics::v202202::_SetTestStatusRequest_default_instance_._instance,
    &::kentik::synthetics::v202202::_SetTestStatusResponse_default_instance_._instance,
};
const char descriptor_table_protodef_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n*kentik/synthetics/v202202/synthetics.p"
    "roto\022\031kentik.synthetics.v202202\032\034google/"
    "api/annotations.proto\032\027google/api/client"
    ".proto\032\037google/api/field_behavior.proto\032"
    "\037google/protobuf/timestamp.proto\032.protoc"
    "-gen-openapiv2/options/annotations.proto"
    "\032%kentik/core/v202303/annotations.proto\032"
    "#kentik/core/v202303/user_info.proto\"\357\016\n"
    "\005Agent\0226\n\002id\030\001 \001(\tB&\222A 2\036Unique identifi"
    "er of the agent\340A\003R\002id\022I\n\tsite_name\030\002 \001("
    "\tB,\222A)2\'Name of the site where agent is "
    "locatedR\010siteName\022W\n\006status\030\003 \001(\0162&.kent"
    "ik.synthetics.v202202.AgentStatusB\027\222A\0242\022"
    "Operational statusR\006status\022F\n\005alias\030\004 \001("
    "\tB0\222A-2+User selected descriptive name o"
    "f the agentR\005alias\022<\n\004type\030\005 \001(\tB(\222A\"2 T"
    "ype of agent (global | private)\340A\003R\004type"
    "\022A\n\002os\030\006 \001(\tB1\222A+2)OS version of server/"
    "VM hosting the agent\340A\003R\002os\022H\n\002ip\030\007 \001(\tB"
    "8\030\001\222A02.Public IP address of the agent ("
    "auto-detected)\340A\003R\002ip\022L\n\003lat\030\010 \001(\001B:\222A72"
    "5Latitude of agent\'s location (signed de"
    "cimal degrees)R\003lat\022O\n\004long\030\t \001(\001B;\222A826"
    "Longitude of agent\'s location (signed de"
    "cimal degrees)R\004long\022h\n\013last_authed\030\n \001("
    "\0132\032.google.protobuf.TimestampB+\222A%2#Time"
    "stamp of the last authorization\340A\003R\nlast"
    "Authed\022j\n\006family\030\013 \001(\0162#.kentik.syntheti"
    "cs.v202202.IPFamilyB-\222A*2(IP address fam"
    "ily supported by the agentR\006family\022B\n\003as"
    "n\030\014 \001(\rB0\222A-2+ASN of the AS owning agent"
    "\'s public addressR\003asn\022X\n\007site_id\030\r \001(\tB"
    "\?\222A<2:ID of the site hosting the agent ("
    "if configured in Kentik)R\006siteId\022\?\n\007vers"
    "ion\030\016 \001(\tB%\222A\0372\035Software version of the "
    "agent\340A\003R\007version\0228\n\004city\030\020 \001(\tB$\222A!2\037Ci"
    "ty where the agent is locatedR\004city\022D\n\006r"
    "egion\030\021 \001(\tB,\222A)2\'Geographical region of"
    " agent\'s locationR\006region\022:\n\007country\030\022 \001"
    "(\tB \222A\0352\033Country of agent\'s locationR\007co"
    "untry\022J\n\010test_ids\030\023 \003(\tB/\222A)2\'IDs of use"
    "r\'s test running on the agent\340A\003R\007testId"
    "s\022B\n\010local_ip\030\024 \001(\tB\'\030\001\222A\"2 Internal IP "
    "address of the agentR\007localIp\022O\n\014cloud_r"
    "egion\030\026 \001(\tB,\222A)2\'Cloud region (if any) "
    "hosting the agentR\013cloudRegion\022U\n\016cloud_"
    "provider\030\027 \001(\tB.\222A+2)Cloud provider (if "
    "any) hosting the agentR\rcloudProvider\022L\n"
    "\nagent_impl\030\030 \001(\0162(.kentik.synthetics.v2"
    "02202.ImplementTypeB\003\340A\003R\tagentImpl\022N\n\006l"
    "abels\030\031 \003(\tB6\222A321List of names of label"
    "s associated with the agentR\006labels\022\220\001\n\010"
    "metadata\030\032 \001(\0132(.kentik.synthetics.v2022"
    "02.AgentMetadataBJ\222AG2EAdditional inform"
    "ation about agent\'s configuration and ru"
    "n-time stateR\010metadata\"\350\004\n\rAgentMetadata"
    "\022\213\001\n\026private_ipv4_addresses\030\001 \003(\01320.kent"
    "ik.synthetics.v202202.AgentMetadata.IpVa"
    "lueB#\222A 2\036List of private IPv4 addresses"
    "R\024privateIpv4Addresses\022\213\001\n\025public_ipv4_a"
    "ddresses\030\002 \003(\01320.kentik.synthetics.v2022"
    "02.AgentMetadata.IpValueB%\222A\0372\035List of p"
    "ublic IPv4 addresses\340A\003R\023publicIpv4Addre"
    "sses\022\213\001\n\026private_ipv6_addresses\030\003 \003(\01320."
    "kentik.synthetics.v202202.AgentMetadata."
    "IpValueB#\222A 2\036List of private IPv6 addre"
    "ssesR\024privateIpv6Addresses\022\213\001\n\025public_ip"
    "v6_addresses\030\004 \003(\01320.kentik.synthetics.v"
    "202202.AgentMetadata.IpValueB%\222A\0372\035List "
    "of public IPv6 addresses\340A\003R\023publicIpv6A"
    "ddresses\032\037\n\007IpValue\022\024\n\005value\030\001 \001(\tR\005valu"
    "e\"\261\006\n\004Test\022-\n\002id\030\001 \001(\tB\035\222A\0272\025Unique ID o"
    "f the test\340A\003R\002id\0227\n\004name\030\002 \001(\tB#\222A 2\036Us"
    "er selected name of the testR\004name\022)\n\004ty"
    "pe\030\003 \001(\tB\025\222A\0222\020Type of the testR\004type\022b\n"
    "\006status\030\005 \001(\0162%.kentik.synthetics.v20220"
    "2.TestStatusB#\222A 2\036Operational status of"
    " the testR\006status\022\\\n\010settings\030\006 \001(\0132\'.ke"
    "ntik.synthetics.v202202.TestSettingsB\027\222A"
    "\0242\022Test configurationR\010settings\022R\n\005cdate"
    "\030\007 \001(\0132\032.google.protobuf.TimestampB \222A\0322"
    "\030Creation timestamp (UTC)\340A\003R\005cdate\022[\n\005e"
    "date\030\010 \001(\0132\032.google.protobuf.TimestampB)"
    "\222A#2!Last modification timestamp (UTC)\340A"
    "\003R\005edate\022^\n\ncreated_by\030\t \001(\0132\035.kentik.co"
    "re.v202303.UserInfoB \222A\0322\030Identity of te"
    "st creator\340A\003R\tcreatedBy\022~\n\017last_updated"
    "_by\030\n \001(\0132\035.kentik.core.v202303.UserInfo"
    "B7\222A12/Identity of use that has modified"
    " the test last\340A\003R\rlastUpdatedBy\022C\n\006labe"
    "ls\030\013 \003(\tB+\222A(2&Set of labels associated "
    "with the testR\006labels\"\324\014\n\014TestSettings\022E"
    "\n\010hostname\030\001 \001(\0132\'.kentik.synthetics.v20"
    "2202.HostnameTestH\000R\010hostname\0223\n\002ip\030\002 \001("
    "\0132!.kentik.synthetics.v202202.IpTestH\000R\002"
    "ip\022<\n\005agent\030\003 \001(\0132$.kentik.synthetics.v2"
    "02202.AgentTestH\000R\005agent\0229\n\004flow\030\004 \001(\0132#"
    ".kentik.synthetics.v202202.FlowTestH\000R\004f"
    "low\0226\n\003dns\030\005 \001(\0132\".kentik.synthetics.v20"
    "2202.DnsTestH\000R\003dns\0226\n\003url\030\006 \001(\0132\".kenti"
    "k.synthetics.v202202.UrlTestH\000R\003url\022F\n\014n"
    "etwork_grid\030\007 \001(\0132!.kentik.synthetics.v2"
    "02202.IpTestH\000R\013networkGrid\022F\n\tpage_load"
    "\030\010 \001(\0132\'.kentik.synthetics.v202202.PageL"
    "oadTestH\000R\010pageLoad\022\?\n\010dns_grid\030\t \001(\0132\"."
    "kentik.synthetics.v202202.DnsTestH\000R\007dns"
    "Grid\022O\n\014network_mesh\030\022 \001(\0132*.kentik.synt"
    "hetics.v202202.NetworkMeshTestH\000R\013networ"
    "kMesh\022[\n\tagent_ids\030\n \003(\tB>\222A;29IDs of ag"
    "ents assigned to run tasks on behalf of "
    "the testR\010agentIds\022A\n\005tasks\030\013 \003(\tB+\222A(2&"
    "List of task names to run for the testR\005"
    "tasks\022\251\001\n\017health_settings\030\014 \001(\0132).kentik"
    ".synthetics.v202202.HealthSettingsBU\222AR2"
    "PHealth evaluation thresholds, acceptabl"
    "e responses and alarm activation setting"
    "sR\016healthSettings\022i\n\004ping\030\r \001(\0132+.kentik"
    ".synthetics.v202202.TestPingSettingsB(\222A"
    "%2#Ping tasks configuration parametersR\004"
    "ping\022q\n\005trace\030\016 \001(\0132,.kentik.synthetics."
    "v202202.TestTraceSettingsB-\222A*2(Tracerou"
    "te task configuration parametersR\005trace\022"
    "@\n\006period\030\017 \001(\rB(\222A%2#Test evaluation pe"
    "riod (in seconds)R\006period\022\201\001\n\006family\030\020 \001"
    "(\0162#.kentik.synthetics.v202202.IPFamilyB"
    "D\222AA2\?IP address family to select from a"
    "vailable DNS name resolutionsR\006family\022\177\n"
    "\025notification_channels\030\021 \003(\tBJ\222AG2EList "
    "of IDs of notification channels for alar"
    "ms triggered by the testR\024notificationCh"
    "annels\022>\n\005notes\030\023 \001(\tB(\222A%2#Add a note o"
    "r comment for this testR\005notesB\014\n\ndefini"
    "tion\"\314\003\n\020TestPingSettings\022K\n\005count\030\001 \001(\r"
    "B5\222A220Number of probe packets to send i"
    "n one iterationR\005count\022G\n\010protocol\030\002 \001(\t"
    "B+\222A(2&Transport protocol to use (icmp |"
    " tcp)R\010protocol\022F\n\004port\030\003 \001(\rB2\222A/2-Targ"
    "et port for TCP probes (ignored for ICMP"
    ")R\004port\022P\n\007timeout\030\004 \001(\rB6\222A321Timeout i"
    "n milliseconds for execution of the task"
    "R\007timeout\022<\n\005delay\030\005 \001(\002B&\222A#2!Inter-pro"
    "be delay in millisecondsR\005delay\022J\n\004dscp\030"
    "\006 \001(\rB6\222A321DSCP code to be set in IP he"
    "ader of probe packetsR\004dscp\"\251\004\n\021TestTrac"
    "eSettings\022K\n\005count\030\001 \001(\rB5\222A220Number of"
    " probe packets to send in one iterationR"
    "\005count\022M\n\010protocol\030\002 \001(\tB1\222A.2,Transport"
    " protocol to use (icmp | tcp | udp)R\010pro"
    "tocol\022M\n\004port\030\003 \001(\rB9\222A624Target port fo"
    "r TCP or UDP probes (ignored for ICMP)R\004"
    "port\022P\n\007timeout\030\004 \001(\rB6\222A321Timeout in m"
    "illiseconds for execution of the taskR\007t"
    "imeout\022M\n\005limit\030\005 \001(\rB7\222A422Maximum numb"
    "er of hops to probe (i.e. maximum TTL)R\005"
    "limit\022<\n\005delay\030\006 \001(\002B&\222A#2!Inter-probe d"
    "elay in millisecondsR\005delay\022J\n\004dscp\030\007 \001("
    "\rB6\222A321DSCP code to be set in IP header"
    " of probe packetsR\004dscp\"\306\003\n\022ActivationSe"
    "ttings\022\202\001\n\014grace_period\030\001 \001(\tB_\222A\\2ZPeri"
    "od of healthy status in minutes within t"
    "he time window not cancelling alarm acti"
    "vationR\013gracePeriod\022N\n\ttime_unit\030\002 \001(\tB1"
    "\222A.2,Time unit for specifying time windo"
    "w (m | h)R\010timeUnit\022]\n\013time_window\030\003 \001(\t"
    "B<\222A927Time window for evaluating of tes"
    "t for alarm activationR\ntimeWindow\022|\n\005ti"
    "mes\030\004 \001(\tBf\222Ac2aNumber of occurrences of"
    " unhealthy test status within the time w"
    "indow triggering alarm activationR\005times"
    "\"\264\033\n\016HealthSettings\022\177\n\020latency_critical\030"
    "\001 \001(\002BT\222AQ2OThreshold for ping response "
    "latency (in microseconds) to trigger cri"
    "tical alarmR\017latencyCritical\022|\n\017latency_"
    "warning\030\002 \001(\002BS\222AP2NThreshold for ping r"
    "esponse latency (in microseconds) to tri"
    "gger warning alarmR\016latencyWarning\022v\n\024pa"
    "cket_loss_critical\030\003 \001(\002BD\222AA2\?Threshold"
    " for ping packet loss (in %) to trigger "
    "critical alarmR\022packetLossCritical\022s\n\023pa"
    "cket_loss_warning\030\004 \001(\002BC\222A@2>Threshold "
    "for ping packet loss (in %) to trigger w"
    "arning alarmR\021packetLossWarning\022s\n\017jitte"
    "r_critical\030\005 \001(\002BJ\222AG2EThreshold for pin"
    "g jitter (in microseconds) to trigger cr"
    "itical alarmR\016jitterCritical\022q\n\016jitter_w"
    "arning\030\006 \001(\002BJ\222AG2EThreshold for ping ji"
    "tter (in microseconds) to trigger critic"
    "al alarmR\rjitterWarning\022\210\001\n\025http_latency"
    "_critical\030\007 \001(\002BT\222AQ2OThreshold for HTTP"
    " response latency (in microseconds) to t"
    "rigger critical alarmR\023httpLatencyCritic"
    "al\022\205\001\n\024http_latency_warning\030\010 \001(\002BS\222AP2N"
    "Threshold for HTTP response latency (in "
    "microseconds) to trigger warning alarmR\022"
    "httpLatencyWarning\022a\n\020http_valid_codes\030\t"
    " \003(\rB7\222A422List of HTTP status codes ind"
    "icating healthy stateR\016httpValidCodes\022^\n"
    "\017dns_valid_codes\030\n \003(\rB6\222A321List of DNS"
    " status codes indicating healthy stateR\r"
    "dnsValidCodes\022\242\001\n\027latency_critical_stdde"
    "v\030\013 \001(\002Bj\222Ag2eThreshold for standard dev"
    "iation (in microseconds) of ping respons"
    "e latency to trigger critical alarmR\025lat"
    "encyCriticalStddev\022\237\001\n\026latency_warning_s"
    "tddev\030\014 \001(\002Bi\222Af2dThreshold for standard"
    " deviation (in microseconds) of ping res"
    "ponse latency to trigger warning alarmR\024"
    "latencyWarningStddev\022\226\001\n\026jitter_critical"
    "_stddev\030\r \001(\002B`\222A]2[Threshold for standa"
    "rd deviation of ping jitter (in microsec"
    "onds) to trigger critical alarmR\024jitterC"
    "riticalStddev\022\223\001\n\025jitter_warning_stddev\030"
    "\016 \001(\002B_\222A\\2ZThreshold for standard devia"
    "tion of ping jitter (in microseconds) to"
    " trigger warning alarmR\023jitterWarningStd"
    "dev\022\253\001\n\034http_latency_critical_stddev\030\017 \001"
    "(\002Bj\222Ag2eThreshold for standard deviatio"
    "n of HTTP response latency (in microseco"
    "nds) to trigger critical alarmR\031httpLate"
    "ncyCriticalStddev\022\250\001\n\033http_latency_warni"
    "ng_stddev\030\020 \001(\002Bi\222Af2dThreshold for stan"
    "dard deviation of HTTP response latency "
    "(in microseconds) to trigger warning ala"
    "rmR\030httpLatencyWarningStddev\022\257\001\n\033unhealt"
    "hy_subtest_threshold\030\021 \001(\rBo\030\001\222Aj2hNumbe"
    "r of tasks (across all agents) that must"
    " report unhealthy status in order for al"
    "arm to be triggeredR\031unhealthySubtestThr"
    "eshold\022m\n\nactivation\030\022 \001(\0132-.kentik.synt"
    "hetics.v202202.ActivationSettingsB\036\222A\0332\031"
    "Alarm activation settingsR\nactivation\022\213\001"
    "\n\023cert_expiry_warning\030\023 \001(\rB[\222AX2VThresh"
    "old for remaining validity of TLS certif"
    "icate (in days) to trigger warning alarm"
    "R\021certExpiryWarning\022\216\001\n\024cert_expiry_crit"
    "ical\030\024 \001(\rB\\\222AY2WThreshold for remaining"
    " validity of TLS certificate (in days) t"
    "o trigger critical alarmR\022certExpiryCrit"
    "ical\022\210\001\n\rdns_valid_ips\030\025 \001(\tBd\222Aa2_Comma"
    " separated list of IP addresses expected"
    " to be received in response to DNS A or "
    "AAAA queryR\013dnsValidIps\022\205\001\n\024dns_latency_"
    "critical\030\026 \001(\002BS\222AP2NThreshold for DNS r"
    "esponse latency (in microseconds) to tri"
    "gger critical alarmR\022dnsLatencyCritical\022"
    "\202\001\n\023dns_latency_warning\030\027 \001(\002BR\222AO2MThre"
    "shold for DNS response latency (in micro"
    "seconds) to trigger warning alarmR\021dnsLa"
    "tencyWarning\022\250\001\n\033dns_latency_critical_st"
    "ddev\030\030 \001(\002Bi\222Af2dThreshold for standard "
    "deviation (in microseconds) of DNS respo"
    "nse latency to trigger critical alarmR\030d"
    "nsLatencyCriticalStddev\022\245\001\n\032dns_latency_"
    "warning_stddev\030\031 \001(\002Bh\222Ae2cThreshold for"
    " standard deviation (in microseconds) of"
    " DNS response latency to trigger warning"
    " alarmR\027dnsLatencyWarningStddev\"X\n\014Hostn"
    "ameTest\022H\n\006target\030\001 \001(\tB0\222A-2+Fully qual"
    "ified DNS name of the target hostR\006targe"
    "t\"H\n\006IpTest\022>\n\007targets\030\001 \003(\tB$\222A!2\037List "
    "of IP addresses of targetsR\007targets\"\277\001\n\t"
    "AgentTest\0223\n\006target\030\001 \001(\tB\033\222A\0302\026ID of th"
    "e target agentR\006target\022}\n\014use_local_ip\030\002"
    " \001(\010B[\222AX2VBoolean value indicating whet"
    "her to use local (private) IP address of"
    " the target agentR\nuseLocalIp\"\213\007\n\010FlowTe"
    "st\022\207\001\n\006target\030\001 \001(\tBo\222Al2jTarget ASN, CD"
    "N, Country, Region of City for autonomou"
    "s test (type of value depends on flow te"
    "st sub-type)R\006target\022\236\001\n\036target_refresh_"
    "interval_millis\030\002 \001(\rBY\222AV2TPeriod (in m"
    "illiseconds) for refreshing list of targ"
    "ets based on available flow dataR\033target"
    "RefreshIntervalMillis\022^\n\rmax_providers\030\003"
    " \001(\rB9\222A624Maximum number of IP provider"
    "s to track autonomouslyR\014maxProviders\022p\n"
    "\016max_ip_targets\030\004 \001(\rBJ\222AG2EMaximum numb"
    "er of target IP addresses to select base"
    "d flow data queryR\014maxIpTargets\022W\n\004type\030"
    "\005 \001(\tBC\222A@2>Autonomous test sub-type (as"
    "n | cdn | country | region | city)R\004type"
    "\022\250\001\n\016inet_direction\030\006 \001(\tB\200\001\222A}2{Selecti"
    "on of address from flow data (src = sour"
    "ce address in inbound flows | dst = dest"
    "ination addresses in outbound flows)R\rin"
    "etDirection\022~\n\tdirection\030\007 \001(\tB`\222A]2[Dir"
    "ection of flows to match target attribut"
    "e for extraction of target addresses (sr"
    "c | dst)R\tdirection\"\357\002\n\007DnsTest\022>\n\006targe"
    "t\030\001 \001(\tB&\222A#2!Fully qualified DNS name t"
    "o queryR\006target\022F\n\007timeout\030\002 \001(\rB,\030\001\222A\'2"
    "%--- Deprecated: value is ignored. ---R\007"
    "timeout\022g\n\013record_type\030\003 \001(\0162$.kentik.sy"
    "nthetics.v202202.DNSRecordB \222A\0352\033Type of"
    " DNS record to queryR\nrecordType\022B\n\007serv"
    "ers\030\004 \003(\tB(\222A%2#List of IP addresses of "
    "DNS serversR\007servers\022/\n\004port\030\005 \001(\rB\033\222A\0302"
    "\026Target DNS server portR\004port\"\306\004\n\007UrlTes"
    "t\0229\n\006target\030\001 \001(\tB!\222A\0362\034HTTP or HTTPS UR"
    "L to requestR\006target\022I\n\007timeout\030\002 \001(\rB/\222"
    "A,2*HTTP transaction timeout (in millise"
    "conds)R\007timeout\022Q\n\006method\030\003 \001(\tB9\222A624HT"
    "TP method to use (GET | HEAD | PATCH | P"
    "OST | PUT)R\006method\022\177\n\007headers\030\004 \003(\0132/.ke"
    "ntik.synthetics.v202202.UrlTest.HeadersE"
    "ntryB4\222A12/Map of HTTP header values key"
    "ed by header namesR\007headers\022*\n\004body\030\005 \001("
    "\tB\026\222A\0232\021HTTP request bodyR\004body\022y\n\021ignor"
    "e_tls_errors\030\006 \001(\010BM\222AJ2HBoolean indicat"
    "ing whether to ignore TLS certificate ve"
    "rification errorsR\017ignoreTlsErrors\032:\n\014He"
    "adersEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 "
    "\001(\tR\005value:\0028\001\"\254\005\n\014PageLoadTest\0229\n\006targe"
    "t\030\001 \001(\tB!\222A\0362\034HTTP or HTTPS URL to reque"
    "stR\006target\022I\n\007timeout\030\002 \001(\rB/\222A,2*HTTP t"
    "ransaction timeout (in milliseconds)R\007ti"
    "meout\022\204\001\n\007headers\030\003 \003(\01324.kentik.synthet"
    "ics.v202202.PageLoadTest.HeadersEntryB4\222"
    "A12/Map of HTTP header values keyed by h"
    "eader namesR\007headers\022y\n\021ignore_tls_error"
    "s\030\004 \001(\010BM\222AJ2HBoolean indicating whether"
    " to ignore TLS certificate verification "
    "errorsR\017ignoreTlsErrors\022\226\001\n\rcss_selector"
    "s\030\005 \003(\01329.kentik.synthetics.v202202.Page"
    "LoadTest.CssSelectorsEntryB6\222A321Map of "
    "CSS selector values keyed by selector na"
    "meR\014cssSelectors\032:\n\014HeadersEntry\022\020\n\003key\030"
    "\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001\032\?\n\021"
    "CssSelectorsEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005v"
    "alue\030\002 \001(\tR\005value:\0028\001\"\221\001\n\017NetworkMeshTes"
    "t\022~\n\014use_local_ip\030\001 \001(\010B\\\222AY2WBoolean va"
    "lue indicating whether to use local (pri"
    "vate) IP address of the target agentsR\nu"
    "seLocalIp\"\307\002\n\nMetricData\0226\n\007current\030\001 \001("
    "\rB\034\222A\0312\027Current value of metricR\007current"
    "\022\?\n\013rolling_avg\030\002 \001(\rB\036\222A\0332\031Rolling aver"
    "age of metricR\nrollingAvg\022[\n\016rolling_std"
    "dev\030\003 \001(\rB4\222A12/Rolling average of stand"
    "ard deviation of metricR\rrollingStddev\022c"
    "\n\006health\030\004 \001(\tBK\222AH2FHealth evaluation s"
    "tatus for the metric (healthy | warning "
    "| critical)R\006health\"\257\001\n\016PacketLossData\0228"
    "\n\007current\030\001 \001(\001B\036\222A\0332\031Current packet los"
    "s valueR\007current\022c\n\006health\030\002 \001(\tBK\222AH2FH"
    "ealth evaluation status for the metric ("
    "healthy | warning | critical)R\006health\"\326\003"
    "\n\013PingResults\022E\n\006target\030\001 \001(\tB-\222A*2(Host"
    "name or address of the probed targetR\006ta"
    "rget\022n\n\013packet_loss\030\002 \001(\0132).kentik.synth"
    "etics.v202202.PacketLossDataB\"\222A\0372\035Packe"
    "t loss metric and healthR\npacketLoss\022f\n\007"
    "latency\030\003 \001(\0132%.kentik.synthetics.v20220"
    "2.MetricDataB%\222A\"2 Packet latency metric"
    " and healthR\007latency\022o\n\006jitter\030\004 \001(\0132%.k"
    "entik.synthetics.v202202.MetricDataB0\222A-"
    "2+Latency jitter (variance) metric and h"
    "ealthR\006jitter\0227\n\006dst_ip\030\005 \001(\tB \222A\0352\033IP a"
    "ddress of probed targetR\005dstIp\"\371\001\n\020HTTPR"
    "esponseData\0224\n\006status\030\001 \001(\rB\034\222A\0312\027HTTP s"
    "tatus in responseR\006status\022>\n\004size\030\002 \001(\rB"
    "*\222A\'2%Total size of  received response b"
    "odyR\004size\022o\n\004data\030\003 \001(\tB[\222AX2VDetailed i"
    "nformation about transaction timing, con"
    "nection characteristics and responseR\004da"
    "ta\"\344\002\n\013HTTPResults\022.\n\006target\030\001 \001(\tB\026\222A\0232"
    "\021Target probed URLR\006target\022m\n\007latency\030\002 "
    "\001(\0132%.kentik.synthetics.v202202.MetricDa"
    "taB,\222A)2\'HTTP response latency metric an"
    "d healthR\007latency\022v\n\010response\030\004 \001(\0132+.ke"
    "ntik.synthetics.v202202.HTTPResponseData"
    "B-\222A*2(Information about received HTTP r"
    "esponseR\010response\022>\n\006dst_ip\030\005 \001(\tB\'\222A$2\""
    "IP address of probed target serverR\005dstI"
    "p\"\207\001\n\017DNSResponseData\0220\n\006status\030\001 \001(\rB\030\222"
    "A\0252\023Received DNS statusR\006status\022B\n\004data\030"
    "\002 \001(\tB.\222A+2)Text rendering of received D"
    "NS resolutionR\004data\"\335\002\n\nDNSResults\022/\n\006ta"
    "rget\030\001 \001(\tB\027\222A\0242\022Queried DNS recordR\006tar"
    "get\022:\n\006server\030\002 \001(\tB\"\222A\0372\035DNS server use"
    "d for the queryR\006server\022l\n\007latency\030\003 \001(\013"
    "2%.kentik.synthetics.v202202.MetricDataB"
    "+\222A(2&DNS response latency metric and he"
    "althR\007latency\022t\n\010response\030\005 \001(\0132*.kentik"
    ".synthetics.v202202.DNSResponseDataB,\222A)"
    "2\'Information about received DNS respons"
    "eR\010response\"\203\003\n\013TaskResults\022e\n\004ping\030\001 \001("
    "\0132&.kentik.synthetics.v202202.PingResult"
    "sB\'\222A$2\"Entry containing ping task resul"
    "tsH\000R\004ping\022e\n\004http\030\002 \001(\0132&.kentik.synthe"
    "tics.v202202.HTTPResultsB\'\222A$2\"Entry con"
    "taining HTTP task resultsH\000R\004http\022a\n\003dns"
    "\030\003 \001(\0132%.kentik.synthetics.v202202.DNSRe"
    "sultsB&\222A#2!Entry containing DNS task re"
    "sultsH\000R\003dns\0226\n\006health\030\004 \001(\tB\036\222A\0332\031Healt"
    "h status of the taskR\006healthB\013\n\ttask_typ"
    "e\"\236\002\n\014AgentResults\022A\n\010agent_id\030\001 \001(\tB&\222A"
    "#2!ID of the agent providing resultsR\007ag"
    "entId\022b\n\006health\030\002 \001(\tBJ\222AG2EOverall heal"
    "th status of all task for the test execu"
    "ted by this agentR\006health\022g\n\005tasks\030\003 \003(\013"
    "2&.kentik.synthetics.v202202.TaskResults"
    "B)\222A&2$List of results for individual ta"
    "sksR\005tasks\"\352\002\n\013TestResults\022K\n\007test_id\030\001 "
    "\001(\tB2\222A/2-ID of the test for which resul"
    "ts are providedR\006testId\022L\n\004time\030\002 \001(\0132\032."
    "google.protobuf.TimestampB\034\222A\0312\027Results "
    "timestamp (UTC)R\004time\0226\n\006health\030\003 \001(\tB\036\222"
    "A\0332\031Health status of the testR\006health\022\207\001"
    "\n\006agents\030\004 \003(\0132\'.kentik.synthetics.v2022"
    "02.AgentResultsBF\222AC2AList of results fr"
    "om agents executing tasks on behalf of t"
    "he testR\006agents\"\201\001\n\005Stats\022,\n\007average\030\001 \001"
    "(\005B\022\222A\0172\rAverage valueR\007average\022$\n\003min\030\002"
    " \001(\005B\022\222A\0172\rMinimum valueR\003min\022$\n\003max\030\003 \001"
    "(\005B\022\222A\0172\rMaximum valueR\003max\"\301\002\n\010Location"
    "\022C\n\010latitude\030\010 \001(\001B\'\222A$2\"Latitude in sig"
    "ned decimal degreesR\010latitude\022F\n\tlongitu"
    "de\030\t \001(\001B(\222A%2#Longitude in signed decim"
    "al degreesR\tlongitude\0226\n\007country\030\001 \001(\tB\034"
    "\222A\0312\027Country of the locationR\007country\022A\n"
    "\006region\030\002 \001(\tB)\222A&2$Geographic region wi"
    "thin the countryR\006region\022-\n\004city\030\003 \001(\tB\031"
    "\222A\0262\024City of the locationR\004city\"\206\005\n\007NetN"
    "ode\022H\n\002ip\030\002 \001(\tB8\222A523IP address of the "
    "node in standard textual notationR\002ip\022\?\n"
    "\003asn\030\003 \001(\rB-\222A*2(AS number owning the ad"
    "dress of the nodeR\003asn\022K\n\007as_name\030\004 \001(\tB"
    "2\222A/2-Name of the AS owning the address "
    "of the nodeR\006asName\022h\n\010location\030\005 \001(\0132#."
    "kentik.synthetics.v202202.LocationB\'\222A$2"
    "\"Location of IP address of the nodeR\010loc"
    "ation\022Y\n\010dns_name\030\006 \001(\tB>\222A;29DNS name o"
    "f the node (obtained by reverse DNS reso"
    "lution)R\007dnsName\022f\n\tdevice_id\030\007 \001(\tBI\222AF"
    "2DID of the device corresponding with th"
    "e node in Kentik configurationR\010deviceId"
    "\022v\n\007site_id\030\010 \001(\tB]\222AZ2XID of the site c"
    "ontaining the device corresponding with "
    "the node in Kentik configurationR\006siteId"
    "\"\363\001\n\010TraceHop\022v\n\007latency\030\003 \001(\005B\\\222AY2WRou"
    "nd-trip packet latency to the node (in m"
    "icroseconds) - 0 if no response was rece"
    "ivedR\007latency\022o\n\007node_id\030\005 \001(\tBV\222AS2QID "
    "of the node for this hop in the Nodes ma"
    "p  - empty if no response was receivedR\006"
    "nodeId\"\374\001\n\tPathTrace\022:\n\007as_path\030\001 \003(\005B!\222"
    "A\0362\034AS path of the network traceR\006asPath"
    "\022Z\n\013is_complete\030\002 \001(\010B9\222A624Indication w"
    "hether response from target was received"
    "R\nisComplete\022W\n\004hops\030\006 \003(\0132#.kentik.synt"
    "hetics.v202202.TraceHopB\036\222A\0332\031List of ho"
    "ps in the traceR\004hops\"\250\004\n\004Path\022H\n\010agent_"
    "id\030\001 \001(\tB-\222A*2(ID of the agent generatin"
    "g the path dataR\007agentId\022F\n\ttarget_ip\030\003 "
    "\001(\tB)\222A&2$IP address of the target of th"
    "e pathR\010targetIp\022j\n\thop_count\030\004 \001(\0132 .ke"
    "ntik.synthetics.v202202.StatsB+\222A(2&Hop "
    "count statistics across all tracesR\010hopC"
    "ount\022]\n\022max_as_path_length\030\007 \001(\005B0\222A-2+M"
    "aximum length of AS path across all trac"
    "esR\017maxAsPathLength\022]\n\006traces\030\010 \003(\0132$.ke"
    "ntik.synthetics.v202202.PathTraceB\037\222A\0342\032"
    "Data for individual tracesR\006traces\022d\n\004ti"
    "me\030\t \001(\0132\032.google.protobuf.TimestampB4\222A"
    "12/Timestamp (UTC) of initiation of the "
    "path traceR\004time\"\222\005\n\031GetResultsForTestsR"
    "equest\022H\n\003ids\030\001 \003(\tB6\222A02.List of test I"
    "Ds for which to retrieve results\340A\002R\003ids"
    "\022x\n\nstart_time\030\002 \001(\0132\032.google.protobuf.T"
    "imestampB=\222A725Timestamp of the oldest r"
    "esults to include in results\340A\002R\tstartTi"
    "me\022t\n\010end_time\030\003 \001(\0132\032.google.protobuf.T"
    "imestampB=\222A725Timestamp of the newest r"
    "esults to include in results\340A\002R\007endTime"
    "\022P\n\tagent_ids\030\004 \003(\tB3\222A02.List of agent "
    "IDs from which to return resultsR\010agentI"
    "ds\022]\n\007targets\030\005 \003(\tBC\222A@2>List of target"
    "s (test dependent) for which to retrieve"
    " resultsR\007targets\022\211\001\n\taggregate\030\006 \001(\010Bk\222"
    "Ah2fIf true, retrieve result aggregated "
    "across the requested time period, else r"
    "eturn complete time seriesR\taggregate\"^\n"
    "\032GetResultsForTestsResponse\022@\n\007results\030\001"
    " \003(\0132&.kentik.synthetics.v202202.TestRes"
    "ultsR\007results\"\210\004\n\026GetTraceForTestRequest"
    "\022M\n\002id\030\001 \001(\tB=\222A:28ID of test for which "
    "to retrieve network path trace dataR\002id\022"
    "x\n\nstart_time\030\002 \001(\0132\032.google.protobuf.Ti"
    "mestampB=\222A725Timestamp of the oldest re"
    "sults to include in results\340A\002R\tstartTim"
    "e\022t\n\010end_time\030\003 \001(\0132\032.google.protobuf.Ti"
    "mestampB=\222A725Timestamp of the newest re"
    "sults to include in results\340A\002R\007endTime\022"
    "P\n\tagent_ids\030\004 \003(\tB3\222A02.List of agent I"
    "Ds from which to return resultsR\010agentId"
    "s\022]\n\ntarget_ips\030\005 \003(\tB>\222A;29List of targ"
    "et IP addresses for which to retrieve re"
    "sultsR\ttargetIps\"\346\002\n\027GetTraceForTestResp"
    "onse\022\213\001\n\005nodes\030\001 \003(\0132=.kentik.synthetics"
    ".v202202.GetTraceForTestResponse.NodesEn"
    "tryB6\222A321Map of network node informatio"
    "n keyed by node IDsR\005nodes\022_\n\005paths\030\002 \003("
    "\0132\037.kentik.synthetics.v202202.PathB(\222A%2"
    "#List of retrieved network path dataR\005pa"
    "ths\032\\\n\nNodesEntry\022\020\n\003key\030\001 \001(\tR\003key\0228\n\005v"
    "alue\030\002 \001(\0132\".kentik.synthetics.v202202.N"
    "etNodeR\005value:\0028\001\"\023\n\021ListAgentsRequest\"\324"
    "\001\n\022ListAgentsResponse\022W\n\006agents\030\001 \003(\0132 ."
    "kentik.synthetics.v202202.AgentB\035\222A\0322\030Li"
    "st of available agentsR\006agents\022e\n\rinvali"
    "d_count\030\002 \001(\rB@\222A=2;Number of invalid en"
    "tries encountered while collecting dataR"
    "\014invalidCount\"D\n\017GetAgentRequest\0221\n\002id\030\001"
    " \001(\tB!\222A\0332\031ID of the requested agent\340A\002R"
    "\002id\"t\n\020GetAgentResponse\022`\n\005agent\030\001 \001(\0132 "
    ".kentik.synthetics.v202202.AgentB(\222A%2#A"
    "gent configuration and status dataR\005agen"
    "t\"k\n\022UpdateAgentRequest\022U\n\005agent\030\001 \001(\0132 "
    ".kentik.synthetics.v202202.AgentB\035\222A\0322\030A"
    "gent configuration dataR\005agent\"w\n\023Update"
    "AgentResponse\022`\n\005agent\030\001 \001(\0132 .kentik.sy"
    "nthetics.v202202.AgentB(\222A%2#Agent confi"
    "guration and status dataR\005agent\"K\n\022Delet"
    "eAgentRequest\0225\n\002id\030\001 \001(\tB%\222A\0372\035ID of th"
    "e agent to be deleted\340A\002R\002id\"\025\n\023DeleteAg"
    "entResponse\"\022\n\020ListTestsRequest\"\341\001\n\021List"
    "TestsResponse\022e\n\005tests\030\001 \003(\0132\037.kentik.sy"
    "nthetics.v202202.TestB.\222A+2)List of conf"
    "igured active or paused testsR\005tests\022e\n\r"
    "invalid_count\030\002 \001(\rB@\222A=2;Number of inva"
    "lid entries encountered while collecting"
    " dataR\014invalidCount\"i\n\021CreateTestRequest"
    "\022T\n\004test\030\001 \001(\0132\037.kentik.synthetics.v2022"
    "02.TestB\037\222A\0312\027Test configuration data\340A\002"
    "R\004test\"r\n\022CreateTestResponse\022\\\n\004test\030\001 \001"
    "(\0132\037.kentik.synthetics.v202202.TestB\'\222A$"
    "2\"Test configuration and status dataR\004te"
    "st\">\n\016GetTestRequest\022,\n\002id\030\001 \001(\tB\034\222A\0262\024I"
    "D of requested test\340A\002R\002id\"o\n\017GetTestRes"
    "ponse\022\\\n\004test\030\001 \001(\0132\037.kentik.synthetics."
    "v202202.TestB\'\222A$2\"Test configuration an"
    "d status dataR\004test\"f\n\021UpdateTestRequest"
    "\022Q\n\004test\030\001 \001(\0132\037.kentik.synthetics.v2022"
    "02.TestB\034\222A\0312\027Test configuration dataR\004t"
    "est\"r\n\022UpdateTestResponse\022\\\n\004test\030\001 \001(\0132"
    "\037.kentik.synthetics.v202202.TestB\'\222A$2\"T"
    "est configuration and status dataR\004test\""
    "I\n\021DeleteTestRequest\0224\n\002id\030\001 \001(\tB$\222A\0362\034I"
    "D of the test to be deleted\340A\002R\002id\"\024\n\022De"
    "leteTestResponse\"\270\001\n\024SetTestStatusReques"
    "t\022E\n\002id\030\001 \001(\tB5\222A/2-ID of the test which"
    " status is to be modified\340A\002R\002id\022Y\n\006stat"
    "us\030\002 \001(\0162%.kentik.synthetics.v202202.Tes"
    "tStatusB\032\222A\0242\022Target test status\340A\002R\006sta"
    "tus\"\027\n\025SetTestStatusResponse*}\n\rImplemen"
    "tType\022\036\n\032IMPLEMENT_TYPE_UNSPECIFIED\020\000\022\027\n"
    "\023IMPLEMENT_TYPE_RUST\020\001\022\027\n\023IMPLEMENT_TYPE"
    "_NODE\020\002\022\032\n\026IMPLEMENT_TYPE_NETWORK\020\003*]\n\010I"
    "PFamily\022\031\n\025IP_FAMILY_UNSPECIFIED\020\000\022\020\n\014IP"
    "_FAMILY_V4\020\001\022\020\n\014IP_FAMILY_V6\020\002\022\022\n\016IP_FAM"
    "ILY_DUAL\020\003*\213\001\n\nTestStatus\022\033\n\027TEST_STATUS"
    "_UNSPECIFIED\020\000\022\026\n\022TEST_STATUS_ACTIVE\020\001\022\026"
    "\n\022TEST_STATUS_PAUSED\020\002\022\027\n\023TEST_STATUS_DE"
    "LETED\020\003\022\027\n\023TEST_STATUS_PREVIEW\020\004*q\n\013Agen"
    "tStatus\022\034\n\030AGENT_STATUS_UNSPECIFIED\020\000\022\023\n"
    "\017AGENT_STATUS_OK\020\001\022\025\n\021AGENT_STATUS_WAIT\020"
    "\002\022\030\n\024AGENT_STATUS_DELETED\020\003*\310\001\n\tDNSRecor"
    "d\022\032\n\026DNS_RECORD_UNSPECIFIED\020\000\022\020\n\014DNS_REC"
    "ORD_A\020\001\022\023\n\017DNS_RECORD_AAAA\020\002\022\024\n\020DNS_RECO"
    "RD_CNAME\020\003\022\024\n\020DNS_RECORD_DNAME\020\004\022\021\n\rDNS_"
    "RECORD_NS\020\005\022\021\n\rDNS_RECORD_MX\020\006\022\022\n\016DNS_RE"
    "CORD_PTR\020\007\022\022\n\016DNS_RECORD_SOA\020\0102\312\005\n\025Synth"
    "eticsDataService\022\263\002\n\022GetResultsForTests\022"
    "4.kentik.synthetics.v202202.GetResultsFo"
    "rTestsRequest\0325.kentik.synthetics.v20220"
    "2.GetResultsForTestsResponse\"\257\001\222As\022\025Get "
    "results for tests\032FReturns probe results"
    " for a set of tests for specified period"
    " of time.*\022GetResultsForTests\362\327\002\017synthet"
    "ics:read\202\323\344\223\002 \"\033/synthetics/v202202/resu"
    "lts:\001*\022\320\002\n\017GetTraceForTest\0221.kentik.synt"
    "hetics.v202202.GetTraceForTestRequest\0322."
    "kentik.synthetics.v202202.GetTraceForTes"
    "tResponse\"\325\001\222A\232\001\022!Get network trace data"
    " for a test\032dGet network trace data for "
    "a specific synthetic test. The test must"
    " have traceroute task configured.*\017GetTr"
    "aceForTest\362\327\002\017synthetics:read\202\323\344\223\002\036\"\031/sy"
    "nthetics/v202202/trace:\001*\032(\312A\023grpc.api.k"
    "entik.com\352\327\002\nsynthetics\220\330\002\0032\312\030\n\026Syntheti"
    "csAdminService\022\247\002\n\nListAgents\022,.kentik.s"
    "ynthetics.v202202.ListAgentsRequest\032-.ke"
    "ntik.synthetics.v202202.ListAgentsRespon"
    "se\"\273\001\222Ac\022\025List available agents\032>Returns"
    " list of all synthetic agents available "
    "in the account.*\nListAgents\362\327\002\025admin.syn"
    "thetics:read\222\330\002\026synthetics.agent::read\202\323"
    "\344\223\002\034\022\032/synthetics/v202202/agents\022\247\002\n\010Get"
    "Agent\022*.kentik.synthetics.v202202.GetAge"
    "ntRequest\032+.kentik.synthetics.v202202.Ge"
    "tAgentResponse\"\301\001\222Ad\022\036Get information ab"
    "out an agent\0328Returns information about "
    "the requested synthetic agent.*\010GetAgent"
    "\362\327\002\025admin.synthetics:read\222\330\002\026synthetics."
    "agent::read\202\323\344\223\002!\022\037/synthetics/v202202/a"
    "gents/{id}\022\263\002\n\013UpdateAgent\022-.kentik.synt"
    "hetics.v202202.UpdateAgentRequest\032..kent"
    "ik.synthetics.v202202.UpdateAgentRespons"
    "e\"\304\001\222A[\022 Update configuration of an agen"
    "t\032*Update configuration of a synthetic a"
    "gent.*\013UpdateAgent\362\327\002\026admin.synthetics:w"
    "rite\222\330\002\030synthetics.agent::update\202\323\344\223\002*\032%"
    "/synthetics/v202202/agents/{agent.id}:\001*"
    "\022\311\002\n\013DeleteAgent\022-.kentik.synthetics.v20"
    "2202.DeleteAgentRequest\032..kentik.synthet"
    "ics.v202202.DeleteAgentResponse\"\332\001\222Az\022\017D"
    "elete an agent\032ZDeletes the requested ag"
    "ent. The deleted agent is removed from c"
    "onfiguration of all tests.*\013DeleteAgent\362"
    "\327\002\026admin.synthetics:write\222\330\002\030synthetics."
    "agent::delete\202\323\344\223\002!*\037/synthetics/v202202"
    "/agents/{id}\022\237\002\n\tListTests\022+.kentik.synt"
    "hetics.v202202.ListTestsRequest\032,.kentik"
    ".synthetics.v202202.ListTestsResponse\"\266\001"
    "\222A`\022\016List all tests\032CReturns a list of a"
    "ll configured active and paused syntheti"
    "c tests.*\tListTests\362\327\002\025admin.synthetics:"
    "read\222\330\002\025synthetics.test::read\202\323\344\223\002\033\022\031/sy"
    "nthetics/v202202/tests\022\252\002\n\nCreateTest\022,."
    "kentik.synthetics.v202202.CreateTestRequ"
    "est\032-.kentik.synthetics.v202202.CreateTe"
    "stResponse\"\276\001\222Ab\022\rCreate a test\032ECreate "
    "synthetic test based on configuration pr"
    "ovided in the request.*\nCreateTest\362\327\002\026ad"
    "min.synthetics:write\222\330\002\027synthetics.test:"
    ":create\202\323\344\223\002\036\"\031/synthetics/v202202/tests"
    ":\001*\022\251\002\n\007GetTest\022).kentik.synthetics.v202"
    "202.GetTestRequest\032*.kentik.synthetics.v"
    "202202.GetTestResponse\"\306\001\222Ak\022\034Get inform"
    "ation about a test\032BReturns configuratio"
    "n and status for the requested synthetic"
    " test.*\007GetTest\362\327\002\025admin.synthetics:read"
    "\222\330\002\025synthetics.test::read\202\323\344\223\002 \022\036/synthe"
    "tics/v202202/tests/{id}\022\252\002\n\nUpdateTest\022,"
    ".kentik.synthetics.v202202.UpdateTestReq"
    "uest\032-.kentik.synthetics.v202202.UpdateT"
    "estResponse\"\276\001\222AX\022\036Update configuration "
    "of a test\032*Updates configuration of a sy"
    "nthetic test.*\nUpdateTest\362\327\002\026admin.synth"
    "etics:write\222\330\002\027synthetics.test::update\202\323"
    "\344\223\002(\032#/synthetics/v202202/tests/{test.id"
    "}:\001*\022\314\002\n\nDeleteTest\022,.kentik.synthetics."
    "v202202.DeleteTestRequest\032-.kentik.synth"
    "etics.v202202.DeleteTestResponse\"\340\001\222A\201\001\022"
    "\030Delete a synthetic test.\032YDeletes the s"
    "ynthetics test. All accumulated results "
    "for the test cease to be accessible.*\nDe"
    "leteTest\362\327\002\026admin.synthetics:write\222\330\002\027sy"
    "nthetics.test::delete\202\323\344\223\002 *\036/synthetics"
    "/v202202/tests/{id}\022\262\002\n\rSetTestStatus\022/."
    "kentik.synthetics.v202202.SetTestStatusR"
    "equest\0320.kentik.synthetics.v202202.SetTe"
    "stStatusResponse\"\275\001\222AU\022!Update status of"
    " a synthetic test\032!Update status of a sy"
    "nthetic test*\rSetTestStatus\362\327\002\026admin.syn"
    "thetics:write\222\330\002\027synthetics.test::update"
    "\202\323\344\223\002*\032%/synthetics/v202202/tests/{id}/s"
    "tatus:\001*\032.\312A\023grpc.api.kentik.com\352\327\002\020admi"
    "n.synthetics\220\330\002\003B\303\?ZOgithub.com/kentik/a"
    "pi-schema-public/gen/go/kentik/synthetic"
    "s/v202202;synthetics\222A\356>\022\204=\n\031Synthetics "
    "Monitoring API\022\226<# Overview\nThe Syntheti"
    "cs Monitoring API provides programmatic "
    "access to Kentik\'s [synthetic monitoring"
    " system](https://kb.kentik.com/v4/Ma00.h"
    "tm). The API consists of two endpoints:\n"
    "| Endpoint | Purpose |\n|-----------|----"
    "-----|\n| SyntheticsAdminService | CRUD o"
    "perations for synthetic tests and agents"
    " |\n| SyntheticsDataService  | Retrieval "
    "of synthetic test results and network tr"
    "aces |\n\nBoth REST endpoint and gRPC RPCs"
    " are provided.\n### Known Limitations\nThe"
    " API currently does not support the foll"
    "owing [Synthetic Test Types](https://kb."
    "kentik.com/v4/Ma00.htm#Ma00-Synthetic_Te"
    "st_Types):\n* BGP Monitor tests, which ar"
    "e supported in a [separate API](https://"
    "github.com/kentik/api-schema-public/blob"
    "/master/proto/kentik/bgp_monitoring/v202"
    "205beta1/bgp_monitoring.proto)\n* Transac"
    "tion tests.\n\n### Additional Public Resou"
    "rces\nKentik community [Python](https://g"
    "ithub.com/kentik/community_sdk_python) a"
    "nd [Go](https://github.com/kentik/commun"
    "ity_sdk_golang) SDKs provide language-sp"
    "ecific support for using this and other "
    "Kentik APIs. These SDKs can be also used"
    " as example code for development. \n A [T"
    "erraform provider](https://registry.terr"
    "aform.io/providers/kentik/kentik-synthet"
    "ics) is available for configuring tests "
    "and agents for Kentik synthetic monitori"
    "ng.\n# Anatomy of a Synthetic Test\nEach `"
    "Test` consists of one or more tasks. Tas"
    "ks are executed by monitoring `Agents` t"
    "hat send synthetic traffic (probes) over"
    " the network. The API currently supports"
    " following tasks:\n| Task name  | Purpose"
    " |\n|------------|---------|\n| ping      "
    " | Test basic address, and optionally TC"
    "P port reachability |\n| traceroute (a.k."
    "a. trace)| Discover unidirectional netwo"
    "rk path |\n| http | Perform a simple HTTP"
    "/HTTPS request |\n| page-load | Use headl"
    "ess Chromium to execute an HTTP/HTTPS re"
    "quest |\n| dns | Execute a DNS query|\n\nTh"
    "e set of tasks executed on behalf of a g"
    "iven test depends on the `type` of that "
    "test. The following test types are curre"
    "ntly supported by the API:\n| API type | "
    "Portal (UI) equivalent | Tasks |\n|------"
    "---------|--------------|-------|\n| ip |"
    " IP Address | ping, traceroute |\n| hostn"
    "ame | Hostname | ping, traceroute |\n| ne"
    "twork_grid | Network Grid | ping, tracer"
    "oute |\n| agent | Agent-to-Agent | ping, "
    "traceroute |\n| network_mesh | Network Me"
    "sh | ping, traceroute |\n| flow | Autonom"
    "ous Tests (5 variants) | ping, tracerout"
    "e |\n| url | HTTP(S) or API | http, ping "
    "(optional), traceroute (optional) |\n| pa"
    "ge_load | Page Load | page-load, ping (o"
    "ptional), traceroute (optional) |\n| dns "
    "| DNS Server Monitor | dns |\n| dns_grid "
    "| DNS Server Grid | dns |\n\n***Note:*** `"
    "ping` and `traceroute` tasks are always "
    "run together (never one without the othe"
    "r).\n\n# Test Attributes and Settings\nThe "
    "attributes of the test object enable con"
    "figuration of test settings, access to t"
    "est metadata, and access to runtime stat"
    "e information.\n### State and Metadata At"
    "tributes\n The following table lists the "
    "metadata and state attributes:\n| Attribu"
    "te | Access | Purpose |\n|-----------|---"
    "-----|---------|\n| id | RO | System-gene"
    "rated unique identifier of the test |\n| "
    "name | RW | User specified name for the "
    "test (need not be unique) |\n| type | RO "
    "(after creation) | Type of the test (set"
    " on creation; read-only thereafter) |\n| "
    "status | RW | Life-cycle status of the t"
    "est |\n| cdate | RO | Creation timestamp "
    "|\n| edate | RO | Last-modification times"
    "tamp |\n| created_by | RO | Identity of t"
    "he user that created the test |\n| last_u"
    "pdated_by | RO | Identity of the latest "
    "user to modify the test |\n| labels | RW "
    "| List of names of labels applied to the"
    " test |\n\nTest configuration is performed"
    " via the test\'s `settings` attribute. So"
    "me settings are common to all tests whil"
    "e others are specific to tests of a give"
    "n type.\n### Common Test Settings\nThe fol"
    "lowing settings are used for tests of al"
    "l types:\n| Attribute | Purpose | Require"
    "d |\n|-----------|---------|----------|\n|"
    " agentIds  | IDs of agents to execute ta"
    "sks for the test | YES |\n| period | Test"
    " execution interval in seconds | NO (def"
    "ault 60s) |\n| family | IP address family"
    ". Used only for tests whose type is url "
    "or dns. Selects which type of DNS resour"
    "ce is queried for resolving hostname to "
    "target address | NO (default IP_FAMILY_D"
    "UAL) |\n| notificationChannels | List of "
    "notification channels for the test | NO "
    "(default empty list) |\n| healthSettings "
    "| A HealthSettings object that configure"
    "s health settings for this test, which i"
    "ncludes metric thresholds that define he"
    "alth status (warning and critical) and t"
    "rigger associated alarms. | YES |\n| ping"
    " | A TestPingSettings object that config"
    "ures the ping task of the test | NO (def"
    "ault depends on test type) |\n| trace | A"
    " TestTraceSettings object that configure"
    "s the trace task of the test | NO (defau"
    "lt depends on test type) |\n| tasks | Lis"
    "t of names of the tasks that will be exe"
    "cuted for this test | YES |\n\n### Type-sp"
    "ecific Settings\nEach test type has its o"
    "wn configuration object that represents "
    "the settings for that type. These type-s"
    "pecific objects are referenced by the at"
    "tributes in `Test.settings`:\n| Test type"
    "    | Settings attribute | Configuration"
    " object |\n|--------------|--------------"
    "-----------|---------------------------|"
    "\n| ip           | ip                    "
    "  | IpTest                    |\n| hostna"
    "me     | hostname                | Hostn"
    "ameTest              |\n| network_grid | "
    "networkGrid             | IpTest        "
    "            |\n| agent        | agent    "
    "               | AgentTest              "
    "   |\n| network_mesh | networkMesh       "
    "      | NetworkMeshTest           |\n| fl"
    "ow         | flow                    | F"
    "lowTest                  |\n| url        "
    "  | url                     | UrlTest   "
    "                |\n| page_load    | pageL"
    "oad                | PageLoadTest       "
    "       |\n| dns          | dns           "
    "          | DnsTest                   |\n"
    "| dns_grid     | dnsGrid                "
    " | DnsTest                   |\n\n# Test R"
    "esults\nResults of synthetic tests are re"
    "turned as a sequence of `TestResults` ob"
    "jects. Each such object represents measu"
    "rements and health evaluation for a sing"
    "le test at specific point in time. Measu"
    "rements and health evaluation are groupe"
    "d by agent and by task.\nGranularity of t"
    "imestamps in test results depends on the"
    " frequency (period) of the test and on t"
    "he requested time range. The minimum gra"
    "nularity is 1 minute (even when period <"
    " 1 minute). The longer the time range, t"
    "he lower the granularity.\n# Network Trac"
    "es\nSynthetic tests that include the `tra"
    "ceroute` task collect the unidirectional"
    " network path from the agent to the targ"
    "et for each agent/target pair. The trace"
    " data are returned in the `GetTraceForTe"
    "stResponse` object. The `paths` attribut"
    "e of this object contains the collected "
    "network path for each agent/target pair "
    "and the round-trip time (RTT) to each ho"
    "p.\nHops in actual network traces are ide"
    "ntified by a `nodeId`. The mapping of no"
    "de IDs to address, name, location, and o"
    "ther attributes of the hop is provided i"
    "n a map that is stored in the `nodes` at"
    "tribute of the `GetTraceForTestResponse`"
    " object.\n# Agents\nThe Kentik synthetic m"
    "onitoring system recognizes 2 types of a"
    "gents:\n* **Global** (public): Managed by"
    " Kentik and available to every Kentik us"
    "er. All information about global agents "
    "in this API is read-only.\n* **Private**:"
    " Deployed by each customer and available"
    " only to that customer.\nTo be visible in"
    " this API, a private agent must first as"
    "sociate itself with a customer account b"
    "y contacting the Kentik system (via priv"
    "ate API). Once the agent is associated i"
    "t can be authorized via the API by chang"
    "ing its `status` to `AGENT_STATUS_OK`. F"
    "or more information about private agent "
    "deployment, see [**Synthetic Agent Deplo"
    "yments**](https://kb.kentik.com/v4/Ma01."
    "htm#Ma01-Synthetic_Agent_Deployments).\n\""
    "E\n\026Kentik API Engineering\022+https://githu"
    "b.com/kentik/api-schema-public2\007v202202*"
    "\001\0022\020application/json:\020application/jsonZD"
    "\n\036\n\005email\022\025\010\002\032\017X-CH-Auth-Email \002\n\"\n\005toke"
    "n\022\031\010\002\032\023X-CH-Auth-API-Token \002b\026\n\t\n\005email\022"
    "\000\n\t\n\005token\022\000r`\n\"Kentik synthetic monitor"
    "ing system\022:https://kb.kentik.com/v4/Ma0"
    "0.htm#Ma00-Synthetics_Overviewb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto_deps[7] =
    {
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_google_2fapi_2fclient_2eproto,
        &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_kentik_2fcore_2fv202303_2fannotations_2eproto,
        &::descriptor_table_kentik_2fcore_2fv202303_2fuser_5finfo_2eproto,
        &::descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto = {
    false,
    false,
    34878,
    descriptor_table_protodef_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    "kentik/synthetics/v202202/synthetics.proto",
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto_once,
    descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto_deps,
    7,
    61,
    schemas,
    file_default_instances,
    TableStruct_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto::offsets,
    file_level_enum_descriptors_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    file_level_service_descriptors_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
};
namespace kentik {
namespace synthetics {
namespace v202202 {
const ::google::protobuf::EnumDescriptor* ImplementType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto);
  return file_level_enum_descriptors_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ImplementType_internal_data_[] = {
    262144u, 0u, };
bool ImplementType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* IPFamily_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto);
  return file_level_enum_descriptors_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t IPFamily_internal_data_[] = {
    262144u, 0u, };
bool IPFamily_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* TestStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto);
  return file_level_enum_descriptors_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t TestStatus_internal_data_[] = {
    327680u, 0u, };
bool TestStatus_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* AgentStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto);
  return file_level_enum_descriptors_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t AgentStatus_internal_data_[] = {
    262144u, 0u, };
bool AgentStatus_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* DNSRecord_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto);
  return file_level_enum_descriptors_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t DNSRecord_internal_data_[] = {
    589824u, 0u, };
bool DNSRecord_IsValid(int value) {
  return 0 <= value && value <= 8;
}
// ===================================================================

class Agent::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Agent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Agent, _impl_._has_bits_);
};

void Agent::clear_last_authed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_authed_ != nullptr) _impl_.last_authed_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Agent::Agent(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.Agent)
}
inline PROTOBUF_NDEBUG_INLINE Agent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::Agent& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        test_ids_{visibility, arena, from.test_ids_},
        labels_{visibility, arena, from.labels_},
        id_(arena, from.id_),
        site_name_(arena, from.site_name_),
        alias_(arena, from.alias_),
        type_(arena, from.type_),
        os_(arena, from.os_),
        ip_(arena, from.ip_),
        site_id_(arena, from.site_id_),
        version_(arena, from.version_),
        city_(arena, from.city_),
        region_(arena, from.region_),
        country_(arena, from.country_),
        local_ip_(arena, from.local_ip_),
        cloud_region_(arena, from.cloud_region_),
        cloud_provider_(arena, from.cloud_provider_) {}

Agent::Agent(
    ::google::protobuf::Arena* arena,
    const Agent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Agent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.last_authed_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.last_authed_)
                        : nullptr;
  _impl_.metadata_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::AgentMetadata>(
                              arena, *from._impl_.metadata_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, status_),
           offsetof(Impl_, agent_impl_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::agent_impl_));

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.Agent)
}
inline PROTOBUF_NDEBUG_INLINE Agent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        test_ids_{visibility, arena},
        labels_{visibility, arena},
        id_(arena),
        site_name_(arena),
        alias_(arena),
        type_(arena),
        os_(arena),
        ip_(arena),
        site_id_(arena),
        version_(arena),
        city_(arena),
        region_(arena),
        country_(arena),
        local_ip_(arena),
        cloud_region_(arena),
        cloud_provider_(arena) {}

inline void Agent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, last_authed_),
           0,
           offsetof(Impl_, agent_impl_) -
               offsetof(Impl_, last_authed_) +
               sizeof(Impl_::agent_impl_));
}
Agent::~Agent() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.Agent)
  SharedDtor(*this);
}
inline void Agent::SharedDtor(MessageLite& self) {
  Agent& this_ = static_cast<Agent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.site_name_.Destroy();
  this_._impl_.alias_.Destroy();
  this_._impl_.type_.Destroy();
  this_._impl_.os_.Destroy();
  this_._impl_.ip_.Destroy();
  this_._impl_.site_id_.Destroy();
  this_._impl_.version_.Destroy();
  this_._impl_.city_.Destroy();
  this_._impl_.region_.Destroy();
  this_._impl_.country_.Destroy();
  this_._impl_.local_ip_.Destroy();
  this_._impl_.cloud_region_.Destroy();
  this_._impl_.cloud_provider_.Destroy();
  delete this_._impl_.last_authed_;
  delete this_._impl_.metadata_;
  this_._impl_.~Impl_();
}

inline void* Agent::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Agent(arena);
}
constexpr auto Agent::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Agent, _impl_.test_ids_) +
          decltype(Agent::_impl_.test_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Agent, _impl_.labels_) +
          decltype(Agent::_impl_.labels_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Agent), alignof(Agent), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Agent::PlacementNew_,
                                 sizeof(Agent),
                                 alignof(Agent));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Agent::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Agent_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Agent::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Agent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Agent::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Agent>(), &Agent::ByteSizeLong,
            &Agent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Agent, _impl_._cached_size_),
        false,
    },
    &Agent::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Agent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 24, 2, 167, 2> Agent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Agent, _impl_._has_bits_),
    0, // no _extensions_
    26, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4228923392,  // skipmap
    offsetof(decltype(_table_), field_entries),
    24,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::Agent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.id_)}},
    // string site_name = 2 [json_name = "siteName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.site_name_)}},
    // .kentik.synthetics.v202202.AgentStatus status = 3 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Agent, _impl_.status_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.status_)}},
    // string alias = 4 [json_name = "alias", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.alias_)}},
    // string type = 5 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.type_)}},
    // string os = 6 [json_name = "os", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.os_)}},
    // string ip = 7 [json_name = "ip", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.ip_)}},
    // double lat = 8 [json_name = "lat", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF64S1,
     {65, 63, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.lat_)}},
    // double long = 9 [json_name = "long", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF64S1,
     {73, 63, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.long__)}},
    // .google.protobuf.Timestamp last_authed = 10 [json_name = "lastAuthed", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {82, 0, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.last_authed_)}},
    // .kentik.synthetics.v202202.IPFamily family = 11 [json_name = "family", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Agent, _impl_.family_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.family_)}},
    // uint32 asn = 12 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Agent, _impl_.asn_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.asn_)}},
    // string site_id = 13 [json_name = "siteId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.site_id_)}},
    // string version = 14 [json_name = "version", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.version_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string city = 16 [json_name = "city", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.city_)}},
    // string region = 17 [json_name = "region", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.region_)}},
    // string country = 18 [json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {402, 63, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.country_)}},
    // repeated string test_ids = 19 [json_name = "testIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR2,
     {410, 63, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.test_ids_)}},
    // string local_ip = 20 [json_name = "localIp", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {418, 63, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.local_ip_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string cloud_region = 22 [json_name = "cloudRegion", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {434, 63, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.cloud_region_)}},
    // string cloud_provider = 23 [json_name = "cloudProvider", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {442, 63, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.cloud_provider_)}},
    // .kentik.synthetics.v202202.ImplementType agent_impl = 24 [json_name = "agentImpl", (.google.api.field_behavior) = OUTPUT_ONLY];
    {::_pbi::TcParser::FastV32S2,
     {448, 63, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.agent_impl_)}},
    // repeated string labels = 25 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR2,
     {458, 63, 0, PROTOBUF_FIELD_OFFSET(Agent, _impl_.labels_)}},
    // .kentik.synthetics.v202202.AgentMetadata metadata = 26 [json_name = "metadata", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS2,
     {466, 1, 1, PROTOBUF_FIELD_OFFSET(Agent, _impl_.metadata_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string site_name = 2 [json_name = "siteName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.site_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .kentik.synthetics.v202202.AgentStatus status = 3 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string alias = 4 [json_name = "alias", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.alias_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 5 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string os = 6 [json_name = "os", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.os_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ip = 7 [json_name = "ip", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.ip_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double lat = 8 [json_name = "lat", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.lat_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double long = 9 [json_name = "long", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.long__), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // .google.protobuf.Timestamp last_authed = 10 [json_name = "lastAuthed", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.last_authed_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.synthetics.v202202.IPFamily family = 11 [json_name = "family", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.family_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint32 asn = 12 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.asn_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string site_id = 13 [json_name = "siteId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.site_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string version = 14 [json_name = "version", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.version_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string city = 16 [json_name = "city", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.city_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string region = 17 [json_name = "region", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.region_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string country = 18 [json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.country_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string test_ids = 19 [json_name = "testIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.test_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string local_ip = 20 [json_name = "localIp", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.local_ip_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string cloud_region = 22 [json_name = "cloudRegion", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.cloud_region_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string cloud_provider = 23 [json_name = "cloudProvider", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.cloud_provider_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .kentik.synthetics.v202202.ImplementType agent_impl = 24 [json_name = "agentImpl", (.google.api.field_behavior) = OUTPUT_ONLY];
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.agent_impl_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated string labels = 25 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.labels_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .kentik.synthetics.v202202.AgentMetadata metadata = 26 [json_name = "metadata", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Agent, _impl_.metadata_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::AgentMetadata>()},
  }}, {{
    "\37\2\11\0\5\4\2\2\0\0\0\0\0\7\7\4\6\7\10\10\14\16\0\6\0\0\0\0\0\0\0\0"
    "kentik.synthetics.v202202.Agent"
    "id"
    "site_name"
    "alias"
    "type"
    "os"
    "ip"
    "site_id"
    "version"
    "city"
    "region"
    "country"
    "test_ids"
    "local_ip"
    "cloud_region"
    "cloud_provider"
    "labels"
  }},
};

PROTOBUF_NOINLINE void Agent::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.Agent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.test_ids_.Clear();
  _impl_.labels_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.site_name_.ClearToEmpty();
  _impl_.alias_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  _impl_.os_.ClearToEmpty();
  _impl_.ip_.ClearToEmpty();
  _impl_.site_id_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _impl_.city_.ClearToEmpty();
  _impl_.region_.ClearToEmpty();
  _impl_.country_.ClearToEmpty();
  _impl_.local_ip_.ClearToEmpty();
  _impl_.cloud_region_.ClearToEmpty();
  _impl_.cloud_provider_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.last_authed_ != nullptr);
      _impl_.last_authed_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.metadata_ != nullptr);
      _impl_.metadata_->Clear();
    }
  }
  ::memset(&_impl_.status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.agent_impl_) -
      reinterpret_cast<char*>(&_impl_.status_)) + sizeof(_impl_.agent_impl_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Agent::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Agent& this_ = static_cast<const Agent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Agent::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Agent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.Agent)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Agent.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string site_name = 2 [json_name = "siteName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_site_name().empty()) {
            const std::string& _s = this_._internal_site_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Agent.site_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .kentik.synthetics.v202202.AgentStatus status = 3 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_status(), target);
          }

          // string alias = 4 [json_name = "alias", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_alias().empty()) {
            const std::string& _s = this_._internal_alias();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Agent.alias");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string type = 5 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_type().empty()) {
            const std::string& _s = this_._internal_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Agent.type");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string os = 6 [json_name = "os", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_os().empty()) {
            const std::string& _s = this_._internal_os();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Agent.os");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string ip = 7 [json_name = "ip", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_ip().empty()) {
            const std::string& _s = this_._internal_ip();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Agent.ip");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // double lat = 8 [json_name = "lat", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint64_t>(this_._internal_lat()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                8, this_._internal_lat(), target);
          }

          // double long = 9 [json_name = "long", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint64_t>(this_._internal_long_()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                9, this_._internal_long_(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp last_authed = 10 [json_name = "lastAuthed", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.last_authed_, this_._impl_.last_authed_->GetCachedSize(), target,
                stream);
          }

          // .kentik.synthetics.v202202.IPFamily family = 11 [json_name = "family", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_family() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                11, this_._internal_family(), target);
          }

          // uint32 asn = 12 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_asn() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                12, this_._internal_asn(), target);
          }

          // string site_id = 13 [json_name = "siteId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_site_id().empty()) {
            const std::string& _s = this_._internal_site_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Agent.site_id");
            target = stream->WriteStringMaybeAliased(13, _s, target);
          }

          // string version = 14 [json_name = "version", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_version().empty()) {
            const std::string& _s = this_._internal_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Agent.version");
            target = stream->WriteStringMaybeAliased(14, _s, target);
          }

          // string city = 16 [json_name = "city", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_city().empty()) {
            const std::string& _s = this_._internal_city();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Agent.city");
            target = stream->WriteStringMaybeAliased(16, _s, target);
          }

          // string region = 17 [json_name = "region", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_region().empty()) {
            const std::string& _s = this_._internal_region();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Agent.region");
            target = stream->WriteStringMaybeAliased(17, _s, target);
          }

          // string country = 18 [json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_country().empty()) {
            const std::string& _s = this_._internal_country();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Agent.country");
            target = stream->WriteStringMaybeAliased(18, _s, target);
          }

          // repeated string test_ids = 19 [json_name = "testIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_test_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_test_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Agent.test_ids");
            target = stream->WriteString(19, s, target);
          }

          // string local_ip = 20 [json_name = "localIp", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_local_ip().empty()) {
            const std::string& _s = this_._internal_local_ip();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Agent.local_ip");
            target = stream->WriteStringMaybeAliased(20, _s, target);
          }

          // string cloud_region = 22 [json_name = "cloudRegion", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_cloud_region().empty()) {
            const std::string& _s = this_._internal_cloud_region();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Agent.cloud_region");
            target = stream->WriteStringMaybeAliased(22, _s, target);
          }

          // string cloud_provider = 23 [json_name = "cloudProvider", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_cloud_provider().empty()) {
            const std::string& _s = this_._internal_cloud_provider();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Agent.cloud_provider");
            target = stream->WriteStringMaybeAliased(23, _s, target);
          }

          // .kentik.synthetics.v202202.ImplementType agent_impl = 24 [json_name = "agentImpl", (.google.api.field_behavior) = OUTPUT_ONLY];
          if (this_._internal_agent_impl() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                24, this_._internal_agent_impl(), target);
          }

          // repeated string labels = 25 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_labels_size(); i < n; ++i) {
            const auto& s = this_._internal_labels().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Agent.labels");
            target = stream->WriteString(25, s, target);
          }

          // .kentik.synthetics.v202202.AgentMetadata metadata = 26 [json_name = "metadata", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                26, *this_._impl_.metadata_, this_._impl_.metadata_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.Agent)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Agent::ByteSizeLong(const MessageLite& base) {
          const Agent& this_ = static_cast<const Agent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Agent::ByteSizeLong() const {
          const Agent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.Agent)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string test_ids = 19 [json_name = "testIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_test_ids().size());
              for (int i = 0, n = this_._internal_test_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_test_ids().Get(i));
              }
            }
            // repeated string labels = 25 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_labels().size());
              for (int i = 0, n = this_._internal_labels().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_labels().Get(i));
              }
            }
          }
           {
            // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string site_name = 2 [json_name = "siteName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_site_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_site_name());
            }
            // string alias = 4 [json_name = "alias", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_alias().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_alias());
            }
            // string type = 5 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type());
            }
            // string os = 6 [json_name = "os", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_os().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_os());
            }
            // string ip = 7 [json_name = "ip", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_ip().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_ip());
            }
            // string site_id = 13 [json_name = "siteId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_site_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_site_id());
            }
            // string version = 14 [json_name = "version", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_version());
            }
            // string city = 16 [json_name = "city", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_city().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_city());
            }
            // string region = 17 [json_name = "region", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_region().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_region());
            }
            // string country = 18 [json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_country().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_country());
            }
            // string local_ip = 20 [json_name = "localIp", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_local_ip().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_local_ip());
            }
            // string cloud_region = 22 [json_name = "cloudRegion", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_cloud_region().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cloud_region());
            }
            // string cloud_provider = 23 [json_name = "cloudProvider", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_cloud_provider().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cloud_provider());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp last_authed = 10 [json_name = "lastAuthed", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.last_authed_);
            }
            // .kentik.synthetics.v202202.AgentMetadata metadata = 26 [json_name = "metadata", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000002u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.metadata_);
            }
          }
           {
            // .kentik.synthetics.v202202.AgentStatus status = 3 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
            // .kentik.synthetics.v202202.IPFamily family = 11 [json_name = "family", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_family() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_family());
            }
            // double lat = 8 [json_name = "lat", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint64_t>(this_._internal_lat()) != 0) {
              total_size += 9;
            }
            // double long = 9 [json_name = "long", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint64_t>(this_._internal_long_()) != 0) {
              total_size += 9;
            }
            // uint32 asn = 12 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_asn() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_asn());
            }
            // .kentik.synthetics.v202202.ImplementType agent_impl = 24 [json_name = "agentImpl", (.google.api.field_behavior) = OUTPUT_ONLY];
            if (this_._internal_agent_impl() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_agent_impl());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Agent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Agent*>(&to_msg);
  auto& from = static_cast<const Agent&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.Agent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_test_ids()->MergeFrom(from._internal_test_ids());
  _this->_internal_mutable_labels()->MergeFrom(from._internal_labels());
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_site_name().empty()) {
    _this->_internal_set_site_name(from._internal_site_name());
  }
  if (!from._internal_alias().empty()) {
    _this->_internal_set_alias(from._internal_alias());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_os().empty()) {
    _this->_internal_set_os(from._internal_os());
  }
  if (!from._internal_ip().empty()) {
    _this->_internal_set_ip(from._internal_ip());
  }
  if (!from._internal_site_id().empty()) {
    _this->_internal_set_site_id(from._internal_site_id());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_city().empty()) {
    _this->_internal_set_city(from._internal_city());
  }
  if (!from._internal_region().empty()) {
    _this->_internal_set_region(from._internal_region());
  }
  if (!from._internal_country().empty()) {
    _this->_internal_set_country(from._internal_country());
  }
  if (!from._internal_local_ip().empty()) {
    _this->_internal_set_local_ip(from._internal_local_ip());
  }
  if (!from._internal_cloud_region().empty()) {
    _this->_internal_set_cloud_region(from._internal_cloud_region());
  }
  if (!from._internal_cloud_provider().empty()) {
    _this->_internal_set_cloud_provider(from._internal_cloud_provider());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.last_authed_ != nullptr);
      if (_this->_impl_.last_authed_ == nullptr) {
        _this->_impl_.last_authed_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.last_authed_);
      } else {
        _this->_impl_.last_authed_->MergeFrom(*from._impl_.last_authed_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.metadata_ != nullptr);
      if (_this->_impl_.metadata_ == nullptr) {
        _this->_impl_.metadata_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::AgentMetadata>(arena, *from._impl_.metadata_);
      } else {
        _this->_impl_.metadata_->MergeFrom(*from._impl_.metadata_);
      }
    }
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  if (from._internal_family() != 0) {
    _this->_impl_.family_ = from._impl_.family_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_lat()) != 0) {
    _this->_impl_.lat_ = from._impl_.lat_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_long_()) != 0) {
    _this->_impl_.long__ = from._impl_.long__;
  }
  if (from._internal_asn() != 0) {
    _this->_impl_.asn_ = from._impl_.asn_;
  }
  if (from._internal_agent_impl() != 0) {
    _this->_impl_.agent_impl_ = from._impl_.agent_impl_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Agent::CopyFrom(const Agent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.Agent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Agent::InternalSwap(Agent* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.test_ids_.InternalSwap(&other->_impl_.test_ids_);
  _impl_.labels_.InternalSwap(&other->_impl_.labels_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.site_name_, &other->_impl_.site_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alias_, &other->_impl_.alias_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.os_, &other->_impl_.os_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, &other->_impl_.ip_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.site_id_, &other->_impl_.site_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.city_, &other->_impl_.city_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.region_, &other->_impl_.region_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.country_, &other->_impl_.country_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.local_ip_, &other->_impl_.local_ip_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cloud_region_, &other->_impl_.cloud_region_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cloud_provider_, &other->_impl_.cloud_provider_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Agent, _impl_.agent_impl_)
      + sizeof(Agent::_impl_.agent_impl_)
      - PROTOBUF_FIELD_OFFSET(Agent, _impl_.last_authed_)>(
          reinterpret_cast<char*>(&_impl_.last_authed_),
          reinterpret_cast<char*>(&other->_impl_.last_authed_));
}

::google::protobuf::Metadata Agent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AgentMetadata_IpValue::_Internal {
 public:
};

AgentMetadata_IpValue::AgentMetadata_IpValue(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.AgentMetadata.IpValue)
}
inline PROTOBUF_NDEBUG_INLINE AgentMetadata_IpValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::AgentMetadata_IpValue& from_msg)
      : value_(arena, from.value_),
        _cached_size_{0} {}

AgentMetadata_IpValue::AgentMetadata_IpValue(
    ::google::protobuf::Arena* arena,
    const AgentMetadata_IpValue& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AgentMetadata_IpValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.AgentMetadata.IpValue)
}
inline PROTOBUF_NDEBUG_INLINE AgentMetadata_IpValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_(arena),
        _cached_size_{0} {}

inline void AgentMetadata_IpValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AgentMetadata_IpValue::~AgentMetadata_IpValue() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.AgentMetadata.IpValue)
  SharedDtor(*this);
}
inline void AgentMetadata_IpValue::SharedDtor(MessageLite& self) {
  AgentMetadata_IpValue& this_ = static_cast<AgentMetadata_IpValue&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AgentMetadata_IpValue::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AgentMetadata_IpValue(arena);
}
constexpr auto AgentMetadata_IpValue::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AgentMetadata_IpValue),
                                            alignof(AgentMetadata_IpValue));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AgentMetadata_IpValue::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AgentMetadata_IpValue_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AgentMetadata_IpValue::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AgentMetadata_IpValue>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AgentMetadata_IpValue::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AgentMetadata_IpValue>(), &AgentMetadata_IpValue::ByteSizeLong,
            &AgentMetadata_IpValue::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AgentMetadata_IpValue, _impl_._cached_size_),
        false,
    },
    &AgentMetadata_IpValue::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AgentMetadata_IpValue::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 61, 2> AgentMetadata_IpValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::AgentMetadata_IpValue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 1 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AgentMetadata_IpValue, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string value = 1 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(AgentMetadata_IpValue, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\5\0\0\0\0\0\0"
    "kentik.synthetics.v202202.AgentMetadata.IpValue"
    "value"
  }},
};

PROTOBUF_NOINLINE void AgentMetadata_IpValue::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.AgentMetadata.IpValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AgentMetadata_IpValue::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AgentMetadata_IpValue& this_ = static_cast<const AgentMetadata_IpValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AgentMetadata_IpValue::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AgentMetadata_IpValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.AgentMetadata.IpValue)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string value = 1 [json_name = "value"];
          if (!this_._internal_value().empty()) {
            const std::string& _s = this_._internal_value();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.AgentMetadata.IpValue.value");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.AgentMetadata.IpValue)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AgentMetadata_IpValue::ByteSizeLong(const MessageLite& base) {
          const AgentMetadata_IpValue& this_ = static_cast<const AgentMetadata_IpValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AgentMetadata_IpValue::ByteSizeLong() const {
          const AgentMetadata_IpValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.AgentMetadata.IpValue)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string value = 1 [json_name = "value"];
            if (!this_._internal_value().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_value());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AgentMetadata_IpValue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AgentMetadata_IpValue*>(&to_msg);
  auto& from = static_cast<const AgentMetadata_IpValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.AgentMetadata.IpValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AgentMetadata_IpValue::CopyFrom(const AgentMetadata_IpValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.AgentMetadata.IpValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AgentMetadata_IpValue::InternalSwap(AgentMetadata_IpValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
}

::google::protobuf::Metadata AgentMetadata_IpValue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AgentMetadata::_Internal {
 public:
};

AgentMetadata::AgentMetadata(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.AgentMetadata)
}
inline PROTOBUF_NDEBUG_INLINE AgentMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::AgentMetadata& from_msg)
      : private_ipv4_addresses_{visibility, arena, from.private_ipv4_addresses_},
        public_ipv4_addresses_{visibility, arena, from.public_ipv4_addresses_},
        private_ipv6_addresses_{visibility, arena, from.private_ipv6_addresses_},
        public_ipv6_addresses_{visibility, arena, from.public_ipv6_addresses_},
        _cached_size_{0} {}

AgentMetadata::AgentMetadata(
    ::google::protobuf::Arena* arena,
    const AgentMetadata& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AgentMetadata* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.AgentMetadata)
}
inline PROTOBUF_NDEBUG_INLINE AgentMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : private_ipv4_addresses_{visibility, arena},
        public_ipv4_addresses_{visibility, arena},
        private_ipv6_addresses_{visibility, arena},
        public_ipv6_addresses_{visibility, arena},
        _cached_size_{0} {}

inline void AgentMetadata::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AgentMetadata::~AgentMetadata() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.AgentMetadata)
  SharedDtor(*this);
}
inline void AgentMetadata::SharedDtor(MessageLite& self) {
  AgentMetadata& this_ = static_cast<AgentMetadata&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AgentMetadata::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AgentMetadata(arena);
}
constexpr auto AgentMetadata::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AgentMetadata, _impl_.private_ipv4_addresses_) +
          decltype(AgentMetadata::_impl_.private_ipv4_addresses_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AgentMetadata, _impl_.public_ipv4_addresses_) +
          decltype(AgentMetadata::_impl_.public_ipv4_addresses_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AgentMetadata, _impl_.private_ipv6_addresses_) +
          decltype(AgentMetadata::_impl_.private_ipv6_addresses_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(AgentMetadata, _impl_.public_ipv6_addresses_) +
          decltype(AgentMetadata::_impl_.public_ipv6_addresses_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(AgentMetadata), alignof(AgentMetadata), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AgentMetadata::PlacementNew_,
                                 sizeof(AgentMetadata),
                                 alignof(AgentMetadata));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AgentMetadata::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AgentMetadata_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AgentMetadata::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AgentMetadata>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AgentMetadata::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AgentMetadata>(), &AgentMetadata::ByteSizeLong,
            &AgentMetadata::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AgentMetadata, _impl_._cached_size_),
        false,
    },
    &AgentMetadata::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AgentMetadata::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> AgentMetadata::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::AgentMetadata>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .kentik.synthetics.v202202.AgentMetadata.IpValue public_ipv6_addresses = 4 [json_name = "publicIpv6Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(AgentMetadata, _impl_.public_ipv6_addresses_)}},
    // repeated .kentik.synthetics.v202202.AgentMetadata.IpValue private_ipv4_addresses = 1 [json_name = "privateIpv4Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AgentMetadata, _impl_.private_ipv4_addresses_)}},
    // repeated .kentik.synthetics.v202202.AgentMetadata.IpValue public_ipv4_addresses = 2 [json_name = "publicIpv4Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(AgentMetadata, _impl_.public_ipv4_addresses_)}},
    // repeated .kentik.synthetics.v202202.AgentMetadata.IpValue private_ipv6_addresses = 3 [json_name = "privateIpv6Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(AgentMetadata, _impl_.private_ipv6_addresses_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .kentik.synthetics.v202202.AgentMetadata.IpValue private_ipv4_addresses = 1 [json_name = "privateIpv4Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(AgentMetadata, _impl_.private_ipv4_addresses_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .kentik.synthetics.v202202.AgentMetadata.IpValue public_ipv4_addresses = 2 [json_name = "publicIpv4Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(AgentMetadata, _impl_.public_ipv4_addresses_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .kentik.synthetics.v202202.AgentMetadata.IpValue private_ipv6_addresses = 3 [json_name = "privateIpv6Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(AgentMetadata, _impl_.private_ipv6_addresses_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .kentik.synthetics.v202202.AgentMetadata.IpValue public_ipv6_addresses = 4 [json_name = "publicIpv6Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(AgentMetadata, _impl_.public_ipv6_addresses_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::AgentMetadata_IpValue>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::AgentMetadata_IpValue>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::AgentMetadata_IpValue>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::AgentMetadata_IpValue>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AgentMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.AgentMetadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.private_ipv4_addresses_.Clear();
  _impl_.public_ipv4_addresses_.Clear();
  _impl_.private_ipv6_addresses_.Clear();
  _impl_.public_ipv6_addresses_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AgentMetadata::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AgentMetadata& this_ = static_cast<const AgentMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AgentMetadata::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AgentMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.AgentMetadata)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .kentik.synthetics.v202202.AgentMetadata.IpValue private_ipv4_addresses = 1 [json_name = "privateIpv4Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_private_ipv4_addresses_size());
               i < n; i++) {
            const auto& repfield = this_._internal_private_ipv4_addresses().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .kentik.synthetics.v202202.AgentMetadata.IpValue public_ipv4_addresses = 2 [json_name = "publicIpv4Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_public_ipv4_addresses_size());
               i < n; i++) {
            const auto& repfield = this_._internal_public_ipv4_addresses().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .kentik.synthetics.v202202.AgentMetadata.IpValue private_ipv6_addresses = 3 [json_name = "privateIpv6Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_private_ipv6_addresses_size());
               i < n; i++) {
            const auto& repfield = this_._internal_private_ipv6_addresses().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .kentik.synthetics.v202202.AgentMetadata.IpValue public_ipv6_addresses = 4 [json_name = "publicIpv6Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_public_ipv6_addresses_size());
               i < n; i++) {
            const auto& repfield = this_._internal_public_ipv6_addresses().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.AgentMetadata)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AgentMetadata::ByteSizeLong(const MessageLite& base) {
          const AgentMetadata& this_ = static_cast<const AgentMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AgentMetadata::ByteSizeLong() const {
          const AgentMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.AgentMetadata)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.synthetics.v202202.AgentMetadata.IpValue private_ipv4_addresses = 1 [json_name = "privateIpv4Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_private_ipv4_addresses_size();
              for (const auto& msg : this_._internal_private_ipv4_addresses()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .kentik.synthetics.v202202.AgentMetadata.IpValue public_ipv4_addresses = 2 [json_name = "publicIpv4Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_public_ipv4_addresses_size();
              for (const auto& msg : this_._internal_public_ipv4_addresses()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .kentik.synthetics.v202202.AgentMetadata.IpValue private_ipv6_addresses = 3 [json_name = "privateIpv6Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_private_ipv6_addresses_size();
              for (const auto& msg : this_._internal_private_ipv6_addresses()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .kentik.synthetics.v202202.AgentMetadata.IpValue public_ipv6_addresses = 4 [json_name = "publicIpv6Addresses", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_public_ipv6_addresses_size();
              for (const auto& msg : this_._internal_public_ipv6_addresses()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AgentMetadata::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AgentMetadata*>(&to_msg);
  auto& from = static_cast<const AgentMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.AgentMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_private_ipv4_addresses()->MergeFrom(
      from._internal_private_ipv4_addresses());
  _this->_internal_mutable_public_ipv4_addresses()->MergeFrom(
      from._internal_public_ipv4_addresses());
  _this->_internal_mutable_private_ipv6_addresses()->MergeFrom(
      from._internal_private_ipv6_addresses());
  _this->_internal_mutable_public_ipv6_addresses()->MergeFrom(
      from._internal_public_ipv6_addresses());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AgentMetadata::CopyFrom(const AgentMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.AgentMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AgentMetadata::InternalSwap(AgentMetadata* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.private_ipv4_addresses_.InternalSwap(&other->_impl_.private_ipv4_addresses_);
  _impl_.public_ipv4_addresses_.InternalSwap(&other->_impl_.public_ipv4_addresses_);
  _impl_.private_ipv6_addresses_.InternalSwap(&other->_impl_.private_ipv6_addresses_);
  _impl_.public_ipv6_addresses_.InternalSwap(&other->_impl_.public_ipv6_addresses_);
}

::google::protobuf::Metadata AgentMetadata::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Test::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Test>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Test, _impl_._has_bits_);
};

void Test::clear_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cdate_ != nullptr) _impl_.cdate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Test::clear_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.edate_ != nullptr) _impl_.edate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void Test::clear_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_by_ != nullptr) _impl_.created_by_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void Test::clear_last_updated_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_updated_by_ != nullptr) _impl_.last_updated_by_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
Test::Test(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.Test)
}
inline PROTOBUF_NDEBUG_INLINE Test::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::Test& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        labels_{visibility, arena, from.labels_},
        id_(arena, from.id_),
        name_(arena, from.name_),
        type_(arena, from.type_) {}

Test::Test(
    ::google::protobuf::Arena* arena,
    const Test& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Test* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.settings_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::TestSettings>(
                              arena, *from._impl_.settings_)
                        : nullptr;
  _impl_.cdate_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.cdate_)
                        : nullptr;
  _impl_.edate_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.edate_)
                        : nullptr;
  _impl_.created_by_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::kentik::core::v202303::UserInfo>(
                              arena, *from._impl_.created_by_)
                        : nullptr;
  _impl_.last_updated_by_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::kentik::core::v202303::UserInfo>(
                              arena, *from._impl_.last_updated_by_)
                        : nullptr;
  _impl_.status_ = from._impl_.status_;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.Test)
}
inline PROTOBUF_NDEBUG_INLINE Test::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        labels_{visibility, arena},
        id_(arena),
        name_(arena),
        type_(arena) {}

inline void Test::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, settings_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, settings_) +
               sizeof(Impl_::status_));
}
Test::~Test() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.Test)
  SharedDtor(*this);
}
inline void Test::SharedDtor(MessageLite& self) {
  Test& this_ = static_cast<Test&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.type_.Destroy();
  delete this_._impl_.settings_;
  delete this_._impl_.cdate_;
  delete this_._impl_.edate_;
  delete this_._impl_.created_by_;
  delete this_._impl_.last_updated_by_;
  this_._impl_.~Impl_();
}

inline void* Test::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Test(arena);
}
constexpr auto Test::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Test, _impl_.labels_) +
          decltype(Test::_impl_.labels_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Test), alignof(Test), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Test::PlacementNew_,
                                 sizeof(Test),
                                 alignof(Test));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Test::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Test_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Test::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Test>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Test::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Test>(), &Test::ByteSizeLong,
            &Test::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Test, _impl_._cached_size_),
        false,
    },
    &Test::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Test::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 5, 63, 2> Test::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Test, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965256,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::Test>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Test, _impl_.id_)}},
    // string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Test, _impl_.name_)}},
    // string type = 3 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Test, _impl_.type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .kentik.synthetics.v202202.TestStatus status = 5 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Test, _impl_.status_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Test, _impl_.status_)}},
    // .kentik.synthetics.v202202.TestSettings settings = 6 [json_name = "settings", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(Test, _impl_.settings_)}},
    // .google.protobuf.Timestamp cdate = 7 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 1, PROTOBUF_FIELD_OFFSET(Test, _impl_.cdate_)}},
    // .google.protobuf.Timestamp edate = 8 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {66, 2, 2, PROTOBUF_FIELD_OFFSET(Test, _impl_.edate_)}},
    // .kentik.core.v202303.UserInfo created_by = 9 [json_name = "createdBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {74, 3, 3, PROTOBUF_FIELD_OFFSET(Test, _impl_.created_by_)}},
    // .kentik.core.v202303.UserInfo last_updated_by = 10 [json_name = "lastUpdatedBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {82, 4, 4, PROTOBUF_FIELD_OFFSET(Test, _impl_.last_updated_by_)}},
    // repeated string labels = 11 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(Test, _impl_.labels_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Test, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Test, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 3 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Test, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .kentik.synthetics.v202202.TestStatus status = 5 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Test, _impl_.status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .kentik.synthetics.v202202.TestSettings settings = 6 [json_name = "settings", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Test, _impl_.settings_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp cdate = 7 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Test, _impl_.cdate_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp edate = 8 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Test, _impl_.edate_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.core.v202303.UserInfo created_by = 9 [json_name = "createdBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Test, _impl_.created_by_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.core.v202303.UserInfo last_updated_by = 10 [json_name = "lastUpdatedBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Test, _impl_.last_updated_by_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string labels = 11 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Test, _impl_.labels_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::TestSettings>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::kentik::core::v202303::UserInfo>()},
    {::_pbi::TcParser::GetTable<::kentik::core::v202303::UserInfo>()},
  }}, {{
    "\36\2\4\4\0\0\0\0\0\0\6\0\0\0\0\0"
    "kentik.synthetics.v202202.Test"
    "id"
    "name"
    "type"
    "labels"
  }},
};

PROTOBUF_NOINLINE void Test::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.Test)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.labels_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.settings_ != nullptr);
      _impl_.settings_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.cdate_ != nullptr);
      _impl_.cdate_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.edate_ != nullptr);
      _impl_.edate_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.created_by_ != nullptr);
      _impl_.created_by_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.last_updated_by_ != nullptr);
      _impl_.last_updated_by_->Clear();
    }
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Test::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Test& this_ = static_cast<const Test&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Test::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Test& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.Test)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Test.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Test.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string type = 3 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_type().empty()) {
            const std::string& _s = this_._internal_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Test.type");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // .kentik.synthetics.v202202.TestStatus status = 5 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_status(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.synthetics.v202202.TestSettings settings = 6 [json_name = "settings", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.settings_, this_._impl_.settings_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp cdate = 7 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.cdate_, this_._impl_.cdate_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp edate = 8 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.edate_, this_._impl_.edate_->GetCachedSize(), target,
                stream);
          }

          // .kentik.core.v202303.UserInfo created_by = 9 [json_name = "createdBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.created_by_, this_._impl_.created_by_->GetCachedSize(), target,
                stream);
          }

          // .kentik.core.v202303.UserInfo last_updated_by = 10 [json_name = "lastUpdatedBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.last_updated_by_, this_._impl_.last_updated_by_->GetCachedSize(), target,
                stream);
          }

          // repeated string labels = 11 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_labels_size(); i < n; ++i) {
            const auto& s = this_._internal_labels().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Test.labels");
            target = stream->WriteString(11, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.Test)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Test::ByteSizeLong(const MessageLite& base) {
          const Test& this_ = static_cast<const Test&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Test::ByteSizeLong() const {
          const Test& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.Test)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string labels = 11 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_labels().size());
              for (int i = 0, n = this_._internal_labels().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_labels().Get(i));
              }
            }
          }
           {
            // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string type = 3 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000001fu) {
            // .kentik.synthetics.v202202.TestSettings settings = 6 [json_name = "settings", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.settings_);
            }
            // .google.protobuf.Timestamp cdate = 7 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cdate_);
            }
            // .google.protobuf.Timestamp edate = 8 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.edate_);
            }
            // .kentik.core.v202303.UserInfo created_by = 9 [json_name = "createdBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.created_by_);
            }
            // .kentik.core.v202303.UserInfo last_updated_by = 10 [json_name = "lastUpdatedBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.last_updated_by_);
            }
          }
           {
            // .kentik.synthetics.v202202.TestStatus status = 5 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Test::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Test*>(&to_msg);
  auto& from = static_cast<const Test&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.Test)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_labels()->MergeFrom(from._internal_labels());
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.settings_ != nullptr);
      if (_this->_impl_.settings_ == nullptr) {
        _this->_impl_.settings_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::TestSettings>(arena, *from._impl_.settings_);
      } else {
        _this->_impl_.settings_->MergeFrom(*from._impl_.settings_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.cdate_ != nullptr);
      if (_this->_impl_.cdate_ == nullptr) {
        _this->_impl_.cdate_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.cdate_);
      } else {
        _this->_impl_.cdate_->MergeFrom(*from._impl_.cdate_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.edate_ != nullptr);
      if (_this->_impl_.edate_ == nullptr) {
        _this->_impl_.edate_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.edate_);
      } else {
        _this->_impl_.edate_->MergeFrom(*from._impl_.edate_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.created_by_ != nullptr);
      if (_this->_impl_.created_by_ == nullptr) {
        _this->_impl_.created_by_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::core::v202303::UserInfo>(arena, *from._impl_.created_by_);
      } else {
        _this->_impl_.created_by_->MergeFrom(*from._impl_.created_by_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.last_updated_by_ != nullptr);
      if (_this->_impl_.last_updated_by_ == nullptr) {
        _this->_impl_.last_updated_by_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::core::v202303::UserInfo>(arena, *from._impl_.last_updated_by_);
      } else {
        _this->_impl_.last_updated_by_->MergeFrom(*from._impl_.last_updated_by_);
      }
    }
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Test::CopyFrom(const Test& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.Test)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Test::InternalSwap(Test* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.labels_.InternalSwap(&other->_impl_.labels_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Test, _impl_.status_)
      + sizeof(Test::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(Test, _impl_.settings_)>(
          reinterpret_cast<char*>(&_impl_.settings_),
          reinterpret_cast<char*>(&other->_impl_.settings_));
}

::google::protobuf::Metadata Test::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TestSettings::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TestSettings>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TestSettings, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TestSettings, _impl_._oneof_case_);
};

void TestSettings::set_allocated_hostname(::kentik::synthetics::v202202::HostnameTest* hostname) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_definition();
  if (hostname) {
    ::google::protobuf::Arena* submessage_arena = hostname->GetArena();
    if (message_arena != submessage_arena) {
      hostname = ::google::protobuf::internal::GetOwnedMessage(message_arena, hostname, submessage_arena);
    }
    set_has_hostname();
    _impl_.definition_.hostname_ = hostname;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202202.TestSettings.hostname)
}
void TestSettings::set_allocated_ip(::kentik::synthetics::v202202::IpTest* ip) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_definition();
  if (ip) {
    ::google::protobuf::Arena* submessage_arena = ip->GetArena();
    if (message_arena != submessage_arena) {
      ip = ::google::protobuf::internal::GetOwnedMessage(message_arena, ip, submessage_arena);
    }
    set_has_ip();
    _impl_.definition_.ip_ = ip;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202202.TestSettings.ip)
}
void TestSettings::set_allocated_agent(::kentik::synthetics::v202202::AgentTest* agent) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_definition();
  if (agent) {
    ::google::protobuf::Arena* submessage_arena = agent->GetArena();
    if (message_arena != submessage_arena) {
      agent = ::google::protobuf::internal::GetOwnedMessage(message_arena, agent, submessage_arena);
    }
    set_has_agent();
    _impl_.definition_.agent_ = agent;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202202.TestSettings.agent)
}
void TestSettings::set_allocated_flow(::kentik::synthetics::v202202::FlowTest* flow) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_definition();
  if (flow) {
    ::google::protobuf::Arena* submessage_arena = flow->GetArena();
    if (message_arena != submessage_arena) {
      flow = ::google::protobuf::internal::GetOwnedMessage(message_arena, flow, submessage_arena);
    }
    set_has_flow();
    _impl_.definition_.flow_ = flow;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202202.TestSettings.flow)
}
void TestSettings::set_allocated_dns(::kentik::synthetics::v202202::DnsTest* dns) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_definition();
  if (dns) {
    ::google::protobuf::Arena* submessage_arena = dns->GetArena();
    if (message_arena != submessage_arena) {
      dns = ::google::protobuf::internal::GetOwnedMessage(message_arena, dns, submessage_arena);
    }
    set_has_dns();
    _impl_.definition_.dns_ = dns;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202202.TestSettings.dns)
}
void TestSettings::set_allocated_url(::kentik::synthetics::v202202::UrlTest* url) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_definition();
  if (url) {
    ::google::protobuf::Arena* submessage_arena = url->GetArena();
    if (message_arena != submessage_arena) {
      url = ::google::protobuf::internal::GetOwnedMessage(message_arena, url, submessage_arena);
    }
    set_has_url();
    _impl_.definition_.url_ = url;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202202.TestSettings.url)
}
void TestSettings::set_allocated_network_grid(::kentik::synthetics::v202202::IpTest* network_grid) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_definition();
  if (network_grid) {
    ::google::protobuf::Arena* submessage_arena = network_grid->GetArena();
    if (message_arena != submessage_arena) {
      network_grid = ::google::protobuf::internal::GetOwnedMessage(message_arena, network_grid, submessage_arena);
    }
    set_has_network_grid();
    _impl_.definition_.network_grid_ = network_grid;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202202.TestSettings.network_grid)
}
void TestSettings::set_allocated_page_load(::kentik::synthetics::v202202::PageLoadTest* page_load) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_definition();
  if (page_load) {
    ::google::protobuf::Arena* submessage_arena = page_load->GetArena();
    if (message_arena != submessage_arena) {
      page_load = ::google::protobuf::internal::GetOwnedMessage(message_arena, page_load, submessage_arena);
    }
    set_has_page_load();
    _impl_.definition_.page_load_ = page_load;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202202.TestSettings.page_load)
}
void TestSettings::set_allocated_dns_grid(::kentik::synthetics::v202202::DnsTest* dns_grid) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_definition();
  if (dns_grid) {
    ::google::protobuf::Arena* submessage_arena = dns_grid->GetArena();
    if (message_arena != submessage_arena) {
      dns_grid = ::google::protobuf::internal::GetOwnedMessage(message_arena, dns_grid, submessage_arena);
    }
    set_has_dns_grid();
    _impl_.definition_.dns_grid_ = dns_grid;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202202.TestSettings.dns_grid)
}
void TestSettings::set_allocated_network_mesh(::kentik::synthetics::v202202::NetworkMeshTest* network_mesh) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_definition();
  if (network_mesh) {
    ::google::protobuf::Arena* submessage_arena = network_mesh->GetArena();
    if (message_arena != submessage_arena) {
      network_mesh = ::google::protobuf::internal::GetOwnedMessage(message_arena, network_mesh, submessage_arena);
    }
    set_has_network_mesh();
    _impl_.definition_.network_mesh_ = network_mesh;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202202.TestSettings.network_mesh)
}
TestSettings::TestSettings(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.TestSettings)
}
inline PROTOBUF_NDEBUG_INLINE TestSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::TestSettings& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        agent_ids_{visibility, arena, from.agent_ids_},
        tasks_{visibility, arena, from.tasks_},
        notification_channels_{visibility, arena, from.notification_channels_},
        notes_(arena, from.notes_),
        definition_{},
        _oneof_case_{from._oneof_case_[0]} {}

TestSettings::TestSettings(
    ::google::protobuf::Arena* arena,
    const TestSettings& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestSettings* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.health_settings_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::HealthSettings>(
                              arena, *from._impl_.health_settings_)
                        : nullptr;
  _impl_.ping_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::TestPingSettings>(
                              arena, *from._impl_.ping_)
                        : nullptr;
  _impl_.trace_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::TestTraceSettings>(
                              arena, *from._impl_.trace_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, period_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, period_),
           offsetof(Impl_, family_) -
               offsetof(Impl_, period_) +
               sizeof(Impl_::family_));
  switch (definition_case()) {
    case DEFINITION_NOT_SET:
      break;
      case kHostname:
        _impl_.definition_.hostname_ = ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::HostnameTest>(arena, *from._impl_.definition_.hostname_);
        break;
      case kIp:
        _impl_.definition_.ip_ = ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::IpTest>(arena, *from._impl_.definition_.ip_);
        break;
      case kAgent:
        _impl_.definition_.agent_ = ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::AgentTest>(arena, *from._impl_.definition_.agent_);
        break;
      case kFlow:
        _impl_.definition_.flow_ = ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::FlowTest>(arena, *from._impl_.definition_.flow_);
        break;
      case kDns:
        _impl_.definition_.dns_ = ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::DnsTest>(arena, *from._impl_.definition_.dns_);
        break;
      case kUrl:
        _impl_.definition_.url_ = ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::UrlTest>(arena, *from._impl_.definition_.url_);
        break;
      case kNetworkGrid:
        _impl_.definition_.network_grid_ = ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::IpTest>(arena, *from._impl_.definition_.network_grid_);
        break;
      case kPageLoad:
        _impl_.definition_.page_load_ = ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::PageLoadTest>(arena, *from._impl_.definition_.page_load_);
        break;
      case kDnsGrid:
        _impl_.definition_.dns_grid_ = ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::DnsTest>(arena, *from._impl_.definition_.dns_grid_);
        break;
      case kNetworkMesh:
        _impl_.definition_.network_mesh_ = ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::NetworkMeshTest>(arena, *from._impl_.definition_.network_mesh_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.TestSettings)
}
inline PROTOBUF_NDEBUG_INLINE TestSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        agent_ids_{visibility, arena},
        tasks_{visibility, arena},
        notification_channels_{visibility, arena},
        notes_(arena),
        definition_{},
        _oneof_case_{} {}

inline void TestSettings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, health_settings_),
           0,
           offsetof(Impl_, family_) -
               offsetof(Impl_, health_settings_) +
               sizeof(Impl_::family_));
}
TestSettings::~TestSettings() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.TestSettings)
  SharedDtor(*this);
}
inline void TestSettings::SharedDtor(MessageLite& self) {
  TestSettings& this_ = static_cast<TestSettings&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.notes_.Destroy();
  delete this_._impl_.health_settings_;
  delete this_._impl_.ping_;
  delete this_._impl_.trace_;
  if (this_.has_definition()) {
    this_.clear_definition();
  }
  this_._impl_.~Impl_();
}

void TestSettings::clear_definition() {
// @@protoc_insertion_point(one_of_clear_start:kentik.synthetics.v202202.TestSettings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (definition_case()) {
    case kHostname: {
      if (GetArena() == nullptr) {
        delete _impl_.definition_.hostname_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.definition_.hostname_);
      }
      break;
    }
    case kIp: {
      if (GetArena() == nullptr) {
        delete _impl_.definition_.ip_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.definition_.ip_);
      }
      break;
    }
    case kAgent: {
      if (GetArena() == nullptr) {
        delete _impl_.definition_.agent_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.definition_.agent_);
      }
      break;
    }
    case kFlow: {
      if (GetArena() == nullptr) {
        delete _impl_.definition_.flow_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.definition_.flow_);
      }
      break;
    }
    case kDns: {
      if (GetArena() == nullptr) {
        delete _impl_.definition_.dns_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.definition_.dns_);
      }
      break;
    }
    case kUrl: {
      if (GetArena() == nullptr) {
        delete _impl_.definition_.url_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.definition_.url_);
      }
      break;
    }
    case kNetworkGrid: {
      if (GetArena() == nullptr) {
        delete _impl_.definition_.network_grid_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.definition_.network_grid_);
      }
      break;
    }
    case kPageLoad: {
      if (GetArena() == nullptr) {
        delete _impl_.definition_.page_load_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.definition_.page_load_);
      }
      break;
    }
    case kDnsGrid: {
      if (GetArena() == nullptr) {
        delete _impl_.definition_.dns_grid_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.definition_.dns_grid_);
      }
      break;
    }
    case kNetworkMesh: {
      if (GetArena() == nullptr) {
        delete _impl_.definition_.network_mesh_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.definition_.network_mesh_);
      }
      break;
    }
    case DEFINITION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = DEFINITION_NOT_SET;
}


inline void* TestSettings::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TestSettings(arena);
}
constexpr auto TestSettings::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.agent_ids_) +
          decltype(TestSettings::_impl_.agent_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.tasks_) +
          decltype(TestSettings::_impl_.tasks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.notification_channels_) +
          decltype(TestSettings::_impl_.notification_channels_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(TestSettings), alignof(TestSettings), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TestSettings::PlacementNew_,
                                 sizeof(TestSettings),
                                 alignof(TestSettings));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TestSettings::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TestSettings_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TestSettings::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TestSettings>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TestSettings::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TestSettings>(), &TestSettings::ByteSizeLong,
            &TestSettings::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TestSettings, _impl_._cached_size_),
        false,
    },
    &TestSettings::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TestSettings::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 19, 13, 103, 2> TestSettings::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestSettings, _impl_._has_bits_),
    0, // no _extensions_
    19, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294443008,  // skipmap
    offsetof(decltype(_table_), field_entries),
    19,  // num_field_entries
    13,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::TestSettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.synthetics.v202202.IPFamily family = 16 [json_name = "family", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastV32S2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.family_)}},
    // repeated string notification_channels = 17 [json_name = "notificationChannels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.notification_channels_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string notes = 19 [json_name = "notes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {410, 63, 0, PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.notes_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string agent_ids = 10 [json_name = "agentIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.agent_ids_)}},
    // repeated string tasks = 11 [json_name = "tasks", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.tasks_)}},
    // .kentik.synthetics.v202202.HealthSettings health_settings = 12 [json_name = "healthSettings", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {98, 0, 9, PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.health_settings_)}},
    // .kentik.synthetics.v202202.TestPingSettings ping = 13 [json_name = "ping", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {106, 1, 10, PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.ping_)}},
    // .kentik.synthetics.v202202.TestTraceSettings trace = 14 [json_name = "trace", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {114, 2, 11, PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.trace_)}},
    // uint32 period = 15 [json_name = "period", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestSettings, _impl_.period_), 63>(),
     {120, 63, 0, PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.period_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.synthetics.v202202.HostnameTest hostname = 1 [json_name = "hostname"];
    {PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.definition_.hostname_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.synthetics.v202202.IpTest ip = 2 [json_name = "ip"];
    {PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.definition_.ip_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.synthetics.v202202.AgentTest agent = 3 [json_name = "agent"];
    {PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.definition_.agent_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.synthetics.v202202.FlowTest flow = 4 [json_name = "flow"];
    {PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.definition_.flow_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.synthetics.v202202.DnsTest dns = 5 [json_name = "dns"];
    {PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.definition_.dns_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.synthetics.v202202.UrlTest url = 6 [json_name = "url"];
    {PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.definition_.url_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.synthetics.v202202.IpTest network_grid = 7 [json_name = "networkGrid"];
    {PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.definition_.network_grid_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.synthetics.v202202.PageLoadTest page_load = 8 [json_name = "pageLoad"];
    {PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.definition_.page_load_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.synthetics.v202202.DnsTest dns_grid = 9 [json_name = "dnsGrid"];
    {PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.definition_.dns_grid_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string agent_ids = 10 [json_name = "agentIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.agent_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string tasks = 11 [json_name = "tasks", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.tasks_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .kentik.synthetics.v202202.HealthSettings health_settings = 12 [json_name = "healthSettings", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.health_settings_), _Internal::kHasBitsOffset + 0, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.synthetics.v202202.TestPingSettings ping = 13 [json_name = "ping", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.ping_), _Internal::kHasBitsOffset + 1, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.synthetics.v202202.TestTraceSettings trace = 14 [json_name = "trace", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.trace_), _Internal::kHasBitsOffset + 2, 11,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 period = 15 [json_name = "period", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.period_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .kentik.synthetics.v202202.IPFamily family = 16 [json_name = "family", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.family_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated string notification_channels = 17 [json_name = "notificationChannels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.notification_channels_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .kentik.synthetics.v202202.NetworkMeshTest network_mesh = 18 [json_name = "networkMesh"];
    {PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.definition_.network_mesh_), _Internal::kOneofCaseOffset + 0, 12,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string notes = 19 [json_name = "notes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.notes_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::HostnameTest>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::IpTest>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::AgentTest>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::FlowTest>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::DnsTest>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::UrlTest>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::IpTest>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::PageLoadTest>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::DnsTest>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::HealthSettings>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::TestPingSettings>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::TestTraceSettings>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::NetworkMeshTest>()},
  }}, {{
    "\46\0\0\0\0\0\0\0\0\0\11\5\0\0\0\0\0\25\0\5\0\0\0\0"
    "kentik.synthetics.v202202.TestSettings"
    "agent_ids"
    "tasks"
    "notification_channels"
    "notes"
  }},
};

PROTOBUF_NOINLINE void TestSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.TestSettings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_ids_.Clear();
  _impl_.tasks_.Clear();
  _impl_.notification_channels_.Clear();
  _impl_.notes_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.health_settings_ != nullptr);
      _impl_.health_settings_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.ping_ != nullptr);
      _impl_.ping_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.trace_ != nullptr);
      _impl_.trace_->Clear();
    }
  }
  ::memset(&_impl_.period_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.family_) -
      reinterpret_cast<char*>(&_impl_.period_)) + sizeof(_impl_.family_));
  clear_definition();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TestSettings::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TestSettings& this_ = static_cast<const TestSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TestSettings::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TestSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.TestSettings)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.definition_case()) {
            case kHostname: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.definition_.hostname_, this_._impl_.definition_.hostname_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kIp: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.definition_.ip_, this_._impl_.definition_.ip_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kAgent: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.definition_.agent_, this_._impl_.definition_.agent_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kFlow: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.definition_.flow_, this_._impl_.definition_.flow_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kDns: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.definition_.dns_, this_._impl_.definition_.dns_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kUrl: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.definition_.url_, this_._impl_.definition_.url_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kNetworkGrid: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  7, *this_._impl_.definition_.network_grid_, this_._impl_.definition_.network_grid_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPageLoad: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  8, *this_._impl_.definition_.page_load_, this_._impl_.definition_.page_load_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kDnsGrid: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  9, *this_._impl_.definition_.dns_grid_, this_._impl_.definition_.dns_grid_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          // repeated string agent_ids = 10 [json_name = "agentIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_agent_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_agent_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.TestSettings.agent_ids");
            target = stream->WriteString(10, s, target);
          }

          // repeated string tasks = 11 [json_name = "tasks", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_tasks_size(); i < n; ++i) {
            const auto& s = this_._internal_tasks().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.TestSettings.tasks");
            target = stream->WriteString(11, s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.synthetics.v202202.HealthSettings health_settings = 12 [json_name = "healthSettings", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                12, *this_._impl_.health_settings_, this_._impl_.health_settings_->GetCachedSize(), target,
                stream);
          }

          // .kentik.synthetics.v202202.TestPingSettings ping = 13 [json_name = "ping", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                13, *this_._impl_.ping_, this_._impl_.ping_->GetCachedSize(), target,
                stream);
          }

          // .kentik.synthetics.v202202.TestTraceSettings trace = 14 [json_name = "trace", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                14, *this_._impl_.trace_, this_._impl_.trace_->GetCachedSize(), target,
                stream);
          }

          // uint32 period = 15 [json_name = "period", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_period() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                15, this_._internal_period(), target);
          }

          // .kentik.synthetics.v202202.IPFamily family = 16 [json_name = "family", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_family() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                16, this_._internal_family(), target);
          }

          // repeated string notification_channels = 17 [json_name = "notificationChannels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_notification_channels_size(); i < n; ++i) {
            const auto& s = this_._internal_notification_channels().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.TestSettings.notification_channels");
            target = stream->WriteString(17, s, target);
          }

          // .kentik.synthetics.v202202.NetworkMeshTest network_mesh = 18 [json_name = "networkMesh"];
          if (this_.definition_case() == kNetworkMesh) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                18, *this_._impl_.definition_.network_mesh_, this_._impl_.definition_.network_mesh_->GetCachedSize(), target,
                stream);
          }

          // string notes = 19 [json_name = "notes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_notes().empty()) {
            const std::string& _s = this_._internal_notes();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.TestSettings.notes");
            target = stream->WriteStringMaybeAliased(19, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.TestSettings)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TestSettings::ByteSizeLong(const MessageLite& base) {
          const TestSettings& this_ = static_cast<const TestSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TestSettings::ByteSizeLong() const {
          const TestSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.TestSettings)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string agent_ids = 10 [json_name = "agentIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_agent_ids().size());
              for (int i = 0, n = this_._internal_agent_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_agent_ids().Get(i));
              }
            }
            // repeated string tasks = 11 [json_name = "tasks", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_tasks().size());
              for (int i = 0, n = this_._internal_tasks().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_tasks().Get(i));
              }
            }
            // repeated string notification_channels = 17 [json_name = "notificationChannels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_notification_channels().size());
              for (int i = 0, n = this_._internal_notification_channels().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_notification_channels().Get(i));
              }
            }
          }
           {
            // string notes = 19 [json_name = "notes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_notes().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_notes());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .kentik.synthetics.v202202.HealthSettings health_settings = 12 [json_name = "healthSettings", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.health_settings_);
            }
            // .kentik.synthetics.v202202.TestPingSettings ping = 13 [json_name = "ping", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ping_);
            }
            // .kentik.synthetics.v202202.TestTraceSettings trace = 14 [json_name = "trace", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.trace_);
            }
          }
           {
            // uint32 period = 15 [json_name = "period", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_period() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_period());
            }
            // .kentik.synthetics.v202202.IPFamily family = 16 [json_name = "family", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_family() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_family());
            }
          }
          switch (this_.definition_case()) {
            // .kentik.synthetics.v202202.HostnameTest hostname = 1 [json_name = "hostname"];
            case kHostname: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.definition_.hostname_);
              break;
            }
            // .kentik.synthetics.v202202.IpTest ip = 2 [json_name = "ip"];
            case kIp: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.definition_.ip_);
              break;
            }
            // .kentik.synthetics.v202202.AgentTest agent = 3 [json_name = "agent"];
            case kAgent: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.definition_.agent_);
              break;
            }
            // .kentik.synthetics.v202202.FlowTest flow = 4 [json_name = "flow"];
            case kFlow: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.definition_.flow_);
              break;
            }
            // .kentik.synthetics.v202202.DnsTest dns = 5 [json_name = "dns"];
            case kDns: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.definition_.dns_);
              break;
            }
            // .kentik.synthetics.v202202.UrlTest url = 6 [json_name = "url"];
            case kUrl: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.definition_.url_);
              break;
            }
            // .kentik.synthetics.v202202.IpTest network_grid = 7 [json_name = "networkGrid"];
            case kNetworkGrid: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.definition_.network_grid_);
              break;
            }
            // .kentik.synthetics.v202202.PageLoadTest page_load = 8 [json_name = "pageLoad"];
            case kPageLoad: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.definition_.page_load_);
              break;
            }
            // .kentik.synthetics.v202202.DnsTest dns_grid = 9 [json_name = "dnsGrid"];
            case kDnsGrid: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.definition_.dns_grid_);
              break;
            }
            // .kentik.synthetics.v202202.NetworkMeshTest network_mesh = 18 [json_name = "networkMesh"];
            case kNetworkMesh: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.definition_.network_mesh_);
              break;
            }
            case DEFINITION_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TestSettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestSettings*>(&to_msg);
  auto& from = static_cast<const TestSettings&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.TestSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_agent_ids()->MergeFrom(from._internal_agent_ids());
  _this->_internal_mutable_tasks()->MergeFrom(from._internal_tasks());
  _this->_internal_mutable_notification_channels()->MergeFrom(from._internal_notification_channels());
  if (!from._internal_notes().empty()) {
    _this->_internal_set_notes(from._internal_notes());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.health_settings_ != nullptr);
      if (_this->_impl_.health_settings_ == nullptr) {
        _this->_impl_.health_settings_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::HealthSettings>(arena, *from._impl_.health_settings_);
      } else {
        _this->_impl_.health_settings_->MergeFrom(*from._impl_.health_settings_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.ping_ != nullptr);
      if (_this->_impl_.ping_ == nullptr) {
        _this->_impl_.ping_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::TestPingSettings>(arena, *from._impl_.ping_);
      } else {
        _this->_impl_.ping_->MergeFrom(*from._impl_.ping_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.trace_ != nullptr);
      if (_this->_impl_.trace_ == nullptr) {
        _this->_impl_.trace_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::TestTraceSettings>(arena, *from._impl_.trace_);
      } else {
        _this->_impl_.trace_->MergeFrom(*from._impl_.trace_);
      }
    }
  }
  if (from._internal_period() != 0) {
    _this->_impl_.period_ = from._impl_.period_;
  }
  if (from._internal_family() != 0) {
    _this->_impl_.family_ = from._impl_.family_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_definition();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kHostname: {
        if (oneof_needs_init) {
          _this->_impl_.definition_.hostname_ =
              ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::HostnameTest>(arena, *from._impl_.definition_.hostname_);
        } else {
          _this->_impl_.definition_.hostname_->MergeFrom(from._internal_hostname());
        }
        break;
      }
      case kIp: {
        if (oneof_needs_init) {
          _this->_impl_.definition_.ip_ =
              ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::IpTest>(arena, *from._impl_.definition_.ip_);
        } else {
          _this->_impl_.definition_.ip_->MergeFrom(from._internal_ip());
        }
        break;
      }
      case kAgent: {
        if (oneof_needs_init) {
          _this->_impl_.definition_.agent_ =
              ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::AgentTest>(arena, *from._impl_.definition_.agent_);
        } else {
          _this->_impl_.definition_.agent_->MergeFrom(from._internal_agent());
        }
        break;
      }
      case kFlow: {
        if (oneof_needs_init) {
          _this->_impl_.definition_.flow_ =
              ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::FlowTest>(arena, *from._impl_.definition_.flow_);
        } else {
          _this->_impl_.definition_.flow_->MergeFrom(from._internal_flow());
        }
        break;
      }
      case kDns: {
        if (oneof_needs_init) {
          _this->_impl_.definition_.dns_ =
              ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::DnsTest>(arena, *from._impl_.definition_.dns_);
        } else {
          _this->_impl_.definition_.dns_->MergeFrom(from._internal_dns());
        }
        break;
      }
      case kUrl: {
        if (oneof_needs_init) {
          _this->_impl_.definition_.url_ =
              ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::UrlTest>(arena, *from._impl_.definition_.url_);
        } else {
          _this->_impl_.definition_.url_->MergeFrom(from._internal_url());
        }
        break;
      }
      case kNetworkGrid: {
        if (oneof_needs_init) {
          _this->_impl_.definition_.network_grid_ =
              ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::IpTest>(arena, *from._impl_.definition_.network_grid_);
        } else {
          _this->_impl_.definition_.network_grid_->MergeFrom(from._internal_network_grid());
        }
        break;
      }
      case kPageLoad: {
        if (oneof_needs_init) {
          _this->_impl_.definition_.page_load_ =
              ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::PageLoadTest>(arena, *from._impl_.definition_.page_load_);
        } else {
          _this->_impl_.definition_.page_load_->MergeFrom(from._internal_page_load());
        }
        break;
      }
      case kDnsGrid: {
        if (oneof_needs_init) {
          _this->_impl_.definition_.dns_grid_ =
              ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::DnsTest>(arena, *from._impl_.definition_.dns_grid_);
        } else {
          _this->_impl_.definition_.dns_grid_->MergeFrom(from._internal_dns_grid());
        }
        break;
      }
      case kNetworkMesh: {
        if (oneof_needs_init) {
          _this->_impl_.definition_.network_mesh_ =
              ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::NetworkMeshTest>(arena, *from._impl_.definition_.network_mesh_);
        } else {
          _this->_impl_.definition_.network_mesh_->MergeFrom(from._internal_network_mesh());
        }
        break;
      }
      case DEFINITION_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestSettings::CopyFrom(const TestSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.TestSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestSettings::InternalSwap(TestSettings* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.agent_ids_.InternalSwap(&other->_impl_.agent_ids_);
  _impl_.tasks_.InternalSwap(&other->_impl_.tasks_);
  _impl_.notification_channels_.InternalSwap(&other->_impl_.notification_channels_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.notes_, &other->_impl_.notes_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.family_)
      + sizeof(TestSettings::_impl_.family_)
      - PROTOBUF_FIELD_OFFSET(TestSettings, _impl_.health_settings_)>(
          reinterpret_cast<char*>(&_impl_.health_settings_),
          reinterpret_cast<char*>(&other->_impl_.health_settings_));
  swap(_impl_.definition_, other->_impl_.definition_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata TestSettings::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TestPingSettings::_Internal {
 public:
};

TestPingSettings::TestPingSettings(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.TestPingSettings)
}
inline PROTOBUF_NDEBUG_INLINE TestPingSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::TestPingSettings& from_msg)
      : protocol_(arena, from.protocol_),
        _cached_size_{0} {}

TestPingSettings::TestPingSettings(
    ::google::protobuf::Arena* arena,
    const TestPingSettings& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestPingSettings* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, count_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, count_),
           offsetof(Impl_, dscp_) -
               offsetof(Impl_, count_) +
               sizeof(Impl_::dscp_));

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.TestPingSettings)
}
inline PROTOBUF_NDEBUG_INLINE TestPingSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : protocol_(arena),
        _cached_size_{0} {}

inline void TestPingSettings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, count_),
           0,
           offsetof(Impl_, dscp_) -
               offsetof(Impl_, count_) +
               sizeof(Impl_::dscp_));
}
TestPingSettings::~TestPingSettings() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.TestPingSettings)
  SharedDtor(*this);
}
inline void TestPingSettings::SharedDtor(MessageLite& self) {
  TestPingSettings& this_ = static_cast<TestPingSettings&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.protocol_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TestPingSettings::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TestPingSettings(arena);
}
constexpr auto TestPingSettings::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TestPingSettings),
                                            alignof(TestPingSettings));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TestPingSettings::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TestPingSettings_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TestPingSettings::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TestPingSettings>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TestPingSettings::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TestPingSettings>(), &TestPingSettings::ByteSizeLong,
            &TestPingSettings::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TestPingSettings, _impl_._cached_size_),
        false,
    },
    &TestPingSettings::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TestPingSettings::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 59, 2> TestPingSettings::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::TestPingSettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 count = 1 [json_name = "count", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestPingSettings, _impl_.count_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TestPingSettings, _impl_.count_)}},
    // string protocol = 2 [json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TestPingSettings, _impl_.protocol_)}},
    // uint32 port = 3 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestPingSettings, _impl_.port_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TestPingSettings, _impl_.port_)}},
    // uint32 timeout = 4 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestPingSettings, _impl_.timeout_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(TestPingSettings, _impl_.timeout_)}},
    // float delay = 5 [json_name = "delay", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(TestPingSettings, _impl_.delay_)}},
    // uint32 dscp = 6 [json_name = "dscp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestPingSettings, _impl_.dscp_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(TestPingSettings, _impl_.dscp_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 count = 1 [json_name = "count", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestPingSettings, _impl_.count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string protocol = 2 [json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestPingSettings, _impl_.protocol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 port = 3 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestPingSettings, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 timeout = 4 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestPingSettings, _impl_.timeout_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // float delay = 5 [json_name = "delay", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestPingSettings, _impl_.delay_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint32 dscp = 6 [json_name = "dscp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestPingSettings, _impl_.dscp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\52\0\10\0\0\0\0\0"
    "kentik.synthetics.v202202.TestPingSettings"
    "protocol"
  }},
};

PROTOBUF_NOINLINE void TestPingSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.TestPingSettings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.protocol_.ClearToEmpty();
  ::memset(&_impl_.count_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.dscp_) -
      reinterpret_cast<char*>(&_impl_.count_)) + sizeof(_impl_.dscp_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TestPingSettings::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TestPingSettings& this_ = static_cast<const TestPingSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TestPingSettings::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TestPingSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.TestPingSettings)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 count = 1 [json_name = "count", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_count(), target);
          }

          // string protocol = 2 [json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_protocol().empty()) {
            const std::string& _s = this_._internal_protocol();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.TestPingSettings.protocol");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint32 port = 3 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_port() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_port(), target);
          }

          // uint32 timeout = 4 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_timeout() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_timeout(), target);
          }

          // float delay = 5 [json_name = "delay", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint32_t>(this_._internal_delay()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_delay(), target);
          }

          // uint32 dscp = 6 [json_name = "dscp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_dscp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_dscp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.TestPingSettings)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TestPingSettings::ByteSizeLong(const MessageLite& base) {
          const TestPingSettings& this_ = static_cast<const TestPingSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TestPingSettings::ByteSizeLong() const {
          const TestPingSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.TestPingSettings)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string protocol = 2 [json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_protocol().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_protocol());
            }
            // uint32 count = 1 [json_name = "count", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_count() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_count());
            }
            // uint32 port = 3 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_port() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_port());
            }
            // uint32 timeout = 4 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_timeout() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_timeout());
            }
            // float delay = 5 [json_name = "delay", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint32_t>(this_._internal_delay()) != 0) {
              total_size += 5;
            }
            // uint32 dscp = 6 [json_name = "dscp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_dscp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_dscp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TestPingSettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestPingSettings*>(&to_msg);
  auto& from = static_cast<const TestPingSettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.TestPingSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_protocol().empty()) {
    _this->_internal_set_protocol(from._internal_protocol());
  }
  if (from._internal_count() != 0) {
    _this->_impl_.count_ = from._impl_.count_;
  }
  if (from._internal_port() != 0) {
    _this->_impl_.port_ = from._impl_.port_;
  }
  if (from._internal_timeout() != 0) {
    _this->_impl_.timeout_ = from._impl_.timeout_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_delay()) != 0) {
    _this->_impl_.delay_ = from._impl_.delay_;
  }
  if (from._internal_dscp() != 0) {
    _this->_impl_.dscp_ = from._impl_.dscp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestPingSettings::CopyFrom(const TestPingSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.TestPingSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestPingSettings::InternalSwap(TestPingSettings* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.protocol_, &other->_impl_.protocol_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestPingSettings, _impl_.dscp_)
      + sizeof(TestPingSettings::_impl_.dscp_)
      - PROTOBUF_FIELD_OFFSET(TestPingSettings, _impl_.count_)>(
          reinterpret_cast<char*>(&_impl_.count_),
          reinterpret_cast<char*>(&other->_impl_.count_));
}

::google::protobuf::Metadata TestPingSettings::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TestTraceSettings::_Internal {
 public:
};

TestTraceSettings::TestTraceSettings(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.TestTraceSettings)
}
inline PROTOBUF_NDEBUG_INLINE TestTraceSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::TestTraceSettings& from_msg)
      : protocol_(arena, from.protocol_),
        _cached_size_{0} {}

TestTraceSettings::TestTraceSettings(
    ::google::protobuf::Arena* arena,
    const TestTraceSettings& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestTraceSettings* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, count_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, count_),
           offsetof(Impl_, dscp_) -
               offsetof(Impl_, count_) +
               sizeof(Impl_::dscp_));

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.TestTraceSettings)
}
inline PROTOBUF_NDEBUG_INLINE TestTraceSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : protocol_(arena),
        _cached_size_{0} {}

inline void TestTraceSettings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, count_),
           0,
           offsetof(Impl_, dscp_) -
               offsetof(Impl_, count_) +
               sizeof(Impl_::dscp_));
}
TestTraceSettings::~TestTraceSettings() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.TestTraceSettings)
  SharedDtor(*this);
}
inline void TestTraceSettings::SharedDtor(MessageLite& self) {
  TestTraceSettings& this_ = static_cast<TestTraceSettings&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.protocol_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TestTraceSettings::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TestTraceSettings(arena);
}
constexpr auto TestTraceSettings::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TestTraceSettings),
                                            alignof(TestTraceSettings));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TestTraceSettings::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TestTraceSettings_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TestTraceSettings::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TestTraceSettings>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TestTraceSettings::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TestTraceSettings>(), &TestTraceSettings::ByteSizeLong,
            &TestTraceSettings::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TestTraceSettings, _impl_._cached_size_),
        false,
    },
    &TestTraceSettings::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TestTraceSettings::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 60, 2> TestTraceSettings::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::TestTraceSettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 count = 1 [json_name = "count", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestTraceSettings, _impl_.count_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TestTraceSettings, _impl_.count_)}},
    // string protocol = 2 [json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TestTraceSettings, _impl_.protocol_)}},
    // uint32 port = 3 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestTraceSettings, _impl_.port_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TestTraceSettings, _impl_.port_)}},
    // uint32 timeout = 4 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestTraceSettings, _impl_.timeout_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(TestTraceSettings, _impl_.timeout_)}},
    // uint32 limit = 5 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestTraceSettings, _impl_.limit_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(TestTraceSettings, _impl_.limit_)}},
    // float delay = 6 [json_name = "delay", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(TestTraceSettings, _impl_.delay_)}},
    // uint32 dscp = 7 [json_name = "dscp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestTraceSettings, _impl_.dscp_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(TestTraceSettings, _impl_.dscp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 count = 1 [json_name = "count", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestTraceSettings, _impl_.count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string protocol = 2 [json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestTraceSettings, _impl_.protocol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 port = 3 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestTraceSettings, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 timeout = 4 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestTraceSettings, _impl_.timeout_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 limit = 5 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestTraceSettings, _impl_.limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // float delay = 6 [json_name = "delay", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestTraceSettings, _impl_.delay_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint32 dscp = 7 [json_name = "dscp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestTraceSettings, _impl_.dscp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\53\0\10\0\0\0\0\0"
    "kentik.synthetics.v202202.TestTraceSettings"
    "protocol"
  }},
};

PROTOBUF_NOINLINE void TestTraceSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.TestTraceSettings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.protocol_.ClearToEmpty();
  ::memset(&_impl_.count_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.dscp_) -
      reinterpret_cast<char*>(&_impl_.count_)) + sizeof(_impl_.dscp_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TestTraceSettings::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TestTraceSettings& this_ = static_cast<const TestTraceSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TestTraceSettings::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TestTraceSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.TestTraceSettings)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 count = 1 [json_name = "count", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_count(), target);
          }

          // string protocol = 2 [json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_protocol().empty()) {
            const std::string& _s = this_._internal_protocol();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.TestTraceSettings.protocol");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint32 port = 3 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_port() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_port(), target);
          }

          // uint32 timeout = 4 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_timeout() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_timeout(), target);
          }

          // uint32 limit = 5 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_limit() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_limit(), target);
          }

          // float delay = 6 [json_name = "delay", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint32_t>(this_._internal_delay()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                6, this_._internal_delay(), target);
          }

          // uint32 dscp = 7 [json_name = "dscp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_dscp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_dscp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.TestTraceSettings)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TestTraceSettings::ByteSizeLong(const MessageLite& base) {
          const TestTraceSettings& this_ = static_cast<const TestTraceSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TestTraceSettings::ByteSizeLong() const {
          const TestTraceSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.TestTraceSettings)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string protocol = 2 [json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_protocol().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_protocol());
            }
            // uint32 count = 1 [json_name = "count", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_count() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_count());
            }
            // uint32 port = 3 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_port() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_port());
            }
            // uint32 timeout = 4 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_timeout() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_timeout());
            }
            // uint32 limit = 5 [json_name = "limit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_limit() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_limit());
            }
            // float delay = 6 [json_name = "delay", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint32_t>(this_._internal_delay()) != 0) {
              total_size += 5;
            }
            // uint32 dscp = 7 [json_name = "dscp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_dscp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_dscp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TestTraceSettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestTraceSettings*>(&to_msg);
  auto& from = static_cast<const TestTraceSettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.TestTraceSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_protocol().empty()) {
    _this->_internal_set_protocol(from._internal_protocol());
  }
  if (from._internal_count() != 0) {
    _this->_impl_.count_ = from._impl_.count_;
  }
  if (from._internal_port() != 0) {
    _this->_impl_.port_ = from._impl_.port_;
  }
  if (from._internal_timeout() != 0) {
    _this->_impl_.timeout_ = from._impl_.timeout_;
  }
  if (from._internal_limit() != 0) {
    _this->_impl_.limit_ = from._impl_.limit_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_delay()) != 0) {
    _this->_impl_.delay_ = from._impl_.delay_;
  }
  if (from._internal_dscp() != 0) {
    _this->_impl_.dscp_ = from._impl_.dscp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestTraceSettings::CopyFrom(const TestTraceSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.TestTraceSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestTraceSettings::InternalSwap(TestTraceSettings* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.protocol_, &other->_impl_.protocol_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestTraceSettings, _impl_.dscp_)
      + sizeof(TestTraceSettings::_impl_.dscp_)
      - PROTOBUF_FIELD_OFFSET(TestTraceSettings, _impl_.count_)>(
          reinterpret_cast<char*>(&_impl_.count_),
          reinterpret_cast<char*>(&other->_impl_.count_));
}

::google::protobuf::Metadata TestTraceSettings::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ActivationSettings::_Internal {
 public:
};

ActivationSettings::ActivationSettings(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.ActivationSettings)
}
inline PROTOBUF_NDEBUG_INLINE ActivationSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::ActivationSettings& from_msg)
      : grace_period_(arena, from.grace_period_),
        time_unit_(arena, from.time_unit_),
        time_window_(arena, from.time_window_),
        times_(arena, from.times_),
        _cached_size_{0} {}

ActivationSettings::ActivationSettings(
    ::google::protobuf::Arena* arena,
    const ActivationSettings& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ActivationSettings* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.ActivationSettings)
}
inline PROTOBUF_NDEBUG_INLINE ActivationSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : grace_period_(arena),
        time_unit_(arena),
        time_window_(arena),
        times_(arena),
        _cached_size_{0} {}

inline void ActivationSettings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ActivationSettings::~ActivationSettings() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.ActivationSettings)
  SharedDtor(*this);
}
inline void ActivationSettings::SharedDtor(MessageLite& self) {
  ActivationSettings& this_ = static_cast<ActivationSettings&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.grace_period_.Destroy();
  this_._impl_.time_unit_.Destroy();
  this_._impl_.time_window_.Destroy();
  this_._impl_.times_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ActivationSettings::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ActivationSettings(arena);
}
constexpr auto ActivationSettings::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ActivationSettings),
                                            alignof(ActivationSettings));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ActivationSettings::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ActivationSettings_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ActivationSettings::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ActivationSettings>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ActivationSettings::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ActivationSettings>(), &ActivationSettings::ByteSizeLong,
            &ActivationSettings::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ActivationSettings, _impl_._cached_size_),
        false,
    },
    &ActivationSettings::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ActivationSettings::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 90, 2> ActivationSettings::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::ActivationSettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string times = 4 [json_name = "times", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ActivationSettings, _impl_.times_)}},
    // string grace_period = 1 [json_name = "gracePeriod", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ActivationSettings, _impl_.grace_period_)}},
    // string time_unit = 2 [json_name = "timeUnit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ActivationSettings, _impl_.time_unit_)}},
    // string time_window = 3 [json_name = "timeWindow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ActivationSettings, _impl_.time_window_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string grace_period = 1 [json_name = "gracePeriod", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(ActivationSettings, _impl_.grace_period_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string time_unit = 2 [json_name = "timeUnit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(ActivationSettings, _impl_.time_unit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string time_window = 3 [json_name = "timeWindow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(ActivationSettings, _impl_.time_window_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string times = 4 [json_name = "times", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(ActivationSettings, _impl_.times_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\54\14\11\13\5\0\0\0"
    "kentik.synthetics.v202202.ActivationSettings"
    "grace_period"
    "time_unit"
    "time_window"
    "times"
  }},
};

PROTOBUF_NOINLINE void ActivationSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.ActivationSettings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.grace_period_.ClearToEmpty();
  _impl_.time_unit_.ClearToEmpty();
  _impl_.time_window_.ClearToEmpty();
  _impl_.times_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ActivationSettings::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ActivationSettings& this_ = static_cast<const ActivationSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ActivationSettings::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ActivationSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.ActivationSettings)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string grace_period = 1 [json_name = "gracePeriod", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_grace_period().empty()) {
            const std::string& _s = this_._internal_grace_period();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.ActivationSettings.grace_period");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string time_unit = 2 [json_name = "timeUnit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_time_unit().empty()) {
            const std::string& _s = this_._internal_time_unit();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.ActivationSettings.time_unit");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string time_window = 3 [json_name = "timeWindow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_time_window().empty()) {
            const std::string& _s = this_._internal_time_window();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.ActivationSettings.time_window");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string times = 4 [json_name = "times", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_times().empty()) {
            const std::string& _s = this_._internal_times();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.ActivationSettings.times");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.ActivationSettings)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ActivationSettings::ByteSizeLong(const MessageLite& base) {
          const ActivationSettings& this_ = static_cast<const ActivationSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ActivationSettings::ByteSizeLong() const {
          const ActivationSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.ActivationSettings)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string grace_period = 1 [json_name = "gracePeriod", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_grace_period().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_grace_period());
            }
            // string time_unit = 2 [json_name = "timeUnit", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_time_unit().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_time_unit());
            }
            // string time_window = 3 [json_name = "timeWindow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_time_window().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_time_window());
            }
            // string times = 4 [json_name = "times", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_times().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_times());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ActivationSettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ActivationSettings*>(&to_msg);
  auto& from = static_cast<const ActivationSettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.ActivationSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_grace_period().empty()) {
    _this->_internal_set_grace_period(from._internal_grace_period());
  }
  if (!from._internal_time_unit().empty()) {
    _this->_internal_set_time_unit(from._internal_time_unit());
  }
  if (!from._internal_time_window().empty()) {
    _this->_internal_set_time_window(from._internal_time_window());
  }
  if (!from._internal_times().empty()) {
    _this->_internal_set_times(from._internal_times());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ActivationSettings::CopyFrom(const ActivationSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.ActivationSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ActivationSettings::InternalSwap(ActivationSettings* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.grace_period_, &other->_impl_.grace_period_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.time_unit_, &other->_impl_.time_unit_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.time_window_, &other->_impl_.time_window_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.times_, &other->_impl_.times_, arena);
}

::google::protobuf::Metadata ActivationSettings::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HealthSettings::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HealthSettings>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_._has_bits_);
};

HealthSettings::HealthSettings(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.HealthSettings)
}
inline PROTOBUF_NDEBUG_INLINE HealthSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::HealthSettings& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        http_valid_codes_{visibility, arena, from.http_valid_codes_},
        _http_valid_codes_cached_byte_size_{0},
        dns_valid_codes_{visibility, arena, from.dns_valid_codes_},
        _dns_valid_codes_cached_byte_size_{0},
        dns_valid_ips_(arena, from.dns_valid_ips_) {}

HealthSettings::HealthSettings(
    ::google::protobuf::Arena* arena,
    const HealthSettings& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HealthSettings* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.activation_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::ActivationSettings>(
                              arena, *from._impl_.activation_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latency_critical_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, latency_critical_),
           offsetof(Impl_, dns_latency_warning_stddev_) -
               offsetof(Impl_, latency_critical_) +
               sizeof(Impl_::dns_latency_warning_stddev_));

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.HealthSettings)
}
inline PROTOBUF_NDEBUG_INLINE HealthSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        http_valid_codes_{visibility, arena},
        _http_valid_codes_cached_byte_size_{0},
        dns_valid_codes_{visibility, arena},
        _dns_valid_codes_cached_byte_size_{0},
        dns_valid_ips_(arena) {}

inline void HealthSettings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, activation_),
           0,
           offsetof(Impl_, dns_latency_warning_stddev_) -
               offsetof(Impl_, activation_) +
               sizeof(Impl_::dns_latency_warning_stddev_));
}
HealthSettings::~HealthSettings() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.HealthSettings)
  SharedDtor(*this);
}
inline void HealthSettings::SharedDtor(MessageLite& self) {
  HealthSettings& this_ = static_cast<HealthSettings&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.dns_valid_ips_.Destroy();
  delete this_._impl_.activation_;
  this_._impl_.~Impl_();
}

inline void* HealthSettings::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HealthSettings(arena);
}
constexpr auto HealthSettings::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.http_valid_codes_) +
          decltype(HealthSettings::_impl_.http_valid_codes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.dns_valid_codes_) +
          decltype(HealthSettings::_impl_.dns_valid_codes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(HealthSettings), alignof(HealthSettings), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&HealthSettings::PlacementNew_,
                                 sizeof(HealthSettings),
                                 alignof(HealthSettings));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HealthSettings::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HealthSettings_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HealthSettings::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HealthSettings>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HealthSettings::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HealthSettings>(), &HealthSettings::ByteSizeLong,
            &HealthSettings::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_._cached_size_),
        false,
    },
    &HealthSettings::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HealthSettings::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 25, 1, 86, 2> HealthSettings::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_._has_bits_),
    0, // no _extensions_
    25, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4261412864,  // skipmap
    offsetof(decltype(_table_), field_entries),
    25,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::HealthSettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float latency_critical = 1 [json_name = "latencyCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.latency_critical_)}},
    // float latency_warning = 2 [json_name = "latencyWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.latency_warning_)}},
    // float packet_loss_critical = 3 [json_name = "packetLossCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.packet_loss_critical_)}},
    // float packet_loss_warning = 4 [json_name = "packetLossWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.packet_loss_warning_)}},
    // float jitter_critical = 5 [json_name = "jitterCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.jitter_critical_)}},
    // float jitter_warning = 6 [json_name = "jitterWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.jitter_warning_)}},
    // float http_latency_critical = 7 [json_name = "httpLatencyCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.http_latency_critical_)}},
    // float http_latency_warning = 8 [json_name = "httpLatencyWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF32S1,
     {69, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.http_latency_warning_)}},
    // repeated uint32 http_valid_codes = 9 [json_name = "httpValidCodes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastV32P1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.http_valid_codes_)}},
    // repeated uint32 dns_valid_codes = 10 [json_name = "dnsValidCodes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastV32P1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.dns_valid_codes_)}},
    // float latency_critical_stddev = 11 [json_name = "latencyCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF32S1,
     {93, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.latency_critical_stddev_)}},
    // float latency_warning_stddev = 12 [json_name = "latencyWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF32S1,
     {101, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.latency_warning_stddev_)}},
    // float jitter_critical_stddev = 13 [json_name = "jitterCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF32S1,
     {109, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.jitter_critical_stddev_)}},
    // float jitter_warning_stddev = 14 [json_name = "jitterWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF32S1,
     {117, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.jitter_warning_stddev_)}},
    // float http_latency_critical_stddev = 15 [json_name = "httpLatencyCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF32S1,
     {125, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.http_latency_critical_stddev_)}},
    // float http_latency_warning_stddev = 16 [json_name = "httpLatencyWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF32S2,
     {389, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.http_latency_warning_stddev_)}},
    // uint32 unhealthy_subtest_threshold = 17 [json_name = "unhealthySubtestThreshold", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastV32S2,
     {392, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.unhealthy_subtest_threshold_)}},
    // .kentik.synthetics.v202202.ActivationSettings activation = 18 [json_name = "activation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS2,
     {402, 0, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.activation_)}},
    // uint32 cert_expiry_warning = 19 [json_name = "certExpiryWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastV32S2,
     {408, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.cert_expiry_warning_)}},
    // uint32 cert_expiry_critical = 20 [json_name = "certExpiryCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastV32S2,
     {416, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.cert_expiry_critical_)}},
    // string dns_valid_ips = 21 [json_name = "dnsValidIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {426, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.dns_valid_ips_)}},
    // float dns_latency_critical = 22 [json_name = "dnsLatencyCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF32S2,
     {437, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.dns_latency_critical_)}},
    // float dns_latency_warning = 23 [json_name = "dnsLatencyWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF32S2,
     {445, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.dns_latency_warning_)}},
    // float dns_latency_critical_stddev = 24 [json_name = "dnsLatencyCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF32S2,
     {453, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.dns_latency_critical_stddev_)}},
    // float dns_latency_warning_stddev = 25 [json_name = "dnsLatencyWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF32S2,
     {461, 63, 0, PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.dns_latency_warning_stddev_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // float latency_critical = 1 [json_name = "latencyCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.latency_critical_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float latency_warning = 2 [json_name = "latencyWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.latency_warning_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float packet_loss_critical = 3 [json_name = "packetLossCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.packet_loss_critical_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float packet_loss_warning = 4 [json_name = "packetLossWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.packet_loss_warning_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float jitter_critical = 5 [json_name = "jitterCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.jitter_critical_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float jitter_warning = 6 [json_name = "jitterWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.jitter_warning_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float http_latency_critical = 7 [json_name = "httpLatencyCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.http_latency_critical_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float http_latency_warning = 8 [json_name = "httpLatencyWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.http_latency_warning_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // repeated uint32 http_valid_codes = 9 [json_name = "httpValidCodes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.http_valid_codes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated uint32 dns_valid_codes = 10 [json_name = "dnsValidCodes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.dns_valid_codes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // float latency_critical_stddev = 11 [json_name = "latencyCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.latency_critical_stddev_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float latency_warning_stddev = 12 [json_name = "latencyWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.latency_warning_stddev_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float jitter_critical_stddev = 13 [json_name = "jitterCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.jitter_critical_stddev_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float jitter_warning_stddev = 14 [json_name = "jitterWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.jitter_warning_stddev_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float http_latency_critical_stddev = 15 [json_name = "httpLatencyCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.http_latency_critical_stddev_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float http_latency_warning_stddev = 16 [json_name = "httpLatencyWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.http_latency_warning_stddev_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint32 unhealthy_subtest_threshold = 17 [json_name = "unhealthySubtestThreshold", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.unhealthy_subtest_threshold_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .kentik.synthetics.v202202.ActivationSettings activation = 18 [json_name = "activation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.activation_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 cert_expiry_warning = 19 [json_name = "certExpiryWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.cert_expiry_warning_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 cert_expiry_critical = 20 [json_name = "certExpiryCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.cert_expiry_critical_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string dns_valid_ips = 21 [json_name = "dnsValidIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.dns_valid_ips_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float dns_latency_critical = 22 [json_name = "dnsLatencyCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.dns_latency_critical_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float dns_latency_warning = 23 [json_name = "dnsLatencyWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.dns_latency_warning_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float dns_latency_critical_stddev = 24 [json_name = "dnsLatencyCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.dns_latency_critical_stddev_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float dns_latency_warning_stddev = 25 [json_name = "dnsLatencyWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.dns_latency_warning_stddev_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::ActivationSettings>()},
  }}, {{
    "\50\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\15\0\0\0\0\0\0\0\0\0\0"
    "kentik.synthetics.v202202.HealthSettings"
    "dns_valid_ips"
  }},
};

PROTOBUF_NOINLINE void HealthSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.HealthSettings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.http_valid_codes_.Clear();
  _impl_.dns_valid_codes_.Clear();
  _impl_.dns_valid_ips_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.activation_ != nullptr);
    _impl_.activation_->Clear();
  }
  ::memset(&_impl_.latency_critical_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.dns_latency_warning_stddev_) -
      reinterpret_cast<char*>(&_impl_.latency_critical_)) + sizeof(_impl_.dns_latency_warning_stddev_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HealthSettings::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HealthSettings& this_ = static_cast<const HealthSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HealthSettings::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HealthSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.HealthSettings)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float latency_critical = 1 [json_name = "latencyCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint32_t>(this_._internal_latency_critical()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_latency_critical(), target);
          }

          // float latency_warning = 2 [json_name = "latencyWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint32_t>(this_._internal_latency_warning()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_latency_warning(), target);
          }

          // float packet_loss_critical = 3 [json_name = "packetLossCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint32_t>(this_._internal_packet_loss_critical()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_packet_loss_critical(), target);
          }

          // float packet_loss_warning = 4 [json_name = "packetLossWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint32_t>(this_._internal_packet_loss_warning()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_packet_loss_warning(), target);
          }

          // float jitter_critical = 5 [json_name = "jitterCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint32_t>(this_._internal_jitter_critical()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_jitter_critical(), target);
          }

          // float jitter_warning = 6 [json_name = "jitterWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint32_t>(this_._internal_jitter_warning()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                6, this_._internal_jitter_warning(), target);
          }

          // float http_latency_critical = 7 [json_name = "httpLatencyCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint32_t>(this_._internal_http_latency_critical()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                7, this_._internal_http_latency_critical(), target);
          }

          // float http_latency_warning = 8 [json_name = "httpLatencyWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint32_t>(this_._internal_http_latency_warning()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                8, this_._internal_http_latency_warning(), target);
          }

          // repeated uint32 http_valid_codes = 9 [json_name = "httpValidCodes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          {
            int byte_size = this_._impl_._http_valid_codes_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  9, this_._internal_http_valid_codes(), byte_size, target);
            }
          }

          // repeated uint32 dns_valid_codes = 10 [json_name = "dnsValidCodes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          {
            int byte_size = this_._impl_._dns_valid_codes_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  10, this_._internal_dns_valid_codes(), byte_size, target);
            }
          }

          // float latency_critical_stddev = 11 [json_name = "latencyCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint32_t>(this_._internal_latency_critical_stddev()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                11, this_._internal_latency_critical_stddev(), target);
          }

          // float latency_warning_stddev = 12 [json_name = "latencyWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint32_t>(this_._internal_latency_warning_stddev()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                12, this_._internal_latency_warning_stddev(), target);
          }

          // float jitter_critical_stddev = 13 [json_name = "jitterCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint32_t>(this_._internal_jitter_critical_stddev()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                13, this_._internal_jitter_critical_stddev(), target);
          }

          // float jitter_warning_stddev = 14 [json_name = "jitterWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint32_t>(this_._internal_jitter_warning_stddev()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                14, this_._internal_jitter_warning_stddev(), target);
          }

          // float http_latency_critical_stddev = 15 [json_name = "httpLatencyCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint32_t>(this_._internal_http_latency_critical_stddev()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                15, this_._internal_http_latency_critical_stddev(), target);
          }

          // float http_latency_warning_stddev = 16 [json_name = "httpLatencyWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint32_t>(this_._internal_http_latency_warning_stddev()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                16, this_._internal_http_latency_warning_stddev(), target);
          }

          // uint32 unhealthy_subtest_threshold = 17 [json_name = "unhealthySubtestThreshold", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_unhealthy_subtest_threshold() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                17, this_._internal_unhealthy_subtest_threshold(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.synthetics.v202202.ActivationSettings activation = 18 [json_name = "activation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                18, *this_._impl_.activation_, this_._impl_.activation_->GetCachedSize(), target,
                stream);
          }

          // uint32 cert_expiry_warning = 19 [json_name = "certExpiryWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_cert_expiry_warning() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                19, this_._internal_cert_expiry_warning(), target);
          }

          // uint32 cert_expiry_critical = 20 [json_name = "certExpiryCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_cert_expiry_critical() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                20, this_._internal_cert_expiry_critical(), target);
          }

          // string dns_valid_ips = 21 [json_name = "dnsValidIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_dns_valid_ips().empty()) {
            const std::string& _s = this_._internal_dns_valid_ips();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.HealthSettings.dns_valid_ips");
            target = stream->WriteStringMaybeAliased(21, _s, target);
          }

          // float dns_latency_critical = 22 [json_name = "dnsLatencyCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint32_t>(this_._internal_dns_latency_critical()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                22, this_._internal_dns_latency_critical(), target);
          }

          // float dns_latency_warning = 23 [json_name = "dnsLatencyWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint32_t>(this_._internal_dns_latency_warning()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                23, this_._internal_dns_latency_warning(), target);
          }

          // float dns_latency_critical_stddev = 24 [json_name = "dnsLatencyCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint32_t>(this_._internal_dns_latency_critical_stddev()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                24, this_._internal_dns_latency_critical_stddev(), target);
          }

          // float dns_latency_warning_stddev = 25 [json_name = "dnsLatencyWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint32_t>(this_._internal_dns_latency_warning_stddev()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                25, this_._internal_dns_latency_warning_stddev(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.HealthSettings)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HealthSettings::ByteSizeLong(const MessageLite& base) {
          const HealthSettings& this_ = static_cast<const HealthSettings&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HealthSettings::ByteSizeLong() const {
          const HealthSettings& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.HealthSettings)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated uint32 http_valid_codes = 9 [json_name = "httpValidCodes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_http_valid_codes(), 1,
                      this_._impl_._http_valid_codes_cached_byte_size_);
            }
            // repeated uint32 dns_valid_codes = 10 [json_name = "dnsValidCodes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_dns_valid_codes(), 1,
                      this_._impl_._dns_valid_codes_cached_byte_size_);
            }
          }
           {
            // string dns_valid_ips = 21 [json_name = "dnsValidIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_dns_valid_ips().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_dns_valid_ips());
            }
          }
           {
            // .kentik.synthetics.v202202.ActivationSettings activation = 18 [json_name = "activation", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.activation_);
            }
          }
           {
            // float latency_critical = 1 [json_name = "latencyCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint32_t>(this_._internal_latency_critical()) != 0) {
              total_size += 5;
            }
            // float latency_warning = 2 [json_name = "latencyWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint32_t>(this_._internal_latency_warning()) != 0) {
              total_size += 5;
            }
            // float packet_loss_critical = 3 [json_name = "packetLossCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint32_t>(this_._internal_packet_loss_critical()) != 0) {
              total_size += 5;
            }
            // float packet_loss_warning = 4 [json_name = "packetLossWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint32_t>(this_._internal_packet_loss_warning()) != 0) {
              total_size += 5;
            }
            // float jitter_critical = 5 [json_name = "jitterCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint32_t>(this_._internal_jitter_critical()) != 0) {
              total_size += 5;
            }
            // float jitter_warning = 6 [json_name = "jitterWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint32_t>(this_._internal_jitter_warning()) != 0) {
              total_size += 5;
            }
            // float http_latency_critical = 7 [json_name = "httpLatencyCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint32_t>(this_._internal_http_latency_critical()) != 0) {
              total_size += 5;
            }
            // float http_latency_warning = 8 [json_name = "httpLatencyWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint32_t>(this_._internal_http_latency_warning()) != 0) {
              total_size += 5;
            }
            // float latency_critical_stddev = 11 [json_name = "latencyCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint32_t>(this_._internal_latency_critical_stddev()) != 0) {
              total_size += 5;
            }
            // float latency_warning_stddev = 12 [json_name = "latencyWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint32_t>(this_._internal_latency_warning_stddev()) != 0) {
              total_size += 5;
            }
            // float jitter_critical_stddev = 13 [json_name = "jitterCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint32_t>(this_._internal_jitter_critical_stddev()) != 0) {
              total_size += 5;
            }
            // float jitter_warning_stddev = 14 [json_name = "jitterWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint32_t>(this_._internal_jitter_warning_stddev()) != 0) {
              total_size += 5;
            }
            // float http_latency_critical_stddev = 15 [json_name = "httpLatencyCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint32_t>(this_._internal_http_latency_critical_stddev()) != 0) {
              total_size += 5;
            }
            // float http_latency_warning_stddev = 16 [json_name = "httpLatencyWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint32_t>(this_._internal_http_latency_warning_stddev()) != 0) {
              total_size += 6;
            }
            // uint32 unhealthy_subtest_threshold = 17 [json_name = "unhealthySubtestThreshold", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_unhealthy_subtest_threshold() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_unhealthy_subtest_threshold());
            }
            // uint32 cert_expiry_warning = 19 [json_name = "certExpiryWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_cert_expiry_warning() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_cert_expiry_warning());
            }
            // uint32 cert_expiry_critical = 20 [json_name = "certExpiryCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_cert_expiry_critical() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_cert_expiry_critical());
            }
            // float dns_latency_critical = 22 [json_name = "dnsLatencyCritical", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint32_t>(this_._internal_dns_latency_critical()) != 0) {
              total_size += 6;
            }
            // float dns_latency_warning = 23 [json_name = "dnsLatencyWarning", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint32_t>(this_._internal_dns_latency_warning()) != 0) {
              total_size += 6;
            }
            // float dns_latency_critical_stddev = 24 [json_name = "dnsLatencyCriticalStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint32_t>(this_._internal_dns_latency_critical_stddev()) != 0) {
              total_size += 6;
            }
            // float dns_latency_warning_stddev = 25 [json_name = "dnsLatencyWarningStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint32_t>(this_._internal_dns_latency_warning_stddev()) != 0) {
              total_size += 6;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HealthSettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HealthSettings*>(&to_msg);
  auto& from = static_cast<const HealthSettings&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.HealthSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_http_valid_codes()->MergeFrom(from._internal_http_valid_codes());
  _this->_internal_mutable_dns_valid_codes()->MergeFrom(from._internal_dns_valid_codes());
  if (!from._internal_dns_valid_ips().empty()) {
    _this->_internal_set_dns_valid_ips(from._internal_dns_valid_ips());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.activation_ != nullptr);
    if (_this->_impl_.activation_ == nullptr) {
      _this->_impl_.activation_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::ActivationSettings>(arena, *from._impl_.activation_);
    } else {
      _this->_impl_.activation_->MergeFrom(*from._impl_.activation_);
    }
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_latency_critical()) != 0) {
    _this->_impl_.latency_critical_ = from._impl_.latency_critical_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_latency_warning()) != 0) {
    _this->_impl_.latency_warning_ = from._impl_.latency_warning_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_packet_loss_critical()) != 0) {
    _this->_impl_.packet_loss_critical_ = from._impl_.packet_loss_critical_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_packet_loss_warning()) != 0) {
    _this->_impl_.packet_loss_warning_ = from._impl_.packet_loss_warning_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_jitter_critical()) != 0) {
    _this->_impl_.jitter_critical_ = from._impl_.jitter_critical_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_jitter_warning()) != 0) {
    _this->_impl_.jitter_warning_ = from._impl_.jitter_warning_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_http_latency_critical()) != 0) {
    _this->_impl_.http_latency_critical_ = from._impl_.http_latency_critical_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_http_latency_warning()) != 0) {
    _this->_impl_.http_latency_warning_ = from._impl_.http_latency_warning_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_latency_critical_stddev()) != 0) {
    _this->_impl_.latency_critical_stddev_ = from._impl_.latency_critical_stddev_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_latency_warning_stddev()) != 0) {
    _this->_impl_.latency_warning_stddev_ = from._impl_.latency_warning_stddev_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_jitter_critical_stddev()) != 0) {
    _this->_impl_.jitter_critical_stddev_ = from._impl_.jitter_critical_stddev_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_jitter_warning_stddev()) != 0) {
    _this->_impl_.jitter_warning_stddev_ = from._impl_.jitter_warning_stddev_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_http_latency_critical_stddev()) != 0) {
    _this->_impl_.http_latency_critical_stddev_ = from._impl_.http_latency_critical_stddev_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_http_latency_warning_stddev()) != 0) {
    _this->_impl_.http_latency_warning_stddev_ = from._impl_.http_latency_warning_stddev_;
  }
  if (from._internal_unhealthy_subtest_threshold() != 0) {
    _this->_impl_.unhealthy_subtest_threshold_ = from._impl_.unhealthy_subtest_threshold_;
  }
  if (from._internal_cert_expiry_warning() != 0) {
    _this->_impl_.cert_expiry_warning_ = from._impl_.cert_expiry_warning_;
  }
  if (from._internal_cert_expiry_critical() != 0) {
    _this->_impl_.cert_expiry_critical_ = from._impl_.cert_expiry_critical_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_dns_latency_critical()) != 0) {
    _this->_impl_.dns_latency_critical_ = from._impl_.dns_latency_critical_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_dns_latency_warning()) != 0) {
    _this->_impl_.dns_latency_warning_ = from._impl_.dns_latency_warning_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_dns_latency_critical_stddev()) != 0) {
    _this->_impl_.dns_latency_critical_stddev_ = from._impl_.dns_latency_critical_stddev_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_dns_latency_warning_stddev()) != 0) {
    _this->_impl_.dns_latency_warning_stddev_ = from._impl_.dns_latency_warning_stddev_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HealthSettings::CopyFrom(const HealthSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.HealthSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HealthSettings::InternalSwap(HealthSettings* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.http_valid_codes_.InternalSwap(&other->_impl_.http_valid_codes_);
  _impl_.dns_valid_codes_.InternalSwap(&other->_impl_.dns_valid_codes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dns_valid_ips_, &other->_impl_.dns_valid_ips_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.dns_latency_warning_stddev_)
      + sizeof(HealthSettings::_impl_.dns_latency_warning_stddev_)
      - PROTOBUF_FIELD_OFFSET(HealthSettings, _impl_.activation_)>(
          reinterpret_cast<char*>(&_impl_.activation_),
          reinterpret_cast<char*>(&other->_impl_.activation_));
}

::google::protobuf::Metadata HealthSettings::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HostnameTest::_Internal {
 public:
};

HostnameTest::HostnameTest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.HostnameTest)
}
inline PROTOBUF_NDEBUG_INLINE HostnameTest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::HostnameTest& from_msg)
      : target_(arena, from.target_),
        _cached_size_{0} {}

HostnameTest::HostnameTest(
    ::google::protobuf::Arena* arena,
    const HostnameTest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HostnameTest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.HostnameTest)
}
inline PROTOBUF_NDEBUG_INLINE HostnameTest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : target_(arena),
        _cached_size_{0} {}

inline void HostnameTest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HostnameTest::~HostnameTest() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.HostnameTest)
  SharedDtor(*this);
}
inline void HostnameTest::SharedDtor(MessageLite& self) {
  HostnameTest& this_ = static_cast<HostnameTest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.target_.Destroy();
  this_._impl_.~Impl_();
}

inline void* HostnameTest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HostnameTest(arena);
}
constexpr auto HostnameTest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HostnameTest),
                                            alignof(HostnameTest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HostnameTest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HostnameTest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HostnameTest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HostnameTest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HostnameTest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HostnameTest>(), &HostnameTest::ByteSizeLong,
            &HostnameTest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HostnameTest, _impl_._cached_size_),
        false,
    },
    &HostnameTest::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HostnameTest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 53, 2> HostnameTest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::HostnameTest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HostnameTest, _impl_.target_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HostnameTest, _impl_.target_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\6\0\0\0\0\0\0"
    "kentik.synthetics.v202202.HostnameTest"
    "target"
  }},
};

PROTOBUF_NOINLINE void HostnameTest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.HostnameTest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.target_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HostnameTest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HostnameTest& this_ = static_cast<const HostnameTest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HostnameTest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HostnameTest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.HostnameTest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_target().empty()) {
            const std::string& _s = this_._internal_target();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.HostnameTest.target");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.HostnameTest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HostnameTest::ByteSizeLong(const MessageLite& base) {
          const HostnameTest& this_ = static_cast<const HostnameTest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HostnameTest::ByteSizeLong() const {
          const HostnameTest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.HostnameTest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_target().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HostnameTest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HostnameTest*>(&to_msg);
  auto& from = static_cast<const HostnameTest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.HostnameTest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_target().empty()) {
    _this->_internal_set_target(from._internal_target());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HostnameTest::CopyFrom(const HostnameTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.HostnameTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HostnameTest::InternalSwap(HostnameTest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_, &other->_impl_.target_, arena);
}

::google::protobuf::Metadata HostnameTest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class IpTest::_Internal {
 public:
};

IpTest::IpTest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.IpTest)
}
inline PROTOBUF_NDEBUG_INLINE IpTest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::IpTest& from_msg)
      : targets_{visibility, arena, from.targets_},
        _cached_size_{0} {}

IpTest::IpTest(
    ::google::protobuf::Arena* arena,
    const IpTest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  IpTest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.IpTest)
}
inline PROTOBUF_NDEBUG_INLINE IpTest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : targets_{visibility, arena},
        _cached_size_{0} {}

inline void IpTest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
IpTest::~IpTest() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.IpTest)
  SharedDtor(*this);
}
inline void IpTest::SharedDtor(MessageLite& self) {
  IpTest& this_ = static_cast<IpTest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* IpTest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) IpTest(arena);
}
constexpr auto IpTest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(IpTest, _impl_.targets_) +
          decltype(IpTest::_impl_.targets_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(IpTest), alignof(IpTest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&IpTest::PlacementNew_,
                                 sizeof(IpTest),
                                 alignof(IpTest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull IpTest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_IpTest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &IpTest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<IpTest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &IpTest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<IpTest>(), &IpTest::ByteSizeLong,
            &IpTest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(IpTest, _impl_._cached_size_),
        false,
    },
    &IpTest::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* IpTest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 48, 2> IpTest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::IpTest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string targets = 1 [json_name = "targets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(IpTest, _impl_.targets_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string targets = 1 [json_name = "targets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(IpTest, _impl_.targets_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\40\7\0\0\0\0\0\0"
    "kentik.synthetics.v202202.IpTest"
    "targets"
  }},
};

PROTOBUF_NOINLINE void IpTest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.IpTest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.targets_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* IpTest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const IpTest& this_ = static_cast<const IpTest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* IpTest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const IpTest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.IpTest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string targets = 1 [json_name = "targets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_targets_size(); i < n; ++i) {
            const auto& s = this_._internal_targets().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.IpTest.targets");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.IpTest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t IpTest::ByteSizeLong(const MessageLite& base) {
          const IpTest& this_ = static_cast<const IpTest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t IpTest::ByteSizeLong() const {
          const IpTest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.IpTest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string targets = 1 [json_name = "targets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_targets().size());
              for (int i = 0, n = this_._internal_targets().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_targets().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void IpTest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IpTest*>(&to_msg);
  auto& from = static_cast<const IpTest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.IpTest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_targets()->MergeFrom(from._internal_targets());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IpTest::CopyFrom(const IpTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.IpTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IpTest::InternalSwap(IpTest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.targets_.InternalSwap(&other->_impl_.targets_);
}

::google::protobuf::Metadata IpTest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AgentTest::_Internal {
 public:
};

AgentTest::AgentTest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.AgentTest)
}
inline PROTOBUF_NDEBUG_INLINE AgentTest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::AgentTest& from_msg)
      : target_(arena, from.target_),
        _cached_size_{0} {}

AgentTest::AgentTest(
    ::google::protobuf::Arena* arena,
    const AgentTest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AgentTest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.use_local_ip_ = from._impl_.use_local_ip_;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.AgentTest)
}
inline PROTOBUF_NDEBUG_INLINE AgentTest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : target_(arena),
        _cached_size_{0} {}

inline void AgentTest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.use_local_ip_ = {};
}
AgentTest::~AgentTest() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.AgentTest)
  SharedDtor(*this);
}
inline void AgentTest::SharedDtor(MessageLite& self) {
  AgentTest& this_ = static_cast<AgentTest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.target_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AgentTest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AgentTest(arena);
}
constexpr auto AgentTest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AgentTest),
                                            alignof(AgentTest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AgentTest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AgentTest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AgentTest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AgentTest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AgentTest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AgentTest>(), &AgentTest::ByteSizeLong,
            &AgentTest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AgentTest, _impl_._cached_size_),
        false,
    },
    &AgentTest::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AgentTest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 50, 2> AgentTest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::AgentTest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool use_local_ip = 2 [json_name = "useLocalIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AgentTest, _impl_.use_local_ip_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AgentTest, _impl_.use_local_ip_)}},
    // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AgentTest, _impl_.target_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(AgentTest, _impl_.target_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool use_local_ip = 2 [json_name = "useLocalIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(AgentTest, _impl_.use_local_ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\43\6\0\0\0\0\0\0"
    "kentik.synthetics.v202202.AgentTest"
    "target"
  }},
};

PROTOBUF_NOINLINE void AgentTest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.AgentTest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.target_.ClearToEmpty();
  _impl_.use_local_ip_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AgentTest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AgentTest& this_ = static_cast<const AgentTest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AgentTest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AgentTest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.AgentTest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_target().empty()) {
            const std::string& _s = this_._internal_target();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.AgentTest.target");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bool use_local_ip = 2 [json_name = "useLocalIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_use_local_ip() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_use_local_ip(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.AgentTest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AgentTest::ByteSizeLong(const MessageLite& base) {
          const AgentTest& this_ = static_cast<const AgentTest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AgentTest::ByteSizeLong() const {
          const AgentTest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.AgentTest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_target().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target());
            }
            // bool use_local_ip = 2 [json_name = "useLocalIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_use_local_ip() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AgentTest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AgentTest*>(&to_msg);
  auto& from = static_cast<const AgentTest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.AgentTest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_target().empty()) {
    _this->_internal_set_target(from._internal_target());
  }
  if (from._internal_use_local_ip() != 0) {
    _this->_impl_.use_local_ip_ = from._impl_.use_local_ip_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AgentTest::CopyFrom(const AgentTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.AgentTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AgentTest::InternalSwap(AgentTest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_, &other->_impl_.target_, arena);
        swap(_impl_.use_local_ip_, other->_impl_.use_local_ip_);
}

::google::protobuf::Metadata AgentTest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FlowTest::_Internal {
 public:
};

FlowTest::FlowTest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.FlowTest)
}
inline PROTOBUF_NDEBUG_INLINE FlowTest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::FlowTest& from_msg)
      : target_(arena, from.target_),
        type_(arena, from.type_),
        inet_direction_(arena, from.inet_direction_),
        direction_(arena, from.direction_),
        _cached_size_{0} {}

FlowTest::FlowTest(
    ::google::protobuf::Arena* arena,
    const FlowTest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FlowTest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, target_refresh_interval_millis_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, target_refresh_interval_millis_),
           offsetof(Impl_, max_ip_targets_) -
               offsetof(Impl_, target_refresh_interval_millis_) +
               sizeof(Impl_::max_ip_targets_));

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.FlowTest)
}
inline PROTOBUF_NDEBUG_INLINE FlowTest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : target_(arena),
        type_(arena),
        inet_direction_(arena),
        direction_(arena),
        _cached_size_{0} {}

inline void FlowTest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, target_refresh_interval_millis_),
           0,
           offsetof(Impl_, max_ip_targets_) -
               offsetof(Impl_, target_refresh_interval_millis_) +
               sizeof(Impl_::max_ip_targets_));
}
FlowTest::~FlowTest() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.FlowTest)
  SharedDtor(*this);
}
inline void FlowTest::SharedDtor(MessageLite& self) {
  FlowTest& this_ = static_cast<FlowTest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.target_.Destroy();
  this_._impl_.type_.Destroy();
  this_._impl_.inet_direction_.Destroy();
  this_._impl_.direction_.Destroy();
  this_._impl_.~Impl_();
}

inline void* FlowTest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FlowTest(arena);
}
constexpr auto FlowTest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(FlowTest),
                                            alignof(FlowTest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FlowTest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FlowTest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FlowTest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FlowTest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FlowTest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FlowTest>(), &FlowTest::ByteSizeLong,
            &FlowTest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FlowTest, _impl_._cached_size_),
        false,
    },
    &FlowTest::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FlowTest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 76, 2> FlowTest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::FlowTest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTest, _impl_.target_)}},
    // uint32 target_refresh_interval_millis = 2 [json_name = "targetRefreshIntervalMillis", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FlowTest, _impl_.target_refresh_interval_millis_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTest, _impl_.target_refresh_interval_millis_)}},
    // uint32 max_providers = 3 [json_name = "maxProviders", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FlowTest, _impl_.max_providers_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTest, _impl_.max_providers_)}},
    // uint32 max_ip_targets = 4 [json_name = "maxIpTargets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FlowTest, _impl_.max_ip_targets_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTest, _impl_.max_ip_targets_)}},
    // string type = 5 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTest, _impl_.type_)}},
    // string inet_direction = 6 [json_name = "inetDirection", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTest, _impl_.inet_direction_)}},
    // string direction = 7 [json_name = "direction", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTest, _impl_.direction_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTest, _impl_.target_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 target_refresh_interval_millis = 2 [json_name = "targetRefreshIntervalMillis", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTest, _impl_.target_refresh_interval_millis_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 max_providers = 3 [json_name = "maxProviders", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTest, _impl_.max_providers_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 max_ip_targets = 4 [json_name = "maxIpTargets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTest, _impl_.max_ip_targets_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string type = 5 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTest, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string inet_direction = 6 [json_name = "inetDirection", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTest, _impl_.inet_direction_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string direction = 7 [json_name = "direction", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTest, _impl_.direction_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\6\0\0\0\4\16\11"
    "kentik.synthetics.v202202.FlowTest"
    "target"
    "type"
    "inet_direction"
    "direction"
  }},
};

PROTOBUF_NOINLINE void FlowTest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.FlowTest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.target_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  _impl_.inet_direction_.ClearToEmpty();
  _impl_.direction_.ClearToEmpty();
  ::memset(&_impl_.target_refresh_interval_millis_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.max_ip_targets_) -
      reinterpret_cast<char*>(&_impl_.target_refresh_interval_millis_)) + sizeof(_impl_.max_ip_targets_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FlowTest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FlowTest& this_ = static_cast<const FlowTest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FlowTest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FlowTest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.FlowTest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_target().empty()) {
            const std::string& _s = this_._internal_target();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.FlowTest.target");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 target_refresh_interval_millis = 2 [json_name = "targetRefreshIntervalMillis", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_target_refresh_interval_millis() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_target_refresh_interval_millis(), target);
          }

          // uint32 max_providers = 3 [json_name = "maxProviders", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_max_providers() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_max_providers(), target);
          }

          // uint32 max_ip_targets = 4 [json_name = "maxIpTargets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_max_ip_targets() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_max_ip_targets(), target);
          }

          // string type = 5 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_type().empty()) {
            const std::string& _s = this_._internal_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.FlowTest.type");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string inet_direction = 6 [json_name = "inetDirection", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_inet_direction().empty()) {
            const std::string& _s = this_._internal_inet_direction();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.FlowTest.inet_direction");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string direction = 7 [json_name = "direction", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_direction().empty()) {
            const std::string& _s = this_._internal_direction();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.FlowTest.direction");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.FlowTest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FlowTest::ByteSizeLong(const MessageLite& base) {
          const FlowTest& this_ = static_cast<const FlowTest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FlowTest::ByteSizeLong() const {
          const FlowTest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.FlowTest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_target().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target());
            }
            // string type = 5 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type());
            }
            // string inet_direction = 6 [json_name = "inetDirection", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_inet_direction().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_inet_direction());
            }
            // string direction = 7 [json_name = "direction", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_direction().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_direction());
            }
            // uint32 target_refresh_interval_millis = 2 [json_name = "targetRefreshIntervalMillis", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_target_refresh_interval_millis() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_target_refresh_interval_millis());
            }
            // uint32 max_providers = 3 [json_name = "maxProviders", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_max_providers() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_max_providers());
            }
            // uint32 max_ip_targets = 4 [json_name = "maxIpTargets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_max_ip_targets() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_max_ip_targets());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FlowTest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FlowTest*>(&to_msg);
  auto& from = static_cast<const FlowTest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.FlowTest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_target().empty()) {
    _this->_internal_set_target(from._internal_target());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_inet_direction().empty()) {
    _this->_internal_set_inet_direction(from._internal_inet_direction());
  }
  if (!from._internal_direction().empty()) {
    _this->_internal_set_direction(from._internal_direction());
  }
  if (from._internal_target_refresh_interval_millis() != 0) {
    _this->_impl_.target_refresh_interval_millis_ = from._impl_.target_refresh_interval_millis_;
  }
  if (from._internal_max_providers() != 0) {
    _this->_impl_.max_providers_ = from._impl_.max_providers_;
  }
  if (from._internal_max_ip_targets() != 0) {
    _this->_impl_.max_ip_targets_ = from._impl_.max_ip_targets_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FlowTest::CopyFrom(const FlowTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.FlowTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FlowTest::InternalSwap(FlowTest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_, &other->_impl_.target_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.inet_direction_, &other->_impl_.inet_direction_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.direction_, &other->_impl_.direction_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FlowTest, _impl_.max_ip_targets_)
      + sizeof(FlowTest::_impl_.max_ip_targets_)
      - PROTOBUF_FIELD_OFFSET(FlowTest, _impl_.target_refresh_interval_millis_)>(
          reinterpret_cast<char*>(&_impl_.target_refresh_interval_millis_),
          reinterpret_cast<char*>(&other->_impl_.target_refresh_interval_millis_));
}

::google::protobuf::Metadata FlowTest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DnsTest::_Internal {
 public:
};

DnsTest::DnsTest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.DnsTest)
}
inline PROTOBUF_NDEBUG_INLINE DnsTest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::DnsTest& from_msg)
      : servers_{visibility, arena, from.servers_},
        target_(arena, from.target_),
        _cached_size_{0} {}

DnsTest::DnsTest(
    ::google::protobuf::Arena* arena,
    const DnsTest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DnsTest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timeout_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timeout_),
           offsetof(Impl_, port_) -
               offsetof(Impl_, timeout_) +
               sizeof(Impl_::port_));

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.DnsTest)
}
inline PROTOBUF_NDEBUG_INLINE DnsTest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : servers_{visibility, arena},
        target_(arena),
        _cached_size_{0} {}

inline void DnsTest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timeout_),
           0,
           offsetof(Impl_, port_) -
               offsetof(Impl_, timeout_) +
               sizeof(Impl_::port_));
}
DnsTest::~DnsTest() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.DnsTest)
  SharedDtor(*this);
}
inline void DnsTest::SharedDtor(MessageLite& self) {
  DnsTest& this_ = static_cast<DnsTest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.target_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DnsTest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DnsTest(arena);
}
constexpr auto DnsTest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DnsTest, _impl_.servers_) +
          decltype(DnsTest::_impl_.servers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(DnsTest), alignof(DnsTest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DnsTest::PlacementNew_,
                                 sizeof(DnsTest),
                                 alignof(DnsTest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DnsTest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DnsTest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DnsTest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DnsTest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DnsTest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DnsTest>(), &DnsTest::ByteSizeLong,
            &DnsTest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DnsTest, _impl_._cached_size_),
        false,
    },
    &DnsTest::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DnsTest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 55, 2> DnsTest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::DnsTest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DnsTest, _impl_.target_)}},
    // uint32 timeout = 2 [json_name = "timeout", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DnsTest, _impl_.timeout_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DnsTest, _impl_.timeout_)}},
    // .kentik.synthetics.v202202.DNSRecord record_type = 3 [json_name = "recordType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DnsTest, _impl_.record_type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(DnsTest, _impl_.record_type_)}},
    // repeated string servers = 4 [json_name = "servers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(DnsTest, _impl_.servers_)}},
    // uint32 port = 5 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DnsTest, _impl_.port_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(DnsTest, _impl_.port_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DnsTest, _impl_.target_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 timeout = 2 [json_name = "timeout", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DnsTest, _impl_.timeout_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .kentik.synthetics.v202202.DNSRecord record_type = 3 [json_name = "recordType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DnsTest, _impl_.record_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated string servers = 4 [json_name = "servers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DnsTest, _impl_.servers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // uint32 port = 5 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DnsTest, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\41\6\0\0\7\0\0\0"
    "kentik.synthetics.v202202.DnsTest"
    "target"
    "servers"
  }},
};

PROTOBUF_NOINLINE void DnsTest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.DnsTest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.servers_.Clear();
  _impl_.target_.ClearToEmpty();
  ::memset(&_impl_.timeout_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.port_) -
      reinterpret_cast<char*>(&_impl_.timeout_)) + sizeof(_impl_.port_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DnsTest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DnsTest& this_ = static_cast<const DnsTest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DnsTest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DnsTest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.DnsTest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_target().empty()) {
            const std::string& _s = this_._internal_target();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.DnsTest.target");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 timeout = 2 [json_name = "timeout", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_timeout() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_timeout(), target);
          }

          // .kentik.synthetics.v202202.DNSRecord record_type = 3 [json_name = "recordType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_record_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_record_type(), target);
          }

          // repeated string servers = 4 [json_name = "servers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_servers_size(); i < n; ++i) {
            const auto& s = this_._internal_servers().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.DnsTest.servers");
            target = stream->WriteString(4, s, target);
          }

          // uint32 port = 5 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_port() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_port(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.DnsTest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DnsTest::ByteSizeLong(const MessageLite& base) {
          const DnsTest& this_ = static_cast<const DnsTest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DnsTest::ByteSizeLong() const {
          const DnsTest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.DnsTest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string servers = 4 [json_name = "servers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_servers().size());
              for (int i = 0, n = this_._internal_servers().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_servers().Get(i));
              }
            }
          }
           {
            // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_target().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target());
            }
            // uint32 timeout = 2 [json_name = "timeout", deprecated = true, (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_timeout() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_timeout());
            }
            // .kentik.synthetics.v202202.DNSRecord record_type = 3 [json_name = "recordType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_record_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_record_type());
            }
            // uint32 port = 5 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_port() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_port());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DnsTest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DnsTest*>(&to_msg);
  auto& from = static_cast<const DnsTest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.DnsTest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_servers()->MergeFrom(from._internal_servers());
  if (!from._internal_target().empty()) {
    _this->_internal_set_target(from._internal_target());
  }
  if (from._internal_timeout() != 0) {
    _this->_impl_.timeout_ = from._impl_.timeout_;
  }
  if (from._internal_record_type() != 0) {
    _this->_impl_.record_type_ = from._impl_.record_type_;
  }
  if (from._internal_port() != 0) {
    _this->_impl_.port_ = from._impl_.port_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DnsTest::CopyFrom(const DnsTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.DnsTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DnsTest::InternalSwap(DnsTest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.servers_.InternalSwap(&other->_impl_.servers_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_, &other->_impl_.target_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DnsTest, _impl_.port_)
      + sizeof(DnsTest::_impl_.port_)
      - PROTOBUF_FIELD_OFFSET(DnsTest, _impl_.timeout_)>(
          reinterpret_cast<char*>(&_impl_.timeout_),
          reinterpret_cast<char*>(&other->_impl_.timeout_));
}

::google::protobuf::Metadata DnsTest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              UrlTest_HeadersEntry_DoNotUse::UrlTest_HeadersEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              UrlTest_HeadersEntry_DoNotUse::UrlTest_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              UrlTest_HeadersEntry_DoNotUse::UrlTest_HeadersEntry_DoNotUse() : SuperType() {}
              UrlTest_HeadersEntry_DoNotUse::UrlTest_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* UrlTest_HeadersEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) UrlTest_HeadersEntry_DoNotUse(arena);
              }
              constexpr auto UrlTest_HeadersEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UrlTest_HeadersEntry_DoNotUse),
                                                          alignof(UrlTest_HeadersEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull UrlTest_HeadersEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_UrlTest_HeadersEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &UrlTest_HeadersEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<UrlTest_HeadersEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &UrlTest_HeadersEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &UrlTest_HeadersEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(UrlTest_HeadersEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &UrlTest_HeadersEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* UrlTest_HeadersEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 63, 2> UrlTest_HeadersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UrlTest_HeadersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::UrlTest_HeadersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UrlTest_HeadersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UrlTest_HeadersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(UrlTest_HeadersEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(UrlTest_HeadersEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\3\5\0\0\0\0\0"
    "kentik.synthetics.v202202.UrlTest.HeadersEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class UrlTest::_Internal {
 public:
};

UrlTest::UrlTest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.UrlTest)
}
inline PROTOBUF_NDEBUG_INLINE UrlTest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::UrlTest& from_msg)
      : headers_{visibility, arena, from.headers_},
        target_(arena, from.target_),
        method_(arena, from.method_),
        body_(arena, from.body_),
        _cached_size_{0} {}

UrlTest::UrlTest(
    ::google::protobuf::Arena* arena,
    const UrlTest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UrlTest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timeout_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timeout_),
           offsetof(Impl_, ignore_tls_errors_) -
               offsetof(Impl_, timeout_) +
               sizeof(Impl_::ignore_tls_errors_));

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.UrlTest)
}
inline PROTOBUF_NDEBUG_INLINE UrlTest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : headers_{visibility, arena},
        target_(arena),
        method_(arena),
        body_(arena),
        _cached_size_{0} {}

inline void UrlTest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timeout_),
           0,
           offsetof(Impl_, ignore_tls_errors_) -
               offsetof(Impl_, timeout_) +
               sizeof(Impl_::ignore_tls_errors_));
}
UrlTest::~UrlTest() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.UrlTest)
  SharedDtor(*this);
}
inline void UrlTest::SharedDtor(MessageLite& self) {
  UrlTest& this_ = static_cast<UrlTest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.target_.Destroy();
  this_._impl_.method_.Destroy();
  this_._impl_.body_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UrlTest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UrlTest(arena);
}
constexpr auto UrlTest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UrlTest, _impl_.headers_) +
          decltype(UrlTest::_impl_.headers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(UrlTest, _impl_.headers_) +
          decltype(UrlTest::_impl_.headers_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(UrlTest), alignof(UrlTest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UrlTest::PlacementNew_,
                                 sizeof(UrlTest),
                                 alignof(UrlTest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UrlTest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UrlTest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UrlTest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UrlTest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UrlTest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UrlTest>(), &UrlTest::ByteSizeLong,
            &UrlTest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UrlTest, _impl_._cached_size_),
        false,
    },
    &UrlTest::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UrlTest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 65, 2> UrlTest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::UrlTest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UrlTest, _impl_.target_)}},
    // uint32 timeout = 2 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UrlTest, _impl_.timeout_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UrlTest, _impl_.timeout_)}},
    // string method = 3 [json_name = "method", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(UrlTest, _impl_.method_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string body = 5 [json_name = "body", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(UrlTest, _impl_.body_)}},
    // bool ignore_tls_errors = 6 [json_name = "ignoreTlsErrors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(UrlTest, _impl_.ignore_tls_errors_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(UrlTest, _impl_.ignore_tls_errors_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(UrlTest, _impl_.target_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 timeout = 2 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(UrlTest, _impl_.timeout_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string method = 3 [json_name = "method", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(UrlTest, _impl_.method_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> headers = 4 [json_name = "headers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(UrlTest, _impl_.headers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string body = 5 [json_name = "body", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(UrlTest, _impl_.body_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool ignore_tls_errors = 6 [json_name = "ignoreTlsErrors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(UrlTest, _impl_.ignore_tls_errors_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(UrlTest()._impl_.headers_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\41\6\0\6\7\4\0\0"
    "kentik.synthetics.v202202.UrlTest"
    "target"
    "method"
    "headers"
    "body"
  }},
};

PROTOBUF_NOINLINE void UrlTest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.UrlTest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.headers_.Clear();
  _impl_.target_.ClearToEmpty();
  _impl_.method_.ClearToEmpty();
  _impl_.body_.ClearToEmpty();
  ::memset(&_impl_.timeout_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ignore_tls_errors_) -
      reinterpret_cast<char*>(&_impl_.timeout_)) + sizeof(_impl_.ignore_tls_errors_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UrlTest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UrlTest& this_ = static_cast<const UrlTest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UrlTest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UrlTest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.UrlTest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_target().empty()) {
            const std::string& _s = this_._internal_target();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.UrlTest.target");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 timeout = 2 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_timeout() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_timeout(), target);
          }

          // string method = 3 [json_name = "method", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_method().empty()) {
            const std::string& _s = this_._internal_method();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.UrlTest.method");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // map<string, string> headers = 4 [json_name = "headers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_headers().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_headers();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.UrlTest.headers");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.UrlTest.headers");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.UrlTest.headers");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.UrlTest.headers");
              }
            }
          }

          // string body = 5 [json_name = "body", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_body().empty()) {
            const std::string& _s = this_._internal_body();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.UrlTest.body");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // bool ignore_tls_errors = 6 [json_name = "ignoreTlsErrors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_ignore_tls_errors() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_ignore_tls_errors(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.UrlTest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UrlTest::ByteSizeLong(const MessageLite& base) {
          const UrlTest& this_ = static_cast<const UrlTest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UrlTest::ByteSizeLong() const {
          const UrlTest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.UrlTest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> headers = 4 [json_name = "headers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_headers_size());
              for (const auto& entry : this_._internal_headers()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_target().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target());
            }
            // string method = 3 [json_name = "method", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_method().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_method());
            }
            // string body = 5 [json_name = "body", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_body().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_body());
            }
            // uint32 timeout = 2 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_timeout() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_timeout());
            }
            // bool ignore_tls_errors = 6 [json_name = "ignoreTlsErrors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_ignore_tls_errors() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UrlTest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UrlTest*>(&to_msg);
  auto& from = static_cast<const UrlTest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.UrlTest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.headers_.MergeFrom(from._impl_.headers_);
  if (!from._internal_target().empty()) {
    _this->_internal_set_target(from._internal_target());
  }
  if (!from._internal_method().empty()) {
    _this->_internal_set_method(from._internal_method());
  }
  if (!from._internal_body().empty()) {
    _this->_internal_set_body(from._internal_body());
  }
  if (from._internal_timeout() != 0) {
    _this->_impl_.timeout_ = from._impl_.timeout_;
  }
  if (from._internal_ignore_tls_errors() != 0) {
    _this->_impl_.ignore_tls_errors_ = from._impl_.ignore_tls_errors_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UrlTest::CopyFrom(const UrlTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.UrlTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UrlTest::InternalSwap(UrlTest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.headers_.InternalSwap(&other->_impl_.headers_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_, &other->_impl_.target_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.method_, &other->_impl_.method_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.body_, &other->_impl_.body_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UrlTest, _impl_.ignore_tls_errors_)
      + sizeof(UrlTest::_impl_.ignore_tls_errors_)
      - PROTOBUF_FIELD_OFFSET(UrlTest, _impl_.timeout_)>(
          reinterpret_cast<char*>(&_impl_.timeout_),
          reinterpret_cast<char*>(&other->_impl_.timeout_));
}

::google::protobuf::Metadata UrlTest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              PageLoadTest_HeadersEntry_DoNotUse::PageLoadTest_HeadersEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              PageLoadTest_HeadersEntry_DoNotUse::PageLoadTest_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              PageLoadTest_HeadersEntry_DoNotUse::PageLoadTest_HeadersEntry_DoNotUse() : SuperType() {}
              PageLoadTest_HeadersEntry_DoNotUse::PageLoadTest_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* PageLoadTest_HeadersEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) PageLoadTest_HeadersEntry_DoNotUse(arena);
              }
              constexpr auto PageLoadTest_HeadersEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PageLoadTest_HeadersEntry_DoNotUse),
                                                          alignof(PageLoadTest_HeadersEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull PageLoadTest_HeadersEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_PageLoadTest_HeadersEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &PageLoadTest_HeadersEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<PageLoadTest_HeadersEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &PageLoadTest_HeadersEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &PageLoadTest_HeadersEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(PageLoadTest_HeadersEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &PageLoadTest_HeadersEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* PageLoadTest_HeadersEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 68, 2> PageLoadTest_HeadersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PageLoadTest_HeadersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::PageLoadTest_HeadersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PageLoadTest_HeadersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PageLoadTest_HeadersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(PageLoadTest_HeadersEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(PageLoadTest_HeadersEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\63\3\5\0\0\0\0\0"
    "kentik.synthetics.v202202.PageLoadTest.HeadersEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              PageLoadTest_CssSelectorsEntry_DoNotUse::PageLoadTest_CssSelectorsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              PageLoadTest_CssSelectorsEntry_DoNotUse::PageLoadTest_CssSelectorsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              PageLoadTest_CssSelectorsEntry_DoNotUse::PageLoadTest_CssSelectorsEntry_DoNotUse() : SuperType() {}
              PageLoadTest_CssSelectorsEntry_DoNotUse::PageLoadTest_CssSelectorsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* PageLoadTest_CssSelectorsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) PageLoadTest_CssSelectorsEntry_DoNotUse(arena);
              }
              constexpr auto PageLoadTest_CssSelectorsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PageLoadTest_CssSelectorsEntry_DoNotUse),
                                                          alignof(PageLoadTest_CssSelectorsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull PageLoadTest_CssSelectorsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_PageLoadTest_CssSelectorsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &PageLoadTest_CssSelectorsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<PageLoadTest_CssSelectorsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &PageLoadTest_CssSelectorsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &PageLoadTest_CssSelectorsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(PageLoadTest_CssSelectorsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &PageLoadTest_CssSelectorsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* PageLoadTest_CssSelectorsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 73, 2> PageLoadTest_CssSelectorsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PageLoadTest_CssSelectorsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::PageLoadTest_CssSelectorsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PageLoadTest_CssSelectorsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PageLoadTest_CssSelectorsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(PageLoadTest_CssSelectorsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(PageLoadTest_CssSelectorsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\70\3\5\0\0\0\0\0"
    "kentik.synthetics.v202202.PageLoadTest.CssSelectorsEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class PageLoadTest::_Internal {
 public:
};

PageLoadTest::PageLoadTest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.PageLoadTest)
}
inline PROTOBUF_NDEBUG_INLINE PageLoadTest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::PageLoadTest& from_msg)
      : headers_{visibility, arena, from.headers_},
        css_selectors_{visibility, arena, from.css_selectors_},
        target_(arena, from.target_),
        _cached_size_{0} {}

PageLoadTest::PageLoadTest(
    ::google::protobuf::Arena* arena,
    const PageLoadTest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PageLoadTest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timeout_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timeout_),
           offsetof(Impl_, ignore_tls_errors_) -
               offsetof(Impl_, timeout_) +
               sizeof(Impl_::ignore_tls_errors_));

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.PageLoadTest)
}
inline PROTOBUF_NDEBUG_INLINE PageLoadTest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : headers_{visibility, arena},
        css_selectors_{visibility, arena},
        target_(arena),
        _cached_size_{0} {}

inline void PageLoadTest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timeout_),
           0,
           offsetof(Impl_, ignore_tls_errors_) -
               offsetof(Impl_, timeout_) +
               sizeof(Impl_::ignore_tls_errors_));
}
PageLoadTest::~PageLoadTest() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.PageLoadTest)
  SharedDtor(*this);
}
inline void PageLoadTest::SharedDtor(MessageLite& self) {
  PageLoadTest& this_ = static_cast<PageLoadTest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.target_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PageLoadTest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PageLoadTest(arena);
}
constexpr auto PageLoadTest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PageLoadTest, _impl_.headers_) +
          decltype(PageLoadTest::_impl_.headers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PageLoadTest, _impl_.headers_) +
          decltype(PageLoadTest::_impl_.headers_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PageLoadTest, _impl_.css_selectors_) +
          decltype(PageLoadTest::_impl_.css_selectors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PageLoadTest, _impl_.css_selectors_) +
          decltype(PageLoadTest::_impl_.css_selectors_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PageLoadTest), alignof(PageLoadTest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PageLoadTest::PlacementNew_,
                                 sizeof(PageLoadTest),
                                 alignof(PageLoadTest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PageLoadTest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PageLoadTest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PageLoadTest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PageLoadTest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PageLoadTest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PageLoadTest>(), &PageLoadTest::ByteSizeLong,
            &PageLoadTest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PageLoadTest, _impl_._cached_size_),
        false,
    },
    &PageLoadTest::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PageLoadTest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 2, 73, 2> PageLoadTest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::PageLoadTest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool ignore_tls_errors = 4 [json_name = "ignoreTlsErrors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PageLoadTest, _impl_.ignore_tls_errors_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PageLoadTest, _impl_.ignore_tls_errors_)}},
    // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PageLoadTest, _impl_.target_)}},
    // uint32 timeout = 2 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PageLoadTest, _impl_.timeout_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PageLoadTest, _impl_.timeout_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PageLoadTest, _impl_.target_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 timeout = 2 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PageLoadTest, _impl_.timeout_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // map<string, string> headers = 3 [json_name = "headers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PageLoadTest, _impl_.headers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool ignore_tls_errors = 4 [json_name = "ignoreTlsErrors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PageLoadTest, _impl_.ignore_tls_errors_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // map<string, string> css_selectors = 5 [json_name = "cssSelectors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PageLoadTest, _impl_.css_selectors_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(PageLoadTest()._impl_.headers_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(PageLoadTest()._impl_.css_selectors_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\46\6\0\7\0\15\0\0"
    "kentik.synthetics.v202202.PageLoadTest"
    "target"
    "headers"
    "css_selectors"
  }},
};

PROTOBUF_NOINLINE void PageLoadTest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.PageLoadTest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.headers_.Clear();
  _impl_.css_selectors_.Clear();
  _impl_.target_.ClearToEmpty();
  ::memset(&_impl_.timeout_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ignore_tls_errors_) -
      reinterpret_cast<char*>(&_impl_.timeout_)) + sizeof(_impl_.ignore_tls_errors_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PageLoadTest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PageLoadTest& this_ = static_cast<const PageLoadTest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PageLoadTest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PageLoadTest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.PageLoadTest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_target().empty()) {
            const std::string& _s = this_._internal_target();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.PageLoadTest.target");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 timeout = 2 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_timeout() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_timeout(), target);
          }

          // map<string, string> headers = 3 [json_name = "headers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_headers().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_headers();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.PageLoadTest.headers");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.PageLoadTest.headers");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.PageLoadTest.headers");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.PageLoadTest.headers");
              }
            }
          }

          // bool ignore_tls_errors = 4 [json_name = "ignoreTlsErrors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_ignore_tls_errors() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_ignore_tls_errors(), target);
          }

          // map<string, string> css_selectors = 5 [json_name = "cssSelectors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_css_selectors().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_css_selectors();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.PageLoadTest.css_selectors");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.PageLoadTest.css_selectors");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.PageLoadTest.css_selectors");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.PageLoadTest.css_selectors");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.PageLoadTest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PageLoadTest::ByteSizeLong(const MessageLite& base) {
          const PageLoadTest& this_ = static_cast<const PageLoadTest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PageLoadTest::ByteSizeLong() const {
          const PageLoadTest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.PageLoadTest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> headers = 3 [json_name = "headers", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_headers_size());
              for (const auto& entry : this_._internal_headers()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> css_selectors = 5 [json_name = "cssSelectors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_css_selectors_size());
              for (const auto& entry : this_._internal_css_selectors()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_target().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target());
            }
            // uint32 timeout = 2 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_timeout() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_timeout());
            }
            // bool ignore_tls_errors = 4 [json_name = "ignoreTlsErrors", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_ignore_tls_errors() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PageLoadTest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PageLoadTest*>(&to_msg);
  auto& from = static_cast<const PageLoadTest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.PageLoadTest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.headers_.MergeFrom(from._impl_.headers_);
  _this->_impl_.css_selectors_.MergeFrom(from._impl_.css_selectors_);
  if (!from._internal_target().empty()) {
    _this->_internal_set_target(from._internal_target());
  }
  if (from._internal_timeout() != 0) {
    _this->_impl_.timeout_ = from._impl_.timeout_;
  }
  if (from._internal_ignore_tls_errors() != 0) {
    _this->_impl_.ignore_tls_errors_ = from._impl_.ignore_tls_errors_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PageLoadTest::CopyFrom(const PageLoadTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.PageLoadTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PageLoadTest::InternalSwap(PageLoadTest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.headers_.InternalSwap(&other->_impl_.headers_);
  _impl_.css_selectors_.InternalSwap(&other->_impl_.css_selectors_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_, &other->_impl_.target_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PageLoadTest, _impl_.ignore_tls_errors_)
      + sizeof(PageLoadTest::_impl_.ignore_tls_errors_)
      - PROTOBUF_FIELD_OFFSET(PageLoadTest, _impl_.timeout_)>(
          reinterpret_cast<char*>(&_impl_.timeout_),
          reinterpret_cast<char*>(&other->_impl_.timeout_));
}

::google::protobuf::Metadata PageLoadTest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NetworkMeshTest::_Internal {
 public:
};

NetworkMeshTest::NetworkMeshTest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.NetworkMeshTest)
}
NetworkMeshTest::NetworkMeshTest(
    ::google::protobuf::Arena* arena, const NetworkMeshTest& from)
    : NetworkMeshTest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NetworkMeshTest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NetworkMeshTest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.use_local_ip_ = {};
}
NetworkMeshTest::~NetworkMeshTest() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.NetworkMeshTest)
  SharedDtor(*this);
}
inline void NetworkMeshTest::SharedDtor(MessageLite& self) {
  NetworkMeshTest& this_ = static_cast<NetworkMeshTest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* NetworkMeshTest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NetworkMeshTest(arena);
}
constexpr auto NetworkMeshTest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(NetworkMeshTest),
                                            alignof(NetworkMeshTest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NetworkMeshTest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NetworkMeshTest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NetworkMeshTest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NetworkMeshTest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NetworkMeshTest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NetworkMeshTest>(), &NetworkMeshTest::ByteSizeLong,
            &NetworkMeshTest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NetworkMeshTest, _impl_._cached_size_),
        false,
    },
    &NetworkMeshTest::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NetworkMeshTest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> NetworkMeshTest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::NetworkMeshTest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool use_local_ip = 1 [json_name = "useLocalIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NetworkMeshTest, _impl_.use_local_ip_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkMeshTest, _impl_.use_local_ip_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool use_local_ip = 1 [json_name = "useLocalIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(NetworkMeshTest, _impl_.use_local_ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void NetworkMeshTest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.NetworkMeshTest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.use_local_ip_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NetworkMeshTest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NetworkMeshTest& this_ = static_cast<const NetworkMeshTest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NetworkMeshTest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NetworkMeshTest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.NetworkMeshTest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool use_local_ip = 1 [json_name = "useLocalIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_use_local_ip() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_use_local_ip(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.NetworkMeshTest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NetworkMeshTest::ByteSizeLong(const MessageLite& base) {
          const NetworkMeshTest& this_ = static_cast<const NetworkMeshTest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NetworkMeshTest::ByteSizeLong() const {
          const NetworkMeshTest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.NetworkMeshTest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bool use_local_ip = 1 [json_name = "useLocalIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_use_local_ip() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NetworkMeshTest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NetworkMeshTest*>(&to_msg);
  auto& from = static_cast<const NetworkMeshTest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.NetworkMeshTest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_use_local_ip() != 0) {
    _this->_impl_.use_local_ip_ = from._impl_.use_local_ip_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NetworkMeshTest::CopyFrom(const NetworkMeshTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.NetworkMeshTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NetworkMeshTest::InternalSwap(NetworkMeshTest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.use_local_ip_, other->_impl_.use_local_ip_);
}

::google::protobuf::Metadata NetworkMeshTest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MetricData::_Internal {
 public:
};

MetricData::MetricData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.MetricData)
}
inline PROTOBUF_NDEBUG_INLINE MetricData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::MetricData& from_msg)
      : health_(arena, from.health_),
        _cached_size_{0} {}

MetricData::MetricData(
    ::google::protobuf::Arena* arena,
    const MetricData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MetricData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, current_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, current_),
           offsetof(Impl_, rolling_stddev_) -
               offsetof(Impl_, current_) +
               sizeof(Impl_::rolling_stddev_));

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.MetricData)
}
inline PROTOBUF_NDEBUG_INLINE MetricData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : health_(arena),
        _cached_size_{0} {}

inline void MetricData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, current_),
           0,
           offsetof(Impl_, rolling_stddev_) -
               offsetof(Impl_, current_) +
               sizeof(Impl_::rolling_stddev_));
}
MetricData::~MetricData() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.MetricData)
  SharedDtor(*this);
}
inline void MetricData::SharedDtor(MessageLite& self) {
  MetricData& this_ = static_cast<MetricData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.health_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MetricData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MetricData(arena);
}
constexpr auto MetricData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MetricData),
                                            alignof(MetricData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MetricData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MetricData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MetricData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MetricData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MetricData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MetricData>(), &MetricData::ByteSizeLong,
            &MetricData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MetricData, _impl_._cached_size_),
        false,
    },
    &MetricData::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MetricData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 51, 2> MetricData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::MetricData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string health = 4 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(MetricData, _impl_.health_)}},
    // uint32 current = 1 [json_name = "current", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MetricData, _impl_.current_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MetricData, _impl_.current_)}},
    // uint32 rolling_avg = 2 [json_name = "rollingAvg", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MetricData, _impl_.rolling_avg_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MetricData, _impl_.rolling_avg_)}},
    // uint32 rolling_stddev = 3 [json_name = "rollingStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MetricData, _impl_.rolling_stddev_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MetricData, _impl_.rolling_stddev_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 current = 1 [json_name = "current", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(MetricData, _impl_.current_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 rolling_avg = 2 [json_name = "rollingAvg", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(MetricData, _impl_.rolling_avg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 rolling_stddev = 3 [json_name = "rollingStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(MetricData, _impl_.rolling_stddev_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string health = 4 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(MetricData, _impl_.health_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\0\0\0\6\0\0\0"
    "kentik.synthetics.v202202.MetricData"
    "health"
  }},
};

PROTOBUF_NOINLINE void MetricData::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.MetricData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.health_.ClearToEmpty();
  ::memset(&_impl_.current_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.rolling_stddev_) -
      reinterpret_cast<char*>(&_impl_.current_)) + sizeof(_impl_.rolling_stddev_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MetricData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MetricData& this_ = static_cast<const MetricData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MetricData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MetricData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.MetricData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 current = 1 [json_name = "current", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_current() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_current(), target);
          }

          // uint32 rolling_avg = 2 [json_name = "rollingAvg", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_rolling_avg() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_rolling_avg(), target);
          }

          // uint32 rolling_stddev = 3 [json_name = "rollingStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_rolling_stddev() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_rolling_stddev(), target);
          }

          // string health = 4 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_health().empty()) {
            const std::string& _s = this_._internal_health();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.MetricData.health");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.MetricData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MetricData::ByteSizeLong(const MessageLite& base) {
          const MetricData& this_ = static_cast<const MetricData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MetricData::ByteSizeLong() const {
          const MetricData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.MetricData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string health = 4 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_health().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_health());
            }
            // uint32 current = 1 [json_name = "current", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_current() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_current());
            }
            // uint32 rolling_avg = 2 [json_name = "rollingAvg", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_rolling_avg() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_rolling_avg());
            }
            // uint32 rolling_stddev = 3 [json_name = "rollingStddev", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_rolling_stddev() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_rolling_stddev());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MetricData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MetricData*>(&to_msg);
  auto& from = static_cast<const MetricData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.MetricData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_health().empty()) {
    _this->_internal_set_health(from._internal_health());
  }
  if (from._internal_current() != 0) {
    _this->_impl_.current_ = from._impl_.current_;
  }
  if (from._internal_rolling_avg() != 0) {
    _this->_impl_.rolling_avg_ = from._impl_.rolling_avg_;
  }
  if (from._internal_rolling_stddev() != 0) {
    _this->_impl_.rolling_stddev_ = from._impl_.rolling_stddev_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MetricData::CopyFrom(const MetricData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.MetricData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MetricData::InternalSwap(MetricData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.health_, &other->_impl_.health_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MetricData, _impl_.rolling_stddev_)
      + sizeof(MetricData::_impl_.rolling_stddev_)
      - PROTOBUF_FIELD_OFFSET(MetricData, _impl_.current_)>(
          reinterpret_cast<char*>(&_impl_.current_),
          reinterpret_cast<char*>(&other->_impl_.current_));
}

::google::protobuf::Metadata MetricData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PacketLossData::_Internal {
 public:
};

PacketLossData::PacketLossData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.PacketLossData)
}
inline PROTOBUF_NDEBUG_INLINE PacketLossData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::PacketLossData& from_msg)
      : health_(arena, from.health_),
        _cached_size_{0} {}

PacketLossData::PacketLossData(
    ::google::protobuf::Arena* arena,
    const PacketLossData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PacketLossData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.current_ = from._impl_.current_;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.PacketLossData)
}
inline PROTOBUF_NDEBUG_INLINE PacketLossData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : health_(arena),
        _cached_size_{0} {}

inline void PacketLossData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.current_ = {};
}
PacketLossData::~PacketLossData() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.PacketLossData)
  SharedDtor(*this);
}
inline void PacketLossData::SharedDtor(MessageLite& self) {
  PacketLossData& this_ = static_cast<PacketLossData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.health_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PacketLossData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PacketLossData(arena);
}
constexpr auto PacketLossData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PacketLossData),
                                            alignof(PacketLossData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PacketLossData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PacketLossData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PacketLossData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PacketLossData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PacketLossData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PacketLossData>(), &PacketLossData::ByteSizeLong,
            &PacketLossData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PacketLossData, _impl_._cached_size_),
        false,
    },
    &PacketLossData::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PacketLossData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 55, 2> PacketLossData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::PacketLossData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string health = 2 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PacketLossData, _impl_.health_)}},
    // double current = 1 [json_name = "current", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(PacketLossData, _impl_.current_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double current = 1 [json_name = "current", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PacketLossData, _impl_.current_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string health = 2 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PacketLossData, _impl_.health_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\0\6\0\0\0\0\0"
    "kentik.synthetics.v202202.PacketLossData"
    "health"
  }},
};

PROTOBUF_NOINLINE void PacketLossData::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.PacketLossData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.health_.ClearToEmpty();
  _impl_.current_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PacketLossData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PacketLossData& this_ = static_cast<const PacketLossData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PacketLossData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PacketLossData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.PacketLossData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double current = 1 [json_name = "current", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint64_t>(this_._internal_current()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_current(), target);
          }

          // string health = 2 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_health().empty()) {
            const std::string& _s = this_._internal_health();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.PacketLossData.health");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.PacketLossData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PacketLossData::ByteSizeLong(const MessageLite& base) {
          const PacketLossData& this_ = static_cast<const PacketLossData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PacketLossData::ByteSizeLong() const {
          const PacketLossData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.PacketLossData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string health = 2 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_health().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_health());
            }
            // double current = 1 [json_name = "current", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint64_t>(this_._internal_current()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PacketLossData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PacketLossData*>(&to_msg);
  auto& from = static_cast<const PacketLossData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.PacketLossData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_health().empty()) {
    _this->_internal_set_health(from._internal_health());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_current()) != 0) {
    _this->_impl_.current_ = from._impl_.current_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PacketLossData::CopyFrom(const PacketLossData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.PacketLossData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PacketLossData::InternalSwap(PacketLossData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.health_, &other->_impl_.health_, arena);
        swap(_impl_.current_, other->_impl_.current_);
}

::google::protobuf::Metadata PacketLossData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PingResults::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PingResults>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PingResults, _impl_._has_bits_);
};

PingResults::PingResults(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.PingResults)
}
inline PROTOBUF_NDEBUG_INLINE PingResults::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::PingResults& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        target_(arena, from.target_),
        dst_ip_(arena, from.dst_ip_) {}

PingResults::PingResults(
    ::google::protobuf::Arena* arena,
    const PingResults& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PingResults* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.packet_loss_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::PacketLossData>(
                              arena, *from._impl_.packet_loss_)
                        : nullptr;
  _impl_.latency_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::MetricData>(
                              arena, *from._impl_.latency_)
                        : nullptr;
  _impl_.jitter_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::MetricData>(
                              arena, *from._impl_.jitter_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.PingResults)
}
inline PROTOBUF_NDEBUG_INLINE PingResults::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        target_(arena),
        dst_ip_(arena) {}

inline void PingResults::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, packet_loss_),
           0,
           offsetof(Impl_, jitter_) -
               offsetof(Impl_, packet_loss_) +
               sizeof(Impl_::jitter_));
}
PingResults::~PingResults() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.PingResults)
  SharedDtor(*this);
}
inline void PingResults::SharedDtor(MessageLite& self) {
  PingResults& this_ = static_cast<PingResults&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.target_.Destroy();
  this_._impl_.dst_ip_.Destroy();
  delete this_._impl_.packet_loss_;
  delete this_._impl_.latency_;
  delete this_._impl_.jitter_;
  this_._impl_.~Impl_();
}

inline void* PingResults::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PingResults(arena);
}
constexpr auto PingResults::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PingResults),
                                            alignof(PingResults));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PingResults::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PingResults_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PingResults::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PingResults>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PingResults::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PingResults>(), &PingResults::ByteSizeLong,
            &PingResults::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PingResults, _impl_._cached_size_),
        false,
    },
    &PingResults::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PingResults::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 58, 2> PingResults::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PingResults, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::PingResults>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PingResults, _impl_.target_)}},
    // .kentik.synthetics.v202202.PacketLossData packet_loss = 2 [json_name = "packetLoss", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(PingResults, _impl_.packet_loss_)}},
    // .kentik.synthetics.v202202.MetricData latency = 3 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(PingResults, _impl_.latency_)}},
    // .kentik.synthetics.v202202.MetricData jitter = 4 [json_name = "jitter", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(PingResults, _impl_.jitter_)}},
    // string dst_ip = 5 [json_name = "dstIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PingResults, _impl_.dst_ip_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PingResults, _impl_.target_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .kentik.synthetics.v202202.PacketLossData packet_loss = 2 [json_name = "packetLoss", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PingResults, _impl_.packet_loss_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.synthetics.v202202.MetricData latency = 3 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PingResults, _impl_.latency_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.synthetics.v202202.MetricData jitter = 4 [json_name = "jitter", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PingResults, _impl_.jitter_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string dst_ip = 5 [json_name = "dstIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PingResults, _impl_.dst_ip_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::PacketLossData>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::MetricData>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::MetricData>()},
  }}, {{
    "\45\6\0\0\0\6\0\0"
    "kentik.synthetics.v202202.PingResults"
    "target"
    "dst_ip"
  }},
};

PROTOBUF_NOINLINE void PingResults::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.PingResults)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.target_.ClearToEmpty();
  _impl_.dst_ip_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.packet_loss_ != nullptr);
      _impl_.packet_loss_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.latency_ != nullptr);
      _impl_.latency_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.jitter_ != nullptr);
      _impl_.jitter_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PingResults::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PingResults& this_ = static_cast<const PingResults&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PingResults::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PingResults& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.PingResults)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_target().empty()) {
            const std::string& _s = this_._internal_target();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.PingResults.target");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.synthetics.v202202.PacketLossData packet_loss = 2 [json_name = "packetLoss", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.packet_loss_, this_._impl_.packet_loss_->GetCachedSize(), target,
                stream);
          }

          // .kentik.synthetics.v202202.MetricData latency = 3 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.latency_, this_._impl_.latency_->GetCachedSize(), target,
                stream);
          }

          // .kentik.synthetics.v202202.MetricData jitter = 4 [json_name = "jitter", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.jitter_, this_._impl_.jitter_->GetCachedSize(), target,
                stream);
          }

          // string dst_ip = 5 [json_name = "dstIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_dst_ip().empty()) {
            const std::string& _s = this_._internal_dst_ip();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.PingResults.dst_ip");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.PingResults)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PingResults::ByteSizeLong(const MessageLite& base) {
          const PingResults& this_ = static_cast<const PingResults&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PingResults::ByteSizeLong() const {
          const PingResults& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.PingResults)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_target().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target());
            }
            // string dst_ip = 5 [json_name = "dstIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_dst_ip().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_dst_ip());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .kentik.synthetics.v202202.PacketLossData packet_loss = 2 [json_name = "packetLoss", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.packet_loss_);
            }
            // .kentik.synthetics.v202202.MetricData latency = 3 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.latency_);
            }
            // .kentik.synthetics.v202202.MetricData jitter = 4 [json_name = "jitter", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.jitter_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PingResults::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PingResults*>(&to_msg);
  auto& from = static_cast<const PingResults&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.PingResults)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_target().empty()) {
    _this->_internal_set_target(from._internal_target());
  }
  if (!from._internal_dst_ip().empty()) {
    _this->_internal_set_dst_ip(from._internal_dst_ip());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.packet_loss_ != nullptr);
      if (_this->_impl_.packet_loss_ == nullptr) {
        _this->_impl_.packet_loss_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::PacketLossData>(arena, *from._impl_.packet_loss_);
      } else {
        _this->_impl_.packet_loss_->MergeFrom(*from._impl_.packet_loss_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.latency_ != nullptr);
      if (_this->_impl_.latency_ == nullptr) {
        _this->_impl_.latency_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::MetricData>(arena, *from._impl_.latency_);
      } else {
        _this->_impl_.latency_->MergeFrom(*from._impl_.latency_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.jitter_ != nullptr);
      if (_this->_impl_.jitter_ == nullptr) {
        _this->_impl_.jitter_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::MetricData>(arena, *from._impl_.jitter_);
      } else {
        _this->_impl_.jitter_->MergeFrom(*from._impl_.jitter_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PingResults::CopyFrom(const PingResults& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.PingResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PingResults::InternalSwap(PingResults* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_, &other->_impl_.target_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dst_ip_, &other->_impl_.dst_ip_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PingResults, _impl_.jitter_)
      + sizeof(PingResults::_impl_.jitter_)
      - PROTOBUF_FIELD_OFFSET(PingResults, _impl_.packet_loss_)>(
          reinterpret_cast<char*>(&_impl_.packet_loss_),
          reinterpret_cast<char*>(&other->_impl_.packet_loss_));
}

::google::protobuf::Metadata PingResults::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HTTPResponseData::_Internal {
 public:
};

HTTPResponseData::HTTPResponseData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.HTTPResponseData)
}
inline PROTOBUF_NDEBUG_INLINE HTTPResponseData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::HTTPResponseData& from_msg)
      : data_(arena, from.data_),
        _cached_size_{0} {}

HTTPResponseData::HTTPResponseData(
    ::google::protobuf::Arena* arena,
    const HTTPResponseData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HTTPResponseData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, status_),
           offsetof(Impl_, size_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::size_));

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.HTTPResponseData)
}
inline PROTOBUF_NDEBUG_INLINE HTTPResponseData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void HTTPResponseData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, size_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::size_));
}
HTTPResponseData::~HTTPResponseData() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.HTTPResponseData)
  SharedDtor(*this);
}
inline void HTTPResponseData::SharedDtor(MessageLite& self) {
  HTTPResponseData& this_ = static_cast<HTTPResponseData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* HTTPResponseData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HTTPResponseData(arena);
}
constexpr auto HTTPResponseData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HTTPResponseData),
                                            alignof(HTTPResponseData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HTTPResponseData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HTTPResponseData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HTTPResponseData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HTTPResponseData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HTTPResponseData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HTTPResponseData>(), &HTTPResponseData::ByteSizeLong,
            &HTTPResponseData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HTTPResponseData, _impl_._cached_size_),
        false,
    },
    &HTTPResponseData::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HTTPResponseData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 55, 2> HTTPResponseData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::HTTPResponseData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 status = 1 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HTTPResponseData, _impl_.status_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HTTPResponseData, _impl_.status_)}},
    // uint32 size = 2 [json_name = "size", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HTTPResponseData, _impl_.size_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(HTTPResponseData, _impl_.size_)}},
    // string data = 3 [json_name = "data", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(HTTPResponseData, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 status = 1 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HTTPResponseData, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 size = 2 [json_name = "size", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HTTPResponseData, _impl_.size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string data = 3 [json_name = "data", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HTTPResponseData, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\52\0\0\4\0\0\0\0"
    "kentik.synthetics.v202202.HTTPResponseData"
    "data"
  }},
};

PROTOBUF_NOINLINE void HTTPResponseData::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.HTTPResponseData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  ::memset(&_impl_.status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.size_) -
      reinterpret_cast<char*>(&_impl_.status_)) + sizeof(_impl_.size_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HTTPResponseData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HTTPResponseData& this_ = static_cast<const HTTPResponseData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HTTPResponseData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HTTPResponseData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.HTTPResponseData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 status = 1 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_status(), target);
          }

          // uint32 size = 2 [json_name = "size", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_size() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_size(), target);
          }

          // string data = 3 [json_name = "data", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.HTTPResponseData.data");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.HTTPResponseData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HTTPResponseData::ByteSizeLong(const MessageLite& base) {
          const HTTPResponseData& this_ = static_cast<const HTTPResponseData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HTTPResponseData::ByteSizeLong() const {
          const HTTPResponseData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.HTTPResponseData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string data = 3 [json_name = "data", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_data());
            }
            // uint32 status = 1 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_status() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_status());
            }
            // uint32 size = 2 [json_name = "size", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_size() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_size());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HTTPResponseData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HTTPResponseData*>(&to_msg);
  auto& from = static_cast<const HTTPResponseData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.HTTPResponseData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  if (from._internal_size() != 0) {
    _this->_impl_.size_ = from._impl_.size_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HTTPResponseData::CopyFrom(const HTTPResponseData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.HTTPResponseData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HTTPResponseData::InternalSwap(HTTPResponseData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HTTPResponseData, _impl_.size_)
      + sizeof(HTTPResponseData::_impl_.size_)
      - PROTOBUF_FIELD_OFFSET(HTTPResponseData, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata HTTPResponseData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HTTPResults::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HTTPResults>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HTTPResults, _impl_._has_bits_);
};

HTTPResults::HTTPResults(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.HTTPResults)
}
inline PROTOBUF_NDEBUG_INLINE HTTPResults::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::HTTPResults& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        target_(arena, from.target_),
        dst_ip_(arena, from.dst_ip_) {}

HTTPResults::HTTPResults(
    ::google::protobuf::Arena* arena,
    const HTTPResults& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HTTPResults* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.latency_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::MetricData>(
                              arena, *from._impl_.latency_)
                        : nullptr;
  _impl_.response_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::HTTPResponseData>(
                              arena, *from._impl_.response_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.HTTPResults)
}
inline PROTOBUF_NDEBUG_INLINE HTTPResults::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        target_(arena),
        dst_ip_(arena) {}

inline void HTTPResults::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latency_),
           0,
           offsetof(Impl_, response_) -
               offsetof(Impl_, latency_) +
               sizeof(Impl_::response_));
}
HTTPResults::~HTTPResults() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.HTTPResults)
  SharedDtor(*this);
}
inline void HTTPResults::SharedDtor(MessageLite& self) {
  HTTPResults& this_ = static_cast<HTTPResults&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.target_.Destroy();
  this_._impl_.dst_ip_.Destroy();
  delete this_._impl_.latency_;
  delete this_._impl_.response_;
  this_._impl_.~Impl_();
}

inline void* HTTPResults::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HTTPResults(arena);
}
constexpr auto HTTPResults::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HTTPResults),
                                            alignof(HTTPResults));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HTTPResults::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HTTPResults_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HTTPResults::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HTTPResults>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HTTPResults::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HTTPResults>(), &HTTPResults::ByteSizeLong,
            &HTTPResults::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HTTPResults, _impl_._cached_size_),
        false,
    },
    &HTTPResults::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HTTPResults::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 2, 58, 2> HTTPResults::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HTTPResults, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967268,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::HTTPResults>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HTTPResults, _impl_.target_)}},
    // .kentik.synthetics.v202202.MetricData latency = 2 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(HTTPResults, _impl_.latency_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .kentik.synthetics.v202202.HTTPResponseData response = 4 [json_name = "response", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(HTTPResults, _impl_.response_)}},
    // string dst_ip = 5 [json_name = "dstIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(HTTPResults, _impl_.dst_ip_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HTTPResults, _impl_.target_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .kentik.synthetics.v202202.MetricData latency = 2 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HTTPResults, _impl_.latency_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.synthetics.v202202.HTTPResponseData response = 4 [json_name = "response", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HTTPResults, _impl_.response_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string dst_ip = 5 [json_name = "dstIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(HTTPResults, _impl_.dst_ip_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::MetricData>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::HTTPResponseData>()},
  }}, {{
    "\45\6\0\0\6\0\0\0"
    "kentik.synthetics.v202202.HTTPResults"
    "target"
    "dst_ip"
  }},
};

PROTOBUF_NOINLINE void HTTPResults::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.HTTPResults)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.target_.ClearToEmpty();
  _impl_.dst_ip_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.latency_ != nullptr);
      _impl_.latency_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.response_ != nullptr);
      _impl_.response_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HTTPResults::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HTTPResults& this_ = static_cast<const HTTPResults&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HTTPResults::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HTTPResults& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.HTTPResults)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_target().empty()) {
            const std::string& _s = this_._internal_target();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.HTTPResults.target");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.synthetics.v202202.MetricData latency = 2 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.latency_, this_._impl_.latency_->GetCachedSize(), target,
                stream);
          }

          // .kentik.synthetics.v202202.HTTPResponseData response = 4 [json_name = "response", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.response_, this_._impl_.response_->GetCachedSize(), target,
                stream);
          }

          // string dst_ip = 5 [json_name = "dstIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_dst_ip().empty()) {
            const std::string& _s = this_._internal_dst_ip();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.HTTPResults.dst_ip");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.HTTPResults)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HTTPResults::ByteSizeLong(const MessageLite& base) {
          const HTTPResults& this_ = static_cast<const HTTPResults&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HTTPResults::ByteSizeLong() const {
          const HTTPResults& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.HTTPResults)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_target().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target());
            }
            // string dst_ip = 5 [json_name = "dstIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_dst_ip().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_dst_ip());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .kentik.synthetics.v202202.MetricData latency = 2 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.latency_);
            }
            // .kentik.synthetics.v202202.HTTPResponseData response = 4 [json_name = "response", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HTTPResults::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HTTPResults*>(&to_msg);
  auto& from = static_cast<const HTTPResults&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.HTTPResults)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_target().empty()) {
    _this->_internal_set_target(from._internal_target());
  }
  if (!from._internal_dst_ip().empty()) {
    _this->_internal_set_dst_ip(from._internal_dst_ip());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.latency_ != nullptr);
      if (_this->_impl_.latency_ == nullptr) {
        _this->_impl_.latency_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::MetricData>(arena, *from._impl_.latency_);
      } else {
        _this->_impl_.latency_->MergeFrom(*from._impl_.latency_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.response_ != nullptr);
      if (_this->_impl_.response_ == nullptr) {
        _this->_impl_.response_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::HTTPResponseData>(arena, *from._impl_.response_);
      } else {
        _this->_impl_.response_->MergeFrom(*from._impl_.response_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HTTPResults::CopyFrom(const HTTPResults& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.HTTPResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HTTPResults::InternalSwap(HTTPResults* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_, &other->_impl_.target_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dst_ip_, &other->_impl_.dst_ip_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HTTPResults, _impl_.response_)
      + sizeof(HTTPResults::_impl_.response_)
      - PROTOBUF_FIELD_OFFSET(HTTPResults, _impl_.latency_)>(
          reinterpret_cast<char*>(&_impl_.latency_),
          reinterpret_cast<char*>(&other->_impl_.latency_));
}

::google::protobuf::Metadata HTTPResults::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DNSResponseData::_Internal {
 public:
};

DNSResponseData::DNSResponseData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.DNSResponseData)
}
inline PROTOBUF_NDEBUG_INLINE DNSResponseData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::DNSResponseData& from_msg)
      : data_(arena, from.data_),
        _cached_size_{0} {}

DNSResponseData::DNSResponseData(
    ::google::protobuf::Arena* arena,
    const DNSResponseData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DNSResponseData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.status_ = from._impl_.status_;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.DNSResponseData)
}
inline PROTOBUF_NDEBUG_INLINE DNSResponseData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void DNSResponseData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
DNSResponseData::~DNSResponseData() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.DNSResponseData)
  SharedDtor(*this);
}
inline void DNSResponseData::SharedDtor(MessageLite& self) {
  DNSResponseData& this_ = static_cast<DNSResponseData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DNSResponseData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DNSResponseData(arena);
}
constexpr auto DNSResponseData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DNSResponseData),
                                            alignof(DNSResponseData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DNSResponseData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DNSResponseData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DNSResponseData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DNSResponseData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DNSResponseData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DNSResponseData>(), &DNSResponseData::ByteSizeLong,
            &DNSResponseData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DNSResponseData, _impl_._cached_size_),
        false,
    },
    &DNSResponseData::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DNSResponseData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 54, 2> DNSResponseData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::DNSResponseData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string data = 2 [json_name = "data", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DNSResponseData, _impl_.data_)}},
    // uint32 status = 1 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DNSResponseData, _impl_.status_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DNSResponseData, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 status = 1 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DNSResponseData, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string data = 2 [json_name = "data", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DNSResponseData, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\0\4\0\0\0\0\0"
    "kentik.synthetics.v202202.DNSResponseData"
    "data"
  }},
};

PROTOBUF_NOINLINE void DNSResponseData::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.DNSResponseData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _impl_.status_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DNSResponseData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DNSResponseData& this_ = static_cast<const DNSResponseData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DNSResponseData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DNSResponseData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.DNSResponseData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 status = 1 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_status(), target);
          }

          // string data = 2 [json_name = "data", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.DNSResponseData.data");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.DNSResponseData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DNSResponseData::ByteSizeLong(const MessageLite& base) {
          const DNSResponseData& this_ = static_cast<const DNSResponseData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DNSResponseData::ByteSizeLong() const {
          const DNSResponseData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.DNSResponseData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string data = 2 [json_name = "data", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_data());
            }
            // uint32 status = 1 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_status() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DNSResponseData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DNSResponseData*>(&to_msg);
  auto& from = static_cast<const DNSResponseData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.DNSResponseData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DNSResponseData::CopyFrom(const DNSResponseData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.DNSResponseData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DNSResponseData::InternalSwap(DNSResponseData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
        swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata DNSResponseData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DNSResults::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DNSResults>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DNSResults, _impl_._has_bits_);
};

DNSResults::DNSResults(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.DNSResults)
}
inline PROTOBUF_NDEBUG_INLINE DNSResults::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::DNSResults& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        target_(arena, from.target_),
        server_(arena, from.server_) {}

DNSResults::DNSResults(
    ::google::protobuf::Arena* arena,
    const DNSResults& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DNSResults* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.latency_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::MetricData>(
                              arena, *from._impl_.latency_)
                        : nullptr;
  _impl_.response_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::DNSResponseData>(
                              arena, *from._impl_.response_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.DNSResults)
}
inline PROTOBUF_NDEBUG_INLINE DNSResults::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        target_(arena),
        server_(arena) {}

inline void DNSResults::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latency_),
           0,
           offsetof(Impl_, response_) -
               offsetof(Impl_, latency_) +
               sizeof(Impl_::response_));
}
DNSResults::~DNSResults() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.DNSResults)
  SharedDtor(*this);
}
inline void DNSResults::SharedDtor(MessageLite& self) {
  DNSResults& this_ = static_cast<DNSResults&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.target_.Destroy();
  this_._impl_.server_.Destroy();
  delete this_._impl_.latency_;
  delete this_._impl_.response_;
  this_._impl_.~Impl_();
}

inline void* DNSResults::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DNSResults(arena);
}
constexpr auto DNSResults::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DNSResults),
                                            alignof(DNSResults));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DNSResults::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DNSResults_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DNSResults::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DNSResults>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DNSResults::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DNSResults>(), &DNSResults::ByteSizeLong,
            &DNSResults::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DNSResults, _impl_._cached_size_),
        false,
    },
    &DNSResults::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DNSResults::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 2, 57, 2> DNSResults::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DNSResults, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::DNSResults>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DNSResults, _impl_.target_)}},
    // string server = 2 [json_name = "server", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DNSResults, _impl_.server_)}},
    // .kentik.synthetics.v202202.MetricData latency = 3 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(DNSResults, _impl_.latency_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .kentik.synthetics.v202202.DNSResponseData response = 5 [json_name = "response", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(DNSResults, _impl_.response_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DNSResults, _impl_.target_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string server = 2 [json_name = "server", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DNSResults, _impl_.server_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .kentik.synthetics.v202202.MetricData latency = 3 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DNSResults, _impl_.latency_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.synthetics.v202202.DNSResponseData response = 5 [json_name = "response", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DNSResults, _impl_.response_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::MetricData>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::DNSResponseData>()},
  }}, {{
    "\44\6\6\0\0\0\0\0"
    "kentik.synthetics.v202202.DNSResults"
    "target"
    "server"
  }},
};

PROTOBUF_NOINLINE void DNSResults::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.DNSResults)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.target_.ClearToEmpty();
  _impl_.server_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.latency_ != nullptr);
      _impl_.latency_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.response_ != nullptr);
      _impl_.response_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DNSResults::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DNSResults& this_ = static_cast<const DNSResults&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DNSResults::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DNSResults& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.DNSResults)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_target().empty()) {
            const std::string& _s = this_._internal_target();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.DNSResults.target");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string server = 2 [json_name = "server", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_server().empty()) {
            const std::string& _s = this_._internal_server();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.DNSResults.server");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.synthetics.v202202.MetricData latency = 3 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.latency_, this_._impl_.latency_->GetCachedSize(), target,
                stream);
          }

          // .kentik.synthetics.v202202.DNSResponseData response = 5 [json_name = "response", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.response_, this_._impl_.response_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.DNSResults)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DNSResults::ByteSizeLong(const MessageLite& base) {
          const DNSResults& this_ = static_cast<const DNSResults&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DNSResults::ByteSizeLong() const {
          const DNSResults& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.DNSResults)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string target = 1 [json_name = "target", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_target().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target());
            }
            // string server = 2 [json_name = "server", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_server().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_server());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .kentik.synthetics.v202202.MetricData latency = 3 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.latency_);
            }
            // .kentik.synthetics.v202202.DNSResponseData response = 5 [json_name = "response", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DNSResults::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DNSResults*>(&to_msg);
  auto& from = static_cast<const DNSResults&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.DNSResults)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_target().empty()) {
    _this->_internal_set_target(from._internal_target());
  }
  if (!from._internal_server().empty()) {
    _this->_internal_set_server(from._internal_server());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.latency_ != nullptr);
      if (_this->_impl_.latency_ == nullptr) {
        _this->_impl_.latency_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::MetricData>(arena, *from._impl_.latency_);
      } else {
        _this->_impl_.latency_->MergeFrom(*from._impl_.latency_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.response_ != nullptr);
      if (_this->_impl_.response_ == nullptr) {
        _this->_impl_.response_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::DNSResponseData>(arena, *from._impl_.response_);
      } else {
        _this->_impl_.response_->MergeFrom(*from._impl_.response_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DNSResults::CopyFrom(const DNSResults& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.DNSResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DNSResults::InternalSwap(DNSResults* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_, &other->_impl_.target_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.server_, &other->_impl_.server_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DNSResults, _impl_.response_)
      + sizeof(DNSResults::_impl_.response_)
      - PROTOBUF_FIELD_OFFSET(DNSResults, _impl_.latency_)>(
          reinterpret_cast<char*>(&_impl_.latency_),
          reinterpret_cast<char*>(&other->_impl_.latency_));
}

::google::protobuf::Metadata DNSResults::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TaskResults::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::kentik::synthetics::v202202::TaskResults, _impl_._oneof_case_);
};

void TaskResults::set_allocated_ping(::kentik::synthetics::v202202::PingResults* ping) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_task_type();
  if (ping) {
    ::google::protobuf::Arena* submessage_arena = ping->GetArena();
    if (message_arena != submessage_arena) {
      ping = ::google::protobuf::internal::GetOwnedMessage(message_arena, ping, submessage_arena);
    }
    set_has_ping();
    _impl_.task_type_.ping_ = ping;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202202.TaskResults.ping)
}
void TaskResults::set_allocated_http(::kentik::synthetics::v202202::HTTPResults* http) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_task_type();
  if (http) {
    ::google::protobuf::Arena* submessage_arena = http->GetArena();
    if (message_arena != submessage_arena) {
      http = ::google::protobuf::internal::GetOwnedMessage(message_arena, http, submessage_arena);
    }
    set_has_http();
    _impl_.task_type_.http_ = http;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202202.TaskResults.http)
}
void TaskResults::set_allocated_dns(::kentik::synthetics::v202202::DNSResults* dns) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_task_type();
  if (dns) {
    ::google::protobuf::Arena* submessage_arena = dns->GetArena();
    if (message_arena != submessage_arena) {
      dns = ::google::protobuf::internal::GetOwnedMessage(message_arena, dns, submessage_arena);
    }
    set_has_dns();
    _impl_.task_type_.dns_ = dns;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.synthetics.v202202.TaskResults.dns)
}
TaskResults::TaskResults(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.TaskResults)
}
inline PROTOBUF_NDEBUG_INLINE TaskResults::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::TaskResults& from_msg)
      : health_(arena, from.health_),
        task_type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

TaskResults::TaskResults(
    ::google::protobuf::Arena* arena,
    const TaskResults& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TaskResults* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (task_type_case()) {
    case TASK_TYPE_NOT_SET:
      break;
      case kPing:
        _impl_.task_type_.ping_ = ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::PingResults>(arena, *from._impl_.task_type_.ping_);
        break;
      case kHttp:
        _impl_.task_type_.http_ = ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::HTTPResults>(arena, *from._impl_.task_type_.http_);
        break;
      case kDns:
        _impl_.task_type_.dns_ = ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::DNSResults>(arena, *from._impl_.task_type_.dns_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.TaskResults)
}
inline PROTOBUF_NDEBUG_INLINE TaskResults::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : health_(arena),
        task_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void TaskResults::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TaskResults::~TaskResults() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.TaskResults)
  SharedDtor(*this);
}
inline void TaskResults::SharedDtor(MessageLite& self) {
  TaskResults& this_ = static_cast<TaskResults&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.health_.Destroy();
  if (this_.has_task_type()) {
    this_.clear_task_type();
  }
  this_._impl_.~Impl_();
}

void TaskResults::clear_task_type() {
// @@protoc_insertion_point(one_of_clear_start:kentik.synthetics.v202202.TaskResults)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (task_type_case()) {
    case kPing: {
      if (GetArena() == nullptr) {
        delete _impl_.task_type_.ping_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.task_type_.ping_);
      }
      break;
    }
    case kHttp: {
      if (GetArena() == nullptr) {
        delete _impl_.task_type_.http_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.task_type_.http_);
      }
      break;
    }
    case kDns: {
      if (GetArena() == nullptr) {
        delete _impl_.task_type_.dns_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.task_type_.dns_);
      }
      break;
    }
    case TASK_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TASK_TYPE_NOT_SET;
}


inline void* TaskResults::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TaskResults(arena);
}
constexpr auto TaskResults::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TaskResults),
                                            alignof(TaskResults));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TaskResults::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TaskResults_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TaskResults::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TaskResults>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TaskResults::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TaskResults>(), &TaskResults::ByteSizeLong,
            &TaskResults::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TaskResults, _impl_._cached_size_),
        false,
    },
    &TaskResults::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TaskResults::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 3, 52, 2> TaskResults::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::TaskResults>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string health = 4 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(TaskResults, _impl_.health_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.synthetics.v202202.PingResults ping = 1 [json_name = "ping", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TaskResults, _impl_.task_type_.ping_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.synthetics.v202202.HTTPResults http = 2 [json_name = "http", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TaskResults, _impl_.task_type_.http_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.synthetics.v202202.DNSResults dns = 3 [json_name = "dns", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TaskResults, _impl_.task_type_.dns_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string health = 4 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TaskResults, _impl_.health_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::PingResults>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::HTTPResults>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::DNSResults>()},
  }}, {{
    "\45\0\0\0\6\0\0\0"
    "kentik.synthetics.v202202.TaskResults"
    "health"
  }},
};

PROTOBUF_NOINLINE void TaskResults::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.TaskResults)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.health_.ClearToEmpty();
  clear_task_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TaskResults::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TaskResults& this_ = static_cast<const TaskResults&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TaskResults::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TaskResults& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.TaskResults)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.task_type_case()) {
            case kPing: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.task_type_.ping_, this_._impl_.task_type_.ping_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kHttp: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.task_type_.http_, this_._impl_.task_type_.http_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kDns: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.task_type_.dns_, this_._impl_.task_type_.dns_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          // string health = 4 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_health().empty()) {
            const std::string& _s = this_._internal_health();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.TaskResults.health");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.TaskResults)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TaskResults::ByteSizeLong(const MessageLite& base) {
          const TaskResults& this_ = static_cast<const TaskResults&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TaskResults::ByteSizeLong() const {
          const TaskResults& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.TaskResults)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string health = 4 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_health().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_health());
            }
          }
          switch (this_.task_type_case()) {
            // .kentik.synthetics.v202202.PingResults ping = 1 [json_name = "ping", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            case kPing: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.task_type_.ping_);
              break;
            }
            // .kentik.synthetics.v202202.HTTPResults http = 2 [json_name = "http", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            case kHttp: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.task_type_.http_);
              break;
            }
            // .kentik.synthetics.v202202.DNSResults dns = 3 [json_name = "dns", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            case kDns: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.task_type_.dns_);
              break;
            }
            case TASK_TYPE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TaskResults::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TaskResults*>(&to_msg);
  auto& from = static_cast<const TaskResults&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.TaskResults)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_health().empty()) {
    _this->_internal_set_health(from._internal_health());
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_task_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kPing: {
        if (oneof_needs_init) {
          _this->_impl_.task_type_.ping_ =
              ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::PingResults>(arena, *from._impl_.task_type_.ping_);
        } else {
          _this->_impl_.task_type_.ping_->MergeFrom(from._internal_ping());
        }
        break;
      }
      case kHttp: {
        if (oneof_needs_init) {
          _this->_impl_.task_type_.http_ =
              ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::HTTPResults>(arena, *from._impl_.task_type_.http_);
        } else {
          _this->_impl_.task_type_.http_->MergeFrom(from._internal_http());
        }
        break;
      }
      case kDns: {
        if (oneof_needs_init) {
          _this->_impl_.task_type_.dns_ =
              ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::DNSResults>(arena, *from._impl_.task_type_.dns_);
        } else {
          _this->_impl_.task_type_.dns_->MergeFrom(from._internal_dns());
        }
        break;
      }
      case TASK_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TaskResults::CopyFrom(const TaskResults& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.TaskResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TaskResults::InternalSwap(TaskResults* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.health_, &other->_impl_.health_, arena);
  swap(_impl_.task_type_, other->_impl_.task_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata TaskResults::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AgentResults::_Internal {
 public:
};

AgentResults::AgentResults(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.AgentResults)
}
inline PROTOBUF_NDEBUG_INLINE AgentResults::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::AgentResults& from_msg)
      : tasks_{visibility, arena, from.tasks_},
        agent_id_(arena, from.agent_id_),
        health_(arena, from.health_),
        _cached_size_{0} {}

AgentResults::AgentResults(
    ::google::protobuf::Arena* arena,
    const AgentResults& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AgentResults* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.AgentResults)
}
inline PROTOBUF_NDEBUG_INLINE AgentResults::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tasks_{visibility, arena},
        agent_id_(arena),
        health_(arena),
        _cached_size_{0} {}

inline void AgentResults::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AgentResults::~AgentResults() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.AgentResults)
  SharedDtor(*this);
}
inline void AgentResults::SharedDtor(MessageLite& self) {
  AgentResults& this_ = static_cast<AgentResults&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.agent_id_.Destroy();
  this_._impl_.health_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AgentResults::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AgentResults(arena);
}
constexpr auto AgentResults::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AgentResults, _impl_.tasks_) +
          decltype(AgentResults::_impl_.tasks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(AgentResults), alignof(AgentResults), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AgentResults::PlacementNew_,
                                 sizeof(AgentResults),
                                 alignof(AgentResults));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AgentResults::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AgentResults_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AgentResults::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AgentResults>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AgentResults::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AgentResults>(), &AgentResults::ByteSizeLong,
            &AgentResults::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AgentResults, _impl_._cached_size_),
        false,
    },
    &AgentResults::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AgentResults::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 61, 2> AgentResults::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::AgentResults>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string agent_id = 1 [json_name = "agentId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AgentResults, _impl_.agent_id_)}},
    // string health = 2 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AgentResults, _impl_.health_)}},
    // repeated .kentik.synthetics.v202202.TaskResults tasks = 3 [json_name = "tasks", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AgentResults, _impl_.tasks_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string agent_id = 1 [json_name = "agentId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(AgentResults, _impl_.agent_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string health = 2 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(AgentResults, _impl_.health_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .kentik.synthetics.v202202.TaskResults tasks = 3 [json_name = "tasks", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(AgentResults, _impl_.tasks_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::TaskResults>()},
  }}, {{
    "\46\10\6\0\0\0\0\0"
    "kentik.synthetics.v202202.AgentResults"
    "agent_id"
    "health"
  }},
};

PROTOBUF_NOINLINE void AgentResults::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.AgentResults)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tasks_.Clear();
  _impl_.agent_id_.ClearToEmpty();
  _impl_.health_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AgentResults::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AgentResults& this_ = static_cast<const AgentResults&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AgentResults::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AgentResults& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.AgentResults)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string agent_id = 1 [json_name = "agentId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_agent_id().empty()) {
            const std::string& _s = this_._internal_agent_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.AgentResults.agent_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string health = 2 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_health().empty()) {
            const std::string& _s = this_._internal_health();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.AgentResults.health");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .kentik.synthetics.v202202.TaskResults tasks = 3 [json_name = "tasks", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_tasks_size());
               i < n; i++) {
            const auto& repfield = this_._internal_tasks().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.AgentResults)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AgentResults::ByteSizeLong(const MessageLite& base) {
          const AgentResults& this_ = static_cast<const AgentResults&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AgentResults::ByteSizeLong() const {
          const AgentResults& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.AgentResults)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.synthetics.v202202.TaskResults tasks = 3 [json_name = "tasks", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_tasks_size();
              for (const auto& msg : this_._internal_tasks()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string agent_id = 1 [json_name = "agentId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_agent_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_agent_id());
            }
            // string health = 2 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_health().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_health());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AgentResults::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AgentResults*>(&to_msg);
  auto& from = static_cast<const AgentResults&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.AgentResults)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tasks()->MergeFrom(
      from._internal_tasks());
  if (!from._internal_agent_id().empty()) {
    _this->_internal_set_agent_id(from._internal_agent_id());
  }
  if (!from._internal_health().empty()) {
    _this->_internal_set_health(from._internal_health());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AgentResults::CopyFrom(const AgentResults& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.AgentResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AgentResults::InternalSwap(AgentResults* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tasks_.InternalSwap(&other->_impl_.tasks_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.agent_id_, &other->_impl_.agent_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.health_, &other->_impl_.health_, arena);
}

::google::protobuf::Metadata AgentResults::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TestResults::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TestResults>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TestResults, _impl_._has_bits_);
};

void TestResults::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TestResults::TestResults(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.TestResults)
}
inline PROTOBUF_NDEBUG_INLINE TestResults::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::TestResults& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        agents_{visibility, arena, from.agents_},
        test_id_(arena, from.test_id_),
        health_(arena, from.health_) {}

TestResults::TestResults(
    ::google::protobuf::Arena* arena,
    const TestResults& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestResults* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.time_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.TestResults)
}
inline PROTOBUF_NDEBUG_INLINE TestResults::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        agents_{visibility, arena},
        test_id_(arena),
        health_(arena) {}

inline void TestResults::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.time_ = {};
}
TestResults::~TestResults() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.TestResults)
  SharedDtor(*this);
}
inline void TestResults::SharedDtor(MessageLite& self) {
  TestResults& this_ = static_cast<TestResults&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.test_id_.Destroy();
  this_._impl_.health_.Destroy();
  delete this_._impl_.time_;
  this_._impl_.~Impl_();
}

inline void* TestResults::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TestResults(arena);
}
constexpr auto TestResults::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TestResults, _impl_.agents_) +
          decltype(TestResults::_impl_.agents_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(TestResults), alignof(TestResults), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TestResults::PlacementNew_,
                                 sizeof(TestResults),
                                 alignof(TestResults));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TestResults::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TestResults_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TestResults::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TestResults>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TestResults::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TestResults>(), &TestResults::ByteSizeLong,
            &TestResults::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TestResults, _impl_._cached_size_),
        false,
    },
    &TestResults::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TestResults::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 59, 2> TestResults::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestResults, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::TestResults>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .kentik.synthetics.v202202.AgentResults agents = 4 [json_name = "agents", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(TestResults, _impl_.agents_)}},
    // string test_id = 1 [json_name = "testId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TestResults, _impl_.test_id_)}},
    // .google.protobuf.Timestamp time = 2 [json_name = "time", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(TestResults, _impl_.time_)}},
    // string health = 3 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TestResults, _impl_.health_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string test_id = 1 [json_name = "testId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestResults, _impl_.test_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp time = 2 [json_name = "time", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestResults, _impl_.time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string health = 3 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestResults, _impl_.health_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .kentik.synthetics.v202202.AgentResults agents = 4 [json_name = "agents", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TestResults, _impl_.agents_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::AgentResults>()},
  }}, {{
    "\45\7\0\6\0\0\0\0"
    "kentik.synthetics.v202202.TestResults"
    "test_id"
    "health"
  }},
};

PROTOBUF_NOINLINE void TestResults::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.TestResults)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agents_.Clear();
  _impl_.test_id_.ClearToEmpty();
  _impl_.health_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.time_ != nullptr);
    _impl_.time_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TestResults::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TestResults& this_ = static_cast<const TestResults&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TestResults::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TestResults& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.TestResults)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string test_id = 1 [json_name = "testId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_test_id().empty()) {
            const std::string& _s = this_._internal_test_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.TestResults.test_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp time = 2 [json_name = "time", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
                stream);
          }

          // string health = 3 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_health().empty()) {
            const std::string& _s = this_._internal_health();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.TestResults.health");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // repeated .kentik.synthetics.v202202.AgentResults agents = 4 [json_name = "agents", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_agents_size());
               i < n; i++) {
            const auto& repfield = this_._internal_agents().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.TestResults)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TestResults::ByteSizeLong(const MessageLite& base) {
          const TestResults& this_ = static_cast<const TestResults&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TestResults::ByteSizeLong() const {
          const TestResults& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.TestResults)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.synthetics.v202202.AgentResults agents = 4 [json_name = "agents", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_agents_size();
              for (const auto& msg : this_._internal_agents()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string test_id = 1 [json_name = "testId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_test_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_test_id());
            }
            // string health = 3 [json_name = "health", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_health().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_health());
            }
          }
           {
            // .google.protobuf.Timestamp time = 2 [json_name = "time", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TestResults::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestResults*>(&to_msg);
  auto& from = static_cast<const TestResults&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.TestResults)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_agents()->MergeFrom(
      from._internal_agents());
  if (!from._internal_test_id().empty()) {
    _this->_internal_set_test_id(from._internal_test_id());
  }
  if (!from._internal_health().empty()) {
    _this->_internal_set_health(from._internal_health());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.time_ != nullptr);
    if (_this->_impl_.time_ == nullptr) {
      _this->_impl_.time_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.time_);
    } else {
      _this->_impl_.time_->MergeFrom(*from._impl_.time_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestResults::CopyFrom(const TestResults& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.TestResults)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestResults::InternalSwap(TestResults* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.agents_.InternalSwap(&other->_impl_.agents_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.test_id_, &other->_impl_.test_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.health_, &other->_impl_.health_, arena);
  swap(_impl_.time_, other->_impl_.time_);
}

::google::protobuf::Metadata TestResults::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Stats::_Internal {
 public:
};

Stats::Stats(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.Stats)
}
Stats::Stats(
    ::google::protobuf::Arena* arena, const Stats& from)
    : Stats(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Stats::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Stats::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, average_),
           0,
           offsetof(Impl_, max_) -
               offsetof(Impl_, average_) +
               sizeof(Impl_::max_));
}
Stats::~Stats() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.Stats)
  SharedDtor(*this);
}
inline void Stats::SharedDtor(MessageLite& self) {
  Stats& this_ = static_cast<Stats&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Stats::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Stats(arena);
}
constexpr auto Stats::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Stats),
                                            alignof(Stats));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Stats::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Stats_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Stats::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Stats>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Stats::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Stats>(), &Stats::ByteSizeLong,
            &Stats::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Stats, _impl_._cached_size_),
        false,
    },
    &Stats::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Stats::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Stats::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::Stats>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 average = 1 [json_name = "average", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Stats, _impl_.average_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Stats, _impl_.average_)}},
    // int32 min = 2 [json_name = "min", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Stats, _impl_.min_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Stats, _impl_.min_)}},
    // int32 max = 3 [json_name = "max", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Stats, _impl_.max_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Stats, _impl_.max_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 average = 1 [json_name = "average", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Stats, _impl_.average_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 min = 2 [json_name = "min", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Stats, _impl_.min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 max = 3 [json_name = "max", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Stats, _impl_.max_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Stats::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.Stats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.average_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.max_) -
      reinterpret_cast<char*>(&_impl_.average_)) + sizeof(_impl_.max_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Stats::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Stats& this_ = static_cast<const Stats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Stats::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Stats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.Stats)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 average = 1 [json_name = "average", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_average() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_average(), target);
          }

          // int32 min = 2 [json_name = "min", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_min() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_min(), target);
          }

          // int32 max = 3 [json_name = "max", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_max() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_max(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.Stats)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Stats::ByteSizeLong(const MessageLite& base) {
          const Stats& this_ = static_cast<const Stats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Stats::ByteSizeLong() const {
          const Stats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.Stats)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 average = 1 [json_name = "average", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_average() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_average());
            }
            // int32 min = 2 [json_name = "min", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_min() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_min());
            }
            // int32 max = 3 [json_name = "max", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_max() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_max());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Stats::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Stats*>(&to_msg);
  auto& from = static_cast<const Stats&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.Stats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_average() != 0) {
    _this->_impl_.average_ = from._impl_.average_;
  }
  if (from._internal_min() != 0) {
    _this->_impl_.min_ = from._impl_.min_;
  }
  if (from._internal_max() != 0) {
    _this->_impl_.max_ = from._impl_.max_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Stats::CopyFrom(const Stats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.Stats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Stats::InternalSwap(Stats* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Stats, _impl_.max_)
      + sizeof(Stats::_impl_.max_)
      - PROTOBUF_FIELD_OFFSET(Stats, _impl_.average_)>(
          reinterpret_cast<char*>(&_impl_.average_),
          reinterpret_cast<char*>(&other->_impl_.average_));
}

::google::protobuf::Metadata Stats::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Location::_Internal {
 public:
};

Location::Location(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.Location)
}
inline PROTOBUF_NDEBUG_INLINE Location::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::Location& from_msg)
      : country_(arena, from.country_),
        region_(arena, from.region_),
        city_(arena, from.city_),
        _cached_size_{0} {}

Location::Location(
    ::google::protobuf::Arena* arena,
    const Location& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Location* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latitude_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, latitude_),
           offsetof(Impl_, longitude_) -
               offsetof(Impl_, latitude_) +
               sizeof(Impl_::longitude_));

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.Location)
}
inline PROTOBUF_NDEBUG_INLINE Location::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : country_(arena),
        region_(arena),
        city_(arena),
        _cached_size_{0} {}

inline void Location::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latitude_),
           0,
           offsetof(Impl_, longitude_) -
               offsetof(Impl_, latitude_) +
               sizeof(Impl_::longitude_));
}
Location::~Location() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.Location)
  SharedDtor(*this);
}
inline void Location::SharedDtor(MessageLite& self) {
  Location& this_ = static_cast<Location&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.country_.Destroy();
  this_._impl_.region_.Destroy();
  this_._impl_.city_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Location::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Location(arena);
}
constexpr auto Location::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Location),
                                            alignof(Location));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Location::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Location_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Location::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Location>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Location::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Location>(), &Location::ByteSizeLong,
            &Location::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Location, _impl_._cached_size_),
        false,
    },
    &Location::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Location::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 0, 60, 2> Location::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966904,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::Location>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double latitude = 8 [json_name = "latitude", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF64S1,
     {65, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.latitude_)}},
    // string country = 1 [json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.country_)}},
    // string region = 2 [json_name = "region", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.region_)}},
    // string city = 3 [json_name = "city", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Location, _impl_.city_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string country = 1 [json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.country_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string region = 2 [json_name = "region", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.region_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string city = 3 [json_name = "city", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.city_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double latitude = 8 [json_name = "latitude", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.latitude_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double longitude = 9 [json_name = "longitude", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Location, _impl_.longitude_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\42\7\6\4\0\0\0\0"
    "kentik.synthetics.v202202.Location"
    "country"
    "region"
    "city"
  }},
};

PROTOBUF_NOINLINE void Location::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.Location)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.country_.ClearToEmpty();
  _impl_.region_.ClearToEmpty();
  _impl_.city_.ClearToEmpty();
  ::memset(&_impl_.latitude_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.longitude_) -
      reinterpret_cast<char*>(&_impl_.latitude_)) + sizeof(_impl_.longitude_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Location::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Location& this_ = static_cast<const Location&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Location::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Location& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.Location)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string country = 1 [json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_country().empty()) {
            const std::string& _s = this_._internal_country();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Location.country");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string region = 2 [json_name = "region", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_region().empty()) {
            const std::string& _s = this_._internal_region();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Location.region");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string city = 3 [json_name = "city", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_city().empty()) {
            const std::string& _s = this_._internal_city();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Location.city");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // double latitude = 8 [json_name = "latitude", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint64_t>(this_._internal_latitude()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                8, this_._internal_latitude(), target);
          }

          // double longitude = 9 [json_name = "longitude", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint64_t>(this_._internal_longitude()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                9, this_._internal_longitude(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.Location)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Location::ByteSizeLong(const MessageLite& base) {
          const Location& this_ = static_cast<const Location&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Location::ByteSizeLong() const {
          const Location& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.Location)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string country = 1 [json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_country().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_country());
            }
            // string region = 2 [json_name = "region", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_region().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_region());
            }
            // string city = 3 [json_name = "city", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_city().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_city());
            }
            // double latitude = 8 [json_name = "latitude", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint64_t>(this_._internal_latitude()) != 0) {
              total_size += 9;
            }
            // double longitude = 9 [json_name = "longitude", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint64_t>(this_._internal_longitude()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Location::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Location*>(&to_msg);
  auto& from = static_cast<const Location&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.Location)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_country().empty()) {
    _this->_internal_set_country(from._internal_country());
  }
  if (!from._internal_region().empty()) {
    _this->_internal_set_region(from._internal_region());
  }
  if (!from._internal_city().empty()) {
    _this->_internal_set_city(from._internal_city());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_latitude()) != 0) {
    _this->_impl_.latitude_ = from._impl_.latitude_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_longitude()) != 0) {
    _this->_impl_.longitude_ = from._impl_.longitude_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Location::CopyFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Location::InternalSwap(Location* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.country_, &other->_impl_.country_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.region_, &other->_impl_.region_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.city_, &other->_impl_.city_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Location, _impl_.longitude_)
      + sizeof(Location::_impl_.longitude_)
      - PROTOBUF_FIELD_OFFSET(Location, _impl_.latitude_)>(
          reinterpret_cast<char*>(&_impl_.latitude_),
          reinterpret_cast<char*>(&other->_impl_.latitude_));
}

::google::protobuf::Metadata Location::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NetNode::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NetNode>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NetNode, _impl_._has_bits_);
};

NetNode::NetNode(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.NetNode)
}
inline PROTOBUF_NDEBUG_INLINE NetNode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::NetNode& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ip_(arena, from.ip_),
        as_name_(arena, from.as_name_),
        dns_name_(arena, from.dns_name_),
        device_id_(arena, from.device_id_),
        site_id_(arena, from.site_id_) {}

NetNode::NetNode(
    ::google::protobuf::Arena* arena,
    const NetNode& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NetNode* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.location_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::Location>(
                              arena, *from._impl_.location_)
                        : nullptr;
  _impl_.asn_ = from._impl_.asn_;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.NetNode)
}
inline PROTOBUF_NDEBUG_INLINE NetNode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        ip_(arena),
        as_name_(arena),
        dns_name_(arena),
        device_id_(arena),
        site_id_(arena) {}

inline void NetNode::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, location_),
           0,
           offsetof(Impl_, asn_) -
               offsetof(Impl_, location_) +
               sizeof(Impl_::asn_));
}
NetNode::~NetNode() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.NetNode)
  SharedDtor(*this);
}
inline void NetNode::SharedDtor(MessageLite& self) {
  NetNode& this_ = static_cast<NetNode&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.ip_.Destroy();
  this_._impl_.as_name_.Destroy();
  this_._impl_.dns_name_.Destroy();
  this_._impl_.device_id_.Destroy();
  this_._impl_.site_id_.Destroy();
  delete this_._impl_.location_;
  this_._impl_.~Impl_();
}

inline void* NetNode::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NetNode(arena);
}
constexpr auto NetNode::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NetNode),
                                            alignof(NetNode));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NetNode::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NetNode_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NetNode::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NetNode>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NetNode::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NetNode>(), &NetNode::ByteSizeLong,
            &NetNode::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NetNode, _impl_._cached_size_),
        false,
    },
    &NetNode::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NetNode::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 75, 2> NetNode::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NetNode, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967041,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::NetNode>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string site_id = 8 [json_name = "siteId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(NetNode, _impl_.site_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string ip = 2 [json_name = "ip", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NetNode, _impl_.ip_)}},
    // uint32 asn = 3 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetNode, _impl_.asn_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(NetNode, _impl_.asn_)}},
    // string as_name = 4 [json_name = "asName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(NetNode, _impl_.as_name_)}},
    // .kentik.synthetics.v202202.Location location = 5 [json_name = "location", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(NetNode, _impl_.location_)}},
    // string dns_name = 6 [json_name = "dnsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(NetNode, _impl_.dns_name_)}},
    // string device_id = 7 [json_name = "deviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(NetNode, _impl_.device_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string ip = 2 [json_name = "ip", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(NetNode, _impl_.ip_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 asn = 3 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(NetNode, _impl_.asn_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string as_name = 4 [json_name = "asName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(NetNode, _impl_.as_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .kentik.synthetics.v202202.Location location = 5 [json_name = "location", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(NetNode, _impl_.location_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string dns_name = 6 [json_name = "dnsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(NetNode, _impl_.dns_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_id = 7 [json_name = "deviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(NetNode, _impl_.device_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string site_id = 8 [json_name = "siteId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(NetNode, _impl_.site_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::Location>()},
  }}, {{
    "\41\2\0\7\0\10\11\7"
    "kentik.synthetics.v202202.NetNode"
    "ip"
    "as_name"
    "dns_name"
    "device_id"
    "site_id"
  }},
};

PROTOBUF_NOINLINE void NetNode::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.NetNode)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ip_.ClearToEmpty();
  _impl_.as_name_.ClearToEmpty();
  _impl_.dns_name_.ClearToEmpty();
  _impl_.device_id_.ClearToEmpty();
  _impl_.site_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.location_ != nullptr);
    _impl_.location_->Clear();
  }
  _impl_.asn_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NetNode::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NetNode& this_ = static_cast<const NetNode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NetNode::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NetNode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.NetNode)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string ip = 2 [json_name = "ip", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_ip().empty()) {
            const std::string& _s = this_._internal_ip();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.NetNode.ip");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint32 asn = 3 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_asn() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_asn(), target);
          }

          // string as_name = 4 [json_name = "asName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_as_name().empty()) {
            const std::string& _s = this_._internal_as_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.NetNode.as_name");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.synthetics.v202202.Location location = 5 [json_name = "location", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.location_, this_._impl_.location_->GetCachedSize(), target,
                stream);
          }

          // string dns_name = 6 [json_name = "dnsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_dns_name().empty()) {
            const std::string& _s = this_._internal_dns_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.NetNode.dns_name");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string device_id = 7 [json_name = "deviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_id().empty()) {
            const std::string& _s = this_._internal_device_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.NetNode.device_id");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string site_id = 8 [json_name = "siteId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_site_id().empty()) {
            const std::string& _s = this_._internal_site_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.NetNode.site_id");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.NetNode)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NetNode::ByteSizeLong(const MessageLite& base) {
          const NetNode& this_ = static_cast<const NetNode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NetNode::ByteSizeLong() const {
          const NetNode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.NetNode)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string ip = 2 [json_name = "ip", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_ip().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_ip());
            }
            // string as_name = 4 [json_name = "asName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_as_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_as_name());
            }
            // string dns_name = 6 [json_name = "dnsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_dns_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_dns_name());
            }
            // string device_id = 7 [json_name = "deviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_id());
            }
            // string site_id = 8 [json_name = "siteId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_site_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_site_id());
            }
          }
           {
            // .kentik.synthetics.v202202.Location location = 5 [json_name = "location", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.location_);
            }
          }
           {
            // uint32 asn = 3 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_asn() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_asn());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NetNode::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NetNode*>(&to_msg);
  auto& from = static_cast<const NetNode&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.NetNode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ip().empty()) {
    _this->_internal_set_ip(from._internal_ip());
  }
  if (!from._internal_as_name().empty()) {
    _this->_internal_set_as_name(from._internal_as_name());
  }
  if (!from._internal_dns_name().empty()) {
    _this->_internal_set_dns_name(from._internal_dns_name());
  }
  if (!from._internal_device_id().empty()) {
    _this->_internal_set_device_id(from._internal_device_id());
  }
  if (!from._internal_site_id().empty()) {
    _this->_internal_set_site_id(from._internal_site_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.location_ != nullptr);
    if (_this->_impl_.location_ == nullptr) {
      _this->_impl_.location_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::Location>(arena, *from._impl_.location_);
    } else {
      _this->_impl_.location_->MergeFrom(*from._impl_.location_);
    }
  }
  if (from._internal_asn() != 0) {
    _this->_impl_.asn_ = from._impl_.asn_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NetNode::CopyFrom(const NetNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.NetNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NetNode::InternalSwap(NetNode* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, &other->_impl_.ip_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.as_name_, &other->_impl_.as_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dns_name_, &other->_impl_.dns_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.site_id_, &other->_impl_.site_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NetNode, _impl_.asn_)
      + sizeof(NetNode::_impl_.asn_)
      - PROTOBUF_FIELD_OFFSET(NetNode, _impl_.location_)>(
          reinterpret_cast<char*>(&_impl_.location_),
          reinterpret_cast<char*>(&other->_impl_.location_));
}

::google::protobuf::Metadata NetNode::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TraceHop::_Internal {
 public:
};

TraceHop::TraceHop(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.TraceHop)
}
inline PROTOBUF_NDEBUG_INLINE TraceHop::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::TraceHop& from_msg)
      : node_id_(arena, from.node_id_),
        _cached_size_{0} {}

TraceHop::TraceHop(
    ::google::protobuf::Arena* arena,
    const TraceHop& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TraceHop* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.latency_ = from._impl_.latency_;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.TraceHop)
}
inline PROTOBUF_NDEBUG_INLINE TraceHop::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : node_id_(arena),
        _cached_size_{0} {}

inline void TraceHop::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.latency_ = {};
}
TraceHop::~TraceHop() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.TraceHop)
  SharedDtor(*this);
}
inline void TraceHop::SharedDtor(MessageLite& self) {
  TraceHop& this_ = static_cast<TraceHop&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.node_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TraceHop::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TraceHop(arena);
}
constexpr auto TraceHop::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TraceHop),
                                            alignof(TraceHop));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TraceHop::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TraceHop_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TraceHop::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TraceHop>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TraceHop::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TraceHop>(), &TraceHop::ByteSizeLong,
            &TraceHop::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TraceHop, _impl_._cached_size_),
        false,
    },
    &TraceHop::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TraceHop::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 0, 50, 2> TraceHop::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967275,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::TraceHop>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string node_id = 5 [json_name = "nodeId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(TraceHop, _impl_.node_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int32 latency = 3 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TraceHop, _impl_.latency_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TraceHop, _impl_.latency_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 latency = 3 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TraceHop, _impl_.latency_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string node_id = 5 [json_name = "nodeId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(TraceHop, _impl_.node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\0\7\0\0\0\0\0"
    "kentik.synthetics.v202202.TraceHop"
    "node_id"
  }},
};

PROTOBUF_NOINLINE void TraceHop::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.TraceHop)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_id_.ClearToEmpty();
  _impl_.latency_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TraceHop::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TraceHop& this_ = static_cast<const TraceHop&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TraceHop::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TraceHop& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.TraceHop)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 latency = 3 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_latency() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_latency(), target);
          }

          // string node_id = 5 [json_name = "nodeId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_node_id().empty()) {
            const std::string& _s = this_._internal_node_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.TraceHop.node_id");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.TraceHop)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TraceHop::ByteSizeLong(const MessageLite& base) {
          const TraceHop& this_ = static_cast<const TraceHop&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TraceHop::ByteSizeLong() const {
          const TraceHop& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.TraceHop)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string node_id = 5 [json_name = "nodeId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_node_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_node_id());
            }
            // int32 latency = 3 [json_name = "latency", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_latency() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_latency());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TraceHop::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TraceHop*>(&to_msg);
  auto& from = static_cast<const TraceHop&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.TraceHop)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_node_id().empty()) {
    _this->_internal_set_node_id(from._internal_node_id());
  }
  if (from._internal_latency() != 0) {
    _this->_impl_.latency_ = from._impl_.latency_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TraceHop::CopyFrom(const TraceHop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.TraceHop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TraceHop::InternalSwap(TraceHop* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_id_, &other->_impl_.node_id_, arena);
        swap(_impl_.latency_, other->_impl_.latency_);
}

::google::protobuf::Metadata TraceHop::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PathTrace::_Internal {
 public:
};

PathTrace::PathTrace(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.PathTrace)
}
inline PROTOBUF_NDEBUG_INLINE PathTrace::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::PathTrace& from_msg)
      : as_path_{visibility, arena, from.as_path_},
        _as_path_cached_byte_size_{0},
        hops_{visibility, arena, from.hops_},
        _cached_size_{0} {}

PathTrace::PathTrace(
    ::google::protobuf::Arena* arena,
    const PathTrace& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PathTrace* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.is_complete_ = from._impl_.is_complete_;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.PathTrace)
}
inline PROTOBUF_NDEBUG_INLINE PathTrace::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : as_path_{visibility, arena},
        _as_path_cached_byte_size_{0},
        hops_{visibility, arena},
        _cached_size_{0} {}

inline void PathTrace::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_complete_ = {};
}
PathTrace::~PathTrace() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.PathTrace)
  SharedDtor(*this);
}
inline void PathTrace::SharedDtor(MessageLite& self) {
  PathTrace& this_ = static_cast<PathTrace&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PathTrace::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PathTrace(arena);
}
constexpr auto PathTrace::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PathTrace, _impl_.as_path_) +
          decltype(PathTrace::_impl_.as_path_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PathTrace, _impl_.hops_) +
          decltype(PathTrace::_impl_.hops_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PathTrace), alignof(PathTrace), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PathTrace::PlacementNew_,
                                 sizeof(PathTrace),
                                 alignof(PathTrace));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PathTrace::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PathTrace_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PathTrace::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PathTrace>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PathTrace::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PathTrace>(), &PathTrace::ByteSizeLong,
            &PathTrace::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PathTrace, _impl_._cached_size_),
        false,
    },
    &PathTrace::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PathTrace::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 1, 0, 2> PathTrace::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967260,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::PathTrace>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool is_complete = 2 [json_name = "isComplete", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PathTrace, _impl_.is_complete_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PathTrace, _impl_.is_complete_)}},
    // repeated int32 as_path = 1 [json_name = "asPath", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PathTrace, _impl_.as_path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int32 as_path = 1 [json_name = "asPath", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PathTrace, _impl_.as_path_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // bool is_complete = 2 [json_name = "isComplete", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PathTrace, _impl_.is_complete_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // repeated .kentik.synthetics.v202202.TraceHop hops = 6 [json_name = "hops", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(PathTrace, _impl_.hops_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::TraceHop>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PathTrace::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.PathTrace)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.as_path_.Clear();
  _impl_.hops_.Clear();
  _impl_.is_complete_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PathTrace::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PathTrace& this_ = static_cast<const PathTrace&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PathTrace::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PathTrace& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.PathTrace)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated int32 as_path = 1 [json_name = "asPath", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          {
            int byte_size = this_._impl_._as_path_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt32Packed(
                  1, this_._internal_as_path(), byte_size, target);
            }
          }

          // bool is_complete = 2 [json_name = "isComplete", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_is_complete() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_is_complete(), target);
          }

          // repeated .kentik.synthetics.v202202.TraceHop hops = 6 [json_name = "hops", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_hops_size());
               i < n; i++) {
            const auto& repfield = this_._internal_hops().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.PathTrace)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PathTrace::ByteSizeLong(const MessageLite& base) {
          const PathTrace& this_ = static_cast<const PathTrace&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PathTrace::ByteSizeLong() const {
          const PathTrace& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.PathTrace)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int32 as_path = 1 [json_name = "asPath", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
                      this_._internal_as_path(), 1,
                      this_._impl_._as_path_cached_byte_size_);
            }
            // repeated .kentik.synthetics.v202202.TraceHop hops = 6 [json_name = "hops", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_hops_size();
              for (const auto& msg : this_._internal_hops()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bool is_complete = 2 [json_name = "isComplete", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_is_complete() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PathTrace::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PathTrace*>(&to_msg);
  auto& from = static_cast<const PathTrace&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.PathTrace)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_as_path()->MergeFrom(from._internal_as_path());
  _this->_internal_mutable_hops()->MergeFrom(
      from._internal_hops());
  if (from._internal_is_complete() != 0) {
    _this->_impl_.is_complete_ = from._impl_.is_complete_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PathTrace::CopyFrom(const PathTrace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.PathTrace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PathTrace::InternalSwap(PathTrace* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.as_path_.InternalSwap(&other->_impl_.as_path_);
  _impl_.hops_.InternalSwap(&other->_impl_.hops_);
        swap(_impl_.is_complete_, other->_impl_.is_complete_);
}

::google::protobuf::Metadata PathTrace::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Path::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Path>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Path, _impl_._has_bits_);
};

void Path::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Path::Path(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.Path)
}
inline PROTOBUF_NDEBUG_INLINE Path::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::Path& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        traces_{visibility, arena, from.traces_},
        agent_id_(arena, from.agent_id_),
        target_ip_(arena, from.target_ip_) {}

Path::Path(
    ::google::protobuf::Arena* arena,
    const Path& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Path* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.hop_count_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::Stats>(
                              arena, *from._impl_.hop_count_)
                        : nullptr;
  _impl_.time_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.time_)
                        : nullptr;
  _impl_.max_as_path_length_ = from._impl_.max_as_path_length_;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.Path)
}
inline PROTOBUF_NDEBUG_INLINE Path::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        traces_{visibility, arena},
        agent_id_(arena),
        target_ip_(arena) {}

inline void Path::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hop_count_),
           0,
           offsetof(Impl_, max_as_path_length_) -
               offsetof(Impl_, hop_count_) +
               sizeof(Impl_::max_as_path_length_));
}
Path::~Path() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.Path)
  SharedDtor(*this);
}
inline void Path::SharedDtor(MessageLite& self) {
  Path& this_ = static_cast<Path&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.agent_id_.Destroy();
  this_._impl_.target_ip_.Destroy();
  delete this_._impl_.hop_count_;
  delete this_._impl_.time_;
  this_._impl_.~Impl_();
}

inline void* Path::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Path(arena);
}
constexpr auto Path::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Path, _impl_.traces_) +
          decltype(Path::_impl_.traces_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Path), alignof(Path), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Path::PlacementNew_,
                                 sizeof(Path),
                                 alignof(Path));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Path::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Path_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Path::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Path>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Path::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Path>(), &Path::ByteSizeLong,
            &Path::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Path, _impl_._cached_size_),
        false,
    },
    &Path::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Path::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 56, 2> Path::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Path, _impl_._has_bits_),
    0, // no _extensions_
    9, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966834,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::Path>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .kentik.synthetics.v202202.PathTrace traces = 8 [json_name = "traces", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 1, PROTOBUF_FIELD_OFFSET(Path, _impl_.traces_)}},
    // string agent_id = 1 [json_name = "agentId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Path, _impl_.agent_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string target_ip = 3 [json_name = "targetIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Path, _impl_.target_ip_)}},
    // .kentik.synthetics.v202202.Stats hop_count = 4 [json_name = "hopCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Path, _impl_.hop_count_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // int32 max_as_path_length = 7 [json_name = "maxAsPathLength", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Path, _impl_.max_as_path_length_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Path, _impl_.max_as_path_length_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string agent_id = 1 [json_name = "agentId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Path, _impl_.agent_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string target_ip = 3 [json_name = "targetIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Path, _impl_.target_ip_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .kentik.synthetics.v202202.Stats hop_count = 4 [json_name = "hopCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Path, _impl_.hop_count_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 max_as_path_length = 7 [json_name = "maxAsPathLength", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Path, _impl_.max_as_path_length_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .kentik.synthetics.v202202.PathTrace traces = 8 [json_name = "traces", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Path, _impl_.traces_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp time = 9 [json_name = "time", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Path, _impl_.time_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::Stats>()},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::PathTrace>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\36\10\11\0\0\0\0\0"
    "kentik.synthetics.v202202.Path"
    "agent_id"
    "target_ip"
  }},
};

PROTOBUF_NOINLINE void Path::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.Path)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.traces_.Clear();
  _impl_.agent_id_.ClearToEmpty();
  _impl_.target_ip_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.hop_count_ != nullptr);
      _impl_.hop_count_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
  }
  _impl_.max_as_path_length_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Path::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Path& this_ = static_cast<const Path&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Path::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Path& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.Path)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string agent_id = 1 [json_name = "agentId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_agent_id().empty()) {
            const std::string& _s = this_._internal_agent_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Path.agent_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string target_ip = 3 [json_name = "targetIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_target_ip().empty()) {
            const std::string& _s = this_._internal_target_ip();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.Path.target_ip");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.synthetics.v202202.Stats hop_count = 4 [json_name = "hopCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.hop_count_, this_._impl_.hop_count_->GetCachedSize(), target,
                stream);
          }

          // int32 max_as_path_length = 7 [json_name = "maxAsPathLength", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_max_as_path_length() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<7>(
                    stream, this_._internal_max_as_path_length(), target);
          }

          // repeated .kentik.synthetics.v202202.PathTrace traces = 8 [json_name = "traces", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_traces_size());
               i < n; i++) {
            const auto& repfield = this_._internal_traces().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    8, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .google.protobuf.Timestamp time = 9 [json_name = "time", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.Path)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Path::ByteSizeLong(const MessageLite& base) {
          const Path& this_ = static_cast<const Path&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Path::ByteSizeLong() const {
          const Path& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.Path)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.synthetics.v202202.PathTrace traces = 8 [json_name = "traces", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_traces_size();
              for (const auto& msg : this_._internal_traces()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string agent_id = 1 [json_name = "agentId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_agent_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_agent_id());
            }
            // string target_ip = 3 [json_name = "targetIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_target_ip().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target_ip());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .kentik.synthetics.v202202.Stats hop_count = 4 [json_name = "hopCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.hop_count_);
            }
            // .google.protobuf.Timestamp time = 9 [json_name = "time", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
            }
          }
           {
            // int32 max_as_path_length = 7 [json_name = "maxAsPathLength", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_max_as_path_length() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_max_as_path_length());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Path::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Path*>(&to_msg);
  auto& from = static_cast<const Path&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.Path)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_traces()->MergeFrom(
      from._internal_traces());
  if (!from._internal_agent_id().empty()) {
    _this->_internal_set_agent_id(from._internal_agent_id());
  }
  if (!from._internal_target_ip().empty()) {
    _this->_internal_set_target_ip(from._internal_target_ip());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.hop_count_ != nullptr);
      if (_this->_impl_.hop_count_ == nullptr) {
        _this->_impl_.hop_count_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::Stats>(arena, *from._impl_.hop_count_);
      } else {
        _this->_impl_.hop_count_->MergeFrom(*from._impl_.hop_count_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.time_ != nullptr);
      if (_this->_impl_.time_ == nullptr) {
        _this->_impl_.time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.time_);
      } else {
        _this->_impl_.time_->MergeFrom(*from._impl_.time_);
      }
    }
  }
  if (from._internal_max_as_path_length() != 0) {
    _this->_impl_.max_as_path_length_ = from._impl_.max_as_path_length_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Path::CopyFrom(const Path& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.Path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Path::InternalSwap(Path* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.traces_.InternalSwap(&other->_impl_.traces_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.agent_id_, &other->_impl_.agent_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_ip_, &other->_impl_.target_ip_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Path, _impl_.max_as_path_length_)
      + sizeof(Path::_impl_.max_as_path_length_)
      - PROTOBUF_FIELD_OFFSET(Path, _impl_.hop_count_)>(
          reinterpret_cast<char*>(&_impl_.hop_count_),
          reinterpret_cast<char*>(&other->_impl_.hop_count_));
}

::google::protobuf::Metadata Path::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetResultsForTestsRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetResultsForTestsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetResultsForTestsRequest, _impl_._has_bits_);
};

void GetResultsForTestsRequest::clear_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.start_time_ != nullptr) _impl_.start_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GetResultsForTestsRequest::clear_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.end_time_ != nullptr) _impl_.end_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GetResultsForTestsRequest::GetResultsForTestsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.GetResultsForTestsRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetResultsForTestsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::GetResultsForTestsRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ids_{visibility, arena, from.ids_},
        agent_ids_{visibility, arena, from.agent_ids_},
        targets_{visibility, arena, from.targets_} {}

GetResultsForTestsRequest::GetResultsForTestsRequest(
    ::google::protobuf::Arena* arena,
    const GetResultsForTestsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetResultsForTestsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.start_time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.start_time_)
                        : nullptr;
  _impl_.end_time_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.end_time_)
                        : nullptr;
  _impl_.aggregate_ = from._impl_.aggregate_;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.GetResultsForTestsRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetResultsForTestsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        ids_{visibility, arena},
        agent_ids_{visibility, arena},
        targets_{visibility, arena} {}

inline void GetResultsForTestsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_time_),
           0,
           offsetof(Impl_, aggregate_) -
               offsetof(Impl_, start_time_) +
               sizeof(Impl_::aggregate_));
}
GetResultsForTestsRequest::~GetResultsForTestsRequest() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.GetResultsForTestsRequest)
  SharedDtor(*this);
}
inline void GetResultsForTestsRequest::SharedDtor(MessageLite& self) {
  GetResultsForTestsRequest& this_ = static_cast<GetResultsForTestsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.start_time_;
  delete this_._impl_.end_time_;
  this_._impl_.~Impl_();
}

inline void* GetResultsForTestsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetResultsForTestsRequest(arena);
}
constexpr auto GetResultsForTestsRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetResultsForTestsRequest, _impl_.ids_) +
          decltype(GetResultsForTestsRequest::_impl_.ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GetResultsForTestsRequest, _impl_.agent_ids_) +
          decltype(GetResultsForTestsRequest::_impl_.agent_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GetResultsForTestsRequest, _impl_.targets_) +
          decltype(GetResultsForTestsRequest::_impl_.targets_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetResultsForTestsRequest), alignof(GetResultsForTestsRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetResultsForTestsRequest::PlacementNew_,
                                 sizeof(GetResultsForTestsRequest),
                                 alignof(GetResultsForTestsRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetResultsForTestsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetResultsForTestsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetResultsForTestsRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetResultsForTestsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetResultsForTestsRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetResultsForTestsRequest>(), &GetResultsForTestsRequest::ByteSizeLong,
            &GetResultsForTestsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetResultsForTestsRequest, _impl_._cached_size_),
        false,
    },
    &GetResultsForTestsRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetResultsForTestsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 79, 2> GetResultsForTestsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetResultsForTestsRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::GetResultsForTestsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string ids = 1 [json_name = "ids", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetResultsForTestsRequest, _impl_.ids_)}},
    // .google.protobuf.Timestamp start_time = 2 [json_name = "startTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GetResultsForTestsRequest, _impl_.start_time_)}},
    // .google.protobuf.Timestamp end_time = 3 [json_name = "endTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(GetResultsForTestsRequest, _impl_.end_time_)}},
    // repeated string agent_ids = 4 [json_name = "agentIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(GetResultsForTestsRequest, _impl_.agent_ids_)}},
    // repeated string targets = 5 [json_name = "targets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(GetResultsForTestsRequest, _impl_.targets_)}},
    // bool aggregate = 6 [json_name = "aggregate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetResultsForTestsRequest, _impl_.aggregate_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(GetResultsForTestsRequest, _impl_.aggregate_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string ids = 1 [json_name = "ids", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(GetResultsForTestsRequest, _impl_.ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .google.protobuf.Timestamp start_time = 2 [json_name = "startTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(GetResultsForTestsRequest, _impl_.start_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp end_time = 3 [json_name = "endTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(GetResultsForTestsRequest, _impl_.end_time_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string agent_ids = 4 [json_name = "agentIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(GetResultsForTestsRequest, _impl_.agent_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string targets = 5 [json_name = "targets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(GetResultsForTestsRequest, _impl_.targets_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bool aggregate = 6 [json_name = "aggregate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(GetResultsForTestsRequest, _impl_.aggregate_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\63\3\0\0\11\7\0\0"
    "kentik.synthetics.v202202.GetResultsForTestsRequest"
    "ids"
    "agent_ids"
    "targets"
  }},
};

PROTOBUF_NOINLINE void GetResultsForTestsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.GetResultsForTestsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ids_.Clear();
  _impl_.agent_ids_.Clear();
  _impl_.targets_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.start_time_ != nullptr);
      _impl_.start_time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.end_time_ != nullptr);
      _impl_.end_time_->Clear();
    }
  }
  _impl_.aggregate_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetResultsForTestsRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetResultsForTestsRequest& this_ = static_cast<const GetResultsForTestsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetResultsForTestsRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetResultsForTestsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.GetResultsForTestsRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string ids = 1 [json_name = "ids", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.GetResultsForTestsRequest.ids");
            target = stream->WriteString(1, s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp start_time = 2 [json_name = "startTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.start_time_, this_._impl_.start_time_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp end_time = 3 [json_name = "endTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.end_time_, this_._impl_.end_time_->GetCachedSize(), target,
                stream);
          }

          // repeated string agent_ids = 4 [json_name = "agentIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_agent_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_agent_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.GetResultsForTestsRequest.agent_ids");
            target = stream->WriteString(4, s, target);
          }

          // repeated string targets = 5 [json_name = "targets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_targets_size(); i < n; ++i) {
            const auto& s = this_._internal_targets().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.GetResultsForTestsRequest.targets");
            target = stream->WriteString(5, s, target);
          }

          // bool aggregate = 6 [json_name = "aggregate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_aggregate() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_aggregate(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.GetResultsForTestsRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetResultsForTestsRequest::ByteSizeLong(const MessageLite& base) {
          const GetResultsForTestsRequest& this_ = static_cast<const GetResultsForTestsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetResultsForTestsRequest::ByteSizeLong() const {
          const GetResultsForTestsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.GetResultsForTestsRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string ids = 1 [json_name = "ids", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_ids().size());
              for (int i = 0, n = this_._internal_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_ids().Get(i));
              }
            }
            // repeated string agent_ids = 4 [json_name = "agentIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_agent_ids().size());
              for (int i = 0, n = this_._internal_agent_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_agent_ids().Get(i));
              }
            }
            // repeated string targets = 5 [json_name = "targets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_targets().size());
              for (int i = 0, n = this_._internal_targets().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_targets().Get(i));
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp start_time = 2 [json_name = "startTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.start_time_);
            }
            // .google.protobuf.Timestamp end_time = 3 [json_name = "endTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.end_time_);
            }
          }
           {
            // bool aggregate = 6 [json_name = "aggregate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_aggregate() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetResultsForTestsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetResultsForTestsRequest*>(&to_msg);
  auto& from = static_cast<const GetResultsForTestsRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.GetResultsForTestsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ids()->MergeFrom(from._internal_ids());
  _this->_internal_mutable_agent_ids()->MergeFrom(from._internal_agent_ids());
  _this->_internal_mutable_targets()->MergeFrom(from._internal_targets());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.start_time_ != nullptr);
      if (_this->_impl_.start_time_ == nullptr) {
        _this->_impl_.start_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.start_time_);
      } else {
        _this->_impl_.start_time_->MergeFrom(*from._impl_.start_time_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.end_time_ != nullptr);
      if (_this->_impl_.end_time_ == nullptr) {
        _this->_impl_.end_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.end_time_);
      } else {
        _this->_impl_.end_time_->MergeFrom(*from._impl_.end_time_);
      }
    }
  }
  if (from._internal_aggregate() != 0) {
    _this->_impl_.aggregate_ = from._impl_.aggregate_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetResultsForTestsRequest::CopyFrom(const GetResultsForTestsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.GetResultsForTestsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetResultsForTestsRequest::InternalSwap(GetResultsForTestsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.ids_.InternalSwap(&other->_impl_.ids_);
  _impl_.agent_ids_.InternalSwap(&other->_impl_.agent_ids_);
  _impl_.targets_.InternalSwap(&other->_impl_.targets_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetResultsForTestsRequest, _impl_.aggregate_)
      + sizeof(GetResultsForTestsRequest::_impl_.aggregate_)
      - PROTOBUF_FIELD_OFFSET(GetResultsForTestsRequest, _impl_.start_time_)>(
          reinterpret_cast<char*>(&_impl_.start_time_),
          reinterpret_cast<char*>(&other->_impl_.start_time_));
}

::google::protobuf::Metadata GetResultsForTestsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetResultsForTestsResponse::_Internal {
 public:
};

GetResultsForTestsResponse::GetResultsForTestsResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.GetResultsForTestsResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetResultsForTestsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::GetResultsForTestsResponse& from_msg)
      : results_{visibility, arena, from.results_},
        _cached_size_{0} {}

GetResultsForTestsResponse::GetResultsForTestsResponse(
    ::google::protobuf::Arena* arena,
    const GetResultsForTestsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetResultsForTestsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.GetResultsForTestsResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetResultsForTestsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : results_{visibility, arena},
        _cached_size_{0} {}

inline void GetResultsForTestsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetResultsForTestsResponse::~GetResultsForTestsResponse() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.GetResultsForTestsResponse)
  SharedDtor(*this);
}
inline void GetResultsForTestsResponse::SharedDtor(MessageLite& self) {
  GetResultsForTestsResponse& this_ = static_cast<GetResultsForTestsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetResultsForTestsResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetResultsForTestsResponse(arena);
}
constexpr auto GetResultsForTestsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetResultsForTestsResponse, _impl_.results_) +
          decltype(GetResultsForTestsResponse::_impl_.results_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetResultsForTestsResponse), alignof(GetResultsForTestsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetResultsForTestsResponse::PlacementNew_,
                                 sizeof(GetResultsForTestsResponse),
                                 alignof(GetResultsForTestsResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetResultsForTestsResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetResultsForTestsResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetResultsForTestsResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetResultsForTestsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetResultsForTestsResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetResultsForTestsResponse>(), &GetResultsForTestsResponse::ByteSizeLong,
            &GetResultsForTestsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetResultsForTestsResponse, _impl_._cached_size_),
        false,
    },
    &GetResultsForTestsResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetResultsForTestsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetResultsForTestsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::GetResultsForTestsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .kentik.synthetics.v202202.TestResults results = 1 [json_name = "results"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetResultsForTestsResponse, _impl_.results_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .kentik.synthetics.v202202.TestResults results = 1 [json_name = "results"];
    {PROTOBUF_FIELD_OFFSET(GetResultsForTestsResponse, _impl_.results_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::TestResults>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetResultsForTestsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.GetResultsForTestsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.results_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetResultsForTestsResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetResultsForTestsResponse& this_ = static_cast<const GetResultsForTestsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetResultsForTestsResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetResultsForTestsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.GetResultsForTestsResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .kentik.synthetics.v202202.TestResults results = 1 [json_name = "results"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_results_size());
               i < n; i++) {
            const auto& repfield = this_._internal_results().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.GetResultsForTestsResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetResultsForTestsResponse::ByteSizeLong(const MessageLite& base) {
          const GetResultsForTestsResponse& this_ = static_cast<const GetResultsForTestsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetResultsForTestsResponse::ByteSizeLong() const {
          const GetResultsForTestsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.GetResultsForTestsResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.synthetics.v202202.TestResults results = 1 [json_name = "results"];
            {
              total_size += 1UL * this_._internal_results_size();
              for (const auto& msg : this_._internal_results()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetResultsForTestsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetResultsForTestsResponse*>(&to_msg);
  auto& from = static_cast<const GetResultsForTestsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.GetResultsForTestsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_results()->MergeFrom(
      from._internal_results());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetResultsForTestsResponse::CopyFrom(const GetResultsForTestsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.GetResultsForTestsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetResultsForTestsResponse::InternalSwap(GetResultsForTestsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.results_.InternalSwap(&other->_impl_.results_);
}

::google::protobuf::Metadata GetResultsForTestsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTraceForTestRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetTraceForTestRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetTraceForTestRequest, _impl_._has_bits_);
};

void GetTraceForTestRequest::clear_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.start_time_ != nullptr) _impl_.start_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GetTraceForTestRequest::clear_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.end_time_ != nullptr) _impl_.end_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GetTraceForTestRequest::GetTraceForTestRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.GetTraceForTestRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetTraceForTestRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::GetTraceForTestRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        agent_ids_{visibility, arena, from.agent_ids_},
        target_ips_{visibility, arena, from.target_ips_},
        id_(arena, from.id_) {}

GetTraceForTestRequest::GetTraceForTestRequest(
    ::google::protobuf::Arena* arena,
    const GetTraceForTestRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTraceForTestRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.start_time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.start_time_)
                        : nullptr;
  _impl_.end_time_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.end_time_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.GetTraceForTestRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetTraceForTestRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        agent_ids_{visibility, arena},
        target_ips_{visibility, arena},
        id_(arena) {}

inline void GetTraceForTestRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_time_),
           0,
           offsetof(Impl_, end_time_) -
               offsetof(Impl_, start_time_) +
               sizeof(Impl_::end_time_));
}
GetTraceForTestRequest::~GetTraceForTestRequest() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.GetTraceForTestRequest)
  SharedDtor(*this);
}
inline void GetTraceForTestRequest::SharedDtor(MessageLite& self) {
  GetTraceForTestRequest& this_ = static_cast<GetTraceForTestRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  delete this_._impl_.start_time_;
  delete this_._impl_.end_time_;
  this_._impl_.~Impl_();
}

inline void* GetTraceForTestRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetTraceForTestRequest(arena);
}
constexpr auto GetTraceForTestRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetTraceForTestRequest, _impl_.agent_ids_) +
          decltype(GetTraceForTestRequest::_impl_.agent_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GetTraceForTestRequest, _impl_.target_ips_) +
          decltype(GetTraceForTestRequest::_impl_.target_ips_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GetTraceForTestRequest), alignof(GetTraceForTestRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetTraceForTestRequest::PlacementNew_,
                                 sizeof(GetTraceForTestRequest),
                                 alignof(GetTraceForTestRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetTraceForTestRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetTraceForTestRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetTraceForTestRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetTraceForTestRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetTraceForTestRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetTraceForTestRequest>(), &GetTraceForTestRequest::ByteSizeLong,
            &GetTraceForTestRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetTraceForTestRequest, _impl_._cached_size_),
        false,
    },
    &GetTraceForTestRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetTraceForTestRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 78, 2> GetTraceForTestRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetTraceForTestRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::GetTraceForTestRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetTraceForTestRequest, _impl_.id_)}},
    // .google.protobuf.Timestamp start_time = 2 [json_name = "startTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GetTraceForTestRequest, _impl_.start_time_)}},
    // .google.protobuf.Timestamp end_time = 3 [json_name = "endTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(GetTraceForTestRequest, _impl_.end_time_)}},
    // repeated string agent_ids = 4 [json_name = "agentIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(GetTraceForTestRequest, _impl_.agent_ids_)}},
    // repeated string target_ips = 5 [json_name = "targetIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(GetTraceForTestRequest, _impl_.target_ips_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(GetTraceForTestRequest, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp start_time = 2 [json_name = "startTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(GetTraceForTestRequest, _impl_.start_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp end_time = 3 [json_name = "endTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(GetTraceForTestRequest, _impl_.end_time_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string agent_ids = 4 [json_name = "agentIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(GetTraceForTestRequest, _impl_.agent_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string target_ips = 5 [json_name = "targetIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(GetTraceForTestRequest, _impl_.target_ips_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\60\2\0\0\11\12\0\0"
    "kentik.synthetics.v202202.GetTraceForTestRequest"
    "id"
    "agent_ids"
    "target_ips"
  }},
};

PROTOBUF_NOINLINE void GetTraceForTestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.GetTraceForTestRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_ids_.Clear();
  _impl_.target_ips_.Clear();
  _impl_.id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.start_time_ != nullptr);
      _impl_.start_time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.end_time_ != nullptr);
      _impl_.end_time_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetTraceForTestRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetTraceForTestRequest& this_ = static_cast<const GetTraceForTestRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetTraceForTestRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetTraceForTestRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.GetTraceForTestRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.GetTraceForTestRequest.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp start_time = 2 [json_name = "startTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.start_time_, this_._impl_.start_time_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp end_time = 3 [json_name = "endTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.end_time_, this_._impl_.end_time_->GetCachedSize(), target,
                stream);
          }

          // repeated string agent_ids = 4 [json_name = "agentIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_agent_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_agent_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.GetTraceForTestRequest.agent_ids");
            target = stream->WriteString(4, s, target);
          }

          // repeated string target_ips = 5 [json_name = "targetIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_target_ips_size(); i < n; ++i) {
            const auto& s = this_._internal_target_ips().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.GetTraceForTestRequest.target_ips");
            target = stream->WriteString(5, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.GetTraceForTestRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetTraceForTestRequest::ByteSizeLong(const MessageLite& base) {
          const GetTraceForTestRequest& this_ = static_cast<const GetTraceForTestRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetTraceForTestRequest::ByteSizeLong() const {
          const GetTraceForTestRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.GetTraceForTestRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string agent_ids = 4 [json_name = "agentIds", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_agent_ids().size());
              for (int i = 0, n = this_._internal_agent_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_agent_ids().Get(i));
              }
            }
            // repeated string target_ips = 5 [json_name = "targetIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_target_ips().size());
              for (int i = 0, n = this_._internal_target_ips().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_target_ips().Get(i));
              }
            }
          }
           {
            // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp start_time = 2 [json_name = "startTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.start_time_);
            }
            // .google.protobuf.Timestamp end_time = 3 [json_name = "endTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.end_time_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetTraceForTestRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTraceForTestRequest*>(&to_msg);
  auto& from = static_cast<const GetTraceForTestRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.GetTraceForTestRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_agent_ids()->MergeFrom(from._internal_agent_ids());
  _this->_internal_mutable_target_ips()->MergeFrom(from._internal_target_ips());
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.start_time_ != nullptr);
      if (_this->_impl_.start_time_ == nullptr) {
        _this->_impl_.start_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.start_time_);
      } else {
        _this->_impl_.start_time_->MergeFrom(*from._impl_.start_time_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.end_time_ != nullptr);
      if (_this->_impl_.end_time_ == nullptr) {
        _this->_impl_.end_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.end_time_);
      } else {
        _this->_impl_.end_time_->MergeFrom(*from._impl_.end_time_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTraceForTestRequest::CopyFrom(const GetTraceForTestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.GetTraceForTestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTraceForTestRequest::InternalSwap(GetTraceForTestRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.agent_ids_.InternalSwap(&other->_impl_.agent_ids_);
  _impl_.target_ips_.InternalSwap(&other->_impl_.target_ips_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetTraceForTestRequest, _impl_.end_time_)
      + sizeof(GetTraceForTestRequest::_impl_.end_time_)
      - PROTOBUF_FIELD_OFFSET(GetTraceForTestRequest, _impl_.start_time_)>(
          reinterpret_cast<char*>(&_impl_.start_time_),
          reinterpret_cast<char*>(&other->_impl_.start_time_));
}

::google::protobuf::Metadata GetTraceForTestRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              GetTraceForTestResponse_NodesEntry_DoNotUse::GetTraceForTestResponse_NodesEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              GetTraceForTestResponse_NodesEntry_DoNotUse::GetTraceForTestResponse_NodesEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              GetTraceForTestResponse_NodesEntry_DoNotUse::GetTraceForTestResponse_NodesEntry_DoNotUse() : SuperType() {}
              GetTraceForTestResponse_NodesEntry_DoNotUse::GetTraceForTestResponse_NodesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* GetTraceForTestResponse_NodesEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) GetTraceForTestResponse_NodesEntry_DoNotUse(arena);
              }
              constexpr auto GetTraceForTestResponse_NodesEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetTraceForTestResponse_NodesEntry_DoNotUse),
                                                          alignof(GetTraceForTestResponse_NodesEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull GetTraceForTestResponse_NodesEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_GetTraceForTestResponse_NodesEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &GetTraceForTestResponse_NodesEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<GetTraceForTestResponse_NodesEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &GetTraceForTestResponse_NodesEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &GetTraceForTestResponse_NodesEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(GetTraceForTestResponse_NodesEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &GetTraceForTestResponse_NodesEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* GetTraceForTestResponse_NodesEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 72, 2> GetTraceForTestResponse_NodesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetTraceForTestResponse_NodesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::GetTraceForTestResponse_NodesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.synthetics.v202202.NetNode value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GetTraceForTestResponse_NodesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetTraceForTestResponse_NodesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(GetTraceForTestResponse_NodesEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .kentik.synthetics.v202202.NetNode value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(GetTraceForTestResponse_NodesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::NetNode>()},
  }}, {{
    "\74\3\0\0\0\0\0\0"
    "kentik.synthetics.v202202.GetTraceForTestResponse.NodesEntry"
    "key"
  }},
};

// ===================================================================

class GetTraceForTestResponse::_Internal {
 public:
};

GetTraceForTestResponse::GetTraceForTestResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.GetTraceForTestResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetTraceForTestResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::GetTraceForTestResponse& from_msg)
      : nodes_{visibility, arena, from.nodes_},
        paths_{visibility, arena, from.paths_},
        _cached_size_{0} {}

GetTraceForTestResponse::GetTraceForTestResponse(
    ::google::protobuf::Arena* arena,
    const GetTraceForTestResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTraceForTestResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.GetTraceForTestResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetTraceForTestResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : nodes_{visibility, arena},
        paths_{visibility, arena},
        _cached_size_{0} {}

inline void GetTraceForTestResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetTraceForTestResponse::~GetTraceForTestResponse() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.GetTraceForTestResponse)
  SharedDtor(*this);
}
inline void GetTraceForTestResponse::SharedDtor(MessageLite& self) {
  GetTraceForTestResponse& this_ = static_cast<GetTraceForTestResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetTraceForTestResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetTraceForTestResponse(arena);
}
constexpr auto GetTraceForTestResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetTraceForTestResponse, _impl_.nodes_) +
          decltype(GetTraceForTestResponse::_impl_.nodes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GetTraceForTestResponse, _impl_.nodes_) +
          decltype(GetTraceForTestResponse::_impl_.nodes_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GetTraceForTestResponse, _impl_.paths_) +
          decltype(GetTraceForTestResponse::_impl_.paths_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GetTraceForTestResponse), alignof(GetTraceForTestResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetTraceForTestResponse::PlacementNew_,
                                 sizeof(GetTraceForTestResponse),
                                 alignof(GetTraceForTestResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetTraceForTestResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetTraceForTestResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetTraceForTestResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetTraceForTestResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetTraceForTestResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetTraceForTestResponse>(), &GetTraceForTestResponse::ByteSizeLong,
            &GetTraceForTestResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetTraceForTestResponse, _impl_._cached_size_),
        false,
    },
    &GetTraceForTestResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetTraceForTestResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 3, 63, 2> GetTraceForTestResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::GetTraceForTestResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .kentik.synthetics.v202202.Path paths = 2 [json_name = "paths", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetTraceForTestResponse, _impl_.paths_)}},
  }}, {{
    65535, 65535
  }}, {{
    // map<string, .kentik.synthetics.v202202.NetNode> nodes = 1 [json_name = "nodes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(GetTraceForTestResponse, _impl_.nodes_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated .kentik.synthetics.v202202.Path paths = 2 [json_name = "paths", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(GetTraceForTestResponse, _impl_.paths_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::Path>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(GetTraceForTestResponse()._impl_.nodes_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::NetNode>()},
  }}, {{
    "\61\5\0\0\0\0\0\0"
    "kentik.synthetics.v202202.GetTraceForTestResponse"
    "nodes"
  }},
};

PROTOBUF_NOINLINE void GetTraceForTestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.GetTraceForTestResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nodes_.Clear();
  _impl_.paths_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetTraceForTestResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetTraceForTestResponse& this_ = static_cast<const GetTraceForTestResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetTraceForTestResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetTraceForTestResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.GetTraceForTestResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // map<string, .kentik.synthetics.v202202.NetNode> nodes = 1 [json_name = "nodes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_nodes().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::kentik::synthetics::v202202::NetNode>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::kentik::synthetics::v202202::NetNode,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_nodes();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    1, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.GetTraceForTestResponse.nodes");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    1, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.GetTraceForTestResponse.nodes");
              }
            }
          }

          // repeated .kentik.synthetics.v202202.Path paths = 2 [json_name = "paths", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_paths_size());
               i < n; i++) {
            const auto& repfield = this_._internal_paths().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.GetTraceForTestResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetTraceForTestResponse::ByteSizeLong(const MessageLite& base) {
          const GetTraceForTestResponse& this_ = static_cast<const GetTraceForTestResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetTraceForTestResponse::ByteSizeLong() const {
          const GetTraceForTestResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.GetTraceForTestResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, .kentik.synthetics.v202202.NetNode> nodes = 1 [json_name = "nodes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_nodes_size());
              for (const auto& entry : this_._internal_nodes()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::kentik::synthetics::v202202::NetNode,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated .kentik.synthetics.v202202.Path paths = 2 [json_name = "paths", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_paths_size();
              for (const auto& msg : this_._internal_paths()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetTraceForTestResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTraceForTestResponse*>(&to_msg);
  auto& from = static_cast<const GetTraceForTestResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.GetTraceForTestResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.nodes_.MergeFrom(from._impl_.nodes_);
  _this->_internal_mutable_paths()->MergeFrom(
      from._internal_paths());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTraceForTestResponse::CopyFrom(const GetTraceForTestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.GetTraceForTestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTraceForTestResponse::InternalSwap(GetTraceForTestResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.nodes_.InternalSwap(&other->_impl_.nodes_);
  _impl_.paths_.InternalSwap(&other->_impl_.paths_);
}

::google::protobuf::Metadata GetTraceForTestResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListAgentsRequest::_Internal {
 public:
};

ListAgentsRequest::ListAgentsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.ListAgentsRequest)
}
ListAgentsRequest::ListAgentsRequest(
    ::google::protobuf::Arena* arena,
    const ListAgentsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListAgentsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.ListAgentsRequest)
}

inline void* ListAgentsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListAgentsRequest(arena);
}
constexpr auto ListAgentsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ListAgentsRequest),
                                            alignof(ListAgentsRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListAgentsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListAgentsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListAgentsRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<ListAgentsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListAgentsRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<ListAgentsRequest>(), &ListAgentsRequest::ByteSizeLong,
            &ListAgentsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListAgentsRequest, _impl_._cached_size_),
        false,
    },
    &ListAgentsRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListAgentsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> ListAgentsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::ListAgentsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata ListAgentsRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListAgentsResponse::_Internal {
 public:
};

ListAgentsResponse::ListAgentsResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.ListAgentsResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListAgentsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::ListAgentsResponse& from_msg)
      : agents_{visibility, arena, from.agents_},
        _cached_size_{0} {}

ListAgentsResponse::ListAgentsResponse(
    ::google::protobuf::Arena* arena,
    const ListAgentsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListAgentsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.invalid_count_ = from._impl_.invalid_count_;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.ListAgentsResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListAgentsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : agents_{visibility, arena},
        _cached_size_{0} {}

inline void ListAgentsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.invalid_count_ = {};
}
ListAgentsResponse::~ListAgentsResponse() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.ListAgentsResponse)
  SharedDtor(*this);
}
inline void ListAgentsResponse::SharedDtor(MessageLite& self) {
  ListAgentsResponse& this_ = static_cast<ListAgentsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ListAgentsResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListAgentsResponse(arena);
}
constexpr auto ListAgentsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListAgentsResponse, _impl_.agents_) +
          decltype(ListAgentsResponse::_impl_.agents_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ListAgentsResponse), alignof(ListAgentsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListAgentsResponse::PlacementNew_,
                                 sizeof(ListAgentsResponse),
                                 alignof(ListAgentsResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListAgentsResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListAgentsResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListAgentsResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ListAgentsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListAgentsResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ListAgentsResponse>(), &ListAgentsResponse::ByteSizeLong,
            &ListAgentsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListAgentsResponse, _impl_._cached_size_),
        false,
    },
    &ListAgentsResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListAgentsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ListAgentsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::ListAgentsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListAgentsResponse, _impl_.invalid_count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ListAgentsResponse, _impl_.invalid_count_)}},
    // repeated .kentik.synthetics.v202202.Agent agents = 1 [json_name = "agents", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListAgentsResponse, _impl_.agents_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .kentik.synthetics.v202202.Agent agents = 1 [json_name = "agents", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(ListAgentsResponse, _impl_.agents_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(ListAgentsResponse, _impl_.invalid_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::Agent>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ListAgentsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.ListAgentsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agents_.Clear();
  _impl_.invalid_count_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ListAgentsResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ListAgentsResponse& this_ = static_cast<const ListAgentsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ListAgentsResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ListAgentsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.ListAgentsResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .kentik.synthetics.v202202.Agent agents = 1 [json_name = "agents", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_agents_size());
               i < n; i++) {
            const auto& repfield = this_._internal_agents().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_invalid_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_invalid_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.ListAgentsResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ListAgentsResponse::ByteSizeLong(const MessageLite& base) {
          const ListAgentsResponse& this_ = static_cast<const ListAgentsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ListAgentsResponse::ByteSizeLong() const {
          const ListAgentsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.ListAgentsResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.synthetics.v202202.Agent agents = 1 [json_name = "agents", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_agents_size();
              for (const auto& msg : this_._internal_agents()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_invalid_count() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_invalid_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ListAgentsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListAgentsResponse*>(&to_msg);
  auto& from = static_cast<const ListAgentsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.ListAgentsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_agents()->MergeFrom(
      from._internal_agents());
  if (from._internal_invalid_count() != 0) {
    _this->_impl_.invalid_count_ = from._impl_.invalid_count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListAgentsResponse::CopyFrom(const ListAgentsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.ListAgentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListAgentsResponse::InternalSwap(ListAgentsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.agents_.InternalSwap(&other->_impl_.agents_);
        swap(_impl_.invalid_count_, other->_impl_.invalid_count_);
}

::google::protobuf::Metadata ListAgentsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetAgentRequest::_Internal {
 public:
};

GetAgentRequest::GetAgentRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.GetAgentRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetAgentRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::GetAgentRequest& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

GetAgentRequest::GetAgentRequest(
    ::google::protobuf::Arena* arena,
    const GetAgentRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetAgentRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.GetAgentRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetAgentRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void GetAgentRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetAgentRequest::~GetAgentRequest() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.GetAgentRequest)
  SharedDtor(*this);
}
inline void GetAgentRequest::SharedDtor(MessageLite& self) {
  GetAgentRequest& this_ = static_cast<GetAgentRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetAgentRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetAgentRequest(arena);
}
constexpr auto GetAgentRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetAgentRequest),
                                            alignof(GetAgentRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetAgentRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetAgentRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetAgentRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetAgentRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetAgentRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetAgentRequest>(), &GetAgentRequest::ByteSizeLong,
            &GetAgentRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetAgentRequest, _impl_._cached_size_),
        false,
    },
    &GetAgentRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetAgentRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 52, 2> GetAgentRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::GetAgentRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetAgentRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(GetAgentRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\2\0\0\0\0\0\0"
    "kentik.synthetics.v202202.GetAgentRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void GetAgentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.GetAgentRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetAgentRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetAgentRequest& this_ = static_cast<const GetAgentRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetAgentRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetAgentRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.GetAgentRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.GetAgentRequest.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.GetAgentRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetAgentRequest::ByteSizeLong(const MessageLite& base) {
          const GetAgentRequest& this_ = static_cast<const GetAgentRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetAgentRequest::ByteSizeLong() const {
          const GetAgentRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.GetAgentRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetAgentRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetAgentRequest*>(&to_msg);
  auto& from = static_cast<const GetAgentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.GetAgentRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetAgentRequest::CopyFrom(const GetAgentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.GetAgentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetAgentRequest::InternalSwap(GetAgentRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata GetAgentRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetAgentResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetAgentResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetAgentResponse, _impl_._has_bits_);
};

GetAgentResponse::GetAgentResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.GetAgentResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetAgentResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::GetAgentResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetAgentResponse::GetAgentResponse(
    ::google::protobuf::Arena* arena,
    const GetAgentResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetAgentResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.agent_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::Agent>(
                              arena, *from._impl_.agent_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.GetAgentResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetAgentResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetAgentResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.agent_ = {};
}
GetAgentResponse::~GetAgentResponse() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.GetAgentResponse)
  SharedDtor(*this);
}
inline void GetAgentResponse::SharedDtor(MessageLite& self) {
  GetAgentResponse& this_ = static_cast<GetAgentResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.agent_;
  this_._impl_.~Impl_();
}

inline void* GetAgentResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetAgentResponse(arena);
}
constexpr auto GetAgentResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetAgentResponse),
                                            alignof(GetAgentResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetAgentResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetAgentResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetAgentResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetAgentResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetAgentResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetAgentResponse>(), &GetAgentResponse::ByteSizeLong,
            &GetAgentResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetAgentResponse, _impl_._cached_size_),
        false,
    },
    &GetAgentResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetAgentResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetAgentResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetAgentResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::GetAgentResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.synthetics.v202202.Agent agent = 1 [json_name = "agent", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetAgentResponse, _impl_.agent_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.synthetics.v202202.Agent agent = 1 [json_name = "agent", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(GetAgentResponse, _impl_.agent_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::Agent>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetAgentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.GetAgentResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.agent_ != nullptr);
    _impl_.agent_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetAgentResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetAgentResponse& this_ = static_cast<const GetAgentResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetAgentResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetAgentResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.GetAgentResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.synthetics.v202202.Agent agent = 1 [json_name = "agent", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.agent_, this_._impl_.agent_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.GetAgentResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetAgentResponse::ByteSizeLong(const MessageLite& base) {
          const GetAgentResponse& this_ = static_cast<const GetAgentResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetAgentResponse::ByteSizeLong() const {
          const GetAgentResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.GetAgentResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.synthetics.v202202.Agent agent = 1 [json_name = "agent", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.agent_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetAgentResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetAgentResponse*>(&to_msg);
  auto& from = static_cast<const GetAgentResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.GetAgentResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.agent_ != nullptr);
    if (_this->_impl_.agent_ == nullptr) {
      _this->_impl_.agent_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::Agent>(arena, *from._impl_.agent_);
    } else {
      _this->_impl_.agent_->MergeFrom(*from._impl_.agent_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetAgentResponse::CopyFrom(const GetAgentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.GetAgentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetAgentResponse::InternalSwap(GetAgentResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.agent_, other->_impl_.agent_);
}

::google::protobuf::Metadata GetAgentResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateAgentRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateAgentRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateAgentRequest, _impl_._has_bits_);
};

UpdateAgentRequest::UpdateAgentRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.UpdateAgentRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateAgentRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::UpdateAgentRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateAgentRequest::UpdateAgentRequest(
    ::google::protobuf::Arena* arena,
    const UpdateAgentRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateAgentRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.agent_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::Agent>(
                              arena, *from._impl_.agent_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.UpdateAgentRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateAgentRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateAgentRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.agent_ = {};
}
UpdateAgentRequest::~UpdateAgentRequest() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.UpdateAgentRequest)
  SharedDtor(*this);
}
inline void UpdateAgentRequest::SharedDtor(MessageLite& self) {
  UpdateAgentRequest& this_ = static_cast<UpdateAgentRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.agent_;
  this_._impl_.~Impl_();
}

inline void* UpdateAgentRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateAgentRequest(arena);
}
constexpr auto UpdateAgentRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateAgentRequest),
                                            alignof(UpdateAgentRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateAgentRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateAgentRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateAgentRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateAgentRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateAgentRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateAgentRequest>(), &UpdateAgentRequest::ByteSizeLong,
            &UpdateAgentRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateAgentRequest, _impl_._cached_size_),
        false,
    },
    &UpdateAgentRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateAgentRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateAgentRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateAgentRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::UpdateAgentRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.synthetics.v202202.Agent agent = 1 [json_name = "agent", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateAgentRequest, _impl_.agent_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.synthetics.v202202.Agent agent = 1 [json_name = "agent", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(UpdateAgentRequest, _impl_.agent_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::Agent>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateAgentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.UpdateAgentRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.agent_ != nullptr);
    _impl_.agent_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateAgentRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateAgentRequest& this_ = static_cast<const UpdateAgentRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateAgentRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateAgentRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.UpdateAgentRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.synthetics.v202202.Agent agent = 1 [json_name = "agent", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.agent_, this_._impl_.agent_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.UpdateAgentRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateAgentRequest::ByteSizeLong(const MessageLite& base) {
          const UpdateAgentRequest& this_ = static_cast<const UpdateAgentRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateAgentRequest::ByteSizeLong() const {
          const UpdateAgentRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.UpdateAgentRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.synthetics.v202202.Agent agent = 1 [json_name = "agent", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.agent_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateAgentRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateAgentRequest*>(&to_msg);
  auto& from = static_cast<const UpdateAgentRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.UpdateAgentRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.agent_ != nullptr);
    if (_this->_impl_.agent_ == nullptr) {
      _this->_impl_.agent_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::Agent>(arena, *from._impl_.agent_);
    } else {
      _this->_impl_.agent_->MergeFrom(*from._impl_.agent_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateAgentRequest::CopyFrom(const UpdateAgentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.UpdateAgentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateAgentRequest::InternalSwap(UpdateAgentRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.agent_, other->_impl_.agent_);
}

::google::protobuf::Metadata UpdateAgentRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateAgentResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateAgentResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateAgentResponse, _impl_._has_bits_);
};

UpdateAgentResponse::UpdateAgentResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.UpdateAgentResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateAgentResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::UpdateAgentResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateAgentResponse::UpdateAgentResponse(
    ::google::protobuf::Arena* arena,
    const UpdateAgentResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateAgentResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.agent_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::Agent>(
                              arena, *from._impl_.agent_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.UpdateAgentResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateAgentResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateAgentResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.agent_ = {};
}
UpdateAgentResponse::~UpdateAgentResponse() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.UpdateAgentResponse)
  SharedDtor(*this);
}
inline void UpdateAgentResponse::SharedDtor(MessageLite& self) {
  UpdateAgentResponse& this_ = static_cast<UpdateAgentResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.agent_;
  this_._impl_.~Impl_();
}

inline void* UpdateAgentResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateAgentResponse(arena);
}
constexpr auto UpdateAgentResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateAgentResponse),
                                            alignof(UpdateAgentResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateAgentResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateAgentResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateAgentResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateAgentResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateAgentResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateAgentResponse>(), &UpdateAgentResponse::ByteSizeLong,
            &UpdateAgentResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateAgentResponse, _impl_._cached_size_),
        false,
    },
    &UpdateAgentResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateAgentResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateAgentResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateAgentResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::UpdateAgentResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.synthetics.v202202.Agent agent = 1 [json_name = "agent", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateAgentResponse, _impl_.agent_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.synthetics.v202202.Agent agent = 1 [json_name = "agent", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(UpdateAgentResponse, _impl_.agent_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::Agent>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateAgentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.UpdateAgentResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.agent_ != nullptr);
    _impl_.agent_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateAgentResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateAgentResponse& this_ = static_cast<const UpdateAgentResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateAgentResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateAgentResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.UpdateAgentResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.synthetics.v202202.Agent agent = 1 [json_name = "agent", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.agent_, this_._impl_.agent_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.UpdateAgentResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateAgentResponse::ByteSizeLong(const MessageLite& base) {
          const UpdateAgentResponse& this_ = static_cast<const UpdateAgentResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateAgentResponse::ByteSizeLong() const {
          const UpdateAgentResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.UpdateAgentResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.synthetics.v202202.Agent agent = 1 [json_name = "agent", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.agent_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateAgentResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateAgentResponse*>(&to_msg);
  auto& from = static_cast<const UpdateAgentResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.UpdateAgentResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.agent_ != nullptr);
    if (_this->_impl_.agent_ == nullptr) {
      _this->_impl_.agent_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::Agent>(arena, *from._impl_.agent_);
    } else {
      _this->_impl_.agent_->MergeFrom(*from._impl_.agent_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateAgentResponse::CopyFrom(const UpdateAgentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.UpdateAgentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateAgentResponse::InternalSwap(UpdateAgentResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.agent_, other->_impl_.agent_);
}

::google::protobuf::Metadata UpdateAgentResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteAgentRequest::_Internal {
 public:
};

DeleteAgentRequest::DeleteAgentRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.DeleteAgentRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteAgentRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::DeleteAgentRequest& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

DeleteAgentRequest::DeleteAgentRequest(
    ::google::protobuf::Arena* arena,
    const DeleteAgentRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteAgentRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.DeleteAgentRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteAgentRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void DeleteAgentRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeleteAgentRequest::~DeleteAgentRequest() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.DeleteAgentRequest)
  SharedDtor(*this);
}
inline void DeleteAgentRequest::SharedDtor(MessageLite& self) {
  DeleteAgentRequest& this_ = static_cast<DeleteAgentRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DeleteAgentRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeleteAgentRequest(arena);
}
constexpr auto DeleteAgentRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeleteAgentRequest),
                                            alignof(DeleteAgentRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeleteAgentRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeleteAgentRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeleteAgentRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeleteAgentRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeleteAgentRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeleteAgentRequest>(), &DeleteAgentRequest::ByteSizeLong,
            &DeleteAgentRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeleteAgentRequest, _impl_._cached_size_),
        false,
    },
    &DeleteAgentRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeleteAgentRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 55, 2> DeleteAgentRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::DeleteAgentRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteAgentRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeleteAgentRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\54\2\0\0\0\0\0\0"
    "kentik.synthetics.v202202.DeleteAgentRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void DeleteAgentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.DeleteAgentRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeleteAgentRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeleteAgentRequest& this_ = static_cast<const DeleteAgentRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeleteAgentRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeleteAgentRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.DeleteAgentRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.DeleteAgentRequest.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.DeleteAgentRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeleteAgentRequest::ByteSizeLong(const MessageLite& base) {
          const DeleteAgentRequest& this_ = static_cast<const DeleteAgentRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeleteAgentRequest::ByteSizeLong() const {
          const DeleteAgentRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.DeleteAgentRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeleteAgentRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteAgentRequest*>(&to_msg);
  auto& from = static_cast<const DeleteAgentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.DeleteAgentRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteAgentRequest::CopyFrom(const DeleteAgentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.DeleteAgentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeleteAgentRequest::InternalSwap(DeleteAgentRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata DeleteAgentRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteAgentResponse::_Internal {
 public:
};

DeleteAgentResponse::DeleteAgentResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.DeleteAgentResponse)
}
DeleteAgentResponse::DeleteAgentResponse(
    ::google::protobuf::Arena* arena,
    const DeleteAgentResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteAgentResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.DeleteAgentResponse)
}

inline void* DeleteAgentResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeleteAgentResponse(arena);
}
constexpr auto DeleteAgentResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DeleteAgentResponse),
                                            alignof(DeleteAgentResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeleteAgentResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeleteAgentResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeleteAgentResponse::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<DeleteAgentResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeleteAgentResponse::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<DeleteAgentResponse>(), &DeleteAgentResponse::ByteSizeLong,
            &DeleteAgentResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeleteAgentResponse, _impl_._cached_size_),
        false,
    },
    &DeleteAgentResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeleteAgentResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> DeleteAgentResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::DeleteAgentResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata DeleteAgentResponse::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListTestsRequest::_Internal {
 public:
};

ListTestsRequest::ListTestsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.ListTestsRequest)
}
ListTestsRequest::ListTestsRequest(
    ::google::protobuf::Arena* arena,
    const ListTestsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListTestsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.ListTestsRequest)
}

inline void* ListTestsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListTestsRequest(arena);
}
constexpr auto ListTestsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ListTestsRequest),
                                            alignof(ListTestsRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListTestsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListTestsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListTestsRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<ListTestsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListTestsRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<ListTestsRequest>(), &ListTestsRequest::ByteSizeLong,
            &ListTestsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListTestsRequest, _impl_._cached_size_),
        false,
    },
    &ListTestsRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListTestsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> ListTestsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::ListTestsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata ListTestsRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListTestsResponse::_Internal {
 public:
};

ListTestsResponse::ListTestsResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.ListTestsResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListTestsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::ListTestsResponse& from_msg)
      : tests_{visibility, arena, from.tests_},
        _cached_size_{0} {}

ListTestsResponse::ListTestsResponse(
    ::google::protobuf::Arena* arena,
    const ListTestsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListTestsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.invalid_count_ = from._impl_.invalid_count_;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.ListTestsResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListTestsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tests_{visibility, arena},
        _cached_size_{0} {}

inline void ListTestsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.invalid_count_ = {};
}
ListTestsResponse::~ListTestsResponse() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.ListTestsResponse)
  SharedDtor(*this);
}
inline void ListTestsResponse::SharedDtor(MessageLite& self) {
  ListTestsResponse& this_ = static_cast<ListTestsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ListTestsResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListTestsResponse(arena);
}
constexpr auto ListTestsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListTestsResponse, _impl_.tests_) +
          decltype(ListTestsResponse::_impl_.tests_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ListTestsResponse), alignof(ListTestsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListTestsResponse::PlacementNew_,
                                 sizeof(ListTestsResponse),
                                 alignof(ListTestsResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListTestsResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListTestsResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListTestsResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ListTestsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListTestsResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ListTestsResponse>(), &ListTestsResponse::ByteSizeLong,
            &ListTestsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListTestsResponse, _impl_._cached_size_),
        false,
    },
    &ListTestsResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListTestsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ListTestsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::ListTestsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListTestsResponse, _impl_.invalid_count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ListTestsResponse, _impl_.invalid_count_)}},
    // repeated .kentik.synthetics.v202202.Test tests = 1 [json_name = "tests", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListTestsResponse, _impl_.tests_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .kentik.synthetics.v202202.Test tests = 1 [json_name = "tests", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(ListTestsResponse, _impl_.tests_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(ListTestsResponse, _impl_.invalid_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::Test>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ListTestsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.ListTestsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tests_.Clear();
  _impl_.invalid_count_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ListTestsResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ListTestsResponse& this_ = static_cast<const ListTestsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ListTestsResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ListTestsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.ListTestsResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .kentik.synthetics.v202202.Test tests = 1 [json_name = "tests", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_tests_size());
               i < n; i++) {
            const auto& repfield = this_._internal_tests().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_invalid_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_invalid_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.ListTestsResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ListTestsResponse::ByteSizeLong(const MessageLite& base) {
          const ListTestsResponse& this_ = static_cast<const ListTestsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ListTestsResponse::ByteSizeLong() const {
          const ListTestsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.ListTestsResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.synthetics.v202202.Test tests = 1 [json_name = "tests", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_tests_size();
              for (const auto& msg : this_._internal_tests()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_invalid_count() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_invalid_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ListTestsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListTestsResponse*>(&to_msg);
  auto& from = static_cast<const ListTestsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.ListTestsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tests()->MergeFrom(
      from._internal_tests());
  if (from._internal_invalid_count() != 0) {
    _this->_impl_.invalid_count_ = from._impl_.invalid_count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListTestsResponse::CopyFrom(const ListTestsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.ListTestsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListTestsResponse::InternalSwap(ListTestsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tests_.InternalSwap(&other->_impl_.tests_);
        swap(_impl_.invalid_count_, other->_impl_.invalid_count_);
}

::google::protobuf::Metadata ListTestsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateTestRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateTestRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateTestRequest, _impl_._has_bits_);
};

CreateTestRequest::CreateTestRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.CreateTestRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateTestRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::CreateTestRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateTestRequest::CreateTestRequest(
    ::google::protobuf::Arena* arena,
    const CreateTestRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateTestRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.test_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::Test>(
                              arena, *from._impl_.test_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.CreateTestRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateTestRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateTestRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.test_ = {};
}
CreateTestRequest::~CreateTestRequest() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.CreateTestRequest)
  SharedDtor(*this);
}
inline void CreateTestRequest::SharedDtor(MessageLite& self) {
  CreateTestRequest& this_ = static_cast<CreateTestRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.test_;
  this_._impl_.~Impl_();
}

inline void* CreateTestRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateTestRequest(arena);
}
constexpr auto CreateTestRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreateTestRequest),
                                            alignof(CreateTestRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateTestRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateTestRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateTestRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateTestRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateTestRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateTestRequest>(), &CreateTestRequest::ByteSizeLong,
            &CreateTestRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateTestRequest, _impl_._cached_size_),
        false,
    },
    &CreateTestRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateTestRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateTestRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateTestRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::CreateTestRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.synthetics.v202202.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateTestRequest, _impl_.test_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.synthetics.v202202.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(CreateTestRequest, _impl_.test_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::Test>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CreateTestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.CreateTestRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.test_ != nullptr);
    _impl_.test_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateTestRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateTestRequest& this_ = static_cast<const CreateTestRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateTestRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateTestRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.CreateTestRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.synthetics.v202202.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.test_, this_._impl_.test_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.CreateTestRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateTestRequest::ByteSizeLong(const MessageLite& base) {
          const CreateTestRequest& this_ = static_cast<const CreateTestRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateTestRequest::ByteSizeLong() const {
          const CreateTestRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.CreateTestRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.synthetics.v202202.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.test_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateTestRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateTestRequest*>(&to_msg);
  auto& from = static_cast<const CreateTestRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.CreateTestRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.test_ != nullptr);
    if (_this->_impl_.test_ == nullptr) {
      _this->_impl_.test_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::Test>(arena, *from._impl_.test_);
    } else {
      _this->_impl_.test_->MergeFrom(*from._impl_.test_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateTestRequest::CopyFrom(const CreateTestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.CreateTestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateTestRequest::InternalSwap(CreateTestRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.test_, other->_impl_.test_);
}

::google::protobuf::Metadata CreateTestRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateTestResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateTestResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateTestResponse, _impl_._has_bits_);
};

CreateTestResponse::CreateTestResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.CreateTestResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateTestResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::CreateTestResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateTestResponse::CreateTestResponse(
    ::google::protobuf::Arena* arena,
    const CreateTestResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateTestResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.test_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::Test>(
                              arena, *from._impl_.test_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.CreateTestResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateTestResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateTestResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.test_ = {};
}
CreateTestResponse::~CreateTestResponse() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.CreateTestResponse)
  SharedDtor(*this);
}
inline void CreateTestResponse::SharedDtor(MessageLite& self) {
  CreateTestResponse& this_ = static_cast<CreateTestResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.test_;
  this_._impl_.~Impl_();
}

inline void* CreateTestResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateTestResponse(arena);
}
constexpr auto CreateTestResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreateTestResponse),
                                            alignof(CreateTestResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateTestResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateTestResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateTestResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateTestResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateTestResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateTestResponse>(), &CreateTestResponse::ByteSizeLong,
            &CreateTestResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateTestResponse, _impl_._cached_size_),
        false,
    },
    &CreateTestResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateTestResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateTestResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateTestResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::CreateTestResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.synthetics.v202202.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateTestResponse, _impl_.test_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.synthetics.v202202.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(CreateTestResponse, _impl_.test_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::Test>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CreateTestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.CreateTestResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.test_ != nullptr);
    _impl_.test_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateTestResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateTestResponse& this_ = static_cast<const CreateTestResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateTestResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateTestResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.CreateTestResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.synthetics.v202202.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.test_, this_._impl_.test_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.CreateTestResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateTestResponse::ByteSizeLong(const MessageLite& base) {
          const CreateTestResponse& this_ = static_cast<const CreateTestResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateTestResponse::ByteSizeLong() const {
          const CreateTestResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.CreateTestResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.synthetics.v202202.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.test_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateTestResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateTestResponse*>(&to_msg);
  auto& from = static_cast<const CreateTestResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.CreateTestResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.test_ != nullptr);
    if (_this->_impl_.test_ == nullptr) {
      _this->_impl_.test_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::Test>(arena, *from._impl_.test_);
    } else {
      _this->_impl_.test_->MergeFrom(*from._impl_.test_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateTestResponse::CopyFrom(const CreateTestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.CreateTestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateTestResponse::InternalSwap(CreateTestResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.test_, other->_impl_.test_);
}

::google::protobuf::Metadata CreateTestResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTestRequest::_Internal {
 public:
};

GetTestRequest::GetTestRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.GetTestRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetTestRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::GetTestRequest& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

GetTestRequest::GetTestRequest(
    ::google::protobuf::Arena* arena,
    const GetTestRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTestRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.GetTestRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetTestRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void GetTestRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetTestRequest::~GetTestRequest() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.GetTestRequest)
  SharedDtor(*this);
}
inline void GetTestRequest::SharedDtor(MessageLite& self) {
  GetTestRequest& this_ = static_cast<GetTestRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetTestRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetTestRequest(arena);
}
constexpr auto GetTestRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetTestRequest),
                                            alignof(GetTestRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetTestRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetTestRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetTestRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetTestRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetTestRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetTestRequest>(), &GetTestRequest::ByteSizeLong,
            &GetTestRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetTestRequest, _impl_._cached_size_),
        false,
    },
    &GetTestRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetTestRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 51, 2> GetTestRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::GetTestRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetTestRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(GetTestRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\2\0\0\0\0\0\0"
    "kentik.synthetics.v202202.GetTestRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void GetTestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.GetTestRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetTestRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetTestRequest& this_ = static_cast<const GetTestRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetTestRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetTestRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.GetTestRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.GetTestRequest.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.GetTestRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetTestRequest::ByteSizeLong(const MessageLite& base) {
          const GetTestRequest& this_ = static_cast<const GetTestRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetTestRequest::ByteSizeLong() const {
          const GetTestRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.GetTestRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetTestRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTestRequest*>(&to_msg);
  auto& from = static_cast<const GetTestRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.GetTestRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTestRequest::CopyFrom(const GetTestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.GetTestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTestRequest::InternalSwap(GetTestRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata GetTestRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTestResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetTestResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetTestResponse, _impl_._has_bits_);
};

GetTestResponse::GetTestResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.GetTestResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetTestResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::GetTestResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetTestResponse::GetTestResponse(
    ::google::protobuf::Arena* arena,
    const GetTestResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTestResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.test_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::Test>(
                              arena, *from._impl_.test_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.GetTestResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetTestResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetTestResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.test_ = {};
}
GetTestResponse::~GetTestResponse() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.GetTestResponse)
  SharedDtor(*this);
}
inline void GetTestResponse::SharedDtor(MessageLite& self) {
  GetTestResponse& this_ = static_cast<GetTestResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.test_;
  this_._impl_.~Impl_();
}

inline void* GetTestResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetTestResponse(arena);
}
constexpr auto GetTestResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetTestResponse),
                                            alignof(GetTestResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetTestResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetTestResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetTestResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetTestResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetTestResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetTestResponse>(), &GetTestResponse::ByteSizeLong,
            &GetTestResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetTestResponse, _impl_._cached_size_),
        false,
    },
    &GetTestResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetTestResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetTestResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetTestResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::GetTestResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.synthetics.v202202.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetTestResponse, _impl_.test_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.synthetics.v202202.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(GetTestResponse, _impl_.test_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::Test>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetTestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.GetTestResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.test_ != nullptr);
    _impl_.test_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetTestResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetTestResponse& this_ = static_cast<const GetTestResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetTestResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetTestResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.GetTestResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.synthetics.v202202.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.test_, this_._impl_.test_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.GetTestResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetTestResponse::ByteSizeLong(const MessageLite& base) {
          const GetTestResponse& this_ = static_cast<const GetTestResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetTestResponse::ByteSizeLong() const {
          const GetTestResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.GetTestResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.synthetics.v202202.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.test_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetTestResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTestResponse*>(&to_msg);
  auto& from = static_cast<const GetTestResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.GetTestResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.test_ != nullptr);
    if (_this->_impl_.test_ == nullptr) {
      _this->_impl_.test_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::Test>(arena, *from._impl_.test_);
    } else {
      _this->_impl_.test_->MergeFrom(*from._impl_.test_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTestResponse::CopyFrom(const GetTestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.GetTestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTestResponse::InternalSwap(GetTestResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.test_, other->_impl_.test_);
}

::google::protobuf::Metadata GetTestResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateTestRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateTestRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateTestRequest, _impl_._has_bits_);
};

UpdateTestRequest::UpdateTestRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.UpdateTestRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateTestRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::UpdateTestRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateTestRequest::UpdateTestRequest(
    ::google::protobuf::Arena* arena,
    const UpdateTestRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateTestRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.test_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::Test>(
                              arena, *from._impl_.test_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.UpdateTestRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateTestRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateTestRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.test_ = {};
}
UpdateTestRequest::~UpdateTestRequest() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.UpdateTestRequest)
  SharedDtor(*this);
}
inline void UpdateTestRequest::SharedDtor(MessageLite& self) {
  UpdateTestRequest& this_ = static_cast<UpdateTestRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.test_;
  this_._impl_.~Impl_();
}

inline void* UpdateTestRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateTestRequest(arena);
}
constexpr auto UpdateTestRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateTestRequest),
                                            alignof(UpdateTestRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateTestRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateTestRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateTestRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateTestRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateTestRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateTestRequest>(), &UpdateTestRequest::ByteSizeLong,
            &UpdateTestRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateTestRequest, _impl_._cached_size_),
        false,
    },
    &UpdateTestRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateTestRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateTestRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateTestRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::UpdateTestRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.synthetics.v202202.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateTestRequest, _impl_.test_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.synthetics.v202202.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(UpdateTestRequest, _impl_.test_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::Test>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateTestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.UpdateTestRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.test_ != nullptr);
    _impl_.test_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateTestRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateTestRequest& this_ = static_cast<const UpdateTestRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateTestRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateTestRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.UpdateTestRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.synthetics.v202202.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.test_, this_._impl_.test_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.UpdateTestRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateTestRequest::ByteSizeLong(const MessageLite& base) {
          const UpdateTestRequest& this_ = static_cast<const UpdateTestRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateTestRequest::ByteSizeLong() const {
          const UpdateTestRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.UpdateTestRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.synthetics.v202202.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.test_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateTestRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateTestRequest*>(&to_msg);
  auto& from = static_cast<const UpdateTestRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.UpdateTestRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.test_ != nullptr);
    if (_this->_impl_.test_ == nullptr) {
      _this->_impl_.test_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::Test>(arena, *from._impl_.test_);
    } else {
      _this->_impl_.test_->MergeFrom(*from._impl_.test_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateTestRequest::CopyFrom(const UpdateTestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.UpdateTestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateTestRequest::InternalSwap(UpdateTestRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.test_, other->_impl_.test_);
}

::google::protobuf::Metadata UpdateTestRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateTestResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateTestResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateTestResponse, _impl_._has_bits_);
};

UpdateTestResponse::UpdateTestResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.UpdateTestResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateTestResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::UpdateTestResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateTestResponse::UpdateTestResponse(
    ::google::protobuf::Arena* arena,
    const UpdateTestResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateTestResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.test_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::Test>(
                              arena, *from._impl_.test_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.UpdateTestResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateTestResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateTestResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.test_ = {};
}
UpdateTestResponse::~UpdateTestResponse() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.UpdateTestResponse)
  SharedDtor(*this);
}
inline void UpdateTestResponse::SharedDtor(MessageLite& self) {
  UpdateTestResponse& this_ = static_cast<UpdateTestResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.test_;
  this_._impl_.~Impl_();
}

inline void* UpdateTestResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateTestResponse(arena);
}
constexpr auto UpdateTestResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateTestResponse),
                                            alignof(UpdateTestResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateTestResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateTestResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateTestResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateTestResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateTestResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateTestResponse>(), &UpdateTestResponse::ByteSizeLong,
            &UpdateTestResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateTestResponse, _impl_._cached_size_),
        false,
    },
    &UpdateTestResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateTestResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateTestResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateTestResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::UpdateTestResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.synthetics.v202202.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateTestResponse, _impl_.test_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.synthetics.v202202.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(UpdateTestResponse, _impl_.test_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::Test>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateTestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.UpdateTestResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.test_ != nullptr);
    _impl_.test_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateTestResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateTestResponse& this_ = static_cast<const UpdateTestResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateTestResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateTestResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.UpdateTestResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.synthetics.v202202.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.test_, this_._impl_.test_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.UpdateTestResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateTestResponse::ByteSizeLong(const MessageLite& base) {
          const UpdateTestResponse& this_ = static_cast<const UpdateTestResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateTestResponse::ByteSizeLong() const {
          const UpdateTestResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.UpdateTestResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.synthetics.v202202.Test test = 1 [json_name = "test", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.test_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateTestResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateTestResponse*>(&to_msg);
  auto& from = static_cast<const UpdateTestResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.UpdateTestResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.test_ != nullptr);
    if (_this->_impl_.test_ == nullptr) {
      _this->_impl_.test_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::synthetics::v202202::Test>(arena, *from._impl_.test_);
    } else {
      _this->_impl_.test_->MergeFrom(*from._impl_.test_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateTestResponse::CopyFrom(const UpdateTestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.UpdateTestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateTestResponse::InternalSwap(UpdateTestResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.test_, other->_impl_.test_);
}

::google::protobuf::Metadata UpdateTestResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteTestRequest::_Internal {
 public:
};

DeleteTestRequest::DeleteTestRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.DeleteTestRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteTestRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::DeleteTestRequest& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

DeleteTestRequest::DeleteTestRequest(
    ::google::protobuf::Arena* arena,
    const DeleteTestRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteTestRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.DeleteTestRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteTestRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void DeleteTestRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeleteTestRequest::~DeleteTestRequest() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.DeleteTestRequest)
  SharedDtor(*this);
}
inline void DeleteTestRequest::SharedDtor(MessageLite& self) {
  DeleteTestRequest& this_ = static_cast<DeleteTestRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DeleteTestRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeleteTestRequest(arena);
}
constexpr auto DeleteTestRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeleteTestRequest),
                                            alignof(DeleteTestRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeleteTestRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeleteTestRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeleteTestRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeleteTestRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeleteTestRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeleteTestRequest>(), &DeleteTestRequest::ByteSizeLong,
            &DeleteTestRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeleteTestRequest, _impl_._cached_size_),
        false,
    },
    &DeleteTestRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeleteTestRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 54, 2> DeleteTestRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::DeleteTestRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteTestRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeleteTestRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\2\0\0\0\0\0\0"
    "kentik.synthetics.v202202.DeleteTestRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void DeleteTestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.DeleteTestRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeleteTestRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeleteTestRequest& this_ = static_cast<const DeleteTestRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeleteTestRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeleteTestRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.DeleteTestRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.DeleteTestRequest.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.DeleteTestRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeleteTestRequest::ByteSizeLong(const MessageLite& base) {
          const DeleteTestRequest& this_ = static_cast<const DeleteTestRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeleteTestRequest::ByteSizeLong() const {
          const DeleteTestRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.DeleteTestRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeleteTestRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteTestRequest*>(&to_msg);
  auto& from = static_cast<const DeleteTestRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.DeleteTestRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteTestRequest::CopyFrom(const DeleteTestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.DeleteTestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeleteTestRequest::InternalSwap(DeleteTestRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata DeleteTestRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteTestResponse::_Internal {
 public:
};

DeleteTestResponse::DeleteTestResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.DeleteTestResponse)
}
DeleteTestResponse::DeleteTestResponse(
    ::google::protobuf::Arena* arena,
    const DeleteTestResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteTestResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.DeleteTestResponse)
}

inline void* DeleteTestResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeleteTestResponse(arena);
}
constexpr auto DeleteTestResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DeleteTestResponse),
                                            alignof(DeleteTestResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeleteTestResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeleteTestResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeleteTestResponse::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<DeleteTestResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeleteTestResponse::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<DeleteTestResponse>(), &DeleteTestResponse::ByteSizeLong,
            &DeleteTestResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeleteTestResponse, _impl_._cached_size_),
        false,
    },
    &DeleteTestResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeleteTestResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> DeleteTestResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::DeleteTestResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata DeleteTestResponse::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetTestStatusRequest::_Internal {
 public:
};

SetTestStatusRequest::SetTestStatusRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.SetTestStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetTestStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::synthetics::v202202::SetTestStatusRequest& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

SetTestStatusRequest::SetTestStatusRequest(
    ::google::protobuf::Arena* arena,
    const SetTestStatusRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetTestStatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.status_ = from._impl_.status_;

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.SetTestStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE SetTestStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void SetTestStatusRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
SetTestStatusRequest::~SetTestStatusRequest() {
  // @@protoc_insertion_point(destructor:kentik.synthetics.v202202.SetTestStatusRequest)
  SharedDtor(*this);
}
inline void SetTestStatusRequest::SharedDtor(MessageLite& self) {
  SetTestStatusRequest& this_ = static_cast<SetTestStatusRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SetTestStatusRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetTestStatusRequest(arena);
}
constexpr auto SetTestStatusRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SetTestStatusRequest),
                                            alignof(SetTestStatusRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetTestStatusRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetTestStatusRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetTestStatusRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SetTestStatusRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetTestStatusRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SetTestStatusRequest>(), &SetTestStatusRequest::ByteSizeLong,
            &SetTestStatusRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetTestStatusRequest, _impl_._cached_size_),
        false,
    },
    &SetTestStatusRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetTestStatusRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 57, 2> SetTestStatusRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::SetTestStatusRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.synthetics.v202202.TestStatus status = 2 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetTestStatusRequest, _impl_.status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SetTestStatusRequest, _impl_.status_)}},
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SetTestStatusRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(SetTestStatusRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .kentik.synthetics.v202202.TestStatus status = 2 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(SetTestStatusRequest, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\56\2\0\0\0\0\0\0"
    "kentik.synthetics.v202202.SetTestStatusRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void SetTestStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.synthetics.v202202.SetTestStatusRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.status_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SetTestStatusRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SetTestStatusRequest& this_ = static_cast<const SetTestStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SetTestStatusRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SetTestStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.synthetics.v202202.SetTestStatusRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.synthetics.v202202.SetTestStatusRequest.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .kentik.synthetics.v202202.TestStatus status = 2 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_status(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.synthetics.v202202.SetTestStatusRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SetTestStatusRequest::ByteSizeLong(const MessageLite& base) {
          const SetTestStatusRequest& this_ = static_cast<const SetTestStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SetTestStatusRequest::ByteSizeLong() const {
          const SetTestStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.synthetics.v202202.SetTestStatusRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // .kentik.synthetics.v202202.TestStatus status = 2 [json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SetTestStatusRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SetTestStatusRequest*>(&to_msg);
  auto& from = static_cast<const SetTestStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.synthetics.v202202.SetTestStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetTestStatusRequest::CopyFrom(const SetTestStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.synthetics.v202202.SetTestStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SetTestStatusRequest::InternalSwap(SetTestStatusRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata SetTestStatusRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetTestStatusResponse::_Internal {
 public:
};

SetTestStatusResponse::SetTestStatusResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:kentik.synthetics.v202202.SetTestStatusResponse)
}
SetTestStatusResponse::SetTestStatusResponse(
    ::google::protobuf::Arena* arena,
    const SetTestStatusResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SetTestStatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:kentik.synthetics.v202202.SetTestStatusResponse)
}

inline void* SetTestStatusResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SetTestStatusResponse(arena);
}
constexpr auto SetTestStatusResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SetTestStatusResponse),
                                            alignof(SetTestStatusResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SetTestStatusResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SetTestStatusResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SetTestStatusResponse::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<SetTestStatusResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SetTestStatusResponse::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<SetTestStatusResponse>(), &SetTestStatusResponse::ByteSizeLong,
            &SetTestStatusResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SetTestStatusResponse, _impl_._cached_size_),
        false,
    },
    &SetTestStatusResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SetTestStatusResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SetTestStatusResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::synthetics::v202202::SetTestStatusResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata SetTestStatusResponse::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v202202
}  // namespace synthetics
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_kentik_2fsynthetics_2fv202202_2fsynthetics_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
