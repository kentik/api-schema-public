// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/network_class/v202109alpha1/network_class.proto
// Protobuf C++ Version: 5.29.3

#ifndef kentik_2fnetwork_5fclass_2fv202109alpha1_2fnetwork_5fclass_2eproto_2epb_2eh
#define kentik_2fnetwork_5fclass_2fv202109alpha1_2fnetwork_5fclass_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "kentik/core/v202303/annotations.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kentik_2fnetwork_5fclass_2fv202109alpha1_2fnetwork_5fclass_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2fnetwork_5fclass_2fv202109alpha1_2fnetwork_5fclass_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kentik_2fnetwork_5fclass_2fv202109alpha1_2fnetwork_5fclass_2eproto;
namespace kentik {
namespace network_class {
namespace v202109alpha1 {
class CloudSubnet;
struct CloudSubnetDefaultTypeInternal;
extern CloudSubnetDefaultTypeInternal _CloudSubnet_default_instance_;
class GetNetworkClassRequest;
struct GetNetworkClassRequestDefaultTypeInternal;
extern GetNetworkClassRequestDefaultTypeInternal _GetNetworkClassRequest_default_instance_;
class GetNetworkClassResponse;
struct GetNetworkClassResponseDefaultTypeInternal;
extern GetNetworkClassResponseDefaultTypeInternal _GetNetworkClassResponse_default_instance_;
class NetworkClass;
struct NetworkClassDefaultTypeInternal;
extern NetworkClassDefaultTypeInternal _NetworkClass_default_instance_;
class UpdateNetworkClassRequest;
struct UpdateNetworkClassRequestDefaultTypeInternal;
extern UpdateNetworkClassRequestDefaultTypeInternal _UpdateNetworkClassRequest_default_instance_;
class UpdateNetworkClassResponse;
struct UpdateNetworkClassResponseDefaultTypeInternal;
extern UpdateNetworkClassResponseDefaultTypeInternal _UpdateNetworkClassResponse_default_instance_;
}  // namespace v202109alpha1
}  // namespace network_class
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kentik {
namespace network_class {
namespace v202109alpha1 {
enum CloudType : int {
  CLOUD_TYPE_UNSPECIFIED = 0,
  CLOUD_TYPE_AWS = 1,
  CLOUD_TYPE_AZURE = 2,
  CLOUD_TYPE_GCE = 3,
  CLOUD_TYPE_IBM = 4,
  CloudType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CloudType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool CloudType_IsValid(int value);
extern const uint32_t CloudType_internal_data_[];
constexpr CloudType CloudType_MIN = static_cast<CloudType>(0);
constexpr CloudType CloudType_MAX = static_cast<CloudType>(4);
constexpr int CloudType_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
CloudType_descriptor();
template <typename T>
const std::string& CloudType_Name(T value) {
  static_assert(std::is_same<T, CloudType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to CloudType_Name().");
  return CloudType_Name(static_cast<CloudType>(value));
}
template <>
inline const std::string& CloudType_Name(CloudType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CloudType_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool CloudType_Parse(absl::string_view name, CloudType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CloudType>(
      CloudType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class GetNetworkClassRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.network_class.v202109alpha1.GetNetworkClassRequest) */ {
 public:
  inline GetNetworkClassRequest() : GetNetworkClassRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetNetworkClassRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetNetworkClassRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetNetworkClassRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetNetworkClassRequest(const GetNetworkClassRequest& from) : GetNetworkClassRequest(nullptr, from) {}
  inline GetNetworkClassRequest(GetNetworkClassRequest&& from) noexcept
      : GetNetworkClassRequest(nullptr, std::move(from)) {}
  inline GetNetworkClassRequest& operator=(const GetNetworkClassRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetNetworkClassRequest& operator=(GetNetworkClassRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetNetworkClassRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetNetworkClassRequest* internal_default_instance() {
    return reinterpret_cast<const GetNetworkClassRequest*>(
        &_GetNetworkClassRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetNetworkClassRequest& a, GetNetworkClassRequest& b) { a.Swap(&b); }
  inline void Swap(GetNetworkClassRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetNetworkClassRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetNetworkClassRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetNetworkClassRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetNetworkClassRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetNetworkClassRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.network_class.v202109alpha1.GetNetworkClassRequest"; }

 protected:
  explicit GetNetworkClassRequest(::google::protobuf::Arena* arena);
  GetNetworkClassRequest(::google::protobuf::Arena* arena, const GetNetworkClassRequest& from);
  GetNetworkClassRequest(::google::protobuf::Arena* arena, GetNetworkClassRequest&& from) noexcept
      : GetNetworkClassRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.network_class.v202109alpha1.GetNetworkClassRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetNetworkClassRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fnetwork_5fclass_2fv202109alpha1_2fnetwork_5fclass_2eproto;
};
// -------------------------------------------------------------------

class CloudSubnet final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.network_class.v202109alpha1.CloudSubnet) */ {
 public:
  inline CloudSubnet() : CloudSubnet(nullptr) {}
  ~CloudSubnet() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CloudSubnet* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CloudSubnet));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CloudSubnet(
      ::google::protobuf::internal::ConstantInitialized);

  inline CloudSubnet(const CloudSubnet& from) : CloudSubnet(nullptr, from) {}
  inline CloudSubnet(CloudSubnet&& from) noexcept
      : CloudSubnet(nullptr, std::move(from)) {}
  inline CloudSubnet& operator=(const CloudSubnet& from) {
    CopyFrom(from);
    return *this;
  }
  inline CloudSubnet& operator=(CloudSubnet&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CloudSubnet& default_instance() {
    return *internal_default_instance();
  }
  static inline const CloudSubnet* internal_default_instance() {
    return reinterpret_cast<const CloudSubnet*>(
        &_CloudSubnet_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CloudSubnet& a, CloudSubnet& b) { a.Swap(&b); }
  inline void Swap(CloudSubnet* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CloudSubnet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CloudSubnet* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CloudSubnet>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CloudSubnet& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CloudSubnet& from) { CloudSubnet::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CloudSubnet* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.network_class.v202109alpha1.CloudSubnet"; }

 protected:
  explicit CloudSubnet(::google::protobuf::Arena* arena);
  CloudSubnet(::google::protobuf::Arena* arena, const CloudSubnet& from);
  CloudSubnet(::google::protobuf::Arena* arena, CloudSubnet&& from) noexcept
      : CloudSubnet(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubnetsFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // repeated string subnets = 2 [json_name = "subnets"];
  int subnets_size() const;
  private:
  int _internal_subnets_size() const;

  public:
  void clear_subnets() ;
  const std::string& subnets(int index) const;
  std::string* mutable_subnets(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subnets(int index, Arg_&& value, Args_... args);
  std::string* add_subnets();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_subnets(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& subnets() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_subnets();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_subnets() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_subnets();

  public:
  // .kentik.network_class.v202109alpha1.CloudType type = 1 [json_name = "type"];
  void clear_type() ;
  ::kentik::network_class::v202109alpha1::CloudType type() const;
  void set_type(::kentik::network_class::v202109alpha1::CloudType value);

  private:
  ::kentik::network_class::v202109alpha1::CloudType _internal_type() const;
  void _internal_set_type(::kentik::network_class::v202109alpha1::CloudType value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.network_class.v202109alpha1.CloudSubnet)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      62, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CloudSubnet& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> subnets_;
    int type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fnetwork_5fclass_2fv202109alpha1_2fnetwork_5fclass_2eproto;
};
// -------------------------------------------------------------------

class NetworkClass final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.network_class.v202109alpha1.NetworkClass) */ {
 public:
  inline NetworkClass() : NetworkClass(nullptr) {}
  ~NetworkClass() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NetworkClass* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NetworkClass));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetworkClass(
      ::google::protobuf::internal::ConstantInitialized);

  inline NetworkClass(const NetworkClass& from) : NetworkClass(nullptr, from) {}
  inline NetworkClass(NetworkClass&& from) noexcept
      : NetworkClass(nullptr, std::move(from)) {}
  inline NetworkClass& operator=(const NetworkClass& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkClass& operator=(NetworkClass&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NetworkClass& default_instance() {
    return *internal_default_instance();
  }
  static inline const NetworkClass* internal_default_instance() {
    return reinterpret_cast<const NetworkClass*>(
        &_NetworkClass_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(NetworkClass& a, NetworkClass& b) { a.Swap(&b); }
  inline void Swap(NetworkClass* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetworkClass* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetworkClass* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NetworkClass>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NetworkClass& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NetworkClass& from) { NetworkClass::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NetworkClass* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.network_class.v202109alpha1.NetworkClass"; }

 protected:
  explicit NetworkClass(::google::protobuf::Arena* arena);
  NetworkClass(::google::protobuf::Arena* arena, const NetworkClass& from);
  NetworkClass(::google::protobuf::Arena* arena, NetworkClass&& from) noexcept
      : NetworkClass(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInternalAsnsFieldNumber = 1,
    kInternalIpsFieldNumber = 2,
    kCloudSubnetsFieldNumber = 5,
    kUsePrivateAsnsFieldNumber = 3,
    kUsePrivateSubnetsFieldNumber = 4,
  };
  // repeated string internal_asns = 1 [json_name = "internalAsns"];
  int internal_asns_size() const;
  private:
  int _internal_internal_asns_size() const;

  public:
  void clear_internal_asns() ;
  const std::string& internal_asns(int index) const;
  std::string* mutable_internal_asns(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_internal_asns(int index, Arg_&& value, Args_... args);
  std::string* add_internal_asns();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_internal_asns(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& internal_asns() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_internal_asns();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_internal_asns() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_internal_asns();

  public:
  // repeated string internal_ips = 2 [json_name = "internalIps"];
  int internal_ips_size() const;
  private:
  int _internal_internal_ips_size() const;

  public:
  void clear_internal_ips() ;
  const std::string& internal_ips(int index) const;
  std::string* mutable_internal_ips(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_internal_ips(int index, Arg_&& value, Args_... args);
  std::string* add_internal_ips();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_internal_ips(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& internal_ips() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_internal_ips();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_internal_ips() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_internal_ips();

  public:
  // repeated .kentik.network_class.v202109alpha1.CloudSubnet cloud_subnets = 5 [json_name = "cloudSubnets"];
  int cloud_subnets_size() const;
  private:
  int _internal_cloud_subnets_size() const;

  public:
  void clear_cloud_subnets() ;
  ::kentik::network_class::v202109alpha1::CloudSubnet* mutable_cloud_subnets(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::network_class::v202109alpha1::CloudSubnet>* mutable_cloud_subnets();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::network_class::v202109alpha1::CloudSubnet>& _internal_cloud_subnets() const;
  ::google::protobuf::RepeatedPtrField<::kentik::network_class::v202109alpha1::CloudSubnet>* _internal_mutable_cloud_subnets();
  public:
  const ::kentik::network_class::v202109alpha1::CloudSubnet& cloud_subnets(int index) const;
  ::kentik::network_class::v202109alpha1::CloudSubnet* add_cloud_subnets();
  const ::google::protobuf::RepeatedPtrField<::kentik::network_class::v202109alpha1::CloudSubnet>& cloud_subnets() const;
  // bool use_private_asns = 3 [json_name = "usePrivateAsns"];
  void clear_use_private_asns() ;
  bool use_private_asns() const;
  void set_use_private_asns(bool value);

  private:
  bool _internal_use_private_asns() const;
  void _internal_set_use_private_asns(bool value);

  public:
  // bool use_private_subnets = 4 [json_name = "usePrivateSubnets"];
  void clear_use_private_subnets() ;
  bool use_private_subnets() const;
  void set_use_private_subnets(bool value);

  private:
  bool _internal_use_private_subnets() const;
  void _internal_set_use_private_subnets(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.network_class.v202109alpha1.NetworkClass)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      81, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NetworkClass& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> internal_asns_;
    ::google::protobuf::RepeatedPtrField<std::string> internal_ips_;
    ::google::protobuf::RepeatedPtrField< ::kentik::network_class::v202109alpha1::CloudSubnet > cloud_subnets_;
    bool use_private_asns_;
    bool use_private_subnets_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fnetwork_5fclass_2fv202109alpha1_2fnetwork_5fclass_2eproto;
};
// -------------------------------------------------------------------

class UpdateNetworkClassResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.network_class.v202109alpha1.UpdateNetworkClassResponse) */ {
 public:
  inline UpdateNetworkClassResponse() : UpdateNetworkClassResponse(nullptr) {}
  ~UpdateNetworkClassResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateNetworkClassResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateNetworkClassResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateNetworkClassResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateNetworkClassResponse(const UpdateNetworkClassResponse& from) : UpdateNetworkClassResponse(nullptr, from) {}
  inline UpdateNetworkClassResponse(UpdateNetworkClassResponse&& from) noexcept
      : UpdateNetworkClassResponse(nullptr, std::move(from)) {}
  inline UpdateNetworkClassResponse& operator=(const UpdateNetworkClassResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateNetworkClassResponse& operator=(UpdateNetworkClassResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateNetworkClassResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateNetworkClassResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateNetworkClassResponse*>(
        &_UpdateNetworkClassResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(UpdateNetworkClassResponse& a, UpdateNetworkClassResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateNetworkClassResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateNetworkClassResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateNetworkClassResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateNetworkClassResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateNetworkClassResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateNetworkClassResponse& from) { UpdateNetworkClassResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateNetworkClassResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.network_class.v202109alpha1.UpdateNetworkClassResponse"; }

 protected:
  explicit UpdateNetworkClassResponse(::google::protobuf::Arena* arena);
  UpdateNetworkClassResponse(::google::protobuf::Arena* arena, const UpdateNetworkClassResponse& from);
  UpdateNetworkClassResponse(::google::protobuf::Arena* arena, UpdateNetworkClassResponse&& from) noexcept
      : UpdateNetworkClassResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNetworkClassFieldNumber = 1,
  };
  // .kentik.network_class.v202109alpha1.NetworkClass network_class = 1 [json_name = "networkClass"];
  bool has_network_class() const;
  void clear_network_class() ;
  const ::kentik::network_class::v202109alpha1::NetworkClass& network_class() const;
  PROTOBUF_NODISCARD ::kentik::network_class::v202109alpha1::NetworkClass* release_network_class();
  ::kentik::network_class::v202109alpha1::NetworkClass* mutable_network_class();
  void set_allocated_network_class(::kentik::network_class::v202109alpha1::NetworkClass* value);
  void unsafe_arena_set_allocated_network_class(::kentik::network_class::v202109alpha1::NetworkClass* value);
  ::kentik::network_class::v202109alpha1::NetworkClass* unsafe_arena_release_network_class();

  private:
  const ::kentik::network_class::v202109alpha1::NetworkClass& _internal_network_class() const;
  ::kentik::network_class::v202109alpha1::NetworkClass* _internal_mutable_network_class();

  public:
  // @@protoc_insertion_point(class_scope:kentik.network_class.v202109alpha1.UpdateNetworkClassResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateNetworkClassResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::network_class::v202109alpha1::NetworkClass* network_class_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fnetwork_5fclass_2fv202109alpha1_2fnetwork_5fclass_2eproto;
};
// -------------------------------------------------------------------

class UpdateNetworkClassRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.network_class.v202109alpha1.UpdateNetworkClassRequest) */ {
 public:
  inline UpdateNetworkClassRequest() : UpdateNetworkClassRequest(nullptr) {}
  ~UpdateNetworkClassRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateNetworkClassRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateNetworkClassRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateNetworkClassRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateNetworkClassRequest(const UpdateNetworkClassRequest& from) : UpdateNetworkClassRequest(nullptr, from) {}
  inline UpdateNetworkClassRequest(UpdateNetworkClassRequest&& from) noexcept
      : UpdateNetworkClassRequest(nullptr, std::move(from)) {}
  inline UpdateNetworkClassRequest& operator=(const UpdateNetworkClassRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateNetworkClassRequest& operator=(UpdateNetworkClassRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateNetworkClassRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateNetworkClassRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateNetworkClassRequest*>(
        &_UpdateNetworkClassRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(UpdateNetworkClassRequest& a, UpdateNetworkClassRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateNetworkClassRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateNetworkClassRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateNetworkClassRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateNetworkClassRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateNetworkClassRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateNetworkClassRequest& from) { UpdateNetworkClassRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateNetworkClassRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.network_class.v202109alpha1.UpdateNetworkClassRequest"; }

 protected:
  explicit UpdateNetworkClassRequest(::google::protobuf::Arena* arena);
  UpdateNetworkClassRequest(::google::protobuf::Arena* arena, const UpdateNetworkClassRequest& from);
  UpdateNetworkClassRequest(::google::protobuf::Arena* arena, UpdateNetworkClassRequest&& from) noexcept
      : UpdateNetworkClassRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNetworkClassFieldNumber = 1,
  };
  // .kentik.network_class.v202109alpha1.NetworkClass network_class = 1 [json_name = "networkClass"];
  bool has_network_class() const;
  void clear_network_class() ;
  const ::kentik::network_class::v202109alpha1::NetworkClass& network_class() const;
  PROTOBUF_NODISCARD ::kentik::network_class::v202109alpha1::NetworkClass* release_network_class();
  ::kentik::network_class::v202109alpha1::NetworkClass* mutable_network_class();
  void set_allocated_network_class(::kentik::network_class::v202109alpha1::NetworkClass* value);
  void unsafe_arena_set_allocated_network_class(::kentik::network_class::v202109alpha1::NetworkClass* value);
  ::kentik::network_class::v202109alpha1::NetworkClass* unsafe_arena_release_network_class();

  private:
  const ::kentik::network_class::v202109alpha1::NetworkClass& _internal_network_class() const;
  ::kentik::network_class::v202109alpha1::NetworkClass* _internal_mutable_network_class();

  public:
  // @@protoc_insertion_point(class_scope:kentik.network_class.v202109alpha1.UpdateNetworkClassRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateNetworkClassRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::network_class::v202109alpha1::NetworkClass* network_class_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fnetwork_5fclass_2fv202109alpha1_2fnetwork_5fclass_2eproto;
};
// -------------------------------------------------------------------

class GetNetworkClassResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.network_class.v202109alpha1.GetNetworkClassResponse) */ {
 public:
  inline GetNetworkClassResponse() : GetNetworkClassResponse(nullptr) {}
  ~GetNetworkClassResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetNetworkClassResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetNetworkClassResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetNetworkClassResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetNetworkClassResponse(const GetNetworkClassResponse& from) : GetNetworkClassResponse(nullptr, from) {}
  inline GetNetworkClassResponse(GetNetworkClassResponse&& from) noexcept
      : GetNetworkClassResponse(nullptr, std::move(from)) {}
  inline GetNetworkClassResponse& operator=(const GetNetworkClassResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetNetworkClassResponse& operator=(GetNetworkClassResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetNetworkClassResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetNetworkClassResponse* internal_default_instance() {
    return reinterpret_cast<const GetNetworkClassResponse*>(
        &_GetNetworkClassResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GetNetworkClassResponse& a, GetNetworkClassResponse& b) { a.Swap(&b); }
  inline void Swap(GetNetworkClassResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetNetworkClassResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetNetworkClassResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetNetworkClassResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetNetworkClassResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetNetworkClassResponse& from) { GetNetworkClassResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetNetworkClassResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.network_class.v202109alpha1.GetNetworkClassResponse"; }

 protected:
  explicit GetNetworkClassResponse(::google::protobuf::Arena* arena);
  GetNetworkClassResponse(::google::protobuf::Arena* arena, const GetNetworkClassResponse& from);
  GetNetworkClassResponse(::google::protobuf::Arena* arena, GetNetworkClassResponse&& from) noexcept
      : GetNetworkClassResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNetworkClassFieldNumber = 1,
  };
  // .kentik.network_class.v202109alpha1.NetworkClass network_class = 1 [json_name = "networkClass"];
  bool has_network_class() const;
  void clear_network_class() ;
  const ::kentik::network_class::v202109alpha1::NetworkClass& network_class() const;
  PROTOBUF_NODISCARD ::kentik::network_class::v202109alpha1::NetworkClass* release_network_class();
  ::kentik::network_class::v202109alpha1::NetworkClass* mutable_network_class();
  void set_allocated_network_class(::kentik::network_class::v202109alpha1::NetworkClass* value);
  void unsafe_arena_set_allocated_network_class(::kentik::network_class::v202109alpha1::NetworkClass* value);
  ::kentik::network_class::v202109alpha1::NetworkClass* unsafe_arena_release_network_class();

  private:
  const ::kentik::network_class::v202109alpha1::NetworkClass& _internal_network_class() const;
  ::kentik::network_class::v202109alpha1::NetworkClass* _internal_mutable_network_class();

  public:
  // @@protoc_insertion_point(class_scope:kentik.network_class.v202109alpha1.GetNetworkClassResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetNetworkClassResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::network_class::v202109alpha1::NetworkClass* network_class_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fnetwork_5fclass_2fv202109alpha1_2fnetwork_5fclass_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CloudSubnet

// .kentik.network_class.v202109alpha1.CloudType type = 1 [json_name = "type"];
inline void CloudSubnet::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::kentik::network_class::v202109alpha1::CloudType CloudSubnet::type() const {
  // @@protoc_insertion_point(field_get:kentik.network_class.v202109alpha1.CloudSubnet.type)
  return _internal_type();
}
inline void CloudSubnet::set_type(::kentik::network_class::v202109alpha1::CloudType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:kentik.network_class.v202109alpha1.CloudSubnet.type)
}
inline ::kentik::network_class::v202109alpha1::CloudType CloudSubnet::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::network_class::v202109alpha1::CloudType>(_impl_.type_);
}
inline void CloudSubnet::_internal_set_type(::kentik::network_class::v202109alpha1::CloudType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// repeated string subnets = 2 [json_name = "subnets"];
inline int CloudSubnet::_internal_subnets_size() const {
  return _internal_subnets().size();
}
inline int CloudSubnet::subnets_size() const {
  return _internal_subnets_size();
}
inline void CloudSubnet::clear_subnets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subnets_.Clear();
}
inline std::string* CloudSubnet::add_subnets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_subnets()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.network_class.v202109alpha1.CloudSubnet.subnets)
  return _s;
}
inline const std::string& CloudSubnet::subnets(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.network_class.v202109alpha1.CloudSubnet.subnets)
  return _internal_subnets().Get(index);
}
inline std::string* CloudSubnet::mutable_subnets(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.network_class.v202109alpha1.CloudSubnet.subnets)
  return _internal_mutable_subnets()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void CloudSubnet::set_subnets(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_subnets()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.network_class.v202109alpha1.CloudSubnet.subnets)
}
template <typename Arg_, typename... Args_>
inline void CloudSubnet::add_subnets(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_subnets(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.network_class.v202109alpha1.CloudSubnet.subnets)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CloudSubnet::subnets() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.network_class.v202109alpha1.CloudSubnet.subnets)
  return _internal_subnets();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CloudSubnet::mutable_subnets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.network_class.v202109alpha1.CloudSubnet.subnets)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_subnets();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CloudSubnet::_internal_subnets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subnets_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CloudSubnet::_internal_mutable_subnets() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.subnets_;
}

// -------------------------------------------------------------------

// NetworkClass

// repeated string internal_asns = 1 [json_name = "internalAsns"];
inline int NetworkClass::_internal_internal_asns_size() const {
  return _internal_internal_asns().size();
}
inline int NetworkClass::internal_asns_size() const {
  return _internal_internal_asns_size();
}
inline void NetworkClass::clear_internal_asns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.internal_asns_.Clear();
}
inline std::string* NetworkClass::add_internal_asns() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_internal_asns()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.network_class.v202109alpha1.NetworkClass.internal_asns)
  return _s;
}
inline const std::string& NetworkClass::internal_asns(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.network_class.v202109alpha1.NetworkClass.internal_asns)
  return _internal_internal_asns().Get(index);
}
inline std::string* NetworkClass::mutable_internal_asns(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.network_class.v202109alpha1.NetworkClass.internal_asns)
  return _internal_mutable_internal_asns()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void NetworkClass::set_internal_asns(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_internal_asns()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.network_class.v202109alpha1.NetworkClass.internal_asns)
}
template <typename Arg_, typename... Args_>
inline void NetworkClass::add_internal_asns(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_internal_asns(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.network_class.v202109alpha1.NetworkClass.internal_asns)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NetworkClass::internal_asns() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.network_class.v202109alpha1.NetworkClass.internal_asns)
  return _internal_internal_asns();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NetworkClass::mutable_internal_asns() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.network_class.v202109alpha1.NetworkClass.internal_asns)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_internal_asns();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NetworkClass::_internal_internal_asns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.internal_asns_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NetworkClass::_internal_mutable_internal_asns() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.internal_asns_;
}

// repeated string internal_ips = 2 [json_name = "internalIps"];
inline int NetworkClass::_internal_internal_ips_size() const {
  return _internal_internal_ips().size();
}
inline int NetworkClass::internal_ips_size() const {
  return _internal_internal_ips_size();
}
inline void NetworkClass::clear_internal_ips() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.internal_ips_.Clear();
}
inline std::string* NetworkClass::add_internal_ips() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_internal_ips()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.network_class.v202109alpha1.NetworkClass.internal_ips)
  return _s;
}
inline const std::string& NetworkClass::internal_ips(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.network_class.v202109alpha1.NetworkClass.internal_ips)
  return _internal_internal_ips().Get(index);
}
inline std::string* NetworkClass::mutable_internal_ips(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.network_class.v202109alpha1.NetworkClass.internal_ips)
  return _internal_mutable_internal_ips()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void NetworkClass::set_internal_ips(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_internal_ips()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.network_class.v202109alpha1.NetworkClass.internal_ips)
}
template <typename Arg_, typename... Args_>
inline void NetworkClass::add_internal_ips(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_internal_ips(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.network_class.v202109alpha1.NetworkClass.internal_ips)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NetworkClass::internal_ips() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.network_class.v202109alpha1.NetworkClass.internal_ips)
  return _internal_internal_ips();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NetworkClass::mutable_internal_ips() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.network_class.v202109alpha1.NetworkClass.internal_ips)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_internal_ips();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NetworkClass::_internal_internal_ips() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.internal_ips_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NetworkClass::_internal_mutable_internal_ips() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.internal_ips_;
}

// bool use_private_asns = 3 [json_name = "usePrivateAsns"];
inline void NetworkClass::clear_use_private_asns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_private_asns_ = false;
}
inline bool NetworkClass::use_private_asns() const {
  // @@protoc_insertion_point(field_get:kentik.network_class.v202109alpha1.NetworkClass.use_private_asns)
  return _internal_use_private_asns();
}
inline void NetworkClass::set_use_private_asns(bool value) {
  _internal_set_use_private_asns(value);
  // @@protoc_insertion_point(field_set:kentik.network_class.v202109alpha1.NetworkClass.use_private_asns)
}
inline bool NetworkClass::_internal_use_private_asns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_private_asns_;
}
inline void NetworkClass::_internal_set_use_private_asns(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_private_asns_ = value;
}

// bool use_private_subnets = 4 [json_name = "usePrivateSubnets"];
inline void NetworkClass::clear_use_private_subnets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_private_subnets_ = false;
}
inline bool NetworkClass::use_private_subnets() const {
  // @@protoc_insertion_point(field_get:kentik.network_class.v202109alpha1.NetworkClass.use_private_subnets)
  return _internal_use_private_subnets();
}
inline void NetworkClass::set_use_private_subnets(bool value) {
  _internal_set_use_private_subnets(value);
  // @@protoc_insertion_point(field_set:kentik.network_class.v202109alpha1.NetworkClass.use_private_subnets)
}
inline bool NetworkClass::_internal_use_private_subnets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_private_subnets_;
}
inline void NetworkClass::_internal_set_use_private_subnets(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_private_subnets_ = value;
}

// repeated .kentik.network_class.v202109alpha1.CloudSubnet cloud_subnets = 5 [json_name = "cloudSubnets"];
inline int NetworkClass::_internal_cloud_subnets_size() const {
  return _internal_cloud_subnets().size();
}
inline int NetworkClass::cloud_subnets_size() const {
  return _internal_cloud_subnets_size();
}
inline void NetworkClass::clear_cloud_subnets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cloud_subnets_.Clear();
}
inline ::kentik::network_class::v202109alpha1::CloudSubnet* NetworkClass::mutable_cloud_subnets(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.network_class.v202109alpha1.NetworkClass.cloud_subnets)
  return _internal_mutable_cloud_subnets()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::network_class::v202109alpha1::CloudSubnet>* NetworkClass::mutable_cloud_subnets()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.network_class.v202109alpha1.NetworkClass.cloud_subnets)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_cloud_subnets();
}
inline const ::kentik::network_class::v202109alpha1::CloudSubnet& NetworkClass::cloud_subnets(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.network_class.v202109alpha1.NetworkClass.cloud_subnets)
  return _internal_cloud_subnets().Get(index);
}
inline ::kentik::network_class::v202109alpha1::CloudSubnet* NetworkClass::add_cloud_subnets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::network_class::v202109alpha1::CloudSubnet* _add = _internal_mutable_cloud_subnets()->Add();
  // @@protoc_insertion_point(field_add:kentik.network_class.v202109alpha1.NetworkClass.cloud_subnets)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::network_class::v202109alpha1::CloudSubnet>& NetworkClass::cloud_subnets() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.network_class.v202109alpha1.NetworkClass.cloud_subnets)
  return _internal_cloud_subnets();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::network_class::v202109alpha1::CloudSubnet>&
NetworkClass::_internal_cloud_subnets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cloud_subnets_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::network_class::v202109alpha1::CloudSubnet>*
NetworkClass::_internal_mutable_cloud_subnets() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.cloud_subnets_;
}

// -------------------------------------------------------------------

// GetNetworkClassRequest

// -------------------------------------------------------------------

// GetNetworkClassResponse

// .kentik.network_class.v202109alpha1.NetworkClass network_class = 1 [json_name = "networkClass"];
inline bool GetNetworkClassResponse::has_network_class() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.network_class_ != nullptr);
  return value;
}
inline void GetNetworkClassResponse::clear_network_class() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.network_class_ != nullptr) _impl_.network_class_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::network_class::v202109alpha1::NetworkClass& GetNetworkClassResponse::_internal_network_class() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::network_class::v202109alpha1::NetworkClass* p = _impl_.network_class_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::network_class::v202109alpha1::NetworkClass&>(::kentik::network_class::v202109alpha1::_NetworkClass_default_instance_);
}
inline const ::kentik::network_class::v202109alpha1::NetworkClass& GetNetworkClassResponse::network_class() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.network_class.v202109alpha1.GetNetworkClassResponse.network_class)
  return _internal_network_class();
}
inline void GetNetworkClassResponse::unsafe_arena_set_allocated_network_class(::kentik::network_class::v202109alpha1::NetworkClass* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.network_class_);
  }
  _impl_.network_class_ = reinterpret_cast<::kentik::network_class::v202109alpha1::NetworkClass*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.network_class.v202109alpha1.GetNetworkClassResponse.network_class)
}
inline ::kentik::network_class::v202109alpha1::NetworkClass* GetNetworkClassResponse::release_network_class() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::network_class::v202109alpha1::NetworkClass* released = _impl_.network_class_;
  _impl_.network_class_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::network_class::v202109alpha1::NetworkClass* GetNetworkClassResponse::unsafe_arena_release_network_class() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.network_class.v202109alpha1.GetNetworkClassResponse.network_class)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::network_class::v202109alpha1::NetworkClass* temp = _impl_.network_class_;
  _impl_.network_class_ = nullptr;
  return temp;
}
inline ::kentik::network_class::v202109alpha1::NetworkClass* GetNetworkClassResponse::_internal_mutable_network_class() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.network_class_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::network_class::v202109alpha1::NetworkClass>(GetArena());
    _impl_.network_class_ = reinterpret_cast<::kentik::network_class::v202109alpha1::NetworkClass*>(p);
  }
  return _impl_.network_class_;
}
inline ::kentik::network_class::v202109alpha1::NetworkClass* GetNetworkClassResponse::mutable_network_class() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::network_class::v202109alpha1::NetworkClass* _msg = _internal_mutable_network_class();
  // @@protoc_insertion_point(field_mutable:kentik.network_class.v202109alpha1.GetNetworkClassResponse.network_class)
  return _msg;
}
inline void GetNetworkClassResponse::set_allocated_network_class(::kentik::network_class::v202109alpha1::NetworkClass* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.network_class_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.network_class_ = reinterpret_cast<::kentik::network_class::v202109alpha1::NetworkClass*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.network_class.v202109alpha1.GetNetworkClassResponse.network_class)
}

// -------------------------------------------------------------------

// UpdateNetworkClassRequest

// .kentik.network_class.v202109alpha1.NetworkClass network_class = 1 [json_name = "networkClass"];
inline bool UpdateNetworkClassRequest::has_network_class() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.network_class_ != nullptr);
  return value;
}
inline void UpdateNetworkClassRequest::clear_network_class() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.network_class_ != nullptr) _impl_.network_class_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::network_class::v202109alpha1::NetworkClass& UpdateNetworkClassRequest::_internal_network_class() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::network_class::v202109alpha1::NetworkClass* p = _impl_.network_class_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::network_class::v202109alpha1::NetworkClass&>(::kentik::network_class::v202109alpha1::_NetworkClass_default_instance_);
}
inline const ::kentik::network_class::v202109alpha1::NetworkClass& UpdateNetworkClassRequest::network_class() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.network_class.v202109alpha1.UpdateNetworkClassRequest.network_class)
  return _internal_network_class();
}
inline void UpdateNetworkClassRequest::unsafe_arena_set_allocated_network_class(::kentik::network_class::v202109alpha1::NetworkClass* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.network_class_);
  }
  _impl_.network_class_ = reinterpret_cast<::kentik::network_class::v202109alpha1::NetworkClass*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.network_class.v202109alpha1.UpdateNetworkClassRequest.network_class)
}
inline ::kentik::network_class::v202109alpha1::NetworkClass* UpdateNetworkClassRequest::release_network_class() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::network_class::v202109alpha1::NetworkClass* released = _impl_.network_class_;
  _impl_.network_class_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::network_class::v202109alpha1::NetworkClass* UpdateNetworkClassRequest::unsafe_arena_release_network_class() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.network_class.v202109alpha1.UpdateNetworkClassRequest.network_class)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::network_class::v202109alpha1::NetworkClass* temp = _impl_.network_class_;
  _impl_.network_class_ = nullptr;
  return temp;
}
inline ::kentik::network_class::v202109alpha1::NetworkClass* UpdateNetworkClassRequest::_internal_mutable_network_class() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.network_class_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::network_class::v202109alpha1::NetworkClass>(GetArena());
    _impl_.network_class_ = reinterpret_cast<::kentik::network_class::v202109alpha1::NetworkClass*>(p);
  }
  return _impl_.network_class_;
}
inline ::kentik::network_class::v202109alpha1::NetworkClass* UpdateNetworkClassRequest::mutable_network_class() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::network_class::v202109alpha1::NetworkClass* _msg = _internal_mutable_network_class();
  // @@protoc_insertion_point(field_mutable:kentik.network_class.v202109alpha1.UpdateNetworkClassRequest.network_class)
  return _msg;
}
inline void UpdateNetworkClassRequest::set_allocated_network_class(::kentik::network_class::v202109alpha1::NetworkClass* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.network_class_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.network_class_ = reinterpret_cast<::kentik::network_class::v202109alpha1::NetworkClass*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.network_class.v202109alpha1.UpdateNetworkClassRequest.network_class)
}

// -------------------------------------------------------------------

// UpdateNetworkClassResponse

// .kentik.network_class.v202109alpha1.NetworkClass network_class = 1 [json_name = "networkClass"];
inline bool UpdateNetworkClassResponse::has_network_class() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.network_class_ != nullptr);
  return value;
}
inline void UpdateNetworkClassResponse::clear_network_class() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.network_class_ != nullptr) _impl_.network_class_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::network_class::v202109alpha1::NetworkClass& UpdateNetworkClassResponse::_internal_network_class() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::network_class::v202109alpha1::NetworkClass* p = _impl_.network_class_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::network_class::v202109alpha1::NetworkClass&>(::kentik::network_class::v202109alpha1::_NetworkClass_default_instance_);
}
inline const ::kentik::network_class::v202109alpha1::NetworkClass& UpdateNetworkClassResponse::network_class() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.network_class.v202109alpha1.UpdateNetworkClassResponse.network_class)
  return _internal_network_class();
}
inline void UpdateNetworkClassResponse::unsafe_arena_set_allocated_network_class(::kentik::network_class::v202109alpha1::NetworkClass* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.network_class_);
  }
  _impl_.network_class_ = reinterpret_cast<::kentik::network_class::v202109alpha1::NetworkClass*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.network_class.v202109alpha1.UpdateNetworkClassResponse.network_class)
}
inline ::kentik::network_class::v202109alpha1::NetworkClass* UpdateNetworkClassResponse::release_network_class() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::network_class::v202109alpha1::NetworkClass* released = _impl_.network_class_;
  _impl_.network_class_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::network_class::v202109alpha1::NetworkClass* UpdateNetworkClassResponse::unsafe_arena_release_network_class() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.network_class.v202109alpha1.UpdateNetworkClassResponse.network_class)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::network_class::v202109alpha1::NetworkClass* temp = _impl_.network_class_;
  _impl_.network_class_ = nullptr;
  return temp;
}
inline ::kentik::network_class::v202109alpha1::NetworkClass* UpdateNetworkClassResponse::_internal_mutable_network_class() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.network_class_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::network_class::v202109alpha1::NetworkClass>(GetArena());
    _impl_.network_class_ = reinterpret_cast<::kentik::network_class::v202109alpha1::NetworkClass*>(p);
  }
  return _impl_.network_class_;
}
inline ::kentik::network_class::v202109alpha1::NetworkClass* UpdateNetworkClassResponse::mutable_network_class() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::network_class::v202109alpha1::NetworkClass* _msg = _internal_mutable_network_class();
  // @@protoc_insertion_point(field_mutable:kentik.network_class.v202109alpha1.UpdateNetworkClassResponse.network_class)
  return _msg;
}
inline void UpdateNetworkClassResponse::set_allocated_network_class(::kentik::network_class::v202109alpha1::NetworkClass* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.network_class_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.network_class_ = reinterpret_cast<::kentik::network_class::v202109alpha1::NetworkClass*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.network_class.v202109alpha1.UpdateNetworkClassResponse.network_class)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v202109alpha1
}  // namespace network_class
}  // namespace kentik


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::kentik::network_class::v202109alpha1::CloudType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::network_class::v202109alpha1::CloudType>() {
  return ::kentik::network_class::v202109alpha1::CloudType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kentik_2fnetwork_5fclass_2fv202109alpha1_2fnetwork_5fclass_2eproto_2epb_2eh
