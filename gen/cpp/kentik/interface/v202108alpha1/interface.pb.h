// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/interface/v202108alpha1/interface.proto
// Protobuf C++ Version: 5.29.3

#ifndef kentik_2finterface_2fv202108alpha1_2finterface_2eproto_2epb_2eh
#define kentik_2finterface_2fv202108alpha1_2finterface_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "kentik/core/v202303/annotations.pb.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kentik_2finterface_2fv202108alpha1_2finterface_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
namespace kentik {
namespace interface {
namespace v202108alpha1 {
class Action;
struct ActionDefaultTypeInternal;
extern ActionDefaultTypeInternal _Action_default_instance_;
class AutoClassifyRequest;
struct AutoClassifyRequestDefaultTypeInternal;
extern AutoClassifyRequestDefaultTypeInternal _AutoClassifyRequest_default_instance_;
class AutoClassifyResponse;
struct AutoClassifyResponseDefaultTypeInternal;
extern AutoClassifyResponseDefaultTypeInternal _AutoClassifyResponse_default_instance_;
class ClassifyCounter;
struct ClassifyCounterDefaultTypeInternal;
extern ClassifyCounterDefaultTypeInternal _ClassifyCounter_default_instance_;
class CreateInterfaceRequest;
struct CreateInterfaceRequestDefaultTypeInternal;
extern CreateInterfaceRequestDefaultTypeInternal _CreateInterfaceRequest_default_instance_;
class CreateInterfaceResponse;
struct CreateInterfaceResponseDefaultTypeInternal;
extern CreateInterfaceResponseDefaultTypeInternal _CreateInterfaceResponse_default_instance_;
class DeleteInterfaceRequest;
struct DeleteInterfaceRequestDefaultTypeInternal;
extern DeleteInterfaceRequestDefaultTypeInternal _DeleteInterfaceRequest_default_instance_;
class DeleteInterfaceResponse;
struct DeleteInterfaceResponseDefaultTypeInternal;
extern DeleteInterfaceResponseDefaultTypeInternal _DeleteInterfaceResponse_default_instance_;
class DeviceClassifyInfo;
struct DeviceClassifyInfoDefaultTypeInternal;
extern DeviceClassifyInfoDefaultTypeInternal _DeviceClassifyInfo_default_instance_;
class DeviceFilter;
struct DeviceFilterDefaultTypeInternal;
extern DeviceFilterDefaultTypeInternal _DeviceFilter_default_instance_;
class GetInterfaceRequest;
struct GetInterfaceRequestDefaultTypeInternal;
extern GetInterfaceRequestDefaultTypeInternal _GetInterfaceRequest_default_instance_;
class GetInterfaceResponse;
struct GetInterfaceResponseDefaultTypeInternal;
extern GetInterfaceResponseDefaultTypeInternal _GetInterfaceResponse_default_instance_;
class Interface;
struct InterfaceDefaultTypeInternal;
extern InterfaceDefaultTypeInternal _Interface_default_instance_;
class InterfaceClassification;
struct InterfaceClassificationDefaultTypeInternal;
extern InterfaceClassificationDefaultTypeInternal _InterfaceClassification_default_instance_;
class InterfaceClassifyInfo;
struct InterfaceClassifyInfoDefaultTypeInternal;
extern InterfaceClassifyInfoDefaultTypeInternal _InterfaceClassifyInfo_default_instance_;
class InterfaceFilter;
struct InterfaceFilterDefaultTypeInternal;
extern InterfaceFilterDefaultTypeInternal _InterfaceFilter_default_instance_;
class Interface_ExtraInfoEntry_DoNotUse;
struct Interface_ExtraInfoEntry_DoNotUseDefaultTypeInternal;
extern Interface_ExtraInfoEntry_DoNotUseDefaultTypeInternal _Interface_ExtraInfoEntry_DoNotUse_default_instance_;
class Interface_InterfaceKvsEntry_DoNotUse;
struct Interface_InterfaceKvsEntry_DoNotUseDefaultTypeInternal;
extern Interface_InterfaceKvsEntry_DoNotUseDefaultTypeInternal _Interface_InterfaceKvsEntry_DoNotUse_default_instance_;
class Interface_InterfaceTagsEntry_DoNotUse;
struct Interface_InterfaceTagsEntry_DoNotUseDefaultTypeInternal;
extern Interface_InterfaceTagsEntry_DoNotUseDefaultTypeInternal _Interface_InterfaceTagsEntry_DoNotUse_default_instance_;
class Interface_VrfEntry_DoNotUse;
struct Interface_VrfEntry_DoNotUseDefaultTypeInternal;
extern Interface_VrfEntry_DoNotUseDefaultTypeInternal _Interface_VrfEntry_DoNotUse_default_instance_;
class ListInterfaceRequest;
struct ListInterfaceRequestDefaultTypeInternal;
extern ListInterfaceRequestDefaultTypeInternal _ListInterfaceRequest_default_instance_;
class ListInterfaceResponse;
struct ListInterfaceResponseDefaultTypeInternal;
extern ListInterfaceResponseDefaultTypeInternal _ListInterfaceResponse_default_instance_;
class ManualClassifyRequest;
struct ManualClassifyRequestDefaultTypeInternal;
extern ManualClassifyRequestDefaultTypeInternal _ManualClassifyRequest_default_instance_;
class ManualClassifyResponse;
struct ManualClassifyResponseDefaultTypeInternal;
extern ManualClassifyResponseDefaultTypeInternal _ManualClassifyResponse_default_instance_;
class Match;
struct MatchDefaultTypeInternal;
extern MatchDefaultTypeInternal _Match_default_instance_;
class Rule;
struct RuleDefaultTypeInternal;
extern RuleDefaultTypeInternal _Rule_default_instance_;
class UpdateInterfaceRequest;
struct UpdateInterfaceRequestDefaultTypeInternal;
extern UpdateInterfaceRequestDefaultTypeInternal _UpdateInterfaceRequest_default_instance_;
class UpdateInterfaceResponse;
struct UpdateInterfaceResponseDefaultTypeInternal;
extern UpdateInterfaceResponseDefaultTypeInternal _UpdateInterfaceResponse_default_instance_;
}  // namespace v202108alpha1
}  // namespace interface
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kentik {
namespace interface {
namespace v202108alpha1 {
enum ConnectivityType : int {
  CONNECTIVITY_TYPE_UNSPECIFIED = 0,
  CONNECTIVITY_TYPE_AGGREGATION_INTERCONNECT = 1,
  CONNECTIVITY_TYPE_AVAILABLE = 2,
  CONNECTIVITY_TYPE_BACKBONE = 3,
  CONNECTIVITY_TYPE_CLOUD_INTERCONNECT = 4,
  CONNECTIVITY_TYPE_CUSTOMER = 5,
  CONNECTIVITY_TYPE_DATACENTER_FABRIC = 6,
  CONNECTIVITY_TYPE_DATACENTER_INTERCONNECT = 7,
  CONNECTIVITY_TYPE_EMBEDDED_CACHE = 8,
  CONNECTIVITY_TYPE_FREE_PNI = 9,
  CONNECTIVITY_TYPE_HOST = 10,
  CONNECTIVITY_TYPE_IX = 11,
  CONNECTIVITY_TYPE_OTHER = 12,
  CONNECTIVITY_TYPE_PAID_PNI = 13,
  CONNECTIVITY_TYPE_RESERVED = 14,
  CONNECTIVITY_TYPE_TRANSIT = 15,
  CONNECTIVITY_TYPE_VIRTUAL_CROSS_CONNECT = 16,
  CONNECTIVITY_TYPE_IPX_INTERCONNECT = 17,
  CONNECTIVITY_TYPE_SIP_INTERCONNECT = 18,
  CONNECTIVITY_TYPE_DDOS_EXT = 19,
  CONNECTIVITY_TYPE_DDOS_INT = 20,
  CONNECTIVITY_TYPE_MGT = 21,
  ConnectivityType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ConnectivityType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ConnectivityType_IsValid(int value);
extern const uint32_t ConnectivityType_internal_data_[];
constexpr ConnectivityType ConnectivityType_MIN = static_cast<ConnectivityType>(0);
constexpr ConnectivityType ConnectivityType_MAX = static_cast<ConnectivityType>(21);
constexpr int ConnectivityType_ARRAYSIZE = 21 + 1;
const ::google::protobuf::EnumDescriptor*
ConnectivityType_descriptor();
template <typename T>
const std::string& ConnectivityType_Name(T value) {
  static_assert(std::is_same<T, ConnectivityType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ConnectivityType_Name().");
  return ConnectivityType_Name(static_cast<ConnectivityType>(value));
}
template <>
inline const std::string& ConnectivityType_Name(ConnectivityType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ConnectivityType_descriptor,
                                                 0, 21>(
      static_cast<int>(value));
}
inline bool ConnectivityType_Parse(absl::string_view name, ConnectivityType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConnectivityType>(
      ConnectivityType_descriptor(), name, value);
}
enum NetworkBoundary : int {
  NETWORK_BOUNDARY_UNSPECIFIED = 0,
  NETWORK_BOUNDARY_AUTO = 1,
  NETWORK_BOUNDARY_INTERNAL = 2,
  NETWORK_BOUNDARY_EXTERNAL = 3,
  NETWORK_BOUNDARY_NONE = 4,
  NetworkBoundary_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  NetworkBoundary_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool NetworkBoundary_IsValid(int value);
extern const uint32_t NetworkBoundary_internal_data_[];
constexpr NetworkBoundary NetworkBoundary_MIN = static_cast<NetworkBoundary>(0);
constexpr NetworkBoundary NetworkBoundary_MAX = static_cast<NetworkBoundary>(4);
constexpr int NetworkBoundary_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
NetworkBoundary_descriptor();
template <typename T>
const std::string& NetworkBoundary_Name(T value) {
  static_assert(std::is_same<T, NetworkBoundary>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to NetworkBoundary_Name().");
  return NetworkBoundary_Name(static_cast<NetworkBoundary>(value));
}
template <>
inline const std::string& NetworkBoundary_Name(NetworkBoundary value) {
  return ::google::protobuf::internal::NameOfDenseEnum<NetworkBoundary_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool NetworkBoundary_Parse(absl::string_view name, NetworkBoundary* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NetworkBoundary>(
      NetworkBoundary_descriptor(), name, value);
}
enum IpFilter : int {
  IP_FILTER_UNSPECIFIED = 0,
  IP_FILTER_PRIVATE = 1,
  IP_FILTER_PUBLIC = 2,
  IP_FILTER_UNSET = 3,
  IpFilter_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  IpFilter_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool IpFilter_IsValid(int value);
extern const uint32_t IpFilter_internal_data_[];
constexpr IpFilter IpFilter_MIN = static_cast<IpFilter>(0);
constexpr IpFilter IpFilter_MAX = static_cast<IpFilter>(3);
constexpr int IpFilter_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
IpFilter_descriptor();
template <typename T>
const std::string& IpFilter_Name(T value) {
  static_assert(std::is_same<T, IpFilter>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to IpFilter_Name().");
  return IpFilter_Name(static_cast<IpFilter>(value));
}
template <>
inline const std::string& IpFilter_Name(IpFilter value) {
  return ::google::protobuf::internal::NameOfDenseEnum<IpFilter_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool IpFilter_Parse(absl::string_view name, IpFilter* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IpFilter>(
      IpFilter_descriptor(), name, value);
}
enum MatchAttribute : int {
  MATCH_ATTRIBUTE_UNSPECIFIED = 0,
  MATCH_ATTRIBUTE_INTERFACE_DESCRIPTION = 1,
  MATCH_ATTRIBUTE_SNMP_ALIAS = 2,
  MATCH_ATTRIBUTE_INTERFACE_IP = 3,
  MatchAttribute_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MatchAttribute_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool MatchAttribute_IsValid(int value);
extern const uint32_t MatchAttribute_internal_data_[];
constexpr MatchAttribute MatchAttribute_MIN = static_cast<MatchAttribute>(0);
constexpr MatchAttribute MatchAttribute_MAX = static_cast<MatchAttribute>(3);
constexpr int MatchAttribute_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
MatchAttribute_descriptor();
template <typename T>
const std::string& MatchAttribute_Name(T value) {
  static_assert(std::is_same<T, MatchAttribute>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MatchAttribute_Name().");
  return MatchAttribute_Name(static_cast<MatchAttribute>(value));
}
template <>
inline const std::string& MatchAttribute_Name(MatchAttribute value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MatchAttribute_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool MatchAttribute_Parse(absl::string_view name, MatchAttribute* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MatchAttribute>(
      MatchAttribute_descriptor(), name, value);
}
enum Operator : int {
  OPERATOR_UNSPECIFIED = 0,
  OPERATOR_EQUALS = 1,
  OPERATOR_CONTAINS = 2,
  OPERATOR_REGEX = 3,
  OPERATOR_CONTAINED_IN_SUBNET = 4,
  OPERATOR_IS_PUBLIC_IP = 5,
  OPERATOR_IS_PRIVATE_IP = 6,
  OPERATOR_NO_IP = 7,
  Operator_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Operator_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Operator_IsValid(int value);
extern const uint32_t Operator_internal_data_[];
constexpr Operator Operator_MIN = static_cast<Operator>(0);
constexpr Operator Operator_MAX = static_cast<Operator>(7);
constexpr int Operator_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor*
Operator_descriptor();
template <typename T>
const std::string& Operator_Name(T value) {
  static_assert(std::is_same<T, Operator>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Operator_Name().");
  return Operator_Name(static_cast<Operator>(value));
}
template <>
inline const std::string& Operator_Name(Operator value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Operator_descriptor,
                                                 0, 7>(
      static_cast<int>(value));
}
inline bool Operator_Parse(absl::string_view name, Operator* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Operator>(
      Operator_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Match final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.Match) */ {
 public:
  inline Match() : Match(nullptr) {}
  ~Match() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Match* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Match));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Match(
      ::google::protobuf::internal::ConstantInitialized);

  inline Match(const Match& from) : Match(nullptr, from) {}
  inline Match(Match&& from) noexcept
      : Match(nullptr, std::move(from)) {}
  inline Match& operator=(const Match& from) {
    CopyFrom(from);
    return *this;
  }
  inline Match& operator=(Match&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Match& default_instance() {
    return *internal_default_instance();
  }
  static inline const Match* internal_default_instance() {
    return reinterpret_cast<const Match*>(
        &_Match_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(Match& a, Match& b) { a.Swap(&b); }
  inline void Swap(Match* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Match* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Match* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Match>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Match& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Match& from) { Match::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Match* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.Match"; }

 protected:
  explicit Match(::google::protobuf::Arena* arena);
  Match(::google::protobuf::Arena* arena, const Match& from);
  Match(::google::protobuf::Arena* arena, Match&& from) noexcept
      : Match(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPatternFieldNumber = 3,
    kMatchAttributeFieldNumber = 1,
    kMatchOperatorFieldNumber = 2,
  };
  // string pattern = 3 [json_name = "pattern"];
  void clear_pattern() ;
  const std::string& pattern() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pattern(Arg_&& arg, Args_... args);
  std::string* mutable_pattern();
  PROTOBUF_NODISCARD std::string* release_pattern();
  void set_allocated_pattern(std::string* value);

  private:
  const std::string& _internal_pattern() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pattern(
      const std::string& value);
  std::string* _internal_mutable_pattern();

  public:
  // .kentik.interface.v202108alpha1.MatchAttribute match_attribute = 1 [json_name = "matchAttribute"];
  void clear_match_attribute() ;
  ::kentik::interface::v202108alpha1::MatchAttribute match_attribute() const;
  void set_match_attribute(::kentik::interface::v202108alpha1::MatchAttribute value);

  private:
  ::kentik::interface::v202108alpha1::MatchAttribute _internal_match_attribute() const;
  void _internal_set_match_attribute(::kentik::interface::v202108alpha1::MatchAttribute value);

  public:
  // .kentik.interface.v202108alpha1.Operator match_operator = 2 [json_name = "matchOperator"];
  void clear_match_operator() ;
  ::kentik::interface::v202108alpha1::Operator match_operator() const;
  void set_match_operator(::kentik::interface::v202108alpha1::Operator value);

  private:
  ::kentik::interface::v202108alpha1::Operator _internal_match_operator() const;
  void _internal_set_match_operator(::kentik::interface::v202108alpha1::Operator value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.Match)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      52, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Match& from_msg);
    ::google::protobuf::internal::ArenaStringPtr pattern_;
    int match_attribute_;
    int match_operator_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class ManualClassifyResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.ManualClassifyResponse) */ {
 public:
  inline ManualClassifyResponse() : ManualClassifyResponse(nullptr) {}
  ~ManualClassifyResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ManualClassifyResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ManualClassifyResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ManualClassifyResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ManualClassifyResponse(const ManualClassifyResponse& from) : ManualClassifyResponse(nullptr, from) {}
  inline ManualClassifyResponse(ManualClassifyResponse&& from) noexcept
      : ManualClassifyResponse(nullptr, std::move(from)) {}
  inline ManualClassifyResponse& operator=(const ManualClassifyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ManualClassifyResponse& operator=(ManualClassifyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ManualClassifyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ManualClassifyResponse* internal_default_instance() {
    return reinterpret_cast<const ManualClassifyResponse*>(
        &_ManualClassifyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(ManualClassifyResponse& a, ManualClassifyResponse& b) { a.Swap(&b); }
  inline void Swap(ManualClassifyResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ManualClassifyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ManualClassifyResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ManualClassifyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ManualClassifyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ManualClassifyResponse& from) { ManualClassifyResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ManualClassifyResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.ManualClassifyResponse"; }

 protected:
  explicit ManualClassifyResponse(::google::protobuf::Arena* arena);
  ManualClassifyResponse(::google::protobuf::Arena* arena, const ManualClassifyResponse& from);
  ManualClassifyResponse(::google::protobuf::Arena* arena, ManualClassifyResponse&& from) noexcept
      : ManualClassifyResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceIdsFieldNumber = 1,
  };
  // repeated string device_ids = 1 [json_name = "deviceIds"];
  int device_ids_size() const;
  private:
  int _internal_device_ids_size() const;

  public:
  void clear_device_ids() ;
  const std::string& device_ids(int index) const;
  std::string* mutable_device_ids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_ids(int index, Arg_&& value, Args_... args);
  std::string* add_device_ids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_device_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& device_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_device_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_device_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_device_ids();

  public:
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.ManualClassifyResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      72, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ManualClassifyResponse& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> device_ids_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class ManualClassifyRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.ManualClassifyRequest) */ {
 public:
  inline ManualClassifyRequest() : ManualClassifyRequest(nullptr) {}
  ~ManualClassifyRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ManualClassifyRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ManualClassifyRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ManualClassifyRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ManualClassifyRequest(const ManualClassifyRequest& from) : ManualClassifyRequest(nullptr, from) {}
  inline ManualClassifyRequest(ManualClassifyRequest&& from) noexcept
      : ManualClassifyRequest(nullptr, std::move(from)) {}
  inline ManualClassifyRequest& operator=(const ManualClassifyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ManualClassifyRequest& operator=(ManualClassifyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ManualClassifyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ManualClassifyRequest* internal_default_instance() {
    return reinterpret_cast<const ManualClassifyRequest*>(
        &_ManualClassifyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(ManualClassifyRequest& a, ManualClassifyRequest& b) { a.Swap(&b); }
  inline void Swap(ManualClassifyRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ManualClassifyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ManualClassifyRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ManualClassifyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ManualClassifyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ManualClassifyRequest& from) { ManualClassifyRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ManualClassifyRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.ManualClassifyRequest"; }

 protected:
  explicit ManualClassifyRequest(::google::protobuf::Arena* arena);
  ManualClassifyRequest(::google::protobuf::Arena* arena, const ManualClassifyRequest& from);
  ManualClassifyRequest(::google::protobuf::Arena* arena, ManualClassifyRequest&& from) noexcept
      : ManualClassifyRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInterfaceIdsFieldNumber = 1,
    kProviderFieldNumber = 4,
    kConnectivityTypeFieldNumber = 2,
    kNetworkBoundaryFieldNumber = 3,
  };
  // repeated string interface_ids = 1 [json_name = "interfaceIds"];
  int interface_ids_size() const;
  private:
  int _internal_interface_ids_size() const;

  public:
  void clear_interface_ids() ;
  const std::string& interface_ids(int index) const;
  std::string* mutable_interface_ids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_interface_ids(int index, Arg_&& value, Args_... args);
  std::string* add_interface_ids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_interface_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& interface_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_interface_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_interface_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_interface_ids();

  public:
  // string provider = 4 [json_name = "provider"];
  void clear_provider() ;
  const std::string& provider() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_provider(Arg_&& arg, Args_... args);
  std::string* mutable_provider();
  PROTOBUF_NODISCARD std::string* release_provider();
  void set_allocated_provider(std::string* value);

  private:
  const std::string& _internal_provider() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_provider(
      const std::string& value);
  std::string* _internal_mutable_provider();

  public:
  // .kentik.interface.v202108alpha1.ConnectivityType connectivity_type = 2 [json_name = "connectivityType"];
  void clear_connectivity_type() ;
  ::kentik::interface::v202108alpha1::ConnectivityType connectivity_type() const;
  void set_connectivity_type(::kentik::interface::v202108alpha1::ConnectivityType value);

  private:
  ::kentik::interface::v202108alpha1::ConnectivityType _internal_connectivity_type() const;
  void _internal_set_connectivity_type(::kentik::interface::v202108alpha1::ConnectivityType value);

  public:
  // .kentik.interface.v202108alpha1.NetworkBoundary network_boundary = 3 [json_name = "networkBoundary"];
  void clear_network_boundary() ;
  ::kentik::interface::v202108alpha1::NetworkBoundary network_boundary() const;
  void set_network_boundary(::kentik::interface::v202108alpha1::NetworkBoundary value);

  private:
  ::kentik::interface::v202108alpha1::NetworkBoundary _internal_network_boundary() const;
  void _internal_set_network_boundary(::kentik::interface::v202108alpha1::NetworkBoundary value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.ManualClassifyRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      82, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ManualClassifyRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> interface_ids_;
    ::google::protobuf::internal::ArenaStringPtr provider_;
    int connectivity_type_;
    int network_boundary_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class InterfaceFilter final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.InterfaceFilter) */ {
 public:
  inline InterfaceFilter() : InterfaceFilter(nullptr) {}
  ~InterfaceFilter() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InterfaceFilter* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InterfaceFilter));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InterfaceFilter(
      ::google::protobuf::internal::ConstantInitialized);

  inline InterfaceFilter(const InterfaceFilter& from) : InterfaceFilter(nullptr, from) {}
  inline InterfaceFilter(InterfaceFilter&& from) noexcept
      : InterfaceFilter(nullptr, std::move(from)) {}
  inline InterfaceFilter& operator=(const InterfaceFilter& from) {
    CopyFrom(from);
    return *this;
  }
  inline InterfaceFilter& operator=(InterfaceFilter&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InterfaceFilter& default_instance() {
    return *internal_default_instance();
  }
  static inline const InterfaceFilter* internal_default_instance() {
    return reinterpret_cast<const InterfaceFilter*>(
        &_InterfaceFilter_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(InterfaceFilter& a, InterfaceFilter& b) { a.Swap(&b); }
  inline void Swap(InterfaceFilter* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InterfaceFilter* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InterfaceFilter* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InterfaceFilter>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InterfaceFilter& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InterfaceFilter& from) { InterfaceFilter::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InterfaceFilter* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.InterfaceFilter"; }

 protected:
  explicit InterfaceFilter(::google::protobuf::Arena* arena);
  InterfaceFilter(::google::protobuf::Arena* arena, const InterfaceFilter& from);
  InterfaceFilter(::google::protobuf::Arena* arena, InterfaceFilter&& from) noexcept
      : InterfaceFilter(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceIdsFieldNumber = 2,
    kConnectivityTypesFieldNumber = 3,
    kNetworkBoundariesFieldNumber = 4,
    kProvidersFieldNumber = 5,
    kSnmpSpeedsFieldNumber = 6,
    kIpTypesFieldNumber = 7,
    kTextFieldNumber = 1,
  };
  // repeated string device_ids = 2 [json_name = "deviceIds"];
  int device_ids_size() const;
  private:
  int _internal_device_ids_size() const;

  public:
  void clear_device_ids() ;
  const std::string& device_ids(int index) const;
  std::string* mutable_device_ids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_ids(int index, Arg_&& value, Args_... args);
  std::string* add_device_ids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_device_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& device_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_device_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_device_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_device_ids();

  public:
  // repeated .kentik.interface.v202108alpha1.ConnectivityType connectivity_types = 3 [json_name = "connectivityTypes"];
  int connectivity_types_size() const;
  private:
  int _internal_connectivity_types_size() const;

  public:
  void clear_connectivity_types() ;
  public:
  ::kentik::interface::v202108alpha1::ConnectivityType connectivity_types(int index) const;
  void set_connectivity_types(int index, ::kentik::interface::v202108alpha1::ConnectivityType value);
  void add_connectivity_types(::kentik::interface::v202108alpha1::ConnectivityType value);
  const ::google::protobuf::RepeatedField<int>& connectivity_types() const;
  ::google::protobuf::RepeatedField<int>* mutable_connectivity_types();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_connectivity_types() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_connectivity_types();

  public:
  // repeated .kentik.interface.v202108alpha1.NetworkBoundary network_boundaries = 4 [json_name = "networkBoundaries"];
  int network_boundaries_size() const;
  private:
  int _internal_network_boundaries_size() const;

  public:
  void clear_network_boundaries() ;
  public:
  ::kentik::interface::v202108alpha1::NetworkBoundary network_boundaries(int index) const;
  void set_network_boundaries(int index, ::kentik::interface::v202108alpha1::NetworkBoundary value);
  void add_network_boundaries(::kentik::interface::v202108alpha1::NetworkBoundary value);
  const ::google::protobuf::RepeatedField<int>& network_boundaries() const;
  ::google::protobuf::RepeatedField<int>* mutable_network_boundaries();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_network_boundaries() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_network_boundaries();

  public:
  // repeated string providers = 5 [json_name = "providers"];
  int providers_size() const;
  private:
  int _internal_providers_size() const;

  public:
  void clear_providers() ;
  const std::string& providers(int index) const;
  std::string* mutable_providers(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_providers(int index, Arg_&& value, Args_... args);
  std::string* add_providers();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_providers(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& providers() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_providers();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_providers() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_providers();

  public:
  // repeated int32 snmp_speeds = 6 [json_name = "snmpSpeeds"];
  int snmp_speeds_size() const;
  private:
  int _internal_snmp_speeds_size() const;

  public:
  void clear_snmp_speeds() ;
  ::int32_t snmp_speeds(int index) const;
  void set_snmp_speeds(int index, ::int32_t value);
  void add_snmp_speeds(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& snmp_speeds() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_snmp_speeds();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_snmp_speeds() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_snmp_speeds();

  public:
  // repeated .kentik.interface.v202108alpha1.IpFilter ip_types = 7 [json_name = "ipTypes"];
  int ip_types_size() const;
  private:
  int _internal_ip_types_size() const;

  public:
  void clear_ip_types() ;
  public:
  ::kentik::interface::v202108alpha1::IpFilter ip_types(int index) const;
  void set_ip_types(int index, ::kentik::interface::v202108alpha1::IpFilter value);
  void add_ip_types(::kentik::interface::v202108alpha1::IpFilter value);
  const ::google::protobuf::RepeatedField<int>& ip_types() const;
  ::google::protobuf::RepeatedField<int>* mutable_ip_types();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_ip_types() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_ip_types();

  public:
  // string text = 1 [json_name = "text"];
  void clear_text() ;
  const std::string& text() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_text(Arg_&& arg, Args_... args);
  std::string* mutable_text();
  PROTOBUF_NODISCARD std::string* release_text();
  void set_allocated_text(std::string* value);

  private:
  const std::string& _internal_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_text(
      const std::string& value);
  std::string* _internal_mutable_text();

  public:
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.InterfaceFilter)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      78, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InterfaceFilter& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> device_ids_;
    ::google::protobuf::RepeatedField<int> connectivity_types_;
    ::google::protobuf::internal::CachedSize _connectivity_types_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> network_boundaries_;
    ::google::protobuf::internal::CachedSize _network_boundaries_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField<std::string> providers_;
    ::google::protobuf::RepeatedField<::int32_t> snmp_speeds_;
    ::google::protobuf::internal::CachedSize _snmp_speeds_cached_byte_size_;
    ::google::protobuf::RepeatedField<int> ip_types_;
    ::google::protobuf::internal::CachedSize _ip_types_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr text_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class InterfaceClassification final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.InterfaceClassification) */ {
 public:
  inline InterfaceClassification() : InterfaceClassification(nullptr) {}
  ~InterfaceClassification() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InterfaceClassification* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InterfaceClassification));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InterfaceClassification(
      ::google::protobuf::internal::ConstantInitialized);

  inline InterfaceClassification(const InterfaceClassification& from) : InterfaceClassification(nullptr, from) {}
  inline InterfaceClassification(InterfaceClassification&& from) noexcept
      : InterfaceClassification(nullptr, std::move(from)) {}
  inline InterfaceClassification& operator=(const InterfaceClassification& from) {
    CopyFrom(from);
    return *this;
  }
  inline InterfaceClassification& operator=(InterfaceClassification&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InterfaceClassification& default_instance() {
    return *internal_default_instance();
  }
  static inline const InterfaceClassification* internal_default_instance() {
    return reinterpret_cast<const InterfaceClassification*>(
        &_InterfaceClassification_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(InterfaceClassification& a, InterfaceClassification& b) { a.Swap(&b); }
  inline void Swap(InterfaceClassification* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InterfaceClassification* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InterfaceClassification* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InterfaceClassification>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InterfaceClassification& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InterfaceClassification& from) { InterfaceClassification::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InterfaceClassification* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.InterfaceClassification"; }

 protected:
  explicit InterfaceClassification(::google::protobuf::Arena* arena);
  InterfaceClassification(::google::protobuf::Arena* arena, const InterfaceClassification& from);
  InterfaceClassification(::google::protobuf::Arena* arena, InterfaceClassification&& from) noexcept
      : InterfaceClassification(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kClassifiedFieldNumber = 1,
    kConnectivityTypeFieldNumber = 2,
    kNetworkBoundaryFieldNumber = 3,
  };
  // bool classified = 1 [json_name = "classified"];
  void clear_classified() ;
  bool classified() const;
  void set_classified(bool value);

  private:
  bool _internal_classified() const;
  void _internal_set_classified(bool value);

  public:
  // .kentik.interface.v202108alpha1.ConnectivityType connectivity_type = 2 [json_name = "connectivityType"];
  void clear_connectivity_type() ;
  ::kentik::interface::v202108alpha1::ConnectivityType connectivity_type() const;
  void set_connectivity_type(::kentik::interface::v202108alpha1::ConnectivityType value);

  private:
  ::kentik::interface::v202108alpha1::ConnectivityType _internal_connectivity_type() const;
  void _internal_set_connectivity_type(::kentik::interface::v202108alpha1::ConnectivityType value);

  public:
  // .kentik.interface.v202108alpha1.NetworkBoundary network_boundary = 3 [json_name = "networkBoundary"];
  void clear_network_boundary() ;
  ::kentik::interface::v202108alpha1::NetworkBoundary network_boundary() const;
  void set_network_boundary(::kentik::interface::v202108alpha1::NetworkBoundary value);

  private:
  ::kentik::interface::v202108alpha1::NetworkBoundary _internal_network_boundary() const;
  void _internal_set_network_boundary(::kentik::interface::v202108alpha1::NetworkBoundary value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.InterfaceClassification)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InterfaceClassification& from_msg);
    bool classified_;
    int connectivity_type_;
    int network_boundary_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class Interface_VrfEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Interface_VrfEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Interface_VrfEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Interface_VrfEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Interface_VrfEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Interface_VrfEntry_DoNotUse*>(
        &_Interface_VrfEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      66, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class Interface_InterfaceTagsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Interface_InterfaceTagsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Interface_InterfaceTagsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Interface_InterfaceTagsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Interface_InterfaceTagsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Interface_InterfaceTagsEntry_DoNotUse*>(
        &_Interface_InterfaceTagsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      76, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class Interface_InterfaceKvsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Interface_InterfaceKvsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Interface_InterfaceKvsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Interface_InterfaceKvsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Interface_InterfaceKvsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Interface_InterfaceKvsEntry_DoNotUse*>(
        &_Interface_InterfaceKvsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      75, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class Interface_ExtraInfoEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Interface_ExtraInfoEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Interface_ExtraInfoEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Interface_ExtraInfoEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Interface_ExtraInfoEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Interface_ExtraInfoEntry_DoNotUse*>(
        &_Interface_ExtraInfoEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      72, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class GetInterfaceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.GetInterfaceRequest) */ {
 public:
  inline GetInterfaceRequest() : GetInterfaceRequest(nullptr) {}
  ~GetInterfaceRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetInterfaceRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetInterfaceRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetInterfaceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetInterfaceRequest(const GetInterfaceRequest& from) : GetInterfaceRequest(nullptr, from) {}
  inline GetInterfaceRequest(GetInterfaceRequest&& from) noexcept
      : GetInterfaceRequest(nullptr, std::move(from)) {}
  inline GetInterfaceRequest& operator=(const GetInterfaceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetInterfaceRequest& operator=(GetInterfaceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetInterfaceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetInterfaceRequest* internal_default_instance() {
    return reinterpret_cast<const GetInterfaceRequest*>(
        &_GetInterfaceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(GetInterfaceRequest& a, GetInterfaceRequest& b) { a.Swap(&b); }
  inline void Swap(GetInterfaceRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetInterfaceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetInterfaceRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetInterfaceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetInterfaceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetInterfaceRequest& from) { GetInterfaceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetInterfaceRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.GetInterfaceRequest"; }

 protected:
  explicit GetInterfaceRequest(::google::protobuf::Arena* arena);
  GetInterfaceRequest(::google::protobuf::Arena* arena, const GetInterfaceRequest& from);
  GetInterfaceRequest(::google::protobuf::Arena* arena, GetInterfaceRequest&& from) noexcept
      : GetInterfaceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.GetInterfaceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetInterfaceRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class DeviceFilter final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.DeviceFilter) */ {
 public:
  inline DeviceFilter() : DeviceFilter(nullptr) {}
  ~DeviceFilter() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeviceFilter* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeviceFilter));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeviceFilter(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeviceFilter(const DeviceFilter& from) : DeviceFilter(nullptr, from) {}
  inline DeviceFilter(DeviceFilter&& from) noexcept
      : DeviceFilter(nullptr, std::move(from)) {}
  inline DeviceFilter& operator=(const DeviceFilter& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceFilter& operator=(DeviceFilter&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeviceFilter& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeviceFilter* internal_default_instance() {
    return reinterpret_cast<const DeviceFilter*>(
        &_DeviceFilter_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(DeviceFilter& a, DeviceFilter& b) { a.Swap(&b); }
  inline void Swap(DeviceFilter* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceFilter* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeviceFilter* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeviceFilter>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeviceFilter& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeviceFilter& from) { DeviceFilter::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeviceFilter* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.DeviceFilter"; }

 protected:
  explicit DeviceFilter(::google::protobuf::Arena* arena);
  DeviceFilter(::google::protobuf::Arena* arena, const DeviceFilter& from);
  DeviceFilter(::google::protobuf::Arena* arena, DeviceFilter&& from) noexcept
      : DeviceFilter(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceNameFieldNumber = 2,
    kDeviceLabelsFieldNumber = 3,
    kDeviceRulesFieldNumber = 4,
    kDeviceTypesFieldNumber = 5,
    kAllDevicesFieldNumber = 1,
  };
  // repeated string device_name = 2 [json_name = "deviceName"];
  int device_name_size() const;
  private:
  int _internal_device_name_size() const;

  public:
  void clear_device_name() ;
  const std::string& device_name(int index) const;
  std::string* mutable_device_name(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_name(int index, Arg_&& value, Args_... args);
  std::string* add_device_name();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_device_name(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& device_name() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_device_name();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_device_name() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_device_name();

  public:
  // repeated string device_labels = 3 [json_name = "deviceLabels"];
  int device_labels_size() const;
  private:
  int _internal_device_labels_size() const;

  public:
  void clear_device_labels() ;
  const std::string& device_labels(int index) const;
  std::string* mutable_device_labels(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_labels(int index, Arg_&& value, Args_... args);
  std::string* add_device_labels();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_device_labels(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& device_labels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_device_labels();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_device_labels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_device_labels();

  public:
  // repeated string device_rules = 4 [json_name = "deviceRules"];
  int device_rules_size() const;
  private:
  int _internal_device_rules_size() const;

  public:
  void clear_device_rules() ;
  const std::string& device_rules(int index) const;
  std::string* mutable_device_rules(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_rules(int index, Arg_&& value, Args_... args);
  std::string* add_device_rules();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_device_rules(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& device_rules() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_device_rules();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_device_rules() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_device_rules();

  public:
  // repeated string device_types = 5 [json_name = "deviceTypes"];
  int device_types_size() const;
  private:
  int _internal_device_types_size() const;

  public:
  void clear_device_types() ;
  const std::string& device_types(int index) const;
  std::string* mutable_device_types(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_types(int index, Arg_&& value, Args_... args);
  std::string* add_device_types();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_device_types(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& device_types() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_device_types();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_device_types() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_device_types();

  public:
  // bool all_devices = 1 [json_name = "allDevices"];
  void clear_all_devices() ;
  bool all_devices() const;
  void set_all_devices(bool value);

  private:
  bool _internal_all_devices() const;
  void _internal_set_all_devices(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.DeviceFilter)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      100, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeviceFilter& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> device_name_;
    ::google::protobuf::RepeatedPtrField<std::string> device_labels_;
    ::google::protobuf::RepeatedPtrField<std::string> device_rules_;
    ::google::protobuf::RepeatedPtrField<std::string> device_types_;
    bool all_devices_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class DeleteInterfaceResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.DeleteInterfaceResponse) */ {
 public:
  inline DeleteInterfaceResponse() : DeleteInterfaceResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteInterfaceResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteInterfaceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteInterfaceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteInterfaceResponse(const DeleteInterfaceResponse& from) : DeleteInterfaceResponse(nullptr, from) {}
  inline DeleteInterfaceResponse(DeleteInterfaceResponse&& from) noexcept
      : DeleteInterfaceResponse(nullptr, std::move(from)) {}
  inline DeleteInterfaceResponse& operator=(const DeleteInterfaceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteInterfaceResponse& operator=(DeleteInterfaceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteInterfaceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteInterfaceResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteInterfaceResponse*>(
        &_DeleteInterfaceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(DeleteInterfaceResponse& a, DeleteInterfaceResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteInterfaceResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteInterfaceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteInterfaceResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeleteInterfaceResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeleteInterfaceResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeleteInterfaceResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.DeleteInterfaceResponse"; }

 protected:
  explicit DeleteInterfaceResponse(::google::protobuf::Arena* arena);
  DeleteInterfaceResponse(::google::protobuf::Arena* arena, const DeleteInterfaceResponse& from);
  DeleteInterfaceResponse(::google::protobuf::Arena* arena, DeleteInterfaceResponse&& from) noexcept
      : DeleteInterfaceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.DeleteInterfaceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteInterfaceResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class DeleteInterfaceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.DeleteInterfaceRequest) */ {
 public:
  inline DeleteInterfaceRequest() : DeleteInterfaceRequest(nullptr) {}
  ~DeleteInterfaceRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteInterfaceRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteInterfaceRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteInterfaceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteInterfaceRequest(const DeleteInterfaceRequest& from) : DeleteInterfaceRequest(nullptr, from) {}
  inline DeleteInterfaceRequest(DeleteInterfaceRequest&& from) noexcept
      : DeleteInterfaceRequest(nullptr, std::move(from)) {}
  inline DeleteInterfaceRequest& operator=(const DeleteInterfaceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteInterfaceRequest& operator=(DeleteInterfaceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteInterfaceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteInterfaceRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteInterfaceRequest*>(
        &_DeleteInterfaceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(DeleteInterfaceRequest& a, DeleteInterfaceRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteInterfaceRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteInterfaceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteInterfaceRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteInterfaceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteInterfaceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteInterfaceRequest& from) { DeleteInterfaceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteInterfaceRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.DeleteInterfaceRequest"; }

 protected:
  explicit DeleteInterfaceRequest(::google::protobuf::Arena* arena);
  DeleteInterfaceRequest(::google::protobuf::Arena* arena, const DeleteInterfaceRequest& from);
  DeleteInterfaceRequest(::google::protobuf::Arena* arena, DeleteInterfaceRequest&& from) noexcept
      : DeleteInterfaceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.DeleteInterfaceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      64, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteInterfaceRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class ClassifyCounter final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.ClassifyCounter) */ {
 public:
  inline ClassifyCounter() : ClassifyCounter(nullptr) {}
  ~ClassifyCounter() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClassifyCounter* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClassifyCounter));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClassifyCounter(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClassifyCounter(const ClassifyCounter& from) : ClassifyCounter(nullptr, from) {}
  inline ClassifyCounter(ClassifyCounter&& from) noexcept
      : ClassifyCounter(nullptr, std::move(from)) {}
  inline ClassifyCounter& operator=(const ClassifyCounter& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClassifyCounter& operator=(ClassifyCounter&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClassifyCounter& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClassifyCounter* internal_default_instance() {
    return reinterpret_cast<const ClassifyCounter*>(
        &_ClassifyCounter_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ClassifyCounter& a, ClassifyCounter& b) { a.Swap(&b); }
  inline void Swap(ClassifyCounter* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClassifyCounter* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClassifyCounter* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClassifyCounter>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClassifyCounter& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClassifyCounter& from) { ClassifyCounter::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClassifyCounter* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.ClassifyCounter"; }

 protected:
  explicit ClassifyCounter(::google::protobuf::Arena* arena);
  ClassifyCounter(::google::protobuf::Arena* arena, const ClassifyCounter& from);
  ClassifyCounter(::google::protobuf::Arena* arena, ClassifyCounter&& from) noexcept
      : ClassifyCounter(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCountFieldNumber = 1,
    kExternalCountFieldNumber = 2,
    kFreePniCountFieldNumber = 3,
    kIxCountFieldNumber = 4,
    kProviderCountFieldNumber = 5,
    kTransitCountFieldNumber = 6,
  };
  // int32 count = 1 [json_name = "count"];
  void clear_count() ;
  ::int32_t count() const;
  void set_count(::int32_t value);

  private:
  ::int32_t _internal_count() const;
  void _internal_set_count(::int32_t value);

  public:
  // int32 external_count = 2 [json_name = "externalCount"];
  void clear_external_count() ;
  ::int32_t external_count() const;
  void set_external_count(::int32_t value);

  private:
  ::int32_t _internal_external_count() const;
  void _internal_set_external_count(::int32_t value);

  public:
  // int32 free_pni_count = 3 [json_name = "freePniCount"];
  void clear_free_pni_count() ;
  ::int32_t free_pni_count() const;
  void set_free_pni_count(::int32_t value);

  private:
  ::int32_t _internal_free_pni_count() const;
  void _internal_set_free_pni_count(::int32_t value);

  public:
  // int32 ix_count = 4 [json_name = "ixCount"];
  void clear_ix_count() ;
  ::int32_t ix_count() const;
  void set_ix_count(::int32_t value);

  private:
  ::int32_t _internal_ix_count() const;
  void _internal_set_ix_count(::int32_t value);

  public:
  // int32 provider_count = 5 [json_name = "providerCount"];
  void clear_provider_count() ;
  ::int32_t provider_count() const;
  void set_provider_count(::int32_t value);

  private:
  ::int32_t _internal_provider_count() const;
  void _internal_set_provider_count(::int32_t value);

  public:
  // int32 transit_count = 6 [json_name = "transitCount"];
  void clear_transit_count() ;
  ::int32_t transit_count() const;
  void set_transit_count(::int32_t value);

  private:
  ::int32_t _internal_transit_count() const;
  void _internal_set_transit_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.ClassifyCounter)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClassifyCounter& from_msg);
    ::int32_t count_;
    ::int32_t external_count_;
    ::int32_t free_pni_count_;
    ::int32_t ix_count_;
    ::int32_t provider_count_;
    ::int32_t transit_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class AutoClassifyRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.AutoClassifyRequest) */ {
 public:
  inline AutoClassifyRequest() : AutoClassifyRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AutoClassifyRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AutoClassifyRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AutoClassifyRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AutoClassifyRequest(const AutoClassifyRequest& from) : AutoClassifyRequest(nullptr, from) {}
  inline AutoClassifyRequest(AutoClassifyRequest&& from) noexcept
      : AutoClassifyRequest(nullptr, std::move(from)) {}
  inline AutoClassifyRequest& operator=(const AutoClassifyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutoClassifyRequest& operator=(AutoClassifyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AutoClassifyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AutoClassifyRequest* internal_default_instance() {
    return reinterpret_cast<const AutoClassifyRequest*>(
        &_AutoClassifyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(AutoClassifyRequest& a, AutoClassifyRequest& b) { a.Swap(&b); }
  inline void Swap(AutoClassifyRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AutoClassifyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AutoClassifyRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<AutoClassifyRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const AutoClassifyRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const AutoClassifyRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.AutoClassifyRequest"; }

 protected:
  explicit AutoClassifyRequest(::google::protobuf::Arena* arena);
  AutoClassifyRequest(::google::protobuf::Arena* arena, const AutoClassifyRequest& from);
  AutoClassifyRequest(::google::protobuf::Arena* arena, AutoClassifyRequest&& from) noexcept
      : AutoClassifyRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.AutoClassifyRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AutoClassifyRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class Action final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.Action) */ {
 public:
  inline Action() : Action(nullptr) {}
  ~Action() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Action* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Action));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Action(
      ::google::protobuf::internal::ConstantInitialized);

  inline Action(const Action& from) : Action(nullptr, from) {}
  inline Action(Action&& from) noexcept
      : Action(nullptr, std::move(from)) {}
  inline Action& operator=(const Action& from) {
    CopyFrom(from);
    return *this;
  }
  inline Action& operator=(Action&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Action& default_instance() {
    return *internal_default_instance();
  }
  static inline const Action* internal_default_instance() {
    return reinterpret_cast<const Action*>(
        &_Action_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(Action& a, Action& b) { a.Swap(&b); }
  inline void Swap(Action* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Action* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Action* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Action>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Action& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Action& from) { Action::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Action* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.Action"; }

 protected:
  explicit Action(::google::protobuf::Arena* arena);
  Action(::google::protobuf::Arena* arena, const Action& from);
  Action(::google::protobuf::Arena* arena, Action&& from) noexcept
      : Action(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSetConnectedAsnsFieldNumber = 3,
    kSetProviderFieldNumber = 4,
    kSetConnectivityTypeFieldNumber = 1,
    kSetNetworkBoundaryFieldNumber = 2,
  };
  // string set_connected_asns = 3 [json_name = "setConnectedAsns"];
  void clear_set_connected_asns() ;
  const std::string& set_connected_asns() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_set_connected_asns(Arg_&& arg, Args_... args);
  std::string* mutable_set_connected_asns();
  PROTOBUF_NODISCARD std::string* release_set_connected_asns();
  void set_allocated_set_connected_asns(std::string* value);

  private:
  const std::string& _internal_set_connected_asns() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_set_connected_asns(
      const std::string& value);
  std::string* _internal_mutable_set_connected_asns();

  public:
  // string set_provider = 4 [json_name = "setProvider"];
  void clear_set_provider() ;
  const std::string& set_provider() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_set_provider(Arg_&& arg, Args_... args);
  std::string* mutable_set_provider();
  PROTOBUF_NODISCARD std::string* release_set_provider();
  void set_allocated_set_provider(std::string* value);

  private:
  const std::string& _internal_set_provider() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_set_provider(
      const std::string& value);
  std::string* _internal_mutable_set_provider();

  public:
  // .kentik.interface.v202108alpha1.ConnectivityType set_connectivity_type = 1 [json_name = "setConnectivityType"];
  void clear_set_connectivity_type() ;
  ::kentik::interface::v202108alpha1::ConnectivityType set_connectivity_type() const;
  void set_set_connectivity_type(::kentik::interface::v202108alpha1::ConnectivityType value);

  private:
  ::kentik::interface::v202108alpha1::ConnectivityType _internal_set_connectivity_type() const;
  void _internal_set_set_connectivity_type(::kentik::interface::v202108alpha1::ConnectivityType value);

  public:
  // .kentik.interface.v202108alpha1.NetworkBoundary set_network_boundary = 2 [json_name = "setNetworkBoundary"];
  void clear_set_network_boundary() ;
  ::kentik::interface::v202108alpha1::NetworkBoundary set_network_boundary() const;
  void set_set_network_boundary(::kentik::interface::v202108alpha1::NetworkBoundary value);

  private:
  ::kentik::interface::v202108alpha1::NetworkBoundary _internal_set_network_boundary() const;
  void _internal_set_set_network_boundary(::kentik::interface::v202108alpha1::NetworkBoundary value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.Action)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      76, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Action& from_msg);
    ::google::protobuf::internal::ArenaStringPtr set_connected_asns_;
    ::google::protobuf::internal::ArenaStringPtr set_provider_;
    int set_connectivity_type_;
    int set_network_boundary_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class Rule final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.Rule) */ {
 public:
  inline Rule() : Rule(nullptr) {}
  ~Rule() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Rule* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Rule));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Rule(
      ::google::protobuf::internal::ConstantInitialized);

  inline Rule(const Rule& from) : Rule(nullptr, from) {}
  inline Rule(Rule&& from) noexcept
      : Rule(nullptr, std::move(from)) {}
  inline Rule& operator=(const Rule& from) {
    CopyFrom(from);
    return *this;
  }
  inline Rule& operator=(Rule&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Rule& default_instance() {
    return *internal_default_instance();
  }
  static inline const Rule* internal_default_instance() {
    return reinterpret_cast<const Rule*>(
        &_Rule_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(Rule& a, Rule& b) { a.Swap(&b); }
  inline void Swap(Rule* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Rule* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Rule* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Rule>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Rule& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Rule& from) { Rule::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Rule* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.Rule"; }

 protected:
  explicit Rule(::google::protobuf::Arena* arena);
  Rule(::google::protobuf::Arena* arena, const Rule& from);
  Rule(::google::protobuf::Arena* arena, Rule&& from) noexcept
      : Rule(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kMatchClauseFieldNumber = 4,
    kActionSetFieldNumber = 5,
    kCdateFieldNumber = 6,
    kEdateFieldNumber = 7,
    kIncludedDevicesFieldNumber = 8,
    kExcludedDevicesFieldNumber = 9,
    kEnabledFieldNumber = 2,
    kRankFieldNumber = 3,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // .kentik.interface.v202108alpha1.Match match_clause = 4 [json_name = "matchClause"];
  bool has_match_clause() const;
  void clear_match_clause() ;
  const ::kentik::interface::v202108alpha1::Match& match_clause() const;
  PROTOBUF_NODISCARD ::kentik::interface::v202108alpha1::Match* release_match_clause();
  ::kentik::interface::v202108alpha1::Match* mutable_match_clause();
  void set_allocated_match_clause(::kentik::interface::v202108alpha1::Match* value);
  void unsafe_arena_set_allocated_match_clause(::kentik::interface::v202108alpha1::Match* value);
  ::kentik::interface::v202108alpha1::Match* unsafe_arena_release_match_clause();

  private:
  const ::kentik::interface::v202108alpha1::Match& _internal_match_clause() const;
  ::kentik::interface::v202108alpha1::Match* _internal_mutable_match_clause();

  public:
  // .kentik.interface.v202108alpha1.Action action_set = 5 [json_name = "actionSet"];
  bool has_action_set() const;
  void clear_action_set() ;
  const ::kentik::interface::v202108alpha1::Action& action_set() const;
  PROTOBUF_NODISCARD ::kentik::interface::v202108alpha1::Action* release_action_set();
  ::kentik::interface::v202108alpha1::Action* mutable_action_set();
  void set_allocated_action_set(::kentik::interface::v202108alpha1::Action* value);
  void unsafe_arena_set_allocated_action_set(::kentik::interface::v202108alpha1::Action* value);
  ::kentik::interface::v202108alpha1::Action* unsafe_arena_release_action_set();

  private:
  const ::kentik::interface::v202108alpha1::Action& _internal_action_set() const;
  ::kentik::interface::v202108alpha1::Action* _internal_mutable_action_set();

  public:
  // .google.protobuf.Timestamp cdate = 6 [json_name = "cdate"];
  bool has_cdate() const;
  void clear_cdate() ;
  const ::google::protobuf::Timestamp& cdate() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_cdate();
  ::google::protobuf::Timestamp* mutable_cdate();
  void set_allocated_cdate(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_cdate(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_cdate();

  private:
  const ::google::protobuf::Timestamp& _internal_cdate() const;
  ::google::protobuf::Timestamp* _internal_mutable_cdate();

  public:
  // .google.protobuf.Timestamp edate = 7 [json_name = "edate"];
  bool has_edate() const;
  void clear_edate() ;
  const ::google::protobuf::Timestamp& edate() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_edate();
  ::google::protobuf::Timestamp* mutable_edate();
  void set_allocated_edate(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_edate(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_edate();

  private:
  const ::google::protobuf::Timestamp& _internal_edate() const;
  ::google::protobuf::Timestamp* _internal_mutable_edate();

  public:
  // .kentik.interface.v202108alpha1.DeviceFilter included_devices = 8 [json_name = "includedDevices"];
  bool has_included_devices() const;
  void clear_included_devices() ;
  const ::kentik::interface::v202108alpha1::DeviceFilter& included_devices() const;
  PROTOBUF_NODISCARD ::kentik::interface::v202108alpha1::DeviceFilter* release_included_devices();
  ::kentik::interface::v202108alpha1::DeviceFilter* mutable_included_devices();
  void set_allocated_included_devices(::kentik::interface::v202108alpha1::DeviceFilter* value);
  void unsafe_arena_set_allocated_included_devices(::kentik::interface::v202108alpha1::DeviceFilter* value);
  ::kentik::interface::v202108alpha1::DeviceFilter* unsafe_arena_release_included_devices();

  private:
  const ::kentik::interface::v202108alpha1::DeviceFilter& _internal_included_devices() const;
  ::kentik::interface::v202108alpha1::DeviceFilter* _internal_mutable_included_devices();

  public:
  // .kentik.interface.v202108alpha1.DeviceFilter excluded_devices = 9 [json_name = "excludedDevices"];
  bool has_excluded_devices() const;
  void clear_excluded_devices() ;
  const ::kentik::interface::v202108alpha1::DeviceFilter& excluded_devices() const;
  PROTOBUF_NODISCARD ::kentik::interface::v202108alpha1::DeviceFilter* release_excluded_devices();
  ::kentik::interface::v202108alpha1::DeviceFilter* mutable_excluded_devices();
  void set_allocated_excluded_devices(::kentik::interface::v202108alpha1::DeviceFilter* value);
  void unsafe_arena_set_allocated_excluded_devices(::kentik::interface::v202108alpha1::DeviceFilter* value);
  ::kentik::interface::v202108alpha1::DeviceFilter* unsafe_arena_release_excluded_devices();

  private:
  const ::kentik::interface::v202108alpha1::DeviceFilter& _internal_excluded_devices() const;
  ::kentik::interface::v202108alpha1::DeviceFilter* _internal_mutable_excluded_devices();

  public:
  // bool enabled = 2 [json_name = "enabled"];
  void clear_enabled() ;
  bool enabled() const;
  void set_enabled(bool value);

  private:
  bool _internal_enabled() const;
  void _internal_set_enabled(bool value);

  public:
  // int32 rank = 3 [json_name = "rank"];
  void clear_rank() ;
  ::int32_t rank() const;
  void set_rank(::int32_t value);

  private:
  ::int32_t _internal_rank() const;
  void _internal_set_rank(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.Rule)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 6,
      54, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Rule& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::kentik::interface::v202108alpha1::Match* match_clause_;
    ::kentik::interface::v202108alpha1::Action* action_set_;
    ::google::protobuf::Timestamp* cdate_;
    ::google::protobuf::Timestamp* edate_;
    ::kentik::interface::v202108alpha1::DeviceFilter* included_devices_;
    ::kentik::interface::v202108alpha1::DeviceFilter* excluded_devices_;
    bool enabled_;
    ::int32_t rank_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class ListInterfaceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.ListInterfaceRequest) */ {
 public:
  inline ListInterfaceRequest() : ListInterfaceRequest(nullptr) {}
  ~ListInterfaceRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListInterfaceRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListInterfaceRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListInterfaceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListInterfaceRequest(const ListInterfaceRequest& from) : ListInterfaceRequest(nullptr, from) {}
  inline ListInterfaceRequest(ListInterfaceRequest&& from) noexcept
      : ListInterfaceRequest(nullptr, std::move(from)) {}
  inline ListInterfaceRequest& operator=(const ListInterfaceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListInterfaceRequest& operator=(ListInterfaceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListInterfaceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListInterfaceRequest* internal_default_instance() {
    return reinterpret_cast<const ListInterfaceRequest*>(
        &_ListInterfaceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(ListInterfaceRequest& a, ListInterfaceRequest& b) { a.Swap(&b); }
  inline void Swap(ListInterfaceRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListInterfaceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListInterfaceRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListInterfaceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListInterfaceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListInterfaceRequest& from) { ListInterfaceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListInterfaceRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.ListInterfaceRequest"; }

 protected:
  explicit ListInterfaceRequest(::google::protobuf::Arena* arena);
  ListInterfaceRequest(::google::protobuf::Arena* arena, const ListInterfaceRequest& from);
  ListInterfaceRequest(::google::protobuf::Arena* arena, ListInterfaceRequest&& from) noexcept
      : ListInterfaceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFiltersFieldNumber = 1,
  };
  // .kentik.interface.v202108alpha1.InterfaceFilter filters = 1 [json_name = "filters"];
  bool has_filters() const;
  void clear_filters() ;
  const ::kentik::interface::v202108alpha1::InterfaceFilter& filters() const;
  PROTOBUF_NODISCARD ::kentik::interface::v202108alpha1::InterfaceFilter* release_filters();
  ::kentik::interface::v202108alpha1::InterfaceFilter* mutable_filters();
  void set_allocated_filters(::kentik::interface::v202108alpha1::InterfaceFilter* value);
  void unsafe_arena_set_allocated_filters(::kentik::interface::v202108alpha1::InterfaceFilter* value);
  ::kentik::interface::v202108alpha1::InterfaceFilter* unsafe_arena_release_filters();

  private:
  const ::kentik::interface::v202108alpha1::InterfaceFilter& _internal_filters() const;
  ::kentik::interface::v202108alpha1::InterfaceFilter* _internal_mutable_filters();

  public:
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.ListInterfaceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListInterfaceRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::interface::v202108alpha1::InterfaceFilter* filters_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class InterfaceClassifyInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.InterfaceClassifyInfo) */ {
 public:
  inline InterfaceClassifyInfo() : InterfaceClassifyInfo(nullptr) {}
  ~InterfaceClassifyInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InterfaceClassifyInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InterfaceClassifyInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InterfaceClassifyInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline InterfaceClassifyInfo(const InterfaceClassifyInfo& from) : InterfaceClassifyInfo(nullptr, from) {}
  inline InterfaceClassifyInfo(InterfaceClassifyInfo&& from) noexcept
      : InterfaceClassifyInfo(nullptr, std::move(from)) {}
  inline InterfaceClassifyInfo& operator=(const InterfaceClassifyInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline InterfaceClassifyInfo& operator=(InterfaceClassifyInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InterfaceClassifyInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const InterfaceClassifyInfo* internal_default_instance() {
    return reinterpret_cast<const InterfaceClassifyInfo*>(
        &_InterfaceClassifyInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(InterfaceClassifyInfo& a, InterfaceClassifyInfo& b) { a.Swap(&b); }
  inline void Swap(InterfaceClassifyInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InterfaceClassifyInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InterfaceClassifyInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InterfaceClassifyInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InterfaceClassifyInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InterfaceClassifyInfo& from) { InterfaceClassifyInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InterfaceClassifyInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.InterfaceClassifyInfo"; }

 protected:
  explicit InterfaceClassifyInfo(::google::protobuf::Arena* arena);
  InterfaceClassifyInfo(::google::protobuf::Arena* arena, const InterfaceClassifyInfo& from);
  InterfaceClassifyInfo(::google::protobuf::Arena* arena, InterfaceClassifyInfo&& from) noexcept
      : InterfaceClassifyInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTopNexthopAsnsFieldNumber = 8,
    kDeviceIdFieldNumber = 1,
    kSnmpIdFieldNumber = 2,
    kSnmpAliasFieldNumber = 3,
    kInterfaceIpFieldNumber = 4,
    kInterfaceIpAsnFieldNumber = 5,
    kPdbGlobalNameFieldNumber = 9,
    kProviderFieldNumber = 12,
    kPreviouslyClassifiedProviderFieldNumber = 17,
    kAutoClassificationFieldNumber = 10,
    kPreviousClassificationFieldNumber = 11,
    kIsInternalIpFieldNumber = 6,
    kIsInternalAsnFieldNumber = 7,
    kAutoClassifiedProviderFieldNumber = 16,
    kPreviouslyClassifiedExternalFieldNumber = 18,
    kNetworkBoundaryConfidenceFieldNumber = 13,
    kConnectivityTypeConfidenceFieldNumber = 14,
    kProviderConfidenceFieldNumber = 15,
    kIpAsnMatchedFieldNumber = 19,
    kIxMatchedFieldNumber = 20,
    kNexthopMatchedFieldNumber = 21,
    kConnectivityTypeMatchedFieldNumber = 22,
    kProviderMatchedFieldNumber = 23,
    kChangedClassificationFieldNumber = 24,
  };
  // repeated string top_nexthop_asns = 8 [json_name = "topNexthopAsns"];
  int top_nexthop_asns_size() const;
  private:
  int _internal_top_nexthop_asns_size() const;

  public:
  void clear_top_nexthop_asns() ;
  const std::string& top_nexthop_asns(int index) const;
  std::string* mutable_top_nexthop_asns(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_top_nexthop_asns(int index, Arg_&& value, Args_... args);
  std::string* add_top_nexthop_asns();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_top_nexthop_asns(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& top_nexthop_asns() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_top_nexthop_asns();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_top_nexthop_asns() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_top_nexthop_asns();

  public:
  // string device_id = 1 [json_name = "deviceId"];
  void clear_device_id() ;
  const std::string& device_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_id(Arg_&& arg, Args_... args);
  std::string* mutable_device_id();
  PROTOBUF_NODISCARD std::string* release_device_id();
  void set_allocated_device_id(std::string* value);

  private:
  const std::string& _internal_device_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_id(
      const std::string& value);
  std::string* _internal_mutable_device_id();

  public:
  // string snmp_id = 2 [json_name = "snmpId"];
  void clear_snmp_id() ;
  const std::string& snmp_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_snmp_id(Arg_&& arg, Args_... args);
  std::string* mutable_snmp_id();
  PROTOBUF_NODISCARD std::string* release_snmp_id();
  void set_allocated_snmp_id(std::string* value);

  private:
  const std::string& _internal_snmp_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_snmp_id(
      const std::string& value);
  std::string* _internal_mutable_snmp_id();

  public:
  // string snmp_alias = 3 [json_name = "snmpAlias"];
  void clear_snmp_alias() ;
  const std::string& snmp_alias() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_snmp_alias(Arg_&& arg, Args_... args);
  std::string* mutable_snmp_alias();
  PROTOBUF_NODISCARD std::string* release_snmp_alias();
  void set_allocated_snmp_alias(std::string* value);

  private:
  const std::string& _internal_snmp_alias() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_snmp_alias(
      const std::string& value);
  std::string* _internal_mutable_snmp_alias();

  public:
  // string interface_ip = 4 [json_name = "interfaceIp"];
  void clear_interface_ip() ;
  const std::string& interface_ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_interface_ip(Arg_&& arg, Args_... args);
  std::string* mutable_interface_ip();
  PROTOBUF_NODISCARD std::string* release_interface_ip();
  void set_allocated_interface_ip(std::string* value);

  private:
  const std::string& _internal_interface_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_interface_ip(
      const std::string& value);
  std::string* _internal_mutable_interface_ip();

  public:
  // string interface_ip_asn = 5 [json_name = "interfaceIpAsn"];
  void clear_interface_ip_asn() ;
  const std::string& interface_ip_asn() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_interface_ip_asn(Arg_&& arg, Args_... args);
  std::string* mutable_interface_ip_asn();
  PROTOBUF_NODISCARD std::string* release_interface_ip_asn();
  void set_allocated_interface_ip_asn(std::string* value);

  private:
  const std::string& _internal_interface_ip_asn() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_interface_ip_asn(
      const std::string& value);
  std::string* _internal_mutable_interface_ip_asn();

  public:
  // string pdb_global_name = 9 [json_name = "pdbGlobalName"];
  void clear_pdb_global_name() ;
  const std::string& pdb_global_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pdb_global_name(Arg_&& arg, Args_... args);
  std::string* mutable_pdb_global_name();
  PROTOBUF_NODISCARD std::string* release_pdb_global_name();
  void set_allocated_pdb_global_name(std::string* value);

  private:
  const std::string& _internal_pdb_global_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pdb_global_name(
      const std::string& value);
  std::string* _internal_mutable_pdb_global_name();

  public:
  // string provider = 12 [json_name = "provider"];
  void clear_provider() ;
  const std::string& provider() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_provider(Arg_&& arg, Args_... args);
  std::string* mutable_provider();
  PROTOBUF_NODISCARD std::string* release_provider();
  void set_allocated_provider(std::string* value);

  private:
  const std::string& _internal_provider() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_provider(
      const std::string& value);
  std::string* _internal_mutable_provider();

  public:
  // string previously_classified_provider = 17 [json_name = "previouslyClassifiedProvider"];
  void clear_previously_classified_provider() ;
  const std::string& previously_classified_provider() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_previously_classified_provider(Arg_&& arg, Args_... args);
  std::string* mutable_previously_classified_provider();
  PROTOBUF_NODISCARD std::string* release_previously_classified_provider();
  void set_allocated_previously_classified_provider(std::string* value);

  private:
  const std::string& _internal_previously_classified_provider() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_previously_classified_provider(
      const std::string& value);
  std::string* _internal_mutable_previously_classified_provider();

  public:
  // .kentik.interface.v202108alpha1.InterfaceClassification auto_classification = 10 [json_name = "autoClassification"];
  bool has_auto_classification() const;
  void clear_auto_classification() ;
  const ::kentik::interface::v202108alpha1::InterfaceClassification& auto_classification() const;
  PROTOBUF_NODISCARD ::kentik::interface::v202108alpha1::InterfaceClassification* release_auto_classification();
  ::kentik::interface::v202108alpha1::InterfaceClassification* mutable_auto_classification();
  void set_allocated_auto_classification(::kentik::interface::v202108alpha1::InterfaceClassification* value);
  void unsafe_arena_set_allocated_auto_classification(::kentik::interface::v202108alpha1::InterfaceClassification* value);
  ::kentik::interface::v202108alpha1::InterfaceClassification* unsafe_arena_release_auto_classification();

  private:
  const ::kentik::interface::v202108alpha1::InterfaceClassification& _internal_auto_classification() const;
  ::kentik::interface::v202108alpha1::InterfaceClassification* _internal_mutable_auto_classification();

  public:
  // .kentik.interface.v202108alpha1.InterfaceClassification previous_classification = 11 [json_name = "previousClassification"];
  bool has_previous_classification() const;
  void clear_previous_classification() ;
  const ::kentik::interface::v202108alpha1::InterfaceClassification& previous_classification() const;
  PROTOBUF_NODISCARD ::kentik::interface::v202108alpha1::InterfaceClassification* release_previous_classification();
  ::kentik::interface::v202108alpha1::InterfaceClassification* mutable_previous_classification();
  void set_allocated_previous_classification(::kentik::interface::v202108alpha1::InterfaceClassification* value);
  void unsafe_arena_set_allocated_previous_classification(::kentik::interface::v202108alpha1::InterfaceClassification* value);
  ::kentik::interface::v202108alpha1::InterfaceClassification* unsafe_arena_release_previous_classification();

  private:
  const ::kentik::interface::v202108alpha1::InterfaceClassification& _internal_previous_classification() const;
  ::kentik::interface::v202108alpha1::InterfaceClassification* _internal_mutable_previous_classification();

  public:
  // bool is_internal_ip = 6 [json_name = "isInternalIp"];
  void clear_is_internal_ip() ;
  bool is_internal_ip() const;
  void set_is_internal_ip(bool value);

  private:
  bool _internal_is_internal_ip() const;
  void _internal_set_is_internal_ip(bool value);

  public:
  // bool is_internal_asn = 7 [json_name = "isInternalAsn"];
  void clear_is_internal_asn() ;
  bool is_internal_asn() const;
  void set_is_internal_asn(bool value);

  private:
  bool _internal_is_internal_asn() const;
  void _internal_set_is_internal_asn(bool value);

  public:
  // bool auto_classified_provider = 16 [json_name = "autoClassifiedProvider"];
  void clear_auto_classified_provider() ;
  bool auto_classified_provider() const;
  void set_auto_classified_provider(bool value);

  private:
  bool _internal_auto_classified_provider() const;
  void _internal_set_auto_classified_provider(bool value);

  public:
  // bool previously_classified_external = 18 [json_name = "previouslyClassifiedExternal"];
  void clear_previously_classified_external() ;
  bool previously_classified_external() const;
  void set_previously_classified_external(bool value);

  private:
  bool _internal_previously_classified_external() const;
  void _internal_set_previously_classified_external(bool value);

  public:
  // int32 network_boundary_confidence = 13 [json_name = "networkBoundaryConfidence"];
  void clear_network_boundary_confidence() ;
  ::int32_t network_boundary_confidence() const;
  void set_network_boundary_confidence(::int32_t value);

  private:
  ::int32_t _internal_network_boundary_confidence() const;
  void _internal_set_network_boundary_confidence(::int32_t value);

  public:
  // int32 connectivity_type_confidence = 14 [json_name = "connectivityTypeConfidence"];
  void clear_connectivity_type_confidence() ;
  ::int32_t connectivity_type_confidence() const;
  void set_connectivity_type_confidence(::int32_t value);

  private:
  ::int32_t _internal_connectivity_type_confidence() const;
  void _internal_set_connectivity_type_confidence(::int32_t value);

  public:
  // int32 provider_confidence = 15 [json_name = "providerConfidence"];
  void clear_provider_confidence() ;
  ::int32_t provider_confidence() const;
  void set_provider_confidence(::int32_t value);

  private:
  ::int32_t _internal_provider_confidence() const;
  void _internal_set_provider_confidence(::int32_t value);

  public:
  // bool ip_asn_matched = 19 [json_name = "ipAsnMatched"];
  void clear_ip_asn_matched() ;
  bool ip_asn_matched() const;
  void set_ip_asn_matched(bool value);

  private:
  bool _internal_ip_asn_matched() const;
  void _internal_set_ip_asn_matched(bool value);

  public:
  // bool ix_matched = 20 [json_name = "ixMatched"];
  void clear_ix_matched() ;
  bool ix_matched() const;
  void set_ix_matched(bool value);

  private:
  bool _internal_ix_matched() const;
  void _internal_set_ix_matched(bool value);

  public:
  // bool nexthop_matched = 21 [json_name = "nexthopMatched"];
  void clear_nexthop_matched() ;
  bool nexthop_matched() const;
  void set_nexthop_matched(bool value);

  private:
  bool _internal_nexthop_matched() const;
  void _internal_set_nexthop_matched(bool value);

  public:
  // bool connectivity_type_matched = 22 [json_name = "connectivityTypeMatched"];
  void clear_connectivity_type_matched() ;
  bool connectivity_type_matched() const;
  void set_connectivity_type_matched(bool value);

  private:
  bool _internal_connectivity_type_matched() const;
  void _internal_set_connectivity_type_matched(bool value);

  public:
  // bool provider_matched = 23 [json_name = "providerMatched"];
  void clear_provider_matched() ;
  bool provider_matched() const;
  void set_provider_matched(bool value);

  private:
  bool _internal_provider_matched() const;
  void _internal_set_provider_matched(bool value);

  public:
  // bool changed_classification = 24 [json_name = "changedClassification"];
  void clear_changed_classification() ;
  bool changed_classification() const;
  void set_changed_classification(bool value);

  private:
  bool _internal_changed_classification() const;
  void _internal_set_changed_classification(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.InterfaceClassifyInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 24, 2,
      208, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InterfaceClassifyInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> top_nexthop_asns_;
    ::google::protobuf::internal::ArenaStringPtr device_id_;
    ::google::protobuf::internal::ArenaStringPtr snmp_id_;
    ::google::protobuf::internal::ArenaStringPtr snmp_alias_;
    ::google::protobuf::internal::ArenaStringPtr interface_ip_;
    ::google::protobuf::internal::ArenaStringPtr interface_ip_asn_;
    ::google::protobuf::internal::ArenaStringPtr pdb_global_name_;
    ::google::protobuf::internal::ArenaStringPtr provider_;
    ::google::protobuf::internal::ArenaStringPtr previously_classified_provider_;
    ::kentik::interface::v202108alpha1::InterfaceClassification* auto_classification_;
    ::kentik::interface::v202108alpha1::InterfaceClassification* previous_classification_;
    bool is_internal_ip_;
    bool is_internal_asn_;
    bool auto_classified_provider_;
    bool previously_classified_external_;
    ::int32_t network_boundary_confidence_;
    ::int32_t connectivity_type_confidence_;
    ::int32_t provider_confidence_;
    bool ip_asn_matched_;
    bool ix_matched_;
    bool nexthop_matched_;
    bool connectivity_type_matched_;
    bool provider_matched_;
    bool changed_classification_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class Interface final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.Interface) */ {
 public:
  inline Interface() : Interface(nullptr) {}
  ~Interface() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Interface* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Interface));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Interface(
      ::google::protobuf::internal::ConstantInitialized);

  inline Interface(const Interface& from) : Interface(nullptr, from) {}
  inline Interface(Interface&& from) noexcept
      : Interface(nullptr, std::move(from)) {}
  inline Interface& operator=(const Interface& from) {
    CopyFrom(from);
    return *this;
  }
  inline Interface& operator=(Interface&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Interface& default_instance() {
    return *internal_default_instance();
  }
  static inline const Interface* internal_default_instance() {
    return reinterpret_cast<const Interface*>(
        &_Interface_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Interface& a, Interface& b) { a.Swap(&b); }
  inline void Swap(Interface* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Interface* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Interface* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Interface>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Interface& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Interface& from) { Interface::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Interface* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.Interface"; }

 protected:
  explicit Interface(::google::protobuf::Arena* arena);
  Interface(::google::protobuf::Arena* arena, const Interface& from);
  Interface(::google::protobuf::Arena* arena, Interface&& from) noexcept
      : Interface(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTopNexthopAsnsFieldNumber = 14,
    kInterfaceKvsFieldNumber = 16,
    kInterfaceTagsFieldNumber = 17,
    kExtraInfoFieldNumber = 19,
    kVrfFieldNumber = 29,
    kIdFieldNumber = 1,
    kDeviceIdFieldNumber = 2,
    kSnmpIdFieldNumber = 3,
    kSnmpAliasFieldNumber = 6,
    kInterfaceIpFieldNumber = 7,
    kInterfaceDescriptionFieldNumber = 8,
    kInterfaceIpNetmaskFieldNumber = 11,
    kProviderFieldNumber = 15,
    kInterfaceStatusFieldNumber = 18,
    kInitialSnmpIdFieldNumber = 20,
    kInitialSnmpAliasFieldNumber = 21,
    kInitialInterfaceDescriptionFieldNumber = 22,
    kSecondaryIpsFieldNumber = 24,
    kInitialProviderFieldNumber = 27,
    kVrfIdFieldNumber = 28,
    kCdateFieldNumber = 9,
    kEdateFieldNumber = 10,
    kSnmpSpeedFieldNumber = 4,
    kSnmpTypeFieldNumber = 5,
    kConnectivityTypeFieldNumber = 12,
    kNetworkBoundaryFieldNumber = 13,
    kInitialSnmpSpeedFieldNumber = 23,
    kInitialConnectivityTypeFieldNumber = 25,
    kInitialNetworkBoundaryFieldNumber = 26,
  };
  // repeated int32 top_nexthop_asns = 14 [json_name = "topNexthopAsns"];
  int top_nexthop_asns_size() const;
  private:
  int _internal_top_nexthop_asns_size() const;

  public:
  void clear_top_nexthop_asns() ;
  ::int32_t top_nexthop_asns(int index) const;
  void set_top_nexthop_asns(int index, ::int32_t value);
  void add_top_nexthop_asns(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& top_nexthop_asns() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_top_nexthop_asns();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_top_nexthop_asns() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_top_nexthop_asns();

  public:
  // map<string, string> interface_kvs = 16 [json_name = "interfaceKvs"];
  int interface_kvs_size() const;
  private:
  int _internal_interface_kvs_size() const;

  public:
  void clear_interface_kvs() ;
  const ::google::protobuf::Map<std::string, std::string>& interface_kvs() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_interface_kvs();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_interface_kvs() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_interface_kvs();

  public:
  // map<string, string> interface_tags = 17 [json_name = "interfaceTags"];
  int interface_tags_size() const;
  private:
  int _internal_interface_tags_size() const;

  public:
  void clear_interface_tags() ;
  const ::google::protobuf::Map<std::string, std::string>& interface_tags() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_interface_tags();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_interface_tags() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_interface_tags();

  public:
  // map<string, string> extra_info = 19 [json_name = "extraInfo"];
  int extra_info_size() const;
  private:
  int _internal_extra_info_size() const;

  public:
  void clear_extra_info() ;
  const ::google::protobuf::Map<std::string, std::string>& extra_info() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_extra_info();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_extra_info() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_extra_info();

  public:
  // map<string, string> vrf = 29 [json_name = "vrf"];
  int vrf_size() const;
  private:
  int _internal_vrf_size() const;

  public:
  void clear_vrf() ;
  const ::google::protobuf::Map<std::string, std::string>& vrf() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_vrf();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_vrf() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_vrf();

  public:
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string device_id = 2 [json_name = "deviceId"];
  void clear_device_id() ;
  const std::string& device_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_id(Arg_&& arg, Args_... args);
  std::string* mutable_device_id();
  PROTOBUF_NODISCARD std::string* release_device_id();
  void set_allocated_device_id(std::string* value);

  private:
  const std::string& _internal_device_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_id(
      const std::string& value);
  std::string* _internal_mutable_device_id();

  public:
  // string snmp_id = 3 [json_name = "snmpId"];
  void clear_snmp_id() ;
  const std::string& snmp_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_snmp_id(Arg_&& arg, Args_... args);
  std::string* mutable_snmp_id();
  PROTOBUF_NODISCARD std::string* release_snmp_id();
  void set_allocated_snmp_id(std::string* value);

  private:
  const std::string& _internal_snmp_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_snmp_id(
      const std::string& value);
  std::string* _internal_mutable_snmp_id();

  public:
  // string snmp_alias = 6 [json_name = "snmpAlias"];
  void clear_snmp_alias() ;
  const std::string& snmp_alias() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_snmp_alias(Arg_&& arg, Args_... args);
  std::string* mutable_snmp_alias();
  PROTOBUF_NODISCARD std::string* release_snmp_alias();
  void set_allocated_snmp_alias(std::string* value);

  private:
  const std::string& _internal_snmp_alias() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_snmp_alias(
      const std::string& value);
  std::string* _internal_mutable_snmp_alias();

  public:
  // string interface_ip = 7 [json_name = "interfaceIp"];
  void clear_interface_ip() ;
  const std::string& interface_ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_interface_ip(Arg_&& arg, Args_... args);
  std::string* mutable_interface_ip();
  PROTOBUF_NODISCARD std::string* release_interface_ip();
  void set_allocated_interface_ip(std::string* value);

  private:
  const std::string& _internal_interface_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_interface_ip(
      const std::string& value);
  std::string* _internal_mutable_interface_ip();

  public:
  // string interface_description = 8 [json_name = "interfaceDescription"];
  void clear_interface_description() ;
  const std::string& interface_description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_interface_description(Arg_&& arg, Args_... args);
  std::string* mutable_interface_description();
  PROTOBUF_NODISCARD std::string* release_interface_description();
  void set_allocated_interface_description(std::string* value);

  private:
  const std::string& _internal_interface_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_interface_description(
      const std::string& value);
  std::string* _internal_mutable_interface_description();

  public:
  // string interface_ip_netmask = 11 [json_name = "interfaceIpNetmask"];
  void clear_interface_ip_netmask() ;
  const std::string& interface_ip_netmask() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_interface_ip_netmask(Arg_&& arg, Args_... args);
  std::string* mutable_interface_ip_netmask();
  PROTOBUF_NODISCARD std::string* release_interface_ip_netmask();
  void set_allocated_interface_ip_netmask(std::string* value);

  private:
  const std::string& _internal_interface_ip_netmask() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_interface_ip_netmask(
      const std::string& value);
  std::string* _internal_mutable_interface_ip_netmask();

  public:
  // string provider = 15 [json_name = "provider"];
  void clear_provider() ;
  const std::string& provider() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_provider(Arg_&& arg, Args_... args);
  std::string* mutable_provider();
  PROTOBUF_NODISCARD std::string* release_provider();
  void set_allocated_provider(std::string* value);

  private:
  const std::string& _internal_provider() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_provider(
      const std::string& value);
  std::string* _internal_mutable_provider();

  public:
  // string interface_status = 18 [json_name = "interfaceStatus"];
  void clear_interface_status() ;
  const std::string& interface_status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_interface_status(Arg_&& arg, Args_... args);
  std::string* mutable_interface_status();
  PROTOBUF_NODISCARD std::string* release_interface_status();
  void set_allocated_interface_status(std::string* value);

  private:
  const std::string& _internal_interface_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_interface_status(
      const std::string& value);
  std::string* _internal_mutable_interface_status();

  public:
  // string initial_snmp_id = 20 [json_name = "initialSnmpId"];
  void clear_initial_snmp_id() ;
  const std::string& initial_snmp_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_initial_snmp_id(Arg_&& arg, Args_... args);
  std::string* mutable_initial_snmp_id();
  PROTOBUF_NODISCARD std::string* release_initial_snmp_id();
  void set_allocated_initial_snmp_id(std::string* value);

  private:
  const std::string& _internal_initial_snmp_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_initial_snmp_id(
      const std::string& value);
  std::string* _internal_mutable_initial_snmp_id();

  public:
  // string initial_snmp_alias = 21 [json_name = "initialSnmpAlias"];
  void clear_initial_snmp_alias() ;
  const std::string& initial_snmp_alias() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_initial_snmp_alias(Arg_&& arg, Args_... args);
  std::string* mutable_initial_snmp_alias();
  PROTOBUF_NODISCARD std::string* release_initial_snmp_alias();
  void set_allocated_initial_snmp_alias(std::string* value);

  private:
  const std::string& _internal_initial_snmp_alias() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_initial_snmp_alias(
      const std::string& value);
  std::string* _internal_mutable_initial_snmp_alias();

  public:
  // string initial_interface_description = 22 [json_name = "initialInterfaceDescription"];
  void clear_initial_interface_description() ;
  const std::string& initial_interface_description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_initial_interface_description(Arg_&& arg, Args_... args);
  std::string* mutable_initial_interface_description();
  PROTOBUF_NODISCARD std::string* release_initial_interface_description();
  void set_allocated_initial_interface_description(std::string* value);

  private:
  const std::string& _internal_initial_interface_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_initial_interface_description(
      const std::string& value);
  std::string* _internal_mutable_initial_interface_description();

  public:
  // string secondary_ips = 24 [json_name = "secondaryIps"];
  void clear_secondary_ips() ;
  const std::string& secondary_ips() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_secondary_ips(Arg_&& arg, Args_... args);
  std::string* mutable_secondary_ips();
  PROTOBUF_NODISCARD std::string* release_secondary_ips();
  void set_allocated_secondary_ips(std::string* value);

  private:
  const std::string& _internal_secondary_ips() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_secondary_ips(
      const std::string& value);
  std::string* _internal_mutable_secondary_ips();

  public:
  // string initial_provider = 27 [json_name = "initialProvider"];
  void clear_initial_provider() ;
  const std::string& initial_provider() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_initial_provider(Arg_&& arg, Args_... args);
  std::string* mutable_initial_provider();
  PROTOBUF_NODISCARD std::string* release_initial_provider();
  void set_allocated_initial_provider(std::string* value);

  private:
  const std::string& _internal_initial_provider() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_initial_provider(
      const std::string& value);
  std::string* _internal_mutable_initial_provider();

  public:
  // string vrf_id = 28 [json_name = "vrfId"];
  void clear_vrf_id() ;
  const std::string& vrf_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_vrf_id(Arg_&& arg, Args_... args);
  std::string* mutable_vrf_id();
  PROTOBUF_NODISCARD std::string* release_vrf_id();
  void set_allocated_vrf_id(std::string* value);

  private:
  const std::string& _internal_vrf_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_vrf_id(
      const std::string& value);
  std::string* _internal_mutable_vrf_id();

  public:
  // .google.protobuf.Timestamp cdate = 9 [json_name = "cdate"];
  bool has_cdate() const;
  void clear_cdate() ;
  const ::google::protobuf::Timestamp& cdate() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_cdate();
  ::google::protobuf::Timestamp* mutable_cdate();
  void set_allocated_cdate(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_cdate(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_cdate();

  private:
  const ::google::protobuf::Timestamp& _internal_cdate() const;
  ::google::protobuf::Timestamp* _internal_mutable_cdate();

  public:
  // .google.protobuf.Timestamp edate = 10 [json_name = "edate"];
  bool has_edate() const;
  void clear_edate() ;
  const ::google::protobuf::Timestamp& edate() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_edate();
  ::google::protobuf::Timestamp* mutable_edate();
  void set_allocated_edate(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_edate(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_edate();

  private:
  const ::google::protobuf::Timestamp& _internal_edate() const;
  ::google::protobuf::Timestamp* _internal_mutable_edate();

  public:
  // int32 snmp_speed = 4 [json_name = "snmpSpeed"];
  void clear_snmp_speed() ;
  ::int32_t snmp_speed() const;
  void set_snmp_speed(::int32_t value);

  private:
  ::int32_t _internal_snmp_speed() const;
  void _internal_set_snmp_speed(::int32_t value);

  public:
  // int32 snmp_type = 5 [json_name = "snmpType"];
  void clear_snmp_type() ;
  ::int32_t snmp_type() const;
  void set_snmp_type(::int32_t value);

  private:
  ::int32_t _internal_snmp_type() const;
  void _internal_set_snmp_type(::int32_t value);

  public:
  // .kentik.interface.v202108alpha1.ConnectivityType connectivity_type = 12 [json_name = "connectivityType"];
  void clear_connectivity_type() ;
  ::kentik::interface::v202108alpha1::ConnectivityType connectivity_type() const;
  void set_connectivity_type(::kentik::interface::v202108alpha1::ConnectivityType value);

  private:
  ::kentik::interface::v202108alpha1::ConnectivityType _internal_connectivity_type() const;
  void _internal_set_connectivity_type(::kentik::interface::v202108alpha1::ConnectivityType value);

  public:
  // .kentik.interface.v202108alpha1.NetworkBoundary network_boundary = 13 [json_name = "networkBoundary"];
  void clear_network_boundary() ;
  ::kentik::interface::v202108alpha1::NetworkBoundary network_boundary() const;
  void set_network_boundary(::kentik::interface::v202108alpha1::NetworkBoundary value);

  private:
  ::kentik::interface::v202108alpha1::NetworkBoundary _internal_network_boundary() const;
  void _internal_set_network_boundary(::kentik::interface::v202108alpha1::NetworkBoundary value);

  public:
  // int32 initial_snmp_speed = 23 [json_name = "initialSnmpSpeed"];
  void clear_initial_snmp_speed() ;
  ::int32_t initial_snmp_speed() const;
  void set_initial_snmp_speed(::int32_t value);

  private:
  ::int32_t _internal_initial_snmp_speed() const;
  void _internal_set_initial_snmp_speed(::int32_t value);

  public:
  // .kentik.interface.v202108alpha1.ConnectivityType initial_connectivity_type = 25 [json_name = "initialConnectivityType"];
  void clear_initial_connectivity_type() ;
  ::kentik::interface::v202108alpha1::ConnectivityType initial_connectivity_type() const;
  void set_initial_connectivity_type(::kentik::interface::v202108alpha1::ConnectivityType value);

  private:
  ::kentik::interface::v202108alpha1::ConnectivityType _internal_initial_connectivity_type() const;
  void _internal_set_initial_connectivity_type(::kentik::interface::v202108alpha1::ConnectivityType value);

  public:
  // .kentik.interface.v202108alpha1.NetworkBoundary initial_network_boundary = 26 [json_name = "initialNetworkBoundary"];
  void clear_initial_network_boundary() ;
  ::kentik::interface::v202108alpha1::NetworkBoundary initial_network_boundary() const;
  void set_initial_network_boundary(::kentik::interface::v202108alpha1::NetworkBoundary value);

  private:
  ::kentik::interface::v202108alpha1::NetworkBoundary _internal_initial_network_boundary() const;
  void _internal_set_initial_network_boundary(::kentik::interface::v202108alpha1::NetworkBoundary value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.Interface)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 29, 6,
      315, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Interface& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> top_nexthop_asns_;
    ::google::protobuf::internal::CachedSize _top_nexthop_asns_cached_byte_size_;
    ::google::protobuf::internal::MapField<Interface_InterfaceKvsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        interface_kvs_;
    ::google::protobuf::internal::MapField<Interface_InterfaceTagsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        interface_tags_;
    ::google::protobuf::internal::MapField<Interface_ExtraInfoEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        extra_info_;
    ::google::protobuf::internal::MapField<Interface_VrfEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        vrf_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr device_id_;
    ::google::protobuf::internal::ArenaStringPtr snmp_id_;
    ::google::protobuf::internal::ArenaStringPtr snmp_alias_;
    ::google::protobuf::internal::ArenaStringPtr interface_ip_;
    ::google::protobuf::internal::ArenaStringPtr interface_description_;
    ::google::protobuf::internal::ArenaStringPtr interface_ip_netmask_;
    ::google::protobuf::internal::ArenaStringPtr provider_;
    ::google::protobuf::internal::ArenaStringPtr interface_status_;
    ::google::protobuf::internal::ArenaStringPtr initial_snmp_id_;
    ::google::protobuf::internal::ArenaStringPtr initial_snmp_alias_;
    ::google::protobuf::internal::ArenaStringPtr initial_interface_description_;
    ::google::protobuf::internal::ArenaStringPtr secondary_ips_;
    ::google::protobuf::internal::ArenaStringPtr initial_provider_;
    ::google::protobuf::internal::ArenaStringPtr vrf_id_;
    ::google::protobuf::Timestamp* cdate_;
    ::google::protobuf::Timestamp* edate_;
    ::int32_t snmp_speed_;
    ::int32_t snmp_type_;
    int connectivity_type_;
    int network_boundary_;
    ::int32_t initial_snmp_speed_;
    int initial_connectivity_type_;
    int initial_network_boundary_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class UpdateInterfaceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.UpdateInterfaceResponse) */ {
 public:
  inline UpdateInterfaceResponse() : UpdateInterfaceResponse(nullptr) {}
  ~UpdateInterfaceResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateInterfaceResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateInterfaceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateInterfaceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateInterfaceResponse(const UpdateInterfaceResponse& from) : UpdateInterfaceResponse(nullptr, from) {}
  inline UpdateInterfaceResponse(UpdateInterfaceResponse&& from) noexcept
      : UpdateInterfaceResponse(nullptr, std::move(from)) {}
  inline UpdateInterfaceResponse& operator=(const UpdateInterfaceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateInterfaceResponse& operator=(UpdateInterfaceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateInterfaceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateInterfaceResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateInterfaceResponse*>(
        &_UpdateInterfaceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(UpdateInterfaceResponse& a, UpdateInterfaceResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateInterfaceResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateInterfaceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateInterfaceResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateInterfaceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateInterfaceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateInterfaceResponse& from) { UpdateInterfaceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateInterfaceResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.UpdateInterfaceResponse"; }

 protected:
  explicit UpdateInterfaceResponse(::google::protobuf::Arena* arena);
  UpdateInterfaceResponse(::google::protobuf::Arena* arena, const UpdateInterfaceResponse& from);
  UpdateInterfaceResponse(::google::protobuf::Arena* arena, UpdateInterfaceResponse&& from) noexcept
      : UpdateInterfaceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInterfaceFieldNumber = 1,
  };
  // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
  bool has_interface() const;
  void clear_interface() ;
  const ::kentik::interface::v202108alpha1::Interface& interface() const;
  PROTOBUF_NODISCARD ::kentik::interface::v202108alpha1::Interface* release_interface();
  ::kentik::interface::v202108alpha1::Interface* mutable_interface();
  void set_allocated_interface(::kentik::interface::v202108alpha1::Interface* value);
  void unsafe_arena_set_allocated_interface(::kentik::interface::v202108alpha1::Interface* value);
  ::kentik::interface::v202108alpha1::Interface* unsafe_arena_release_interface();

  private:
  const ::kentik::interface::v202108alpha1::Interface& _internal_interface() const;
  ::kentik::interface::v202108alpha1::Interface* _internal_mutable_interface();

  public:
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.UpdateInterfaceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateInterfaceResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::interface::v202108alpha1::Interface* interface_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class UpdateInterfaceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.UpdateInterfaceRequest) */ {
 public:
  inline UpdateInterfaceRequest() : UpdateInterfaceRequest(nullptr) {}
  ~UpdateInterfaceRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateInterfaceRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateInterfaceRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateInterfaceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateInterfaceRequest(const UpdateInterfaceRequest& from) : UpdateInterfaceRequest(nullptr, from) {}
  inline UpdateInterfaceRequest(UpdateInterfaceRequest&& from) noexcept
      : UpdateInterfaceRequest(nullptr, std::move(from)) {}
  inline UpdateInterfaceRequest& operator=(const UpdateInterfaceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateInterfaceRequest& operator=(UpdateInterfaceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateInterfaceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateInterfaceRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateInterfaceRequest*>(
        &_UpdateInterfaceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(UpdateInterfaceRequest& a, UpdateInterfaceRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateInterfaceRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateInterfaceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateInterfaceRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateInterfaceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateInterfaceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateInterfaceRequest& from) { UpdateInterfaceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateInterfaceRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.UpdateInterfaceRequest"; }

 protected:
  explicit UpdateInterfaceRequest(::google::protobuf::Arena* arena);
  UpdateInterfaceRequest(::google::protobuf::Arena* arena, const UpdateInterfaceRequest& from);
  UpdateInterfaceRequest(::google::protobuf::Arena* arena, UpdateInterfaceRequest&& from) noexcept
      : UpdateInterfaceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInterfaceFieldNumber = 1,
  };
  // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
  bool has_interface() const;
  void clear_interface() ;
  const ::kentik::interface::v202108alpha1::Interface& interface() const;
  PROTOBUF_NODISCARD ::kentik::interface::v202108alpha1::Interface* release_interface();
  ::kentik::interface::v202108alpha1::Interface* mutable_interface();
  void set_allocated_interface(::kentik::interface::v202108alpha1::Interface* value);
  void unsafe_arena_set_allocated_interface(::kentik::interface::v202108alpha1::Interface* value);
  ::kentik::interface::v202108alpha1::Interface* unsafe_arena_release_interface();

  private:
  const ::kentik::interface::v202108alpha1::Interface& _internal_interface() const;
  ::kentik::interface::v202108alpha1::Interface* _internal_mutable_interface();

  public:
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.UpdateInterfaceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateInterfaceRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::interface::v202108alpha1::Interface* interface_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class ListInterfaceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.ListInterfaceResponse) */ {
 public:
  inline ListInterfaceResponse() : ListInterfaceResponse(nullptr) {}
  ~ListInterfaceResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListInterfaceResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListInterfaceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListInterfaceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListInterfaceResponse(const ListInterfaceResponse& from) : ListInterfaceResponse(nullptr, from) {}
  inline ListInterfaceResponse(ListInterfaceResponse&& from) noexcept
      : ListInterfaceResponse(nullptr, std::move(from)) {}
  inline ListInterfaceResponse& operator=(const ListInterfaceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListInterfaceResponse& operator=(ListInterfaceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListInterfaceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListInterfaceResponse* internal_default_instance() {
    return reinterpret_cast<const ListInterfaceResponse*>(
        &_ListInterfaceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(ListInterfaceResponse& a, ListInterfaceResponse& b) { a.Swap(&b); }
  inline void Swap(ListInterfaceResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListInterfaceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListInterfaceResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListInterfaceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListInterfaceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListInterfaceResponse& from) { ListInterfaceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListInterfaceResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.ListInterfaceResponse"; }

 protected:
  explicit ListInterfaceResponse(::google::protobuf::Arena* arena);
  ListInterfaceResponse(::google::protobuf::Arena* arena, const ListInterfaceResponse& from);
  ListInterfaceResponse(::google::protobuf::Arena* arena, ListInterfaceResponse&& from) noexcept
      : ListInterfaceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInterfacesFieldNumber = 1,
    kTotalCountFieldNumber = 2,
    kInvalidCountFieldNumber = 3,
  };
  // repeated .kentik.interface.v202108alpha1.Interface interfaces = 1 [json_name = "interfaces"];
  int interfaces_size() const;
  private:
  int _internal_interfaces_size() const;

  public:
  void clear_interfaces() ;
  ::kentik::interface::v202108alpha1::Interface* mutable_interfaces(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::Interface>* mutable_interfaces();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::Interface>& _internal_interfaces() const;
  ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::Interface>* _internal_mutable_interfaces();
  public:
  const ::kentik::interface::v202108alpha1::Interface& interfaces(int index) const;
  ::kentik::interface::v202108alpha1::Interface* add_interfaces();
  const ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::Interface>& interfaces() const;
  // int32 total_count = 2 [json_name = "totalCount"];
  void clear_total_count() ;
  ::int32_t total_count() const;
  void set_total_count(::int32_t value);

  private:
  ::int32_t _internal_total_count() const;
  void _internal_set_total_count(::int32_t value);

  public:
  // int32 invalid_count = 3 [json_name = "invalidCount"];
  void clear_invalid_count() ;
  ::int32_t invalid_count() const;
  void set_invalid_count(::int32_t value);

  private:
  ::int32_t _internal_invalid_count() const;
  void _internal_set_invalid_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.ListInterfaceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListInterfaceResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::interface::v202108alpha1::Interface > interfaces_;
    ::int32_t total_count_;
    ::int32_t invalid_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class GetInterfaceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.GetInterfaceResponse) */ {
 public:
  inline GetInterfaceResponse() : GetInterfaceResponse(nullptr) {}
  ~GetInterfaceResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetInterfaceResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetInterfaceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetInterfaceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetInterfaceResponse(const GetInterfaceResponse& from) : GetInterfaceResponse(nullptr, from) {}
  inline GetInterfaceResponse(GetInterfaceResponse&& from) noexcept
      : GetInterfaceResponse(nullptr, std::move(from)) {}
  inline GetInterfaceResponse& operator=(const GetInterfaceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetInterfaceResponse& operator=(GetInterfaceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetInterfaceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetInterfaceResponse* internal_default_instance() {
    return reinterpret_cast<const GetInterfaceResponse*>(
        &_GetInterfaceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(GetInterfaceResponse& a, GetInterfaceResponse& b) { a.Swap(&b); }
  inline void Swap(GetInterfaceResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetInterfaceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetInterfaceResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetInterfaceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetInterfaceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetInterfaceResponse& from) { GetInterfaceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetInterfaceResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.GetInterfaceResponse"; }

 protected:
  explicit GetInterfaceResponse(::google::protobuf::Arena* arena);
  GetInterfaceResponse(::google::protobuf::Arena* arena, const GetInterfaceResponse& from);
  GetInterfaceResponse(::google::protobuf::Arena* arena, GetInterfaceResponse&& from) noexcept
      : GetInterfaceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInterfaceFieldNumber = 1,
  };
  // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
  bool has_interface() const;
  void clear_interface() ;
  const ::kentik::interface::v202108alpha1::Interface& interface() const;
  PROTOBUF_NODISCARD ::kentik::interface::v202108alpha1::Interface* release_interface();
  ::kentik::interface::v202108alpha1::Interface* mutable_interface();
  void set_allocated_interface(::kentik::interface::v202108alpha1::Interface* value);
  void unsafe_arena_set_allocated_interface(::kentik::interface::v202108alpha1::Interface* value);
  ::kentik::interface::v202108alpha1::Interface* unsafe_arena_release_interface();

  private:
  const ::kentik::interface::v202108alpha1::Interface& _internal_interface() const;
  ::kentik::interface::v202108alpha1::Interface* _internal_mutable_interface();

  public:
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.GetInterfaceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetInterfaceResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::interface::v202108alpha1::Interface* interface_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class DeviceClassifyInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.DeviceClassifyInfo) */ {
 public:
  inline DeviceClassifyInfo() : DeviceClassifyInfo(nullptr) {}
  ~DeviceClassifyInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeviceClassifyInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeviceClassifyInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeviceClassifyInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeviceClassifyInfo(const DeviceClassifyInfo& from) : DeviceClassifyInfo(nullptr, from) {}
  inline DeviceClassifyInfo(DeviceClassifyInfo&& from) noexcept
      : DeviceClassifyInfo(nullptr, std::move(from)) {}
  inline DeviceClassifyInfo& operator=(const DeviceClassifyInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceClassifyInfo& operator=(DeviceClassifyInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeviceClassifyInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeviceClassifyInfo* internal_default_instance() {
    return reinterpret_cast<const DeviceClassifyInfo*>(
        &_DeviceClassifyInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(DeviceClassifyInfo& a, DeviceClassifyInfo& b) { a.Swap(&b); }
  inline void Swap(DeviceClassifyInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceClassifyInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeviceClassifyInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeviceClassifyInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeviceClassifyInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeviceClassifyInfo& from) { DeviceClassifyInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeviceClassifyInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.DeviceClassifyInfo"; }

 protected:
  explicit DeviceClassifyInfo(::google::protobuf::Arena* arena);
  DeviceClassifyInfo(::google::protobuf::Arena* arena, const DeviceClassifyInfo& from);
  DeviceClassifyInfo(::google::protobuf::Arena* arena, DeviceClassifyInfo&& from) noexcept
      : DeviceClassifyInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInterfacesFieldNumber = 21,
    kDeviceIdFieldNumber = 1,
    kPreviouslyClassifiedCounterFieldNumber = 3,
    kAutoClassifiedCounterFieldNumber = 4,
    kTotalInterfacesFieldNumber = 2,
    kChangedClassificationCountFieldNumber = 15,
    kIpAsnMatchedCountFieldNumber = 16,
    kIxMatchedCountFieldNumber = 17,
    kNexthopMatchedCountFieldNumber = 18,
    kConnectivityTypeMatchedCountFieldNumber = 19,
    kProviderMatchedCountFieldNumber = 20,
  };
  // repeated .kentik.interface.v202108alpha1.InterfaceClassifyInfo interfaces = 21 [json_name = "interfaces"];
  int interfaces_size() const;
  private:
  int _internal_interfaces_size() const;

  public:
  void clear_interfaces() ;
  ::kentik::interface::v202108alpha1::InterfaceClassifyInfo* mutable_interfaces(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::InterfaceClassifyInfo>* mutable_interfaces();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::InterfaceClassifyInfo>& _internal_interfaces() const;
  ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::InterfaceClassifyInfo>* _internal_mutable_interfaces();
  public:
  const ::kentik::interface::v202108alpha1::InterfaceClassifyInfo& interfaces(int index) const;
  ::kentik::interface::v202108alpha1::InterfaceClassifyInfo* add_interfaces();
  const ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::InterfaceClassifyInfo>& interfaces() const;
  // string device_id = 1 [json_name = "deviceId"];
  void clear_device_id() ;
  const std::string& device_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_id(Arg_&& arg, Args_... args);
  std::string* mutable_device_id();
  PROTOBUF_NODISCARD std::string* release_device_id();
  void set_allocated_device_id(std::string* value);

  private:
  const std::string& _internal_device_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_id(
      const std::string& value);
  std::string* _internal_mutable_device_id();

  public:
  // .kentik.interface.v202108alpha1.ClassifyCounter previously_classified_counter = 3 [json_name = "previouslyClassifiedCounter"];
  bool has_previously_classified_counter() const;
  void clear_previously_classified_counter() ;
  const ::kentik::interface::v202108alpha1::ClassifyCounter& previously_classified_counter() const;
  PROTOBUF_NODISCARD ::kentik::interface::v202108alpha1::ClassifyCounter* release_previously_classified_counter();
  ::kentik::interface::v202108alpha1::ClassifyCounter* mutable_previously_classified_counter();
  void set_allocated_previously_classified_counter(::kentik::interface::v202108alpha1::ClassifyCounter* value);
  void unsafe_arena_set_allocated_previously_classified_counter(::kentik::interface::v202108alpha1::ClassifyCounter* value);
  ::kentik::interface::v202108alpha1::ClassifyCounter* unsafe_arena_release_previously_classified_counter();

  private:
  const ::kentik::interface::v202108alpha1::ClassifyCounter& _internal_previously_classified_counter() const;
  ::kentik::interface::v202108alpha1::ClassifyCounter* _internal_mutable_previously_classified_counter();

  public:
  // .kentik.interface.v202108alpha1.ClassifyCounter auto_classified_counter = 4 [json_name = "autoClassifiedCounter"];
  bool has_auto_classified_counter() const;
  void clear_auto_classified_counter() ;
  const ::kentik::interface::v202108alpha1::ClassifyCounter& auto_classified_counter() const;
  PROTOBUF_NODISCARD ::kentik::interface::v202108alpha1::ClassifyCounter* release_auto_classified_counter();
  ::kentik::interface::v202108alpha1::ClassifyCounter* mutable_auto_classified_counter();
  void set_allocated_auto_classified_counter(::kentik::interface::v202108alpha1::ClassifyCounter* value);
  void unsafe_arena_set_allocated_auto_classified_counter(::kentik::interface::v202108alpha1::ClassifyCounter* value);
  ::kentik::interface::v202108alpha1::ClassifyCounter* unsafe_arena_release_auto_classified_counter();

  private:
  const ::kentik::interface::v202108alpha1::ClassifyCounter& _internal_auto_classified_counter() const;
  ::kentik::interface::v202108alpha1::ClassifyCounter* _internal_mutable_auto_classified_counter();

  public:
  // int32 total_interfaces = 2 [json_name = "totalInterfaces"];
  void clear_total_interfaces() ;
  ::int32_t total_interfaces() const;
  void set_total_interfaces(::int32_t value);

  private:
  ::int32_t _internal_total_interfaces() const;
  void _internal_set_total_interfaces(::int32_t value);

  public:
  // int32 changed_classification_count = 15 [json_name = "changedClassificationCount"];
  void clear_changed_classification_count() ;
  ::int32_t changed_classification_count() const;
  void set_changed_classification_count(::int32_t value);

  private:
  ::int32_t _internal_changed_classification_count() const;
  void _internal_set_changed_classification_count(::int32_t value);

  public:
  // int32 ip_asn_matched_count = 16 [json_name = "ipAsnMatchedCount"];
  void clear_ip_asn_matched_count() ;
  ::int32_t ip_asn_matched_count() const;
  void set_ip_asn_matched_count(::int32_t value);

  private:
  ::int32_t _internal_ip_asn_matched_count() const;
  void _internal_set_ip_asn_matched_count(::int32_t value);

  public:
  // int32 ix_matched_count = 17 [json_name = "ixMatchedCount"];
  void clear_ix_matched_count() ;
  ::int32_t ix_matched_count() const;
  void set_ix_matched_count(::int32_t value);

  private:
  ::int32_t _internal_ix_matched_count() const;
  void _internal_set_ix_matched_count(::int32_t value);

  public:
  // int32 nexthop_matched_count = 18 [json_name = "nexthopMatchedCount"];
  void clear_nexthop_matched_count() ;
  ::int32_t nexthop_matched_count() const;
  void set_nexthop_matched_count(::int32_t value);

  private:
  ::int32_t _internal_nexthop_matched_count() const;
  void _internal_set_nexthop_matched_count(::int32_t value);

  public:
  // int32 connectivity_type_matched_count = 19 [json_name = "connectivityTypeMatchedCount"];
  void clear_connectivity_type_matched_count() ;
  ::int32_t connectivity_type_matched_count() const;
  void set_connectivity_type_matched_count(::int32_t value);

  private:
  ::int32_t _internal_connectivity_type_matched_count() const;
  void _internal_set_connectivity_type_matched_count(::int32_t value);

  public:
  // int32 provider_matched_count = 20 [json_name = "providerMatchedCount"];
  void clear_provider_matched_count() ;
  ::int32_t provider_matched_count() const;
  void set_provider_matched_count(::int32_t value);

  private:
  ::int32_t _internal_provider_matched_count() const;
  void _internal_set_provider_matched_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.DeviceClassifyInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 11, 3,
      75, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeviceClassifyInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::kentik::interface::v202108alpha1::InterfaceClassifyInfo > interfaces_;
    ::google::protobuf::internal::ArenaStringPtr device_id_;
    ::kentik::interface::v202108alpha1::ClassifyCounter* previously_classified_counter_;
    ::kentik::interface::v202108alpha1::ClassifyCounter* auto_classified_counter_;
    ::int32_t total_interfaces_;
    ::int32_t changed_classification_count_;
    ::int32_t ip_asn_matched_count_;
    ::int32_t ix_matched_count_;
    ::int32_t nexthop_matched_count_;
    ::int32_t connectivity_type_matched_count_;
    ::int32_t provider_matched_count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class CreateInterfaceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.CreateInterfaceResponse) */ {
 public:
  inline CreateInterfaceResponse() : CreateInterfaceResponse(nullptr) {}
  ~CreateInterfaceResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateInterfaceResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateInterfaceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateInterfaceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateInterfaceResponse(const CreateInterfaceResponse& from) : CreateInterfaceResponse(nullptr, from) {}
  inline CreateInterfaceResponse(CreateInterfaceResponse&& from) noexcept
      : CreateInterfaceResponse(nullptr, std::move(from)) {}
  inline CreateInterfaceResponse& operator=(const CreateInterfaceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateInterfaceResponse& operator=(CreateInterfaceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateInterfaceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateInterfaceResponse* internal_default_instance() {
    return reinterpret_cast<const CreateInterfaceResponse*>(
        &_CreateInterfaceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(CreateInterfaceResponse& a, CreateInterfaceResponse& b) { a.Swap(&b); }
  inline void Swap(CreateInterfaceResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateInterfaceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateInterfaceResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateInterfaceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateInterfaceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateInterfaceResponse& from) { CreateInterfaceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateInterfaceResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.CreateInterfaceResponse"; }

 protected:
  explicit CreateInterfaceResponse(::google::protobuf::Arena* arena);
  CreateInterfaceResponse(::google::protobuf::Arena* arena, const CreateInterfaceResponse& from);
  CreateInterfaceResponse(::google::protobuf::Arena* arena, CreateInterfaceResponse&& from) noexcept
      : CreateInterfaceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInterfaceFieldNumber = 1,
  };
  // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
  bool has_interface() const;
  void clear_interface() ;
  const ::kentik::interface::v202108alpha1::Interface& interface() const;
  PROTOBUF_NODISCARD ::kentik::interface::v202108alpha1::Interface* release_interface();
  ::kentik::interface::v202108alpha1::Interface* mutable_interface();
  void set_allocated_interface(::kentik::interface::v202108alpha1::Interface* value);
  void unsafe_arena_set_allocated_interface(::kentik::interface::v202108alpha1::Interface* value);
  ::kentik::interface::v202108alpha1::Interface* unsafe_arena_release_interface();

  private:
  const ::kentik::interface::v202108alpha1::Interface& _internal_interface() const;
  ::kentik::interface::v202108alpha1::Interface* _internal_mutable_interface();

  public:
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.CreateInterfaceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateInterfaceResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::interface::v202108alpha1::Interface* interface_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class CreateInterfaceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.CreateInterfaceRequest) */ {
 public:
  inline CreateInterfaceRequest() : CreateInterfaceRequest(nullptr) {}
  ~CreateInterfaceRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateInterfaceRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateInterfaceRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateInterfaceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateInterfaceRequest(const CreateInterfaceRequest& from) : CreateInterfaceRequest(nullptr, from) {}
  inline CreateInterfaceRequest(CreateInterfaceRequest&& from) noexcept
      : CreateInterfaceRequest(nullptr, std::move(from)) {}
  inline CreateInterfaceRequest& operator=(const CreateInterfaceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateInterfaceRequest& operator=(CreateInterfaceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateInterfaceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateInterfaceRequest* internal_default_instance() {
    return reinterpret_cast<const CreateInterfaceRequest*>(
        &_CreateInterfaceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(CreateInterfaceRequest& a, CreateInterfaceRequest& b) { a.Swap(&b); }
  inline void Swap(CreateInterfaceRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateInterfaceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateInterfaceRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateInterfaceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateInterfaceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateInterfaceRequest& from) { CreateInterfaceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateInterfaceRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.CreateInterfaceRequest"; }

 protected:
  explicit CreateInterfaceRequest(::google::protobuf::Arena* arena);
  CreateInterfaceRequest(::google::protobuf::Arena* arena, const CreateInterfaceRequest& from);
  CreateInterfaceRequest(::google::protobuf::Arena* arena, CreateInterfaceRequest&& from) noexcept
      : CreateInterfaceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInterfaceFieldNumber = 1,
  };
  // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
  bool has_interface() const;
  void clear_interface() ;
  const ::kentik::interface::v202108alpha1::Interface& interface() const;
  PROTOBUF_NODISCARD ::kentik::interface::v202108alpha1::Interface* release_interface();
  ::kentik::interface::v202108alpha1::Interface* mutable_interface();
  void set_allocated_interface(::kentik::interface::v202108alpha1::Interface* value);
  void unsafe_arena_set_allocated_interface(::kentik::interface::v202108alpha1::Interface* value);
  ::kentik::interface::v202108alpha1::Interface* unsafe_arena_release_interface();

  private:
  const ::kentik::interface::v202108alpha1::Interface& _internal_interface() const;
  ::kentik::interface::v202108alpha1::Interface* _internal_mutable_interface();

  public:
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.CreateInterfaceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateInterfaceRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::interface::v202108alpha1::Interface* interface_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};
// -------------------------------------------------------------------

class AutoClassifyResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.interface.v202108alpha1.AutoClassifyResponse) */ {
 public:
  inline AutoClassifyResponse() : AutoClassifyResponse(nullptr) {}
  ~AutoClassifyResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AutoClassifyResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AutoClassifyResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AutoClassifyResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AutoClassifyResponse(const AutoClassifyResponse& from) : AutoClassifyResponse(nullptr, from) {}
  inline AutoClassifyResponse(AutoClassifyResponse&& from) noexcept
      : AutoClassifyResponse(nullptr, std::move(from)) {}
  inline AutoClassifyResponse& operator=(const AutoClassifyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AutoClassifyResponse& operator=(AutoClassifyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AutoClassifyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AutoClassifyResponse* internal_default_instance() {
    return reinterpret_cast<const AutoClassifyResponse*>(
        &_AutoClassifyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(AutoClassifyResponse& a, AutoClassifyResponse& b) { a.Swap(&b); }
  inline void Swap(AutoClassifyResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AutoClassifyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AutoClassifyResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AutoClassifyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AutoClassifyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AutoClassifyResponse& from) { AutoClassifyResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AutoClassifyResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.interface.v202108alpha1.AutoClassifyResponse"; }

 protected:
  explicit AutoClassifyResponse(::google::protobuf::Arena* arena);
  AutoClassifyResponse(::google::protobuf::Arena* arena, const AutoClassifyResponse& from);
  AutoClassifyResponse(::google::protobuf::Arena* arena, AutoClassifyResponse&& from) noexcept
      : AutoClassifyResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDevicesFieldNumber = 18,
    kTotalAutoClassifyCounterFieldNumber = 7,
    kTotalPreviousCounterFieldNumber = 8,
    kPercAutoClassifiedFieldNumber = 1,
    kNetChangedTransitFieldNumber = 2,
    kNetChangedIxFieldNumber = 3,
    kNetChangedProviderFieldNumber = 4,
    kTotalChangedClassificationCountFieldNumber = 5,
    kTotalAutoClassifyCountFieldNumber = 6,
    kTotalInterfacesFieldNumber = 17,
  };
  // repeated .kentik.interface.v202108alpha1.DeviceClassifyInfo devices = 18 [json_name = "devices"];
  int devices_size() const;
  private:
  int _internal_devices_size() const;

  public:
  void clear_devices() ;
  ::kentik::interface::v202108alpha1::DeviceClassifyInfo* mutable_devices(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::DeviceClassifyInfo>* mutable_devices();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::DeviceClassifyInfo>& _internal_devices() const;
  ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::DeviceClassifyInfo>* _internal_mutable_devices();
  public:
  const ::kentik::interface::v202108alpha1::DeviceClassifyInfo& devices(int index) const;
  ::kentik::interface::v202108alpha1::DeviceClassifyInfo* add_devices();
  const ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::DeviceClassifyInfo>& devices() const;
  // .kentik.interface.v202108alpha1.ClassifyCounter total_auto_classify_counter = 7 [json_name = "totalAutoClassifyCounter"];
  bool has_total_auto_classify_counter() const;
  void clear_total_auto_classify_counter() ;
  const ::kentik::interface::v202108alpha1::ClassifyCounter& total_auto_classify_counter() const;
  PROTOBUF_NODISCARD ::kentik::interface::v202108alpha1::ClassifyCounter* release_total_auto_classify_counter();
  ::kentik::interface::v202108alpha1::ClassifyCounter* mutable_total_auto_classify_counter();
  void set_allocated_total_auto_classify_counter(::kentik::interface::v202108alpha1::ClassifyCounter* value);
  void unsafe_arena_set_allocated_total_auto_classify_counter(::kentik::interface::v202108alpha1::ClassifyCounter* value);
  ::kentik::interface::v202108alpha1::ClassifyCounter* unsafe_arena_release_total_auto_classify_counter();

  private:
  const ::kentik::interface::v202108alpha1::ClassifyCounter& _internal_total_auto_classify_counter() const;
  ::kentik::interface::v202108alpha1::ClassifyCounter* _internal_mutable_total_auto_classify_counter();

  public:
  // .kentik.interface.v202108alpha1.ClassifyCounter total_previous_counter = 8 [json_name = "totalPreviousCounter"];
  bool has_total_previous_counter() const;
  void clear_total_previous_counter() ;
  const ::kentik::interface::v202108alpha1::ClassifyCounter& total_previous_counter() const;
  PROTOBUF_NODISCARD ::kentik::interface::v202108alpha1::ClassifyCounter* release_total_previous_counter();
  ::kentik::interface::v202108alpha1::ClassifyCounter* mutable_total_previous_counter();
  void set_allocated_total_previous_counter(::kentik::interface::v202108alpha1::ClassifyCounter* value);
  void unsafe_arena_set_allocated_total_previous_counter(::kentik::interface::v202108alpha1::ClassifyCounter* value);
  ::kentik::interface::v202108alpha1::ClassifyCounter* unsafe_arena_release_total_previous_counter();

  private:
  const ::kentik::interface::v202108alpha1::ClassifyCounter& _internal_total_previous_counter() const;
  ::kentik::interface::v202108alpha1::ClassifyCounter* _internal_mutable_total_previous_counter();

  public:
  // double perc_auto_classified = 1 [json_name = "percAutoClassified"];
  void clear_perc_auto_classified() ;
  double perc_auto_classified() const;
  void set_perc_auto_classified(double value);

  private:
  double _internal_perc_auto_classified() const;
  void _internal_set_perc_auto_classified(double value);

  public:
  // int32 net_changed_transit = 2 [json_name = "netChangedTransit"];
  void clear_net_changed_transit() ;
  ::int32_t net_changed_transit() const;
  void set_net_changed_transit(::int32_t value);

  private:
  ::int32_t _internal_net_changed_transit() const;
  void _internal_set_net_changed_transit(::int32_t value);

  public:
  // int32 net_changed_ix = 3 [json_name = "netChangedIx"];
  void clear_net_changed_ix() ;
  ::int32_t net_changed_ix() const;
  void set_net_changed_ix(::int32_t value);

  private:
  ::int32_t _internal_net_changed_ix() const;
  void _internal_set_net_changed_ix(::int32_t value);

  public:
  // int32 net_changed_provider = 4 [json_name = "netChangedProvider"];
  void clear_net_changed_provider() ;
  ::int32_t net_changed_provider() const;
  void set_net_changed_provider(::int32_t value);

  private:
  ::int32_t _internal_net_changed_provider() const;
  void _internal_set_net_changed_provider(::int32_t value);

  public:
  // int32 total_changed_classification_count = 5 [json_name = "totalChangedClassificationCount"];
  void clear_total_changed_classification_count() ;
  ::int32_t total_changed_classification_count() const;
  void set_total_changed_classification_count(::int32_t value);

  private:
  ::int32_t _internal_total_changed_classification_count() const;
  void _internal_set_total_changed_classification_count(::int32_t value);

  public:
  // int32 total_auto_classify_count = 6 [json_name = "totalAutoClassifyCount"];
  void clear_total_auto_classify_count() ;
  ::int32_t total_auto_classify_count() const;
  void set_total_auto_classify_count(::int32_t value);

  private:
  ::int32_t _internal_total_auto_classify_count() const;
  void _internal_set_total_auto_classify_count(::int32_t value);

  public:
  // int32 total_interfaces = 17 [json_name = "totalInterfaces"];
  void clear_total_interfaces() ;
  ::int32_t total_interfaces() const;
  void set_total_interfaces(::int32_t value);

  private:
  ::int32_t _internal_total_interfaces() const;
  void _internal_set_total_interfaces(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.interface.v202108alpha1.AutoClassifyResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 10, 3,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AutoClassifyResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::kentik::interface::v202108alpha1::DeviceClassifyInfo > devices_;
    ::kentik::interface::v202108alpha1::ClassifyCounter* total_auto_classify_counter_;
    ::kentik::interface::v202108alpha1::ClassifyCounter* total_previous_counter_;
    double perc_auto_classified_;
    ::int32_t net_changed_transit_;
    ::int32_t net_changed_ix_;
    ::int32_t net_changed_provider_;
    ::int32_t total_changed_classification_count_;
    ::int32_t total_auto_classify_count_;
    ::int32_t total_interfaces_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Interface

// string id = 1 [json_name = "id"];
inline void Interface::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Interface::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.id)
}
inline std::string* Interface::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Interface.id)
  return _s;
}
inline const std::string& Interface::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Interface::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Interface::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Interface.id)
  return _impl_.id_.Release();
}
inline void Interface::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Interface.id)
}

// string device_id = 2 [json_name = "deviceId"];
inline void Interface::clear_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.ClearToEmpty();
}
inline const std::string& Interface::device_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.device_id)
  return _internal_device_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_device_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.device_id)
}
inline std::string* Interface::mutable_device_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_id();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Interface.device_id)
  return _s;
}
inline const std::string& Interface::_internal_device_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_id_.Get();
}
inline void Interface::_internal_set_device_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_id_.Mutable( GetArena());
}
inline std::string* Interface::release_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Interface.device_id)
  return _impl_.device_id_.Release();
}
inline void Interface::set_allocated_device_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_id_.IsDefault()) {
    _impl_.device_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Interface.device_id)
}

// string snmp_id = 3 [json_name = "snmpId"];
inline void Interface::clear_snmp_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_id_.ClearToEmpty();
}
inline const std::string& Interface::snmp_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.snmp_id)
  return _internal_snmp_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_snmp_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.snmp_id)
}
inline std::string* Interface::mutable_snmp_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_snmp_id();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Interface.snmp_id)
  return _s;
}
inline const std::string& Interface::_internal_snmp_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.snmp_id_.Get();
}
inline void Interface::_internal_set_snmp_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_id_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_snmp_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.snmp_id_.Mutable( GetArena());
}
inline std::string* Interface::release_snmp_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Interface.snmp_id)
  return _impl_.snmp_id_.Release();
}
inline void Interface::set_allocated_snmp_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.snmp_id_.IsDefault()) {
    _impl_.snmp_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Interface.snmp_id)
}

// int32 snmp_speed = 4 [json_name = "snmpSpeed"];
inline void Interface::clear_snmp_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_speed_ = 0;
}
inline ::int32_t Interface::snmp_speed() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.snmp_speed)
  return _internal_snmp_speed();
}
inline void Interface::set_snmp_speed(::int32_t value) {
  _internal_set_snmp_speed(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.snmp_speed)
}
inline ::int32_t Interface::_internal_snmp_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.snmp_speed_;
}
inline void Interface::_internal_set_snmp_speed(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_speed_ = value;
}

// int32 snmp_type = 5 [json_name = "snmpType"];
inline void Interface::clear_snmp_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_type_ = 0;
}
inline ::int32_t Interface::snmp_type() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.snmp_type)
  return _internal_snmp_type();
}
inline void Interface::set_snmp_type(::int32_t value) {
  _internal_set_snmp_type(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.snmp_type)
}
inline ::int32_t Interface::_internal_snmp_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.snmp_type_;
}
inline void Interface::_internal_set_snmp_type(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_type_ = value;
}

// string snmp_alias = 6 [json_name = "snmpAlias"];
inline void Interface::clear_snmp_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_alias_.ClearToEmpty();
}
inline const std::string& Interface::snmp_alias() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.snmp_alias)
  return _internal_snmp_alias();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_snmp_alias(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_alias_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.snmp_alias)
}
inline std::string* Interface::mutable_snmp_alias() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_snmp_alias();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Interface.snmp_alias)
  return _s;
}
inline const std::string& Interface::_internal_snmp_alias() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.snmp_alias_.Get();
}
inline void Interface::_internal_set_snmp_alias(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_alias_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_snmp_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.snmp_alias_.Mutable( GetArena());
}
inline std::string* Interface::release_snmp_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Interface.snmp_alias)
  return _impl_.snmp_alias_.Release();
}
inline void Interface::set_allocated_snmp_alias(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_alias_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.snmp_alias_.IsDefault()) {
    _impl_.snmp_alias_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Interface.snmp_alias)
}

// string interface_ip = 7 [json_name = "interfaceIp"];
inline void Interface::clear_interface_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_ip_.ClearToEmpty();
}
inline const std::string& Interface::interface_ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.interface_ip)
  return _internal_interface_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_interface_ip(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.interface_ip)
}
inline std::string* Interface::mutable_interface_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_interface_ip();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Interface.interface_ip)
  return _s;
}
inline const std::string& Interface::_internal_interface_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interface_ip_.Get();
}
inline void Interface::_internal_set_interface_ip(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_ip_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_interface_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.interface_ip_.Mutable( GetArena());
}
inline std::string* Interface::release_interface_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Interface.interface_ip)
  return _impl_.interface_ip_.Release();
}
inline void Interface::set_allocated_interface_ip(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_ip_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.interface_ip_.IsDefault()) {
    _impl_.interface_ip_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Interface.interface_ip)
}

// string interface_description = 8 [json_name = "interfaceDescription"];
inline void Interface::clear_interface_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_description_.ClearToEmpty();
}
inline const std::string& Interface::interface_description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.interface_description)
  return _internal_interface_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_interface_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.interface_description)
}
inline std::string* Interface::mutable_interface_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_interface_description();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Interface.interface_description)
  return _s;
}
inline const std::string& Interface::_internal_interface_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interface_description_.Get();
}
inline void Interface::_internal_set_interface_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_description_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_interface_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.interface_description_.Mutable( GetArena());
}
inline std::string* Interface::release_interface_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Interface.interface_description)
  return _impl_.interface_description_.Release();
}
inline void Interface::set_allocated_interface_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.interface_description_.IsDefault()) {
    _impl_.interface_description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Interface.interface_description)
}

// .google.protobuf.Timestamp cdate = 9 [json_name = "cdate"];
inline bool Interface::has_cdate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cdate_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Interface::_internal_cdate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.cdate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Interface::cdate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.cdate)
  return _internal_cdate();
}
inline void Interface::unsafe_arena_set_allocated_cdate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cdate_);
  }
  _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.interface.v202108alpha1.Interface.cdate)
}
inline ::google::protobuf::Timestamp* Interface::release_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.cdate_;
  _impl_.cdate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Interface::unsafe_arena_release_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Interface.cdate)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.cdate_;
  _impl_.cdate_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Interface::_internal_mutable_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cdate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.cdate_;
}
inline ::google::protobuf::Timestamp* Interface::mutable_cdate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_cdate();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Interface.cdate)
  return _msg;
}
inline void Interface::set_allocated_cdate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cdate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Interface.cdate)
}

// .google.protobuf.Timestamp edate = 10 [json_name = "edate"];
inline bool Interface::has_edate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.edate_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Interface::_internal_edate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.edate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Interface::edate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.edate)
  return _internal_edate();
}
inline void Interface::unsafe_arena_set_allocated_edate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.edate_);
  }
  _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.interface.v202108alpha1.Interface.edate)
}
inline ::google::protobuf::Timestamp* Interface::release_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.edate_;
  _impl_.edate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Interface::unsafe_arena_release_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Interface.edate)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.edate_;
  _impl_.edate_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Interface::_internal_mutable_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.edate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.edate_;
}
inline ::google::protobuf::Timestamp* Interface::mutable_edate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_edate();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Interface.edate)
  return _msg;
}
inline void Interface::set_allocated_edate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.edate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Interface.edate)
}

// string interface_ip_netmask = 11 [json_name = "interfaceIpNetmask"];
inline void Interface::clear_interface_ip_netmask() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_ip_netmask_.ClearToEmpty();
}
inline const std::string& Interface::interface_ip_netmask() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.interface_ip_netmask)
  return _internal_interface_ip_netmask();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_interface_ip_netmask(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_ip_netmask_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.interface_ip_netmask)
}
inline std::string* Interface::mutable_interface_ip_netmask() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_interface_ip_netmask();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Interface.interface_ip_netmask)
  return _s;
}
inline const std::string& Interface::_internal_interface_ip_netmask() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interface_ip_netmask_.Get();
}
inline void Interface::_internal_set_interface_ip_netmask(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_ip_netmask_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_interface_ip_netmask() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.interface_ip_netmask_.Mutable( GetArena());
}
inline std::string* Interface::release_interface_ip_netmask() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Interface.interface_ip_netmask)
  return _impl_.interface_ip_netmask_.Release();
}
inline void Interface::set_allocated_interface_ip_netmask(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_ip_netmask_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.interface_ip_netmask_.IsDefault()) {
    _impl_.interface_ip_netmask_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Interface.interface_ip_netmask)
}

// .kentik.interface.v202108alpha1.ConnectivityType connectivity_type = 12 [json_name = "connectivityType"];
inline void Interface::clear_connectivity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connectivity_type_ = 0;
}
inline ::kentik::interface::v202108alpha1::ConnectivityType Interface::connectivity_type() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.connectivity_type)
  return _internal_connectivity_type();
}
inline void Interface::set_connectivity_type(::kentik::interface::v202108alpha1::ConnectivityType value) {
  _internal_set_connectivity_type(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.connectivity_type)
}
inline ::kentik::interface::v202108alpha1::ConnectivityType Interface::_internal_connectivity_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::interface::v202108alpha1::ConnectivityType>(_impl_.connectivity_type_);
}
inline void Interface::_internal_set_connectivity_type(::kentik::interface::v202108alpha1::ConnectivityType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connectivity_type_ = value;
}

// .kentik.interface.v202108alpha1.NetworkBoundary network_boundary = 13 [json_name = "networkBoundary"];
inline void Interface::clear_network_boundary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_boundary_ = 0;
}
inline ::kentik::interface::v202108alpha1::NetworkBoundary Interface::network_boundary() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.network_boundary)
  return _internal_network_boundary();
}
inline void Interface::set_network_boundary(::kentik::interface::v202108alpha1::NetworkBoundary value) {
  _internal_set_network_boundary(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.network_boundary)
}
inline ::kentik::interface::v202108alpha1::NetworkBoundary Interface::_internal_network_boundary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::interface::v202108alpha1::NetworkBoundary>(_impl_.network_boundary_);
}
inline void Interface::_internal_set_network_boundary(::kentik::interface::v202108alpha1::NetworkBoundary value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_boundary_ = value;
}

// repeated int32 top_nexthop_asns = 14 [json_name = "topNexthopAsns"];
inline int Interface::_internal_top_nexthop_asns_size() const {
  return _internal_top_nexthop_asns().size();
}
inline int Interface::top_nexthop_asns_size() const {
  return _internal_top_nexthop_asns_size();
}
inline void Interface::clear_top_nexthop_asns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.top_nexthop_asns_.Clear();
}
inline ::int32_t Interface::top_nexthop_asns(int index) const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.top_nexthop_asns)
  return _internal_top_nexthop_asns().Get(index);
}
inline void Interface::set_top_nexthop_asns(int index, ::int32_t value) {
  _internal_mutable_top_nexthop_asns()->Set(index, value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.top_nexthop_asns)
}
inline void Interface::add_top_nexthop_asns(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_top_nexthop_asns()->Add(value);
  // @@protoc_insertion_point(field_add:kentik.interface.v202108alpha1.Interface.top_nexthop_asns)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Interface::top_nexthop_asns() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.interface.v202108alpha1.Interface.top_nexthop_asns)
  return _internal_top_nexthop_asns();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Interface::mutable_top_nexthop_asns()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.interface.v202108alpha1.Interface.top_nexthop_asns)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_top_nexthop_asns();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Interface::_internal_top_nexthop_asns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.top_nexthop_asns_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Interface::_internal_mutable_top_nexthop_asns() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.top_nexthop_asns_;
}

// string provider = 15 [json_name = "provider"];
inline void Interface::clear_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_.ClearToEmpty();
}
inline const std::string& Interface::provider() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.provider)
  return _internal_provider();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_provider(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.provider)
}
inline std::string* Interface::mutable_provider() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_provider();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Interface.provider)
  return _s;
}
inline const std::string& Interface::_internal_provider() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.provider_.Get();
}
inline void Interface::_internal_set_provider(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.provider_.Mutable( GetArena());
}
inline std::string* Interface::release_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Interface.provider)
  return _impl_.provider_.Release();
}
inline void Interface::set_allocated_provider(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.provider_.IsDefault()) {
    _impl_.provider_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Interface.provider)
}

// map<string, string> interface_kvs = 16 [json_name = "interfaceKvs"];
inline int Interface::_internal_interface_kvs_size() const {
  return _internal_interface_kvs().size();
}
inline int Interface::interface_kvs_size() const {
  return _internal_interface_kvs_size();
}
inline void Interface::clear_interface_kvs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_kvs_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Interface::_internal_interface_kvs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interface_kvs_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Interface::interface_kvs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:kentik.interface.v202108alpha1.Interface.interface_kvs)
  return _internal_interface_kvs();
}
inline ::google::protobuf::Map<std::string, std::string>* Interface::_internal_mutable_interface_kvs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.interface_kvs_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Interface::mutable_interface_kvs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:kentik.interface.v202108alpha1.Interface.interface_kvs)
  return _internal_mutable_interface_kvs();
}

// map<string, string> interface_tags = 17 [json_name = "interfaceTags"];
inline int Interface::_internal_interface_tags_size() const {
  return _internal_interface_tags().size();
}
inline int Interface::interface_tags_size() const {
  return _internal_interface_tags_size();
}
inline void Interface::clear_interface_tags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_tags_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Interface::_internal_interface_tags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interface_tags_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Interface::interface_tags() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:kentik.interface.v202108alpha1.Interface.interface_tags)
  return _internal_interface_tags();
}
inline ::google::protobuf::Map<std::string, std::string>* Interface::_internal_mutable_interface_tags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.interface_tags_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Interface::mutable_interface_tags() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:kentik.interface.v202108alpha1.Interface.interface_tags)
  return _internal_mutable_interface_tags();
}

// string interface_status = 18 [json_name = "interfaceStatus"];
inline void Interface::clear_interface_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_status_.ClearToEmpty();
}
inline const std::string& Interface::interface_status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.interface_status)
  return _internal_interface_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_interface_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.interface_status)
}
inline std::string* Interface::mutable_interface_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_interface_status();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Interface.interface_status)
  return _s;
}
inline const std::string& Interface::_internal_interface_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interface_status_.Get();
}
inline void Interface::_internal_set_interface_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_status_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_interface_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.interface_status_.Mutable( GetArena());
}
inline std::string* Interface::release_interface_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Interface.interface_status)
  return _impl_.interface_status_.Release();
}
inline void Interface::set_allocated_interface_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.interface_status_.IsDefault()) {
    _impl_.interface_status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Interface.interface_status)
}

// map<string, string> extra_info = 19 [json_name = "extraInfo"];
inline int Interface::_internal_extra_info_size() const {
  return _internal_extra_info().size();
}
inline int Interface::extra_info_size() const {
  return _internal_extra_info_size();
}
inline void Interface::clear_extra_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extra_info_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Interface::_internal_extra_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.extra_info_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Interface::extra_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:kentik.interface.v202108alpha1.Interface.extra_info)
  return _internal_extra_info();
}
inline ::google::protobuf::Map<std::string, std::string>* Interface::_internal_mutable_extra_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.extra_info_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Interface::mutable_extra_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:kentik.interface.v202108alpha1.Interface.extra_info)
  return _internal_mutable_extra_info();
}

// string initial_snmp_id = 20 [json_name = "initialSnmpId"];
inline void Interface::clear_initial_snmp_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_snmp_id_.ClearToEmpty();
}
inline const std::string& Interface::initial_snmp_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.initial_snmp_id)
  return _internal_initial_snmp_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_initial_snmp_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_snmp_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.initial_snmp_id)
}
inline std::string* Interface::mutable_initial_snmp_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_initial_snmp_id();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Interface.initial_snmp_id)
  return _s;
}
inline const std::string& Interface::_internal_initial_snmp_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initial_snmp_id_.Get();
}
inline void Interface::_internal_set_initial_snmp_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_snmp_id_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_initial_snmp_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.initial_snmp_id_.Mutable( GetArena());
}
inline std::string* Interface::release_initial_snmp_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Interface.initial_snmp_id)
  return _impl_.initial_snmp_id_.Release();
}
inline void Interface::set_allocated_initial_snmp_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_snmp_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.initial_snmp_id_.IsDefault()) {
    _impl_.initial_snmp_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Interface.initial_snmp_id)
}

// string initial_snmp_alias = 21 [json_name = "initialSnmpAlias"];
inline void Interface::clear_initial_snmp_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_snmp_alias_.ClearToEmpty();
}
inline const std::string& Interface::initial_snmp_alias() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.initial_snmp_alias)
  return _internal_initial_snmp_alias();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_initial_snmp_alias(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_snmp_alias_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.initial_snmp_alias)
}
inline std::string* Interface::mutable_initial_snmp_alias() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_initial_snmp_alias();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Interface.initial_snmp_alias)
  return _s;
}
inline const std::string& Interface::_internal_initial_snmp_alias() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initial_snmp_alias_.Get();
}
inline void Interface::_internal_set_initial_snmp_alias(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_snmp_alias_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_initial_snmp_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.initial_snmp_alias_.Mutable( GetArena());
}
inline std::string* Interface::release_initial_snmp_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Interface.initial_snmp_alias)
  return _impl_.initial_snmp_alias_.Release();
}
inline void Interface::set_allocated_initial_snmp_alias(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_snmp_alias_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.initial_snmp_alias_.IsDefault()) {
    _impl_.initial_snmp_alias_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Interface.initial_snmp_alias)
}

// string initial_interface_description = 22 [json_name = "initialInterfaceDescription"];
inline void Interface::clear_initial_interface_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_interface_description_.ClearToEmpty();
}
inline const std::string& Interface::initial_interface_description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.initial_interface_description)
  return _internal_initial_interface_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_initial_interface_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_interface_description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.initial_interface_description)
}
inline std::string* Interface::mutable_initial_interface_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_initial_interface_description();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Interface.initial_interface_description)
  return _s;
}
inline const std::string& Interface::_internal_initial_interface_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initial_interface_description_.Get();
}
inline void Interface::_internal_set_initial_interface_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_interface_description_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_initial_interface_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.initial_interface_description_.Mutable( GetArena());
}
inline std::string* Interface::release_initial_interface_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Interface.initial_interface_description)
  return _impl_.initial_interface_description_.Release();
}
inline void Interface::set_allocated_initial_interface_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_interface_description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.initial_interface_description_.IsDefault()) {
    _impl_.initial_interface_description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Interface.initial_interface_description)
}

// int32 initial_snmp_speed = 23 [json_name = "initialSnmpSpeed"];
inline void Interface::clear_initial_snmp_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_snmp_speed_ = 0;
}
inline ::int32_t Interface::initial_snmp_speed() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.initial_snmp_speed)
  return _internal_initial_snmp_speed();
}
inline void Interface::set_initial_snmp_speed(::int32_t value) {
  _internal_set_initial_snmp_speed(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.initial_snmp_speed)
}
inline ::int32_t Interface::_internal_initial_snmp_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initial_snmp_speed_;
}
inline void Interface::_internal_set_initial_snmp_speed(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_snmp_speed_ = value;
}

// string secondary_ips = 24 [json_name = "secondaryIps"];
inline void Interface::clear_secondary_ips() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secondary_ips_.ClearToEmpty();
}
inline const std::string& Interface::secondary_ips() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.secondary_ips)
  return _internal_secondary_ips();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_secondary_ips(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secondary_ips_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.secondary_ips)
}
inline std::string* Interface::mutable_secondary_ips() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_secondary_ips();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Interface.secondary_ips)
  return _s;
}
inline const std::string& Interface::_internal_secondary_ips() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.secondary_ips_.Get();
}
inline void Interface::_internal_set_secondary_ips(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secondary_ips_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_secondary_ips() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.secondary_ips_.Mutable( GetArena());
}
inline std::string* Interface::release_secondary_ips() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Interface.secondary_ips)
  return _impl_.secondary_ips_.Release();
}
inline void Interface::set_allocated_secondary_ips(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secondary_ips_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.secondary_ips_.IsDefault()) {
    _impl_.secondary_ips_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Interface.secondary_ips)
}

// .kentik.interface.v202108alpha1.ConnectivityType initial_connectivity_type = 25 [json_name = "initialConnectivityType"];
inline void Interface::clear_initial_connectivity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_connectivity_type_ = 0;
}
inline ::kentik::interface::v202108alpha1::ConnectivityType Interface::initial_connectivity_type() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.initial_connectivity_type)
  return _internal_initial_connectivity_type();
}
inline void Interface::set_initial_connectivity_type(::kentik::interface::v202108alpha1::ConnectivityType value) {
  _internal_set_initial_connectivity_type(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.initial_connectivity_type)
}
inline ::kentik::interface::v202108alpha1::ConnectivityType Interface::_internal_initial_connectivity_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::interface::v202108alpha1::ConnectivityType>(_impl_.initial_connectivity_type_);
}
inline void Interface::_internal_set_initial_connectivity_type(::kentik::interface::v202108alpha1::ConnectivityType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_connectivity_type_ = value;
}

// .kentik.interface.v202108alpha1.NetworkBoundary initial_network_boundary = 26 [json_name = "initialNetworkBoundary"];
inline void Interface::clear_initial_network_boundary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_network_boundary_ = 0;
}
inline ::kentik::interface::v202108alpha1::NetworkBoundary Interface::initial_network_boundary() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.initial_network_boundary)
  return _internal_initial_network_boundary();
}
inline void Interface::set_initial_network_boundary(::kentik::interface::v202108alpha1::NetworkBoundary value) {
  _internal_set_initial_network_boundary(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.initial_network_boundary)
}
inline ::kentik::interface::v202108alpha1::NetworkBoundary Interface::_internal_initial_network_boundary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::interface::v202108alpha1::NetworkBoundary>(_impl_.initial_network_boundary_);
}
inline void Interface::_internal_set_initial_network_boundary(::kentik::interface::v202108alpha1::NetworkBoundary value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_network_boundary_ = value;
}

// string initial_provider = 27 [json_name = "initialProvider"];
inline void Interface::clear_initial_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_provider_.ClearToEmpty();
}
inline const std::string& Interface::initial_provider() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.initial_provider)
  return _internal_initial_provider();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_initial_provider(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_provider_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.initial_provider)
}
inline std::string* Interface::mutable_initial_provider() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_initial_provider();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Interface.initial_provider)
  return _s;
}
inline const std::string& Interface::_internal_initial_provider() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initial_provider_.Get();
}
inline void Interface::_internal_set_initial_provider(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_provider_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_initial_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.initial_provider_.Mutable( GetArena());
}
inline std::string* Interface::release_initial_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Interface.initial_provider)
  return _impl_.initial_provider_.Release();
}
inline void Interface::set_allocated_initial_provider(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initial_provider_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.initial_provider_.IsDefault()) {
    _impl_.initial_provider_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Interface.initial_provider)
}

// string vrf_id = 28 [json_name = "vrfId"];
inline void Interface::clear_vrf_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vrf_id_.ClearToEmpty();
}
inline const std::string& Interface::vrf_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Interface.vrf_id)
  return _internal_vrf_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Interface::set_vrf_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vrf_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Interface.vrf_id)
}
inline std::string* Interface::mutable_vrf_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_vrf_id();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Interface.vrf_id)
  return _s;
}
inline const std::string& Interface::_internal_vrf_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vrf_id_.Get();
}
inline void Interface::_internal_set_vrf_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vrf_id_.Set(value, GetArena());
}
inline std::string* Interface::_internal_mutable_vrf_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.vrf_id_.Mutable( GetArena());
}
inline std::string* Interface::release_vrf_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Interface.vrf_id)
  return _impl_.vrf_id_.Release();
}
inline void Interface::set_allocated_vrf_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vrf_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.vrf_id_.IsDefault()) {
    _impl_.vrf_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Interface.vrf_id)
}

// map<string, string> vrf = 29 [json_name = "vrf"];
inline int Interface::_internal_vrf_size() const {
  return _internal_vrf().size();
}
inline int Interface::vrf_size() const {
  return _internal_vrf_size();
}
inline void Interface::clear_vrf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vrf_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Interface::_internal_vrf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vrf_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Interface::vrf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:kentik.interface.v202108alpha1.Interface.vrf)
  return _internal_vrf();
}
inline ::google::protobuf::Map<std::string, std::string>* Interface::_internal_mutable_vrf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.vrf_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Interface::mutable_vrf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:kentik.interface.v202108alpha1.Interface.vrf)
  return _internal_mutable_vrf();
}

// -------------------------------------------------------------------

// InterfaceClassification

// bool classified = 1 [json_name = "classified"];
inline void InterfaceClassification::clear_classified() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.classified_ = false;
}
inline bool InterfaceClassification::classified() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassification.classified)
  return _internal_classified();
}
inline void InterfaceClassification::set_classified(bool value) {
  _internal_set_classified(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassification.classified)
}
inline bool InterfaceClassification::_internal_classified() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.classified_;
}
inline void InterfaceClassification::_internal_set_classified(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.classified_ = value;
}

// .kentik.interface.v202108alpha1.ConnectivityType connectivity_type = 2 [json_name = "connectivityType"];
inline void InterfaceClassification::clear_connectivity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connectivity_type_ = 0;
}
inline ::kentik::interface::v202108alpha1::ConnectivityType InterfaceClassification::connectivity_type() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassification.connectivity_type)
  return _internal_connectivity_type();
}
inline void InterfaceClassification::set_connectivity_type(::kentik::interface::v202108alpha1::ConnectivityType value) {
  _internal_set_connectivity_type(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassification.connectivity_type)
}
inline ::kentik::interface::v202108alpha1::ConnectivityType InterfaceClassification::_internal_connectivity_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::interface::v202108alpha1::ConnectivityType>(_impl_.connectivity_type_);
}
inline void InterfaceClassification::_internal_set_connectivity_type(::kentik::interface::v202108alpha1::ConnectivityType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connectivity_type_ = value;
}

// .kentik.interface.v202108alpha1.NetworkBoundary network_boundary = 3 [json_name = "networkBoundary"];
inline void InterfaceClassification::clear_network_boundary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_boundary_ = 0;
}
inline ::kentik::interface::v202108alpha1::NetworkBoundary InterfaceClassification::network_boundary() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassification.network_boundary)
  return _internal_network_boundary();
}
inline void InterfaceClassification::set_network_boundary(::kentik::interface::v202108alpha1::NetworkBoundary value) {
  _internal_set_network_boundary(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassification.network_boundary)
}
inline ::kentik::interface::v202108alpha1::NetworkBoundary InterfaceClassification::_internal_network_boundary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::interface::v202108alpha1::NetworkBoundary>(_impl_.network_boundary_);
}
inline void InterfaceClassification::_internal_set_network_boundary(::kentik::interface::v202108alpha1::NetworkBoundary value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_boundary_ = value;
}

// -------------------------------------------------------------------

// ClassifyCounter

// int32 count = 1 [json_name = "count"];
inline void ClassifyCounter::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = 0;
}
inline ::int32_t ClassifyCounter::count() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.ClassifyCounter.count)
  return _internal_count();
}
inline void ClassifyCounter::set_count(::int32_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.ClassifyCounter.count)
}
inline ::int32_t ClassifyCounter::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void ClassifyCounter::_internal_set_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// int32 external_count = 2 [json_name = "externalCount"];
inline void ClassifyCounter::clear_external_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.external_count_ = 0;
}
inline ::int32_t ClassifyCounter::external_count() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.ClassifyCounter.external_count)
  return _internal_external_count();
}
inline void ClassifyCounter::set_external_count(::int32_t value) {
  _internal_set_external_count(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.ClassifyCounter.external_count)
}
inline ::int32_t ClassifyCounter::_internal_external_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.external_count_;
}
inline void ClassifyCounter::_internal_set_external_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.external_count_ = value;
}

// int32 free_pni_count = 3 [json_name = "freePniCount"];
inline void ClassifyCounter::clear_free_pni_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.free_pni_count_ = 0;
}
inline ::int32_t ClassifyCounter::free_pni_count() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.ClassifyCounter.free_pni_count)
  return _internal_free_pni_count();
}
inline void ClassifyCounter::set_free_pni_count(::int32_t value) {
  _internal_set_free_pni_count(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.ClassifyCounter.free_pni_count)
}
inline ::int32_t ClassifyCounter::_internal_free_pni_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.free_pni_count_;
}
inline void ClassifyCounter::_internal_set_free_pni_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.free_pni_count_ = value;
}

// int32 ix_count = 4 [json_name = "ixCount"];
inline void ClassifyCounter::clear_ix_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ix_count_ = 0;
}
inline ::int32_t ClassifyCounter::ix_count() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.ClassifyCounter.ix_count)
  return _internal_ix_count();
}
inline void ClassifyCounter::set_ix_count(::int32_t value) {
  _internal_set_ix_count(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.ClassifyCounter.ix_count)
}
inline ::int32_t ClassifyCounter::_internal_ix_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ix_count_;
}
inline void ClassifyCounter::_internal_set_ix_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ix_count_ = value;
}

// int32 provider_count = 5 [json_name = "providerCount"];
inline void ClassifyCounter::clear_provider_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_count_ = 0;
}
inline ::int32_t ClassifyCounter::provider_count() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.ClassifyCounter.provider_count)
  return _internal_provider_count();
}
inline void ClassifyCounter::set_provider_count(::int32_t value) {
  _internal_set_provider_count(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.ClassifyCounter.provider_count)
}
inline ::int32_t ClassifyCounter::_internal_provider_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.provider_count_;
}
inline void ClassifyCounter::_internal_set_provider_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_count_ = value;
}

// int32 transit_count = 6 [json_name = "transitCount"];
inline void ClassifyCounter::clear_transit_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transit_count_ = 0;
}
inline ::int32_t ClassifyCounter::transit_count() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.ClassifyCounter.transit_count)
  return _internal_transit_count();
}
inline void ClassifyCounter::set_transit_count(::int32_t value) {
  _internal_set_transit_count(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.ClassifyCounter.transit_count)
}
inline ::int32_t ClassifyCounter::_internal_transit_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.transit_count_;
}
inline void ClassifyCounter::_internal_set_transit_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transit_count_ = value;
}

// -------------------------------------------------------------------

// InterfaceClassifyInfo

// string device_id = 1 [json_name = "deviceId"];
inline void InterfaceClassifyInfo::clear_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.ClearToEmpty();
}
inline const std::string& InterfaceClassifyInfo::device_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.device_id)
  return _internal_device_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterfaceClassifyInfo::set_device_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassifyInfo.device_id)
}
inline std::string* InterfaceClassifyInfo::mutable_device_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_id();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.InterfaceClassifyInfo.device_id)
  return _s;
}
inline const std::string& InterfaceClassifyInfo::_internal_device_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_id_.Get();
}
inline void InterfaceClassifyInfo::_internal_set_device_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.Set(value, GetArena());
}
inline std::string* InterfaceClassifyInfo::_internal_mutable_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_id_.Mutable( GetArena());
}
inline std::string* InterfaceClassifyInfo::release_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.InterfaceClassifyInfo.device_id)
  return _impl_.device_id_.Release();
}
inline void InterfaceClassifyInfo::set_allocated_device_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_id_.IsDefault()) {
    _impl_.device_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.InterfaceClassifyInfo.device_id)
}

// string snmp_id = 2 [json_name = "snmpId"];
inline void InterfaceClassifyInfo::clear_snmp_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_id_.ClearToEmpty();
}
inline const std::string& InterfaceClassifyInfo::snmp_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.snmp_id)
  return _internal_snmp_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterfaceClassifyInfo::set_snmp_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassifyInfo.snmp_id)
}
inline std::string* InterfaceClassifyInfo::mutable_snmp_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_snmp_id();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.InterfaceClassifyInfo.snmp_id)
  return _s;
}
inline const std::string& InterfaceClassifyInfo::_internal_snmp_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.snmp_id_.Get();
}
inline void InterfaceClassifyInfo::_internal_set_snmp_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_id_.Set(value, GetArena());
}
inline std::string* InterfaceClassifyInfo::_internal_mutable_snmp_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.snmp_id_.Mutable( GetArena());
}
inline std::string* InterfaceClassifyInfo::release_snmp_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.InterfaceClassifyInfo.snmp_id)
  return _impl_.snmp_id_.Release();
}
inline void InterfaceClassifyInfo::set_allocated_snmp_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.snmp_id_.IsDefault()) {
    _impl_.snmp_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.InterfaceClassifyInfo.snmp_id)
}

// string snmp_alias = 3 [json_name = "snmpAlias"];
inline void InterfaceClassifyInfo::clear_snmp_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_alias_.ClearToEmpty();
}
inline const std::string& InterfaceClassifyInfo::snmp_alias() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.snmp_alias)
  return _internal_snmp_alias();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterfaceClassifyInfo::set_snmp_alias(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_alias_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassifyInfo.snmp_alias)
}
inline std::string* InterfaceClassifyInfo::mutable_snmp_alias() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_snmp_alias();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.InterfaceClassifyInfo.snmp_alias)
  return _s;
}
inline const std::string& InterfaceClassifyInfo::_internal_snmp_alias() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.snmp_alias_.Get();
}
inline void InterfaceClassifyInfo::_internal_set_snmp_alias(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_alias_.Set(value, GetArena());
}
inline std::string* InterfaceClassifyInfo::_internal_mutable_snmp_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.snmp_alias_.Mutable( GetArena());
}
inline std::string* InterfaceClassifyInfo::release_snmp_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.InterfaceClassifyInfo.snmp_alias)
  return _impl_.snmp_alias_.Release();
}
inline void InterfaceClassifyInfo::set_allocated_snmp_alias(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_alias_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.snmp_alias_.IsDefault()) {
    _impl_.snmp_alias_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.InterfaceClassifyInfo.snmp_alias)
}

// string interface_ip = 4 [json_name = "interfaceIp"];
inline void InterfaceClassifyInfo::clear_interface_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_ip_.ClearToEmpty();
}
inline const std::string& InterfaceClassifyInfo::interface_ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.interface_ip)
  return _internal_interface_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterfaceClassifyInfo::set_interface_ip(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassifyInfo.interface_ip)
}
inline std::string* InterfaceClassifyInfo::mutable_interface_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_interface_ip();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.InterfaceClassifyInfo.interface_ip)
  return _s;
}
inline const std::string& InterfaceClassifyInfo::_internal_interface_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interface_ip_.Get();
}
inline void InterfaceClassifyInfo::_internal_set_interface_ip(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_ip_.Set(value, GetArena());
}
inline std::string* InterfaceClassifyInfo::_internal_mutable_interface_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.interface_ip_.Mutable( GetArena());
}
inline std::string* InterfaceClassifyInfo::release_interface_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.InterfaceClassifyInfo.interface_ip)
  return _impl_.interface_ip_.Release();
}
inline void InterfaceClassifyInfo::set_allocated_interface_ip(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_ip_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.interface_ip_.IsDefault()) {
    _impl_.interface_ip_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.InterfaceClassifyInfo.interface_ip)
}

// string interface_ip_asn = 5 [json_name = "interfaceIpAsn"];
inline void InterfaceClassifyInfo::clear_interface_ip_asn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_ip_asn_.ClearToEmpty();
}
inline const std::string& InterfaceClassifyInfo::interface_ip_asn() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.interface_ip_asn)
  return _internal_interface_ip_asn();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterfaceClassifyInfo::set_interface_ip_asn(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_ip_asn_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassifyInfo.interface_ip_asn)
}
inline std::string* InterfaceClassifyInfo::mutable_interface_ip_asn() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_interface_ip_asn();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.InterfaceClassifyInfo.interface_ip_asn)
  return _s;
}
inline const std::string& InterfaceClassifyInfo::_internal_interface_ip_asn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interface_ip_asn_.Get();
}
inline void InterfaceClassifyInfo::_internal_set_interface_ip_asn(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_ip_asn_.Set(value, GetArena());
}
inline std::string* InterfaceClassifyInfo::_internal_mutable_interface_ip_asn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.interface_ip_asn_.Mutable( GetArena());
}
inline std::string* InterfaceClassifyInfo::release_interface_ip_asn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.InterfaceClassifyInfo.interface_ip_asn)
  return _impl_.interface_ip_asn_.Release();
}
inline void InterfaceClassifyInfo::set_allocated_interface_ip_asn(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_ip_asn_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.interface_ip_asn_.IsDefault()) {
    _impl_.interface_ip_asn_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.InterfaceClassifyInfo.interface_ip_asn)
}

// bool is_internal_ip = 6 [json_name = "isInternalIp"];
inline void InterfaceClassifyInfo::clear_is_internal_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_internal_ip_ = false;
}
inline bool InterfaceClassifyInfo::is_internal_ip() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.is_internal_ip)
  return _internal_is_internal_ip();
}
inline void InterfaceClassifyInfo::set_is_internal_ip(bool value) {
  _internal_set_is_internal_ip(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassifyInfo.is_internal_ip)
}
inline bool InterfaceClassifyInfo::_internal_is_internal_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_internal_ip_;
}
inline void InterfaceClassifyInfo::_internal_set_is_internal_ip(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_internal_ip_ = value;
}

// bool is_internal_asn = 7 [json_name = "isInternalAsn"];
inline void InterfaceClassifyInfo::clear_is_internal_asn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_internal_asn_ = false;
}
inline bool InterfaceClassifyInfo::is_internal_asn() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.is_internal_asn)
  return _internal_is_internal_asn();
}
inline void InterfaceClassifyInfo::set_is_internal_asn(bool value) {
  _internal_set_is_internal_asn(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassifyInfo.is_internal_asn)
}
inline bool InterfaceClassifyInfo::_internal_is_internal_asn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_internal_asn_;
}
inline void InterfaceClassifyInfo::_internal_set_is_internal_asn(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_internal_asn_ = value;
}

// repeated string top_nexthop_asns = 8 [json_name = "topNexthopAsns"];
inline int InterfaceClassifyInfo::_internal_top_nexthop_asns_size() const {
  return _internal_top_nexthop_asns().size();
}
inline int InterfaceClassifyInfo::top_nexthop_asns_size() const {
  return _internal_top_nexthop_asns_size();
}
inline void InterfaceClassifyInfo::clear_top_nexthop_asns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.top_nexthop_asns_.Clear();
}
inline std::string* InterfaceClassifyInfo::add_top_nexthop_asns() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_top_nexthop_asns()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.interface.v202108alpha1.InterfaceClassifyInfo.top_nexthop_asns)
  return _s;
}
inline const std::string& InterfaceClassifyInfo::top_nexthop_asns(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.top_nexthop_asns)
  return _internal_top_nexthop_asns().Get(index);
}
inline std::string* InterfaceClassifyInfo::mutable_top_nexthop_asns(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.InterfaceClassifyInfo.top_nexthop_asns)
  return _internal_mutable_top_nexthop_asns()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void InterfaceClassifyInfo::set_top_nexthop_asns(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_top_nexthop_asns()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassifyInfo.top_nexthop_asns)
}
template <typename Arg_, typename... Args_>
inline void InterfaceClassifyInfo::add_top_nexthop_asns(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_top_nexthop_asns(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.interface.v202108alpha1.InterfaceClassifyInfo.top_nexthop_asns)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
InterfaceClassifyInfo::top_nexthop_asns() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.interface.v202108alpha1.InterfaceClassifyInfo.top_nexthop_asns)
  return _internal_top_nexthop_asns();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
InterfaceClassifyInfo::mutable_top_nexthop_asns() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.interface.v202108alpha1.InterfaceClassifyInfo.top_nexthop_asns)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_top_nexthop_asns();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
InterfaceClassifyInfo::_internal_top_nexthop_asns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.top_nexthop_asns_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
InterfaceClassifyInfo::_internal_mutable_top_nexthop_asns() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.top_nexthop_asns_;
}

// string pdb_global_name = 9 [json_name = "pdbGlobalName"];
inline void InterfaceClassifyInfo::clear_pdb_global_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pdb_global_name_.ClearToEmpty();
}
inline const std::string& InterfaceClassifyInfo::pdb_global_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.pdb_global_name)
  return _internal_pdb_global_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterfaceClassifyInfo::set_pdb_global_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pdb_global_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassifyInfo.pdb_global_name)
}
inline std::string* InterfaceClassifyInfo::mutable_pdb_global_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pdb_global_name();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.InterfaceClassifyInfo.pdb_global_name)
  return _s;
}
inline const std::string& InterfaceClassifyInfo::_internal_pdb_global_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pdb_global_name_.Get();
}
inline void InterfaceClassifyInfo::_internal_set_pdb_global_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pdb_global_name_.Set(value, GetArena());
}
inline std::string* InterfaceClassifyInfo::_internal_mutable_pdb_global_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pdb_global_name_.Mutable( GetArena());
}
inline std::string* InterfaceClassifyInfo::release_pdb_global_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.InterfaceClassifyInfo.pdb_global_name)
  return _impl_.pdb_global_name_.Release();
}
inline void InterfaceClassifyInfo::set_allocated_pdb_global_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pdb_global_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pdb_global_name_.IsDefault()) {
    _impl_.pdb_global_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.InterfaceClassifyInfo.pdb_global_name)
}

// .kentik.interface.v202108alpha1.InterfaceClassification auto_classification = 10 [json_name = "autoClassification"];
inline bool InterfaceClassifyInfo::has_auto_classification() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.auto_classification_ != nullptr);
  return value;
}
inline void InterfaceClassifyInfo::clear_auto_classification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.auto_classification_ != nullptr) _impl_.auto_classification_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::interface::v202108alpha1::InterfaceClassification& InterfaceClassifyInfo::_internal_auto_classification() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::interface::v202108alpha1::InterfaceClassification* p = _impl_.auto_classification_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::interface::v202108alpha1::InterfaceClassification&>(::kentik::interface::v202108alpha1::_InterfaceClassification_default_instance_);
}
inline const ::kentik::interface::v202108alpha1::InterfaceClassification& InterfaceClassifyInfo::auto_classification() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.auto_classification)
  return _internal_auto_classification();
}
inline void InterfaceClassifyInfo::unsafe_arena_set_allocated_auto_classification(::kentik::interface::v202108alpha1::InterfaceClassification* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.auto_classification_);
  }
  _impl_.auto_classification_ = reinterpret_cast<::kentik::interface::v202108alpha1::InterfaceClassification*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.interface.v202108alpha1.InterfaceClassifyInfo.auto_classification)
}
inline ::kentik::interface::v202108alpha1::InterfaceClassification* InterfaceClassifyInfo::release_auto_classification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::interface::v202108alpha1::InterfaceClassification* released = _impl_.auto_classification_;
  _impl_.auto_classification_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::interface::v202108alpha1::InterfaceClassification* InterfaceClassifyInfo::unsafe_arena_release_auto_classification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.InterfaceClassifyInfo.auto_classification)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::interface::v202108alpha1::InterfaceClassification* temp = _impl_.auto_classification_;
  _impl_.auto_classification_ = nullptr;
  return temp;
}
inline ::kentik::interface::v202108alpha1::InterfaceClassification* InterfaceClassifyInfo::_internal_mutable_auto_classification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.auto_classification_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::interface::v202108alpha1::InterfaceClassification>(GetArena());
    _impl_.auto_classification_ = reinterpret_cast<::kentik::interface::v202108alpha1::InterfaceClassification*>(p);
  }
  return _impl_.auto_classification_;
}
inline ::kentik::interface::v202108alpha1::InterfaceClassification* InterfaceClassifyInfo::mutable_auto_classification() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::interface::v202108alpha1::InterfaceClassification* _msg = _internal_mutable_auto_classification();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.InterfaceClassifyInfo.auto_classification)
  return _msg;
}
inline void InterfaceClassifyInfo::set_allocated_auto_classification(::kentik::interface::v202108alpha1::InterfaceClassification* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.auto_classification_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.auto_classification_ = reinterpret_cast<::kentik::interface::v202108alpha1::InterfaceClassification*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.InterfaceClassifyInfo.auto_classification)
}

// .kentik.interface.v202108alpha1.InterfaceClassification previous_classification = 11 [json_name = "previousClassification"];
inline bool InterfaceClassifyInfo::has_previous_classification() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.previous_classification_ != nullptr);
  return value;
}
inline void InterfaceClassifyInfo::clear_previous_classification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.previous_classification_ != nullptr) _impl_.previous_classification_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::kentik::interface::v202108alpha1::InterfaceClassification& InterfaceClassifyInfo::_internal_previous_classification() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::interface::v202108alpha1::InterfaceClassification* p = _impl_.previous_classification_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::interface::v202108alpha1::InterfaceClassification&>(::kentik::interface::v202108alpha1::_InterfaceClassification_default_instance_);
}
inline const ::kentik::interface::v202108alpha1::InterfaceClassification& InterfaceClassifyInfo::previous_classification() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.previous_classification)
  return _internal_previous_classification();
}
inline void InterfaceClassifyInfo::unsafe_arena_set_allocated_previous_classification(::kentik::interface::v202108alpha1::InterfaceClassification* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.previous_classification_);
  }
  _impl_.previous_classification_ = reinterpret_cast<::kentik::interface::v202108alpha1::InterfaceClassification*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.interface.v202108alpha1.InterfaceClassifyInfo.previous_classification)
}
inline ::kentik::interface::v202108alpha1::InterfaceClassification* InterfaceClassifyInfo::release_previous_classification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::interface::v202108alpha1::InterfaceClassification* released = _impl_.previous_classification_;
  _impl_.previous_classification_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::interface::v202108alpha1::InterfaceClassification* InterfaceClassifyInfo::unsafe_arena_release_previous_classification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.InterfaceClassifyInfo.previous_classification)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::interface::v202108alpha1::InterfaceClassification* temp = _impl_.previous_classification_;
  _impl_.previous_classification_ = nullptr;
  return temp;
}
inline ::kentik::interface::v202108alpha1::InterfaceClassification* InterfaceClassifyInfo::_internal_mutable_previous_classification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.previous_classification_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::interface::v202108alpha1::InterfaceClassification>(GetArena());
    _impl_.previous_classification_ = reinterpret_cast<::kentik::interface::v202108alpha1::InterfaceClassification*>(p);
  }
  return _impl_.previous_classification_;
}
inline ::kentik::interface::v202108alpha1::InterfaceClassification* InterfaceClassifyInfo::mutable_previous_classification() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::interface::v202108alpha1::InterfaceClassification* _msg = _internal_mutable_previous_classification();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.InterfaceClassifyInfo.previous_classification)
  return _msg;
}
inline void InterfaceClassifyInfo::set_allocated_previous_classification(::kentik::interface::v202108alpha1::InterfaceClassification* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.previous_classification_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.previous_classification_ = reinterpret_cast<::kentik::interface::v202108alpha1::InterfaceClassification*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.InterfaceClassifyInfo.previous_classification)
}

// string provider = 12 [json_name = "provider"];
inline void InterfaceClassifyInfo::clear_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_.ClearToEmpty();
}
inline const std::string& InterfaceClassifyInfo::provider() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.provider)
  return _internal_provider();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterfaceClassifyInfo::set_provider(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassifyInfo.provider)
}
inline std::string* InterfaceClassifyInfo::mutable_provider() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_provider();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.InterfaceClassifyInfo.provider)
  return _s;
}
inline const std::string& InterfaceClassifyInfo::_internal_provider() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.provider_.Get();
}
inline void InterfaceClassifyInfo::_internal_set_provider(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_.Set(value, GetArena());
}
inline std::string* InterfaceClassifyInfo::_internal_mutable_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.provider_.Mutable( GetArena());
}
inline std::string* InterfaceClassifyInfo::release_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.InterfaceClassifyInfo.provider)
  return _impl_.provider_.Release();
}
inline void InterfaceClassifyInfo::set_allocated_provider(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.provider_.IsDefault()) {
    _impl_.provider_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.InterfaceClassifyInfo.provider)
}

// int32 network_boundary_confidence = 13 [json_name = "networkBoundaryConfidence"];
inline void InterfaceClassifyInfo::clear_network_boundary_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_boundary_confidence_ = 0;
}
inline ::int32_t InterfaceClassifyInfo::network_boundary_confidence() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.network_boundary_confidence)
  return _internal_network_boundary_confidence();
}
inline void InterfaceClassifyInfo::set_network_boundary_confidence(::int32_t value) {
  _internal_set_network_boundary_confidence(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassifyInfo.network_boundary_confidence)
}
inline ::int32_t InterfaceClassifyInfo::_internal_network_boundary_confidence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.network_boundary_confidence_;
}
inline void InterfaceClassifyInfo::_internal_set_network_boundary_confidence(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_boundary_confidence_ = value;
}

// int32 connectivity_type_confidence = 14 [json_name = "connectivityTypeConfidence"];
inline void InterfaceClassifyInfo::clear_connectivity_type_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connectivity_type_confidence_ = 0;
}
inline ::int32_t InterfaceClassifyInfo::connectivity_type_confidence() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.connectivity_type_confidence)
  return _internal_connectivity_type_confidence();
}
inline void InterfaceClassifyInfo::set_connectivity_type_confidence(::int32_t value) {
  _internal_set_connectivity_type_confidence(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassifyInfo.connectivity_type_confidence)
}
inline ::int32_t InterfaceClassifyInfo::_internal_connectivity_type_confidence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connectivity_type_confidence_;
}
inline void InterfaceClassifyInfo::_internal_set_connectivity_type_confidence(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connectivity_type_confidence_ = value;
}

// int32 provider_confidence = 15 [json_name = "providerConfidence"];
inline void InterfaceClassifyInfo::clear_provider_confidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_confidence_ = 0;
}
inline ::int32_t InterfaceClassifyInfo::provider_confidence() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.provider_confidence)
  return _internal_provider_confidence();
}
inline void InterfaceClassifyInfo::set_provider_confidence(::int32_t value) {
  _internal_set_provider_confidence(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassifyInfo.provider_confidence)
}
inline ::int32_t InterfaceClassifyInfo::_internal_provider_confidence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.provider_confidence_;
}
inline void InterfaceClassifyInfo::_internal_set_provider_confidence(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_confidence_ = value;
}

// bool auto_classified_provider = 16 [json_name = "autoClassifiedProvider"];
inline void InterfaceClassifyInfo::clear_auto_classified_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.auto_classified_provider_ = false;
}
inline bool InterfaceClassifyInfo::auto_classified_provider() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.auto_classified_provider)
  return _internal_auto_classified_provider();
}
inline void InterfaceClassifyInfo::set_auto_classified_provider(bool value) {
  _internal_set_auto_classified_provider(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassifyInfo.auto_classified_provider)
}
inline bool InterfaceClassifyInfo::_internal_auto_classified_provider() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.auto_classified_provider_;
}
inline void InterfaceClassifyInfo::_internal_set_auto_classified_provider(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.auto_classified_provider_ = value;
}

// string previously_classified_provider = 17 [json_name = "previouslyClassifiedProvider"];
inline void InterfaceClassifyInfo::clear_previously_classified_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.previously_classified_provider_.ClearToEmpty();
}
inline const std::string& InterfaceClassifyInfo::previously_classified_provider() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.previously_classified_provider)
  return _internal_previously_classified_provider();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterfaceClassifyInfo::set_previously_classified_provider(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.previously_classified_provider_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassifyInfo.previously_classified_provider)
}
inline std::string* InterfaceClassifyInfo::mutable_previously_classified_provider() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_previously_classified_provider();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.InterfaceClassifyInfo.previously_classified_provider)
  return _s;
}
inline const std::string& InterfaceClassifyInfo::_internal_previously_classified_provider() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.previously_classified_provider_.Get();
}
inline void InterfaceClassifyInfo::_internal_set_previously_classified_provider(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.previously_classified_provider_.Set(value, GetArena());
}
inline std::string* InterfaceClassifyInfo::_internal_mutable_previously_classified_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.previously_classified_provider_.Mutable( GetArena());
}
inline std::string* InterfaceClassifyInfo::release_previously_classified_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.InterfaceClassifyInfo.previously_classified_provider)
  return _impl_.previously_classified_provider_.Release();
}
inline void InterfaceClassifyInfo::set_allocated_previously_classified_provider(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.previously_classified_provider_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.previously_classified_provider_.IsDefault()) {
    _impl_.previously_classified_provider_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.InterfaceClassifyInfo.previously_classified_provider)
}

// bool previously_classified_external = 18 [json_name = "previouslyClassifiedExternal"];
inline void InterfaceClassifyInfo::clear_previously_classified_external() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.previously_classified_external_ = false;
}
inline bool InterfaceClassifyInfo::previously_classified_external() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.previously_classified_external)
  return _internal_previously_classified_external();
}
inline void InterfaceClassifyInfo::set_previously_classified_external(bool value) {
  _internal_set_previously_classified_external(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassifyInfo.previously_classified_external)
}
inline bool InterfaceClassifyInfo::_internal_previously_classified_external() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.previously_classified_external_;
}
inline void InterfaceClassifyInfo::_internal_set_previously_classified_external(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.previously_classified_external_ = value;
}

// bool ip_asn_matched = 19 [json_name = "ipAsnMatched"];
inline void InterfaceClassifyInfo::clear_ip_asn_matched() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_asn_matched_ = false;
}
inline bool InterfaceClassifyInfo::ip_asn_matched() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.ip_asn_matched)
  return _internal_ip_asn_matched();
}
inline void InterfaceClassifyInfo::set_ip_asn_matched(bool value) {
  _internal_set_ip_asn_matched(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassifyInfo.ip_asn_matched)
}
inline bool InterfaceClassifyInfo::_internal_ip_asn_matched() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ip_asn_matched_;
}
inline void InterfaceClassifyInfo::_internal_set_ip_asn_matched(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_asn_matched_ = value;
}

// bool ix_matched = 20 [json_name = "ixMatched"];
inline void InterfaceClassifyInfo::clear_ix_matched() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ix_matched_ = false;
}
inline bool InterfaceClassifyInfo::ix_matched() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.ix_matched)
  return _internal_ix_matched();
}
inline void InterfaceClassifyInfo::set_ix_matched(bool value) {
  _internal_set_ix_matched(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassifyInfo.ix_matched)
}
inline bool InterfaceClassifyInfo::_internal_ix_matched() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ix_matched_;
}
inline void InterfaceClassifyInfo::_internal_set_ix_matched(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ix_matched_ = value;
}

// bool nexthop_matched = 21 [json_name = "nexthopMatched"];
inline void InterfaceClassifyInfo::clear_nexthop_matched() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nexthop_matched_ = false;
}
inline bool InterfaceClassifyInfo::nexthop_matched() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.nexthop_matched)
  return _internal_nexthop_matched();
}
inline void InterfaceClassifyInfo::set_nexthop_matched(bool value) {
  _internal_set_nexthop_matched(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassifyInfo.nexthop_matched)
}
inline bool InterfaceClassifyInfo::_internal_nexthop_matched() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nexthop_matched_;
}
inline void InterfaceClassifyInfo::_internal_set_nexthop_matched(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nexthop_matched_ = value;
}

// bool connectivity_type_matched = 22 [json_name = "connectivityTypeMatched"];
inline void InterfaceClassifyInfo::clear_connectivity_type_matched() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connectivity_type_matched_ = false;
}
inline bool InterfaceClassifyInfo::connectivity_type_matched() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.connectivity_type_matched)
  return _internal_connectivity_type_matched();
}
inline void InterfaceClassifyInfo::set_connectivity_type_matched(bool value) {
  _internal_set_connectivity_type_matched(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassifyInfo.connectivity_type_matched)
}
inline bool InterfaceClassifyInfo::_internal_connectivity_type_matched() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connectivity_type_matched_;
}
inline void InterfaceClassifyInfo::_internal_set_connectivity_type_matched(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connectivity_type_matched_ = value;
}

// bool provider_matched = 23 [json_name = "providerMatched"];
inline void InterfaceClassifyInfo::clear_provider_matched() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_matched_ = false;
}
inline bool InterfaceClassifyInfo::provider_matched() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.provider_matched)
  return _internal_provider_matched();
}
inline void InterfaceClassifyInfo::set_provider_matched(bool value) {
  _internal_set_provider_matched(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassifyInfo.provider_matched)
}
inline bool InterfaceClassifyInfo::_internal_provider_matched() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.provider_matched_;
}
inline void InterfaceClassifyInfo::_internal_set_provider_matched(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_matched_ = value;
}

// bool changed_classification = 24 [json_name = "changedClassification"];
inline void InterfaceClassifyInfo::clear_changed_classification() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.changed_classification_ = false;
}
inline bool InterfaceClassifyInfo::changed_classification() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceClassifyInfo.changed_classification)
  return _internal_changed_classification();
}
inline void InterfaceClassifyInfo::set_changed_classification(bool value) {
  _internal_set_changed_classification(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceClassifyInfo.changed_classification)
}
inline bool InterfaceClassifyInfo::_internal_changed_classification() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.changed_classification_;
}
inline void InterfaceClassifyInfo::_internal_set_changed_classification(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.changed_classification_ = value;
}

// -------------------------------------------------------------------

// DeviceClassifyInfo

// string device_id = 1 [json_name = "deviceId"];
inline void DeviceClassifyInfo::clear_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.ClearToEmpty();
}
inline const std::string& DeviceClassifyInfo::device_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.DeviceClassifyInfo.device_id)
  return _internal_device_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceClassifyInfo::set_device_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.DeviceClassifyInfo.device_id)
}
inline std::string* DeviceClassifyInfo::mutable_device_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_id();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.DeviceClassifyInfo.device_id)
  return _s;
}
inline const std::string& DeviceClassifyInfo::_internal_device_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_id_.Get();
}
inline void DeviceClassifyInfo::_internal_set_device_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.Set(value, GetArena());
}
inline std::string* DeviceClassifyInfo::_internal_mutable_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_id_.Mutable( GetArena());
}
inline std::string* DeviceClassifyInfo::release_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.DeviceClassifyInfo.device_id)
  return _impl_.device_id_.Release();
}
inline void DeviceClassifyInfo::set_allocated_device_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_id_.IsDefault()) {
    _impl_.device_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.DeviceClassifyInfo.device_id)
}

// int32 total_interfaces = 2 [json_name = "totalInterfaces"];
inline void DeviceClassifyInfo::clear_total_interfaces() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_interfaces_ = 0;
}
inline ::int32_t DeviceClassifyInfo::total_interfaces() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.DeviceClassifyInfo.total_interfaces)
  return _internal_total_interfaces();
}
inline void DeviceClassifyInfo::set_total_interfaces(::int32_t value) {
  _internal_set_total_interfaces(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.DeviceClassifyInfo.total_interfaces)
}
inline ::int32_t DeviceClassifyInfo::_internal_total_interfaces() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_interfaces_;
}
inline void DeviceClassifyInfo::_internal_set_total_interfaces(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_interfaces_ = value;
}

// .kentik.interface.v202108alpha1.ClassifyCounter previously_classified_counter = 3 [json_name = "previouslyClassifiedCounter"];
inline bool DeviceClassifyInfo::has_previously_classified_counter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.previously_classified_counter_ != nullptr);
  return value;
}
inline void DeviceClassifyInfo::clear_previously_classified_counter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.previously_classified_counter_ != nullptr) _impl_.previously_classified_counter_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::interface::v202108alpha1::ClassifyCounter& DeviceClassifyInfo::_internal_previously_classified_counter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::interface::v202108alpha1::ClassifyCounter* p = _impl_.previously_classified_counter_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::interface::v202108alpha1::ClassifyCounter&>(::kentik::interface::v202108alpha1::_ClassifyCounter_default_instance_);
}
inline const ::kentik::interface::v202108alpha1::ClassifyCounter& DeviceClassifyInfo::previously_classified_counter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.DeviceClassifyInfo.previously_classified_counter)
  return _internal_previously_classified_counter();
}
inline void DeviceClassifyInfo::unsafe_arena_set_allocated_previously_classified_counter(::kentik::interface::v202108alpha1::ClassifyCounter* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.previously_classified_counter_);
  }
  _impl_.previously_classified_counter_ = reinterpret_cast<::kentik::interface::v202108alpha1::ClassifyCounter*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.interface.v202108alpha1.DeviceClassifyInfo.previously_classified_counter)
}
inline ::kentik::interface::v202108alpha1::ClassifyCounter* DeviceClassifyInfo::release_previously_classified_counter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::interface::v202108alpha1::ClassifyCounter* released = _impl_.previously_classified_counter_;
  _impl_.previously_classified_counter_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::interface::v202108alpha1::ClassifyCounter* DeviceClassifyInfo::unsafe_arena_release_previously_classified_counter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.DeviceClassifyInfo.previously_classified_counter)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::interface::v202108alpha1::ClassifyCounter* temp = _impl_.previously_classified_counter_;
  _impl_.previously_classified_counter_ = nullptr;
  return temp;
}
inline ::kentik::interface::v202108alpha1::ClassifyCounter* DeviceClassifyInfo::_internal_mutable_previously_classified_counter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.previously_classified_counter_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::interface::v202108alpha1::ClassifyCounter>(GetArena());
    _impl_.previously_classified_counter_ = reinterpret_cast<::kentik::interface::v202108alpha1::ClassifyCounter*>(p);
  }
  return _impl_.previously_classified_counter_;
}
inline ::kentik::interface::v202108alpha1::ClassifyCounter* DeviceClassifyInfo::mutable_previously_classified_counter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::interface::v202108alpha1::ClassifyCounter* _msg = _internal_mutable_previously_classified_counter();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.DeviceClassifyInfo.previously_classified_counter)
  return _msg;
}
inline void DeviceClassifyInfo::set_allocated_previously_classified_counter(::kentik::interface::v202108alpha1::ClassifyCounter* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.previously_classified_counter_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.previously_classified_counter_ = reinterpret_cast<::kentik::interface::v202108alpha1::ClassifyCounter*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.DeviceClassifyInfo.previously_classified_counter)
}

// .kentik.interface.v202108alpha1.ClassifyCounter auto_classified_counter = 4 [json_name = "autoClassifiedCounter"];
inline bool DeviceClassifyInfo::has_auto_classified_counter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.auto_classified_counter_ != nullptr);
  return value;
}
inline void DeviceClassifyInfo::clear_auto_classified_counter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.auto_classified_counter_ != nullptr) _impl_.auto_classified_counter_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::kentik::interface::v202108alpha1::ClassifyCounter& DeviceClassifyInfo::_internal_auto_classified_counter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::interface::v202108alpha1::ClassifyCounter* p = _impl_.auto_classified_counter_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::interface::v202108alpha1::ClassifyCounter&>(::kentik::interface::v202108alpha1::_ClassifyCounter_default_instance_);
}
inline const ::kentik::interface::v202108alpha1::ClassifyCounter& DeviceClassifyInfo::auto_classified_counter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.DeviceClassifyInfo.auto_classified_counter)
  return _internal_auto_classified_counter();
}
inline void DeviceClassifyInfo::unsafe_arena_set_allocated_auto_classified_counter(::kentik::interface::v202108alpha1::ClassifyCounter* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.auto_classified_counter_);
  }
  _impl_.auto_classified_counter_ = reinterpret_cast<::kentik::interface::v202108alpha1::ClassifyCounter*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.interface.v202108alpha1.DeviceClassifyInfo.auto_classified_counter)
}
inline ::kentik::interface::v202108alpha1::ClassifyCounter* DeviceClassifyInfo::release_auto_classified_counter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::interface::v202108alpha1::ClassifyCounter* released = _impl_.auto_classified_counter_;
  _impl_.auto_classified_counter_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::interface::v202108alpha1::ClassifyCounter* DeviceClassifyInfo::unsafe_arena_release_auto_classified_counter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.DeviceClassifyInfo.auto_classified_counter)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::interface::v202108alpha1::ClassifyCounter* temp = _impl_.auto_classified_counter_;
  _impl_.auto_classified_counter_ = nullptr;
  return temp;
}
inline ::kentik::interface::v202108alpha1::ClassifyCounter* DeviceClassifyInfo::_internal_mutable_auto_classified_counter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.auto_classified_counter_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::interface::v202108alpha1::ClassifyCounter>(GetArena());
    _impl_.auto_classified_counter_ = reinterpret_cast<::kentik::interface::v202108alpha1::ClassifyCounter*>(p);
  }
  return _impl_.auto_classified_counter_;
}
inline ::kentik::interface::v202108alpha1::ClassifyCounter* DeviceClassifyInfo::mutable_auto_classified_counter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::interface::v202108alpha1::ClassifyCounter* _msg = _internal_mutable_auto_classified_counter();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.DeviceClassifyInfo.auto_classified_counter)
  return _msg;
}
inline void DeviceClassifyInfo::set_allocated_auto_classified_counter(::kentik::interface::v202108alpha1::ClassifyCounter* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.auto_classified_counter_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.auto_classified_counter_ = reinterpret_cast<::kentik::interface::v202108alpha1::ClassifyCounter*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.DeviceClassifyInfo.auto_classified_counter)
}

// int32 changed_classification_count = 15 [json_name = "changedClassificationCount"];
inline void DeviceClassifyInfo::clear_changed_classification_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.changed_classification_count_ = 0;
}
inline ::int32_t DeviceClassifyInfo::changed_classification_count() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.DeviceClassifyInfo.changed_classification_count)
  return _internal_changed_classification_count();
}
inline void DeviceClassifyInfo::set_changed_classification_count(::int32_t value) {
  _internal_set_changed_classification_count(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.DeviceClassifyInfo.changed_classification_count)
}
inline ::int32_t DeviceClassifyInfo::_internal_changed_classification_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.changed_classification_count_;
}
inline void DeviceClassifyInfo::_internal_set_changed_classification_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.changed_classification_count_ = value;
}

// int32 ip_asn_matched_count = 16 [json_name = "ipAsnMatchedCount"];
inline void DeviceClassifyInfo::clear_ip_asn_matched_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_asn_matched_count_ = 0;
}
inline ::int32_t DeviceClassifyInfo::ip_asn_matched_count() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.DeviceClassifyInfo.ip_asn_matched_count)
  return _internal_ip_asn_matched_count();
}
inline void DeviceClassifyInfo::set_ip_asn_matched_count(::int32_t value) {
  _internal_set_ip_asn_matched_count(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.DeviceClassifyInfo.ip_asn_matched_count)
}
inline ::int32_t DeviceClassifyInfo::_internal_ip_asn_matched_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ip_asn_matched_count_;
}
inline void DeviceClassifyInfo::_internal_set_ip_asn_matched_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_asn_matched_count_ = value;
}

// int32 ix_matched_count = 17 [json_name = "ixMatchedCount"];
inline void DeviceClassifyInfo::clear_ix_matched_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ix_matched_count_ = 0;
}
inline ::int32_t DeviceClassifyInfo::ix_matched_count() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.DeviceClassifyInfo.ix_matched_count)
  return _internal_ix_matched_count();
}
inline void DeviceClassifyInfo::set_ix_matched_count(::int32_t value) {
  _internal_set_ix_matched_count(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.DeviceClassifyInfo.ix_matched_count)
}
inline ::int32_t DeviceClassifyInfo::_internal_ix_matched_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ix_matched_count_;
}
inline void DeviceClassifyInfo::_internal_set_ix_matched_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ix_matched_count_ = value;
}

// int32 nexthop_matched_count = 18 [json_name = "nexthopMatchedCount"];
inline void DeviceClassifyInfo::clear_nexthop_matched_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nexthop_matched_count_ = 0;
}
inline ::int32_t DeviceClassifyInfo::nexthop_matched_count() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.DeviceClassifyInfo.nexthop_matched_count)
  return _internal_nexthop_matched_count();
}
inline void DeviceClassifyInfo::set_nexthop_matched_count(::int32_t value) {
  _internal_set_nexthop_matched_count(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.DeviceClassifyInfo.nexthop_matched_count)
}
inline ::int32_t DeviceClassifyInfo::_internal_nexthop_matched_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nexthop_matched_count_;
}
inline void DeviceClassifyInfo::_internal_set_nexthop_matched_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nexthop_matched_count_ = value;
}

// int32 connectivity_type_matched_count = 19 [json_name = "connectivityTypeMatchedCount"];
inline void DeviceClassifyInfo::clear_connectivity_type_matched_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connectivity_type_matched_count_ = 0;
}
inline ::int32_t DeviceClassifyInfo::connectivity_type_matched_count() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.DeviceClassifyInfo.connectivity_type_matched_count)
  return _internal_connectivity_type_matched_count();
}
inline void DeviceClassifyInfo::set_connectivity_type_matched_count(::int32_t value) {
  _internal_set_connectivity_type_matched_count(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.DeviceClassifyInfo.connectivity_type_matched_count)
}
inline ::int32_t DeviceClassifyInfo::_internal_connectivity_type_matched_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connectivity_type_matched_count_;
}
inline void DeviceClassifyInfo::_internal_set_connectivity_type_matched_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connectivity_type_matched_count_ = value;
}

// int32 provider_matched_count = 20 [json_name = "providerMatchedCount"];
inline void DeviceClassifyInfo::clear_provider_matched_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_matched_count_ = 0;
}
inline ::int32_t DeviceClassifyInfo::provider_matched_count() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.DeviceClassifyInfo.provider_matched_count)
  return _internal_provider_matched_count();
}
inline void DeviceClassifyInfo::set_provider_matched_count(::int32_t value) {
  _internal_set_provider_matched_count(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.DeviceClassifyInfo.provider_matched_count)
}
inline ::int32_t DeviceClassifyInfo::_internal_provider_matched_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.provider_matched_count_;
}
inline void DeviceClassifyInfo::_internal_set_provider_matched_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_matched_count_ = value;
}

// repeated .kentik.interface.v202108alpha1.InterfaceClassifyInfo interfaces = 21 [json_name = "interfaces"];
inline int DeviceClassifyInfo::_internal_interfaces_size() const {
  return _internal_interfaces().size();
}
inline int DeviceClassifyInfo::interfaces_size() const {
  return _internal_interfaces_size();
}
inline void DeviceClassifyInfo::clear_interfaces() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interfaces_.Clear();
}
inline ::kentik::interface::v202108alpha1::InterfaceClassifyInfo* DeviceClassifyInfo::mutable_interfaces(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.DeviceClassifyInfo.interfaces)
  return _internal_mutable_interfaces()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::InterfaceClassifyInfo>* DeviceClassifyInfo::mutable_interfaces()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.interface.v202108alpha1.DeviceClassifyInfo.interfaces)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_interfaces();
}
inline const ::kentik::interface::v202108alpha1::InterfaceClassifyInfo& DeviceClassifyInfo::interfaces(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.DeviceClassifyInfo.interfaces)
  return _internal_interfaces().Get(index);
}
inline ::kentik::interface::v202108alpha1::InterfaceClassifyInfo* DeviceClassifyInfo::add_interfaces() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::interface::v202108alpha1::InterfaceClassifyInfo* _add = _internal_mutable_interfaces()->Add();
  // @@protoc_insertion_point(field_add:kentik.interface.v202108alpha1.DeviceClassifyInfo.interfaces)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::InterfaceClassifyInfo>& DeviceClassifyInfo::interfaces() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.interface.v202108alpha1.DeviceClassifyInfo.interfaces)
  return _internal_interfaces();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::InterfaceClassifyInfo>&
DeviceClassifyInfo::_internal_interfaces() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interfaces_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::InterfaceClassifyInfo>*
DeviceClassifyInfo::_internal_mutable_interfaces() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.interfaces_;
}

// -------------------------------------------------------------------

// InterfaceFilter

// string text = 1 [json_name = "text"];
inline void InterfaceFilter::clear_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.text_.ClearToEmpty();
}
inline const std::string& InterfaceFilter::text() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceFilter.text)
  return _internal_text();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterfaceFilter::set_text(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.text_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceFilter.text)
}
inline std::string* InterfaceFilter::mutable_text() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_text();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.InterfaceFilter.text)
  return _s;
}
inline const std::string& InterfaceFilter::_internal_text() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.text_.Get();
}
inline void InterfaceFilter::_internal_set_text(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.text_.Set(value, GetArena());
}
inline std::string* InterfaceFilter::_internal_mutable_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.text_.Mutable( GetArena());
}
inline std::string* InterfaceFilter::release_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.InterfaceFilter.text)
  return _impl_.text_.Release();
}
inline void InterfaceFilter::set_allocated_text(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.text_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.text_.IsDefault()) {
    _impl_.text_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.InterfaceFilter.text)
}

// repeated string device_ids = 2 [json_name = "deviceIds"];
inline int InterfaceFilter::_internal_device_ids_size() const {
  return _internal_device_ids().size();
}
inline int InterfaceFilter::device_ids_size() const {
  return _internal_device_ids_size();
}
inline void InterfaceFilter::clear_device_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_ids_.Clear();
}
inline std::string* InterfaceFilter::add_device_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_device_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.interface.v202108alpha1.InterfaceFilter.device_ids)
  return _s;
}
inline const std::string& InterfaceFilter::device_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceFilter.device_ids)
  return _internal_device_ids().Get(index);
}
inline std::string* InterfaceFilter::mutable_device_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.InterfaceFilter.device_ids)
  return _internal_mutable_device_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void InterfaceFilter::set_device_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_device_ids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceFilter.device_ids)
}
template <typename Arg_, typename... Args_>
inline void InterfaceFilter::add_device_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_device_ids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.interface.v202108alpha1.InterfaceFilter.device_ids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
InterfaceFilter::device_ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.interface.v202108alpha1.InterfaceFilter.device_ids)
  return _internal_device_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
InterfaceFilter::mutable_device_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.interface.v202108alpha1.InterfaceFilter.device_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_device_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
InterfaceFilter::_internal_device_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
InterfaceFilter::_internal_mutable_device_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.device_ids_;
}

// repeated .kentik.interface.v202108alpha1.ConnectivityType connectivity_types = 3 [json_name = "connectivityTypes"];
inline int InterfaceFilter::_internal_connectivity_types_size() const {
  return _internal_connectivity_types().size();
}
inline int InterfaceFilter::connectivity_types_size() const {
  return _internal_connectivity_types_size();
}
inline void InterfaceFilter::clear_connectivity_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connectivity_types_.Clear();
}
inline ::kentik::interface::v202108alpha1::ConnectivityType InterfaceFilter::connectivity_types(int index) const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceFilter.connectivity_types)
  return static_cast<::kentik::interface::v202108alpha1::ConnectivityType>(_internal_connectivity_types().Get(index));
}
inline void InterfaceFilter::set_connectivity_types(int index, ::kentik::interface::v202108alpha1::ConnectivityType value) {
  _internal_mutable_connectivity_types()->Set(index, value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceFilter.connectivity_types)
}
inline void InterfaceFilter::add_connectivity_types(::kentik::interface::v202108alpha1::ConnectivityType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_connectivity_types()->Add(value);
  // @@protoc_insertion_point(field_add:kentik.interface.v202108alpha1.InterfaceFilter.connectivity_types)
}
inline const ::google::protobuf::RepeatedField<int>& InterfaceFilter::connectivity_types() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.interface.v202108alpha1.InterfaceFilter.connectivity_types)
  return _internal_connectivity_types();
}
inline ::google::protobuf::RepeatedField<int>* InterfaceFilter::mutable_connectivity_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.interface.v202108alpha1.InterfaceFilter.connectivity_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_connectivity_types();
}
inline const ::google::protobuf::RepeatedField<int>& InterfaceFilter::_internal_connectivity_types()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connectivity_types_;
}
inline ::google::protobuf::RepeatedField<int>* InterfaceFilter::_internal_mutable_connectivity_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.connectivity_types_;
}

// repeated .kentik.interface.v202108alpha1.NetworkBoundary network_boundaries = 4 [json_name = "networkBoundaries"];
inline int InterfaceFilter::_internal_network_boundaries_size() const {
  return _internal_network_boundaries().size();
}
inline int InterfaceFilter::network_boundaries_size() const {
  return _internal_network_boundaries_size();
}
inline void InterfaceFilter::clear_network_boundaries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_boundaries_.Clear();
}
inline ::kentik::interface::v202108alpha1::NetworkBoundary InterfaceFilter::network_boundaries(int index) const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceFilter.network_boundaries)
  return static_cast<::kentik::interface::v202108alpha1::NetworkBoundary>(_internal_network_boundaries().Get(index));
}
inline void InterfaceFilter::set_network_boundaries(int index, ::kentik::interface::v202108alpha1::NetworkBoundary value) {
  _internal_mutable_network_boundaries()->Set(index, value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceFilter.network_boundaries)
}
inline void InterfaceFilter::add_network_boundaries(::kentik::interface::v202108alpha1::NetworkBoundary value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_network_boundaries()->Add(value);
  // @@protoc_insertion_point(field_add:kentik.interface.v202108alpha1.InterfaceFilter.network_boundaries)
}
inline const ::google::protobuf::RepeatedField<int>& InterfaceFilter::network_boundaries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.interface.v202108alpha1.InterfaceFilter.network_boundaries)
  return _internal_network_boundaries();
}
inline ::google::protobuf::RepeatedField<int>* InterfaceFilter::mutable_network_boundaries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.interface.v202108alpha1.InterfaceFilter.network_boundaries)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_network_boundaries();
}
inline const ::google::protobuf::RepeatedField<int>& InterfaceFilter::_internal_network_boundaries()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.network_boundaries_;
}
inline ::google::protobuf::RepeatedField<int>* InterfaceFilter::_internal_mutable_network_boundaries() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.network_boundaries_;
}

// repeated string providers = 5 [json_name = "providers"];
inline int InterfaceFilter::_internal_providers_size() const {
  return _internal_providers().size();
}
inline int InterfaceFilter::providers_size() const {
  return _internal_providers_size();
}
inline void InterfaceFilter::clear_providers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.providers_.Clear();
}
inline std::string* InterfaceFilter::add_providers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_providers()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.interface.v202108alpha1.InterfaceFilter.providers)
  return _s;
}
inline const std::string& InterfaceFilter::providers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceFilter.providers)
  return _internal_providers().Get(index);
}
inline std::string* InterfaceFilter::mutable_providers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.InterfaceFilter.providers)
  return _internal_mutable_providers()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void InterfaceFilter::set_providers(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_providers()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceFilter.providers)
}
template <typename Arg_, typename... Args_>
inline void InterfaceFilter::add_providers(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_providers(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.interface.v202108alpha1.InterfaceFilter.providers)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
InterfaceFilter::providers() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.interface.v202108alpha1.InterfaceFilter.providers)
  return _internal_providers();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
InterfaceFilter::mutable_providers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.interface.v202108alpha1.InterfaceFilter.providers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_providers();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
InterfaceFilter::_internal_providers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.providers_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
InterfaceFilter::_internal_mutable_providers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.providers_;
}

// repeated int32 snmp_speeds = 6 [json_name = "snmpSpeeds"];
inline int InterfaceFilter::_internal_snmp_speeds_size() const {
  return _internal_snmp_speeds().size();
}
inline int InterfaceFilter::snmp_speeds_size() const {
  return _internal_snmp_speeds_size();
}
inline void InterfaceFilter::clear_snmp_speeds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snmp_speeds_.Clear();
}
inline ::int32_t InterfaceFilter::snmp_speeds(int index) const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceFilter.snmp_speeds)
  return _internal_snmp_speeds().Get(index);
}
inline void InterfaceFilter::set_snmp_speeds(int index, ::int32_t value) {
  _internal_mutable_snmp_speeds()->Set(index, value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceFilter.snmp_speeds)
}
inline void InterfaceFilter::add_snmp_speeds(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_snmp_speeds()->Add(value);
  // @@protoc_insertion_point(field_add:kentik.interface.v202108alpha1.InterfaceFilter.snmp_speeds)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& InterfaceFilter::snmp_speeds() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.interface.v202108alpha1.InterfaceFilter.snmp_speeds)
  return _internal_snmp_speeds();
}
inline ::google::protobuf::RepeatedField<::int32_t>* InterfaceFilter::mutable_snmp_speeds()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.interface.v202108alpha1.InterfaceFilter.snmp_speeds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_snmp_speeds();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
InterfaceFilter::_internal_snmp_speeds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.snmp_speeds_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* InterfaceFilter::_internal_mutable_snmp_speeds() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.snmp_speeds_;
}

// repeated .kentik.interface.v202108alpha1.IpFilter ip_types = 7 [json_name = "ipTypes"];
inline int InterfaceFilter::_internal_ip_types_size() const {
  return _internal_ip_types().size();
}
inline int InterfaceFilter::ip_types_size() const {
  return _internal_ip_types_size();
}
inline void InterfaceFilter::clear_ip_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_types_.Clear();
}
inline ::kentik::interface::v202108alpha1::IpFilter InterfaceFilter::ip_types(int index) const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.InterfaceFilter.ip_types)
  return static_cast<::kentik::interface::v202108alpha1::IpFilter>(_internal_ip_types().Get(index));
}
inline void InterfaceFilter::set_ip_types(int index, ::kentik::interface::v202108alpha1::IpFilter value) {
  _internal_mutable_ip_types()->Set(index, value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.InterfaceFilter.ip_types)
}
inline void InterfaceFilter::add_ip_types(::kentik::interface::v202108alpha1::IpFilter value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ip_types()->Add(value);
  // @@protoc_insertion_point(field_add:kentik.interface.v202108alpha1.InterfaceFilter.ip_types)
}
inline const ::google::protobuf::RepeatedField<int>& InterfaceFilter::ip_types() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.interface.v202108alpha1.InterfaceFilter.ip_types)
  return _internal_ip_types();
}
inline ::google::protobuf::RepeatedField<int>* InterfaceFilter::mutable_ip_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.interface.v202108alpha1.InterfaceFilter.ip_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ip_types();
}
inline const ::google::protobuf::RepeatedField<int>& InterfaceFilter::_internal_ip_types()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ip_types_;
}
inline ::google::protobuf::RepeatedField<int>* InterfaceFilter::_internal_mutable_ip_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ip_types_;
}

// -------------------------------------------------------------------

// AutoClassifyRequest

// -------------------------------------------------------------------

// AutoClassifyResponse

// double perc_auto_classified = 1 [json_name = "percAutoClassified"];
inline void AutoClassifyResponse::clear_perc_auto_classified() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.perc_auto_classified_ = 0;
}
inline double AutoClassifyResponse::perc_auto_classified() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.AutoClassifyResponse.perc_auto_classified)
  return _internal_perc_auto_classified();
}
inline void AutoClassifyResponse::set_perc_auto_classified(double value) {
  _internal_set_perc_auto_classified(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.AutoClassifyResponse.perc_auto_classified)
}
inline double AutoClassifyResponse::_internal_perc_auto_classified() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.perc_auto_classified_;
}
inline void AutoClassifyResponse::_internal_set_perc_auto_classified(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.perc_auto_classified_ = value;
}

// int32 net_changed_transit = 2 [json_name = "netChangedTransit"];
inline void AutoClassifyResponse::clear_net_changed_transit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.net_changed_transit_ = 0;
}
inline ::int32_t AutoClassifyResponse::net_changed_transit() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.AutoClassifyResponse.net_changed_transit)
  return _internal_net_changed_transit();
}
inline void AutoClassifyResponse::set_net_changed_transit(::int32_t value) {
  _internal_set_net_changed_transit(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.AutoClassifyResponse.net_changed_transit)
}
inline ::int32_t AutoClassifyResponse::_internal_net_changed_transit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.net_changed_transit_;
}
inline void AutoClassifyResponse::_internal_set_net_changed_transit(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.net_changed_transit_ = value;
}

// int32 net_changed_ix = 3 [json_name = "netChangedIx"];
inline void AutoClassifyResponse::clear_net_changed_ix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.net_changed_ix_ = 0;
}
inline ::int32_t AutoClassifyResponse::net_changed_ix() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.AutoClassifyResponse.net_changed_ix)
  return _internal_net_changed_ix();
}
inline void AutoClassifyResponse::set_net_changed_ix(::int32_t value) {
  _internal_set_net_changed_ix(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.AutoClassifyResponse.net_changed_ix)
}
inline ::int32_t AutoClassifyResponse::_internal_net_changed_ix() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.net_changed_ix_;
}
inline void AutoClassifyResponse::_internal_set_net_changed_ix(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.net_changed_ix_ = value;
}

// int32 net_changed_provider = 4 [json_name = "netChangedProvider"];
inline void AutoClassifyResponse::clear_net_changed_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.net_changed_provider_ = 0;
}
inline ::int32_t AutoClassifyResponse::net_changed_provider() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.AutoClassifyResponse.net_changed_provider)
  return _internal_net_changed_provider();
}
inline void AutoClassifyResponse::set_net_changed_provider(::int32_t value) {
  _internal_set_net_changed_provider(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.AutoClassifyResponse.net_changed_provider)
}
inline ::int32_t AutoClassifyResponse::_internal_net_changed_provider() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.net_changed_provider_;
}
inline void AutoClassifyResponse::_internal_set_net_changed_provider(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.net_changed_provider_ = value;
}

// int32 total_changed_classification_count = 5 [json_name = "totalChangedClassificationCount"];
inline void AutoClassifyResponse::clear_total_changed_classification_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_changed_classification_count_ = 0;
}
inline ::int32_t AutoClassifyResponse::total_changed_classification_count() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.AutoClassifyResponse.total_changed_classification_count)
  return _internal_total_changed_classification_count();
}
inline void AutoClassifyResponse::set_total_changed_classification_count(::int32_t value) {
  _internal_set_total_changed_classification_count(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.AutoClassifyResponse.total_changed_classification_count)
}
inline ::int32_t AutoClassifyResponse::_internal_total_changed_classification_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_changed_classification_count_;
}
inline void AutoClassifyResponse::_internal_set_total_changed_classification_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_changed_classification_count_ = value;
}

// int32 total_auto_classify_count = 6 [json_name = "totalAutoClassifyCount"];
inline void AutoClassifyResponse::clear_total_auto_classify_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_auto_classify_count_ = 0;
}
inline ::int32_t AutoClassifyResponse::total_auto_classify_count() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.AutoClassifyResponse.total_auto_classify_count)
  return _internal_total_auto_classify_count();
}
inline void AutoClassifyResponse::set_total_auto_classify_count(::int32_t value) {
  _internal_set_total_auto_classify_count(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.AutoClassifyResponse.total_auto_classify_count)
}
inline ::int32_t AutoClassifyResponse::_internal_total_auto_classify_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_auto_classify_count_;
}
inline void AutoClassifyResponse::_internal_set_total_auto_classify_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_auto_classify_count_ = value;
}

// .kentik.interface.v202108alpha1.ClassifyCounter total_auto_classify_counter = 7 [json_name = "totalAutoClassifyCounter"];
inline bool AutoClassifyResponse::has_total_auto_classify_counter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.total_auto_classify_counter_ != nullptr);
  return value;
}
inline void AutoClassifyResponse::clear_total_auto_classify_counter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_auto_classify_counter_ != nullptr) _impl_.total_auto_classify_counter_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::interface::v202108alpha1::ClassifyCounter& AutoClassifyResponse::_internal_total_auto_classify_counter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::interface::v202108alpha1::ClassifyCounter* p = _impl_.total_auto_classify_counter_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::interface::v202108alpha1::ClassifyCounter&>(::kentik::interface::v202108alpha1::_ClassifyCounter_default_instance_);
}
inline const ::kentik::interface::v202108alpha1::ClassifyCounter& AutoClassifyResponse::total_auto_classify_counter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.AutoClassifyResponse.total_auto_classify_counter)
  return _internal_total_auto_classify_counter();
}
inline void AutoClassifyResponse::unsafe_arena_set_allocated_total_auto_classify_counter(::kentik::interface::v202108alpha1::ClassifyCounter* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.total_auto_classify_counter_);
  }
  _impl_.total_auto_classify_counter_ = reinterpret_cast<::kentik::interface::v202108alpha1::ClassifyCounter*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.interface.v202108alpha1.AutoClassifyResponse.total_auto_classify_counter)
}
inline ::kentik::interface::v202108alpha1::ClassifyCounter* AutoClassifyResponse::release_total_auto_classify_counter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::interface::v202108alpha1::ClassifyCounter* released = _impl_.total_auto_classify_counter_;
  _impl_.total_auto_classify_counter_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::interface::v202108alpha1::ClassifyCounter* AutoClassifyResponse::unsafe_arena_release_total_auto_classify_counter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.AutoClassifyResponse.total_auto_classify_counter)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::interface::v202108alpha1::ClassifyCounter* temp = _impl_.total_auto_classify_counter_;
  _impl_.total_auto_classify_counter_ = nullptr;
  return temp;
}
inline ::kentik::interface::v202108alpha1::ClassifyCounter* AutoClassifyResponse::_internal_mutable_total_auto_classify_counter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_auto_classify_counter_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::interface::v202108alpha1::ClassifyCounter>(GetArena());
    _impl_.total_auto_classify_counter_ = reinterpret_cast<::kentik::interface::v202108alpha1::ClassifyCounter*>(p);
  }
  return _impl_.total_auto_classify_counter_;
}
inline ::kentik::interface::v202108alpha1::ClassifyCounter* AutoClassifyResponse::mutable_total_auto_classify_counter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::interface::v202108alpha1::ClassifyCounter* _msg = _internal_mutable_total_auto_classify_counter();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.AutoClassifyResponse.total_auto_classify_counter)
  return _msg;
}
inline void AutoClassifyResponse::set_allocated_total_auto_classify_counter(::kentik::interface::v202108alpha1::ClassifyCounter* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.total_auto_classify_counter_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.total_auto_classify_counter_ = reinterpret_cast<::kentik::interface::v202108alpha1::ClassifyCounter*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.AutoClassifyResponse.total_auto_classify_counter)
}

// .kentik.interface.v202108alpha1.ClassifyCounter total_previous_counter = 8 [json_name = "totalPreviousCounter"];
inline bool AutoClassifyResponse::has_total_previous_counter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.total_previous_counter_ != nullptr);
  return value;
}
inline void AutoClassifyResponse::clear_total_previous_counter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_previous_counter_ != nullptr) _impl_.total_previous_counter_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::kentik::interface::v202108alpha1::ClassifyCounter& AutoClassifyResponse::_internal_total_previous_counter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::interface::v202108alpha1::ClassifyCounter* p = _impl_.total_previous_counter_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::interface::v202108alpha1::ClassifyCounter&>(::kentik::interface::v202108alpha1::_ClassifyCounter_default_instance_);
}
inline const ::kentik::interface::v202108alpha1::ClassifyCounter& AutoClassifyResponse::total_previous_counter() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.AutoClassifyResponse.total_previous_counter)
  return _internal_total_previous_counter();
}
inline void AutoClassifyResponse::unsafe_arena_set_allocated_total_previous_counter(::kentik::interface::v202108alpha1::ClassifyCounter* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.total_previous_counter_);
  }
  _impl_.total_previous_counter_ = reinterpret_cast<::kentik::interface::v202108alpha1::ClassifyCounter*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.interface.v202108alpha1.AutoClassifyResponse.total_previous_counter)
}
inline ::kentik::interface::v202108alpha1::ClassifyCounter* AutoClassifyResponse::release_total_previous_counter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::interface::v202108alpha1::ClassifyCounter* released = _impl_.total_previous_counter_;
  _impl_.total_previous_counter_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::interface::v202108alpha1::ClassifyCounter* AutoClassifyResponse::unsafe_arena_release_total_previous_counter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.AutoClassifyResponse.total_previous_counter)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::interface::v202108alpha1::ClassifyCounter* temp = _impl_.total_previous_counter_;
  _impl_.total_previous_counter_ = nullptr;
  return temp;
}
inline ::kentik::interface::v202108alpha1::ClassifyCounter* AutoClassifyResponse::_internal_mutable_total_previous_counter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_previous_counter_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::interface::v202108alpha1::ClassifyCounter>(GetArena());
    _impl_.total_previous_counter_ = reinterpret_cast<::kentik::interface::v202108alpha1::ClassifyCounter*>(p);
  }
  return _impl_.total_previous_counter_;
}
inline ::kentik::interface::v202108alpha1::ClassifyCounter* AutoClassifyResponse::mutable_total_previous_counter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::interface::v202108alpha1::ClassifyCounter* _msg = _internal_mutable_total_previous_counter();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.AutoClassifyResponse.total_previous_counter)
  return _msg;
}
inline void AutoClassifyResponse::set_allocated_total_previous_counter(::kentik::interface::v202108alpha1::ClassifyCounter* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.total_previous_counter_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.total_previous_counter_ = reinterpret_cast<::kentik::interface::v202108alpha1::ClassifyCounter*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.AutoClassifyResponse.total_previous_counter)
}

// int32 total_interfaces = 17 [json_name = "totalInterfaces"];
inline void AutoClassifyResponse::clear_total_interfaces() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_interfaces_ = 0;
}
inline ::int32_t AutoClassifyResponse::total_interfaces() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.AutoClassifyResponse.total_interfaces)
  return _internal_total_interfaces();
}
inline void AutoClassifyResponse::set_total_interfaces(::int32_t value) {
  _internal_set_total_interfaces(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.AutoClassifyResponse.total_interfaces)
}
inline ::int32_t AutoClassifyResponse::_internal_total_interfaces() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_interfaces_;
}
inline void AutoClassifyResponse::_internal_set_total_interfaces(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_interfaces_ = value;
}

// repeated .kentik.interface.v202108alpha1.DeviceClassifyInfo devices = 18 [json_name = "devices"];
inline int AutoClassifyResponse::_internal_devices_size() const {
  return _internal_devices().size();
}
inline int AutoClassifyResponse::devices_size() const {
  return _internal_devices_size();
}
inline void AutoClassifyResponse::clear_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.devices_.Clear();
}
inline ::kentik::interface::v202108alpha1::DeviceClassifyInfo* AutoClassifyResponse::mutable_devices(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.AutoClassifyResponse.devices)
  return _internal_mutable_devices()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::DeviceClassifyInfo>* AutoClassifyResponse::mutable_devices()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.interface.v202108alpha1.AutoClassifyResponse.devices)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_devices();
}
inline const ::kentik::interface::v202108alpha1::DeviceClassifyInfo& AutoClassifyResponse::devices(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.AutoClassifyResponse.devices)
  return _internal_devices().Get(index);
}
inline ::kentik::interface::v202108alpha1::DeviceClassifyInfo* AutoClassifyResponse::add_devices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::interface::v202108alpha1::DeviceClassifyInfo* _add = _internal_mutable_devices()->Add();
  // @@protoc_insertion_point(field_add:kentik.interface.v202108alpha1.AutoClassifyResponse.devices)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::DeviceClassifyInfo>& AutoClassifyResponse::devices() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.interface.v202108alpha1.AutoClassifyResponse.devices)
  return _internal_devices();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::DeviceClassifyInfo>&
AutoClassifyResponse::_internal_devices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.devices_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::DeviceClassifyInfo>*
AutoClassifyResponse::_internal_mutable_devices() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.devices_;
}

// -------------------------------------------------------------------

// ManualClassifyRequest

// repeated string interface_ids = 1 [json_name = "interfaceIds"];
inline int ManualClassifyRequest::_internal_interface_ids_size() const {
  return _internal_interface_ids().size();
}
inline int ManualClassifyRequest::interface_ids_size() const {
  return _internal_interface_ids_size();
}
inline void ManualClassifyRequest::clear_interface_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_ids_.Clear();
}
inline std::string* ManualClassifyRequest::add_interface_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_interface_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.interface.v202108alpha1.ManualClassifyRequest.interface_ids)
  return _s;
}
inline const std::string& ManualClassifyRequest::interface_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.ManualClassifyRequest.interface_ids)
  return _internal_interface_ids().Get(index);
}
inline std::string* ManualClassifyRequest::mutable_interface_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.ManualClassifyRequest.interface_ids)
  return _internal_mutable_interface_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ManualClassifyRequest::set_interface_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_interface_ids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.ManualClassifyRequest.interface_ids)
}
template <typename Arg_, typename... Args_>
inline void ManualClassifyRequest::add_interface_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_interface_ids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.interface.v202108alpha1.ManualClassifyRequest.interface_ids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ManualClassifyRequest::interface_ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.interface.v202108alpha1.ManualClassifyRequest.interface_ids)
  return _internal_interface_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ManualClassifyRequest::mutable_interface_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.interface.v202108alpha1.ManualClassifyRequest.interface_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_interface_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ManualClassifyRequest::_internal_interface_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interface_ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ManualClassifyRequest::_internal_mutable_interface_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.interface_ids_;
}

// .kentik.interface.v202108alpha1.ConnectivityType connectivity_type = 2 [json_name = "connectivityType"];
inline void ManualClassifyRequest::clear_connectivity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connectivity_type_ = 0;
}
inline ::kentik::interface::v202108alpha1::ConnectivityType ManualClassifyRequest::connectivity_type() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.ManualClassifyRequest.connectivity_type)
  return _internal_connectivity_type();
}
inline void ManualClassifyRequest::set_connectivity_type(::kentik::interface::v202108alpha1::ConnectivityType value) {
  _internal_set_connectivity_type(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.ManualClassifyRequest.connectivity_type)
}
inline ::kentik::interface::v202108alpha1::ConnectivityType ManualClassifyRequest::_internal_connectivity_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::interface::v202108alpha1::ConnectivityType>(_impl_.connectivity_type_);
}
inline void ManualClassifyRequest::_internal_set_connectivity_type(::kentik::interface::v202108alpha1::ConnectivityType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connectivity_type_ = value;
}

// .kentik.interface.v202108alpha1.NetworkBoundary network_boundary = 3 [json_name = "networkBoundary"];
inline void ManualClassifyRequest::clear_network_boundary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_boundary_ = 0;
}
inline ::kentik::interface::v202108alpha1::NetworkBoundary ManualClassifyRequest::network_boundary() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.ManualClassifyRequest.network_boundary)
  return _internal_network_boundary();
}
inline void ManualClassifyRequest::set_network_boundary(::kentik::interface::v202108alpha1::NetworkBoundary value) {
  _internal_set_network_boundary(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.ManualClassifyRequest.network_boundary)
}
inline ::kentik::interface::v202108alpha1::NetworkBoundary ManualClassifyRequest::_internal_network_boundary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::interface::v202108alpha1::NetworkBoundary>(_impl_.network_boundary_);
}
inline void ManualClassifyRequest::_internal_set_network_boundary(::kentik::interface::v202108alpha1::NetworkBoundary value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_boundary_ = value;
}

// string provider = 4 [json_name = "provider"];
inline void ManualClassifyRequest::clear_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_.ClearToEmpty();
}
inline const std::string& ManualClassifyRequest::provider() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.ManualClassifyRequest.provider)
  return _internal_provider();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ManualClassifyRequest::set_provider(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.ManualClassifyRequest.provider)
}
inline std::string* ManualClassifyRequest::mutable_provider() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_provider();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.ManualClassifyRequest.provider)
  return _s;
}
inline const std::string& ManualClassifyRequest::_internal_provider() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.provider_.Get();
}
inline void ManualClassifyRequest::_internal_set_provider(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_.Set(value, GetArena());
}
inline std::string* ManualClassifyRequest::_internal_mutable_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.provider_.Mutable( GetArena());
}
inline std::string* ManualClassifyRequest::release_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.ManualClassifyRequest.provider)
  return _impl_.provider_.Release();
}
inline void ManualClassifyRequest::set_allocated_provider(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.provider_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.provider_.IsDefault()) {
    _impl_.provider_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.ManualClassifyRequest.provider)
}

// -------------------------------------------------------------------

// ManualClassifyResponse

// repeated string device_ids = 1 [json_name = "deviceIds"];
inline int ManualClassifyResponse::_internal_device_ids_size() const {
  return _internal_device_ids().size();
}
inline int ManualClassifyResponse::device_ids_size() const {
  return _internal_device_ids_size();
}
inline void ManualClassifyResponse::clear_device_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_ids_.Clear();
}
inline std::string* ManualClassifyResponse::add_device_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_device_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.interface.v202108alpha1.ManualClassifyResponse.device_ids)
  return _s;
}
inline const std::string& ManualClassifyResponse::device_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.ManualClassifyResponse.device_ids)
  return _internal_device_ids().Get(index);
}
inline std::string* ManualClassifyResponse::mutable_device_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.ManualClassifyResponse.device_ids)
  return _internal_mutable_device_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ManualClassifyResponse::set_device_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_device_ids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.ManualClassifyResponse.device_ids)
}
template <typename Arg_, typename... Args_>
inline void ManualClassifyResponse::add_device_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_device_ids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.interface.v202108alpha1.ManualClassifyResponse.device_ids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ManualClassifyResponse::device_ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.interface.v202108alpha1.ManualClassifyResponse.device_ids)
  return _internal_device_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ManualClassifyResponse::mutable_device_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.interface.v202108alpha1.ManualClassifyResponse.device_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_device_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ManualClassifyResponse::_internal_device_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ManualClassifyResponse::_internal_mutable_device_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.device_ids_;
}

// -------------------------------------------------------------------

// ListInterfaceRequest

// .kentik.interface.v202108alpha1.InterfaceFilter filters = 1 [json_name = "filters"];
inline bool ListInterfaceRequest::has_filters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.filters_ != nullptr);
  return value;
}
inline void ListInterfaceRequest::clear_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.filters_ != nullptr) _impl_.filters_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::interface::v202108alpha1::InterfaceFilter& ListInterfaceRequest::_internal_filters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::interface::v202108alpha1::InterfaceFilter* p = _impl_.filters_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::interface::v202108alpha1::InterfaceFilter&>(::kentik::interface::v202108alpha1::_InterfaceFilter_default_instance_);
}
inline const ::kentik::interface::v202108alpha1::InterfaceFilter& ListInterfaceRequest::filters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.ListInterfaceRequest.filters)
  return _internal_filters();
}
inline void ListInterfaceRequest::unsafe_arena_set_allocated_filters(::kentik::interface::v202108alpha1::InterfaceFilter* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.filters_);
  }
  _impl_.filters_ = reinterpret_cast<::kentik::interface::v202108alpha1::InterfaceFilter*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.interface.v202108alpha1.ListInterfaceRequest.filters)
}
inline ::kentik::interface::v202108alpha1::InterfaceFilter* ListInterfaceRequest::release_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::interface::v202108alpha1::InterfaceFilter* released = _impl_.filters_;
  _impl_.filters_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::interface::v202108alpha1::InterfaceFilter* ListInterfaceRequest::unsafe_arena_release_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.ListInterfaceRequest.filters)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::interface::v202108alpha1::InterfaceFilter* temp = _impl_.filters_;
  _impl_.filters_ = nullptr;
  return temp;
}
inline ::kentik::interface::v202108alpha1::InterfaceFilter* ListInterfaceRequest::_internal_mutable_filters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.filters_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::interface::v202108alpha1::InterfaceFilter>(GetArena());
    _impl_.filters_ = reinterpret_cast<::kentik::interface::v202108alpha1::InterfaceFilter*>(p);
  }
  return _impl_.filters_;
}
inline ::kentik::interface::v202108alpha1::InterfaceFilter* ListInterfaceRequest::mutable_filters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::interface::v202108alpha1::InterfaceFilter* _msg = _internal_mutable_filters();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.ListInterfaceRequest.filters)
  return _msg;
}
inline void ListInterfaceRequest::set_allocated_filters(::kentik::interface::v202108alpha1::InterfaceFilter* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.filters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.filters_ = reinterpret_cast<::kentik::interface::v202108alpha1::InterfaceFilter*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.ListInterfaceRequest.filters)
}

// -------------------------------------------------------------------

// ListInterfaceResponse

// repeated .kentik.interface.v202108alpha1.Interface interfaces = 1 [json_name = "interfaces"];
inline int ListInterfaceResponse::_internal_interfaces_size() const {
  return _internal_interfaces().size();
}
inline int ListInterfaceResponse::interfaces_size() const {
  return _internal_interfaces_size();
}
inline void ListInterfaceResponse::clear_interfaces() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interfaces_.Clear();
}
inline ::kentik::interface::v202108alpha1::Interface* ListInterfaceResponse::mutable_interfaces(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.ListInterfaceResponse.interfaces)
  return _internal_mutable_interfaces()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::Interface>* ListInterfaceResponse::mutable_interfaces()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.interface.v202108alpha1.ListInterfaceResponse.interfaces)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_interfaces();
}
inline const ::kentik::interface::v202108alpha1::Interface& ListInterfaceResponse::interfaces(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.ListInterfaceResponse.interfaces)
  return _internal_interfaces().Get(index);
}
inline ::kentik::interface::v202108alpha1::Interface* ListInterfaceResponse::add_interfaces() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::interface::v202108alpha1::Interface* _add = _internal_mutable_interfaces()->Add();
  // @@protoc_insertion_point(field_add:kentik.interface.v202108alpha1.ListInterfaceResponse.interfaces)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::Interface>& ListInterfaceResponse::interfaces() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.interface.v202108alpha1.ListInterfaceResponse.interfaces)
  return _internal_interfaces();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::Interface>&
ListInterfaceResponse::_internal_interfaces() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interfaces_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::interface::v202108alpha1::Interface>*
ListInterfaceResponse::_internal_mutable_interfaces() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.interfaces_;
}

// int32 total_count = 2 [json_name = "totalCount"];
inline void ListInterfaceResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = 0;
}
inline ::int32_t ListInterfaceResponse::total_count() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.ListInterfaceResponse.total_count)
  return _internal_total_count();
}
inline void ListInterfaceResponse::set_total_count(::int32_t value) {
  _internal_set_total_count(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.ListInterfaceResponse.total_count)
}
inline ::int32_t ListInterfaceResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void ListInterfaceResponse::_internal_set_total_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// int32 invalid_count = 3 [json_name = "invalidCount"];
inline void ListInterfaceResponse::clear_invalid_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_count_ = 0;
}
inline ::int32_t ListInterfaceResponse::invalid_count() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.ListInterfaceResponse.invalid_count)
  return _internal_invalid_count();
}
inline void ListInterfaceResponse::set_invalid_count(::int32_t value) {
  _internal_set_invalid_count(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.ListInterfaceResponse.invalid_count)
}
inline ::int32_t ListInterfaceResponse::_internal_invalid_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.invalid_count_;
}
inline void ListInterfaceResponse::_internal_set_invalid_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_count_ = value;
}

// -------------------------------------------------------------------

// GetInterfaceRequest

// string id = 1 [json_name = "id"];
inline void GetInterfaceRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& GetInterfaceRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.GetInterfaceRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetInterfaceRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.GetInterfaceRequest.id)
}
inline std::string* GetInterfaceRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.GetInterfaceRequest.id)
  return _s;
}
inline const std::string& GetInterfaceRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void GetInterfaceRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* GetInterfaceRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* GetInterfaceRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.GetInterfaceRequest.id)
  return _impl_.id_.Release();
}
inline void GetInterfaceRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.GetInterfaceRequest.id)
}

// -------------------------------------------------------------------

// GetInterfaceResponse

// .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
inline bool GetInterfaceResponse::has_interface() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.interface_ != nullptr);
  return value;
}
inline void GetInterfaceResponse::clear_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.interface_ != nullptr) _impl_.interface_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::interface::v202108alpha1::Interface& GetInterfaceResponse::_internal_interface() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::interface::v202108alpha1::Interface* p = _impl_.interface_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::interface::v202108alpha1::Interface&>(::kentik::interface::v202108alpha1::_Interface_default_instance_);
}
inline const ::kentik::interface::v202108alpha1::Interface& GetInterfaceResponse::interface() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.GetInterfaceResponse.interface)
  return _internal_interface();
}
inline void GetInterfaceResponse::unsafe_arena_set_allocated_interface(::kentik::interface::v202108alpha1::Interface* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.interface_);
  }
  _impl_.interface_ = reinterpret_cast<::kentik::interface::v202108alpha1::Interface*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.interface.v202108alpha1.GetInterfaceResponse.interface)
}
inline ::kentik::interface::v202108alpha1::Interface* GetInterfaceResponse::release_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::interface::v202108alpha1::Interface* released = _impl_.interface_;
  _impl_.interface_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::interface::v202108alpha1::Interface* GetInterfaceResponse::unsafe_arena_release_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.GetInterfaceResponse.interface)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::interface::v202108alpha1::Interface* temp = _impl_.interface_;
  _impl_.interface_ = nullptr;
  return temp;
}
inline ::kentik::interface::v202108alpha1::Interface* GetInterfaceResponse::_internal_mutable_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.interface_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::interface::v202108alpha1::Interface>(GetArena());
    _impl_.interface_ = reinterpret_cast<::kentik::interface::v202108alpha1::Interface*>(p);
  }
  return _impl_.interface_;
}
inline ::kentik::interface::v202108alpha1::Interface* GetInterfaceResponse::mutable_interface() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::interface::v202108alpha1::Interface* _msg = _internal_mutable_interface();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.GetInterfaceResponse.interface)
  return _msg;
}
inline void GetInterfaceResponse::set_allocated_interface(::kentik::interface::v202108alpha1::Interface* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.interface_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.interface_ = reinterpret_cast<::kentik::interface::v202108alpha1::Interface*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.GetInterfaceResponse.interface)
}

// -------------------------------------------------------------------

// CreateInterfaceRequest

// .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
inline bool CreateInterfaceRequest::has_interface() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.interface_ != nullptr);
  return value;
}
inline void CreateInterfaceRequest::clear_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.interface_ != nullptr) _impl_.interface_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::interface::v202108alpha1::Interface& CreateInterfaceRequest::_internal_interface() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::interface::v202108alpha1::Interface* p = _impl_.interface_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::interface::v202108alpha1::Interface&>(::kentik::interface::v202108alpha1::_Interface_default_instance_);
}
inline const ::kentik::interface::v202108alpha1::Interface& CreateInterfaceRequest::interface() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.CreateInterfaceRequest.interface)
  return _internal_interface();
}
inline void CreateInterfaceRequest::unsafe_arena_set_allocated_interface(::kentik::interface::v202108alpha1::Interface* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.interface_);
  }
  _impl_.interface_ = reinterpret_cast<::kentik::interface::v202108alpha1::Interface*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.interface.v202108alpha1.CreateInterfaceRequest.interface)
}
inline ::kentik::interface::v202108alpha1::Interface* CreateInterfaceRequest::release_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::interface::v202108alpha1::Interface* released = _impl_.interface_;
  _impl_.interface_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::interface::v202108alpha1::Interface* CreateInterfaceRequest::unsafe_arena_release_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.CreateInterfaceRequest.interface)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::interface::v202108alpha1::Interface* temp = _impl_.interface_;
  _impl_.interface_ = nullptr;
  return temp;
}
inline ::kentik::interface::v202108alpha1::Interface* CreateInterfaceRequest::_internal_mutable_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.interface_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::interface::v202108alpha1::Interface>(GetArena());
    _impl_.interface_ = reinterpret_cast<::kentik::interface::v202108alpha1::Interface*>(p);
  }
  return _impl_.interface_;
}
inline ::kentik::interface::v202108alpha1::Interface* CreateInterfaceRequest::mutable_interface() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::interface::v202108alpha1::Interface* _msg = _internal_mutable_interface();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.CreateInterfaceRequest.interface)
  return _msg;
}
inline void CreateInterfaceRequest::set_allocated_interface(::kentik::interface::v202108alpha1::Interface* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.interface_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.interface_ = reinterpret_cast<::kentik::interface::v202108alpha1::Interface*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.CreateInterfaceRequest.interface)
}

// -------------------------------------------------------------------

// CreateInterfaceResponse

// .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
inline bool CreateInterfaceResponse::has_interface() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.interface_ != nullptr);
  return value;
}
inline void CreateInterfaceResponse::clear_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.interface_ != nullptr) _impl_.interface_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::interface::v202108alpha1::Interface& CreateInterfaceResponse::_internal_interface() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::interface::v202108alpha1::Interface* p = _impl_.interface_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::interface::v202108alpha1::Interface&>(::kentik::interface::v202108alpha1::_Interface_default_instance_);
}
inline const ::kentik::interface::v202108alpha1::Interface& CreateInterfaceResponse::interface() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.CreateInterfaceResponse.interface)
  return _internal_interface();
}
inline void CreateInterfaceResponse::unsafe_arena_set_allocated_interface(::kentik::interface::v202108alpha1::Interface* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.interface_);
  }
  _impl_.interface_ = reinterpret_cast<::kentik::interface::v202108alpha1::Interface*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.interface.v202108alpha1.CreateInterfaceResponse.interface)
}
inline ::kentik::interface::v202108alpha1::Interface* CreateInterfaceResponse::release_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::interface::v202108alpha1::Interface* released = _impl_.interface_;
  _impl_.interface_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::interface::v202108alpha1::Interface* CreateInterfaceResponse::unsafe_arena_release_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.CreateInterfaceResponse.interface)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::interface::v202108alpha1::Interface* temp = _impl_.interface_;
  _impl_.interface_ = nullptr;
  return temp;
}
inline ::kentik::interface::v202108alpha1::Interface* CreateInterfaceResponse::_internal_mutable_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.interface_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::interface::v202108alpha1::Interface>(GetArena());
    _impl_.interface_ = reinterpret_cast<::kentik::interface::v202108alpha1::Interface*>(p);
  }
  return _impl_.interface_;
}
inline ::kentik::interface::v202108alpha1::Interface* CreateInterfaceResponse::mutable_interface() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::interface::v202108alpha1::Interface* _msg = _internal_mutable_interface();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.CreateInterfaceResponse.interface)
  return _msg;
}
inline void CreateInterfaceResponse::set_allocated_interface(::kentik::interface::v202108alpha1::Interface* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.interface_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.interface_ = reinterpret_cast<::kentik::interface::v202108alpha1::Interface*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.CreateInterfaceResponse.interface)
}

// -------------------------------------------------------------------

// UpdateInterfaceRequest

// .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
inline bool UpdateInterfaceRequest::has_interface() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.interface_ != nullptr);
  return value;
}
inline void UpdateInterfaceRequest::clear_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.interface_ != nullptr) _impl_.interface_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::interface::v202108alpha1::Interface& UpdateInterfaceRequest::_internal_interface() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::interface::v202108alpha1::Interface* p = _impl_.interface_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::interface::v202108alpha1::Interface&>(::kentik::interface::v202108alpha1::_Interface_default_instance_);
}
inline const ::kentik::interface::v202108alpha1::Interface& UpdateInterfaceRequest::interface() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.UpdateInterfaceRequest.interface)
  return _internal_interface();
}
inline void UpdateInterfaceRequest::unsafe_arena_set_allocated_interface(::kentik::interface::v202108alpha1::Interface* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.interface_);
  }
  _impl_.interface_ = reinterpret_cast<::kentik::interface::v202108alpha1::Interface*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.interface.v202108alpha1.UpdateInterfaceRequest.interface)
}
inline ::kentik::interface::v202108alpha1::Interface* UpdateInterfaceRequest::release_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::interface::v202108alpha1::Interface* released = _impl_.interface_;
  _impl_.interface_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::interface::v202108alpha1::Interface* UpdateInterfaceRequest::unsafe_arena_release_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.UpdateInterfaceRequest.interface)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::interface::v202108alpha1::Interface* temp = _impl_.interface_;
  _impl_.interface_ = nullptr;
  return temp;
}
inline ::kentik::interface::v202108alpha1::Interface* UpdateInterfaceRequest::_internal_mutable_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.interface_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::interface::v202108alpha1::Interface>(GetArena());
    _impl_.interface_ = reinterpret_cast<::kentik::interface::v202108alpha1::Interface*>(p);
  }
  return _impl_.interface_;
}
inline ::kentik::interface::v202108alpha1::Interface* UpdateInterfaceRequest::mutable_interface() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::interface::v202108alpha1::Interface* _msg = _internal_mutable_interface();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.UpdateInterfaceRequest.interface)
  return _msg;
}
inline void UpdateInterfaceRequest::set_allocated_interface(::kentik::interface::v202108alpha1::Interface* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.interface_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.interface_ = reinterpret_cast<::kentik::interface::v202108alpha1::Interface*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.UpdateInterfaceRequest.interface)
}

// -------------------------------------------------------------------

// UpdateInterfaceResponse

// .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
inline bool UpdateInterfaceResponse::has_interface() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.interface_ != nullptr);
  return value;
}
inline void UpdateInterfaceResponse::clear_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.interface_ != nullptr) _impl_.interface_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::interface::v202108alpha1::Interface& UpdateInterfaceResponse::_internal_interface() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::interface::v202108alpha1::Interface* p = _impl_.interface_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::interface::v202108alpha1::Interface&>(::kentik::interface::v202108alpha1::_Interface_default_instance_);
}
inline const ::kentik::interface::v202108alpha1::Interface& UpdateInterfaceResponse::interface() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.UpdateInterfaceResponse.interface)
  return _internal_interface();
}
inline void UpdateInterfaceResponse::unsafe_arena_set_allocated_interface(::kentik::interface::v202108alpha1::Interface* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.interface_);
  }
  _impl_.interface_ = reinterpret_cast<::kentik::interface::v202108alpha1::Interface*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.interface.v202108alpha1.UpdateInterfaceResponse.interface)
}
inline ::kentik::interface::v202108alpha1::Interface* UpdateInterfaceResponse::release_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::interface::v202108alpha1::Interface* released = _impl_.interface_;
  _impl_.interface_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::interface::v202108alpha1::Interface* UpdateInterfaceResponse::unsafe_arena_release_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.UpdateInterfaceResponse.interface)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::interface::v202108alpha1::Interface* temp = _impl_.interface_;
  _impl_.interface_ = nullptr;
  return temp;
}
inline ::kentik::interface::v202108alpha1::Interface* UpdateInterfaceResponse::_internal_mutable_interface() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.interface_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::interface::v202108alpha1::Interface>(GetArena());
    _impl_.interface_ = reinterpret_cast<::kentik::interface::v202108alpha1::Interface*>(p);
  }
  return _impl_.interface_;
}
inline ::kentik::interface::v202108alpha1::Interface* UpdateInterfaceResponse::mutable_interface() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::interface::v202108alpha1::Interface* _msg = _internal_mutable_interface();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.UpdateInterfaceResponse.interface)
  return _msg;
}
inline void UpdateInterfaceResponse::set_allocated_interface(::kentik::interface::v202108alpha1::Interface* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.interface_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.interface_ = reinterpret_cast<::kentik::interface::v202108alpha1::Interface*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.UpdateInterfaceResponse.interface)
}

// -------------------------------------------------------------------

// DeleteInterfaceRequest

// string id = 1 [json_name = "id"];
inline void DeleteInterfaceRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& DeleteInterfaceRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.DeleteInterfaceRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteInterfaceRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.DeleteInterfaceRequest.id)
}
inline std::string* DeleteInterfaceRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.DeleteInterfaceRequest.id)
  return _s;
}
inline const std::string& DeleteInterfaceRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void DeleteInterfaceRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* DeleteInterfaceRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* DeleteInterfaceRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.DeleteInterfaceRequest.id)
  return _impl_.id_.Release();
}
inline void DeleteInterfaceRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.DeleteInterfaceRequest.id)
}

// -------------------------------------------------------------------

// DeleteInterfaceResponse

// -------------------------------------------------------------------

// Match

// .kentik.interface.v202108alpha1.MatchAttribute match_attribute = 1 [json_name = "matchAttribute"];
inline void Match::clear_match_attribute() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.match_attribute_ = 0;
}
inline ::kentik::interface::v202108alpha1::MatchAttribute Match::match_attribute() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Match.match_attribute)
  return _internal_match_attribute();
}
inline void Match::set_match_attribute(::kentik::interface::v202108alpha1::MatchAttribute value) {
  _internal_set_match_attribute(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Match.match_attribute)
}
inline ::kentik::interface::v202108alpha1::MatchAttribute Match::_internal_match_attribute() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::interface::v202108alpha1::MatchAttribute>(_impl_.match_attribute_);
}
inline void Match::_internal_set_match_attribute(::kentik::interface::v202108alpha1::MatchAttribute value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.match_attribute_ = value;
}

// .kentik.interface.v202108alpha1.Operator match_operator = 2 [json_name = "matchOperator"];
inline void Match::clear_match_operator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.match_operator_ = 0;
}
inline ::kentik::interface::v202108alpha1::Operator Match::match_operator() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Match.match_operator)
  return _internal_match_operator();
}
inline void Match::set_match_operator(::kentik::interface::v202108alpha1::Operator value) {
  _internal_set_match_operator(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Match.match_operator)
}
inline ::kentik::interface::v202108alpha1::Operator Match::_internal_match_operator() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::interface::v202108alpha1::Operator>(_impl_.match_operator_);
}
inline void Match::_internal_set_match_operator(::kentik::interface::v202108alpha1::Operator value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.match_operator_ = value;
}

// string pattern = 3 [json_name = "pattern"];
inline void Match::clear_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_.ClearToEmpty();
}
inline const std::string& Match::pattern() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Match.pattern)
  return _internal_pattern();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Match::set_pattern(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Match.pattern)
}
inline std::string* Match::mutable_pattern() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pattern();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Match.pattern)
  return _s;
}
inline const std::string& Match::_internal_pattern() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pattern_.Get();
}
inline void Match::_internal_set_pattern(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_.Set(value, GetArena());
}
inline std::string* Match::_internal_mutable_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pattern_.Mutable( GetArena());
}
inline std::string* Match::release_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Match.pattern)
  return _impl_.pattern_.Release();
}
inline void Match::set_allocated_pattern(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pattern_.IsDefault()) {
    _impl_.pattern_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Match.pattern)
}

// -------------------------------------------------------------------

// Action

// .kentik.interface.v202108alpha1.ConnectivityType set_connectivity_type = 1 [json_name = "setConnectivityType"];
inline void Action::clear_set_connectivity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_connectivity_type_ = 0;
}
inline ::kentik::interface::v202108alpha1::ConnectivityType Action::set_connectivity_type() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Action.set_connectivity_type)
  return _internal_set_connectivity_type();
}
inline void Action::set_set_connectivity_type(::kentik::interface::v202108alpha1::ConnectivityType value) {
  _internal_set_set_connectivity_type(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Action.set_connectivity_type)
}
inline ::kentik::interface::v202108alpha1::ConnectivityType Action::_internal_set_connectivity_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::interface::v202108alpha1::ConnectivityType>(_impl_.set_connectivity_type_);
}
inline void Action::_internal_set_set_connectivity_type(::kentik::interface::v202108alpha1::ConnectivityType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_connectivity_type_ = value;
}

// .kentik.interface.v202108alpha1.NetworkBoundary set_network_boundary = 2 [json_name = "setNetworkBoundary"];
inline void Action::clear_set_network_boundary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_network_boundary_ = 0;
}
inline ::kentik::interface::v202108alpha1::NetworkBoundary Action::set_network_boundary() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Action.set_network_boundary)
  return _internal_set_network_boundary();
}
inline void Action::set_set_network_boundary(::kentik::interface::v202108alpha1::NetworkBoundary value) {
  _internal_set_set_network_boundary(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Action.set_network_boundary)
}
inline ::kentik::interface::v202108alpha1::NetworkBoundary Action::_internal_set_network_boundary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::interface::v202108alpha1::NetworkBoundary>(_impl_.set_network_boundary_);
}
inline void Action::_internal_set_set_network_boundary(::kentik::interface::v202108alpha1::NetworkBoundary value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_network_boundary_ = value;
}

// string set_connected_asns = 3 [json_name = "setConnectedAsns"];
inline void Action::clear_set_connected_asns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_connected_asns_.ClearToEmpty();
}
inline const std::string& Action::set_connected_asns() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Action.set_connected_asns)
  return _internal_set_connected_asns();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Action::set_set_connected_asns(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_connected_asns_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Action.set_connected_asns)
}
inline std::string* Action::mutable_set_connected_asns() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_set_connected_asns();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Action.set_connected_asns)
  return _s;
}
inline const std::string& Action::_internal_set_connected_asns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.set_connected_asns_.Get();
}
inline void Action::_internal_set_set_connected_asns(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_connected_asns_.Set(value, GetArena());
}
inline std::string* Action::_internal_mutable_set_connected_asns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.set_connected_asns_.Mutable( GetArena());
}
inline std::string* Action::release_set_connected_asns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Action.set_connected_asns)
  return _impl_.set_connected_asns_.Release();
}
inline void Action::set_allocated_set_connected_asns(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_connected_asns_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.set_connected_asns_.IsDefault()) {
    _impl_.set_connected_asns_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Action.set_connected_asns)
}

// string set_provider = 4 [json_name = "setProvider"];
inline void Action::clear_set_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_provider_.ClearToEmpty();
}
inline const std::string& Action::set_provider() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Action.set_provider)
  return _internal_set_provider();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Action::set_set_provider(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_provider_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Action.set_provider)
}
inline std::string* Action::mutable_set_provider() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_set_provider();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Action.set_provider)
  return _s;
}
inline const std::string& Action::_internal_set_provider() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.set_provider_.Get();
}
inline void Action::_internal_set_set_provider(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_provider_.Set(value, GetArena());
}
inline std::string* Action::_internal_mutable_set_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.set_provider_.Mutable( GetArena());
}
inline std::string* Action::release_set_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Action.set_provider)
  return _impl_.set_provider_.Release();
}
inline void Action::set_allocated_set_provider(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_provider_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.set_provider_.IsDefault()) {
    _impl_.set_provider_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Action.set_provider)
}

// -------------------------------------------------------------------

// DeviceFilter

// bool all_devices = 1 [json_name = "allDevices"];
inline void DeviceFilter::clear_all_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.all_devices_ = false;
}
inline bool DeviceFilter::all_devices() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.DeviceFilter.all_devices)
  return _internal_all_devices();
}
inline void DeviceFilter::set_all_devices(bool value) {
  _internal_set_all_devices(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.DeviceFilter.all_devices)
}
inline bool DeviceFilter::_internal_all_devices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.all_devices_;
}
inline void DeviceFilter::_internal_set_all_devices(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.all_devices_ = value;
}

// repeated string device_name = 2 [json_name = "deviceName"];
inline int DeviceFilter::_internal_device_name_size() const {
  return _internal_device_name().size();
}
inline int DeviceFilter::device_name_size() const {
  return _internal_device_name_size();
}
inline void DeviceFilter::clear_device_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.Clear();
}
inline std::string* DeviceFilter::add_device_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_device_name()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.interface.v202108alpha1.DeviceFilter.device_name)
  return _s;
}
inline const std::string& DeviceFilter::device_name(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.DeviceFilter.device_name)
  return _internal_device_name().Get(index);
}
inline std::string* DeviceFilter::mutable_device_name(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.DeviceFilter.device_name)
  return _internal_mutable_device_name()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void DeviceFilter::set_device_name(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_device_name()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.DeviceFilter.device_name)
}
template <typename Arg_, typename... Args_>
inline void DeviceFilter::add_device_name(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_device_name(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.interface.v202108alpha1.DeviceFilter.device_name)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DeviceFilter::device_name() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.interface.v202108alpha1.DeviceFilter.device_name)
  return _internal_device_name();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DeviceFilter::mutable_device_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.interface.v202108alpha1.DeviceFilter.device_name)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_device_name();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DeviceFilter::_internal_device_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_name_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DeviceFilter::_internal_mutable_device_name() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.device_name_;
}

// repeated string device_labels = 3 [json_name = "deviceLabels"];
inline int DeviceFilter::_internal_device_labels_size() const {
  return _internal_device_labels().size();
}
inline int DeviceFilter::device_labels_size() const {
  return _internal_device_labels_size();
}
inline void DeviceFilter::clear_device_labels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_labels_.Clear();
}
inline std::string* DeviceFilter::add_device_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_device_labels()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.interface.v202108alpha1.DeviceFilter.device_labels)
  return _s;
}
inline const std::string& DeviceFilter::device_labels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.DeviceFilter.device_labels)
  return _internal_device_labels().Get(index);
}
inline std::string* DeviceFilter::mutable_device_labels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.DeviceFilter.device_labels)
  return _internal_mutable_device_labels()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void DeviceFilter::set_device_labels(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_device_labels()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.DeviceFilter.device_labels)
}
template <typename Arg_, typename... Args_>
inline void DeviceFilter::add_device_labels(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_device_labels(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.interface.v202108alpha1.DeviceFilter.device_labels)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DeviceFilter::device_labels() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.interface.v202108alpha1.DeviceFilter.device_labels)
  return _internal_device_labels();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DeviceFilter::mutable_device_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.interface.v202108alpha1.DeviceFilter.device_labels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_device_labels();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DeviceFilter::_internal_device_labels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_labels_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DeviceFilter::_internal_mutable_device_labels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.device_labels_;
}

// repeated string device_rules = 4 [json_name = "deviceRules"];
inline int DeviceFilter::_internal_device_rules_size() const {
  return _internal_device_rules().size();
}
inline int DeviceFilter::device_rules_size() const {
  return _internal_device_rules_size();
}
inline void DeviceFilter::clear_device_rules() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_rules_.Clear();
}
inline std::string* DeviceFilter::add_device_rules() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_device_rules()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.interface.v202108alpha1.DeviceFilter.device_rules)
  return _s;
}
inline const std::string& DeviceFilter::device_rules(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.DeviceFilter.device_rules)
  return _internal_device_rules().Get(index);
}
inline std::string* DeviceFilter::mutable_device_rules(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.DeviceFilter.device_rules)
  return _internal_mutable_device_rules()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void DeviceFilter::set_device_rules(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_device_rules()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.DeviceFilter.device_rules)
}
template <typename Arg_, typename... Args_>
inline void DeviceFilter::add_device_rules(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_device_rules(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.interface.v202108alpha1.DeviceFilter.device_rules)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DeviceFilter::device_rules() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.interface.v202108alpha1.DeviceFilter.device_rules)
  return _internal_device_rules();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DeviceFilter::mutable_device_rules() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.interface.v202108alpha1.DeviceFilter.device_rules)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_device_rules();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DeviceFilter::_internal_device_rules() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_rules_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DeviceFilter::_internal_mutable_device_rules() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.device_rules_;
}

// repeated string device_types = 5 [json_name = "deviceTypes"];
inline int DeviceFilter::_internal_device_types_size() const {
  return _internal_device_types().size();
}
inline int DeviceFilter::device_types_size() const {
  return _internal_device_types_size();
}
inline void DeviceFilter::clear_device_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_types_.Clear();
}
inline std::string* DeviceFilter::add_device_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_device_types()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.interface.v202108alpha1.DeviceFilter.device_types)
  return _s;
}
inline const std::string& DeviceFilter::device_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.DeviceFilter.device_types)
  return _internal_device_types().Get(index);
}
inline std::string* DeviceFilter::mutable_device_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.DeviceFilter.device_types)
  return _internal_mutable_device_types()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void DeviceFilter::set_device_types(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_device_types()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.DeviceFilter.device_types)
}
template <typename Arg_, typename... Args_>
inline void DeviceFilter::add_device_types(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_device_types(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.interface.v202108alpha1.DeviceFilter.device_types)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DeviceFilter::device_types() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.interface.v202108alpha1.DeviceFilter.device_types)
  return _internal_device_types();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DeviceFilter::mutable_device_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.interface.v202108alpha1.DeviceFilter.device_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_device_types();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DeviceFilter::_internal_device_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_types_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DeviceFilter::_internal_mutable_device_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.device_types_;
}

// -------------------------------------------------------------------

// Rule

// string id = 1 [json_name = "id"];
inline void Rule::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Rule::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Rule.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Rule::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Rule.id)
}
inline std::string* Rule::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Rule.id)
  return _s;
}
inline const std::string& Rule::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Rule::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Rule::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Rule::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Rule.id)
  return _impl_.id_.Release();
}
inline void Rule::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Rule.id)
}

// bool enabled = 2 [json_name = "enabled"];
inline void Rule::clear_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = false;
}
inline bool Rule::enabled() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Rule.enabled)
  return _internal_enabled();
}
inline void Rule::set_enabled(bool value) {
  _internal_set_enabled(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Rule.enabled)
}
inline bool Rule::_internal_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enabled_;
}
inline void Rule::_internal_set_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = value;
}

// int32 rank = 3 [json_name = "rank"];
inline void Rule::clear_rank() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rank_ = 0;
}
inline ::int32_t Rule::rank() const {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Rule.rank)
  return _internal_rank();
}
inline void Rule::set_rank(::int32_t value) {
  _internal_set_rank(value);
  // @@protoc_insertion_point(field_set:kentik.interface.v202108alpha1.Rule.rank)
}
inline ::int32_t Rule::_internal_rank() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rank_;
}
inline void Rule::_internal_set_rank(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rank_ = value;
}

// .kentik.interface.v202108alpha1.Match match_clause = 4 [json_name = "matchClause"];
inline bool Rule::has_match_clause() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.match_clause_ != nullptr);
  return value;
}
inline void Rule::clear_match_clause() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.match_clause_ != nullptr) _impl_.match_clause_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::interface::v202108alpha1::Match& Rule::_internal_match_clause() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::interface::v202108alpha1::Match* p = _impl_.match_clause_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::interface::v202108alpha1::Match&>(::kentik::interface::v202108alpha1::_Match_default_instance_);
}
inline const ::kentik::interface::v202108alpha1::Match& Rule::match_clause() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Rule.match_clause)
  return _internal_match_clause();
}
inline void Rule::unsafe_arena_set_allocated_match_clause(::kentik::interface::v202108alpha1::Match* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.match_clause_);
  }
  _impl_.match_clause_ = reinterpret_cast<::kentik::interface::v202108alpha1::Match*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.interface.v202108alpha1.Rule.match_clause)
}
inline ::kentik::interface::v202108alpha1::Match* Rule::release_match_clause() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::interface::v202108alpha1::Match* released = _impl_.match_clause_;
  _impl_.match_clause_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::interface::v202108alpha1::Match* Rule::unsafe_arena_release_match_clause() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Rule.match_clause)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::interface::v202108alpha1::Match* temp = _impl_.match_clause_;
  _impl_.match_clause_ = nullptr;
  return temp;
}
inline ::kentik::interface::v202108alpha1::Match* Rule::_internal_mutable_match_clause() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.match_clause_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::interface::v202108alpha1::Match>(GetArena());
    _impl_.match_clause_ = reinterpret_cast<::kentik::interface::v202108alpha1::Match*>(p);
  }
  return _impl_.match_clause_;
}
inline ::kentik::interface::v202108alpha1::Match* Rule::mutable_match_clause() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::interface::v202108alpha1::Match* _msg = _internal_mutable_match_clause();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Rule.match_clause)
  return _msg;
}
inline void Rule::set_allocated_match_clause(::kentik::interface::v202108alpha1::Match* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.match_clause_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.match_clause_ = reinterpret_cast<::kentik::interface::v202108alpha1::Match*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Rule.match_clause)
}

// .kentik.interface.v202108alpha1.Action action_set = 5 [json_name = "actionSet"];
inline bool Rule::has_action_set() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.action_set_ != nullptr);
  return value;
}
inline void Rule::clear_action_set() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.action_set_ != nullptr) _impl_.action_set_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::kentik::interface::v202108alpha1::Action& Rule::_internal_action_set() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::interface::v202108alpha1::Action* p = _impl_.action_set_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::interface::v202108alpha1::Action&>(::kentik::interface::v202108alpha1::_Action_default_instance_);
}
inline const ::kentik::interface::v202108alpha1::Action& Rule::action_set() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Rule.action_set)
  return _internal_action_set();
}
inline void Rule::unsafe_arena_set_allocated_action_set(::kentik::interface::v202108alpha1::Action* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.action_set_);
  }
  _impl_.action_set_ = reinterpret_cast<::kentik::interface::v202108alpha1::Action*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.interface.v202108alpha1.Rule.action_set)
}
inline ::kentik::interface::v202108alpha1::Action* Rule::release_action_set() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::interface::v202108alpha1::Action* released = _impl_.action_set_;
  _impl_.action_set_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::interface::v202108alpha1::Action* Rule::unsafe_arena_release_action_set() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Rule.action_set)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::interface::v202108alpha1::Action* temp = _impl_.action_set_;
  _impl_.action_set_ = nullptr;
  return temp;
}
inline ::kentik::interface::v202108alpha1::Action* Rule::_internal_mutable_action_set() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.action_set_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::interface::v202108alpha1::Action>(GetArena());
    _impl_.action_set_ = reinterpret_cast<::kentik::interface::v202108alpha1::Action*>(p);
  }
  return _impl_.action_set_;
}
inline ::kentik::interface::v202108alpha1::Action* Rule::mutable_action_set() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::interface::v202108alpha1::Action* _msg = _internal_mutable_action_set();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Rule.action_set)
  return _msg;
}
inline void Rule::set_allocated_action_set(::kentik::interface::v202108alpha1::Action* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.action_set_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.action_set_ = reinterpret_cast<::kentik::interface::v202108alpha1::Action*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Rule.action_set)
}

// .google.protobuf.Timestamp cdate = 6 [json_name = "cdate"];
inline bool Rule::has_cdate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cdate_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Rule::_internal_cdate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.cdate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Rule::cdate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Rule.cdate)
  return _internal_cdate();
}
inline void Rule::unsafe_arena_set_allocated_cdate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cdate_);
  }
  _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.interface.v202108alpha1.Rule.cdate)
}
inline ::google::protobuf::Timestamp* Rule::release_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.cdate_;
  _impl_.cdate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Rule::unsafe_arena_release_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Rule.cdate)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.cdate_;
  _impl_.cdate_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Rule::_internal_mutable_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cdate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.cdate_;
}
inline ::google::protobuf::Timestamp* Rule::mutable_cdate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_cdate();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Rule.cdate)
  return _msg;
}
inline void Rule::set_allocated_cdate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cdate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Rule.cdate)
}

// .google.protobuf.Timestamp edate = 7 [json_name = "edate"];
inline bool Rule::has_edate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.edate_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Rule::_internal_edate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.edate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Rule::edate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Rule.edate)
  return _internal_edate();
}
inline void Rule::unsafe_arena_set_allocated_edate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.edate_);
  }
  _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.interface.v202108alpha1.Rule.edate)
}
inline ::google::protobuf::Timestamp* Rule::release_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* released = _impl_.edate_;
  _impl_.edate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Rule::unsafe_arena_release_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Rule.edate)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* temp = _impl_.edate_;
  _impl_.edate_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Rule::_internal_mutable_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.edate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.edate_;
}
inline ::google::protobuf::Timestamp* Rule::mutable_edate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_edate();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Rule.edate)
  return _msg;
}
inline void Rule::set_allocated_edate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.edate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Rule.edate)
}

// .kentik.interface.v202108alpha1.DeviceFilter included_devices = 8 [json_name = "includedDevices"];
inline bool Rule::has_included_devices() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.included_devices_ != nullptr);
  return value;
}
inline void Rule::clear_included_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.included_devices_ != nullptr) _impl_.included_devices_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::kentik::interface::v202108alpha1::DeviceFilter& Rule::_internal_included_devices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::interface::v202108alpha1::DeviceFilter* p = _impl_.included_devices_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::interface::v202108alpha1::DeviceFilter&>(::kentik::interface::v202108alpha1::_DeviceFilter_default_instance_);
}
inline const ::kentik::interface::v202108alpha1::DeviceFilter& Rule::included_devices() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Rule.included_devices)
  return _internal_included_devices();
}
inline void Rule::unsafe_arena_set_allocated_included_devices(::kentik::interface::v202108alpha1::DeviceFilter* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.included_devices_);
  }
  _impl_.included_devices_ = reinterpret_cast<::kentik::interface::v202108alpha1::DeviceFilter*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.interface.v202108alpha1.Rule.included_devices)
}
inline ::kentik::interface::v202108alpha1::DeviceFilter* Rule::release_included_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::kentik::interface::v202108alpha1::DeviceFilter* released = _impl_.included_devices_;
  _impl_.included_devices_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::interface::v202108alpha1::DeviceFilter* Rule::unsafe_arena_release_included_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Rule.included_devices)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::kentik::interface::v202108alpha1::DeviceFilter* temp = _impl_.included_devices_;
  _impl_.included_devices_ = nullptr;
  return temp;
}
inline ::kentik::interface::v202108alpha1::DeviceFilter* Rule::_internal_mutable_included_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.included_devices_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::interface::v202108alpha1::DeviceFilter>(GetArena());
    _impl_.included_devices_ = reinterpret_cast<::kentik::interface::v202108alpha1::DeviceFilter*>(p);
  }
  return _impl_.included_devices_;
}
inline ::kentik::interface::v202108alpha1::DeviceFilter* Rule::mutable_included_devices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::kentik::interface::v202108alpha1::DeviceFilter* _msg = _internal_mutable_included_devices();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Rule.included_devices)
  return _msg;
}
inline void Rule::set_allocated_included_devices(::kentik::interface::v202108alpha1::DeviceFilter* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.included_devices_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.included_devices_ = reinterpret_cast<::kentik::interface::v202108alpha1::DeviceFilter*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Rule.included_devices)
}

// .kentik.interface.v202108alpha1.DeviceFilter excluded_devices = 9 [json_name = "excludedDevices"];
inline bool Rule::has_excluded_devices() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.excluded_devices_ != nullptr);
  return value;
}
inline void Rule::clear_excluded_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.excluded_devices_ != nullptr) _impl_.excluded_devices_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::kentik::interface::v202108alpha1::DeviceFilter& Rule::_internal_excluded_devices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::interface::v202108alpha1::DeviceFilter* p = _impl_.excluded_devices_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::interface::v202108alpha1::DeviceFilter&>(::kentik::interface::v202108alpha1::_DeviceFilter_default_instance_);
}
inline const ::kentik::interface::v202108alpha1::DeviceFilter& Rule::excluded_devices() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.interface.v202108alpha1.Rule.excluded_devices)
  return _internal_excluded_devices();
}
inline void Rule::unsafe_arena_set_allocated_excluded_devices(::kentik::interface::v202108alpha1::DeviceFilter* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.excluded_devices_);
  }
  _impl_.excluded_devices_ = reinterpret_cast<::kentik::interface::v202108alpha1::DeviceFilter*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.interface.v202108alpha1.Rule.excluded_devices)
}
inline ::kentik::interface::v202108alpha1::DeviceFilter* Rule::release_excluded_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::kentik::interface::v202108alpha1::DeviceFilter* released = _impl_.excluded_devices_;
  _impl_.excluded_devices_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::interface::v202108alpha1::DeviceFilter* Rule::unsafe_arena_release_excluded_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.interface.v202108alpha1.Rule.excluded_devices)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::kentik::interface::v202108alpha1::DeviceFilter* temp = _impl_.excluded_devices_;
  _impl_.excluded_devices_ = nullptr;
  return temp;
}
inline ::kentik::interface::v202108alpha1::DeviceFilter* Rule::_internal_mutable_excluded_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.excluded_devices_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::interface::v202108alpha1::DeviceFilter>(GetArena());
    _impl_.excluded_devices_ = reinterpret_cast<::kentik::interface::v202108alpha1::DeviceFilter*>(p);
  }
  return _impl_.excluded_devices_;
}
inline ::kentik::interface::v202108alpha1::DeviceFilter* Rule::mutable_excluded_devices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::kentik::interface::v202108alpha1::DeviceFilter* _msg = _internal_mutable_excluded_devices();
  // @@protoc_insertion_point(field_mutable:kentik.interface.v202108alpha1.Rule.excluded_devices)
  return _msg;
}
inline void Rule::set_allocated_excluded_devices(::kentik::interface::v202108alpha1::DeviceFilter* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.excluded_devices_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.excluded_devices_ = reinterpret_cast<::kentik::interface::v202108alpha1::DeviceFilter*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.interface.v202108alpha1.Rule.excluded_devices)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v202108alpha1
}  // namespace interface
}  // namespace kentik


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::kentik::interface::v202108alpha1::ConnectivityType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::interface::v202108alpha1::ConnectivityType>() {
  return ::kentik::interface::v202108alpha1::ConnectivityType_descriptor();
}
template <>
struct is_proto_enum<::kentik::interface::v202108alpha1::NetworkBoundary> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::interface::v202108alpha1::NetworkBoundary>() {
  return ::kentik::interface::v202108alpha1::NetworkBoundary_descriptor();
}
template <>
struct is_proto_enum<::kentik::interface::v202108alpha1::IpFilter> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::interface::v202108alpha1::IpFilter>() {
  return ::kentik::interface::v202108alpha1::IpFilter_descriptor();
}
template <>
struct is_proto_enum<::kentik::interface::v202108alpha1::MatchAttribute> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::interface::v202108alpha1::MatchAttribute>() {
  return ::kentik::interface::v202108alpha1::MatchAttribute_descriptor();
}
template <>
struct is_proto_enum<::kentik::interface::v202108alpha1::Operator> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::interface::v202108alpha1::Operator>() {
  return ::kentik::interface::v202108alpha1::Operator_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kentik_2finterface_2fv202108alpha1_2finterface_2eproto_2epb_2eh
