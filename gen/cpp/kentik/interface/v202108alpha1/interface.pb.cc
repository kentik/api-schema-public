// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/interface/v202108alpha1/interface.proto
// Protobuf C++ Version: 5.29.3

#include "kentik/interface/v202108alpha1/interface.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace kentik {
namespace interface {
namespace v202108alpha1 {

inline constexpr Match::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : pattern_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        match_attribute_{static_cast< ::kentik::interface::v202108alpha1::MatchAttribute >(0)},
        match_operator_{static_cast< ::kentik::interface::v202108alpha1::Operator >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Match::Match(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MatchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MatchDefaultTypeInternal() {}
  union {
    Match _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MatchDefaultTypeInternal _Match_default_instance_;

inline constexpr ManualClassifyResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_ids_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ManualClassifyResponse::ManualClassifyResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ManualClassifyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ManualClassifyResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ManualClassifyResponseDefaultTypeInternal() {}
  union {
    ManualClassifyResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ManualClassifyResponseDefaultTypeInternal _ManualClassifyResponse_default_instance_;

inline constexpr ManualClassifyRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : interface_ids_{},
        provider_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        connectivity_type_{static_cast< ::kentik::interface::v202108alpha1::ConnectivityType >(0)},
        network_boundary_{static_cast< ::kentik::interface::v202108alpha1::NetworkBoundary >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ManualClassifyRequest::ManualClassifyRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ManualClassifyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ManualClassifyRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ManualClassifyRequestDefaultTypeInternal() {}
  union {
    ManualClassifyRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ManualClassifyRequestDefaultTypeInternal _ManualClassifyRequest_default_instance_;

inline constexpr InterfaceFilter::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_ids_{},
        connectivity_types_{},
        _connectivity_types_cached_byte_size_{0},
        network_boundaries_{},
        _network_boundaries_cached_byte_size_{0},
        providers_{},
        snmp_speeds_{},
        _snmp_speeds_cached_byte_size_{0},
        ip_types_{},
        _ip_types_cached_byte_size_{0},
        text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InterfaceFilter::InterfaceFilter(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InterfaceFilterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InterfaceFilterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InterfaceFilterDefaultTypeInternal() {}
  union {
    InterfaceFilter _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InterfaceFilterDefaultTypeInternal _InterfaceFilter_default_instance_;

inline constexpr InterfaceClassification::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : classified_{false},
        connectivity_type_{static_cast< ::kentik::interface::v202108alpha1::ConnectivityType >(0)},
        network_boundary_{static_cast< ::kentik::interface::v202108alpha1::NetworkBoundary >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InterfaceClassification::InterfaceClassification(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InterfaceClassificationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InterfaceClassificationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InterfaceClassificationDefaultTypeInternal() {}
  union {
    InterfaceClassification _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InterfaceClassificationDefaultTypeInternal _InterfaceClassification_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Interface_VrfEntry_DoNotUse::Interface_VrfEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Interface_VrfEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Interface_VrfEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Interface_VrfEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Interface_VrfEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Interface_VrfEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Interface_VrfEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Interface_VrfEntry_DoNotUseDefaultTypeInternal _Interface_VrfEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Interface_InterfaceTagsEntry_DoNotUse::Interface_InterfaceTagsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Interface_InterfaceTagsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Interface_InterfaceTagsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Interface_InterfaceTagsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Interface_InterfaceTagsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Interface_InterfaceTagsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Interface_InterfaceTagsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Interface_InterfaceTagsEntry_DoNotUseDefaultTypeInternal _Interface_InterfaceTagsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Interface_InterfaceKvsEntry_DoNotUse::Interface_InterfaceKvsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Interface_InterfaceKvsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Interface_InterfaceKvsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Interface_InterfaceKvsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Interface_InterfaceKvsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Interface_InterfaceKvsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Interface_InterfaceKvsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Interface_InterfaceKvsEntry_DoNotUseDefaultTypeInternal _Interface_InterfaceKvsEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Interface_ExtraInfoEntry_DoNotUse::Interface_ExtraInfoEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Interface_ExtraInfoEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Interface_ExtraInfoEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Interface_ExtraInfoEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Interface_ExtraInfoEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Interface_ExtraInfoEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Interface_ExtraInfoEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Interface_ExtraInfoEntry_DoNotUseDefaultTypeInternal _Interface_ExtraInfoEntry_DoNotUse_default_instance_;

inline constexpr GetInterfaceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetInterfaceRequest::GetInterfaceRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetInterfaceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetInterfaceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetInterfaceRequestDefaultTypeInternal() {}
  union {
    GetInterfaceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetInterfaceRequestDefaultTypeInternal _GetInterfaceRequest_default_instance_;

inline constexpr DeviceFilter::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_name_{},
        device_labels_{},
        device_rules_{},
        device_types_{},
        all_devices_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceFilter::DeviceFilter(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeviceFilterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceFilterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceFilterDefaultTypeInternal() {}
  union {
    DeviceFilter _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceFilterDefaultTypeInternal _DeviceFilter_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR DeleteInterfaceResponse::DeleteInterfaceResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct DeleteInterfaceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteInterfaceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteInterfaceResponseDefaultTypeInternal() {}
  union {
    DeleteInterfaceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteInterfaceResponseDefaultTypeInternal _DeleteInterfaceResponse_default_instance_;

inline constexpr DeleteInterfaceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteInterfaceRequest::DeleteInterfaceRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeleteInterfaceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteInterfaceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteInterfaceRequestDefaultTypeInternal() {}
  union {
    DeleteInterfaceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteInterfaceRequestDefaultTypeInternal _DeleteInterfaceRequest_default_instance_;

inline constexpr ClassifyCounter::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : count_{0},
        external_count_{0},
        free_pni_count_{0},
        ix_count_{0},
        provider_count_{0},
        transit_count_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ClassifyCounter::ClassifyCounter(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClassifyCounterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClassifyCounterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClassifyCounterDefaultTypeInternal() {}
  union {
    ClassifyCounter _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClassifyCounterDefaultTypeInternal _ClassifyCounter_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR AutoClassifyRequest::AutoClassifyRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct AutoClassifyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AutoClassifyRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AutoClassifyRequestDefaultTypeInternal() {}
  union {
    AutoClassifyRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AutoClassifyRequestDefaultTypeInternal _AutoClassifyRequest_default_instance_;

inline constexpr Action::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : set_connected_asns_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        set_provider_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        set_connectivity_type_{static_cast< ::kentik::interface::v202108alpha1::ConnectivityType >(0)},
        set_network_boundary_{static_cast< ::kentik::interface::v202108alpha1::NetworkBoundary >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Action::Action(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ActionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActionDefaultTypeInternal() {}
  union {
    Action _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActionDefaultTypeInternal _Action_default_instance_;

inline constexpr Rule::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        match_clause_{nullptr},
        action_set_{nullptr},
        cdate_{nullptr},
        edate_{nullptr},
        included_devices_{nullptr},
        excluded_devices_{nullptr},
        enabled_{false},
        rank_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Rule::Rule(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RuleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RuleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RuleDefaultTypeInternal() {}
  union {
    Rule _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RuleDefaultTypeInternal _Rule_default_instance_;

inline constexpr ListInterfaceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        filters_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ListInterfaceRequest::ListInterfaceRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListInterfaceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListInterfaceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListInterfaceRequestDefaultTypeInternal() {}
  union {
    ListInterfaceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListInterfaceRequestDefaultTypeInternal _ListInterfaceRequest_default_instance_;

inline constexpr InterfaceClassifyInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        top_nexthop_asns_{},
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        snmp_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        snmp_alias_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        interface_ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        interface_ip_asn_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pdb_global_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        provider_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        previously_classified_provider_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        auto_classification_{nullptr},
        previous_classification_{nullptr},
        is_internal_ip_{false},
        is_internal_asn_{false},
        auto_classified_provider_{false},
        previously_classified_external_{false},
        network_boundary_confidence_{0},
        connectivity_type_confidence_{0},
        provider_confidence_{0},
        ip_asn_matched_{false},
        ix_matched_{false},
        nexthop_matched_{false},
        connectivity_type_matched_{false},
        provider_matched_{false},
        changed_classification_{false} {}

template <typename>
PROTOBUF_CONSTEXPR InterfaceClassifyInfo::InterfaceClassifyInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InterfaceClassifyInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InterfaceClassifyInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InterfaceClassifyInfoDefaultTypeInternal() {}
  union {
    InterfaceClassifyInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InterfaceClassifyInfoDefaultTypeInternal _InterfaceClassifyInfo_default_instance_;

inline constexpr Interface::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        top_nexthop_asns_{},
        _top_nexthop_asns_cached_byte_size_{0},
        interface_kvs_{},
        interface_tags_{},
        extra_info_{},
        vrf_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        snmp_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        snmp_alias_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        interface_ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        interface_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        interface_ip_netmask_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        provider_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        interface_status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        initial_snmp_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        initial_snmp_alias_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        initial_interface_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        secondary_ips_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        initial_provider_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        vrf_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cdate_{nullptr},
        edate_{nullptr},
        snmp_speed_{0},
        snmp_type_{0},
        connectivity_type_{static_cast< ::kentik::interface::v202108alpha1::ConnectivityType >(0)},
        network_boundary_{static_cast< ::kentik::interface::v202108alpha1::NetworkBoundary >(0)},
        initial_snmp_speed_{0},
        initial_connectivity_type_{static_cast< ::kentik::interface::v202108alpha1::ConnectivityType >(0)},
        initial_network_boundary_{static_cast< ::kentik::interface::v202108alpha1::NetworkBoundary >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Interface::Interface(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InterfaceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InterfaceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InterfaceDefaultTypeInternal() {}
  union {
    Interface _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InterfaceDefaultTypeInternal _Interface_default_instance_;

inline constexpr UpdateInterfaceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        interface_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateInterfaceResponse::UpdateInterfaceResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateInterfaceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateInterfaceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateInterfaceResponseDefaultTypeInternal() {}
  union {
    UpdateInterfaceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateInterfaceResponseDefaultTypeInternal _UpdateInterfaceResponse_default_instance_;

inline constexpr UpdateInterfaceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        interface_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateInterfaceRequest::UpdateInterfaceRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateInterfaceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateInterfaceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateInterfaceRequestDefaultTypeInternal() {}
  union {
    UpdateInterfaceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateInterfaceRequestDefaultTypeInternal _UpdateInterfaceRequest_default_instance_;

inline constexpr ListInterfaceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : interfaces_{},
        total_count_{0},
        invalid_count_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListInterfaceResponse::ListInterfaceResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListInterfaceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListInterfaceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListInterfaceResponseDefaultTypeInternal() {}
  union {
    ListInterfaceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListInterfaceResponseDefaultTypeInternal _ListInterfaceResponse_default_instance_;

inline constexpr GetInterfaceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        interface_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetInterfaceResponse::GetInterfaceResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetInterfaceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetInterfaceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetInterfaceResponseDefaultTypeInternal() {}
  union {
    GetInterfaceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetInterfaceResponseDefaultTypeInternal _GetInterfaceResponse_default_instance_;

inline constexpr DeviceClassifyInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        interfaces_{},
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        previously_classified_counter_{nullptr},
        auto_classified_counter_{nullptr},
        total_interfaces_{0},
        changed_classification_count_{0},
        ip_asn_matched_count_{0},
        ix_matched_count_{0},
        nexthop_matched_count_{0},
        connectivity_type_matched_count_{0},
        provider_matched_count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceClassifyInfo::DeviceClassifyInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeviceClassifyInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceClassifyInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceClassifyInfoDefaultTypeInternal() {}
  union {
    DeviceClassifyInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceClassifyInfoDefaultTypeInternal _DeviceClassifyInfo_default_instance_;

inline constexpr CreateInterfaceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        interface_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateInterfaceResponse::CreateInterfaceResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateInterfaceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateInterfaceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateInterfaceResponseDefaultTypeInternal() {}
  union {
    CreateInterfaceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateInterfaceResponseDefaultTypeInternal _CreateInterfaceResponse_default_instance_;

inline constexpr CreateInterfaceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        interface_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateInterfaceRequest::CreateInterfaceRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateInterfaceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateInterfaceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateInterfaceRequestDefaultTypeInternal() {}
  union {
    CreateInterfaceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateInterfaceRequestDefaultTypeInternal _CreateInterfaceRequest_default_instance_;

inline constexpr AutoClassifyResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        devices_{},
        total_auto_classify_counter_{nullptr},
        total_previous_counter_{nullptr},
        perc_auto_classified_{0},
        net_changed_transit_{0},
        net_changed_ix_{0},
        net_changed_provider_{0},
        total_changed_classification_count_{0},
        total_auto_classify_count_{0},
        total_interfaces_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AutoClassifyResponse::AutoClassifyResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AutoClassifyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AutoClassifyResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AutoClassifyResponseDefaultTypeInternal() {}
  union {
    AutoClassifyResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AutoClassifyResponseDefaultTypeInternal _AutoClassifyResponse_default_instance_;
}  // namespace v202108alpha1
}  // namespace interface
}  // namespace kentik
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_kentik_2finterface_2fv202108alpha1_2finterface_2eproto[5];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_kentik_2finterface_2fv202108alpha1_2finterface_2eproto = nullptr;
const ::uint32_t
    TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface_InterfaceKvsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface_InterfaceKvsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface_InterfaceKvsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface_InterfaceKvsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface_InterfaceTagsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface_InterfaceTagsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface_InterfaceTagsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface_InterfaceTagsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface_ExtraInfoEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface_ExtraInfoEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface_ExtraInfoEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface_ExtraInfoEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface_VrfEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface_VrfEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface_VrfEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface_VrfEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.snmp_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.snmp_speed_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.snmp_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.snmp_alias_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.interface_ip_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.interface_description_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.cdate_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.edate_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.interface_ip_netmask_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.connectivity_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.network_boundary_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.top_nexthop_asns_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.provider_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.interface_kvs_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.interface_tags_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.interface_status_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.extra_info_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.initial_snmp_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.initial_snmp_alias_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.initial_interface_description_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.initial_snmp_speed_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.secondary_ips_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.initial_connectivity_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.initial_network_boundary_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.initial_provider_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.vrf_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Interface, _impl_.vrf_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassification, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassification, _impl_.classified_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassification, _impl_.connectivity_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassification, _impl_.network_boundary_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::ClassifyCounter, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::ClassifyCounter, _impl_.count_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::ClassifyCounter, _impl_.external_count_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::ClassifyCounter, _impl_.free_pni_count_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::ClassifyCounter, _impl_.ix_count_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::ClassifyCounter, _impl_.provider_count_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::ClassifyCounter, _impl_.transit_count_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.snmp_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.snmp_alias_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.interface_ip_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.interface_ip_asn_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.is_internal_ip_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.is_internal_asn_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.top_nexthop_asns_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.pdb_global_name_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.auto_classification_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.previous_classification_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.provider_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.network_boundary_confidence_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.connectivity_type_confidence_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.provider_confidence_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.auto_classified_provider_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.previously_classified_provider_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.previously_classified_external_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.ip_asn_matched_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.ix_matched_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.nexthop_matched_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.connectivity_type_matched_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.provider_matched_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceClassifyInfo, _impl_.changed_classification_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::DeviceClassifyInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::DeviceClassifyInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::DeviceClassifyInfo, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::DeviceClassifyInfo, _impl_.total_interfaces_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::DeviceClassifyInfo, _impl_.previously_classified_counter_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::DeviceClassifyInfo, _impl_.auto_classified_counter_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::DeviceClassifyInfo, _impl_.changed_classification_count_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::DeviceClassifyInfo, _impl_.ip_asn_matched_count_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::DeviceClassifyInfo, _impl_.ix_matched_count_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::DeviceClassifyInfo, _impl_.nexthop_matched_count_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::DeviceClassifyInfo, _impl_.connectivity_type_matched_count_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::DeviceClassifyInfo, _impl_.provider_matched_count_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::DeviceClassifyInfo, _impl_.interfaces_),
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceFilter, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceFilter, _impl_.text_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceFilter, _impl_.device_ids_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceFilter, _impl_.connectivity_types_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceFilter, _impl_.network_boundaries_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceFilter, _impl_.providers_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceFilter, _impl_.snmp_speeds_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::InterfaceFilter, _impl_.ip_types_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::AutoClassifyRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::AutoClassifyResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::AutoClassifyResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::AutoClassifyResponse, _impl_.perc_auto_classified_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::AutoClassifyResponse, _impl_.net_changed_transit_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::AutoClassifyResponse, _impl_.net_changed_ix_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::AutoClassifyResponse, _impl_.net_changed_provider_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::AutoClassifyResponse, _impl_.total_changed_classification_count_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::AutoClassifyResponse, _impl_.total_auto_classify_count_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::AutoClassifyResponse, _impl_.total_auto_classify_counter_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::AutoClassifyResponse, _impl_.total_previous_counter_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::AutoClassifyResponse, _impl_.total_interfaces_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::AutoClassifyResponse, _impl_.devices_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::ManualClassifyRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::ManualClassifyRequest, _impl_.interface_ids_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::ManualClassifyRequest, _impl_.connectivity_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::ManualClassifyRequest, _impl_.network_boundary_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::ManualClassifyRequest, _impl_.provider_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::ManualClassifyResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::ManualClassifyResponse, _impl_.device_ids_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::ListInterfaceRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::ListInterfaceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::ListInterfaceRequest, _impl_.filters_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::ListInterfaceResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::ListInterfaceResponse, _impl_.interfaces_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::ListInterfaceResponse, _impl_.total_count_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::ListInterfaceResponse, _impl_.invalid_count_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::GetInterfaceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::GetInterfaceRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::GetInterfaceResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::GetInterfaceResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::GetInterfaceResponse, _impl_.interface_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::CreateInterfaceRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::CreateInterfaceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::CreateInterfaceRequest, _impl_.interface_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::CreateInterfaceResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::CreateInterfaceResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::CreateInterfaceResponse, _impl_.interface_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::UpdateInterfaceRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::UpdateInterfaceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::UpdateInterfaceRequest, _impl_.interface_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::UpdateInterfaceResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::UpdateInterfaceResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::UpdateInterfaceResponse, _impl_.interface_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::DeleteInterfaceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::DeleteInterfaceRequest, _impl_.id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::DeleteInterfaceResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Match, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Match, _impl_.match_attribute_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Match, _impl_.match_operator_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Match, _impl_.pattern_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Action, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Action, _impl_.set_connectivity_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Action, _impl_.set_network_boundary_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Action, _impl_.set_connected_asns_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Action, _impl_.set_provider_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::DeviceFilter, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::DeviceFilter, _impl_.all_devices_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::DeviceFilter, _impl_.device_name_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::DeviceFilter, _impl_.device_labels_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::DeviceFilter, _impl_.device_rules_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::DeviceFilter, _impl_.device_types_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Rule, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Rule, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Rule, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Rule, _impl_.enabled_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Rule, _impl_.rank_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Rule, _impl_.match_clause_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Rule, _impl_.action_set_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Rule, _impl_.cdate_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Rule, _impl_.edate_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Rule, _impl_.included_devices_),
        PROTOBUF_FIELD_OFFSET(::kentik::interface::v202108alpha1::Rule, _impl_.excluded_devices_),
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        2,
        3,
        4,
        5,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::kentik::interface::v202108alpha1::Interface_InterfaceKvsEntry_DoNotUse)},
        {12, 22, -1, sizeof(::kentik::interface::v202108alpha1::Interface_InterfaceTagsEntry_DoNotUse)},
        {24, 34, -1, sizeof(::kentik::interface::v202108alpha1::Interface_ExtraInfoEntry_DoNotUse)},
        {36, 46, -1, sizeof(::kentik::interface::v202108alpha1::Interface_VrfEntry_DoNotUse)},
        {48, 85, -1, sizeof(::kentik::interface::v202108alpha1::Interface)},
        {114, -1, -1, sizeof(::kentik::interface::v202108alpha1::InterfaceClassification)},
        {125, -1, -1, sizeof(::kentik::interface::v202108alpha1::ClassifyCounter)},
        {139, 171, -1, sizeof(::kentik::interface::v202108alpha1::InterfaceClassifyInfo)},
        {195, 214, -1, sizeof(::kentik::interface::v202108alpha1::DeviceClassifyInfo)},
        {225, -1, -1, sizeof(::kentik::interface::v202108alpha1::InterfaceFilter)},
        {240, -1, -1, sizeof(::kentik::interface::v202108alpha1::AutoClassifyRequest)},
        {248, 266, -1, sizeof(::kentik::interface::v202108alpha1::AutoClassifyResponse)},
        {276, -1, -1, sizeof(::kentik::interface::v202108alpha1::ManualClassifyRequest)},
        {288, -1, -1, sizeof(::kentik::interface::v202108alpha1::ManualClassifyResponse)},
        {297, 306, -1, sizeof(::kentik::interface::v202108alpha1::ListInterfaceRequest)},
        {307, -1, -1, sizeof(::kentik::interface::v202108alpha1::ListInterfaceResponse)},
        {318, -1, -1, sizeof(::kentik::interface::v202108alpha1::GetInterfaceRequest)},
        {327, 336, -1, sizeof(::kentik::interface::v202108alpha1::GetInterfaceResponse)},
        {337, 346, -1, sizeof(::kentik::interface::v202108alpha1::CreateInterfaceRequest)},
        {347, 356, -1, sizeof(::kentik::interface::v202108alpha1::CreateInterfaceResponse)},
        {357, 366, -1, sizeof(::kentik::interface::v202108alpha1::UpdateInterfaceRequest)},
        {367, 376, -1, sizeof(::kentik::interface::v202108alpha1::UpdateInterfaceResponse)},
        {377, -1, -1, sizeof(::kentik::interface::v202108alpha1::DeleteInterfaceRequest)},
        {386, -1, -1, sizeof(::kentik::interface::v202108alpha1::DeleteInterfaceResponse)},
        {394, -1, -1, sizeof(::kentik::interface::v202108alpha1::Match)},
        {405, -1, -1, sizeof(::kentik::interface::v202108alpha1::Action)},
        {417, -1, -1, sizeof(::kentik::interface::v202108alpha1::DeviceFilter)},
        {430, 447, -1, sizeof(::kentik::interface::v202108alpha1::Rule)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::kentik::interface::v202108alpha1::_Interface_InterfaceKvsEntry_DoNotUse_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_Interface_InterfaceTagsEntry_DoNotUse_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_Interface_ExtraInfoEntry_DoNotUse_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_Interface_VrfEntry_DoNotUse_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_Interface_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_InterfaceClassification_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_ClassifyCounter_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_InterfaceClassifyInfo_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_DeviceClassifyInfo_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_InterfaceFilter_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_AutoClassifyRequest_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_AutoClassifyResponse_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_ManualClassifyRequest_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_ManualClassifyResponse_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_ListInterfaceRequest_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_ListInterfaceResponse_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_GetInterfaceRequest_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_GetInterfaceResponse_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_CreateInterfaceRequest_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_CreateInterfaceResponse_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_UpdateInterfaceRequest_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_UpdateInterfaceResponse_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_DeleteInterfaceRequest_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_DeleteInterfaceResponse_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_Match_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_Action_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_DeviceFilter_default_instance_._instance,
    &::kentik::interface::v202108alpha1::_Rule_default_instance_._instance,
};
const char descriptor_table_protodef_kentik_2finterface_2fv202108alpha1_2finterface_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n.kentik/interface/v202108alpha1/interfa"
    "ce.proto\022\036kentik.interface.v202108alpha1"
    "\032\034google/api/annotations.proto\032\027google/a"
    "pi/client.proto\032.protoc-gen-openapiv2/op"
    "tions/annotations.proto\032%kentik/core/v20"
    "2303/annotations.proto\032\037google/protobuf/"
    "timestamp.proto\"\255\016\n\tInterface\022\016\n\002id\030\001 \001("
    "\tR\002id\022\033\n\tdevice_id\030\002 \001(\tR\010deviceId\022\027\n\007sn"
    "mp_id\030\003 \001(\tR\006snmpId\022\035\n\nsnmp_speed\030\004 \001(\005R"
    "\tsnmpSpeed\022\033\n\tsnmp_type\030\005 \001(\005R\010snmpType\022"
    "\035\n\nsnmp_alias\030\006 \001(\tR\tsnmpAlias\022!\n\014interf"
    "ace_ip\030\007 \001(\tR\013interfaceIp\0223\n\025interface_d"
    "escription\030\010 \001(\tR\024interfaceDescription\0220"
    "\n\005cdate\030\t \001(\0132\032.google.protobuf.Timestam"
    "pR\005cdate\0220\n\005edate\030\n \001(\0132\032.google.protobu"
    "f.TimestampR\005edate\0220\n\024interface_ip_netma"
    "sk\030\013 \001(\tR\022interfaceIpNetmask\022]\n\021connecti"
    "vity_type\030\014 \001(\01620.kentik.interface.v2021"
    "08alpha1.ConnectivityTypeR\020connectivityT"
    "ype\022Z\n\020network_boundary\030\r \001(\0162/.kentik.i"
    "nterface.v202108alpha1.NetworkBoundaryR\017"
    "networkBoundary\022(\n\020top_nexthop_asns\030\016 \003("
    "\005R\016topNexthopAsns\022\032\n\010provider\030\017 \001(\tR\010pro"
    "vider\022`\n\rinterface_kvs\030\020 \003(\0132;.kentik.in"
    "terface.v202108alpha1.Interface.Interfac"
    "eKvsEntryR\014interfaceKvs\022c\n\016interface_tag"
    "s\030\021 \003(\0132<.kentik.interface.v202108alpha1"
    ".Interface.InterfaceTagsEntryR\rinterface"
    "Tags\022)\n\020interface_status\030\022 \001(\tR\017interfac"
    "eStatus\022W\n\nextra_info\030\023 \003(\01328.kentik.int"
    "erface.v202108alpha1.Interface.ExtraInfo"
    "EntryR\textraInfo\022&\n\017initial_snmp_id\030\024 \001("
    "\tR\rinitialSnmpId\022,\n\022initial_snmp_alias\030\025"
    " \001(\tR\020initialSnmpAlias\022B\n\035initial_interf"
    "ace_description\030\026 \001(\tR\033initialInterfaceD"
    "escription\022,\n\022initial_snmp_speed\030\027 \001(\005R\020"
    "initialSnmpSpeed\022#\n\rsecondary_ips\030\030 \001(\tR"
    "\014secondaryIps\022l\n\031initial_connectivity_ty"
    "pe\030\031 \001(\01620.kentik.interface.v202108alpha"
    "1.ConnectivityTypeR\027initialConnectivityT"
    "ype\022i\n\030initial_network_boundary\030\032 \001(\0162/."
    "kentik.interface.v202108alpha1.NetworkBo"
    "undaryR\026initialNetworkBoundary\022)\n\020initia"
    "l_provider\030\033 \001(\tR\017initialProvider\022\025\n\006vrf"
    "_id\030\034 \001(\tR\005vrfId\022D\n\003vrf\030\035 \003(\01322.kentik.i"
    "nterface.v202108alpha1.Interface.VrfEntr"
    "yR\003vrf\032\?\n\021InterfaceKvsEntry\022\020\n\003key\030\001 \001(\t"
    "R\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001\032@\n\022Inter"
    "faceTagsEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value"
    "\030\002 \001(\tR\005value:\0028\001\032<\n\016ExtraInfoEntry\022\020\n\003k"
    "ey\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001\032"
    "6\n\010VrfEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002"
    " \001(\tR\005value:\0028\001\"\364\001\n\027InterfaceClassificat"
    "ion\022\036\n\nclassified\030\001 \001(\010R\nclassified\022]\n\021c"
    "onnectivity_type\030\002 \001(\01620.kentik.interfac"
    "e.v202108alpha1.ConnectivityTypeR\020connec"
    "tivityType\022Z\n\020network_boundary\030\003 \001(\0162/.k"
    "entik.interface.v202108alpha1.NetworkBou"
    "ndaryR\017networkBoundary\"\333\001\n\017ClassifyCount"
    "er\022\024\n\005count\030\001 \001(\005R\005count\022%\n\016external_cou"
    "nt\030\002 \001(\005R\rexternalCount\022$\n\016free_pni_coun"
    "t\030\003 \001(\005R\014freePniCount\022\031\n\010ix_count\030\004 \001(\005R"
    "\007ixCount\022%\n\016provider_count\030\005 \001(\005R\rprovid"
    "erCount\022#\n\rtransit_count\030\006 \001(\005R\014transitC"
    "ount\"\326\t\n\025InterfaceClassifyInfo\022\033\n\tdevice"
    "_id\030\001 \001(\tR\010deviceId\022\027\n\007snmp_id\030\002 \001(\tR\006sn"
    "mpId\022\035\n\nsnmp_alias\030\003 \001(\tR\tsnmpAlias\022!\n\014i"
    "nterface_ip\030\004 \001(\tR\013interfaceIp\022(\n\020interf"
    "ace_ip_asn\030\005 \001(\tR\016interfaceIpAsn\022$\n\016is_i"
    "nternal_ip\030\006 \001(\010R\014isInternalIp\022&\n\017is_int"
    "ernal_asn\030\007 \001(\010R\risInternalAsn\022(\n\020top_ne"
    "xthop_asns\030\010 \003(\tR\016topNexthopAsns\022&\n\017pdb_"
    "global_name\030\t \001(\tR\rpdbGlobalName\022h\n\023auto"
    "_classification\030\n \001(\01327.kentik.interface"
    ".v202108alpha1.InterfaceClassificationR\022"
    "autoClassification\022p\n\027previous_classific"
    "ation\030\013 \001(\01327.kentik.interface.v202108al"
    "pha1.InterfaceClassificationR\026previousCl"
    "assification\022\032\n\010provider\030\014 \001(\tR\010provider"
    "\022>\n\033network_boundary_confidence\030\r \001(\005R\031n"
    "etworkBoundaryConfidence\022@\n\034connectivity"
    "_type_confidence\030\016 \001(\005R\032connectivityType"
    "Confidence\022/\n\023provider_confidence\030\017 \001(\005R"
    "\022providerConfidence\0228\n\030auto_classified_p"
    "rovider\030\020 \001(\010R\026autoClassifiedProvider\022D\n"
    "\036previously_classified_provider\030\021 \001(\tR\034p"
    "reviouslyClassifiedProvider\022D\n\036previousl"
    "y_classified_external\030\022 \001(\010R\034previouslyC"
    "lassifiedExternal\022$\n\016ip_asn_matched\030\023 \001("
    "\010R\014ipAsnMatched\022\035\n\nix_matched\030\024 \001(\010R\tixM"
    "atched\022\'\n\017nexthop_matched\030\025 \001(\010R\016nexthop"
    "Matched\022:\n\031connectivity_type_matched\030\026 \001"
    "(\010R\027connectivityTypeMatched\022)\n\020provider_"
    "matched\030\027 \001(\010R\017providerMatched\0225\n\026change"
    "d_classification\030\030 \001(\010R\025changedClassific"
    "ation\"\337\005\n\022DeviceClassifyInfo\022\033\n\tdevice_i"
    "d\030\001 \001(\tR\010deviceId\022)\n\020total_interfaces\030\002 "
    "\001(\005R\017totalInterfaces\022s\n\035previously_class"
    "ified_counter\030\003 \001(\0132/.kentik.interface.v"
    "202108alpha1.ClassifyCounterR\033previously"
    "ClassifiedCounter\022g\n\027auto_classified_cou"
    "nter\030\004 \001(\0132/.kentik.interface.v202108alp"
    "ha1.ClassifyCounterR\025autoClassifiedCount"
    "er\022@\n\034changed_classification_count\030\017 \001(\005"
    "R\032changedClassificationCount\022/\n\024ip_asn_m"
    "atched_count\030\020 \001(\005R\021ipAsnMatchedCount\022(\n"
    "\020ix_matched_count\030\021 \001(\005R\016ixMatchedCount\022"
    "2\n\025nexthop_matched_count\030\022 \001(\005R\023nexthopM"
    "atchedCount\022E\n\037connectivity_type_matched"
    "_count\030\023 \001(\005R\034connectivityTypeMatchedCou"
    "nt\0224\n\026provider_matched_count\030\024 \001(\005R\024prov"
    "iderMatchedCount\022U\n\ninterfaces\030\025 \003(\01325.k"
    "entik.interface.v202108alpha1.InterfaceC"
    "lassifyInfoR\ninterfaces\"\211\003\n\017InterfaceFil"
    "ter\022\022\n\004text\030\001 \001(\tR\004text\022\035\n\ndevice_ids\030\002 "
    "\003(\tR\tdeviceIds\022_\n\022connectivity_types\030\003 \003"
    "(\01620.kentik.interface.v202108alpha1.Conn"
    "ectivityTypeR\021connectivityTypes\022^\n\022netwo"
    "rk_boundaries\030\004 \003(\0162/.kentik.interface.v"
    "202108alpha1.NetworkBoundaryR\021networkBou"
    "ndaries\022\034\n\tproviders\030\005 \003(\tR\tproviders\022\037\n"
    "\013snmp_speeds\030\006 \003(\005R\nsnmpSpeeds\022C\n\010ip_typ"
    "es\030\007 \003(\0162(.kentik.interface.v202108alpha"
    "1.IpFilterR\007ipTypes\"\025\n\023AutoClassifyReque"
    "st\"\250\005\n\024AutoClassifyResponse\0220\n\024perc_auto"
    "_classified\030\001 \001(\001R\022percAutoClassified\022.\n"
    "\023net_changed_transit\030\002 \001(\005R\021netChangedTr"
    "ansit\022$\n\016net_changed_ix\030\003 \001(\005R\014netChange"
    "dIx\0220\n\024net_changed_provider\030\004 \001(\005R\022netCh"
    "angedProvider\022K\n\"total_changed_classific"
    "ation_count\030\005 \001(\005R\037totalChangedClassific"
    "ationCount\0229\n\031total_auto_classify_count\030"
    "\006 \001(\005R\026totalAutoClassifyCount\022n\n\033total_a"
    "uto_classify_counter\030\007 \001(\0132/.kentik.inte"
    "rface.v202108alpha1.ClassifyCounterR\030tot"
    "alAutoClassifyCounter\022e\n\026total_previous_"
    "counter\030\010 \001(\0132/.kentik.interface.v202108"
    "alpha1.ClassifyCounterR\024totalPreviousCou"
    "nter\022)\n\020total_interfaces\030\021 \001(\005R\017totalInt"
    "erfaces\022L\n\007devices\030\022 \003(\01322.kentik.interf"
    "ace.v202108alpha1.DeviceClassifyInfoR\007de"
    "vices\"\223\002\n\025ManualClassifyRequest\022#\n\rinter"
    "face_ids\030\001 \003(\tR\014interfaceIds\022]\n\021connecti"
    "vity_type\030\002 \001(\01620.kentik.interface.v2021"
    "08alpha1.ConnectivityTypeR\020connectivityT"
    "ype\022Z\n\020network_boundary\030\003 \001(\0162/.kentik.i"
    "nterface.v202108alpha1.NetworkBoundaryR\017"
    "networkBoundary\022\032\n\010provider\030\004 \001(\tR\010provi"
    "der\"7\n\026ManualClassifyResponse\022\035\n\ndevice_"
    "ids\030\001 \003(\tR\tdeviceIds\"a\n\024ListInterfaceReq"
    "uest\022I\n\007filters\030\001 \001(\0132/.kentik.interface"
    ".v202108alpha1.InterfaceFilterR\007filters\""
    "\250\001\n\025ListInterfaceResponse\022I\n\ninterfaces\030"
    "\001 \003(\0132).kentik.interface.v202108alpha1.I"
    "nterfaceR\ninterfaces\022\037\n\013total_count\030\002 \001("
    "\005R\ntotalCount\022#\n\rinvalid_count\030\003 \001(\005R\014in"
    "validCount\"%\n\023GetInterfaceRequest\022\016\n\002id\030"
    "\001 \001(\tR\002id\"_\n\024GetInterfaceResponse\022G\n\tint"
    "erface\030\001 \001(\0132).kentik.interface.v202108a"
    "lpha1.InterfaceR\tinterface\"a\n\026CreateInte"
    "rfaceRequest\022G\n\tinterface\030\001 \001(\0132).kentik"
    ".interface.v202108alpha1.InterfaceR\tinte"
    "rface\"b\n\027CreateInterfaceResponse\022G\n\tinte"
    "rface\030\001 \001(\0132).kentik.interface.v202108al"
    "pha1.InterfaceR\tinterface\"a\n\026UpdateInter"
    "faceRequest\022G\n\tinterface\030\001 \001(\0132).kentik."
    "interface.v202108alpha1.InterfaceR\tinter"
    "face\"b\n\027UpdateInterfaceResponse\022G\n\tinter"
    "face\030\001 \001(\0132).kentik.interface.v202108alp"
    "ha1.InterfaceR\tinterface\"(\n\026DeleteInterf"
    "aceRequest\022\016\n\002id\030\001 \001(\tR\002id\"\031\n\027DeleteInte"
    "rfaceResponse\"\313\001\n\005Match\022W\n\017match_attribu"
    "te\030\001 \001(\0162..kentik.interface.v202108alpha"
    "1.MatchAttributeR\016matchAttribute\022O\n\016matc"
    "h_operator\030\002 \001(\0162(.kentik.interface.v202"
    "108alpha1.OperatorR\rmatchOperator\022\030\n\007pat"
    "tern\030\003 \001(\tR\007pattern\"\242\002\n\006Action\022d\n\025set_co"
    "nnectivity_type\030\001 \001(\01620.kentik.interface"
    ".v202108alpha1.ConnectivityTypeR\023setConn"
    "ectivityType\022a\n\024set_network_boundary\030\002 \001"
    "(\0162/.kentik.interface.v202108alpha1.Netw"
    "orkBoundaryR\022setNetworkBoundary\022,\n\022set_c"
    "onnected_asns\030\003 \001(\tR\020setConnectedAsns\022!\n"
    "\014set_provider\030\004 \001(\tR\013setProvider\"\273\001\n\014Dev"
    "iceFilter\022\037\n\013all_devices\030\001 \001(\010R\nallDevic"
    "es\022\037\n\013device_name\030\002 \003(\tR\ndeviceName\022#\n\rd"
    "evice_labels\030\003 \003(\tR\014deviceLabels\022!\n\014devi"
    "ce_rules\030\004 \003(\tR\013deviceRules\022!\n\014device_ty"
    "pes\030\005 \003(\tR\013deviceTypes\"\353\003\n\004Rule\022\016\n\002id\030\001 "
    "\001(\tR\002id\022\030\n\007enabled\030\002 \001(\010R\007enabled\022\022\n\004ran"
    "k\030\003 \001(\005R\004rank\022H\n\014match_clause\030\004 \001(\0132%.ke"
    "ntik.interface.v202108alpha1.MatchR\013matc"
    "hClause\022E\n\naction_set\030\005 \001(\0132&.kentik.int"
    "erface.v202108alpha1.ActionR\tactionSet\0220"
    "\n\005cdate\030\006 \001(\0132\032.google.protobuf.Timestam"
    "pR\005cdate\0220\n\005edate\030\007 \001(\0132\032.google.protobu"
    "f.TimestampR\005edate\022W\n\020included_devices\030\010"
    " \001(\0132,.kentik.interface.v202108alpha1.De"
    "viceFilterR\017includedDevices\022W\n\020excluded_"
    "devices\030\t \001(\0132,.kentik.interface.v202108"
    "alpha1.DeviceFilterR\017excludedDevices*\275\005\n"
    "\020ConnectivityType\022!\n\035CONNECTIVITY_TYPE_U"
    "NSPECIFIED\020\000\022.\n*CONNECTIVITY_TYPE_AGGREG"
    "ATION_INTERCONNECT\020\001\022\037\n\033CONNECTIVITY_TYP"
    "E_AVAILABLE\020\002\022\036\n\032CONNECTIVITY_TYPE_BACKB"
    "ONE\020\003\022(\n$CONNECTIVITY_TYPE_CLOUD_INTERCO"
    "NNECT\020\004\022\036\n\032CONNECTIVITY_TYPE_CUSTOMER\020\005\022"
    "\'\n#CONNECTIVITY_TYPE_DATACENTER_FABRIC\020\006"
    "\022-\n)CONNECTIVITY_TYPE_DATACENTER_INTERCO"
    "NNECT\020\007\022$\n CONNECTIVITY_TYPE_EMBEDDED_CA"
    "CHE\020\010\022\036\n\032CONNECTIVITY_TYPE_FREE_PNI\020\t\022\032\n"
    "\026CONNECTIVITY_TYPE_HOST\020\n\022\030\n\024CONNECTIVIT"
    "Y_TYPE_IX\020\013\022\033\n\027CONNECTIVITY_TYPE_OTHER\020\014"
    "\022\036\n\032CONNECTIVITY_TYPE_PAID_PNI\020\r\022\036\n\032CONN"
    "ECTIVITY_TYPE_RESERVED\020\016\022\035\n\031CONNECTIVITY"
    "_TYPE_TRANSIT\020\017\022+\n\'CONNECTIVITY_TYPE_VIR"
    "TUAL_CROSS_CONNECT\020\020\022&\n\"CONNECTIVITY_TYP"
    "E_IPX_INTERCONNECT\020\021\022&\n\"CONNECTIVITY_TYP"
    "E_SIP_INTERCONNECT\020\022*\247\001\n\017NetworkBoundary"
    "\022 \n\034NETWORK_BOUNDARY_UNSPECIFIED\020\000\022\031\n\025NE"
    "TWORK_BOUNDARY_AUTO\020\001\022\035\n\031NETWORK_BOUNDAR"
    "Y_INTERNAL\020\002\022\035\n\031NETWORK_BOUNDARY_EXTERNA"
    "L\020\003\022\031\n\025NETWORK_BOUNDARY_NONE\020\004*g\n\010IpFilt"
    "er\022\031\n\025IP_FILTER_UNSPECIFIED\020\000\022\025\n\021IP_FILT"
    "ER_PRIVATE\020\001\022\024\n\020IP_FILTER_PUBLIC\020\002\022\023\n\017IP"
    "_FILTER_UNSET\020\003*\236\001\n\016MatchAttribute\022\037\n\033MA"
    "TCH_ATTRIBUTE_UNSPECIFIED\020\000\022)\n%MATCH_ATT"
    "RIBUTE_INTERFACE_DESCRIPTION\020\001\022\036\n\032MATCH_"
    "ATTRIBUTE_SNMP_ALIAS\020\002\022 \n\034MATCH_ATTRIBUT"
    "E_INTERFACE_IP\020\003*\321\001\n\010Operator\022\030\n\024OPERATO"
    "R_UNSPECIFIED\020\000\022\023\n\017OPERATOR_EQUALS\020\001\022\025\n\021"
    "OPERATOR_CONTAINS\020\002\022\022\n\016OPERATOR_REGEX\020\003\022"
    " \n\034OPERATOR_CONTAINED_IN_SUBNET\020\004\022\031\n\025OPE"
    "RATOR_IS_PUBLIC_IP\020\005\022\032\n\026OPERATOR_IS_PRIV"
    "ATE_IP\020\006\022\022\n\016OPERATOR_NO_IP\020\0072\305\016\n\020Interfa"
    "ceService\022\247\002\n\016ManualClassify\0225.kentik.in"
    "terface.v202108alpha1.ManualClassifyRequ"
    "est\0326.kentik.interface.v202108alpha1.Man"
    "ualClassifyResponse\"\245\001\222AV\022\031Manual Classi"
    "fy Interface\032)Manually set interface(s) "
    "classification.*\016ManualClassify\362\327\002\025admin"
    ".interface:write\202\323\344\223\002-\"(/interface/v2021"
    "08alpha1/manual_classify:\001*\022\240\002\n\rListInte"
    "rface\0224.kentik.interface.v202108alpha1.L"
    "istInterfaceRequest\0325.kentik.interface.v"
    "202108alpha1.ListInterfaceResponse\"\241\001\222A["
    "\022\027Fetch Search Interfaces\0321Return list o"
    "f interfaces matches search critera.*\rLi"
    "stInterface\362\327\002\024admin.interface:read\202\323\344\223\002"
    "%\022#/interface/v202108alpha1/interfaces\022\241"
    "\002\n\014GetInterface\0223.kentik.interface.v2021"
    "08alpha1.GetInterfaceRequest\0324.kentik.in"
    "terface.v202108alpha1.GetInterfaceRespon"
    "se\"\245\001\222AZ\022\020Get a interface.\0328Returns info"
    "rmation about a interface specified with"
    " ID.*\014InterfaceGet\362\327\002\024admin.interface:re"
    "ad\202\323\344\223\002*\022(/interface/v202108alpha1/inter"
    "faces/{id}\022\250\002\n\017CreateInterface\0226.kentik."
    "interface.v202108alpha1.CreateInterfaceR"
    "equest\0327.kentik.interface.v202108alpha1."
    "CreateInterfaceResponse\"\243\001\222AY\022\023Create a "
    "interface.\0321Create a interface from requ"
    "est. returns created.*\017InterfaceCreate\362\327"
    "\002\025admin.interface:write\202\323\344\223\002(\"#/interfac"
    "e/v202108alpha1/interfaces:\001*\022\301\002\n\017Update"
    "Interface\0226.kentik.interface.v202108alph"
    "a1.UpdateInterfaceRequest\0327.kentik.inter"
    "face.v202108alpha1.UpdateInterfaceRespon"
    "se\"\274\001\222Ac\022\023Update a interface.\032;Replaces "
    "the entire interface attributes specifie"
    "d with id.*\017InterfaceUpdate\362\327\002\025admin.int"
    "erface:write\202\323\344\223\0027\0322/interface/v202108al"
    "pha1/interfaces/{interface.id}:\001*\022\241\002\n\017De"
    "leteInterface\0226.kentik.interface.v202108"
    "alpha1.DeleteInterfaceRequest\0327.kentik.i"
    "nterface.v202108alpha1.DeleteInterfaceRe"
    "sponse\"\234\001\222AP\022\023Delete a interface.\032(Delet"
    "es the interface specified with id.*\017Int"
    "erfaceDelete\362\327\002\025admin.interface:write\202\323\344"
    "\223\002**(/interface/v202108alpha1/interfaces"
    "/{id}\032-\312A\023grpc.api.kentik.com\352\327\002\017admin.i"
    "nterface\220\330\002\003B\312\002ZOgithub.com/kentik/api-s"
    "chema-public/gen/go/kentik/interface/v20"
    "2108alpha1;iface\222A\365\001\0227\n\rInterface API\"\030\n"
    "\026Kentik API Engineering2\014202108alpha1*\001\002"
    "2\020application/json:\020application/jsonZD\n\036"
    "\n\005email\022\025\010\002\032\017X-CH-Auth-Email \002\n\"\n\005token\022"
    "\031\010\002\032\023X-CH-Auth-API-Token \002b\026\n\t\n\005email\022\000\n"
    "\t\n\005token\022\000r5\n\026More about Kentik APIs\022\033ht"
    "tps://docs.kentik.com/apib\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto_deps[5] =
    {
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_google_2fapi_2fclient_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_kentik_2fcore_2fv202303_2fannotations_2eproto,
        &::descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto = {
    false,
    false,
    11593,
    descriptor_table_protodef_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    "kentik/interface/v202108alpha1/interface.proto",
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto_once,
    descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto_deps,
    5,
    28,
    schemas,
    file_default_instances,
    TableStruct_kentik_2finterface_2fv202108alpha1_2finterface_2eproto::offsets,
    file_level_enum_descriptors_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    file_level_service_descriptors_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
};
namespace kentik {
namespace interface {
namespace v202108alpha1 {
const ::google::protobuf::EnumDescriptor* ConnectivityType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto);
  return file_level_enum_descriptors_kentik_2finterface_2fv202108alpha1_2finterface_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ConnectivityType_internal_data_[] = {
    1245184u, 0u, };
bool ConnectivityType_IsValid(int value) {
  return 0 <= value && value <= 18;
}
const ::google::protobuf::EnumDescriptor* NetworkBoundary_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto);
  return file_level_enum_descriptors_kentik_2finterface_2fv202108alpha1_2finterface_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t NetworkBoundary_internal_data_[] = {
    327680u, 0u, };
bool NetworkBoundary_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* IpFilter_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto);
  return file_level_enum_descriptors_kentik_2finterface_2fv202108alpha1_2finterface_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t IpFilter_internal_data_[] = {
    262144u, 0u, };
bool IpFilter_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* MatchAttribute_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto);
  return file_level_enum_descriptors_kentik_2finterface_2fv202108alpha1_2finterface_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t MatchAttribute_internal_data_[] = {
    262144u, 0u, };
bool MatchAttribute_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* Operator_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto);
  return file_level_enum_descriptors_kentik_2finterface_2fv202108alpha1_2finterface_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t Operator_internal_data_[] = {
    524288u, 0u, };
bool Operator_IsValid(int value) {
  return 0 <= value && value <= 7;
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Interface_InterfaceKvsEntry_DoNotUse::Interface_InterfaceKvsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Interface_InterfaceKvsEntry_DoNotUse::Interface_InterfaceKvsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Interface_InterfaceKvsEntry_DoNotUse::Interface_InterfaceKvsEntry_DoNotUse() : SuperType() {}
              Interface_InterfaceKvsEntry_DoNotUse::Interface_InterfaceKvsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Interface_InterfaceKvsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Interface_InterfaceKvsEntry_DoNotUse(arena);
              }
              constexpr auto Interface_InterfaceKvsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Interface_InterfaceKvsEntry_DoNotUse),
                                                          alignof(Interface_InterfaceKvsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Interface_InterfaceKvsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Interface_InterfaceKvsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Interface_InterfaceKvsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Interface_InterfaceKvsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Interface_InterfaceKvsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Interface_InterfaceKvsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Interface_InterfaceKvsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Interface_InterfaceKvsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Interface_InterfaceKvsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 75, 2> Interface_InterfaceKvsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Interface_InterfaceKvsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::Interface_InterfaceKvsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Interface_InterfaceKvsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Interface_InterfaceKvsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(Interface_InterfaceKvsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(Interface_InterfaceKvsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\72\3\5\0\0\0\0\0"
    "kentik.interface.v202108alpha1.Interface.InterfaceKvsEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Interface_InterfaceTagsEntry_DoNotUse::Interface_InterfaceTagsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Interface_InterfaceTagsEntry_DoNotUse::Interface_InterfaceTagsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Interface_InterfaceTagsEntry_DoNotUse::Interface_InterfaceTagsEntry_DoNotUse() : SuperType() {}
              Interface_InterfaceTagsEntry_DoNotUse::Interface_InterfaceTagsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Interface_InterfaceTagsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Interface_InterfaceTagsEntry_DoNotUse(arena);
              }
              constexpr auto Interface_InterfaceTagsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Interface_InterfaceTagsEntry_DoNotUse),
                                                          alignof(Interface_InterfaceTagsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Interface_InterfaceTagsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Interface_InterfaceTagsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Interface_InterfaceTagsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Interface_InterfaceTagsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Interface_InterfaceTagsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Interface_InterfaceTagsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Interface_InterfaceTagsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Interface_InterfaceTagsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Interface_InterfaceTagsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 76, 2> Interface_InterfaceTagsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Interface_InterfaceTagsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::Interface_InterfaceTagsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Interface_InterfaceTagsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Interface_InterfaceTagsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(Interface_InterfaceTagsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(Interface_InterfaceTagsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\73\3\5\0\0\0\0\0"
    "kentik.interface.v202108alpha1.Interface.InterfaceTagsEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Interface_ExtraInfoEntry_DoNotUse::Interface_ExtraInfoEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Interface_ExtraInfoEntry_DoNotUse::Interface_ExtraInfoEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Interface_ExtraInfoEntry_DoNotUse::Interface_ExtraInfoEntry_DoNotUse() : SuperType() {}
              Interface_ExtraInfoEntry_DoNotUse::Interface_ExtraInfoEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Interface_ExtraInfoEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Interface_ExtraInfoEntry_DoNotUse(arena);
              }
              constexpr auto Interface_ExtraInfoEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Interface_ExtraInfoEntry_DoNotUse),
                                                          alignof(Interface_ExtraInfoEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Interface_ExtraInfoEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Interface_ExtraInfoEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Interface_ExtraInfoEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Interface_ExtraInfoEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Interface_ExtraInfoEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Interface_ExtraInfoEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Interface_ExtraInfoEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Interface_ExtraInfoEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Interface_ExtraInfoEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 72, 2> Interface_ExtraInfoEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Interface_ExtraInfoEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::Interface_ExtraInfoEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Interface_ExtraInfoEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Interface_ExtraInfoEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(Interface_ExtraInfoEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(Interface_ExtraInfoEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\67\3\5\0\0\0\0\0"
    "kentik.interface.v202108alpha1.Interface.ExtraInfoEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Interface_VrfEntry_DoNotUse::Interface_VrfEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Interface_VrfEntry_DoNotUse::Interface_VrfEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Interface_VrfEntry_DoNotUse::Interface_VrfEntry_DoNotUse() : SuperType() {}
              Interface_VrfEntry_DoNotUse::Interface_VrfEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Interface_VrfEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Interface_VrfEntry_DoNotUse(arena);
              }
              constexpr auto Interface_VrfEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Interface_VrfEntry_DoNotUse),
                                                          alignof(Interface_VrfEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Interface_VrfEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Interface_VrfEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Interface_VrfEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Interface_VrfEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Interface_VrfEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Interface_VrfEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Interface_VrfEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Interface_VrfEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Interface_VrfEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 66, 2> Interface_VrfEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Interface_VrfEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::Interface_VrfEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Interface_VrfEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Interface_VrfEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(Interface_VrfEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(Interface_VrfEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\61\3\5\0\0\0\0\0"
    "kentik.interface.v202108alpha1.Interface.VrfEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class Interface::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Interface>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Interface, _impl_._has_bits_);
};

void Interface::clear_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cdate_ != nullptr) _impl_.cdate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Interface::clear_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.edate_ != nullptr) _impl_.edate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Interface::Interface(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.Interface)
}
inline PROTOBUF_NDEBUG_INLINE Interface::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::interface::v202108alpha1::Interface& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        top_nexthop_asns_{visibility, arena, from.top_nexthop_asns_},
        _top_nexthop_asns_cached_byte_size_{0},
        interface_kvs_{visibility, arena, from.interface_kvs_},
        interface_tags_{visibility, arena, from.interface_tags_},
        extra_info_{visibility, arena, from.extra_info_},
        vrf_{visibility, arena, from.vrf_},
        id_(arena, from.id_),
        device_id_(arena, from.device_id_),
        snmp_id_(arena, from.snmp_id_),
        snmp_alias_(arena, from.snmp_alias_),
        interface_ip_(arena, from.interface_ip_),
        interface_description_(arena, from.interface_description_),
        interface_ip_netmask_(arena, from.interface_ip_netmask_),
        provider_(arena, from.provider_),
        interface_status_(arena, from.interface_status_),
        initial_snmp_id_(arena, from.initial_snmp_id_),
        initial_snmp_alias_(arena, from.initial_snmp_alias_),
        initial_interface_description_(arena, from.initial_interface_description_),
        secondary_ips_(arena, from.secondary_ips_),
        initial_provider_(arena, from.initial_provider_),
        vrf_id_(arena, from.vrf_id_) {}

Interface::Interface(
    ::google::protobuf::Arena* arena,
    const Interface& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Interface* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.cdate_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.cdate_)
                        : nullptr;
  _impl_.edate_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.edate_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, snmp_speed_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, snmp_speed_),
           offsetof(Impl_, initial_network_boundary_) -
               offsetof(Impl_, snmp_speed_) +
               sizeof(Impl_::initial_network_boundary_));

  // @@protoc_insertion_point(copy_constructor:kentik.interface.v202108alpha1.Interface)
}
inline PROTOBUF_NDEBUG_INLINE Interface::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        top_nexthop_asns_{visibility, arena},
        _top_nexthop_asns_cached_byte_size_{0},
        interface_kvs_{visibility, arena},
        interface_tags_{visibility, arena},
        extra_info_{visibility, arena},
        vrf_{visibility, arena},
        id_(arena),
        device_id_(arena),
        snmp_id_(arena),
        snmp_alias_(arena),
        interface_ip_(arena),
        interface_description_(arena),
        interface_ip_netmask_(arena),
        provider_(arena),
        interface_status_(arena),
        initial_snmp_id_(arena),
        initial_snmp_alias_(arena),
        initial_interface_description_(arena),
        secondary_ips_(arena),
        initial_provider_(arena),
        vrf_id_(arena) {}

inline void Interface::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cdate_),
           0,
           offsetof(Impl_, initial_network_boundary_) -
               offsetof(Impl_, cdate_) +
               sizeof(Impl_::initial_network_boundary_));
}
Interface::~Interface() {
  // @@protoc_insertion_point(destructor:kentik.interface.v202108alpha1.Interface)
  SharedDtor(*this);
}
inline void Interface::SharedDtor(MessageLite& self) {
  Interface& this_ = static_cast<Interface&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.device_id_.Destroy();
  this_._impl_.snmp_id_.Destroy();
  this_._impl_.snmp_alias_.Destroy();
  this_._impl_.interface_ip_.Destroy();
  this_._impl_.interface_description_.Destroy();
  this_._impl_.interface_ip_netmask_.Destroy();
  this_._impl_.provider_.Destroy();
  this_._impl_.interface_status_.Destroy();
  this_._impl_.initial_snmp_id_.Destroy();
  this_._impl_.initial_snmp_alias_.Destroy();
  this_._impl_.initial_interface_description_.Destroy();
  this_._impl_.secondary_ips_.Destroy();
  this_._impl_.initial_provider_.Destroy();
  this_._impl_.vrf_id_.Destroy();
  delete this_._impl_.cdate_;
  delete this_._impl_.edate_;
  this_._impl_.~Impl_();
}

inline void* Interface::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Interface(arena);
}
constexpr auto Interface::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Interface, _impl_.top_nexthop_asns_) +
          decltype(Interface::_impl_.top_nexthop_asns_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Interface, _impl_.interface_kvs_) +
          decltype(Interface::_impl_.interface_kvs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Interface, _impl_.interface_kvs_) +
          decltype(Interface::_impl_.interface_kvs_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Interface, _impl_.interface_tags_) +
          decltype(Interface::_impl_.interface_tags_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Interface, _impl_.interface_tags_) +
          decltype(Interface::_impl_.interface_tags_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Interface, _impl_.extra_info_) +
          decltype(Interface::_impl_.extra_info_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Interface, _impl_.extra_info_) +
          decltype(Interface::_impl_.extra_info_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Interface, _impl_.vrf_) +
          decltype(Interface::_impl_.vrf_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Interface, _impl_.vrf_) +
          decltype(Interface::_impl_.vrf_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Interface), alignof(Interface), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Interface::PlacementNew_,
                                 sizeof(Interface),
                                 alignof(Interface));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Interface::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Interface_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Interface::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Interface>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Interface::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Interface>(), &Interface::ByteSizeLong,
            &Interface::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Interface, _impl_._cached_size_),
        false,
    },
    &Interface::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Interface::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 29, 6, 315, 2> Interface::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Interface, _impl_._has_bits_),
    0, // no _extensions_
    29, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    3758096384,  // skipmap
    offsetof(decltype(_table_), field_entries),
    29,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::Interface>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.id_)}},
    // string device_id = 2 [json_name = "deviceId"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.device_id_)}},
    // string snmp_id = 3 [json_name = "snmpId"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.snmp_id_)}},
    // int32 snmp_speed = 4 [json_name = "snmpSpeed"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Interface, _impl_.snmp_speed_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.snmp_speed_)}},
    // int32 snmp_type = 5 [json_name = "snmpType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Interface, _impl_.snmp_type_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.snmp_type_)}},
    // string snmp_alias = 6 [json_name = "snmpAlias"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.snmp_alias_)}},
    // string interface_ip = 7 [json_name = "interfaceIp"];
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.interface_ip_)}},
    // string interface_description = 8 [json_name = "interfaceDescription"];
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.interface_description_)}},
    // .google.protobuf.Timestamp cdate = 9 [json_name = "cdate"];
    {::_pbi::TcParser::FastMtS1,
     {74, 0, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.cdate_)}},
    // .google.protobuf.Timestamp edate = 10 [json_name = "edate"];
    {::_pbi::TcParser::FastMtS1,
     {82, 1, 1, PROTOBUF_FIELD_OFFSET(Interface, _impl_.edate_)}},
    // string interface_ip_netmask = 11 [json_name = "interfaceIpNetmask"];
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.interface_ip_netmask_)}},
    // .kentik.interface.v202108alpha1.ConnectivityType connectivity_type = 12 [json_name = "connectivityType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Interface, _impl_.connectivity_type_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.connectivity_type_)}},
    // .kentik.interface.v202108alpha1.NetworkBoundary network_boundary = 13 [json_name = "networkBoundary"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Interface, _impl_.network_boundary_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.network_boundary_)}},
    // repeated int32 top_nexthop_asns = 14 [json_name = "topNexthopAsns"];
    {::_pbi::TcParser::FastV32P1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.top_nexthop_asns_)}},
    // string provider = 15 [json_name = "provider"];
    {::_pbi::TcParser::FastUS1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.provider_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string interface_status = 18 [json_name = "interfaceStatus"];
    {::_pbi::TcParser::FastUS2,
     {402, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.interface_status_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string initial_snmp_id = 20 [json_name = "initialSnmpId"];
    {::_pbi::TcParser::FastUS2,
     {418, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.initial_snmp_id_)}},
    // string initial_snmp_alias = 21 [json_name = "initialSnmpAlias"];
    {::_pbi::TcParser::FastUS2,
     {426, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.initial_snmp_alias_)}},
    // string initial_interface_description = 22 [json_name = "initialInterfaceDescription"];
    {::_pbi::TcParser::FastUS2,
     {434, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.initial_interface_description_)}},
    // int32 initial_snmp_speed = 23 [json_name = "initialSnmpSpeed"];
    {::_pbi::TcParser::FastV32S2,
     {440, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.initial_snmp_speed_)}},
    // string secondary_ips = 24 [json_name = "secondaryIps"];
    {::_pbi::TcParser::FastUS2,
     {450, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.secondary_ips_)}},
    // .kentik.interface.v202108alpha1.ConnectivityType initial_connectivity_type = 25 [json_name = "initialConnectivityType"];
    {::_pbi::TcParser::FastV32S2,
     {456, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.initial_connectivity_type_)}},
    // .kentik.interface.v202108alpha1.NetworkBoundary initial_network_boundary = 26 [json_name = "initialNetworkBoundary"];
    {::_pbi::TcParser::FastV32S2,
     {464, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.initial_network_boundary_)}},
    // string initial_provider = 27 [json_name = "initialProvider"];
    {::_pbi::TcParser::FastUS2,
     {474, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.initial_provider_)}},
    // string vrf_id = 28 [json_name = "vrfId"];
    {::_pbi::TcParser::FastUS2,
     {482, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.vrf_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_id = 2 [json_name = "deviceId"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.device_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string snmp_id = 3 [json_name = "snmpId"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.snmp_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 snmp_speed = 4 [json_name = "snmpSpeed"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.snmp_speed_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 snmp_type = 5 [json_name = "snmpType"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.snmp_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string snmp_alias = 6 [json_name = "snmpAlias"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.snmp_alias_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string interface_ip = 7 [json_name = "interfaceIp"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.interface_ip_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string interface_description = 8 [json_name = "interfaceDescription"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.interface_description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp cdate = 9 [json_name = "cdate"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.cdate_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp edate = 10 [json_name = "edate"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.edate_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string interface_ip_netmask = 11 [json_name = "interfaceIpNetmask"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.interface_ip_netmask_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .kentik.interface.v202108alpha1.ConnectivityType connectivity_type = 12 [json_name = "connectivityType"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.connectivity_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .kentik.interface.v202108alpha1.NetworkBoundary network_boundary = 13 [json_name = "networkBoundary"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.network_boundary_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated int32 top_nexthop_asns = 14 [json_name = "topNexthopAsns"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.top_nexthop_asns_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // string provider = 15 [json_name = "provider"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.provider_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> interface_kvs = 16 [json_name = "interfaceKvs"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.interface_kvs_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, string> interface_tags = 17 [json_name = "interfaceTags"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.interface_tags_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string interface_status = 18 [json_name = "interfaceStatus"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.interface_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> extra_info = 19 [json_name = "extraInfo"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.extra_info_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string initial_snmp_id = 20 [json_name = "initialSnmpId"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.initial_snmp_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string initial_snmp_alias = 21 [json_name = "initialSnmpAlias"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.initial_snmp_alias_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string initial_interface_description = 22 [json_name = "initialInterfaceDescription"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.initial_interface_description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 initial_snmp_speed = 23 [json_name = "initialSnmpSpeed"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.initial_snmp_speed_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string secondary_ips = 24 [json_name = "secondaryIps"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.secondary_ips_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .kentik.interface.v202108alpha1.ConnectivityType initial_connectivity_type = 25 [json_name = "initialConnectivityType"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.initial_connectivity_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .kentik.interface.v202108alpha1.NetworkBoundary initial_network_boundary = 26 [json_name = "initialNetworkBoundary"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.initial_network_boundary_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string initial_provider = 27 [json_name = "initialProvider"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.initial_provider_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string vrf_id = 28 [json_name = "vrfId"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.vrf_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> vrf = 29 [json_name = "vrf"];
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.vrf_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Interface()._impl_.interface_kvs_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Interface()._impl_.interface_tags_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Interface()._impl_.extra_info_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Interface()._impl_.vrf_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\50\2\11\7\0\0\12\14\25\0\0\24\0\0\0\10\15\16\20\12\17\22\35\0\15\0\0\20\6\3\0\0"
    "kentik.interface.v202108alpha1.Interface"
    "id"
    "device_id"
    "snmp_id"
    "snmp_alias"
    "interface_ip"
    "interface_description"
    "interface_ip_netmask"
    "provider"
    "interface_kvs"
    "interface_tags"
    "interface_status"
    "extra_info"
    "initial_snmp_id"
    "initial_snmp_alias"
    "initial_interface_description"
    "secondary_ips"
    "initial_provider"
    "vrf_id"
    "vrf"
  }},
};

PROTOBUF_NOINLINE void Interface::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.interface.v202108alpha1.Interface)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.top_nexthop_asns_.Clear();
  _impl_.interface_kvs_.Clear();
  _impl_.interface_tags_.Clear();
  _impl_.extra_info_.Clear();
  _impl_.vrf_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.device_id_.ClearToEmpty();
  _impl_.snmp_id_.ClearToEmpty();
  _impl_.snmp_alias_.ClearToEmpty();
  _impl_.interface_ip_.ClearToEmpty();
  _impl_.interface_description_.ClearToEmpty();
  _impl_.interface_ip_netmask_.ClearToEmpty();
  _impl_.provider_.ClearToEmpty();
  _impl_.interface_status_.ClearToEmpty();
  _impl_.initial_snmp_id_.ClearToEmpty();
  _impl_.initial_snmp_alias_.ClearToEmpty();
  _impl_.initial_interface_description_.ClearToEmpty();
  _impl_.secondary_ips_.ClearToEmpty();
  _impl_.initial_provider_.ClearToEmpty();
  _impl_.vrf_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.cdate_ != nullptr);
      _impl_.cdate_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.edate_ != nullptr);
      _impl_.edate_->Clear();
    }
  }
  ::memset(&_impl_.snmp_speed_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.initial_network_boundary_) -
      reinterpret_cast<char*>(&_impl_.snmp_speed_)) + sizeof(_impl_.initial_network_boundary_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Interface::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Interface& this_ = static_cast<const Interface&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Interface::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Interface& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.interface.v202108alpha1.Interface)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string device_id = 2 [json_name = "deviceId"];
          if (!this_._internal_device_id().empty()) {
            const std::string& _s = this_._internal_device_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.device_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string snmp_id = 3 [json_name = "snmpId"];
          if (!this_._internal_snmp_id().empty()) {
            const std::string& _s = this_._internal_snmp_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.snmp_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // int32 snmp_speed = 4 [json_name = "snmpSpeed"];
          if (this_._internal_snmp_speed() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_snmp_speed(), target);
          }

          // int32 snmp_type = 5 [json_name = "snmpType"];
          if (this_._internal_snmp_type() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_snmp_type(), target);
          }

          // string snmp_alias = 6 [json_name = "snmpAlias"];
          if (!this_._internal_snmp_alias().empty()) {
            const std::string& _s = this_._internal_snmp_alias();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.snmp_alias");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string interface_ip = 7 [json_name = "interfaceIp"];
          if (!this_._internal_interface_ip().empty()) {
            const std::string& _s = this_._internal_interface_ip();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.interface_ip");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string interface_description = 8 [json_name = "interfaceDescription"];
          if (!this_._internal_interface_description().empty()) {
            const std::string& _s = this_._internal_interface_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.interface_description");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp cdate = 9 [json_name = "cdate"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.cdate_, this_._impl_.cdate_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp edate = 10 [json_name = "edate"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.edate_, this_._impl_.edate_->GetCachedSize(), target,
                stream);
          }

          // string interface_ip_netmask = 11 [json_name = "interfaceIpNetmask"];
          if (!this_._internal_interface_ip_netmask().empty()) {
            const std::string& _s = this_._internal_interface_ip_netmask();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.interface_ip_netmask");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // .kentik.interface.v202108alpha1.ConnectivityType connectivity_type = 12 [json_name = "connectivityType"];
          if (this_._internal_connectivity_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                12, this_._internal_connectivity_type(), target);
          }

          // .kentik.interface.v202108alpha1.NetworkBoundary network_boundary = 13 [json_name = "networkBoundary"];
          if (this_._internal_network_boundary() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                13, this_._internal_network_boundary(), target);
          }

          // repeated int32 top_nexthop_asns = 14 [json_name = "topNexthopAsns"];
          {
            int byte_size = this_._impl_._top_nexthop_asns_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt32Packed(
                  14, this_._internal_top_nexthop_asns(), byte_size, target);
            }
          }

          // string provider = 15 [json_name = "provider"];
          if (!this_._internal_provider().empty()) {
            const std::string& _s = this_._internal_provider();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.provider");
            target = stream->WriteStringMaybeAliased(15, _s, target);
          }

          // map<string, string> interface_kvs = 16 [json_name = "interfaceKvs"];
          if (!this_._internal_interface_kvs().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_interface_kvs();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    16, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.interface_kvs");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.interface_kvs");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    16, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.interface_kvs");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.interface_kvs");
              }
            }
          }

          // map<string, string> interface_tags = 17 [json_name = "interfaceTags"];
          if (!this_._internal_interface_tags().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_interface_tags();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    17, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.interface_tags");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.interface_tags");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    17, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.interface_tags");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.interface_tags");
              }
            }
          }

          // string interface_status = 18 [json_name = "interfaceStatus"];
          if (!this_._internal_interface_status().empty()) {
            const std::string& _s = this_._internal_interface_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.interface_status");
            target = stream->WriteStringMaybeAliased(18, _s, target);
          }

          // map<string, string> extra_info = 19 [json_name = "extraInfo"];
          if (!this_._internal_extra_info().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_extra_info();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    19, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.extra_info");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.extra_info");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    19, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.extra_info");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.extra_info");
              }
            }
          }

          // string initial_snmp_id = 20 [json_name = "initialSnmpId"];
          if (!this_._internal_initial_snmp_id().empty()) {
            const std::string& _s = this_._internal_initial_snmp_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.initial_snmp_id");
            target = stream->WriteStringMaybeAliased(20, _s, target);
          }

          // string initial_snmp_alias = 21 [json_name = "initialSnmpAlias"];
          if (!this_._internal_initial_snmp_alias().empty()) {
            const std::string& _s = this_._internal_initial_snmp_alias();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.initial_snmp_alias");
            target = stream->WriteStringMaybeAliased(21, _s, target);
          }

          // string initial_interface_description = 22 [json_name = "initialInterfaceDescription"];
          if (!this_._internal_initial_interface_description().empty()) {
            const std::string& _s = this_._internal_initial_interface_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.initial_interface_description");
            target = stream->WriteStringMaybeAliased(22, _s, target);
          }

          // int32 initial_snmp_speed = 23 [json_name = "initialSnmpSpeed"];
          if (this_._internal_initial_snmp_speed() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                23, this_._internal_initial_snmp_speed(), target);
          }

          // string secondary_ips = 24 [json_name = "secondaryIps"];
          if (!this_._internal_secondary_ips().empty()) {
            const std::string& _s = this_._internal_secondary_ips();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.secondary_ips");
            target = stream->WriteStringMaybeAliased(24, _s, target);
          }

          // .kentik.interface.v202108alpha1.ConnectivityType initial_connectivity_type = 25 [json_name = "initialConnectivityType"];
          if (this_._internal_initial_connectivity_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                25, this_._internal_initial_connectivity_type(), target);
          }

          // .kentik.interface.v202108alpha1.NetworkBoundary initial_network_boundary = 26 [json_name = "initialNetworkBoundary"];
          if (this_._internal_initial_network_boundary() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                26, this_._internal_initial_network_boundary(), target);
          }

          // string initial_provider = 27 [json_name = "initialProvider"];
          if (!this_._internal_initial_provider().empty()) {
            const std::string& _s = this_._internal_initial_provider();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.initial_provider");
            target = stream->WriteStringMaybeAliased(27, _s, target);
          }

          // string vrf_id = 28 [json_name = "vrfId"];
          if (!this_._internal_vrf_id().empty()) {
            const std::string& _s = this_._internal_vrf_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.vrf_id");
            target = stream->WriteStringMaybeAliased(28, _s, target);
          }

          // map<string, string> vrf = 29 [json_name = "vrf"];
          if (!this_._internal_vrf().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_vrf();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    29, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.vrf");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.vrf");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    29, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.vrf");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Interface.vrf");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.interface.v202108alpha1.Interface)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Interface::ByteSizeLong(const MessageLite& base) {
          const Interface& this_ = static_cast<const Interface&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Interface::ByteSizeLong() const {
          const Interface& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.interface.v202108alpha1.Interface)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int32 top_nexthop_asns = 14 [json_name = "topNexthopAsns"];
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
                      this_._internal_top_nexthop_asns(), 1,
                      this_._impl_._top_nexthop_asns_cached_byte_size_);
            }
            // map<string, string> interface_kvs = 16 [json_name = "interfaceKvs"];
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_interface_kvs_size());
              for (const auto& entry : this_._internal_interface_kvs()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> interface_tags = 17 [json_name = "interfaceTags"];
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_interface_tags_size());
              for (const auto& entry : this_._internal_interface_tags()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> extra_info = 19 [json_name = "extraInfo"];
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_extra_info_size());
              for (const auto& entry : this_._internal_extra_info()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, string> vrf = 29 [json_name = "vrf"];
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_vrf_size());
              for (const auto& entry : this_._internal_vrf()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string id = 1 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string device_id = 2 [json_name = "deviceId"];
            if (!this_._internal_device_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_id());
            }
            // string snmp_id = 3 [json_name = "snmpId"];
            if (!this_._internal_snmp_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_snmp_id());
            }
            // string snmp_alias = 6 [json_name = "snmpAlias"];
            if (!this_._internal_snmp_alias().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_snmp_alias());
            }
            // string interface_ip = 7 [json_name = "interfaceIp"];
            if (!this_._internal_interface_ip().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_interface_ip());
            }
            // string interface_description = 8 [json_name = "interfaceDescription"];
            if (!this_._internal_interface_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_interface_description());
            }
            // string interface_ip_netmask = 11 [json_name = "interfaceIpNetmask"];
            if (!this_._internal_interface_ip_netmask().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_interface_ip_netmask());
            }
            // string provider = 15 [json_name = "provider"];
            if (!this_._internal_provider().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_provider());
            }
            // string interface_status = 18 [json_name = "interfaceStatus"];
            if (!this_._internal_interface_status().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_interface_status());
            }
            // string initial_snmp_id = 20 [json_name = "initialSnmpId"];
            if (!this_._internal_initial_snmp_id().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_initial_snmp_id());
            }
            // string initial_snmp_alias = 21 [json_name = "initialSnmpAlias"];
            if (!this_._internal_initial_snmp_alias().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_initial_snmp_alias());
            }
            // string initial_interface_description = 22 [json_name = "initialInterfaceDescription"];
            if (!this_._internal_initial_interface_description().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_initial_interface_description());
            }
            // string secondary_ips = 24 [json_name = "secondaryIps"];
            if (!this_._internal_secondary_ips().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_secondary_ips());
            }
            // string initial_provider = 27 [json_name = "initialProvider"];
            if (!this_._internal_initial_provider().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_initial_provider());
            }
            // string vrf_id = 28 [json_name = "vrfId"];
            if (!this_._internal_vrf_id().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_vrf_id());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp cdate = 9 [json_name = "cdate"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cdate_);
            }
            // .google.protobuf.Timestamp edate = 10 [json_name = "edate"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.edate_);
            }
          }
           {
            // int32 snmp_speed = 4 [json_name = "snmpSpeed"];
            if (this_._internal_snmp_speed() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_snmp_speed());
            }
            // int32 snmp_type = 5 [json_name = "snmpType"];
            if (this_._internal_snmp_type() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_snmp_type());
            }
            // .kentik.interface.v202108alpha1.ConnectivityType connectivity_type = 12 [json_name = "connectivityType"];
            if (this_._internal_connectivity_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_connectivity_type());
            }
            // .kentik.interface.v202108alpha1.NetworkBoundary network_boundary = 13 [json_name = "networkBoundary"];
            if (this_._internal_network_boundary() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_network_boundary());
            }
            // int32 initial_snmp_speed = 23 [json_name = "initialSnmpSpeed"];
            if (this_._internal_initial_snmp_speed() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_initial_snmp_speed());
            }
            // .kentik.interface.v202108alpha1.ConnectivityType initial_connectivity_type = 25 [json_name = "initialConnectivityType"];
            if (this_._internal_initial_connectivity_type() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_initial_connectivity_type());
            }
            // .kentik.interface.v202108alpha1.NetworkBoundary initial_network_boundary = 26 [json_name = "initialNetworkBoundary"];
            if (this_._internal_initial_network_boundary() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_initial_network_boundary());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Interface::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Interface*>(&to_msg);
  auto& from = static_cast<const Interface&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.interface.v202108alpha1.Interface)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_top_nexthop_asns()->MergeFrom(from._internal_top_nexthop_asns());
  _this->_impl_.interface_kvs_.MergeFrom(from._impl_.interface_kvs_);
  _this->_impl_.interface_tags_.MergeFrom(from._impl_.interface_tags_);
  _this->_impl_.extra_info_.MergeFrom(from._impl_.extra_info_);
  _this->_impl_.vrf_.MergeFrom(from._impl_.vrf_);
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_device_id().empty()) {
    _this->_internal_set_device_id(from._internal_device_id());
  }
  if (!from._internal_snmp_id().empty()) {
    _this->_internal_set_snmp_id(from._internal_snmp_id());
  }
  if (!from._internal_snmp_alias().empty()) {
    _this->_internal_set_snmp_alias(from._internal_snmp_alias());
  }
  if (!from._internal_interface_ip().empty()) {
    _this->_internal_set_interface_ip(from._internal_interface_ip());
  }
  if (!from._internal_interface_description().empty()) {
    _this->_internal_set_interface_description(from._internal_interface_description());
  }
  if (!from._internal_interface_ip_netmask().empty()) {
    _this->_internal_set_interface_ip_netmask(from._internal_interface_ip_netmask());
  }
  if (!from._internal_provider().empty()) {
    _this->_internal_set_provider(from._internal_provider());
  }
  if (!from._internal_interface_status().empty()) {
    _this->_internal_set_interface_status(from._internal_interface_status());
  }
  if (!from._internal_initial_snmp_id().empty()) {
    _this->_internal_set_initial_snmp_id(from._internal_initial_snmp_id());
  }
  if (!from._internal_initial_snmp_alias().empty()) {
    _this->_internal_set_initial_snmp_alias(from._internal_initial_snmp_alias());
  }
  if (!from._internal_initial_interface_description().empty()) {
    _this->_internal_set_initial_interface_description(from._internal_initial_interface_description());
  }
  if (!from._internal_secondary_ips().empty()) {
    _this->_internal_set_secondary_ips(from._internal_secondary_ips());
  }
  if (!from._internal_initial_provider().empty()) {
    _this->_internal_set_initial_provider(from._internal_initial_provider());
  }
  if (!from._internal_vrf_id().empty()) {
    _this->_internal_set_vrf_id(from._internal_vrf_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.cdate_ != nullptr);
      if (_this->_impl_.cdate_ == nullptr) {
        _this->_impl_.cdate_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.cdate_);
      } else {
        _this->_impl_.cdate_->MergeFrom(*from._impl_.cdate_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.edate_ != nullptr);
      if (_this->_impl_.edate_ == nullptr) {
        _this->_impl_.edate_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.edate_);
      } else {
        _this->_impl_.edate_->MergeFrom(*from._impl_.edate_);
      }
    }
  }
  if (from._internal_snmp_speed() != 0) {
    _this->_impl_.snmp_speed_ = from._impl_.snmp_speed_;
  }
  if (from._internal_snmp_type() != 0) {
    _this->_impl_.snmp_type_ = from._impl_.snmp_type_;
  }
  if (from._internal_connectivity_type() != 0) {
    _this->_impl_.connectivity_type_ = from._impl_.connectivity_type_;
  }
  if (from._internal_network_boundary() != 0) {
    _this->_impl_.network_boundary_ = from._impl_.network_boundary_;
  }
  if (from._internal_initial_snmp_speed() != 0) {
    _this->_impl_.initial_snmp_speed_ = from._impl_.initial_snmp_speed_;
  }
  if (from._internal_initial_connectivity_type() != 0) {
    _this->_impl_.initial_connectivity_type_ = from._impl_.initial_connectivity_type_;
  }
  if (from._internal_initial_network_boundary() != 0) {
    _this->_impl_.initial_network_boundary_ = from._impl_.initial_network_boundary_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Interface::CopyFrom(const Interface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.interface.v202108alpha1.Interface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Interface::InternalSwap(Interface* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.top_nexthop_asns_.InternalSwap(&other->_impl_.top_nexthop_asns_);
  _impl_.interface_kvs_.InternalSwap(&other->_impl_.interface_kvs_);
  _impl_.interface_tags_.InternalSwap(&other->_impl_.interface_tags_);
  _impl_.extra_info_.InternalSwap(&other->_impl_.extra_info_);
  _impl_.vrf_.InternalSwap(&other->_impl_.vrf_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.snmp_id_, &other->_impl_.snmp_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.snmp_alias_, &other->_impl_.snmp_alias_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.interface_ip_, &other->_impl_.interface_ip_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.interface_description_, &other->_impl_.interface_description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.interface_ip_netmask_, &other->_impl_.interface_ip_netmask_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.provider_, &other->_impl_.provider_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.interface_status_, &other->_impl_.interface_status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.initial_snmp_id_, &other->_impl_.initial_snmp_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.initial_snmp_alias_, &other->_impl_.initial_snmp_alias_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.initial_interface_description_, &other->_impl_.initial_interface_description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.secondary_ips_, &other->_impl_.secondary_ips_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.initial_provider_, &other->_impl_.initial_provider_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.vrf_id_, &other->_impl_.vrf_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Interface, _impl_.initial_network_boundary_)
      + sizeof(Interface::_impl_.initial_network_boundary_)
      - PROTOBUF_FIELD_OFFSET(Interface, _impl_.cdate_)>(
          reinterpret_cast<char*>(&_impl_.cdate_),
          reinterpret_cast<char*>(&other->_impl_.cdate_));
}

::google::protobuf::Metadata Interface::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InterfaceClassification::_Internal {
 public:
};

InterfaceClassification::InterfaceClassification(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.InterfaceClassification)
}
InterfaceClassification::InterfaceClassification(
    ::google::protobuf::Arena* arena, const InterfaceClassification& from)
    : InterfaceClassification(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE InterfaceClassification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void InterfaceClassification::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, classified_),
           0,
           offsetof(Impl_, network_boundary_) -
               offsetof(Impl_, classified_) +
               sizeof(Impl_::network_boundary_));
}
InterfaceClassification::~InterfaceClassification() {
  // @@protoc_insertion_point(destructor:kentik.interface.v202108alpha1.InterfaceClassification)
  SharedDtor(*this);
}
inline void InterfaceClassification::SharedDtor(MessageLite& self) {
  InterfaceClassification& this_ = static_cast<InterfaceClassification&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* InterfaceClassification::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InterfaceClassification(arena);
}
constexpr auto InterfaceClassification::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(InterfaceClassification),
                                            alignof(InterfaceClassification));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InterfaceClassification::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InterfaceClassification_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &InterfaceClassification::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InterfaceClassification>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InterfaceClassification::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InterfaceClassification>(), &InterfaceClassification::ByteSizeLong,
            &InterfaceClassification::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InterfaceClassification, _impl_._cached_size_),
        false,
    },
    &InterfaceClassification::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InterfaceClassification::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> InterfaceClassification::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::InterfaceClassification>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool classified = 1 [json_name = "classified"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(InterfaceClassification, _impl_.classified_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassification, _impl_.classified_)}},
    // .kentik.interface.v202108alpha1.ConnectivityType connectivity_type = 2 [json_name = "connectivityType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InterfaceClassification, _impl_.connectivity_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassification, _impl_.connectivity_type_)}},
    // .kentik.interface.v202108alpha1.NetworkBoundary network_boundary = 3 [json_name = "networkBoundary"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InterfaceClassification, _impl_.network_boundary_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassification, _impl_.network_boundary_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool classified = 1 [json_name = "classified"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassification, _impl_.classified_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .kentik.interface.v202108alpha1.ConnectivityType connectivity_type = 2 [json_name = "connectivityType"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassification, _impl_.connectivity_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .kentik.interface.v202108alpha1.NetworkBoundary network_boundary = 3 [json_name = "networkBoundary"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassification, _impl_.network_boundary_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void InterfaceClassification::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.interface.v202108alpha1.InterfaceClassification)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.classified_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.network_boundary_) -
      reinterpret_cast<char*>(&_impl_.classified_)) + sizeof(_impl_.network_boundary_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InterfaceClassification::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InterfaceClassification& this_ = static_cast<const InterfaceClassification&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InterfaceClassification::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InterfaceClassification& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.interface.v202108alpha1.InterfaceClassification)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool classified = 1 [json_name = "classified"];
          if (this_._internal_classified() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_classified(), target);
          }

          // .kentik.interface.v202108alpha1.ConnectivityType connectivity_type = 2 [json_name = "connectivityType"];
          if (this_._internal_connectivity_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_connectivity_type(), target);
          }

          // .kentik.interface.v202108alpha1.NetworkBoundary network_boundary = 3 [json_name = "networkBoundary"];
          if (this_._internal_network_boundary() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_network_boundary(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.interface.v202108alpha1.InterfaceClassification)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InterfaceClassification::ByteSizeLong(const MessageLite& base) {
          const InterfaceClassification& this_ = static_cast<const InterfaceClassification&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InterfaceClassification::ByteSizeLong() const {
          const InterfaceClassification& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.interface.v202108alpha1.InterfaceClassification)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bool classified = 1 [json_name = "classified"];
            if (this_._internal_classified() != 0) {
              total_size += 2;
            }
            // .kentik.interface.v202108alpha1.ConnectivityType connectivity_type = 2 [json_name = "connectivityType"];
            if (this_._internal_connectivity_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_connectivity_type());
            }
            // .kentik.interface.v202108alpha1.NetworkBoundary network_boundary = 3 [json_name = "networkBoundary"];
            if (this_._internal_network_boundary() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_network_boundary());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InterfaceClassification::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InterfaceClassification*>(&to_msg);
  auto& from = static_cast<const InterfaceClassification&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.interface.v202108alpha1.InterfaceClassification)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_classified() != 0) {
    _this->_impl_.classified_ = from._impl_.classified_;
  }
  if (from._internal_connectivity_type() != 0) {
    _this->_impl_.connectivity_type_ = from._impl_.connectivity_type_;
  }
  if (from._internal_network_boundary() != 0) {
    _this->_impl_.network_boundary_ = from._impl_.network_boundary_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InterfaceClassification::CopyFrom(const InterfaceClassification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.interface.v202108alpha1.InterfaceClassification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InterfaceClassification::InternalSwap(InterfaceClassification* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InterfaceClassification, _impl_.network_boundary_)
      + sizeof(InterfaceClassification::_impl_.network_boundary_)
      - PROTOBUF_FIELD_OFFSET(InterfaceClassification, _impl_.classified_)>(
          reinterpret_cast<char*>(&_impl_.classified_),
          reinterpret_cast<char*>(&other->_impl_.classified_));
}

::google::protobuf::Metadata InterfaceClassification::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ClassifyCounter::_Internal {
 public:
};

ClassifyCounter::ClassifyCounter(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.ClassifyCounter)
}
ClassifyCounter::ClassifyCounter(
    ::google::protobuf::Arena* arena, const ClassifyCounter& from)
    : ClassifyCounter(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ClassifyCounter::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ClassifyCounter::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, count_),
           0,
           offsetof(Impl_, transit_count_) -
               offsetof(Impl_, count_) +
               sizeof(Impl_::transit_count_));
}
ClassifyCounter::~ClassifyCounter() {
  // @@protoc_insertion_point(destructor:kentik.interface.v202108alpha1.ClassifyCounter)
  SharedDtor(*this);
}
inline void ClassifyCounter::SharedDtor(MessageLite& self) {
  ClassifyCounter& this_ = static_cast<ClassifyCounter&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ClassifyCounter::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ClassifyCounter(arena);
}
constexpr auto ClassifyCounter::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ClassifyCounter),
                                            alignof(ClassifyCounter));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ClassifyCounter::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ClassifyCounter_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ClassifyCounter::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ClassifyCounter>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ClassifyCounter::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ClassifyCounter>(), &ClassifyCounter::ByteSizeLong,
            &ClassifyCounter::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ClassifyCounter, _impl_._cached_size_),
        false,
    },
    &ClassifyCounter::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ClassifyCounter::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> ClassifyCounter::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::ClassifyCounter>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 count = 1 [json_name = "count"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClassifyCounter, _impl_.count_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ClassifyCounter, _impl_.count_)}},
    // int32 external_count = 2 [json_name = "externalCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClassifyCounter, _impl_.external_count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ClassifyCounter, _impl_.external_count_)}},
    // int32 free_pni_count = 3 [json_name = "freePniCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClassifyCounter, _impl_.free_pni_count_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ClassifyCounter, _impl_.free_pni_count_)}},
    // int32 ix_count = 4 [json_name = "ixCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClassifyCounter, _impl_.ix_count_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ClassifyCounter, _impl_.ix_count_)}},
    // int32 provider_count = 5 [json_name = "providerCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClassifyCounter, _impl_.provider_count_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ClassifyCounter, _impl_.provider_count_)}},
    // int32 transit_count = 6 [json_name = "transitCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClassifyCounter, _impl_.transit_count_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(ClassifyCounter, _impl_.transit_count_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 count = 1 [json_name = "count"];
    {PROTOBUF_FIELD_OFFSET(ClassifyCounter, _impl_.count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 external_count = 2 [json_name = "externalCount"];
    {PROTOBUF_FIELD_OFFSET(ClassifyCounter, _impl_.external_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 free_pni_count = 3 [json_name = "freePniCount"];
    {PROTOBUF_FIELD_OFFSET(ClassifyCounter, _impl_.free_pni_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 ix_count = 4 [json_name = "ixCount"];
    {PROTOBUF_FIELD_OFFSET(ClassifyCounter, _impl_.ix_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 provider_count = 5 [json_name = "providerCount"];
    {PROTOBUF_FIELD_OFFSET(ClassifyCounter, _impl_.provider_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 transit_count = 6 [json_name = "transitCount"];
    {PROTOBUF_FIELD_OFFSET(ClassifyCounter, _impl_.transit_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ClassifyCounter::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.interface.v202108alpha1.ClassifyCounter)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.count_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.transit_count_) -
      reinterpret_cast<char*>(&_impl_.count_)) + sizeof(_impl_.transit_count_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ClassifyCounter::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ClassifyCounter& this_ = static_cast<const ClassifyCounter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ClassifyCounter::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ClassifyCounter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.interface.v202108alpha1.ClassifyCounter)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 count = 1 [json_name = "count"];
          if (this_._internal_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_count(), target);
          }

          // int32 external_count = 2 [json_name = "externalCount"];
          if (this_._internal_external_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_external_count(), target);
          }

          // int32 free_pni_count = 3 [json_name = "freePniCount"];
          if (this_._internal_free_pni_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_free_pni_count(), target);
          }

          // int32 ix_count = 4 [json_name = "ixCount"];
          if (this_._internal_ix_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_ix_count(), target);
          }

          // int32 provider_count = 5 [json_name = "providerCount"];
          if (this_._internal_provider_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_provider_count(), target);
          }

          // int32 transit_count = 6 [json_name = "transitCount"];
          if (this_._internal_transit_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_transit_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.interface.v202108alpha1.ClassifyCounter)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ClassifyCounter::ByteSizeLong(const MessageLite& base) {
          const ClassifyCounter& this_ = static_cast<const ClassifyCounter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ClassifyCounter::ByteSizeLong() const {
          const ClassifyCounter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.interface.v202108alpha1.ClassifyCounter)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 count = 1 [json_name = "count"];
            if (this_._internal_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_count());
            }
            // int32 external_count = 2 [json_name = "externalCount"];
            if (this_._internal_external_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_external_count());
            }
            // int32 free_pni_count = 3 [json_name = "freePniCount"];
            if (this_._internal_free_pni_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_free_pni_count());
            }
            // int32 ix_count = 4 [json_name = "ixCount"];
            if (this_._internal_ix_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_ix_count());
            }
            // int32 provider_count = 5 [json_name = "providerCount"];
            if (this_._internal_provider_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_provider_count());
            }
            // int32 transit_count = 6 [json_name = "transitCount"];
            if (this_._internal_transit_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_transit_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ClassifyCounter::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClassifyCounter*>(&to_msg);
  auto& from = static_cast<const ClassifyCounter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.interface.v202108alpha1.ClassifyCounter)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_count() != 0) {
    _this->_impl_.count_ = from._impl_.count_;
  }
  if (from._internal_external_count() != 0) {
    _this->_impl_.external_count_ = from._impl_.external_count_;
  }
  if (from._internal_free_pni_count() != 0) {
    _this->_impl_.free_pni_count_ = from._impl_.free_pni_count_;
  }
  if (from._internal_ix_count() != 0) {
    _this->_impl_.ix_count_ = from._impl_.ix_count_;
  }
  if (from._internal_provider_count() != 0) {
    _this->_impl_.provider_count_ = from._impl_.provider_count_;
  }
  if (from._internal_transit_count() != 0) {
    _this->_impl_.transit_count_ = from._impl_.transit_count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClassifyCounter::CopyFrom(const ClassifyCounter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.interface.v202108alpha1.ClassifyCounter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClassifyCounter::InternalSwap(ClassifyCounter* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ClassifyCounter, _impl_.transit_count_)
      + sizeof(ClassifyCounter::_impl_.transit_count_)
      - PROTOBUF_FIELD_OFFSET(ClassifyCounter, _impl_.count_)>(
          reinterpret_cast<char*>(&_impl_.count_),
          reinterpret_cast<char*>(&other->_impl_.count_));
}

::google::protobuf::Metadata ClassifyCounter::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InterfaceClassifyInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<InterfaceClassifyInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_._has_bits_);
};

InterfaceClassifyInfo::InterfaceClassifyInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.InterfaceClassifyInfo)
}
inline PROTOBUF_NDEBUG_INLINE InterfaceClassifyInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::interface::v202108alpha1::InterfaceClassifyInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        top_nexthop_asns_{visibility, arena, from.top_nexthop_asns_},
        device_id_(arena, from.device_id_),
        snmp_id_(arena, from.snmp_id_),
        snmp_alias_(arena, from.snmp_alias_),
        interface_ip_(arena, from.interface_ip_),
        interface_ip_asn_(arena, from.interface_ip_asn_),
        pdb_global_name_(arena, from.pdb_global_name_),
        provider_(arena, from.provider_),
        previously_classified_provider_(arena, from.previously_classified_provider_) {}

InterfaceClassifyInfo::InterfaceClassifyInfo(
    ::google::protobuf::Arena* arena,
    const InterfaceClassifyInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InterfaceClassifyInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.auto_classification_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::InterfaceClassification>(
                              arena, *from._impl_.auto_classification_)
                        : nullptr;
  _impl_.previous_classification_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::InterfaceClassification>(
                              arena, *from._impl_.previous_classification_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_internal_ip_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, is_internal_ip_),
           offsetof(Impl_, changed_classification_) -
               offsetof(Impl_, is_internal_ip_) +
               sizeof(Impl_::changed_classification_));

  // @@protoc_insertion_point(copy_constructor:kentik.interface.v202108alpha1.InterfaceClassifyInfo)
}
inline PROTOBUF_NDEBUG_INLINE InterfaceClassifyInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        top_nexthop_asns_{visibility, arena},
        device_id_(arena),
        snmp_id_(arena),
        snmp_alias_(arena),
        interface_ip_(arena),
        interface_ip_asn_(arena),
        pdb_global_name_(arena),
        provider_(arena),
        previously_classified_provider_(arena) {}

inline void InterfaceClassifyInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, auto_classification_),
           0,
           offsetof(Impl_, changed_classification_) -
               offsetof(Impl_, auto_classification_) +
               sizeof(Impl_::changed_classification_));
}
InterfaceClassifyInfo::~InterfaceClassifyInfo() {
  // @@protoc_insertion_point(destructor:kentik.interface.v202108alpha1.InterfaceClassifyInfo)
  SharedDtor(*this);
}
inline void InterfaceClassifyInfo::SharedDtor(MessageLite& self) {
  InterfaceClassifyInfo& this_ = static_cast<InterfaceClassifyInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  this_._impl_.snmp_id_.Destroy();
  this_._impl_.snmp_alias_.Destroy();
  this_._impl_.interface_ip_.Destroy();
  this_._impl_.interface_ip_asn_.Destroy();
  this_._impl_.pdb_global_name_.Destroy();
  this_._impl_.provider_.Destroy();
  this_._impl_.previously_classified_provider_.Destroy();
  delete this_._impl_.auto_classification_;
  delete this_._impl_.previous_classification_;
  this_._impl_.~Impl_();
}

inline void* InterfaceClassifyInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InterfaceClassifyInfo(arena);
}
constexpr auto InterfaceClassifyInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.top_nexthop_asns_) +
          decltype(InterfaceClassifyInfo::_impl_.top_nexthop_asns_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(InterfaceClassifyInfo), alignof(InterfaceClassifyInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&InterfaceClassifyInfo::PlacementNew_,
                                 sizeof(InterfaceClassifyInfo),
                                 alignof(InterfaceClassifyInfo));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InterfaceClassifyInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InterfaceClassifyInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &InterfaceClassifyInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InterfaceClassifyInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InterfaceClassifyInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InterfaceClassifyInfo>(), &InterfaceClassifyInfo::ByteSizeLong,
            &InterfaceClassifyInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_._cached_size_),
        false,
    },
    &InterfaceClassifyInfo::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InterfaceClassifyInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 24, 2, 208, 2> InterfaceClassifyInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_._has_bits_),
    0, // no _extensions_
    24, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4278190080,  // skipmap
    offsetof(decltype(_table_), field_entries),
    24,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::InterfaceClassifyInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string device_id = 1 [json_name = "deviceId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.device_id_)}},
    // string snmp_id = 2 [json_name = "snmpId"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.snmp_id_)}},
    // string snmp_alias = 3 [json_name = "snmpAlias"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.snmp_alias_)}},
    // string interface_ip = 4 [json_name = "interfaceIp"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.interface_ip_)}},
    // string interface_ip_asn = 5 [json_name = "interfaceIpAsn"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.interface_ip_asn_)}},
    // bool is_internal_ip = 6 [json_name = "isInternalIp"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(InterfaceClassifyInfo, _impl_.is_internal_ip_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.is_internal_ip_)}},
    // bool is_internal_asn = 7 [json_name = "isInternalAsn"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(InterfaceClassifyInfo, _impl_.is_internal_asn_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.is_internal_asn_)}},
    // repeated string top_nexthop_asns = 8 [json_name = "topNexthopAsns"];
    {::_pbi::TcParser::FastUR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.top_nexthop_asns_)}},
    // string pdb_global_name = 9 [json_name = "pdbGlobalName"];
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.pdb_global_name_)}},
    // .kentik.interface.v202108alpha1.InterfaceClassification auto_classification = 10 [json_name = "autoClassification"];
    {::_pbi::TcParser::FastMtS1,
     {82, 0, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.auto_classification_)}},
    // .kentik.interface.v202108alpha1.InterfaceClassification previous_classification = 11 [json_name = "previousClassification"];
    {::_pbi::TcParser::FastMtS1,
     {90, 1, 1, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.previous_classification_)}},
    // string provider = 12 [json_name = "provider"];
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.provider_)}},
    // int32 network_boundary_confidence = 13 [json_name = "networkBoundaryConfidence"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InterfaceClassifyInfo, _impl_.network_boundary_confidence_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.network_boundary_confidence_)}},
    // int32 connectivity_type_confidence = 14 [json_name = "connectivityTypeConfidence"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InterfaceClassifyInfo, _impl_.connectivity_type_confidence_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.connectivity_type_confidence_)}},
    // int32 provider_confidence = 15 [json_name = "providerConfidence"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InterfaceClassifyInfo, _impl_.provider_confidence_), 63>(),
     {120, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.provider_confidence_)}},
    // bool auto_classified_provider = 16 [json_name = "autoClassifiedProvider"];
    {::_pbi::TcParser::FastV8S2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.auto_classified_provider_)}},
    // string previously_classified_provider = 17 [json_name = "previouslyClassifiedProvider"];
    {::_pbi::TcParser::FastUS2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.previously_classified_provider_)}},
    // bool previously_classified_external = 18 [json_name = "previouslyClassifiedExternal"];
    {::_pbi::TcParser::FastV8S2,
     {400, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.previously_classified_external_)}},
    // bool ip_asn_matched = 19 [json_name = "ipAsnMatched"];
    {::_pbi::TcParser::FastV8S2,
     {408, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.ip_asn_matched_)}},
    // bool ix_matched = 20 [json_name = "ixMatched"];
    {::_pbi::TcParser::FastV8S2,
     {416, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.ix_matched_)}},
    // bool nexthop_matched = 21 [json_name = "nexthopMatched"];
    {::_pbi::TcParser::FastV8S2,
     {424, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.nexthop_matched_)}},
    // bool connectivity_type_matched = 22 [json_name = "connectivityTypeMatched"];
    {::_pbi::TcParser::FastV8S2,
     {432, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.connectivity_type_matched_)}},
    // bool provider_matched = 23 [json_name = "providerMatched"];
    {::_pbi::TcParser::FastV8S2,
     {440, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.provider_matched_)}},
    // bool changed_classification = 24 [json_name = "changedClassification"];
    {::_pbi::TcParser::FastV8S2,
     {448, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.changed_classification_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1 [json_name = "deviceId"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.device_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string snmp_id = 2 [json_name = "snmpId"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.snmp_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string snmp_alias = 3 [json_name = "snmpAlias"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.snmp_alias_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string interface_ip = 4 [json_name = "interfaceIp"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.interface_ip_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string interface_ip_asn = 5 [json_name = "interfaceIpAsn"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.interface_ip_asn_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_internal_ip = 6 [json_name = "isInternalIp"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.is_internal_ip_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool is_internal_asn = 7 [json_name = "isInternalAsn"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.is_internal_asn_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // repeated string top_nexthop_asns = 8 [json_name = "topNexthopAsns"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.top_nexthop_asns_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string pdb_global_name = 9 [json_name = "pdbGlobalName"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.pdb_global_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .kentik.interface.v202108alpha1.InterfaceClassification auto_classification = 10 [json_name = "autoClassification"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.auto_classification_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.interface.v202108alpha1.InterfaceClassification previous_classification = 11 [json_name = "previousClassification"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.previous_classification_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string provider = 12 [json_name = "provider"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.provider_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 network_boundary_confidence = 13 [json_name = "networkBoundaryConfidence"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.network_boundary_confidence_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 connectivity_type_confidence = 14 [json_name = "connectivityTypeConfidence"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.connectivity_type_confidence_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 provider_confidence = 15 [json_name = "providerConfidence"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.provider_confidence_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool auto_classified_provider = 16 [json_name = "autoClassifiedProvider"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.auto_classified_provider_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string previously_classified_provider = 17 [json_name = "previouslyClassifiedProvider"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.previously_classified_provider_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool previously_classified_external = 18 [json_name = "previouslyClassifiedExternal"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.previously_classified_external_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool ip_asn_matched = 19 [json_name = "ipAsnMatched"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.ip_asn_matched_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool ix_matched = 20 [json_name = "ixMatched"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.ix_matched_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool nexthop_matched = 21 [json_name = "nexthopMatched"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.nexthop_matched_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool connectivity_type_matched = 22 [json_name = "connectivityTypeMatched"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.connectivity_type_matched_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool provider_matched = 23 [json_name = "providerMatched"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.provider_matched_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool changed_classification = 24 [json_name = "changedClassification"];
    {PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.changed_classification_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::InterfaceClassification>()},
    {::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::InterfaceClassification>()},
  }}, {{
    "\64\11\7\12\14\20\0\0\20\17\0\0\10\0\0\0\0\36\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "kentik.interface.v202108alpha1.InterfaceClassifyInfo"
    "device_id"
    "snmp_id"
    "snmp_alias"
    "interface_ip"
    "interface_ip_asn"
    "top_nexthop_asns"
    "pdb_global_name"
    "provider"
    "previously_classified_provider"
  }},
};

PROTOBUF_NOINLINE void InterfaceClassifyInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.interface.v202108alpha1.InterfaceClassifyInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.top_nexthop_asns_.Clear();
  _impl_.device_id_.ClearToEmpty();
  _impl_.snmp_id_.ClearToEmpty();
  _impl_.snmp_alias_.ClearToEmpty();
  _impl_.interface_ip_.ClearToEmpty();
  _impl_.interface_ip_asn_.ClearToEmpty();
  _impl_.pdb_global_name_.ClearToEmpty();
  _impl_.provider_.ClearToEmpty();
  _impl_.previously_classified_provider_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.auto_classification_ != nullptr);
      _impl_.auto_classification_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.previous_classification_ != nullptr);
      _impl_.previous_classification_->Clear();
    }
  }
  ::memset(&_impl_.is_internal_ip_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.changed_classification_) -
      reinterpret_cast<char*>(&_impl_.is_internal_ip_)) + sizeof(_impl_.changed_classification_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InterfaceClassifyInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InterfaceClassifyInfo& this_ = static_cast<const InterfaceClassifyInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InterfaceClassifyInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InterfaceClassifyInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.interface.v202108alpha1.InterfaceClassifyInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string device_id = 1 [json_name = "deviceId"];
          if (!this_._internal_device_id().empty()) {
            const std::string& _s = this_._internal_device_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.InterfaceClassifyInfo.device_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string snmp_id = 2 [json_name = "snmpId"];
          if (!this_._internal_snmp_id().empty()) {
            const std::string& _s = this_._internal_snmp_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.InterfaceClassifyInfo.snmp_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string snmp_alias = 3 [json_name = "snmpAlias"];
          if (!this_._internal_snmp_alias().empty()) {
            const std::string& _s = this_._internal_snmp_alias();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.InterfaceClassifyInfo.snmp_alias");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string interface_ip = 4 [json_name = "interfaceIp"];
          if (!this_._internal_interface_ip().empty()) {
            const std::string& _s = this_._internal_interface_ip();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.InterfaceClassifyInfo.interface_ip");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string interface_ip_asn = 5 [json_name = "interfaceIpAsn"];
          if (!this_._internal_interface_ip_asn().empty()) {
            const std::string& _s = this_._internal_interface_ip_asn();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.InterfaceClassifyInfo.interface_ip_asn");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // bool is_internal_ip = 6 [json_name = "isInternalIp"];
          if (this_._internal_is_internal_ip() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_is_internal_ip(), target);
          }

          // bool is_internal_asn = 7 [json_name = "isInternalAsn"];
          if (this_._internal_is_internal_asn() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_is_internal_asn(), target);
          }

          // repeated string top_nexthop_asns = 8 [json_name = "topNexthopAsns"];
          for (int i = 0, n = this_._internal_top_nexthop_asns_size(); i < n; ++i) {
            const auto& s = this_._internal_top_nexthop_asns().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.InterfaceClassifyInfo.top_nexthop_asns");
            target = stream->WriteString(8, s, target);
          }

          // string pdb_global_name = 9 [json_name = "pdbGlobalName"];
          if (!this_._internal_pdb_global_name().empty()) {
            const std::string& _s = this_._internal_pdb_global_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.InterfaceClassifyInfo.pdb_global_name");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.interface.v202108alpha1.InterfaceClassification auto_classification = 10 [json_name = "autoClassification"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.auto_classification_, this_._impl_.auto_classification_->GetCachedSize(), target,
                stream);
          }

          // .kentik.interface.v202108alpha1.InterfaceClassification previous_classification = 11 [json_name = "previousClassification"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.previous_classification_, this_._impl_.previous_classification_->GetCachedSize(), target,
                stream);
          }

          // string provider = 12 [json_name = "provider"];
          if (!this_._internal_provider().empty()) {
            const std::string& _s = this_._internal_provider();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.InterfaceClassifyInfo.provider");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          // int32 network_boundary_confidence = 13 [json_name = "networkBoundaryConfidence"];
          if (this_._internal_network_boundary_confidence() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<13>(
                    stream, this_._internal_network_boundary_confidence(), target);
          }

          // int32 connectivity_type_confidence = 14 [json_name = "connectivityTypeConfidence"];
          if (this_._internal_connectivity_type_confidence() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<14>(
                    stream, this_._internal_connectivity_type_confidence(), target);
          }

          // int32 provider_confidence = 15 [json_name = "providerConfidence"];
          if (this_._internal_provider_confidence() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<15>(
                    stream, this_._internal_provider_confidence(), target);
          }

          // bool auto_classified_provider = 16 [json_name = "autoClassifiedProvider"];
          if (this_._internal_auto_classified_provider() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                16, this_._internal_auto_classified_provider(), target);
          }

          // string previously_classified_provider = 17 [json_name = "previouslyClassifiedProvider"];
          if (!this_._internal_previously_classified_provider().empty()) {
            const std::string& _s = this_._internal_previously_classified_provider();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.InterfaceClassifyInfo.previously_classified_provider");
            target = stream->WriteStringMaybeAliased(17, _s, target);
          }

          // bool previously_classified_external = 18 [json_name = "previouslyClassifiedExternal"];
          if (this_._internal_previously_classified_external() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                18, this_._internal_previously_classified_external(), target);
          }

          // bool ip_asn_matched = 19 [json_name = "ipAsnMatched"];
          if (this_._internal_ip_asn_matched() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                19, this_._internal_ip_asn_matched(), target);
          }

          // bool ix_matched = 20 [json_name = "ixMatched"];
          if (this_._internal_ix_matched() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                20, this_._internal_ix_matched(), target);
          }

          // bool nexthop_matched = 21 [json_name = "nexthopMatched"];
          if (this_._internal_nexthop_matched() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                21, this_._internal_nexthop_matched(), target);
          }

          // bool connectivity_type_matched = 22 [json_name = "connectivityTypeMatched"];
          if (this_._internal_connectivity_type_matched() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                22, this_._internal_connectivity_type_matched(), target);
          }

          // bool provider_matched = 23 [json_name = "providerMatched"];
          if (this_._internal_provider_matched() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                23, this_._internal_provider_matched(), target);
          }

          // bool changed_classification = 24 [json_name = "changedClassification"];
          if (this_._internal_changed_classification() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                24, this_._internal_changed_classification(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.interface.v202108alpha1.InterfaceClassifyInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InterfaceClassifyInfo::ByteSizeLong(const MessageLite& base) {
          const InterfaceClassifyInfo& this_ = static_cast<const InterfaceClassifyInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InterfaceClassifyInfo::ByteSizeLong() const {
          const InterfaceClassifyInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.interface.v202108alpha1.InterfaceClassifyInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string top_nexthop_asns = 8 [json_name = "topNexthopAsns"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_top_nexthop_asns().size());
              for (int i = 0, n = this_._internal_top_nexthop_asns().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_top_nexthop_asns().Get(i));
              }
            }
          }
           {
            // string device_id = 1 [json_name = "deviceId"];
            if (!this_._internal_device_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_id());
            }
            // string snmp_id = 2 [json_name = "snmpId"];
            if (!this_._internal_snmp_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_snmp_id());
            }
            // string snmp_alias = 3 [json_name = "snmpAlias"];
            if (!this_._internal_snmp_alias().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_snmp_alias());
            }
            // string interface_ip = 4 [json_name = "interfaceIp"];
            if (!this_._internal_interface_ip().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_interface_ip());
            }
            // string interface_ip_asn = 5 [json_name = "interfaceIpAsn"];
            if (!this_._internal_interface_ip_asn().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_interface_ip_asn());
            }
            // string pdb_global_name = 9 [json_name = "pdbGlobalName"];
            if (!this_._internal_pdb_global_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_pdb_global_name());
            }
            // string provider = 12 [json_name = "provider"];
            if (!this_._internal_provider().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_provider());
            }
            // string previously_classified_provider = 17 [json_name = "previouslyClassifiedProvider"];
            if (!this_._internal_previously_classified_provider().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_previously_classified_provider());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .kentik.interface.v202108alpha1.InterfaceClassification auto_classification = 10 [json_name = "autoClassification"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.auto_classification_);
            }
            // .kentik.interface.v202108alpha1.InterfaceClassification previous_classification = 11 [json_name = "previousClassification"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.previous_classification_);
            }
          }
           {
            // bool is_internal_ip = 6 [json_name = "isInternalIp"];
            if (this_._internal_is_internal_ip() != 0) {
              total_size += 2;
            }
            // bool is_internal_asn = 7 [json_name = "isInternalAsn"];
            if (this_._internal_is_internal_asn() != 0) {
              total_size += 2;
            }
            // bool auto_classified_provider = 16 [json_name = "autoClassifiedProvider"];
            if (this_._internal_auto_classified_provider() != 0) {
              total_size += 3;
            }
            // bool previously_classified_external = 18 [json_name = "previouslyClassifiedExternal"];
            if (this_._internal_previously_classified_external() != 0) {
              total_size += 3;
            }
            // int32 network_boundary_confidence = 13 [json_name = "networkBoundaryConfidence"];
            if (this_._internal_network_boundary_confidence() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_network_boundary_confidence());
            }
            // int32 connectivity_type_confidence = 14 [json_name = "connectivityTypeConfidence"];
            if (this_._internal_connectivity_type_confidence() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_connectivity_type_confidence());
            }
            // int32 provider_confidence = 15 [json_name = "providerConfidence"];
            if (this_._internal_provider_confidence() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_provider_confidence());
            }
            // bool ip_asn_matched = 19 [json_name = "ipAsnMatched"];
            if (this_._internal_ip_asn_matched() != 0) {
              total_size += 3;
            }
            // bool ix_matched = 20 [json_name = "ixMatched"];
            if (this_._internal_ix_matched() != 0) {
              total_size += 3;
            }
            // bool nexthop_matched = 21 [json_name = "nexthopMatched"];
            if (this_._internal_nexthop_matched() != 0) {
              total_size += 3;
            }
            // bool connectivity_type_matched = 22 [json_name = "connectivityTypeMatched"];
            if (this_._internal_connectivity_type_matched() != 0) {
              total_size += 3;
            }
            // bool provider_matched = 23 [json_name = "providerMatched"];
            if (this_._internal_provider_matched() != 0) {
              total_size += 3;
            }
            // bool changed_classification = 24 [json_name = "changedClassification"];
            if (this_._internal_changed_classification() != 0) {
              total_size += 3;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InterfaceClassifyInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InterfaceClassifyInfo*>(&to_msg);
  auto& from = static_cast<const InterfaceClassifyInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.interface.v202108alpha1.InterfaceClassifyInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_top_nexthop_asns()->MergeFrom(from._internal_top_nexthop_asns());
  if (!from._internal_device_id().empty()) {
    _this->_internal_set_device_id(from._internal_device_id());
  }
  if (!from._internal_snmp_id().empty()) {
    _this->_internal_set_snmp_id(from._internal_snmp_id());
  }
  if (!from._internal_snmp_alias().empty()) {
    _this->_internal_set_snmp_alias(from._internal_snmp_alias());
  }
  if (!from._internal_interface_ip().empty()) {
    _this->_internal_set_interface_ip(from._internal_interface_ip());
  }
  if (!from._internal_interface_ip_asn().empty()) {
    _this->_internal_set_interface_ip_asn(from._internal_interface_ip_asn());
  }
  if (!from._internal_pdb_global_name().empty()) {
    _this->_internal_set_pdb_global_name(from._internal_pdb_global_name());
  }
  if (!from._internal_provider().empty()) {
    _this->_internal_set_provider(from._internal_provider());
  }
  if (!from._internal_previously_classified_provider().empty()) {
    _this->_internal_set_previously_classified_provider(from._internal_previously_classified_provider());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.auto_classification_ != nullptr);
      if (_this->_impl_.auto_classification_ == nullptr) {
        _this->_impl_.auto_classification_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::InterfaceClassification>(arena, *from._impl_.auto_classification_);
      } else {
        _this->_impl_.auto_classification_->MergeFrom(*from._impl_.auto_classification_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.previous_classification_ != nullptr);
      if (_this->_impl_.previous_classification_ == nullptr) {
        _this->_impl_.previous_classification_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::InterfaceClassification>(arena, *from._impl_.previous_classification_);
      } else {
        _this->_impl_.previous_classification_->MergeFrom(*from._impl_.previous_classification_);
      }
    }
  }
  if (from._internal_is_internal_ip() != 0) {
    _this->_impl_.is_internal_ip_ = from._impl_.is_internal_ip_;
  }
  if (from._internal_is_internal_asn() != 0) {
    _this->_impl_.is_internal_asn_ = from._impl_.is_internal_asn_;
  }
  if (from._internal_auto_classified_provider() != 0) {
    _this->_impl_.auto_classified_provider_ = from._impl_.auto_classified_provider_;
  }
  if (from._internal_previously_classified_external() != 0) {
    _this->_impl_.previously_classified_external_ = from._impl_.previously_classified_external_;
  }
  if (from._internal_network_boundary_confidence() != 0) {
    _this->_impl_.network_boundary_confidence_ = from._impl_.network_boundary_confidence_;
  }
  if (from._internal_connectivity_type_confidence() != 0) {
    _this->_impl_.connectivity_type_confidence_ = from._impl_.connectivity_type_confidence_;
  }
  if (from._internal_provider_confidence() != 0) {
    _this->_impl_.provider_confidence_ = from._impl_.provider_confidence_;
  }
  if (from._internal_ip_asn_matched() != 0) {
    _this->_impl_.ip_asn_matched_ = from._impl_.ip_asn_matched_;
  }
  if (from._internal_ix_matched() != 0) {
    _this->_impl_.ix_matched_ = from._impl_.ix_matched_;
  }
  if (from._internal_nexthop_matched() != 0) {
    _this->_impl_.nexthop_matched_ = from._impl_.nexthop_matched_;
  }
  if (from._internal_connectivity_type_matched() != 0) {
    _this->_impl_.connectivity_type_matched_ = from._impl_.connectivity_type_matched_;
  }
  if (from._internal_provider_matched() != 0) {
    _this->_impl_.provider_matched_ = from._impl_.provider_matched_;
  }
  if (from._internal_changed_classification() != 0) {
    _this->_impl_.changed_classification_ = from._impl_.changed_classification_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InterfaceClassifyInfo::CopyFrom(const InterfaceClassifyInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.interface.v202108alpha1.InterfaceClassifyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InterfaceClassifyInfo::InternalSwap(InterfaceClassifyInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.top_nexthop_asns_.InternalSwap(&other->_impl_.top_nexthop_asns_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.snmp_id_, &other->_impl_.snmp_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.snmp_alias_, &other->_impl_.snmp_alias_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.interface_ip_, &other->_impl_.interface_ip_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.interface_ip_asn_, &other->_impl_.interface_ip_asn_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pdb_global_name_, &other->_impl_.pdb_global_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.provider_, &other->_impl_.provider_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.previously_classified_provider_, &other->_impl_.previously_classified_provider_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.changed_classification_)
      + sizeof(InterfaceClassifyInfo::_impl_.changed_classification_)
      - PROTOBUF_FIELD_OFFSET(InterfaceClassifyInfo, _impl_.auto_classification_)>(
          reinterpret_cast<char*>(&_impl_.auto_classification_),
          reinterpret_cast<char*>(&other->_impl_.auto_classification_));
}

::google::protobuf::Metadata InterfaceClassifyInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeviceClassifyInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DeviceClassifyInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_._has_bits_);
};

DeviceClassifyInfo::DeviceClassifyInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.DeviceClassifyInfo)
}
inline PROTOBUF_NDEBUG_INLINE DeviceClassifyInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::interface::v202108alpha1::DeviceClassifyInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        interfaces_{visibility, arena, from.interfaces_},
        device_id_(arena, from.device_id_) {}

DeviceClassifyInfo::DeviceClassifyInfo(
    ::google::protobuf::Arena* arena,
    const DeviceClassifyInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeviceClassifyInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.previously_classified_counter_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::ClassifyCounter>(
                              arena, *from._impl_.previously_classified_counter_)
                        : nullptr;
  _impl_.auto_classified_counter_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::ClassifyCounter>(
                              arena, *from._impl_.auto_classified_counter_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_interfaces_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_interfaces_),
           offsetof(Impl_, provider_matched_count_) -
               offsetof(Impl_, total_interfaces_) +
               sizeof(Impl_::provider_matched_count_));

  // @@protoc_insertion_point(copy_constructor:kentik.interface.v202108alpha1.DeviceClassifyInfo)
}
inline PROTOBUF_NDEBUG_INLINE DeviceClassifyInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        interfaces_{visibility, arena},
        device_id_(arena) {}

inline void DeviceClassifyInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, previously_classified_counter_),
           0,
           offsetof(Impl_, provider_matched_count_) -
               offsetof(Impl_, previously_classified_counter_) +
               sizeof(Impl_::provider_matched_count_));
}
DeviceClassifyInfo::~DeviceClassifyInfo() {
  // @@protoc_insertion_point(destructor:kentik.interface.v202108alpha1.DeviceClassifyInfo)
  SharedDtor(*this);
}
inline void DeviceClassifyInfo::SharedDtor(MessageLite& self) {
  DeviceClassifyInfo& this_ = static_cast<DeviceClassifyInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  delete this_._impl_.previously_classified_counter_;
  delete this_._impl_.auto_classified_counter_;
  this_._impl_.~Impl_();
}

inline void* DeviceClassifyInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeviceClassifyInfo(arena);
}
constexpr auto DeviceClassifyInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_.interfaces_) +
          decltype(DeviceClassifyInfo::_impl_.interfaces_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(DeviceClassifyInfo), alignof(DeviceClassifyInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DeviceClassifyInfo::PlacementNew_,
                                 sizeof(DeviceClassifyInfo),
                                 alignof(DeviceClassifyInfo));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeviceClassifyInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeviceClassifyInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeviceClassifyInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeviceClassifyInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeviceClassifyInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeviceClassifyInfo>(), &DeviceClassifyInfo::ByteSizeLong,
            &DeviceClassifyInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_._cached_size_),
        false,
    },
    &DeviceClassifyInfo::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeviceClassifyInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 11, 3, 75, 2> DeviceClassifyInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_._has_bits_),
    0, // no _extensions_
    21, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4292886512,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::DeviceClassifyInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 ip_asn_matched_count = 16 [json_name = "ipAsnMatchedCount"];
    {::_pbi::TcParser::FastV32S2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_.ip_asn_matched_count_)}},
    // string device_id = 1 [json_name = "deviceId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_.device_id_)}},
    // int32 total_interfaces = 2 [json_name = "totalInterfaces"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceClassifyInfo, _impl_.total_interfaces_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_.total_interfaces_)}},
    // .kentik.interface.v202108alpha1.ClassifyCounter previously_classified_counter = 3 [json_name = "previouslyClassifiedCounter"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_.previously_classified_counter_)}},
    // .kentik.interface.v202108alpha1.ClassifyCounter auto_classified_counter = 4 [json_name = "autoClassifiedCounter"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_.auto_classified_counter_)}},
    // repeated .kentik.interface.v202108alpha1.InterfaceClassifyInfo interfaces = 21 [json_name = "interfaces"];
    {::_pbi::TcParser::FastMtR2,
     {426, 63, 2, PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_.interfaces_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int32 changed_classification_count = 15 [json_name = "changedClassificationCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceClassifyInfo, _impl_.changed_classification_count_), 63>(),
     {120, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_.changed_classification_count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1 [json_name = "deviceId"];
    {PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_.device_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 total_interfaces = 2 [json_name = "totalInterfaces"];
    {PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_.total_interfaces_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .kentik.interface.v202108alpha1.ClassifyCounter previously_classified_counter = 3 [json_name = "previouslyClassifiedCounter"];
    {PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_.previously_classified_counter_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.interface.v202108alpha1.ClassifyCounter auto_classified_counter = 4 [json_name = "autoClassifiedCounter"];
    {PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_.auto_classified_counter_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 changed_classification_count = 15 [json_name = "changedClassificationCount"];
    {PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_.changed_classification_count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 ip_asn_matched_count = 16 [json_name = "ipAsnMatchedCount"];
    {PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_.ip_asn_matched_count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 ix_matched_count = 17 [json_name = "ixMatchedCount"];
    {PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_.ix_matched_count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 nexthop_matched_count = 18 [json_name = "nexthopMatchedCount"];
    {PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_.nexthop_matched_count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 connectivity_type_matched_count = 19 [json_name = "connectivityTypeMatchedCount"];
    {PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_.connectivity_type_matched_count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 provider_matched_count = 20 [json_name = "providerMatchedCount"];
    {PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_.provider_matched_count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .kentik.interface.v202108alpha1.InterfaceClassifyInfo interfaces = 21 [json_name = "interfaces"];
    {PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_.interfaces_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::ClassifyCounter>()},
    {::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::ClassifyCounter>()},
    {::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::InterfaceClassifyInfo>()},
  }}, {{
    "\61\11\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "kentik.interface.v202108alpha1.DeviceClassifyInfo"
    "device_id"
  }},
};

PROTOBUF_NOINLINE void DeviceClassifyInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.interface.v202108alpha1.DeviceClassifyInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.interfaces_.Clear();
  _impl_.device_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.previously_classified_counter_ != nullptr);
      _impl_.previously_classified_counter_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.auto_classified_counter_ != nullptr);
      _impl_.auto_classified_counter_->Clear();
    }
  }
  ::memset(&_impl_.total_interfaces_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.provider_matched_count_) -
      reinterpret_cast<char*>(&_impl_.total_interfaces_)) + sizeof(_impl_.provider_matched_count_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeviceClassifyInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeviceClassifyInfo& this_ = static_cast<const DeviceClassifyInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeviceClassifyInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeviceClassifyInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.interface.v202108alpha1.DeviceClassifyInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string device_id = 1 [json_name = "deviceId"];
          if (!this_._internal_device_id().empty()) {
            const std::string& _s = this_._internal_device_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.DeviceClassifyInfo.device_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 total_interfaces = 2 [json_name = "totalInterfaces"];
          if (this_._internal_total_interfaces() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_total_interfaces(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.interface.v202108alpha1.ClassifyCounter previously_classified_counter = 3 [json_name = "previouslyClassifiedCounter"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.previously_classified_counter_, this_._impl_.previously_classified_counter_->GetCachedSize(), target,
                stream);
          }

          // .kentik.interface.v202108alpha1.ClassifyCounter auto_classified_counter = 4 [json_name = "autoClassifiedCounter"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.auto_classified_counter_, this_._impl_.auto_classified_counter_->GetCachedSize(), target,
                stream);
          }

          // int32 changed_classification_count = 15 [json_name = "changedClassificationCount"];
          if (this_._internal_changed_classification_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<15>(
                    stream, this_._internal_changed_classification_count(), target);
          }

          // int32 ip_asn_matched_count = 16 [json_name = "ipAsnMatchedCount"];
          if (this_._internal_ip_asn_matched_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                16, this_._internal_ip_asn_matched_count(), target);
          }

          // int32 ix_matched_count = 17 [json_name = "ixMatchedCount"];
          if (this_._internal_ix_matched_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                17, this_._internal_ix_matched_count(), target);
          }

          // int32 nexthop_matched_count = 18 [json_name = "nexthopMatchedCount"];
          if (this_._internal_nexthop_matched_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                18, this_._internal_nexthop_matched_count(), target);
          }

          // int32 connectivity_type_matched_count = 19 [json_name = "connectivityTypeMatchedCount"];
          if (this_._internal_connectivity_type_matched_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                19, this_._internal_connectivity_type_matched_count(), target);
          }

          // int32 provider_matched_count = 20 [json_name = "providerMatchedCount"];
          if (this_._internal_provider_matched_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                20, this_._internal_provider_matched_count(), target);
          }

          // repeated .kentik.interface.v202108alpha1.InterfaceClassifyInfo interfaces = 21 [json_name = "interfaces"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_interfaces_size());
               i < n; i++) {
            const auto& repfield = this_._internal_interfaces().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    21, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.interface.v202108alpha1.DeviceClassifyInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeviceClassifyInfo::ByteSizeLong(const MessageLite& base) {
          const DeviceClassifyInfo& this_ = static_cast<const DeviceClassifyInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeviceClassifyInfo::ByteSizeLong() const {
          const DeviceClassifyInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.interface.v202108alpha1.DeviceClassifyInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.interface.v202108alpha1.InterfaceClassifyInfo interfaces = 21 [json_name = "interfaces"];
            {
              total_size += 2UL * this_._internal_interfaces_size();
              for (const auto& msg : this_._internal_interfaces()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string device_id = 1 [json_name = "deviceId"];
            if (!this_._internal_device_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_id());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .kentik.interface.v202108alpha1.ClassifyCounter previously_classified_counter = 3 [json_name = "previouslyClassifiedCounter"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.previously_classified_counter_);
            }
            // .kentik.interface.v202108alpha1.ClassifyCounter auto_classified_counter = 4 [json_name = "autoClassifiedCounter"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.auto_classified_counter_);
            }
          }
           {
            // int32 total_interfaces = 2 [json_name = "totalInterfaces"];
            if (this_._internal_total_interfaces() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_total_interfaces());
            }
            // int32 changed_classification_count = 15 [json_name = "changedClassificationCount"];
            if (this_._internal_changed_classification_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_changed_classification_count());
            }
            // int32 ip_asn_matched_count = 16 [json_name = "ipAsnMatchedCount"];
            if (this_._internal_ip_asn_matched_count() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_ip_asn_matched_count());
            }
            // int32 ix_matched_count = 17 [json_name = "ixMatchedCount"];
            if (this_._internal_ix_matched_count() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_ix_matched_count());
            }
            // int32 nexthop_matched_count = 18 [json_name = "nexthopMatchedCount"];
            if (this_._internal_nexthop_matched_count() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_nexthop_matched_count());
            }
            // int32 connectivity_type_matched_count = 19 [json_name = "connectivityTypeMatchedCount"];
            if (this_._internal_connectivity_type_matched_count() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_connectivity_type_matched_count());
            }
            // int32 provider_matched_count = 20 [json_name = "providerMatchedCount"];
            if (this_._internal_provider_matched_count() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_provider_matched_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeviceClassifyInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceClassifyInfo*>(&to_msg);
  auto& from = static_cast<const DeviceClassifyInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.interface.v202108alpha1.DeviceClassifyInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_interfaces()->MergeFrom(
      from._internal_interfaces());
  if (!from._internal_device_id().empty()) {
    _this->_internal_set_device_id(from._internal_device_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.previously_classified_counter_ != nullptr);
      if (_this->_impl_.previously_classified_counter_ == nullptr) {
        _this->_impl_.previously_classified_counter_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::ClassifyCounter>(arena, *from._impl_.previously_classified_counter_);
      } else {
        _this->_impl_.previously_classified_counter_->MergeFrom(*from._impl_.previously_classified_counter_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.auto_classified_counter_ != nullptr);
      if (_this->_impl_.auto_classified_counter_ == nullptr) {
        _this->_impl_.auto_classified_counter_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::ClassifyCounter>(arena, *from._impl_.auto_classified_counter_);
      } else {
        _this->_impl_.auto_classified_counter_->MergeFrom(*from._impl_.auto_classified_counter_);
      }
    }
  }
  if (from._internal_total_interfaces() != 0) {
    _this->_impl_.total_interfaces_ = from._impl_.total_interfaces_;
  }
  if (from._internal_changed_classification_count() != 0) {
    _this->_impl_.changed_classification_count_ = from._impl_.changed_classification_count_;
  }
  if (from._internal_ip_asn_matched_count() != 0) {
    _this->_impl_.ip_asn_matched_count_ = from._impl_.ip_asn_matched_count_;
  }
  if (from._internal_ix_matched_count() != 0) {
    _this->_impl_.ix_matched_count_ = from._impl_.ix_matched_count_;
  }
  if (from._internal_nexthop_matched_count() != 0) {
    _this->_impl_.nexthop_matched_count_ = from._impl_.nexthop_matched_count_;
  }
  if (from._internal_connectivity_type_matched_count() != 0) {
    _this->_impl_.connectivity_type_matched_count_ = from._impl_.connectivity_type_matched_count_;
  }
  if (from._internal_provider_matched_count() != 0) {
    _this->_impl_.provider_matched_count_ = from._impl_.provider_matched_count_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceClassifyInfo::CopyFrom(const DeviceClassifyInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.interface.v202108alpha1.DeviceClassifyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceClassifyInfo::InternalSwap(DeviceClassifyInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.interfaces_.InternalSwap(&other->_impl_.interfaces_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_.provider_matched_count_)
      + sizeof(DeviceClassifyInfo::_impl_.provider_matched_count_)
      - PROTOBUF_FIELD_OFFSET(DeviceClassifyInfo, _impl_.previously_classified_counter_)>(
          reinterpret_cast<char*>(&_impl_.previously_classified_counter_),
          reinterpret_cast<char*>(&other->_impl_.previously_classified_counter_));
}

::google::protobuf::Metadata DeviceClassifyInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InterfaceFilter::_Internal {
 public:
};

InterfaceFilter::InterfaceFilter(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.InterfaceFilter)
}
inline PROTOBUF_NDEBUG_INLINE InterfaceFilter::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::interface::v202108alpha1::InterfaceFilter& from_msg)
      : device_ids_{visibility, arena, from.device_ids_},
        connectivity_types_{visibility, arena, from.connectivity_types_},
        _connectivity_types_cached_byte_size_{0},
        network_boundaries_{visibility, arena, from.network_boundaries_},
        _network_boundaries_cached_byte_size_{0},
        providers_{visibility, arena, from.providers_},
        snmp_speeds_{visibility, arena, from.snmp_speeds_},
        _snmp_speeds_cached_byte_size_{0},
        ip_types_{visibility, arena, from.ip_types_},
        _ip_types_cached_byte_size_{0},
        text_(arena, from.text_),
        _cached_size_{0} {}

InterfaceFilter::InterfaceFilter(
    ::google::protobuf::Arena* arena,
    const InterfaceFilter& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InterfaceFilter* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.interface.v202108alpha1.InterfaceFilter)
}
inline PROTOBUF_NDEBUG_INLINE InterfaceFilter::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_ids_{visibility, arena},
        connectivity_types_{visibility, arena},
        _connectivity_types_cached_byte_size_{0},
        network_boundaries_{visibility, arena},
        _network_boundaries_cached_byte_size_{0},
        providers_{visibility, arena},
        snmp_speeds_{visibility, arena},
        _snmp_speeds_cached_byte_size_{0},
        ip_types_{visibility, arena},
        _ip_types_cached_byte_size_{0},
        text_(arena),
        _cached_size_{0} {}

inline void InterfaceFilter::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
InterfaceFilter::~InterfaceFilter() {
  // @@protoc_insertion_point(destructor:kentik.interface.v202108alpha1.InterfaceFilter)
  SharedDtor(*this);
}
inline void InterfaceFilter::SharedDtor(MessageLite& self) {
  InterfaceFilter& this_ = static_cast<InterfaceFilter&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.text_.Destroy();
  this_._impl_.~Impl_();
}

inline void* InterfaceFilter::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InterfaceFilter(arena);
}
constexpr auto InterfaceFilter::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(InterfaceFilter, _impl_.device_ids_) +
          decltype(InterfaceFilter::_impl_.device_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(InterfaceFilter, _impl_.connectivity_types_) +
          decltype(InterfaceFilter::_impl_.connectivity_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(InterfaceFilter, _impl_.network_boundaries_) +
          decltype(InterfaceFilter::_impl_.network_boundaries_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(InterfaceFilter, _impl_.providers_) +
          decltype(InterfaceFilter::_impl_.providers_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(InterfaceFilter, _impl_.snmp_speeds_) +
          decltype(InterfaceFilter::_impl_.snmp_speeds_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(InterfaceFilter, _impl_.ip_types_) +
          decltype(InterfaceFilter::_impl_.ip_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(InterfaceFilter), alignof(InterfaceFilter), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&InterfaceFilter::PlacementNew_,
                                 sizeof(InterfaceFilter),
                                 alignof(InterfaceFilter));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InterfaceFilter::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InterfaceFilter_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &InterfaceFilter::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InterfaceFilter>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InterfaceFilter::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InterfaceFilter>(), &InterfaceFilter::ByteSizeLong,
            &InterfaceFilter::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InterfaceFilter, _impl_._cached_size_),
        false,
    },
    &InterfaceFilter::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InterfaceFilter::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 78, 2> InterfaceFilter::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::InterfaceFilter>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string text = 1 [json_name = "text"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceFilter, _impl_.text_)}},
    // repeated string device_ids = 2 [json_name = "deviceIds"];
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceFilter, _impl_.device_ids_)}},
    // repeated .kentik.interface.v202108alpha1.ConnectivityType connectivity_types = 3 [json_name = "connectivityTypes"];
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceFilter, _impl_.connectivity_types_)}},
    // repeated .kentik.interface.v202108alpha1.NetworkBoundary network_boundaries = 4 [json_name = "networkBoundaries"];
    {::_pbi::TcParser::FastV32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceFilter, _impl_.network_boundaries_)}},
    // repeated string providers = 5 [json_name = "providers"];
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceFilter, _impl_.providers_)}},
    // repeated int32 snmp_speeds = 6 [json_name = "snmpSpeeds"];
    {::_pbi::TcParser::FastV32P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceFilter, _impl_.snmp_speeds_)}},
    // repeated .kentik.interface.v202108alpha1.IpFilter ip_types = 7 [json_name = "ipTypes"];
    {::_pbi::TcParser::FastV32P1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(InterfaceFilter, _impl_.ip_types_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string text = 1 [json_name = "text"];
    {PROTOBUF_FIELD_OFFSET(InterfaceFilter, _impl_.text_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string device_ids = 2 [json_name = "deviceIds"];
    {PROTOBUF_FIELD_OFFSET(InterfaceFilter, _impl_.device_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .kentik.interface.v202108alpha1.ConnectivityType connectivity_types = 3 [json_name = "connectivityTypes"];
    {PROTOBUF_FIELD_OFFSET(InterfaceFilter, _impl_.connectivity_types_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated .kentik.interface.v202108alpha1.NetworkBoundary network_boundaries = 4 [json_name = "networkBoundaries"];
    {PROTOBUF_FIELD_OFFSET(InterfaceFilter, _impl_.network_boundaries_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated string providers = 5 [json_name = "providers"];
    {PROTOBUF_FIELD_OFFSET(InterfaceFilter, _impl_.providers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated int32 snmp_speeds = 6 [json_name = "snmpSpeeds"];
    {PROTOBUF_FIELD_OFFSET(InterfaceFilter, _impl_.snmp_speeds_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated .kentik.interface.v202108alpha1.IpFilter ip_types = 7 [json_name = "ipTypes"];
    {PROTOBUF_FIELD_OFFSET(InterfaceFilter, _impl_.ip_types_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
    "\56\4\12\0\0\11\0\0"
    "kentik.interface.v202108alpha1.InterfaceFilter"
    "text"
    "device_ids"
    "providers"
  }},
};

PROTOBUF_NOINLINE void InterfaceFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.interface.v202108alpha1.InterfaceFilter)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_ids_.Clear();
  _impl_.connectivity_types_.Clear();
  _impl_.network_boundaries_.Clear();
  _impl_.providers_.Clear();
  _impl_.snmp_speeds_.Clear();
  _impl_.ip_types_.Clear();
  _impl_.text_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InterfaceFilter::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InterfaceFilter& this_ = static_cast<const InterfaceFilter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InterfaceFilter::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InterfaceFilter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.interface.v202108alpha1.InterfaceFilter)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string text = 1 [json_name = "text"];
          if (!this_._internal_text().empty()) {
            const std::string& _s = this_._internal_text();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.InterfaceFilter.text");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated string device_ids = 2 [json_name = "deviceIds"];
          for (int i = 0, n = this_._internal_device_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_device_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.InterfaceFilter.device_ids");
            target = stream->WriteString(2, s, target);
          }

          // repeated .kentik.interface.v202108alpha1.ConnectivityType connectivity_types = 3 [json_name = "connectivityTypes"];
          {
            std::size_t byte_size =
                                              this_._impl_._connectivity_types_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteEnumPacked(
                  3, this_._internal_connectivity_types(), byte_size, target);
            }
          }

          // repeated .kentik.interface.v202108alpha1.NetworkBoundary network_boundaries = 4 [json_name = "networkBoundaries"];
          {
            std::size_t byte_size =
                                              this_._impl_._network_boundaries_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteEnumPacked(
                  4, this_._internal_network_boundaries(), byte_size, target);
            }
          }

          // repeated string providers = 5 [json_name = "providers"];
          for (int i = 0, n = this_._internal_providers_size(); i < n; ++i) {
            const auto& s = this_._internal_providers().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.InterfaceFilter.providers");
            target = stream->WriteString(5, s, target);
          }

          // repeated int32 snmp_speeds = 6 [json_name = "snmpSpeeds"];
          {
            int byte_size = this_._impl_._snmp_speeds_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt32Packed(
                  6, this_._internal_snmp_speeds(), byte_size, target);
            }
          }

          // repeated .kentik.interface.v202108alpha1.IpFilter ip_types = 7 [json_name = "ipTypes"];
          {
            std::size_t byte_size =
                                              this_._impl_._ip_types_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteEnumPacked(
                  7, this_._internal_ip_types(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.interface.v202108alpha1.InterfaceFilter)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InterfaceFilter::ByteSizeLong(const MessageLite& base) {
          const InterfaceFilter& this_ = static_cast<const InterfaceFilter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InterfaceFilter::ByteSizeLong() const {
          const InterfaceFilter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.interface.v202108alpha1.InterfaceFilter)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string device_ids = 2 [json_name = "deviceIds"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_device_ids().size());
              for (int i = 0, n = this_._internal_device_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_device_ids().Get(i));
              }
            }
            // repeated .kentik.interface.v202108alpha1.ConnectivityType connectivity_types = 3 [json_name = "connectivityTypes"];
            {
              total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
                  this_._internal_connectivity_types(), 1, this_._impl_._connectivity_types_cached_byte_size_);
            }
            // repeated .kentik.interface.v202108alpha1.NetworkBoundary network_boundaries = 4 [json_name = "networkBoundaries"];
            {
              total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
                  this_._internal_network_boundaries(), 1, this_._impl_._network_boundaries_cached_byte_size_);
            }
            // repeated string providers = 5 [json_name = "providers"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_providers().size());
              for (int i = 0, n = this_._internal_providers().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_providers().Get(i));
              }
            }
            // repeated int32 snmp_speeds = 6 [json_name = "snmpSpeeds"];
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
                      this_._internal_snmp_speeds(), 1,
                      this_._impl_._snmp_speeds_cached_byte_size_);
            }
            // repeated .kentik.interface.v202108alpha1.IpFilter ip_types = 7 [json_name = "ipTypes"];
            {
              total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
                  this_._internal_ip_types(), 1, this_._impl_._ip_types_cached_byte_size_);
            }
          }
           {
            // string text = 1 [json_name = "text"];
            if (!this_._internal_text().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_text());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InterfaceFilter::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InterfaceFilter*>(&to_msg);
  auto& from = static_cast<const InterfaceFilter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.interface.v202108alpha1.InterfaceFilter)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_device_ids()->MergeFrom(from._internal_device_ids());
  _this->_internal_mutable_connectivity_types()->MergeFrom(from._internal_connectivity_types());
  _this->_internal_mutable_network_boundaries()->MergeFrom(from._internal_network_boundaries());
  _this->_internal_mutable_providers()->MergeFrom(from._internal_providers());
  _this->_internal_mutable_snmp_speeds()->MergeFrom(from._internal_snmp_speeds());
  _this->_internal_mutable_ip_types()->MergeFrom(from._internal_ip_types());
  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InterfaceFilter::CopyFrom(const InterfaceFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.interface.v202108alpha1.InterfaceFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InterfaceFilter::InternalSwap(InterfaceFilter* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.device_ids_.InternalSwap(&other->_impl_.device_ids_);
  _impl_.connectivity_types_.InternalSwap(&other->_impl_.connectivity_types_);
  _impl_.network_boundaries_.InternalSwap(&other->_impl_.network_boundaries_);
  _impl_.providers_.InternalSwap(&other->_impl_.providers_);
  _impl_.snmp_speeds_.InternalSwap(&other->_impl_.snmp_speeds_);
  _impl_.ip_types_.InternalSwap(&other->_impl_.ip_types_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
}

::google::protobuf::Metadata InterfaceFilter::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AutoClassifyRequest::_Internal {
 public:
};

AutoClassifyRequest::AutoClassifyRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.AutoClassifyRequest)
}
AutoClassifyRequest::AutoClassifyRequest(
    ::google::protobuf::Arena* arena,
    const AutoClassifyRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AutoClassifyRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:kentik.interface.v202108alpha1.AutoClassifyRequest)
}

inline void* AutoClassifyRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AutoClassifyRequest(arena);
}
constexpr auto AutoClassifyRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AutoClassifyRequest),
                                            alignof(AutoClassifyRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AutoClassifyRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AutoClassifyRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AutoClassifyRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<AutoClassifyRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AutoClassifyRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<AutoClassifyRequest>(), &AutoClassifyRequest::ByteSizeLong,
            &AutoClassifyRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AutoClassifyRequest, _impl_._cached_size_),
        false,
    },
    &AutoClassifyRequest::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AutoClassifyRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> AutoClassifyRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::AutoClassifyRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata AutoClassifyRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AutoClassifyResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AutoClassifyResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_._has_bits_);
};

AutoClassifyResponse::AutoClassifyResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.AutoClassifyResponse)
}
inline PROTOBUF_NDEBUG_INLINE AutoClassifyResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::interface::v202108alpha1::AutoClassifyResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        devices_{visibility, arena, from.devices_} {}

AutoClassifyResponse::AutoClassifyResponse(
    ::google::protobuf::Arena* arena,
    const AutoClassifyResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AutoClassifyResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.total_auto_classify_counter_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::ClassifyCounter>(
                              arena, *from._impl_.total_auto_classify_counter_)
                        : nullptr;
  _impl_.total_previous_counter_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::ClassifyCounter>(
                              arena, *from._impl_.total_previous_counter_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, perc_auto_classified_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, perc_auto_classified_),
           offsetof(Impl_, total_interfaces_) -
               offsetof(Impl_, perc_auto_classified_) +
               sizeof(Impl_::total_interfaces_));

  // @@protoc_insertion_point(copy_constructor:kentik.interface.v202108alpha1.AutoClassifyResponse)
}
inline PROTOBUF_NDEBUG_INLINE AutoClassifyResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        devices_{visibility, arena} {}

inline void AutoClassifyResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_auto_classify_counter_),
           0,
           offsetof(Impl_, total_interfaces_) -
               offsetof(Impl_, total_auto_classify_counter_) +
               sizeof(Impl_::total_interfaces_));
}
AutoClassifyResponse::~AutoClassifyResponse() {
  // @@protoc_insertion_point(destructor:kentik.interface.v202108alpha1.AutoClassifyResponse)
  SharedDtor(*this);
}
inline void AutoClassifyResponse::SharedDtor(MessageLite& self) {
  AutoClassifyResponse& this_ = static_cast<AutoClassifyResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.total_auto_classify_counter_;
  delete this_._impl_.total_previous_counter_;
  this_._impl_.~Impl_();
}

inline void* AutoClassifyResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AutoClassifyResponse(arena);
}
constexpr auto AutoClassifyResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_.devices_) +
          decltype(AutoClassifyResponse::_impl_.devices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(AutoClassifyResponse), alignof(AutoClassifyResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AutoClassifyResponse::PlacementNew_,
                                 sizeof(AutoClassifyResponse),
                                 alignof(AutoClassifyResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AutoClassifyResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AutoClassifyResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AutoClassifyResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AutoClassifyResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AutoClassifyResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AutoClassifyResponse>(), &AutoClassifyResponse::ByteSizeLong,
            &AutoClassifyResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_._cached_size_),
        false,
    },
    &AutoClassifyResponse::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AutoClassifyResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 10, 3, 0, 2> AutoClassifyResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_._has_bits_),
    0, // no _extensions_
    18, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294770432,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::AutoClassifyResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.interface.v202108alpha1.ClassifyCounter total_previous_counter = 8 [json_name = "totalPreviousCounter"];
    {::_pbi::TcParser::FastMtS1,
     {66, 1, 1, PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_.total_previous_counter_)}},
    // double perc_auto_classified = 1 [json_name = "percAutoClassified"];
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_.perc_auto_classified_)}},
    // int32 net_changed_transit = 2 [json_name = "netChangedTransit"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AutoClassifyResponse, _impl_.net_changed_transit_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_.net_changed_transit_)}},
    // int32 net_changed_ix = 3 [json_name = "netChangedIx"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AutoClassifyResponse, _impl_.net_changed_ix_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_.net_changed_ix_)}},
    // int32 net_changed_provider = 4 [json_name = "netChangedProvider"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AutoClassifyResponse, _impl_.net_changed_provider_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_.net_changed_provider_)}},
    // int32 total_changed_classification_count = 5 [json_name = "totalChangedClassificationCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AutoClassifyResponse, _impl_.total_changed_classification_count_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_.total_changed_classification_count_)}},
    // int32 total_auto_classify_count = 6 [json_name = "totalAutoClassifyCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AutoClassifyResponse, _impl_.total_auto_classify_count_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_.total_auto_classify_count_)}},
    // .kentik.interface.v202108alpha1.ClassifyCounter total_auto_classify_counter = 7 [json_name = "totalAutoClassifyCounter"];
    {::_pbi::TcParser::FastMtS1,
     {58, 0, 0, PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_.total_auto_classify_counter_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double perc_auto_classified = 1 [json_name = "percAutoClassified"];
    {PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_.perc_auto_classified_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // int32 net_changed_transit = 2 [json_name = "netChangedTransit"];
    {PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_.net_changed_transit_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 net_changed_ix = 3 [json_name = "netChangedIx"];
    {PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_.net_changed_ix_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 net_changed_provider = 4 [json_name = "netChangedProvider"];
    {PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_.net_changed_provider_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 total_changed_classification_count = 5 [json_name = "totalChangedClassificationCount"];
    {PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_.total_changed_classification_count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 total_auto_classify_count = 6 [json_name = "totalAutoClassifyCount"];
    {PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_.total_auto_classify_count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .kentik.interface.v202108alpha1.ClassifyCounter total_auto_classify_counter = 7 [json_name = "totalAutoClassifyCounter"];
    {PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_.total_auto_classify_counter_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.interface.v202108alpha1.ClassifyCounter total_previous_counter = 8 [json_name = "totalPreviousCounter"];
    {PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_.total_previous_counter_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 total_interfaces = 17 [json_name = "totalInterfaces"];
    {PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_.total_interfaces_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .kentik.interface.v202108alpha1.DeviceClassifyInfo devices = 18 [json_name = "devices"];
    {PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_.devices_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::ClassifyCounter>()},
    {::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::ClassifyCounter>()},
    {::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::DeviceClassifyInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AutoClassifyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.interface.v202108alpha1.AutoClassifyResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.devices_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.total_auto_classify_counter_ != nullptr);
      _impl_.total_auto_classify_counter_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.total_previous_counter_ != nullptr);
      _impl_.total_previous_counter_->Clear();
    }
  }
  ::memset(&_impl_.perc_auto_classified_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.total_interfaces_) -
      reinterpret_cast<char*>(&_impl_.perc_auto_classified_)) + sizeof(_impl_.total_interfaces_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AutoClassifyResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AutoClassifyResponse& this_ = static_cast<const AutoClassifyResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AutoClassifyResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AutoClassifyResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.interface.v202108alpha1.AutoClassifyResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double perc_auto_classified = 1 [json_name = "percAutoClassified"];
          if (::absl::bit_cast<::uint64_t>(this_._internal_perc_auto_classified()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_perc_auto_classified(), target);
          }

          // int32 net_changed_transit = 2 [json_name = "netChangedTransit"];
          if (this_._internal_net_changed_transit() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_net_changed_transit(), target);
          }

          // int32 net_changed_ix = 3 [json_name = "netChangedIx"];
          if (this_._internal_net_changed_ix() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_net_changed_ix(), target);
          }

          // int32 net_changed_provider = 4 [json_name = "netChangedProvider"];
          if (this_._internal_net_changed_provider() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_net_changed_provider(), target);
          }

          // int32 total_changed_classification_count = 5 [json_name = "totalChangedClassificationCount"];
          if (this_._internal_total_changed_classification_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_total_changed_classification_count(), target);
          }

          // int32 total_auto_classify_count = 6 [json_name = "totalAutoClassifyCount"];
          if (this_._internal_total_auto_classify_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_total_auto_classify_count(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.interface.v202108alpha1.ClassifyCounter total_auto_classify_counter = 7 [json_name = "totalAutoClassifyCounter"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.total_auto_classify_counter_, this_._impl_.total_auto_classify_counter_->GetCachedSize(), target,
                stream);
          }

          // .kentik.interface.v202108alpha1.ClassifyCounter total_previous_counter = 8 [json_name = "totalPreviousCounter"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.total_previous_counter_, this_._impl_.total_previous_counter_->GetCachedSize(), target,
                stream);
          }

          // int32 total_interfaces = 17 [json_name = "totalInterfaces"];
          if (this_._internal_total_interfaces() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                17, this_._internal_total_interfaces(), target);
          }

          // repeated .kentik.interface.v202108alpha1.DeviceClassifyInfo devices = 18 [json_name = "devices"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_devices_size());
               i < n; i++) {
            const auto& repfield = this_._internal_devices().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    18, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.interface.v202108alpha1.AutoClassifyResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AutoClassifyResponse::ByteSizeLong(const MessageLite& base) {
          const AutoClassifyResponse& this_ = static_cast<const AutoClassifyResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AutoClassifyResponse::ByteSizeLong() const {
          const AutoClassifyResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.interface.v202108alpha1.AutoClassifyResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.interface.v202108alpha1.DeviceClassifyInfo devices = 18 [json_name = "devices"];
            {
              total_size += 2UL * this_._internal_devices_size();
              for (const auto& msg : this_._internal_devices()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .kentik.interface.v202108alpha1.ClassifyCounter total_auto_classify_counter = 7 [json_name = "totalAutoClassifyCounter"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.total_auto_classify_counter_);
            }
            // .kentik.interface.v202108alpha1.ClassifyCounter total_previous_counter = 8 [json_name = "totalPreviousCounter"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.total_previous_counter_);
            }
          }
           {
            // double perc_auto_classified = 1 [json_name = "percAutoClassified"];
            if (::absl::bit_cast<::uint64_t>(this_._internal_perc_auto_classified()) != 0) {
              total_size += 9;
            }
            // int32 net_changed_transit = 2 [json_name = "netChangedTransit"];
            if (this_._internal_net_changed_transit() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_net_changed_transit());
            }
            // int32 net_changed_ix = 3 [json_name = "netChangedIx"];
            if (this_._internal_net_changed_ix() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_net_changed_ix());
            }
            // int32 net_changed_provider = 4 [json_name = "netChangedProvider"];
            if (this_._internal_net_changed_provider() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_net_changed_provider());
            }
            // int32 total_changed_classification_count = 5 [json_name = "totalChangedClassificationCount"];
            if (this_._internal_total_changed_classification_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_total_changed_classification_count());
            }
            // int32 total_auto_classify_count = 6 [json_name = "totalAutoClassifyCount"];
            if (this_._internal_total_auto_classify_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_total_auto_classify_count());
            }
            // int32 total_interfaces = 17 [json_name = "totalInterfaces"];
            if (this_._internal_total_interfaces() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_total_interfaces());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AutoClassifyResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AutoClassifyResponse*>(&to_msg);
  auto& from = static_cast<const AutoClassifyResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.interface.v202108alpha1.AutoClassifyResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_devices()->MergeFrom(
      from._internal_devices());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.total_auto_classify_counter_ != nullptr);
      if (_this->_impl_.total_auto_classify_counter_ == nullptr) {
        _this->_impl_.total_auto_classify_counter_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::ClassifyCounter>(arena, *from._impl_.total_auto_classify_counter_);
      } else {
        _this->_impl_.total_auto_classify_counter_->MergeFrom(*from._impl_.total_auto_classify_counter_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.total_previous_counter_ != nullptr);
      if (_this->_impl_.total_previous_counter_ == nullptr) {
        _this->_impl_.total_previous_counter_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::ClassifyCounter>(arena, *from._impl_.total_previous_counter_);
      } else {
        _this->_impl_.total_previous_counter_->MergeFrom(*from._impl_.total_previous_counter_);
      }
    }
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_perc_auto_classified()) != 0) {
    _this->_impl_.perc_auto_classified_ = from._impl_.perc_auto_classified_;
  }
  if (from._internal_net_changed_transit() != 0) {
    _this->_impl_.net_changed_transit_ = from._impl_.net_changed_transit_;
  }
  if (from._internal_net_changed_ix() != 0) {
    _this->_impl_.net_changed_ix_ = from._impl_.net_changed_ix_;
  }
  if (from._internal_net_changed_provider() != 0) {
    _this->_impl_.net_changed_provider_ = from._impl_.net_changed_provider_;
  }
  if (from._internal_total_changed_classification_count() != 0) {
    _this->_impl_.total_changed_classification_count_ = from._impl_.total_changed_classification_count_;
  }
  if (from._internal_total_auto_classify_count() != 0) {
    _this->_impl_.total_auto_classify_count_ = from._impl_.total_auto_classify_count_;
  }
  if (from._internal_total_interfaces() != 0) {
    _this->_impl_.total_interfaces_ = from._impl_.total_interfaces_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AutoClassifyResponse::CopyFrom(const AutoClassifyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.interface.v202108alpha1.AutoClassifyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AutoClassifyResponse::InternalSwap(AutoClassifyResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.devices_.InternalSwap(&other->_impl_.devices_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_.total_interfaces_)
      + sizeof(AutoClassifyResponse::_impl_.total_interfaces_)
      - PROTOBUF_FIELD_OFFSET(AutoClassifyResponse, _impl_.total_auto_classify_counter_)>(
          reinterpret_cast<char*>(&_impl_.total_auto_classify_counter_),
          reinterpret_cast<char*>(&other->_impl_.total_auto_classify_counter_));
}

::google::protobuf::Metadata AutoClassifyResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ManualClassifyRequest::_Internal {
 public:
};

ManualClassifyRequest::ManualClassifyRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.ManualClassifyRequest)
}
inline PROTOBUF_NDEBUG_INLINE ManualClassifyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::interface::v202108alpha1::ManualClassifyRequest& from_msg)
      : interface_ids_{visibility, arena, from.interface_ids_},
        provider_(arena, from.provider_),
        _cached_size_{0} {}

ManualClassifyRequest::ManualClassifyRequest(
    ::google::protobuf::Arena* arena,
    const ManualClassifyRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ManualClassifyRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, connectivity_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, connectivity_type_),
           offsetof(Impl_, network_boundary_) -
               offsetof(Impl_, connectivity_type_) +
               sizeof(Impl_::network_boundary_));

  // @@protoc_insertion_point(copy_constructor:kentik.interface.v202108alpha1.ManualClassifyRequest)
}
inline PROTOBUF_NDEBUG_INLINE ManualClassifyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : interface_ids_{visibility, arena},
        provider_(arena),
        _cached_size_{0} {}

inline void ManualClassifyRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, connectivity_type_),
           0,
           offsetof(Impl_, network_boundary_) -
               offsetof(Impl_, connectivity_type_) +
               sizeof(Impl_::network_boundary_));
}
ManualClassifyRequest::~ManualClassifyRequest() {
  // @@protoc_insertion_point(destructor:kentik.interface.v202108alpha1.ManualClassifyRequest)
  SharedDtor(*this);
}
inline void ManualClassifyRequest::SharedDtor(MessageLite& self) {
  ManualClassifyRequest& this_ = static_cast<ManualClassifyRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.provider_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ManualClassifyRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ManualClassifyRequest(arena);
}
constexpr auto ManualClassifyRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ManualClassifyRequest, _impl_.interface_ids_) +
          decltype(ManualClassifyRequest::_impl_.interface_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ManualClassifyRequest), alignof(ManualClassifyRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ManualClassifyRequest::PlacementNew_,
                                 sizeof(ManualClassifyRequest),
                                 alignof(ManualClassifyRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ManualClassifyRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ManualClassifyRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ManualClassifyRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ManualClassifyRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ManualClassifyRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ManualClassifyRequest>(), &ManualClassifyRequest::ByteSizeLong,
            &ManualClassifyRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ManualClassifyRequest, _impl_._cached_size_),
        false,
    },
    &ManualClassifyRequest::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ManualClassifyRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 82, 2> ManualClassifyRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::ManualClassifyRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string provider = 4 [json_name = "provider"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ManualClassifyRequest, _impl_.provider_)}},
    // repeated string interface_ids = 1 [json_name = "interfaceIds"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ManualClassifyRequest, _impl_.interface_ids_)}},
    // .kentik.interface.v202108alpha1.ConnectivityType connectivity_type = 2 [json_name = "connectivityType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ManualClassifyRequest, _impl_.connectivity_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ManualClassifyRequest, _impl_.connectivity_type_)}},
    // .kentik.interface.v202108alpha1.NetworkBoundary network_boundary = 3 [json_name = "networkBoundary"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ManualClassifyRequest, _impl_.network_boundary_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ManualClassifyRequest, _impl_.network_boundary_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string interface_ids = 1 [json_name = "interfaceIds"];
    {PROTOBUF_FIELD_OFFSET(ManualClassifyRequest, _impl_.interface_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .kentik.interface.v202108alpha1.ConnectivityType connectivity_type = 2 [json_name = "connectivityType"];
    {PROTOBUF_FIELD_OFFSET(ManualClassifyRequest, _impl_.connectivity_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .kentik.interface.v202108alpha1.NetworkBoundary network_boundary = 3 [json_name = "networkBoundary"];
    {PROTOBUF_FIELD_OFFSET(ManualClassifyRequest, _impl_.network_boundary_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string provider = 4 [json_name = "provider"];
    {PROTOBUF_FIELD_OFFSET(ManualClassifyRequest, _impl_.provider_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\64\15\0\0\10\0\0\0"
    "kentik.interface.v202108alpha1.ManualClassifyRequest"
    "interface_ids"
    "provider"
  }},
};

PROTOBUF_NOINLINE void ManualClassifyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.interface.v202108alpha1.ManualClassifyRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.interface_ids_.Clear();
  _impl_.provider_.ClearToEmpty();
  ::memset(&_impl_.connectivity_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.network_boundary_) -
      reinterpret_cast<char*>(&_impl_.connectivity_type_)) + sizeof(_impl_.network_boundary_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ManualClassifyRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ManualClassifyRequest& this_ = static_cast<const ManualClassifyRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ManualClassifyRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ManualClassifyRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.interface.v202108alpha1.ManualClassifyRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string interface_ids = 1 [json_name = "interfaceIds"];
          for (int i = 0, n = this_._internal_interface_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_interface_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.ManualClassifyRequest.interface_ids");
            target = stream->WriteString(1, s, target);
          }

          // .kentik.interface.v202108alpha1.ConnectivityType connectivity_type = 2 [json_name = "connectivityType"];
          if (this_._internal_connectivity_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_connectivity_type(), target);
          }

          // .kentik.interface.v202108alpha1.NetworkBoundary network_boundary = 3 [json_name = "networkBoundary"];
          if (this_._internal_network_boundary() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_network_boundary(), target);
          }

          // string provider = 4 [json_name = "provider"];
          if (!this_._internal_provider().empty()) {
            const std::string& _s = this_._internal_provider();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.ManualClassifyRequest.provider");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.interface.v202108alpha1.ManualClassifyRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ManualClassifyRequest::ByteSizeLong(const MessageLite& base) {
          const ManualClassifyRequest& this_ = static_cast<const ManualClassifyRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ManualClassifyRequest::ByteSizeLong() const {
          const ManualClassifyRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.interface.v202108alpha1.ManualClassifyRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string interface_ids = 1 [json_name = "interfaceIds"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_interface_ids().size());
              for (int i = 0, n = this_._internal_interface_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_interface_ids().Get(i));
              }
            }
          }
           {
            // string provider = 4 [json_name = "provider"];
            if (!this_._internal_provider().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_provider());
            }
            // .kentik.interface.v202108alpha1.ConnectivityType connectivity_type = 2 [json_name = "connectivityType"];
            if (this_._internal_connectivity_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_connectivity_type());
            }
            // .kentik.interface.v202108alpha1.NetworkBoundary network_boundary = 3 [json_name = "networkBoundary"];
            if (this_._internal_network_boundary() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_network_boundary());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ManualClassifyRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ManualClassifyRequest*>(&to_msg);
  auto& from = static_cast<const ManualClassifyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.interface.v202108alpha1.ManualClassifyRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_interface_ids()->MergeFrom(from._internal_interface_ids());
  if (!from._internal_provider().empty()) {
    _this->_internal_set_provider(from._internal_provider());
  }
  if (from._internal_connectivity_type() != 0) {
    _this->_impl_.connectivity_type_ = from._impl_.connectivity_type_;
  }
  if (from._internal_network_boundary() != 0) {
    _this->_impl_.network_boundary_ = from._impl_.network_boundary_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ManualClassifyRequest::CopyFrom(const ManualClassifyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.interface.v202108alpha1.ManualClassifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ManualClassifyRequest::InternalSwap(ManualClassifyRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.interface_ids_.InternalSwap(&other->_impl_.interface_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.provider_, &other->_impl_.provider_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ManualClassifyRequest, _impl_.network_boundary_)
      + sizeof(ManualClassifyRequest::_impl_.network_boundary_)
      - PROTOBUF_FIELD_OFFSET(ManualClassifyRequest, _impl_.connectivity_type_)>(
          reinterpret_cast<char*>(&_impl_.connectivity_type_),
          reinterpret_cast<char*>(&other->_impl_.connectivity_type_));
}

::google::protobuf::Metadata ManualClassifyRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ManualClassifyResponse::_Internal {
 public:
};

ManualClassifyResponse::ManualClassifyResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.ManualClassifyResponse)
}
inline PROTOBUF_NDEBUG_INLINE ManualClassifyResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::interface::v202108alpha1::ManualClassifyResponse& from_msg)
      : device_ids_{visibility, arena, from.device_ids_},
        _cached_size_{0} {}

ManualClassifyResponse::ManualClassifyResponse(
    ::google::protobuf::Arena* arena,
    const ManualClassifyResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ManualClassifyResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.interface.v202108alpha1.ManualClassifyResponse)
}
inline PROTOBUF_NDEBUG_INLINE ManualClassifyResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_ids_{visibility, arena},
        _cached_size_{0} {}

inline void ManualClassifyResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ManualClassifyResponse::~ManualClassifyResponse() {
  // @@protoc_insertion_point(destructor:kentik.interface.v202108alpha1.ManualClassifyResponse)
  SharedDtor(*this);
}
inline void ManualClassifyResponse::SharedDtor(MessageLite& self) {
  ManualClassifyResponse& this_ = static_cast<ManualClassifyResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ManualClassifyResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ManualClassifyResponse(arena);
}
constexpr auto ManualClassifyResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ManualClassifyResponse, _impl_.device_ids_) +
          decltype(ManualClassifyResponse::_impl_.device_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ManualClassifyResponse), alignof(ManualClassifyResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ManualClassifyResponse::PlacementNew_,
                                 sizeof(ManualClassifyResponse),
                                 alignof(ManualClassifyResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ManualClassifyResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ManualClassifyResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ManualClassifyResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ManualClassifyResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ManualClassifyResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ManualClassifyResponse>(), &ManualClassifyResponse::ByteSizeLong,
            &ManualClassifyResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ManualClassifyResponse, _impl_._cached_size_),
        false,
    },
    &ManualClassifyResponse::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ManualClassifyResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 72, 2> ManualClassifyResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::ManualClassifyResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string device_ids = 1 [json_name = "deviceIds"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ManualClassifyResponse, _impl_.device_ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string device_ids = 1 [json_name = "deviceIds"];
    {PROTOBUF_FIELD_OFFSET(ManualClassifyResponse, _impl_.device_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\65\12\0\0\0\0\0\0"
    "kentik.interface.v202108alpha1.ManualClassifyResponse"
    "device_ids"
  }},
};

PROTOBUF_NOINLINE void ManualClassifyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.interface.v202108alpha1.ManualClassifyResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_ids_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ManualClassifyResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ManualClassifyResponse& this_ = static_cast<const ManualClassifyResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ManualClassifyResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ManualClassifyResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.interface.v202108alpha1.ManualClassifyResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string device_ids = 1 [json_name = "deviceIds"];
          for (int i = 0, n = this_._internal_device_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_device_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.ManualClassifyResponse.device_ids");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.interface.v202108alpha1.ManualClassifyResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ManualClassifyResponse::ByteSizeLong(const MessageLite& base) {
          const ManualClassifyResponse& this_ = static_cast<const ManualClassifyResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ManualClassifyResponse::ByteSizeLong() const {
          const ManualClassifyResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.interface.v202108alpha1.ManualClassifyResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string device_ids = 1 [json_name = "deviceIds"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_device_ids().size());
              for (int i = 0, n = this_._internal_device_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_device_ids().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ManualClassifyResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ManualClassifyResponse*>(&to_msg);
  auto& from = static_cast<const ManualClassifyResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.interface.v202108alpha1.ManualClassifyResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_device_ids()->MergeFrom(from._internal_device_ids());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ManualClassifyResponse::CopyFrom(const ManualClassifyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.interface.v202108alpha1.ManualClassifyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ManualClassifyResponse::InternalSwap(ManualClassifyResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.device_ids_.InternalSwap(&other->_impl_.device_ids_);
}

::google::protobuf::Metadata ManualClassifyResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListInterfaceRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ListInterfaceRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListInterfaceRequest, _impl_._has_bits_);
};

ListInterfaceRequest::ListInterfaceRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.ListInterfaceRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListInterfaceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::interface::v202108alpha1::ListInterfaceRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ListInterfaceRequest::ListInterfaceRequest(
    ::google::protobuf::Arena* arena,
    const ListInterfaceRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListInterfaceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.filters_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::InterfaceFilter>(
                              arena, *from._impl_.filters_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.interface.v202108alpha1.ListInterfaceRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListInterfaceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ListInterfaceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.filters_ = {};
}
ListInterfaceRequest::~ListInterfaceRequest() {
  // @@protoc_insertion_point(destructor:kentik.interface.v202108alpha1.ListInterfaceRequest)
  SharedDtor(*this);
}
inline void ListInterfaceRequest::SharedDtor(MessageLite& self) {
  ListInterfaceRequest& this_ = static_cast<ListInterfaceRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.filters_;
  this_._impl_.~Impl_();
}

inline void* ListInterfaceRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListInterfaceRequest(arena);
}
constexpr auto ListInterfaceRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ListInterfaceRequest),
                                            alignof(ListInterfaceRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListInterfaceRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListInterfaceRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListInterfaceRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ListInterfaceRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListInterfaceRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ListInterfaceRequest>(), &ListInterfaceRequest::ByteSizeLong,
            &ListInterfaceRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListInterfaceRequest, _impl_._cached_size_),
        false,
    },
    &ListInterfaceRequest::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListInterfaceRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ListInterfaceRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListInterfaceRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::ListInterfaceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.interface.v202108alpha1.InterfaceFilter filters = 1 [json_name = "filters"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ListInterfaceRequest, _impl_.filters_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.interface.v202108alpha1.InterfaceFilter filters = 1 [json_name = "filters"];
    {PROTOBUF_FIELD_OFFSET(ListInterfaceRequest, _impl_.filters_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::InterfaceFilter>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ListInterfaceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.interface.v202108alpha1.ListInterfaceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.filters_ != nullptr);
    _impl_.filters_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ListInterfaceRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ListInterfaceRequest& this_ = static_cast<const ListInterfaceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ListInterfaceRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ListInterfaceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.interface.v202108alpha1.ListInterfaceRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.interface.v202108alpha1.InterfaceFilter filters = 1 [json_name = "filters"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.filters_, this_._impl_.filters_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.interface.v202108alpha1.ListInterfaceRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ListInterfaceRequest::ByteSizeLong(const MessageLite& base) {
          const ListInterfaceRequest& this_ = static_cast<const ListInterfaceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ListInterfaceRequest::ByteSizeLong() const {
          const ListInterfaceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.interface.v202108alpha1.ListInterfaceRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.interface.v202108alpha1.InterfaceFilter filters = 1 [json_name = "filters"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.filters_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ListInterfaceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListInterfaceRequest*>(&to_msg);
  auto& from = static_cast<const ListInterfaceRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.interface.v202108alpha1.ListInterfaceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.filters_ != nullptr);
    if (_this->_impl_.filters_ == nullptr) {
      _this->_impl_.filters_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::InterfaceFilter>(arena, *from._impl_.filters_);
    } else {
      _this->_impl_.filters_->MergeFrom(*from._impl_.filters_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListInterfaceRequest::CopyFrom(const ListInterfaceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.interface.v202108alpha1.ListInterfaceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListInterfaceRequest::InternalSwap(ListInterfaceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.filters_, other->_impl_.filters_);
}

::google::protobuf::Metadata ListInterfaceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListInterfaceResponse::_Internal {
 public:
};

ListInterfaceResponse::ListInterfaceResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.ListInterfaceResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListInterfaceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::interface::v202108alpha1::ListInterfaceResponse& from_msg)
      : interfaces_{visibility, arena, from.interfaces_},
        _cached_size_{0} {}

ListInterfaceResponse::ListInterfaceResponse(
    ::google::protobuf::Arena* arena,
    const ListInterfaceResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListInterfaceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_count_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_count_),
           offsetof(Impl_, invalid_count_) -
               offsetof(Impl_, total_count_) +
               sizeof(Impl_::invalid_count_));

  // @@protoc_insertion_point(copy_constructor:kentik.interface.v202108alpha1.ListInterfaceResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListInterfaceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : interfaces_{visibility, arena},
        _cached_size_{0} {}

inline void ListInterfaceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_count_),
           0,
           offsetof(Impl_, invalid_count_) -
               offsetof(Impl_, total_count_) +
               sizeof(Impl_::invalid_count_));
}
ListInterfaceResponse::~ListInterfaceResponse() {
  // @@protoc_insertion_point(destructor:kentik.interface.v202108alpha1.ListInterfaceResponse)
  SharedDtor(*this);
}
inline void ListInterfaceResponse::SharedDtor(MessageLite& self) {
  ListInterfaceResponse& this_ = static_cast<ListInterfaceResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ListInterfaceResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListInterfaceResponse(arena);
}
constexpr auto ListInterfaceResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListInterfaceResponse, _impl_.interfaces_) +
          decltype(ListInterfaceResponse::_impl_.interfaces_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ListInterfaceResponse), alignof(ListInterfaceResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListInterfaceResponse::PlacementNew_,
                                 sizeof(ListInterfaceResponse),
                                 alignof(ListInterfaceResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListInterfaceResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListInterfaceResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListInterfaceResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ListInterfaceResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListInterfaceResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ListInterfaceResponse>(), &ListInterfaceResponse::ByteSizeLong,
            &ListInterfaceResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListInterfaceResponse, _impl_._cached_size_),
        false,
    },
    &ListInterfaceResponse::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListInterfaceResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> ListInterfaceResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::ListInterfaceResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .kentik.interface.v202108alpha1.Interface interfaces = 1 [json_name = "interfaces"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListInterfaceResponse, _impl_.interfaces_)}},
    // int32 total_count = 2 [json_name = "totalCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListInterfaceResponse, _impl_.total_count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ListInterfaceResponse, _impl_.total_count_)}},
    // int32 invalid_count = 3 [json_name = "invalidCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListInterfaceResponse, _impl_.invalid_count_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ListInterfaceResponse, _impl_.invalid_count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .kentik.interface.v202108alpha1.Interface interfaces = 1 [json_name = "interfaces"];
    {PROTOBUF_FIELD_OFFSET(ListInterfaceResponse, _impl_.interfaces_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 total_count = 2 [json_name = "totalCount"];
    {PROTOBUF_FIELD_OFFSET(ListInterfaceResponse, _impl_.total_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 invalid_count = 3 [json_name = "invalidCount"];
    {PROTOBUF_FIELD_OFFSET(ListInterfaceResponse, _impl_.invalid_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::Interface>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ListInterfaceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.interface.v202108alpha1.ListInterfaceResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.interfaces_.Clear();
  ::memset(&_impl_.total_count_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.invalid_count_) -
      reinterpret_cast<char*>(&_impl_.total_count_)) + sizeof(_impl_.invalid_count_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ListInterfaceResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ListInterfaceResponse& this_ = static_cast<const ListInterfaceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ListInterfaceResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ListInterfaceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.interface.v202108alpha1.ListInterfaceResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .kentik.interface.v202108alpha1.Interface interfaces = 1 [json_name = "interfaces"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_interfaces_size());
               i < n; i++) {
            const auto& repfield = this_._internal_interfaces().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // int32 total_count = 2 [json_name = "totalCount"];
          if (this_._internal_total_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_total_count(), target);
          }

          // int32 invalid_count = 3 [json_name = "invalidCount"];
          if (this_._internal_invalid_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_invalid_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.interface.v202108alpha1.ListInterfaceResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ListInterfaceResponse::ByteSizeLong(const MessageLite& base) {
          const ListInterfaceResponse& this_ = static_cast<const ListInterfaceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ListInterfaceResponse::ByteSizeLong() const {
          const ListInterfaceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.interface.v202108alpha1.ListInterfaceResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.interface.v202108alpha1.Interface interfaces = 1 [json_name = "interfaces"];
            {
              total_size += 1UL * this_._internal_interfaces_size();
              for (const auto& msg : this_._internal_interfaces()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // int32 total_count = 2 [json_name = "totalCount"];
            if (this_._internal_total_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_total_count());
            }
            // int32 invalid_count = 3 [json_name = "invalidCount"];
            if (this_._internal_invalid_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_invalid_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ListInterfaceResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListInterfaceResponse*>(&to_msg);
  auto& from = static_cast<const ListInterfaceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.interface.v202108alpha1.ListInterfaceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_interfaces()->MergeFrom(
      from._internal_interfaces());
  if (from._internal_total_count() != 0) {
    _this->_impl_.total_count_ = from._impl_.total_count_;
  }
  if (from._internal_invalid_count() != 0) {
    _this->_impl_.invalid_count_ = from._impl_.invalid_count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListInterfaceResponse::CopyFrom(const ListInterfaceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.interface.v202108alpha1.ListInterfaceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListInterfaceResponse::InternalSwap(ListInterfaceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.interfaces_.InternalSwap(&other->_impl_.interfaces_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListInterfaceResponse, _impl_.invalid_count_)
      + sizeof(ListInterfaceResponse::_impl_.invalid_count_)
      - PROTOBUF_FIELD_OFFSET(ListInterfaceResponse, _impl_.total_count_)>(
          reinterpret_cast<char*>(&_impl_.total_count_),
          reinterpret_cast<char*>(&other->_impl_.total_count_));
}

::google::protobuf::Metadata ListInterfaceResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetInterfaceRequest::_Internal {
 public:
};

GetInterfaceRequest::GetInterfaceRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.GetInterfaceRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetInterfaceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::interface::v202108alpha1::GetInterfaceRequest& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

GetInterfaceRequest::GetInterfaceRequest(
    ::google::protobuf::Arena* arena,
    const GetInterfaceRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetInterfaceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.interface.v202108alpha1.GetInterfaceRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetInterfaceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void GetInterfaceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetInterfaceRequest::~GetInterfaceRequest() {
  // @@protoc_insertion_point(destructor:kentik.interface.v202108alpha1.GetInterfaceRequest)
  SharedDtor(*this);
}
inline void GetInterfaceRequest::SharedDtor(MessageLite& self) {
  GetInterfaceRequest& this_ = static_cast<GetInterfaceRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetInterfaceRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetInterfaceRequest(arena);
}
constexpr auto GetInterfaceRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetInterfaceRequest),
                                            alignof(GetInterfaceRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetInterfaceRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetInterfaceRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetInterfaceRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetInterfaceRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetInterfaceRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetInterfaceRequest>(), &GetInterfaceRequest::ByteSizeLong,
            &GetInterfaceRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetInterfaceRequest, _impl_._cached_size_),
        false,
    },
    &GetInterfaceRequest::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetInterfaceRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 61, 2> GetInterfaceRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::GetInterfaceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetInterfaceRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(GetInterfaceRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\62\2\0\0\0\0\0\0"
    "kentik.interface.v202108alpha1.GetInterfaceRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void GetInterfaceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.interface.v202108alpha1.GetInterfaceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetInterfaceRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetInterfaceRequest& this_ = static_cast<const GetInterfaceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetInterfaceRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetInterfaceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.interface.v202108alpha1.GetInterfaceRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.GetInterfaceRequest.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.interface.v202108alpha1.GetInterfaceRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetInterfaceRequest::ByteSizeLong(const MessageLite& base) {
          const GetInterfaceRequest& this_ = static_cast<const GetInterfaceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetInterfaceRequest::ByteSizeLong() const {
          const GetInterfaceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.interface.v202108alpha1.GetInterfaceRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string id = 1 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetInterfaceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetInterfaceRequest*>(&to_msg);
  auto& from = static_cast<const GetInterfaceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.interface.v202108alpha1.GetInterfaceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetInterfaceRequest::CopyFrom(const GetInterfaceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.interface.v202108alpha1.GetInterfaceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetInterfaceRequest::InternalSwap(GetInterfaceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata GetInterfaceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetInterfaceResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetInterfaceResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetInterfaceResponse, _impl_._has_bits_);
};

GetInterfaceResponse::GetInterfaceResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.GetInterfaceResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetInterfaceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::interface::v202108alpha1::GetInterfaceResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetInterfaceResponse::GetInterfaceResponse(
    ::google::protobuf::Arena* arena,
    const GetInterfaceResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetInterfaceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.interface_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::Interface>(
                              arena, *from._impl_.interface_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.interface.v202108alpha1.GetInterfaceResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetInterfaceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetInterfaceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.interface_ = {};
}
GetInterfaceResponse::~GetInterfaceResponse() {
  // @@protoc_insertion_point(destructor:kentik.interface.v202108alpha1.GetInterfaceResponse)
  SharedDtor(*this);
}
inline void GetInterfaceResponse::SharedDtor(MessageLite& self) {
  GetInterfaceResponse& this_ = static_cast<GetInterfaceResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.interface_;
  this_._impl_.~Impl_();
}

inline void* GetInterfaceResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetInterfaceResponse(arena);
}
constexpr auto GetInterfaceResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetInterfaceResponse),
                                            alignof(GetInterfaceResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetInterfaceResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetInterfaceResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetInterfaceResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetInterfaceResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetInterfaceResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetInterfaceResponse>(), &GetInterfaceResponse::ByteSizeLong,
            &GetInterfaceResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetInterfaceResponse, _impl_._cached_size_),
        false,
    },
    &GetInterfaceResponse::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetInterfaceResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetInterfaceResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetInterfaceResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::GetInterfaceResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetInterfaceResponse, _impl_.interface_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
    {PROTOBUF_FIELD_OFFSET(GetInterfaceResponse, _impl_.interface_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::Interface>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetInterfaceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.interface.v202108alpha1.GetInterfaceResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.interface_ != nullptr);
    _impl_.interface_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetInterfaceResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetInterfaceResponse& this_ = static_cast<const GetInterfaceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetInterfaceResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetInterfaceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.interface.v202108alpha1.GetInterfaceResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.interface_, this_._impl_.interface_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.interface.v202108alpha1.GetInterfaceResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetInterfaceResponse::ByteSizeLong(const MessageLite& base) {
          const GetInterfaceResponse& this_ = static_cast<const GetInterfaceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetInterfaceResponse::ByteSizeLong() const {
          const GetInterfaceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.interface.v202108alpha1.GetInterfaceResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.interface_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetInterfaceResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetInterfaceResponse*>(&to_msg);
  auto& from = static_cast<const GetInterfaceResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.interface.v202108alpha1.GetInterfaceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.interface_ != nullptr);
    if (_this->_impl_.interface_ == nullptr) {
      _this->_impl_.interface_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::Interface>(arena, *from._impl_.interface_);
    } else {
      _this->_impl_.interface_->MergeFrom(*from._impl_.interface_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetInterfaceResponse::CopyFrom(const GetInterfaceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.interface.v202108alpha1.GetInterfaceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetInterfaceResponse::InternalSwap(GetInterfaceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.interface_, other->_impl_.interface_);
}

::google::protobuf::Metadata GetInterfaceResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateInterfaceRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateInterfaceRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateInterfaceRequest, _impl_._has_bits_);
};

CreateInterfaceRequest::CreateInterfaceRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.CreateInterfaceRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateInterfaceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::interface::v202108alpha1::CreateInterfaceRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateInterfaceRequest::CreateInterfaceRequest(
    ::google::protobuf::Arena* arena,
    const CreateInterfaceRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateInterfaceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.interface_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::Interface>(
                              arena, *from._impl_.interface_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.interface.v202108alpha1.CreateInterfaceRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateInterfaceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateInterfaceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.interface_ = {};
}
CreateInterfaceRequest::~CreateInterfaceRequest() {
  // @@protoc_insertion_point(destructor:kentik.interface.v202108alpha1.CreateInterfaceRequest)
  SharedDtor(*this);
}
inline void CreateInterfaceRequest::SharedDtor(MessageLite& self) {
  CreateInterfaceRequest& this_ = static_cast<CreateInterfaceRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.interface_;
  this_._impl_.~Impl_();
}

inline void* CreateInterfaceRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateInterfaceRequest(arena);
}
constexpr auto CreateInterfaceRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreateInterfaceRequest),
                                            alignof(CreateInterfaceRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateInterfaceRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateInterfaceRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateInterfaceRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateInterfaceRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateInterfaceRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateInterfaceRequest>(), &CreateInterfaceRequest::ByteSizeLong,
            &CreateInterfaceRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateInterfaceRequest, _impl_._cached_size_),
        false,
    },
    &CreateInterfaceRequest::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateInterfaceRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateInterfaceRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateInterfaceRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::CreateInterfaceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateInterfaceRequest, _impl_.interface_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
    {PROTOBUF_FIELD_OFFSET(CreateInterfaceRequest, _impl_.interface_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::Interface>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CreateInterfaceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.interface.v202108alpha1.CreateInterfaceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.interface_ != nullptr);
    _impl_.interface_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateInterfaceRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateInterfaceRequest& this_ = static_cast<const CreateInterfaceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateInterfaceRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateInterfaceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.interface.v202108alpha1.CreateInterfaceRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.interface_, this_._impl_.interface_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.interface.v202108alpha1.CreateInterfaceRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateInterfaceRequest::ByteSizeLong(const MessageLite& base) {
          const CreateInterfaceRequest& this_ = static_cast<const CreateInterfaceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateInterfaceRequest::ByteSizeLong() const {
          const CreateInterfaceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.interface.v202108alpha1.CreateInterfaceRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.interface_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateInterfaceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateInterfaceRequest*>(&to_msg);
  auto& from = static_cast<const CreateInterfaceRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.interface.v202108alpha1.CreateInterfaceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.interface_ != nullptr);
    if (_this->_impl_.interface_ == nullptr) {
      _this->_impl_.interface_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::Interface>(arena, *from._impl_.interface_);
    } else {
      _this->_impl_.interface_->MergeFrom(*from._impl_.interface_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateInterfaceRequest::CopyFrom(const CreateInterfaceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.interface.v202108alpha1.CreateInterfaceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateInterfaceRequest::InternalSwap(CreateInterfaceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.interface_, other->_impl_.interface_);
}

::google::protobuf::Metadata CreateInterfaceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateInterfaceResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateInterfaceResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateInterfaceResponse, _impl_._has_bits_);
};

CreateInterfaceResponse::CreateInterfaceResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.CreateInterfaceResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateInterfaceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::interface::v202108alpha1::CreateInterfaceResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateInterfaceResponse::CreateInterfaceResponse(
    ::google::protobuf::Arena* arena,
    const CreateInterfaceResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateInterfaceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.interface_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::Interface>(
                              arena, *from._impl_.interface_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.interface.v202108alpha1.CreateInterfaceResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateInterfaceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateInterfaceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.interface_ = {};
}
CreateInterfaceResponse::~CreateInterfaceResponse() {
  // @@protoc_insertion_point(destructor:kentik.interface.v202108alpha1.CreateInterfaceResponse)
  SharedDtor(*this);
}
inline void CreateInterfaceResponse::SharedDtor(MessageLite& self) {
  CreateInterfaceResponse& this_ = static_cast<CreateInterfaceResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.interface_;
  this_._impl_.~Impl_();
}

inline void* CreateInterfaceResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateInterfaceResponse(arena);
}
constexpr auto CreateInterfaceResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreateInterfaceResponse),
                                            alignof(CreateInterfaceResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateInterfaceResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateInterfaceResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateInterfaceResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateInterfaceResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateInterfaceResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateInterfaceResponse>(), &CreateInterfaceResponse::ByteSizeLong,
            &CreateInterfaceResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateInterfaceResponse, _impl_._cached_size_),
        false,
    },
    &CreateInterfaceResponse::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateInterfaceResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateInterfaceResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateInterfaceResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::CreateInterfaceResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateInterfaceResponse, _impl_.interface_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
    {PROTOBUF_FIELD_OFFSET(CreateInterfaceResponse, _impl_.interface_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::Interface>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CreateInterfaceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.interface.v202108alpha1.CreateInterfaceResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.interface_ != nullptr);
    _impl_.interface_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateInterfaceResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateInterfaceResponse& this_ = static_cast<const CreateInterfaceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateInterfaceResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateInterfaceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.interface.v202108alpha1.CreateInterfaceResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.interface_, this_._impl_.interface_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.interface.v202108alpha1.CreateInterfaceResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateInterfaceResponse::ByteSizeLong(const MessageLite& base) {
          const CreateInterfaceResponse& this_ = static_cast<const CreateInterfaceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateInterfaceResponse::ByteSizeLong() const {
          const CreateInterfaceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.interface.v202108alpha1.CreateInterfaceResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.interface_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateInterfaceResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateInterfaceResponse*>(&to_msg);
  auto& from = static_cast<const CreateInterfaceResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.interface.v202108alpha1.CreateInterfaceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.interface_ != nullptr);
    if (_this->_impl_.interface_ == nullptr) {
      _this->_impl_.interface_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::Interface>(arena, *from._impl_.interface_);
    } else {
      _this->_impl_.interface_->MergeFrom(*from._impl_.interface_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateInterfaceResponse::CopyFrom(const CreateInterfaceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.interface.v202108alpha1.CreateInterfaceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateInterfaceResponse::InternalSwap(CreateInterfaceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.interface_, other->_impl_.interface_);
}

::google::protobuf::Metadata CreateInterfaceResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateInterfaceRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateInterfaceRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateInterfaceRequest, _impl_._has_bits_);
};

UpdateInterfaceRequest::UpdateInterfaceRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.UpdateInterfaceRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateInterfaceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::interface::v202108alpha1::UpdateInterfaceRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateInterfaceRequest::UpdateInterfaceRequest(
    ::google::protobuf::Arena* arena,
    const UpdateInterfaceRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateInterfaceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.interface_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::Interface>(
                              arena, *from._impl_.interface_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.interface.v202108alpha1.UpdateInterfaceRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateInterfaceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateInterfaceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.interface_ = {};
}
UpdateInterfaceRequest::~UpdateInterfaceRequest() {
  // @@protoc_insertion_point(destructor:kentik.interface.v202108alpha1.UpdateInterfaceRequest)
  SharedDtor(*this);
}
inline void UpdateInterfaceRequest::SharedDtor(MessageLite& self) {
  UpdateInterfaceRequest& this_ = static_cast<UpdateInterfaceRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.interface_;
  this_._impl_.~Impl_();
}

inline void* UpdateInterfaceRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateInterfaceRequest(arena);
}
constexpr auto UpdateInterfaceRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateInterfaceRequest),
                                            alignof(UpdateInterfaceRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateInterfaceRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateInterfaceRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateInterfaceRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateInterfaceRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateInterfaceRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateInterfaceRequest>(), &UpdateInterfaceRequest::ByteSizeLong,
            &UpdateInterfaceRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateInterfaceRequest, _impl_._cached_size_),
        false,
    },
    &UpdateInterfaceRequest::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateInterfaceRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateInterfaceRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateInterfaceRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::UpdateInterfaceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateInterfaceRequest, _impl_.interface_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
    {PROTOBUF_FIELD_OFFSET(UpdateInterfaceRequest, _impl_.interface_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::Interface>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateInterfaceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.interface.v202108alpha1.UpdateInterfaceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.interface_ != nullptr);
    _impl_.interface_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateInterfaceRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateInterfaceRequest& this_ = static_cast<const UpdateInterfaceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateInterfaceRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateInterfaceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.interface.v202108alpha1.UpdateInterfaceRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.interface_, this_._impl_.interface_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.interface.v202108alpha1.UpdateInterfaceRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateInterfaceRequest::ByteSizeLong(const MessageLite& base) {
          const UpdateInterfaceRequest& this_ = static_cast<const UpdateInterfaceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateInterfaceRequest::ByteSizeLong() const {
          const UpdateInterfaceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.interface.v202108alpha1.UpdateInterfaceRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.interface_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateInterfaceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateInterfaceRequest*>(&to_msg);
  auto& from = static_cast<const UpdateInterfaceRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.interface.v202108alpha1.UpdateInterfaceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.interface_ != nullptr);
    if (_this->_impl_.interface_ == nullptr) {
      _this->_impl_.interface_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::Interface>(arena, *from._impl_.interface_);
    } else {
      _this->_impl_.interface_->MergeFrom(*from._impl_.interface_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateInterfaceRequest::CopyFrom(const UpdateInterfaceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.interface.v202108alpha1.UpdateInterfaceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateInterfaceRequest::InternalSwap(UpdateInterfaceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.interface_, other->_impl_.interface_);
}

::google::protobuf::Metadata UpdateInterfaceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateInterfaceResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateInterfaceResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateInterfaceResponse, _impl_._has_bits_);
};

UpdateInterfaceResponse::UpdateInterfaceResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.UpdateInterfaceResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateInterfaceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::interface::v202108alpha1::UpdateInterfaceResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateInterfaceResponse::UpdateInterfaceResponse(
    ::google::protobuf::Arena* arena,
    const UpdateInterfaceResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateInterfaceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.interface_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::Interface>(
                              arena, *from._impl_.interface_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.interface.v202108alpha1.UpdateInterfaceResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateInterfaceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateInterfaceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.interface_ = {};
}
UpdateInterfaceResponse::~UpdateInterfaceResponse() {
  // @@protoc_insertion_point(destructor:kentik.interface.v202108alpha1.UpdateInterfaceResponse)
  SharedDtor(*this);
}
inline void UpdateInterfaceResponse::SharedDtor(MessageLite& self) {
  UpdateInterfaceResponse& this_ = static_cast<UpdateInterfaceResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.interface_;
  this_._impl_.~Impl_();
}

inline void* UpdateInterfaceResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateInterfaceResponse(arena);
}
constexpr auto UpdateInterfaceResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateInterfaceResponse),
                                            alignof(UpdateInterfaceResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateInterfaceResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateInterfaceResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateInterfaceResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateInterfaceResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateInterfaceResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateInterfaceResponse>(), &UpdateInterfaceResponse::ByteSizeLong,
            &UpdateInterfaceResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateInterfaceResponse, _impl_._cached_size_),
        false,
    },
    &UpdateInterfaceResponse::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateInterfaceResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateInterfaceResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateInterfaceResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::UpdateInterfaceResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateInterfaceResponse, _impl_.interface_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
    {PROTOBUF_FIELD_OFFSET(UpdateInterfaceResponse, _impl_.interface_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::Interface>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateInterfaceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.interface.v202108alpha1.UpdateInterfaceResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.interface_ != nullptr);
    _impl_.interface_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateInterfaceResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateInterfaceResponse& this_ = static_cast<const UpdateInterfaceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateInterfaceResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateInterfaceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.interface.v202108alpha1.UpdateInterfaceResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.interface_, this_._impl_.interface_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.interface.v202108alpha1.UpdateInterfaceResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateInterfaceResponse::ByteSizeLong(const MessageLite& base) {
          const UpdateInterfaceResponse& this_ = static_cast<const UpdateInterfaceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateInterfaceResponse::ByteSizeLong() const {
          const UpdateInterfaceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.interface.v202108alpha1.UpdateInterfaceResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.interface.v202108alpha1.Interface interface = 1 [json_name = "interface"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.interface_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateInterfaceResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateInterfaceResponse*>(&to_msg);
  auto& from = static_cast<const UpdateInterfaceResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.interface.v202108alpha1.UpdateInterfaceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.interface_ != nullptr);
    if (_this->_impl_.interface_ == nullptr) {
      _this->_impl_.interface_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::Interface>(arena, *from._impl_.interface_);
    } else {
      _this->_impl_.interface_->MergeFrom(*from._impl_.interface_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateInterfaceResponse::CopyFrom(const UpdateInterfaceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.interface.v202108alpha1.UpdateInterfaceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateInterfaceResponse::InternalSwap(UpdateInterfaceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.interface_, other->_impl_.interface_);
}

::google::protobuf::Metadata UpdateInterfaceResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteInterfaceRequest::_Internal {
 public:
};

DeleteInterfaceRequest::DeleteInterfaceRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.DeleteInterfaceRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteInterfaceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::interface::v202108alpha1::DeleteInterfaceRequest& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

DeleteInterfaceRequest::DeleteInterfaceRequest(
    ::google::protobuf::Arena* arena,
    const DeleteInterfaceRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteInterfaceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.interface.v202108alpha1.DeleteInterfaceRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteInterfaceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void DeleteInterfaceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeleteInterfaceRequest::~DeleteInterfaceRequest() {
  // @@protoc_insertion_point(destructor:kentik.interface.v202108alpha1.DeleteInterfaceRequest)
  SharedDtor(*this);
}
inline void DeleteInterfaceRequest::SharedDtor(MessageLite& self) {
  DeleteInterfaceRequest& this_ = static_cast<DeleteInterfaceRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DeleteInterfaceRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeleteInterfaceRequest(arena);
}
constexpr auto DeleteInterfaceRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeleteInterfaceRequest),
                                            alignof(DeleteInterfaceRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeleteInterfaceRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeleteInterfaceRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeleteInterfaceRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeleteInterfaceRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeleteInterfaceRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeleteInterfaceRequest>(), &DeleteInterfaceRequest::ByteSizeLong,
            &DeleteInterfaceRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeleteInterfaceRequest, _impl_._cached_size_),
        false,
    },
    &DeleteInterfaceRequest::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeleteInterfaceRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 64, 2> DeleteInterfaceRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::DeleteInterfaceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteInterfaceRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(DeleteInterfaceRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\65\2\0\0\0\0\0\0"
    "kentik.interface.v202108alpha1.DeleteInterfaceRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void DeleteInterfaceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.interface.v202108alpha1.DeleteInterfaceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeleteInterfaceRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeleteInterfaceRequest& this_ = static_cast<const DeleteInterfaceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeleteInterfaceRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeleteInterfaceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.interface.v202108alpha1.DeleteInterfaceRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.DeleteInterfaceRequest.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.interface.v202108alpha1.DeleteInterfaceRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeleteInterfaceRequest::ByteSizeLong(const MessageLite& base) {
          const DeleteInterfaceRequest& this_ = static_cast<const DeleteInterfaceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeleteInterfaceRequest::ByteSizeLong() const {
          const DeleteInterfaceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.interface.v202108alpha1.DeleteInterfaceRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string id = 1 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeleteInterfaceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteInterfaceRequest*>(&to_msg);
  auto& from = static_cast<const DeleteInterfaceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.interface.v202108alpha1.DeleteInterfaceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteInterfaceRequest::CopyFrom(const DeleteInterfaceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.interface.v202108alpha1.DeleteInterfaceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeleteInterfaceRequest::InternalSwap(DeleteInterfaceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata DeleteInterfaceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteInterfaceResponse::_Internal {
 public:
};

DeleteInterfaceResponse::DeleteInterfaceResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.DeleteInterfaceResponse)
}
DeleteInterfaceResponse::DeleteInterfaceResponse(
    ::google::protobuf::Arena* arena,
    const DeleteInterfaceResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteInterfaceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:kentik.interface.v202108alpha1.DeleteInterfaceResponse)
}

inline void* DeleteInterfaceResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeleteInterfaceResponse(arena);
}
constexpr auto DeleteInterfaceResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DeleteInterfaceResponse),
                                            alignof(DeleteInterfaceResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeleteInterfaceResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeleteInterfaceResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeleteInterfaceResponse::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<DeleteInterfaceResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeleteInterfaceResponse::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<DeleteInterfaceResponse>(), &DeleteInterfaceResponse::ByteSizeLong,
            &DeleteInterfaceResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeleteInterfaceResponse, _impl_._cached_size_),
        false,
    },
    &DeleteInterfaceResponse::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeleteInterfaceResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> DeleteInterfaceResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::DeleteInterfaceResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata DeleteInterfaceResponse::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Match::_Internal {
 public:
};

Match::Match(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.Match)
}
inline PROTOBUF_NDEBUG_INLINE Match::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::interface::v202108alpha1::Match& from_msg)
      : pattern_(arena, from.pattern_),
        _cached_size_{0} {}

Match::Match(
    ::google::protobuf::Arena* arena,
    const Match& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Match* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, match_attribute_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, match_attribute_),
           offsetof(Impl_, match_operator_) -
               offsetof(Impl_, match_attribute_) +
               sizeof(Impl_::match_operator_));

  // @@protoc_insertion_point(copy_constructor:kentik.interface.v202108alpha1.Match)
}
inline PROTOBUF_NDEBUG_INLINE Match::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : pattern_(arena),
        _cached_size_{0} {}

inline void Match::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, match_attribute_),
           0,
           offsetof(Impl_, match_operator_) -
               offsetof(Impl_, match_attribute_) +
               sizeof(Impl_::match_operator_));
}
Match::~Match() {
  // @@protoc_insertion_point(destructor:kentik.interface.v202108alpha1.Match)
  SharedDtor(*this);
}
inline void Match::SharedDtor(MessageLite& self) {
  Match& this_ = static_cast<Match&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.pattern_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Match::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Match(arena);
}
constexpr auto Match::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Match),
                                            alignof(Match));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Match::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Match_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Match::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Match>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Match::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Match>(), &Match::ByteSizeLong,
            &Match::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Match, _impl_._cached_size_),
        false,
    },
    &Match::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Match::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 52, 2> Match::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::Match>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .kentik.interface.v202108alpha1.MatchAttribute match_attribute = 1 [json_name = "matchAttribute"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Match, _impl_.match_attribute_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Match, _impl_.match_attribute_)}},
    // .kentik.interface.v202108alpha1.Operator match_operator = 2 [json_name = "matchOperator"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Match, _impl_.match_operator_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Match, _impl_.match_operator_)}},
    // string pattern = 3 [json_name = "pattern"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Match, _impl_.pattern_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.interface.v202108alpha1.MatchAttribute match_attribute = 1 [json_name = "matchAttribute"];
    {PROTOBUF_FIELD_OFFSET(Match, _impl_.match_attribute_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .kentik.interface.v202108alpha1.Operator match_operator = 2 [json_name = "matchOperator"];
    {PROTOBUF_FIELD_OFFSET(Match, _impl_.match_operator_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string pattern = 3 [json_name = "pattern"];
    {PROTOBUF_FIELD_OFFSET(Match, _impl_.pattern_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\0\0\7\0\0\0\0"
    "kentik.interface.v202108alpha1.Match"
    "pattern"
  }},
};

PROTOBUF_NOINLINE void Match::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.interface.v202108alpha1.Match)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pattern_.ClearToEmpty();
  ::memset(&_impl_.match_attribute_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.match_operator_) -
      reinterpret_cast<char*>(&_impl_.match_attribute_)) + sizeof(_impl_.match_operator_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Match::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Match& this_ = static_cast<const Match&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Match::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Match& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.interface.v202108alpha1.Match)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .kentik.interface.v202108alpha1.MatchAttribute match_attribute = 1 [json_name = "matchAttribute"];
          if (this_._internal_match_attribute() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_match_attribute(), target);
          }

          // .kentik.interface.v202108alpha1.Operator match_operator = 2 [json_name = "matchOperator"];
          if (this_._internal_match_operator() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_match_operator(), target);
          }

          // string pattern = 3 [json_name = "pattern"];
          if (!this_._internal_pattern().empty()) {
            const std::string& _s = this_._internal_pattern();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Match.pattern");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.interface.v202108alpha1.Match)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Match::ByteSizeLong(const MessageLite& base) {
          const Match& this_ = static_cast<const Match&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Match::ByteSizeLong() const {
          const Match& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.interface.v202108alpha1.Match)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string pattern = 3 [json_name = "pattern"];
            if (!this_._internal_pattern().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_pattern());
            }
            // .kentik.interface.v202108alpha1.MatchAttribute match_attribute = 1 [json_name = "matchAttribute"];
            if (this_._internal_match_attribute() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_match_attribute());
            }
            // .kentik.interface.v202108alpha1.Operator match_operator = 2 [json_name = "matchOperator"];
            if (this_._internal_match_operator() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_match_operator());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Match::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Match*>(&to_msg);
  auto& from = static_cast<const Match&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.interface.v202108alpha1.Match)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pattern().empty()) {
    _this->_internal_set_pattern(from._internal_pattern());
  }
  if (from._internal_match_attribute() != 0) {
    _this->_impl_.match_attribute_ = from._impl_.match_attribute_;
  }
  if (from._internal_match_operator() != 0) {
    _this->_impl_.match_operator_ = from._impl_.match_operator_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Match::CopyFrom(const Match& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.interface.v202108alpha1.Match)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Match::InternalSwap(Match* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pattern_, &other->_impl_.pattern_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Match, _impl_.match_operator_)
      + sizeof(Match::_impl_.match_operator_)
      - PROTOBUF_FIELD_OFFSET(Match, _impl_.match_attribute_)>(
          reinterpret_cast<char*>(&_impl_.match_attribute_),
          reinterpret_cast<char*>(&other->_impl_.match_attribute_));
}

::google::protobuf::Metadata Match::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Action::_Internal {
 public:
};

Action::Action(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.Action)
}
inline PROTOBUF_NDEBUG_INLINE Action::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::interface::v202108alpha1::Action& from_msg)
      : set_connected_asns_(arena, from.set_connected_asns_),
        set_provider_(arena, from.set_provider_),
        _cached_size_{0} {}

Action::Action(
    ::google::protobuf::Arena* arena,
    const Action& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Action* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, set_connectivity_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, set_connectivity_type_),
           offsetof(Impl_, set_network_boundary_) -
               offsetof(Impl_, set_connectivity_type_) +
               sizeof(Impl_::set_network_boundary_));

  // @@protoc_insertion_point(copy_constructor:kentik.interface.v202108alpha1.Action)
}
inline PROTOBUF_NDEBUG_INLINE Action::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : set_connected_asns_(arena),
        set_provider_(arena),
        _cached_size_{0} {}

inline void Action::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, set_connectivity_type_),
           0,
           offsetof(Impl_, set_network_boundary_) -
               offsetof(Impl_, set_connectivity_type_) +
               sizeof(Impl_::set_network_boundary_));
}
Action::~Action() {
  // @@protoc_insertion_point(destructor:kentik.interface.v202108alpha1.Action)
  SharedDtor(*this);
}
inline void Action::SharedDtor(MessageLite& self) {
  Action& this_ = static_cast<Action&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.set_connected_asns_.Destroy();
  this_._impl_.set_provider_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Action::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Action(arena);
}
constexpr auto Action::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Action),
                                            alignof(Action));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Action::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Action_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Action::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Action>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Action::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Action>(), &Action::ByteSizeLong,
            &Action::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Action, _impl_._cached_size_),
        false,
    },
    &Action::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Action::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 76, 2> Action::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::Action>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string set_provider = 4 [json_name = "setProvider"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Action, _impl_.set_provider_)}},
    // .kentik.interface.v202108alpha1.ConnectivityType set_connectivity_type = 1 [json_name = "setConnectivityType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Action, _impl_.set_connectivity_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Action, _impl_.set_connectivity_type_)}},
    // .kentik.interface.v202108alpha1.NetworkBoundary set_network_boundary = 2 [json_name = "setNetworkBoundary"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Action, _impl_.set_network_boundary_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Action, _impl_.set_network_boundary_)}},
    // string set_connected_asns = 3 [json_name = "setConnectedAsns"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Action, _impl_.set_connected_asns_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.interface.v202108alpha1.ConnectivityType set_connectivity_type = 1 [json_name = "setConnectivityType"];
    {PROTOBUF_FIELD_OFFSET(Action, _impl_.set_connectivity_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .kentik.interface.v202108alpha1.NetworkBoundary set_network_boundary = 2 [json_name = "setNetworkBoundary"];
    {PROTOBUF_FIELD_OFFSET(Action, _impl_.set_network_boundary_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string set_connected_asns = 3 [json_name = "setConnectedAsns"];
    {PROTOBUF_FIELD_OFFSET(Action, _impl_.set_connected_asns_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string set_provider = 4 [json_name = "setProvider"];
    {PROTOBUF_FIELD_OFFSET(Action, _impl_.set_provider_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\0\0\22\14\0\0\0"
    "kentik.interface.v202108alpha1.Action"
    "set_connected_asns"
    "set_provider"
  }},
};

PROTOBUF_NOINLINE void Action::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.interface.v202108alpha1.Action)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.set_connected_asns_.ClearToEmpty();
  _impl_.set_provider_.ClearToEmpty();
  ::memset(&_impl_.set_connectivity_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.set_network_boundary_) -
      reinterpret_cast<char*>(&_impl_.set_connectivity_type_)) + sizeof(_impl_.set_network_boundary_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Action::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Action& this_ = static_cast<const Action&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Action::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Action& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.interface.v202108alpha1.Action)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .kentik.interface.v202108alpha1.ConnectivityType set_connectivity_type = 1 [json_name = "setConnectivityType"];
          if (this_._internal_set_connectivity_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_set_connectivity_type(), target);
          }

          // .kentik.interface.v202108alpha1.NetworkBoundary set_network_boundary = 2 [json_name = "setNetworkBoundary"];
          if (this_._internal_set_network_boundary() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_set_network_boundary(), target);
          }

          // string set_connected_asns = 3 [json_name = "setConnectedAsns"];
          if (!this_._internal_set_connected_asns().empty()) {
            const std::string& _s = this_._internal_set_connected_asns();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Action.set_connected_asns");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string set_provider = 4 [json_name = "setProvider"];
          if (!this_._internal_set_provider().empty()) {
            const std::string& _s = this_._internal_set_provider();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Action.set_provider");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.interface.v202108alpha1.Action)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Action::ByteSizeLong(const MessageLite& base) {
          const Action& this_ = static_cast<const Action&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Action::ByteSizeLong() const {
          const Action& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.interface.v202108alpha1.Action)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string set_connected_asns = 3 [json_name = "setConnectedAsns"];
            if (!this_._internal_set_connected_asns().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_set_connected_asns());
            }
            // string set_provider = 4 [json_name = "setProvider"];
            if (!this_._internal_set_provider().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_set_provider());
            }
            // .kentik.interface.v202108alpha1.ConnectivityType set_connectivity_type = 1 [json_name = "setConnectivityType"];
            if (this_._internal_set_connectivity_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_set_connectivity_type());
            }
            // .kentik.interface.v202108alpha1.NetworkBoundary set_network_boundary = 2 [json_name = "setNetworkBoundary"];
            if (this_._internal_set_network_boundary() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_set_network_boundary());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Action::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Action*>(&to_msg);
  auto& from = static_cast<const Action&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.interface.v202108alpha1.Action)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_set_connected_asns().empty()) {
    _this->_internal_set_set_connected_asns(from._internal_set_connected_asns());
  }
  if (!from._internal_set_provider().empty()) {
    _this->_internal_set_set_provider(from._internal_set_provider());
  }
  if (from._internal_set_connectivity_type() != 0) {
    _this->_impl_.set_connectivity_type_ = from._impl_.set_connectivity_type_;
  }
  if (from._internal_set_network_boundary() != 0) {
    _this->_impl_.set_network_boundary_ = from._impl_.set_network_boundary_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Action::CopyFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.interface.v202108alpha1.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Action::InternalSwap(Action* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.set_connected_asns_, &other->_impl_.set_connected_asns_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.set_provider_, &other->_impl_.set_provider_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Action, _impl_.set_network_boundary_)
      + sizeof(Action::_impl_.set_network_boundary_)
      - PROTOBUF_FIELD_OFFSET(Action, _impl_.set_connectivity_type_)>(
          reinterpret_cast<char*>(&_impl_.set_connectivity_type_),
          reinterpret_cast<char*>(&other->_impl_.set_connectivity_type_));
}

::google::protobuf::Metadata Action::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeviceFilter::_Internal {
 public:
};

DeviceFilter::DeviceFilter(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.DeviceFilter)
}
inline PROTOBUF_NDEBUG_INLINE DeviceFilter::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::interface::v202108alpha1::DeviceFilter& from_msg)
      : device_name_{visibility, arena, from.device_name_},
        device_labels_{visibility, arena, from.device_labels_},
        device_rules_{visibility, arena, from.device_rules_},
        device_types_{visibility, arena, from.device_types_},
        _cached_size_{0} {}

DeviceFilter::DeviceFilter(
    ::google::protobuf::Arena* arena,
    const DeviceFilter& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeviceFilter* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.all_devices_ = from._impl_.all_devices_;

  // @@protoc_insertion_point(copy_constructor:kentik.interface.v202108alpha1.DeviceFilter)
}
inline PROTOBUF_NDEBUG_INLINE DeviceFilter::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_name_{visibility, arena},
        device_labels_{visibility, arena},
        device_rules_{visibility, arena},
        device_types_{visibility, arena},
        _cached_size_{0} {}

inline void DeviceFilter::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.all_devices_ = {};
}
DeviceFilter::~DeviceFilter() {
  // @@protoc_insertion_point(destructor:kentik.interface.v202108alpha1.DeviceFilter)
  SharedDtor(*this);
}
inline void DeviceFilter::SharedDtor(MessageLite& self) {
  DeviceFilter& this_ = static_cast<DeviceFilter&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* DeviceFilter::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeviceFilter(arena);
}
constexpr auto DeviceFilter::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DeviceFilter, _impl_.device_name_) +
          decltype(DeviceFilter::_impl_.device_name_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(DeviceFilter, _impl_.device_labels_) +
          decltype(DeviceFilter::_impl_.device_labels_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(DeviceFilter, _impl_.device_rules_) +
          decltype(DeviceFilter::_impl_.device_rules_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(DeviceFilter, _impl_.device_types_) +
          decltype(DeviceFilter::_impl_.device_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(DeviceFilter), alignof(DeviceFilter), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DeviceFilter::PlacementNew_,
                                 sizeof(DeviceFilter),
                                 alignof(DeviceFilter));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeviceFilter::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeviceFilter_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeviceFilter::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeviceFilter>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeviceFilter::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeviceFilter>(), &DeviceFilter::ByteSizeLong,
            &DeviceFilter::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeviceFilter, _impl_._cached_size_),
        false,
    },
    &DeviceFilter::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeviceFilter::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 100, 2> DeviceFilter::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::DeviceFilter>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool all_devices = 1 [json_name = "allDevices"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DeviceFilter, _impl_.all_devices_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceFilter, _impl_.all_devices_)}},
    // repeated string device_name = 2 [json_name = "deviceName"];
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceFilter, _impl_.device_name_)}},
    // repeated string device_labels = 3 [json_name = "deviceLabels"];
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceFilter, _impl_.device_labels_)}},
    // repeated string device_rules = 4 [json_name = "deviceRules"];
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceFilter, _impl_.device_rules_)}},
    // repeated string device_types = 5 [json_name = "deviceTypes"];
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceFilter, _impl_.device_types_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool all_devices = 1 [json_name = "allDevices"];
    {PROTOBUF_FIELD_OFFSET(DeviceFilter, _impl_.all_devices_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // repeated string device_name = 2 [json_name = "deviceName"];
    {PROTOBUF_FIELD_OFFSET(DeviceFilter, _impl_.device_name_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string device_labels = 3 [json_name = "deviceLabels"];
    {PROTOBUF_FIELD_OFFSET(DeviceFilter, _impl_.device_labels_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string device_rules = 4 [json_name = "deviceRules"];
    {PROTOBUF_FIELD_OFFSET(DeviceFilter, _impl_.device_rules_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string device_types = 5 [json_name = "deviceTypes"];
    {PROTOBUF_FIELD_OFFSET(DeviceFilter, _impl_.device_types_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\53\0\13\15\14\14\0\0"
    "kentik.interface.v202108alpha1.DeviceFilter"
    "device_name"
    "device_labels"
    "device_rules"
    "device_types"
  }},
};

PROTOBUF_NOINLINE void DeviceFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.interface.v202108alpha1.DeviceFilter)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_name_.Clear();
  _impl_.device_labels_.Clear();
  _impl_.device_rules_.Clear();
  _impl_.device_types_.Clear();
  _impl_.all_devices_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeviceFilter::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeviceFilter& this_ = static_cast<const DeviceFilter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeviceFilter::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeviceFilter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.interface.v202108alpha1.DeviceFilter)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool all_devices = 1 [json_name = "allDevices"];
          if (this_._internal_all_devices() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_all_devices(), target);
          }

          // repeated string device_name = 2 [json_name = "deviceName"];
          for (int i = 0, n = this_._internal_device_name_size(); i < n; ++i) {
            const auto& s = this_._internal_device_name().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.DeviceFilter.device_name");
            target = stream->WriteString(2, s, target);
          }

          // repeated string device_labels = 3 [json_name = "deviceLabels"];
          for (int i = 0, n = this_._internal_device_labels_size(); i < n; ++i) {
            const auto& s = this_._internal_device_labels().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.DeviceFilter.device_labels");
            target = stream->WriteString(3, s, target);
          }

          // repeated string device_rules = 4 [json_name = "deviceRules"];
          for (int i = 0, n = this_._internal_device_rules_size(); i < n; ++i) {
            const auto& s = this_._internal_device_rules().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.DeviceFilter.device_rules");
            target = stream->WriteString(4, s, target);
          }

          // repeated string device_types = 5 [json_name = "deviceTypes"];
          for (int i = 0, n = this_._internal_device_types_size(); i < n; ++i) {
            const auto& s = this_._internal_device_types().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.DeviceFilter.device_types");
            target = stream->WriteString(5, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.interface.v202108alpha1.DeviceFilter)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeviceFilter::ByteSizeLong(const MessageLite& base) {
          const DeviceFilter& this_ = static_cast<const DeviceFilter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeviceFilter::ByteSizeLong() const {
          const DeviceFilter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.interface.v202108alpha1.DeviceFilter)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string device_name = 2 [json_name = "deviceName"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_device_name().size());
              for (int i = 0, n = this_._internal_device_name().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_device_name().Get(i));
              }
            }
            // repeated string device_labels = 3 [json_name = "deviceLabels"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_device_labels().size());
              for (int i = 0, n = this_._internal_device_labels().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_device_labels().Get(i));
              }
            }
            // repeated string device_rules = 4 [json_name = "deviceRules"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_device_rules().size());
              for (int i = 0, n = this_._internal_device_rules().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_device_rules().Get(i));
              }
            }
            // repeated string device_types = 5 [json_name = "deviceTypes"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_device_types().size());
              for (int i = 0, n = this_._internal_device_types().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_device_types().Get(i));
              }
            }
          }
           {
            // bool all_devices = 1 [json_name = "allDevices"];
            if (this_._internal_all_devices() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeviceFilter::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceFilter*>(&to_msg);
  auto& from = static_cast<const DeviceFilter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.interface.v202108alpha1.DeviceFilter)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_device_name()->MergeFrom(from._internal_device_name());
  _this->_internal_mutable_device_labels()->MergeFrom(from._internal_device_labels());
  _this->_internal_mutable_device_rules()->MergeFrom(from._internal_device_rules());
  _this->_internal_mutable_device_types()->MergeFrom(from._internal_device_types());
  if (from._internal_all_devices() != 0) {
    _this->_impl_.all_devices_ = from._impl_.all_devices_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceFilter::CopyFrom(const DeviceFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.interface.v202108alpha1.DeviceFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceFilter::InternalSwap(DeviceFilter* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.device_name_.InternalSwap(&other->_impl_.device_name_);
  _impl_.device_labels_.InternalSwap(&other->_impl_.device_labels_);
  _impl_.device_rules_.InternalSwap(&other->_impl_.device_rules_);
  _impl_.device_types_.InternalSwap(&other->_impl_.device_types_);
        swap(_impl_.all_devices_, other->_impl_.all_devices_);
}

::google::protobuf::Metadata DeviceFilter::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Rule::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Rule>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Rule, _impl_._has_bits_);
};

void Rule::clear_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cdate_ != nullptr) _impl_.cdate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void Rule::clear_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.edate_ != nullptr) _impl_.edate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
Rule::Rule(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.interface.v202108alpha1.Rule)
}
inline PROTOBUF_NDEBUG_INLINE Rule::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::interface::v202108alpha1::Rule& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

Rule::Rule(
    ::google::protobuf::Arena* arena,
    const Rule& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Rule* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.match_clause_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::Match>(
                              arena, *from._impl_.match_clause_)
                        : nullptr;
  _impl_.action_set_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::Action>(
                              arena, *from._impl_.action_set_)
                        : nullptr;
  _impl_.cdate_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.cdate_)
                        : nullptr;
  _impl_.edate_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.edate_)
                        : nullptr;
  _impl_.included_devices_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::DeviceFilter>(
                              arena, *from._impl_.included_devices_)
                        : nullptr;
  _impl_.excluded_devices_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::DeviceFilter>(
                              arena, *from._impl_.excluded_devices_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enabled_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, enabled_),
           offsetof(Impl_, rank_) -
               offsetof(Impl_, enabled_) +
               sizeof(Impl_::rank_));

  // @@protoc_insertion_point(copy_constructor:kentik.interface.v202108alpha1.Rule)
}
inline PROTOBUF_NDEBUG_INLINE Rule::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void Rule::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, match_clause_),
           0,
           offsetof(Impl_, rank_) -
               offsetof(Impl_, match_clause_) +
               sizeof(Impl_::rank_));
}
Rule::~Rule() {
  // @@protoc_insertion_point(destructor:kentik.interface.v202108alpha1.Rule)
  SharedDtor(*this);
}
inline void Rule::SharedDtor(MessageLite& self) {
  Rule& this_ = static_cast<Rule&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  delete this_._impl_.match_clause_;
  delete this_._impl_.action_set_;
  delete this_._impl_.cdate_;
  delete this_._impl_.edate_;
  delete this_._impl_.included_devices_;
  delete this_._impl_.excluded_devices_;
  this_._impl_.~Impl_();
}

inline void* Rule::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Rule(arena);
}
constexpr auto Rule::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Rule),
                                            alignof(Rule));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Rule::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Rule_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Rule::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Rule>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Rule::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Rule>(), &Rule::ByteSizeLong,
            &Rule::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Rule, _impl_._cached_size_),
        false,
    },
    &Rule::kDescriptorMethods,
    &descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Rule::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 6, 54, 2> Rule::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Rule, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::Rule>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Rule, _impl_.id_)}},
    // bool enabled = 2 [json_name = "enabled"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Rule, _impl_.enabled_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Rule, _impl_.enabled_)}},
    // int32 rank = 3 [json_name = "rank"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Rule, _impl_.rank_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Rule, _impl_.rank_)}},
    // .kentik.interface.v202108alpha1.Match match_clause = 4 [json_name = "matchClause"];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Rule, _impl_.match_clause_)}},
    // .kentik.interface.v202108alpha1.Action action_set = 5 [json_name = "actionSet"];
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(Rule, _impl_.action_set_)}},
    // .google.protobuf.Timestamp cdate = 6 [json_name = "cdate"];
    {::_pbi::TcParser::FastMtS1,
     {50, 2, 2, PROTOBUF_FIELD_OFFSET(Rule, _impl_.cdate_)}},
    // .google.protobuf.Timestamp edate = 7 [json_name = "edate"];
    {::_pbi::TcParser::FastMtS1,
     {58, 3, 3, PROTOBUF_FIELD_OFFSET(Rule, _impl_.edate_)}},
    // .kentik.interface.v202108alpha1.DeviceFilter included_devices = 8 [json_name = "includedDevices"];
    {::_pbi::TcParser::FastMtS1,
     {66, 4, 4, PROTOBUF_FIELD_OFFSET(Rule, _impl_.included_devices_)}},
    // .kentik.interface.v202108alpha1.DeviceFilter excluded_devices = 9 [json_name = "excludedDevices"];
    {::_pbi::TcParser::FastMtS1,
     {74, 5, 5, PROTOBUF_FIELD_OFFSET(Rule, _impl_.excluded_devices_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Rule, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool enabled = 2 [json_name = "enabled"];
    {PROTOBUF_FIELD_OFFSET(Rule, _impl_.enabled_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 rank = 3 [json_name = "rank"];
    {PROTOBUF_FIELD_OFFSET(Rule, _impl_.rank_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .kentik.interface.v202108alpha1.Match match_clause = 4 [json_name = "matchClause"];
    {PROTOBUF_FIELD_OFFSET(Rule, _impl_.match_clause_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.interface.v202108alpha1.Action action_set = 5 [json_name = "actionSet"];
    {PROTOBUF_FIELD_OFFSET(Rule, _impl_.action_set_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp cdate = 6 [json_name = "cdate"];
    {PROTOBUF_FIELD_OFFSET(Rule, _impl_.cdate_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp edate = 7 [json_name = "edate"];
    {PROTOBUF_FIELD_OFFSET(Rule, _impl_.edate_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.interface.v202108alpha1.DeviceFilter included_devices = 8 [json_name = "includedDevices"];
    {PROTOBUF_FIELD_OFFSET(Rule, _impl_.included_devices_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.interface.v202108alpha1.DeviceFilter excluded_devices = 9 [json_name = "excludedDevices"];
    {PROTOBUF_FIELD_OFFSET(Rule, _impl_.excluded_devices_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::Match>()},
    {::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::Action>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::DeviceFilter>()},
    {::_pbi::TcParser::GetTable<::kentik::interface::v202108alpha1::DeviceFilter>()},
  }}, {{
    "\43\2\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "kentik.interface.v202108alpha1.Rule"
    "id"
  }},
};

PROTOBUF_NOINLINE void Rule::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.interface.v202108alpha1.Rule)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.match_clause_ != nullptr);
      _impl_.match_clause_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.action_set_ != nullptr);
      _impl_.action_set_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.cdate_ != nullptr);
      _impl_.cdate_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.edate_ != nullptr);
      _impl_.edate_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.included_devices_ != nullptr);
      _impl_.included_devices_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.excluded_devices_ != nullptr);
      _impl_.excluded_devices_->Clear();
    }
  }
  ::memset(&_impl_.enabled_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.rank_) -
      reinterpret_cast<char*>(&_impl_.enabled_)) + sizeof(_impl_.rank_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Rule::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Rule& this_ = static_cast<const Rule&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Rule::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Rule& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.interface.v202108alpha1.Rule)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.interface.v202108alpha1.Rule.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bool enabled = 2 [json_name = "enabled"];
          if (this_._internal_enabled() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_enabled(), target);
          }

          // int32 rank = 3 [json_name = "rank"];
          if (this_._internal_rank() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_rank(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.interface.v202108alpha1.Match match_clause = 4 [json_name = "matchClause"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.match_clause_, this_._impl_.match_clause_->GetCachedSize(), target,
                stream);
          }

          // .kentik.interface.v202108alpha1.Action action_set = 5 [json_name = "actionSet"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.action_set_, this_._impl_.action_set_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp cdate = 6 [json_name = "cdate"];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.cdate_, this_._impl_.cdate_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp edate = 7 [json_name = "edate"];
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.edate_, this_._impl_.edate_->GetCachedSize(), target,
                stream);
          }

          // .kentik.interface.v202108alpha1.DeviceFilter included_devices = 8 [json_name = "includedDevices"];
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.included_devices_, this_._impl_.included_devices_->GetCachedSize(), target,
                stream);
          }

          // .kentik.interface.v202108alpha1.DeviceFilter excluded_devices = 9 [json_name = "excludedDevices"];
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.excluded_devices_, this_._impl_.excluded_devices_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.interface.v202108alpha1.Rule)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Rule::ByteSizeLong(const MessageLite& base) {
          const Rule& this_ = static_cast<const Rule&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Rule::ByteSizeLong() const {
          const Rule& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.interface.v202108alpha1.Rule)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 1 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000003fu) {
            // .kentik.interface.v202108alpha1.Match match_clause = 4 [json_name = "matchClause"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.match_clause_);
            }
            // .kentik.interface.v202108alpha1.Action action_set = 5 [json_name = "actionSet"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.action_set_);
            }
            // .google.protobuf.Timestamp cdate = 6 [json_name = "cdate"];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cdate_);
            }
            // .google.protobuf.Timestamp edate = 7 [json_name = "edate"];
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.edate_);
            }
            // .kentik.interface.v202108alpha1.DeviceFilter included_devices = 8 [json_name = "includedDevices"];
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.included_devices_);
            }
            // .kentik.interface.v202108alpha1.DeviceFilter excluded_devices = 9 [json_name = "excludedDevices"];
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.excluded_devices_);
            }
          }
           {
            // bool enabled = 2 [json_name = "enabled"];
            if (this_._internal_enabled() != 0) {
              total_size += 2;
            }
            // int32 rank = 3 [json_name = "rank"];
            if (this_._internal_rank() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_rank());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Rule::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Rule*>(&to_msg);
  auto& from = static_cast<const Rule&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.interface.v202108alpha1.Rule)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.match_clause_ != nullptr);
      if (_this->_impl_.match_clause_ == nullptr) {
        _this->_impl_.match_clause_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::Match>(arena, *from._impl_.match_clause_);
      } else {
        _this->_impl_.match_clause_->MergeFrom(*from._impl_.match_clause_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.action_set_ != nullptr);
      if (_this->_impl_.action_set_ == nullptr) {
        _this->_impl_.action_set_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::Action>(arena, *from._impl_.action_set_);
      } else {
        _this->_impl_.action_set_->MergeFrom(*from._impl_.action_set_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.cdate_ != nullptr);
      if (_this->_impl_.cdate_ == nullptr) {
        _this->_impl_.cdate_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.cdate_);
      } else {
        _this->_impl_.cdate_->MergeFrom(*from._impl_.cdate_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.edate_ != nullptr);
      if (_this->_impl_.edate_ == nullptr) {
        _this->_impl_.edate_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.edate_);
      } else {
        _this->_impl_.edate_->MergeFrom(*from._impl_.edate_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.included_devices_ != nullptr);
      if (_this->_impl_.included_devices_ == nullptr) {
        _this->_impl_.included_devices_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::DeviceFilter>(arena, *from._impl_.included_devices_);
      } else {
        _this->_impl_.included_devices_->MergeFrom(*from._impl_.included_devices_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.excluded_devices_ != nullptr);
      if (_this->_impl_.excluded_devices_ == nullptr) {
        _this->_impl_.excluded_devices_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::interface::v202108alpha1::DeviceFilter>(arena, *from._impl_.excluded_devices_);
      } else {
        _this->_impl_.excluded_devices_->MergeFrom(*from._impl_.excluded_devices_);
      }
    }
  }
  if (from._internal_enabled() != 0) {
    _this->_impl_.enabled_ = from._impl_.enabled_;
  }
  if (from._internal_rank() != 0) {
    _this->_impl_.rank_ = from._impl_.rank_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Rule::CopyFrom(const Rule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.interface.v202108alpha1.Rule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Rule::InternalSwap(Rule* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Rule, _impl_.rank_)
      + sizeof(Rule::_impl_.rank_)
      - PROTOBUF_FIELD_OFFSET(Rule, _impl_.match_clause_)>(
          reinterpret_cast<char*>(&_impl_.match_clause_),
          reinterpret_cast<char*>(&other->_impl_.match_clause_));
}

::google::protobuf::Metadata Rule::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v202108alpha1
}  // namespace interface
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_kentik_2finterface_2fv202108alpha1_2finterface_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
