// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/flow_tag/v202404alpha1/flow_tag.proto
// Protobuf C++ Version: 5.29.3

#ifndef kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto_2epb_2eh
#define kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "kentik/core/v202303/annotations.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto;
namespace kentik {
namespace flow_tag {
namespace v202404alpha1 {
class AddressInfo;
struct AddressInfoDefaultTypeInternal;
extern AddressInfoDefaultTypeInternal _AddressInfo_default_instance_;
class CreateFlowTagRequest;
struct CreateFlowTagRequestDefaultTypeInternal;
extern CreateFlowTagRequestDefaultTypeInternal _CreateFlowTagRequest_default_instance_;
class CreateFlowTagResponse;
struct CreateFlowTagResponseDefaultTypeInternal;
extern CreateFlowTagResponseDefaultTypeInternal _CreateFlowTagResponse_default_instance_;
class DeleteFlowTagRequest;
struct DeleteFlowTagRequestDefaultTypeInternal;
extern DeleteFlowTagRequestDefaultTypeInternal _DeleteFlowTagRequest_default_instance_;
class DeleteFlowTagResponse;
struct DeleteFlowTagResponseDefaultTypeInternal;
extern DeleteFlowTagResponseDefaultTypeInternal _DeleteFlowTagResponse_default_instance_;
class FlowTag;
struct FlowTagDefaultTypeInternal;
extern FlowTagDefaultTypeInternal _FlowTag_default_instance_;
class FlowTagSearch;
struct FlowTagSearchDefaultTypeInternal;
extern FlowTagSearchDefaultTypeInternal _FlowTagSearch_default_instance_;
class GetFlowTagRequest;
struct GetFlowTagRequestDefaultTypeInternal;
extern GetFlowTagRequestDefaultTypeInternal _GetFlowTagRequest_default_instance_;
class GetFlowTagResponse;
struct GetFlowTagResponseDefaultTypeInternal;
extern GetFlowTagResponseDefaultTypeInternal _GetFlowTagResponse_default_instance_;
class Model;
struct ModelDefaultTypeInternal;
extern ModelDefaultTypeInternal _Model_default_instance_;
class OrderField;
struct OrderFieldDefaultTypeInternal;
extern OrderFieldDefaultTypeInternal _OrderField_default_instance_;
class SearchFlowTagRequest;
struct SearchFlowTagRequestDefaultTypeInternal;
extern SearchFlowTagRequestDefaultTypeInternal _SearchFlowTagRequest_default_instance_;
class SearchFlowTagResponse;
struct SearchFlowTagResponseDefaultTypeInternal;
extern SearchFlowTagResponseDefaultTypeInternal _SearchFlowTagResponse_default_instance_;
class UpdateFlowTagRequest;
struct UpdateFlowTagRequestDefaultTypeInternal;
extern UpdateFlowTagRequestDefaultTypeInternal _UpdateFlowTagRequest_default_instance_;
class UpdateFlowTagResponse;
struct UpdateFlowTagResponseDefaultTypeInternal;
extern UpdateFlowTagResponseDefaultTypeInternal _UpdateFlowTagResponse_default_instance_;
}  // namespace v202404alpha1
}  // namespace flow_tag
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kentik {
namespace flow_tag {
namespace v202404alpha1 {
enum ModelType : int {
  MODEL_TYPE_UNSPECIFIED = 0,
  MODEL_TYPE_POPULATORS = 1,
  MODEL_TYPE_TAGS = 2,
  MODEL_TYPE_IP_ADDRESSES = 3,
  ModelType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ModelType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ModelType_IsValid(int value);
extern const uint32_t ModelType_internal_data_[];
constexpr ModelType ModelType_MIN = static_cast<ModelType>(0);
constexpr ModelType ModelType_MAX = static_cast<ModelType>(3);
constexpr int ModelType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
ModelType_descriptor();
template <typename T>
const std::string& ModelType_Name(T value) {
  static_assert(std::is_same<T, ModelType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ModelType_Name().");
  return ModelType_Name(static_cast<ModelType>(value));
}
template <>
inline const std::string& ModelType_Name(ModelType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ModelType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool ModelType_Parse(absl::string_view name, ModelType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ModelType>(
      ModelType_descriptor(), name, value);
}
enum LookupField : int {
  LOOKUP_FIELD_UNSPECIFIED = 0,
  LOOKUP_FIELD_VALUE = 1,
  LookupField_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  LookupField_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool LookupField_IsValid(int value);
extern const uint32_t LookupField_internal_data_[];
constexpr LookupField LookupField_MIN = static_cast<LookupField>(0);
constexpr LookupField LookupField_MAX = static_cast<LookupField>(1);
constexpr int LookupField_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
LookupField_descriptor();
template <typename T>
const std::string& LookupField_Name(T value) {
  static_assert(std::is_same<T, LookupField>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to LookupField_Name().");
  return LookupField_Name(static_cast<LookupField>(value));
}
template <>
inline const std::string& LookupField_Name(LookupField value) {
  return ::google::protobuf::internal::NameOfDenseEnum<LookupField_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool LookupField_Parse(absl::string_view name, LookupField* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LookupField>(
      LookupField_descriptor(), name, value);
}
enum OrderDirection : int {
  ORDER_DIRECTION_UNSPECIFIED = 0,
  ORDER_DIRECTION_ASC = 1,
  ORDER_DIRECTION_DESC = 2,
  OrderDirection_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  OrderDirection_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool OrderDirection_IsValid(int value);
extern const uint32_t OrderDirection_internal_data_[];
constexpr OrderDirection OrderDirection_MIN = static_cast<OrderDirection>(0);
constexpr OrderDirection OrderDirection_MAX = static_cast<OrderDirection>(2);
constexpr int OrderDirection_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
OrderDirection_descriptor();
template <typename T>
const std::string& OrderDirection_Name(T value) {
  static_assert(std::is_same<T, OrderDirection>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to OrderDirection_Name().");
  return OrderDirection_Name(static_cast<OrderDirection>(value));
}
template <>
inline const std::string& OrderDirection_Name(OrderDirection value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OrderDirection_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool OrderDirection_Parse(absl::string_view name, OrderDirection* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OrderDirection>(
      OrderDirection_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class OrderField final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.flow_tag.v202404alpha1.OrderField) */ {
 public:
  inline OrderField() : OrderField(nullptr) {}
  ~OrderField() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OrderField* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OrderField));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderField(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderField(const OrderField& from) : OrderField(nullptr, from) {}
  inline OrderField(OrderField&& from) noexcept
      : OrderField(nullptr, std::move(from)) {}
  inline OrderField& operator=(const OrderField& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderField& operator=(OrderField&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderField& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderField* internal_default_instance() {
    return reinterpret_cast<const OrderField*>(
        &_OrderField_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(OrderField& a, OrderField& b) { a.Swap(&b); }
  inline void Swap(OrderField* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderField* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderField* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OrderField>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderField& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderField& from) { OrderField::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OrderField* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.flow_tag.v202404alpha1.OrderField"; }

 protected:
  explicit OrderField(::google::protobuf::Arena* arena);
  OrderField(::google::protobuf::Arena* arena, const OrderField& from);
  OrderField(::google::protobuf::Arena* arena, OrderField&& from) noexcept
      : OrderField(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFieldFieldNumber = 1,
    kDirectionFieldNumber = 2,
  };
  // .kentik.flow_tag.v202404alpha1.LookupField field = 1 [json_name = "field"];
  void clear_field() ;
  ::kentik::flow_tag::v202404alpha1::LookupField field() const;
  void set_field(::kentik::flow_tag::v202404alpha1::LookupField value);

  private:
  ::kentik::flow_tag::v202404alpha1::LookupField _internal_field() const;
  void _internal_set_field(::kentik::flow_tag::v202404alpha1::LookupField value);

  public:
  // .kentik.flow_tag.v202404alpha1.OrderDirection direction = 2 [json_name = "direction"];
  void clear_direction() ;
  ::kentik::flow_tag::v202404alpha1::OrderDirection direction() const;
  void set_direction(::kentik::flow_tag::v202404alpha1::OrderDirection value);

  private:
  ::kentik::flow_tag::v202404alpha1::OrderDirection _internal_direction() const;
  void _internal_set_direction(::kentik::flow_tag::v202404alpha1::OrderDirection value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.flow_tag.v202404alpha1.OrderField)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrderField& from_msg);
    int field_;
    int direction_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto;
};
// -------------------------------------------------------------------

class Model final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.flow_tag.v202404alpha1.Model) */ {
 public:
  inline Model() : Model(nullptr) {}
  ~Model() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Model* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Model));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Model(
      ::google::protobuf::internal::ConstantInitialized);

  inline Model(const Model& from) : Model(nullptr, from) {}
  inline Model(Model&& from) noexcept
      : Model(nullptr, std::move(from)) {}
  inline Model& operator=(const Model& from) {
    CopyFrom(from);
    return *this;
  }
  inline Model& operator=(Model&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Model& default_instance() {
    return *internal_default_instance();
  }
  static inline const Model* internal_default_instance() {
    return reinterpret_cast<const Model*>(
        &_Model_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Model& a, Model& b) { a.Swap(&b); }
  inline void Swap(Model* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Model* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Model* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Model>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Model& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Model& from) { Model::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Model* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.flow_tag.v202404alpha1.Model"; }

 protected:
  explicit Model(::google::protobuf::Arena* arena);
  Model(::google::protobuf::Arena* arena, const Model& from);
  Model(::google::protobuf::Arena* arena, Model&& from) noexcept
      : Model(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypeFieldNumber = 1,
  };
  // .kentik.flow_tag.v202404alpha1.ModelType type = 1 [json_name = "type"];
  void clear_type() ;
  ::kentik::flow_tag::v202404alpha1::ModelType type() const;
  void set_type(::kentik::flow_tag::v202404alpha1::ModelType value);

  private:
  ::kentik::flow_tag::v202404alpha1::ModelType _internal_type() const;
  void _internal_set_type(::kentik::flow_tag::v202404alpha1::ModelType value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.flow_tag.v202404alpha1.Model)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Model& from_msg);
    int type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto;
};
// -------------------------------------------------------------------

class GetFlowTagRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.flow_tag.v202404alpha1.GetFlowTagRequest) */ {
 public:
  inline GetFlowTagRequest() : GetFlowTagRequest(nullptr) {}
  ~GetFlowTagRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetFlowTagRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetFlowTagRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetFlowTagRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetFlowTagRequest(const GetFlowTagRequest& from) : GetFlowTagRequest(nullptr, from) {}
  inline GetFlowTagRequest(GetFlowTagRequest&& from) noexcept
      : GetFlowTagRequest(nullptr, std::move(from)) {}
  inline GetFlowTagRequest& operator=(const GetFlowTagRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetFlowTagRequest& operator=(GetFlowTagRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetFlowTagRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetFlowTagRequest* internal_default_instance() {
    return reinterpret_cast<const GetFlowTagRequest*>(
        &_GetFlowTagRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(GetFlowTagRequest& a, GetFlowTagRequest& b) { a.Swap(&b); }
  inline void Swap(GetFlowTagRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetFlowTagRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetFlowTagRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetFlowTagRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetFlowTagRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetFlowTagRequest& from) { GetFlowTagRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetFlowTagRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.flow_tag.v202404alpha1.GetFlowTagRequest"; }

 protected:
  explicit GetFlowTagRequest(::google::protobuf::Arena* arena);
  GetFlowTagRequest(::google::protobuf::Arena* arena, const GetFlowTagRequest& from);
  GetFlowTagRequest(::google::protobuf::Arena* arena, GetFlowTagRequest&& from) noexcept
      : GetFlowTagRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.flow_tag.v202404alpha1.GetFlowTagRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      58, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetFlowTagRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto;
};
// -------------------------------------------------------------------

class DeleteFlowTagResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.flow_tag.v202404alpha1.DeleteFlowTagResponse) */ {
 public:
  inline DeleteFlowTagResponse() : DeleteFlowTagResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteFlowTagResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteFlowTagResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteFlowTagResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteFlowTagResponse(const DeleteFlowTagResponse& from) : DeleteFlowTagResponse(nullptr, from) {}
  inline DeleteFlowTagResponse(DeleteFlowTagResponse&& from) noexcept
      : DeleteFlowTagResponse(nullptr, std::move(from)) {}
  inline DeleteFlowTagResponse& operator=(const DeleteFlowTagResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteFlowTagResponse& operator=(DeleteFlowTagResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteFlowTagResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteFlowTagResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteFlowTagResponse*>(
        &_DeleteFlowTagResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(DeleteFlowTagResponse& a, DeleteFlowTagResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteFlowTagResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteFlowTagResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteFlowTagResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeleteFlowTagResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeleteFlowTagResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeleteFlowTagResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.flow_tag.v202404alpha1.DeleteFlowTagResponse"; }

 protected:
  explicit DeleteFlowTagResponse(::google::protobuf::Arena* arena);
  DeleteFlowTagResponse(::google::protobuf::Arena* arena, const DeleteFlowTagResponse& from);
  DeleteFlowTagResponse(::google::protobuf::Arena* arena, DeleteFlowTagResponse&& from) noexcept
      : DeleteFlowTagResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.flow_tag.v202404alpha1.DeleteFlowTagResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteFlowTagResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto;
};
// -------------------------------------------------------------------

class DeleteFlowTagRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.flow_tag.v202404alpha1.DeleteFlowTagRequest) */ {
 public:
  inline DeleteFlowTagRequest() : DeleteFlowTagRequest(nullptr) {}
  ~DeleteFlowTagRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteFlowTagRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteFlowTagRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteFlowTagRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteFlowTagRequest(const DeleteFlowTagRequest& from) : DeleteFlowTagRequest(nullptr, from) {}
  inline DeleteFlowTagRequest(DeleteFlowTagRequest&& from) noexcept
      : DeleteFlowTagRequest(nullptr, std::move(from)) {}
  inline DeleteFlowTagRequest& operator=(const DeleteFlowTagRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteFlowTagRequest& operator=(DeleteFlowTagRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteFlowTagRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteFlowTagRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteFlowTagRequest*>(
        &_DeleteFlowTagRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(DeleteFlowTagRequest& a, DeleteFlowTagRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteFlowTagRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteFlowTagRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteFlowTagRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteFlowTagRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteFlowTagRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteFlowTagRequest& from) { DeleteFlowTagRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteFlowTagRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.flow_tag.v202404alpha1.DeleteFlowTagRequest"; }

 protected:
  explicit DeleteFlowTagRequest(::google::protobuf::Arena* arena);
  DeleteFlowTagRequest(::google::protobuf::Arena* arena, const DeleteFlowTagRequest& from);
  DeleteFlowTagRequest(::google::protobuf::Arena* arena, DeleteFlowTagRequest&& from) noexcept
      : DeleteFlowTagRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.flow_tag.v202404alpha1.DeleteFlowTagRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteFlowTagRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto;
};
// -------------------------------------------------------------------

class AddressInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.flow_tag.v202404alpha1.AddressInfo) */ {
 public:
  inline AddressInfo() : AddressInfo(nullptr) {}
  ~AddressInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddressInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddressInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddressInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddressInfo(const AddressInfo& from) : AddressInfo(nullptr, from) {}
  inline AddressInfo(AddressInfo&& from) noexcept
      : AddressInfo(nullptr, std::move(from)) {}
  inline AddressInfo& operator=(const AddressInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddressInfo& operator=(AddressInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddressInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddressInfo* internal_default_instance() {
    return reinterpret_cast<const AddressInfo*>(
        &_AddressInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(AddressInfo& a, AddressInfo& b) { a.Swap(&b); }
  inline void Swap(AddressInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddressInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddressInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddressInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddressInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddressInfo& from) { AddressInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddressInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.flow_tag.v202404alpha1.AddressInfo"; }

 protected:
  explicit AddressInfo(::google::protobuf::Arena* arena);
  AddressInfo(::google::protobuf::Arena* arena, const AddressInfo& from);
  AddressInfo(::google::protobuf::Arena* arena, AddressInfo&& from) noexcept
      : AddressInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressesFieldNumber = 1,
    kTotalCountFieldNumber = 2,
  };
  // repeated string addresses = 1 [json_name = "addresses"];
  int addresses_size() const;
  private:
  int _internal_addresses_size() const;

  public:
  void clear_addresses() ;
  const std::string& addresses(int index) const;
  std::string* mutable_addresses(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_addresses(int index, Arg_&& value, Args_... args);
  std::string* add_addresses();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_addresses(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& addresses() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_addresses();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_addresses() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_addresses();

  public:
  // int32 total_count = 2 [json_name = "totalCount"];
  void clear_total_count() ;
  ::int32_t total_count() const;
  void set_total_count(::int32_t value);

  private:
  ::int32_t _internal_total_count() const;
  void _internal_set_total_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.flow_tag.v202404alpha1.AddressInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      59, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddressInfo& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> addresses_;
    ::int32_t total_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto;
};
// -------------------------------------------------------------------

class FlowTagSearch final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.flow_tag.v202404alpha1.FlowTagSearch) */ {
 public:
  inline FlowTagSearch() : FlowTagSearch(nullptr) {}
  ~FlowTagSearch() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FlowTagSearch* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FlowTagSearch));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FlowTagSearch(
      ::google::protobuf::internal::ConstantInitialized);

  inline FlowTagSearch(const FlowTagSearch& from) : FlowTagSearch(nullptr, from) {}
  inline FlowTagSearch(FlowTagSearch&& from) noexcept
      : FlowTagSearch(nullptr, std::move(from)) {}
  inline FlowTagSearch& operator=(const FlowTagSearch& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlowTagSearch& operator=(FlowTagSearch&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlowTagSearch& default_instance() {
    return *internal_default_instance();
  }
  static inline const FlowTagSearch* internal_default_instance() {
    return reinterpret_cast<const FlowTagSearch*>(
        &_FlowTagSearch_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(FlowTagSearch& a, FlowTagSearch& b) { a.Swap(&b); }
  inline void Swap(FlowTagSearch* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlowTagSearch* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FlowTagSearch* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FlowTagSearch>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FlowTagSearch& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FlowTagSearch& from) { FlowTagSearch::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FlowTagSearch* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.flow_tag.v202404alpha1.FlowTagSearch"; }

 protected:
  explicit FlowTagSearch(::google::protobuf::Arena* arena);
  FlowTagSearch(::google::protobuf::Arena* arena, const FlowTagSearch& from);
  FlowTagSearch(::google::protobuf::Arena* arena, FlowTagSearch&& from) noexcept
      : FlowTagSearch(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLookupFieldsFieldNumber = 3,
    kLookupValuesFieldNumber = 4,
    kOrderByFieldNumber = 5,
    kLimitFieldNumber = 1,
    kOffsetFieldNumber = 2,
    kFieldLimitFieldNumber = 6,
  };
  // repeated .kentik.flow_tag.v202404alpha1.LookupField lookup_fields = 3 [json_name = "lookupFields"];
  int lookup_fields_size() const;
  private:
  int _internal_lookup_fields_size() const;

  public:
  void clear_lookup_fields() ;
  public:
  ::kentik::flow_tag::v202404alpha1::LookupField lookup_fields(int index) const;
  void set_lookup_fields(int index, ::kentik::flow_tag::v202404alpha1::LookupField value);
  void add_lookup_fields(::kentik::flow_tag::v202404alpha1::LookupField value);
  const ::google::protobuf::RepeatedField<int>& lookup_fields() const;
  ::google::protobuf::RepeatedField<int>* mutable_lookup_fields();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_lookup_fields() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_lookup_fields();

  public:
  // repeated string lookup_values = 4 [json_name = "lookupValues"];
  int lookup_values_size() const;
  private:
  int _internal_lookup_values_size() const;

  public:
  void clear_lookup_values() ;
  const std::string& lookup_values(int index) const;
  std::string* mutable_lookup_values(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lookup_values(int index, Arg_&& value, Args_... args);
  std::string* add_lookup_values();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_lookup_values(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& lookup_values() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_lookup_values();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_lookup_values() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_lookup_values();

  public:
  // repeated .kentik.flow_tag.v202404alpha1.OrderField order_by = 5 [json_name = "orderBy"];
  int order_by_size() const;
  private:
  int _internal_order_by_size() const;

  public:
  void clear_order_by() ;
  ::kentik::flow_tag::v202404alpha1::OrderField* mutable_order_by(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::flow_tag::v202404alpha1::OrderField>* mutable_order_by();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::flow_tag::v202404alpha1::OrderField>& _internal_order_by() const;
  ::google::protobuf::RepeatedPtrField<::kentik::flow_tag::v202404alpha1::OrderField>* _internal_mutable_order_by();
  public:
  const ::kentik::flow_tag::v202404alpha1::OrderField& order_by(int index) const;
  ::kentik::flow_tag::v202404alpha1::OrderField* add_order_by();
  const ::google::protobuf::RepeatedPtrField<::kentik::flow_tag::v202404alpha1::OrderField>& order_by() const;
  // int32 limit = 1 [json_name = "limit"];
  void clear_limit() ;
  ::int32_t limit() const;
  void set_limit(::int32_t value);

  private:
  ::int32_t _internal_limit() const;
  void _internal_set_limit(::int32_t value);

  public:
  // int32 offset = 2 [json_name = "offset"];
  void clear_offset() ;
  ::int32_t offset() const;
  void set_offset(::int32_t value);

  private:
  ::int32_t _internal_offset() const;
  void _internal_set_offset(::int32_t value);

  public:
  // int32 field_limit = 6 [json_name = "fieldLimit"];
  void clear_field_limit() ;
  ::int32_t field_limit() const;
  void set_field_limit(::int32_t value);

  private:
  ::int32_t _internal_field_limit() const;
  void _internal_set_field_limit(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.flow_tag.v202404alpha1.FlowTagSearch)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      65, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FlowTagSearch& from_msg);
    ::google::protobuf::RepeatedField<int> lookup_fields_;
    ::google::protobuf::internal::CachedSize _lookup_fields_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField<std::string> lookup_values_;
    ::google::protobuf::RepeatedPtrField< ::kentik::flow_tag::v202404alpha1::OrderField > order_by_;
    ::int32_t limit_;
    ::int32_t offset_;
    ::int32_t field_limit_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto;
};
// -------------------------------------------------------------------

class FlowTag final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.flow_tag.v202404alpha1.FlowTag) */ {
 public:
  inline FlowTag() : FlowTag(nullptr) {}
  ~FlowTag() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FlowTag* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FlowTag));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FlowTag(
      ::google::protobuf::internal::ConstantInitialized);

  inline FlowTag(const FlowTag& from) : FlowTag(nullptr, from) {}
  inline FlowTag(FlowTag&& from) noexcept
      : FlowTag(nullptr, std::move(from)) {}
  inline FlowTag& operator=(const FlowTag& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlowTag& operator=(FlowTag&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlowTag& default_instance() {
    return *internal_default_instance();
  }
  static inline const FlowTag* internal_default_instance() {
    return reinterpret_cast<const FlowTag*>(
        &_FlowTag_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(FlowTag& a, FlowTag& b) { a.Swap(&b); }
  inline void Swap(FlowTag* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlowTag* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FlowTag* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FlowTag>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FlowTag& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FlowTag& from) { FlowTag::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FlowTag* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.flow_tag.v202404alpha1.FlowTag"; }

 protected:
  explicit FlowTag(::google::protobuf::Arena* arena);
  FlowTag(::google::protobuf::Arena* arena, const FlowTag& from);
  FlowTag(::google::protobuf::Arena* arena, FlowTag&& from) noexcept
      : FlowTag(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPortFieldNumber = 8,
    kProtocolFieldNumber = 10,
    kDeviceNameFieldNumber = 11,
    kDeviceTypeFieldNumber = 12,
    kSiteFieldNumber = 13,
    kInterfaceNameFieldNumber = 14,
    kAsnFieldNumber = 15,
    kLasthopAsNameFieldNumber = 16,
    kNexthopAsnFieldNumber = 17,
    kNexthopAsNameFieldNumber = 18,
    kNexthopFieldNumber = 19,
    kBgpAspathFieldNumber = 20,
    kBgpCommunityFieldNumber = 21,
    kCountryFieldNumber = 23,
    kVlansFieldNumber = 24,
    kIdFieldNumber = 1,
    kNameFieldNumber = 3,
    kEditedByFieldNumber = 4,
    kCreatedByFieldNumber = 25,
    kCdateFieldNumber = 5,
    kEdateFieldNumber = 6,
    kIpFieldNumber = 7,
    kMacFieldNumber = 22,
    kTcpFlagsFieldNumber = 9,
  };
  // repeated string port = 8 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int port_size() const;
  private:
  int _internal_port_size() const;

  public:
  void clear_port() ;
  const std::string& port(int index) const;
  std::string* mutable_port(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_port(int index, Arg_&& value, Args_... args);
  std::string* add_port();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_port(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& port() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_port();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_port() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_port();

  public:
  // repeated uint32 protocol = 10 [json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int protocol_size() const;
  private:
  int _internal_protocol_size() const;

  public:
  void clear_protocol() ;
  ::uint32_t protocol(int index) const;
  void set_protocol(int index, ::uint32_t value);
  void add_protocol(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& protocol() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_protocol();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_protocol() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_protocol();

  public:
  // repeated string device_name = 11 [json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int device_name_size() const;
  private:
  int _internal_device_name_size() const;

  public:
  void clear_device_name() ;
  const std::string& device_name(int index) const;
  std::string* mutable_device_name(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_name(int index, Arg_&& value, Args_... args);
  std::string* add_device_name();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_device_name(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& device_name() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_device_name();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_device_name() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_device_name();

  public:
  // repeated string device_type = 12 [json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int device_type_size() const;
  private:
  int _internal_device_type_size() const;

  public:
  void clear_device_type() ;
  const std::string& device_type(int index) const;
  std::string* mutable_device_type(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_type(int index, Arg_&& value, Args_... args);
  std::string* add_device_type();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_device_type(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& device_type() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_device_type();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_device_type() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_device_type();

  public:
  // repeated string site = 13 [json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int site_size() const;
  private:
  int _internal_site_size() const;

  public:
  void clear_site() ;
  const std::string& site(int index) const;
  std::string* mutable_site(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_site(int index, Arg_&& value, Args_... args);
  std::string* add_site();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_site(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& site() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_site();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_site() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_site();

  public:
  // repeated string interface_name = 14 [json_name = "interfaceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int interface_name_size() const;
  private:
  int _internal_interface_name_size() const;

  public:
  void clear_interface_name() ;
  const std::string& interface_name(int index) const;
  std::string* mutable_interface_name(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_interface_name(int index, Arg_&& value, Args_... args);
  std::string* add_interface_name();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_interface_name(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& interface_name() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_interface_name();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_interface_name() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_interface_name();

  public:
  // repeated string asn = 15 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int asn_size() const;
  private:
  int _internal_asn_size() const;

  public:
  void clear_asn() ;
  const std::string& asn(int index) const;
  std::string* mutable_asn(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_asn(int index, Arg_&& value, Args_... args);
  std::string* add_asn();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_asn(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& asn() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_asn();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_asn() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_asn();

  public:
  // repeated string lasthop_as_name = 16 [json_name = "lasthopAsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int lasthop_as_name_size() const;
  private:
  int _internal_lasthop_as_name_size() const;

  public:
  void clear_lasthop_as_name() ;
  const std::string& lasthop_as_name(int index) const;
  std::string* mutable_lasthop_as_name(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lasthop_as_name(int index, Arg_&& value, Args_... args);
  std::string* add_lasthop_as_name();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_lasthop_as_name(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& lasthop_as_name() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_lasthop_as_name();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_lasthop_as_name() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_lasthop_as_name();

  public:
  // repeated string nexthop_asn = 17 [json_name = "nexthopAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int nexthop_asn_size() const;
  private:
  int _internal_nexthop_asn_size() const;

  public:
  void clear_nexthop_asn() ;
  const std::string& nexthop_asn(int index) const;
  std::string* mutable_nexthop_asn(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nexthop_asn(int index, Arg_&& value, Args_... args);
  std::string* add_nexthop_asn();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_nexthop_asn(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& nexthop_asn() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_nexthop_asn();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_nexthop_asn() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_nexthop_asn();

  public:
  // repeated string nexthop_as_name = 18 [json_name = "nexthopAsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int nexthop_as_name_size() const;
  private:
  int _internal_nexthop_as_name_size() const;

  public:
  void clear_nexthop_as_name() ;
  const std::string& nexthop_as_name(int index) const;
  std::string* mutable_nexthop_as_name(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nexthop_as_name(int index, Arg_&& value, Args_... args);
  std::string* add_nexthop_as_name();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_nexthop_as_name(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& nexthop_as_name() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_nexthop_as_name();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_nexthop_as_name() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_nexthop_as_name();

  public:
  // repeated string nexthop = 19 [json_name = "nexthop", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int nexthop_size() const;
  private:
  int _internal_nexthop_size() const;

  public:
  void clear_nexthop() ;
  const std::string& nexthop(int index) const;
  std::string* mutable_nexthop(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nexthop(int index, Arg_&& value, Args_... args);
  std::string* add_nexthop();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_nexthop(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& nexthop() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_nexthop();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_nexthop() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_nexthop();

  public:
  // repeated string bgp_aspath = 20 [json_name = "bgpAspath", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int bgp_aspath_size() const;
  private:
  int _internal_bgp_aspath_size() const;

  public:
  void clear_bgp_aspath() ;
  const std::string& bgp_aspath(int index) const;
  std::string* mutable_bgp_aspath(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bgp_aspath(int index, Arg_&& value, Args_... args);
  std::string* add_bgp_aspath();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_bgp_aspath(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& bgp_aspath() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_bgp_aspath();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_bgp_aspath() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_bgp_aspath();

  public:
  // repeated string bgp_community = 21 [json_name = "bgpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int bgp_community_size() const;
  private:
  int _internal_bgp_community_size() const;

  public:
  void clear_bgp_community() ;
  const std::string& bgp_community(int index) const;
  std::string* mutable_bgp_community(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bgp_community(int index, Arg_&& value, Args_... args);
  std::string* add_bgp_community();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_bgp_community(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& bgp_community() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_bgp_community();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_bgp_community() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_bgp_community();

  public:
  // repeated string country = 23 [json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int country_size() const;
  private:
  int _internal_country_size() const;

  public:
  void clear_country() ;
  const std::string& country(int index) const;
  std::string* mutable_country(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_country(int index, Arg_&& value, Args_... args);
  std::string* add_country();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_country(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& country() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_country();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_country() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_country();

  public:
  // repeated string vlans = 24 [json_name = "vlans", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int vlans_size() const;
  private:
  int _internal_vlans_size() const;

  public:
  void clear_vlans() ;
  const std::string& vlans(int index) const;
  std::string* mutable_vlans(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_vlans(int index, Arg_&& value, Args_... args);
  std::string* add_vlans();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_vlans(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& vlans() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_vlans();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_vlans() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_vlans();

  public:
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string name = 3 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string edited_by = 4 [json_name = "editedBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_edited_by() ;
  const std::string& edited_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_edited_by(Arg_&& arg, Args_... args);
  std::string* mutable_edited_by();
  PROTOBUF_NODISCARD std::string* release_edited_by();
  void set_allocated_edited_by(std::string* value);

  private:
  const std::string& _internal_edited_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_edited_by(
      const std::string& value);
  std::string* _internal_mutable_edited_by();

  public:
  // string created_by = 25 [json_name = "createdBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_created_by() ;
  const std::string& created_by() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_created_by(Arg_&& arg, Args_... args);
  std::string* mutable_created_by();
  PROTOBUF_NODISCARD std::string* release_created_by();
  void set_allocated_created_by(std::string* value);

  private:
  const std::string& _internal_created_by() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_created_by(
      const std::string& value);
  std::string* _internal_mutable_created_by();

  public:
  // .google.protobuf.Timestamp cdate = 5 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_cdate() const;
  void clear_cdate() ;
  const ::google::protobuf::Timestamp& cdate() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_cdate();
  ::google::protobuf::Timestamp* mutable_cdate();
  void set_allocated_cdate(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_cdate(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_cdate();

  private:
  const ::google::protobuf::Timestamp& _internal_cdate() const;
  ::google::protobuf::Timestamp* _internal_mutable_cdate();

  public:
  // .google.protobuf.Timestamp edate = 6 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_edate() const;
  void clear_edate() ;
  const ::google::protobuf::Timestamp& edate() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_edate();
  ::google::protobuf::Timestamp* mutable_edate();
  void set_allocated_edate(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_edate(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_edate();

  private:
  const ::google::protobuf::Timestamp& _internal_edate() const;
  ::google::protobuf::Timestamp* _internal_mutable_edate();

  public:
  // .kentik.flow_tag.v202404alpha1.AddressInfo ip = 7 [json_name = "ip", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_ip() const;
  void clear_ip() ;
  const ::kentik::flow_tag::v202404alpha1::AddressInfo& ip() const;
  PROTOBUF_NODISCARD ::kentik::flow_tag::v202404alpha1::AddressInfo* release_ip();
  ::kentik::flow_tag::v202404alpha1::AddressInfo* mutable_ip();
  void set_allocated_ip(::kentik::flow_tag::v202404alpha1::AddressInfo* value);
  void unsafe_arena_set_allocated_ip(::kentik::flow_tag::v202404alpha1::AddressInfo* value);
  ::kentik::flow_tag::v202404alpha1::AddressInfo* unsafe_arena_release_ip();

  private:
  const ::kentik::flow_tag::v202404alpha1::AddressInfo& _internal_ip() const;
  ::kentik::flow_tag::v202404alpha1::AddressInfo* _internal_mutable_ip();

  public:
  // .kentik.flow_tag.v202404alpha1.AddressInfo mac = 22 [json_name = "mac", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_mac() const;
  void clear_mac() ;
  const ::kentik::flow_tag::v202404alpha1::AddressInfo& mac() const;
  PROTOBUF_NODISCARD ::kentik::flow_tag::v202404alpha1::AddressInfo* release_mac();
  ::kentik::flow_tag::v202404alpha1::AddressInfo* mutable_mac();
  void set_allocated_mac(::kentik::flow_tag::v202404alpha1::AddressInfo* value);
  void unsafe_arena_set_allocated_mac(::kentik::flow_tag::v202404alpha1::AddressInfo* value);
  ::kentik::flow_tag::v202404alpha1::AddressInfo* unsafe_arena_release_mac();

  private:
  const ::kentik::flow_tag::v202404alpha1::AddressInfo& _internal_mac() const;
  ::kentik::flow_tag::v202404alpha1::AddressInfo* _internal_mutable_mac();

  public:
  // uint32 tcp_flags = 9 [json_name = "tcpFlags", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_tcp_flags() ;
  ::uint32_t tcp_flags() const;
  void set_tcp_flags(::uint32_t value);

  private:
  ::uint32_t _internal_tcp_flags() const;
  void _internal_set_tcp_flags(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.flow_tag.v202404alpha1.FlowTag)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 24, 4,
      225, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FlowTag& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> port_;
    ::google::protobuf::RepeatedField<::uint32_t> protocol_;
    ::google::protobuf::internal::CachedSize _protocol_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField<std::string> device_name_;
    ::google::protobuf::RepeatedPtrField<std::string> device_type_;
    ::google::protobuf::RepeatedPtrField<std::string> site_;
    ::google::protobuf::RepeatedPtrField<std::string> interface_name_;
    ::google::protobuf::RepeatedPtrField<std::string> asn_;
    ::google::protobuf::RepeatedPtrField<std::string> lasthop_as_name_;
    ::google::protobuf::RepeatedPtrField<std::string> nexthop_asn_;
    ::google::protobuf::RepeatedPtrField<std::string> nexthop_as_name_;
    ::google::protobuf::RepeatedPtrField<std::string> nexthop_;
    ::google::protobuf::RepeatedPtrField<std::string> bgp_aspath_;
    ::google::protobuf::RepeatedPtrField<std::string> bgp_community_;
    ::google::protobuf::RepeatedPtrField<std::string> country_;
    ::google::protobuf::RepeatedPtrField<std::string> vlans_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr edited_by_;
    ::google::protobuf::internal::ArenaStringPtr created_by_;
    ::google::protobuf::Timestamp* cdate_;
    ::google::protobuf::Timestamp* edate_;
    ::kentik::flow_tag::v202404alpha1::AddressInfo* ip_;
    ::kentik::flow_tag::v202404alpha1::AddressInfo* mac_;
    ::uint32_t tcp_flags_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto;
};
// -------------------------------------------------------------------

class UpdateFlowTagResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.flow_tag.v202404alpha1.UpdateFlowTagResponse) */ {
 public:
  inline UpdateFlowTagResponse() : UpdateFlowTagResponse(nullptr) {}
  ~UpdateFlowTagResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateFlowTagResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateFlowTagResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateFlowTagResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateFlowTagResponse(const UpdateFlowTagResponse& from) : UpdateFlowTagResponse(nullptr, from) {}
  inline UpdateFlowTagResponse(UpdateFlowTagResponse&& from) noexcept
      : UpdateFlowTagResponse(nullptr, std::move(from)) {}
  inline UpdateFlowTagResponse& operator=(const UpdateFlowTagResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateFlowTagResponse& operator=(UpdateFlowTagResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateFlowTagResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateFlowTagResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateFlowTagResponse*>(
        &_UpdateFlowTagResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(UpdateFlowTagResponse& a, UpdateFlowTagResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateFlowTagResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateFlowTagResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateFlowTagResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateFlowTagResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateFlowTagResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateFlowTagResponse& from) { UpdateFlowTagResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateFlowTagResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.flow_tag.v202404alpha1.UpdateFlowTagResponse"; }

 protected:
  explicit UpdateFlowTagResponse(::google::protobuf::Arena* arena);
  UpdateFlowTagResponse(::google::protobuf::Arena* arena, const UpdateFlowTagResponse& from);
  UpdateFlowTagResponse(::google::protobuf::Arena* arena, UpdateFlowTagResponse&& from) noexcept
      : UpdateFlowTagResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFlowTagFieldNumber = 1,
  };
  // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
  bool has_flow_tag() const;
  void clear_flow_tag() ;
  const ::kentik::flow_tag::v202404alpha1::FlowTag& flow_tag() const;
  PROTOBUF_NODISCARD ::kentik::flow_tag::v202404alpha1::FlowTag* release_flow_tag();
  ::kentik::flow_tag::v202404alpha1::FlowTag* mutable_flow_tag();
  void set_allocated_flow_tag(::kentik::flow_tag::v202404alpha1::FlowTag* value);
  void unsafe_arena_set_allocated_flow_tag(::kentik::flow_tag::v202404alpha1::FlowTag* value);
  ::kentik::flow_tag::v202404alpha1::FlowTag* unsafe_arena_release_flow_tag();

  private:
  const ::kentik::flow_tag::v202404alpha1::FlowTag& _internal_flow_tag() const;
  ::kentik::flow_tag::v202404alpha1::FlowTag* _internal_mutable_flow_tag();

  public:
  // @@protoc_insertion_point(class_scope:kentik.flow_tag.v202404alpha1.UpdateFlowTagResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateFlowTagResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::flow_tag::v202404alpha1::FlowTag* flow_tag_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto;
};
// -------------------------------------------------------------------

class UpdateFlowTagRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.flow_tag.v202404alpha1.UpdateFlowTagRequest) */ {
 public:
  inline UpdateFlowTagRequest() : UpdateFlowTagRequest(nullptr) {}
  ~UpdateFlowTagRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateFlowTagRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateFlowTagRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateFlowTagRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateFlowTagRequest(const UpdateFlowTagRequest& from) : UpdateFlowTagRequest(nullptr, from) {}
  inline UpdateFlowTagRequest(UpdateFlowTagRequest&& from) noexcept
      : UpdateFlowTagRequest(nullptr, std::move(from)) {}
  inline UpdateFlowTagRequest& operator=(const UpdateFlowTagRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateFlowTagRequest& operator=(UpdateFlowTagRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateFlowTagRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateFlowTagRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateFlowTagRequest*>(
        &_UpdateFlowTagRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(UpdateFlowTagRequest& a, UpdateFlowTagRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateFlowTagRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateFlowTagRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateFlowTagRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateFlowTagRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateFlowTagRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateFlowTagRequest& from) { UpdateFlowTagRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateFlowTagRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.flow_tag.v202404alpha1.UpdateFlowTagRequest"; }

 protected:
  explicit UpdateFlowTagRequest(::google::protobuf::Arena* arena);
  UpdateFlowTagRequest(::google::protobuf::Arena* arena, const UpdateFlowTagRequest& from);
  UpdateFlowTagRequest(::google::protobuf::Arena* arena, UpdateFlowTagRequest&& from) noexcept
      : UpdateFlowTagRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFlowTagFieldNumber = 1,
  };
  // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
  bool has_flow_tag() const;
  void clear_flow_tag() ;
  const ::kentik::flow_tag::v202404alpha1::FlowTag& flow_tag() const;
  PROTOBUF_NODISCARD ::kentik::flow_tag::v202404alpha1::FlowTag* release_flow_tag();
  ::kentik::flow_tag::v202404alpha1::FlowTag* mutable_flow_tag();
  void set_allocated_flow_tag(::kentik::flow_tag::v202404alpha1::FlowTag* value);
  void unsafe_arena_set_allocated_flow_tag(::kentik::flow_tag::v202404alpha1::FlowTag* value);
  ::kentik::flow_tag::v202404alpha1::FlowTag* unsafe_arena_release_flow_tag();

  private:
  const ::kentik::flow_tag::v202404alpha1::FlowTag& _internal_flow_tag() const;
  ::kentik::flow_tag::v202404alpha1::FlowTag* _internal_mutable_flow_tag();

  public:
  // @@protoc_insertion_point(class_scope:kentik.flow_tag.v202404alpha1.UpdateFlowTagRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateFlowTagRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::flow_tag::v202404alpha1::FlowTag* flow_tag_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto;
};
// -------------------------------------------------------------------

class SearchFlowTagResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.flow_tag.v202404alpha1.SearchFlowTagResponse) */ {
 public:
  inline SearchFlowTagResponse() : SearchFlowTagResponse(nullptr) {}
  ~SearchFlowTagResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SearchFlowTagResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SearchFlowTagResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SearchFlowTagResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SearchFlowTagResponse(const SearchFlowTagResponse& from) : SearchFlowTagResponse(nullptr, from) {}
  inline SearchFlowTagResponse(SearchFlowTagResponse&& from) noexcept
      : SearchFlowTagResponse(nullptr, std::move(from)) {}
  inline SearchFlowTagResponse& operator=(const SearchFlowTagResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SearchFlowTagResponse& operator=(SearchFlowTagResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SearchFlowTagResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SearchFlowTagResponse* internal_default_instance() {
    return reinterpret_cast<const SearchFlowTagResponse*>(
        &_SearchFlowTagResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(SearchFlowTagResponse& a, SearchFlowTagResponse& b) { a.Swap(&b); }
  inline void Swap(SearchFlowTagResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SearchFlowTagResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SearchFlowTagResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SearchFlowTagResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SearchFlowTagResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SearchFlowTagResponse& from) { SearchFlowTagResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SearchFlowTagResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.flow_tag.v202404alpha1.SearchFlowTagResponse"; }

 protected:
  explicit SearchFlowTagResponse(::google::protobuf::Arena* arena);
  SearchFlowTagResponse(::google::protobuf::Arena* arena, const SearchFlowTagResponse& from);
  SearchFlowTagResponse(::google::protobuf::Arena* arena, SearchFlowTagResponse&& from) noexcept
      : SearchFlowTagResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFlowTagsFieldNumber = 1,
    kTotalCountFieldNumber = 2,
    kInvalidCountFieldNumber = 3,
  };
  // repeated .kentik.flow_tag.v202404alpha1.FlowTag flow_tags = 1 [json_name = "flowTags"];
  int flow_tags_size() const;
  private:
  int _internal_flow_tags_size() const;

  public:
  void clear_flow_tags() ;
  ::kentik::flow_tag::v202404alpha1::FlowTag* mutable_flow_tags(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::flow_tag::v202404alpha1::FlowTag>* mutable_flow_tags();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::flow_tag::v202404alpha1::FlowTag>& _internal_flow_tags() const;
  ::google::protobuf::RepeatedPtrField<::kentik::flow_tag::v202404alpha1::FlowTag>* _internal_mutable_flow_tags();
  public:
  const ::kentik::flow_tag::v202404alpha1::FlowTag& flow_tags(int index) const;
  ::kentik::flow_tag::v202404alpha1::FlowTag* add_flow_tags();
  const ::google::protobuf::RepeatedPtrField<::kentik::flow_tag::v202404alpha1::FlowTag>& flow_tags() const;
  // uint32 total_count = 2 [json_name = "totalCount"];
  void clear_total_count() ;
  ::uint32_t total_count() const;
  void set_total_count(::uint32_t value);

  private:
  ::uint32_t _internal_total_count() const;
  void _internal_set_total_count(::uint32_t value);

  public:
  // uint32 invalid_count = 3 [json_name = "invalidCount"];
  void clear_invalid_count() ;
  ::uint32_t invalid_count() const;
  void set_invalid_count(::uint32_t value);

  private:
  ::uint32_t _internal_invalid_count() const;
  void _internal_set_invalid_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.flow_tag.v202404alpha1.SearchFlowTagResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SearchFlowTagResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::flow_tag::v202404alpha1::FlowTag > flow_tags_;
    ::uint32_t total_count_;
    ::uint32_t invalid_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto;
};
// -------------------------------------------------------------------

class SearchFlowTagRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.flow_tag.v202404alpha1.SearchFlowTagRequest) */ {
 public:
  inline SearchFlowTagRequest() : SearchFlowTagRequest(nullptr) {}
  ~SearchFlowTagRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SearchFlowTagRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SearchFlowTagRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SearchFlowTagRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SearchFlowTagRequest(const SearchFlowTagRequest& from) : SearchFlowTagRequest(nullptr, from) {}
  inline SearchFlowTagRequest(SearchFlowTagRequest&& from) noexcept
      : SearchFlowTagRequest(nullptr, std::move(from)) {}
  inline SearchFlowTagRequest& operator=(const SearchFlowTagRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SearchFlowTagRequest& operator=(SearchFlowTagRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SearchFlowTagRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SearchFlowTagRequest* internal_default_instance() {
    return reinterpret_cast<const SearchFlowTagRequest*>(
        &_SearchFlowTagRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(SearchFlowTagRequest& a, SearchFlowTagRequest& b) { a.Swap(&b); }
  inline void Swap(SearchFlowTagRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SearchFlowTagRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SearchFlowTagRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SearchFlowTagRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SearchFlowTagRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SearchFlowTagRequest& from) { SearchFlowTagRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SearchFlowTagRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.flow_tag.v202404alpha1.SearchFlowTagRequest"; }

 protected:
  explicit SearchFlowTagRequest(::google::protobuf::Arena* arena);
  SearchFlowTagRequest(::google::protobuf::Arena* arena, const SearchFlowTagRequest& from);
  SearchFlowTagRequest(::google::protobuf::Arena* arena, SearchFlowTagRequest&& from) noexcept
      : SearchFlowTagRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSearchFieldNumber = 1,
  };
  // .kentik.flow_tag.v202404alpha1.FlowTagSearch search = 1 [json_name = "search"];
  bool has_search() const;
  void clear_search() ;
  const ::kentik::flow_tag::v202404alpha1::FlowTagSearch& search() const;
  PROTOBUF_NODISCARD ::kentik::flow_tag::v202404alpha1::FlowTagSearch* release_search();
  ::kentik::flow_tag::v202404alpha1::FlowTagSearch* mutable_search();
  void set_allocated_search(::kentik::flow_tag::v202404alpha1::FlowTagSearch* value);
  void unsafe_arena_set_allocated_search(::kentik::flow_tag::v202404alpha1::FlowTagSearch* value);
  ::kentik::flow_tag::v202404alpha1::FlowTagSearch* unsafe_arena_release_search();

  private:
  const ::kentik::flow_tag::v202404alpha1::FlowTagSearch& _internal_search() const;
  ::kentik::flow_tag::v202404alpha1::FlowTagSearch* _internal_mutable_search();

  public:
  // @@protoc_insertion_point(class_scope:kentik.flow_tag.v202404alpha1.SearchFlowTagRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SearchFlowTagRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::flow_tag::v202404alpha1::FlowTagSearch* search_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto;
};
// -------------------------------------------------------------------

class GetFlowTagResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.flow_tag.v202404alpha1.GetFlowTagResponse) */ {
 public:
  inline GetFlowTagResponse() : GetFlowTagResponse(nullptr) {}
  ~GetFlowTagResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetFlowTagResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetFlowTagResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetFlowTagResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetFlowTagResponse(const GetFlowTagResponse& from) : GetFlowTagResponse(nullptr, from) {}
  inline GetFlowTagResponse(GetFlowTagResponse&& from) noexcept
      : GetFlowTagResponse(nullptr, std::move(from)) {}
  inline GetFlowTagResponse& operator=(const GetFlowTagResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetFlowTagResponse& operator=(GetFlowTagResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetFlowTagResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetFlowTagResponse* internal_default_instance() {
    return reinterpret_cast<const GetFlowTagResponse*>(
        &_GetFlowTagResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(GetFlowTagResponse& a, GetFlowTagResponse& b) { a.Swap(&b); }
  inline void Swap(GetFlowTagResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetFlowTagResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetFlowTagResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetFlowTagResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetFlowTagResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetFlowTagResponse& from) { GetFlowTagResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetFlowTagResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.flow_tag.v202404alpha1.GetFlowTagResponse"; }

 protected:
  explicit GetFlowTagResponse(::google::protobuf::Arena* arena);
  GetFlowTagResponse(::google::protobuf::Arena* arena, const GetFlowTagResponse& from);
  GetFlowTagResponse(::google::protobuf::Arena* arena, GetFlowTagResponse&& from) noexcept
      : GetFlowTagResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFlowTagFieldNumber = 1,
  };
  // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
  bool has_flow_tag() const;
  void clear_flow_tag() ;
  const ::kentik::flow_tag::v202404alpha1::FlowTag& flow_tag() const;
  PROTOBUF_NODISCARD ::kentik::flow_tag::v202404alpha1::FlowTag* release_flow_tag();
  ::kentik::flow_tag::v202404alpha1::FlowTag* mutable_flow_tag();
  void set_allocated_flow_tag(::kentik::flow_tag::v202404alpha1::FlowTag* value);
  void unsafe_arena_set_allocated_flow_tag(::kentik::flow_tag::v202404alpha1::FlowTag* value);
  ::kentik::flow_tag::v202404alpha1::FlowTag* unsafe_arena_release_flow_tag();

  private:
  const ::kentik::flow_tag::v202404alpha1::FlowTag& _internal_flow_tag() const;
  ::kentik::flow_tag::v202404alpha1::FlowTag* _internal_mutable_flow_tag();

  public:
  // @@protoc_insertion_point(class_scope:kentik.flow_tag.v202404alpha1.GetFlowTagResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetFlowTagResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::flow_tag::v202404alpha1::FlowTag* flow_tag_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto;
};
// -------------------------------------------------------------------

class CreateFlowTagResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.flow_tag.v202404alpha1.CreateFlowTagResponse) */ {
 public:
  inline CreateFlowTagResponse() : CreateFlowTagResponse(nullptr) {}
  ~CreateFlowTagResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateFlowTagResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateFlowTagResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateFlowTagResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateFlowTagResponse(const CreateFlowTagResponse& from) : CreateFlowTagResponse(nullptr, from) {}
  inline CreateFlowTagResponse(CreateFlowTagResponse&& from) noexcept
      : CreateFlowTagResponse(nullptr, std::move(from)) {}
  inline CreateFlowTagResponse& operator=(const CreateFlowTagResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateFlowTagResponse& operator=(CreateFlowTagResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateFlowTagResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateFlowTagResponse* internal_default_instance() {
    return reinterpret_cast<const CreateFlowTagResponse*>(
        &_CreateFlowTagResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(CreateFlowTagResponse& a, CreateFlowTagResponse& b) { a.Swap(&b); }
  inline void Swap(CreateFlowTagResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateFlowTagResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateFlowTagResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateFlowTagResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateFlowTagResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateFlowTagResponse& from) { CreateFlowTagResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateFlowTagResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.flow_tag.v202404alpha1.CreateFlowTagResponse"; }

 protected:
  explicit CreateFlowTagResponse(::google::protobuf::Arena* arena);
  CreateFlowTagResponse(::google::protobuf::Arena* arena, const CreateFlowTagResponse& from);
  CreateFlowTagResponse(::google::protobuf::Arena* arena, CreateFlowTagResponse&& from) noexcept
      : CreateFlowTagResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFlowTagFieldNumber = 1,
  };
  // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
  bool has_flow_tag() const;
  void clear_flow_tag() ;
  const ::kentik::flow_tag::v202404alpha1::FlowTag& flow_tag() const;
  PROTOBUF_NODISCARD ::kentik::flow_tag::v202404alpha1::FlowTag* release_flow_tag();
  ::kentik::flow_tag::v202404alpha1::FlowTag* mutable_flow_tag();
  void set_allocated_flow_tag(::kentik::flow_tag::v202404alpha1::FlowTag* value);
  void unsafe_arena_set_allocated_flow_tag(::kentik::flow_tag::v202404alpha1::FlowTag* value);
  ::kentik::flow_tag::v202404alpha1::FlowTag* unsafe_arena_release_flow_tag();

  private:
  const ::kentik::flow_tag::v202404alpha1::FlowTag& _internal_flow_tag() const;
  ::kentik::flow_tag::v202404alpha1::FlowTag* _internal_mutable_flow_tag();

  public:
  // @@protoc_insertion_point(class_scope:kentik.flow_tag.v202404alpha1.CreateFlowTagResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateFlowTagResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::flow_tag::v202404alpha1::FlowTag* flow_tag_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto;
};
// -------------------------------------------------------------------

class CreateFlowTagRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.flow_tag.v202404alpha1.CreateFlowTagRequest) */ {
 public:
  inline CreateFlowTagRequest() : CreateFlowTagRequest(nullptr) {}
  ~CreateFlowTagRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateFlowTagRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateFlowTagRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateFlowTagRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateFlowTagRequest(const CreateFlowTagRequest& from) : CreateFlowTagRequest(nullptr, from) {}
  inline CreateFlowTagRequest(CreateFlowTagRequest&& from) noexcept
      : CreateFlowTagRequest(nullptr, std::move(from)) {}
  inline CreateFlowTagRequest& operator=(const CreateFlowTagRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateFlowTagRequest& operator=(CreateFlowTagRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateFlowTagRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateFlowTagRequest* internal_default_instance() {
    return reinterpret_cast<const CreateFlowTagRequest*>(
        &_CreateFlowTagRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(CreateFlowTagRequest& a, CreateFlowTagRequest& b) { a.Swap(&b); }
  inline void Swap(CreateFlowTagRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateFlowTagRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateFlowTagRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateFlowTagRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateFlowTagRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateFlowTagRequest& from) { CreateFlowTagRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateFlowTagRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.flow_tag.v202404alpha1.CreateFlowTagRequest"; }

 protected:
  explicit CreateFlowTagRequest(::google::protobuf::Arena* arena);
  CreateFlowTagRequest(::google::protobuf::Arena* arena, const CreateFlowTagRequest& from);
  CreateFlowTagRequest(::google::protobuf::Arena* arena, CreateFlowTagRequest&& from) noexcept
      : CreateFlowTagRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFlowTagFieldNumber = 1,
  };
  // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
  bool has_flow_tag() const;
  void clear_flow_tag() ;
  const ::kentik::flow_tag::v202404alpha1::FlowTag& flow_tag() const;
  PROTOBUF_NODISCARD ::kentik::flow_tag::v202404alpha1::FlowTag* release_flow_tag();
  ::kentik::flow_tag::v202404alpha1::FlowTag* mutable_flow_tag();
  void set_allocated_flow_tag(::kentik::flow_tag::v202404alpha1::FlowTag* value);
  void unsafe_arena_set_allocated_flow_tag(::kentik::flow_tag::v202404alpha1::FlowTag* value);
  ::kentik::flow_tag::v202404alpha1::FlowTag* unsafe_arena_release_flow_tag();

  private:
  const ::kentik::flow_tag::v202404alpha1::FlowTag& _internal_flow_tag() const;
  ::kentik::flow_tag::v202404alpha1::FlowTag* _internal_mutable_flow_tag();

  public:
  // @@protoc_insertion_point(class_scope:kentik.flow_tag.v202404alpha1.CreateFlowTagRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateFlowTagRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::flow_tag::v202404alpha1::FlowTag* flow_tag_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Model

// .kentik.flow_tag.v202404alpha1.ModelType type = 1 [json_name = "type"];
inline void Model::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::kentik::flow_tag::v202404alpha1::ModelType Model::type() const {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.Model.type)
  return _internal_type();
}
inline void Model::set_type(::kentik::flow_tag::v202404alpha1::ModelType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.Model.type)
}
inline ::kentik::flow_tag::v202404alpha1::ModelType Model::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::flow_tag::v202404alpha1::ModelType>(_impl_.type_);
}
inline void Model::_internal_set_type(::kentik::flow_tag::v202404alpha1::ModelType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// -------------------------------------------------------------------

// OrderField

// .kentik.flow_tag.v202404alpha1.LookupField field = 1 [json_name = "field"];
inline void OrderField::clear_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_ = 0;
}
inline ::kentik::flow_tag::v202404alpha1::LookupField OrderField::field() const {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.OrderField.field)
  return _internal_field();
}
inline void OrderField::set_field(::kentik::flow_tag::v202404alpha1::LookupField value) {
  _internal_set_field(value);
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.OrderField.field)
}
inline ::kentik::flow_tag::v202404alpha1::LookupField OrderField::_internal_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::flow_tag::v202404alpha1::LookupField>(_impl_.field_);
}
inline void OrderField::_internal_set_field(::kentik::flow_tag::v202404alpha1::LookupField value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_ = value;
}

// .kentik.flow_tag.v202404alpha1.OrderDirection direction = 2 [json_name = "direction"];
inline void OrderField::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
}
inline ::kentik::flow_tag::v202404alpha1::OrderDirection OrderField::direction() const {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.OrderField.direction)
  return _internal_direction();
}
inline void OrderField::set_direction(::kentik::flow_tag::v202404alpha1::OrderDirection value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.OrderField.direction)
}
inline ::kentik::flow_tag::v202404alpha1::OrderDirection OrderField::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::flow_tag::v202404alpha1::OrderDirection>(_impl_.direction_);
}
inline void OrderField::_internal_set_direction(::kentik::flow_tag::v202404alpha1::OrderDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

// -------------------------------------------------------------------

// FlowTagSearch

// int32 limit = 1 [json_name = "limit"];
inline void FlowTagSearch::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = 0;
}
inline ::int32_t FlowTagSearch::limit() const {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTagSearch.limit)
  return _internal_limit();
}
inline void FlowTagSearch::set_limit(::int32_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTagSearch.limit)
}
inline ::int32_t FlowTagSearch::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void FlowTagSearch::_internal_set_limit(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// int32 offset = 2 [json_name = "offset"];
inline void FlowTagSearch::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = 0;
}
inline ::int32_t FlowTagSearch::offset() const {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTagSearch.offset)
  return _internal_offset();
}
inline void FlowTagSearch::set_offset(::int32_t value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTagSearch.offset)
}
inline ::int32_t FlowTagSearch::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void FlowTagSearch::_internal_set_offset(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// repeated .kentik.flow_tag.v202404alpha1.LookupField lookup_fields = 3 [json_name = "lookupFields"];
inline int FlowTagSearch::_internal_lookup_fields_size() const {
  return _internal_lookup_fields().size();
}
inline int FlowTagSearch::lookup_fields_size() const {
  return _internal_lookup_fields_size();
}
inline void FlowTagSearch::clear_lookup_fields() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lookup_fields_.Clear();
}
inline ::kentik::flow_tag::v202404alpha1::LookupField FlowTagSearch::lookup_fields(int index) const {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTagSearch.lookup_fields)
  return static_cast<::kentik::flow_tag::v202404alpha1::LookupField>(_internal_lookup_fields().Get(index));
}
inline void FlowTagSearch::set_lookup_fields(int index, ::kentik::flow_tag::v202404alpha1::LookupField value) {
  _internal_mutable_lookup_fields()->Set(index, value);
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTagSearch.lookup_fields)
}
inline void FlowTagSearch::add_lookup_fields(::kentik::flow_tag::v202404alpha1::LookupField value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_lookup_fields()->Add(value);
  // @@protoc_insertion_point(field_add:kentik.flow_tag.v202404alpha1.FlowTagSearch.lookup_fields)
}
inline const ::google::protobuf::RepeatedField<int>& FlowTagSearch::lookup_fields() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.flow_tag.v202404alpha1.FlowTagSearch.lookup_fields)
  return _internal_lookup_fields();
}
inline ::google::protobuf::RepeatedField<int>* FlowTagSearch::mutable_lookup_fields()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.flow_tag.v202404alpha1.FlowTagSearch.lookup_fields)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_lookup_fields();
}
inline const ::google::protobuf::RepeatedField<int>& FlowTagSearch::_internal_lookup_fields()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lookup_fields_;
}
inline ::google::protobuf::RepeatedField<int>* FlowTagSearch::_internal_mutable_lookup_fields() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.lookup_fields_;
}

// repeated string lookup_values = 4 [json_name = "lookupValues"];
inline int FlowTagSearch::_internal_lookup_values_size() const {
  return _internal_lookup_values().size();
}
inline int FlowTagSearch::lookup_values_size() const {
  return _internal_lookup_values_size();
}
inline void FlowTagSearch::clear_lookup_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lookup_values_.Clear();
}
inline std::string* FlowTagSearch::add_lookup_values() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_lookup_values()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.flow_tag.v202404alpha1.FlowTagSearch.lookup_values)
  return _s;
}
inline const std::string& FlowTagSearch::lookup_values(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTagSearch.lookup_values)
  return _internal_lookup_values().Get(index);
}
inline std::string* FlowTagSearch::mutable_lookup_values(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTagSearch.lookup_values)
  return _internal_mutable_lookup_values()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void FlowTagSearch::set_lookup_values(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_lookup_values()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTagSearch.lookup_values)
}
template <typename Arg_, typename... Args_>
inline void FlowTagSearch::add_lookup_values(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_lookup_values(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.flow_tag.v202404alpha1.FlowTagSearch.lookup_values)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTagSearch::lookup_values() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.flow_tag.v202404alpha1.FlowTagSearch.lookup_values)
  return _internal_lookup_values();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTagSearch::mutable_lookup_values() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.flow_tag.v202404alpha1.FlowTagSearch.lookup_values)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_lookup_values();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTagSearch::_internal_lookup_values() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lookup_values_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTagSearch::_internal_mutable_lookup_values() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.lookup_values_;
}

// repeated .kentik.flow_tag.v202404alpha1.OrderField order_by = 5 [json_name = "orderBy"];
inline int FlowTagSearch::_internal_order_by_size() const {
  return _internal_order_by().size();
}
inline int FlowTagSearch::order_by_size() const {
  return _internal_order_by_size();
}
inline void FlowTagSearch::clear_order_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_by_.Clear();
}
inline ::kentik::flow_tag::v202404alpha1::OrderField* FlowTagSearch::mutable_order_by(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTagSearch.order_by)
  return _internal_mutable_order_by()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::flow_tag::v202404alpha1::OrderField>* FlowTagSearch::mutable_order_by()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.flow_tag.v202404alpha1.FlowTagSearch.order_by)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_order_by();
}
inline const ::kentik::flow_tag::v202404alpha1::OrderField& FlowTagSearch::order_by(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTagSearch.order_by)
  return _internal_order_by().Get(index);
}
inline ::kentik::flow_tag::v202404alpha1::OrderField* FlowTagSearch::add_order_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::flow_tag::v202404alpha1::OrderField* _add = _internal_mutable_order_by()->Add();
  // @@protoc_insertion_point(field_add:kentik.flow_tag.v202404alpha1.FlowTagSearch.order_by)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::flow_tag::v202404alpha1::OrderField>& FlowTagSearch::order_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.flow_tag.v202404alpha1.FlowTagSearch.order_by)
  return _internal_order_by();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::flow_tag::v202404alpha1::OrderField>&
FlowTagSearch::_internal_order_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_by_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::flow_tag::v202404alpha1::OrderField>*
FlowTagSearch::_internal_mutable_order_by() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.order_by_;
}

// int32 field_limit = 6 [json_name = "fieldLimit"];
inline void FlowTagSearch::clear_field_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_limit_ = 0;
}
inline ::int32_t FlowTagSearch::field_limit() const {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTagSearch.field_limit)
  return _internal_field_limit();
}
inline void FlowTagSearch::set_field_limit(::int32_t value) {
  _internal_set_field_limit(value);
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTagSearch.field_limit)
}
inline ::int32_t FlowTagSearch::_internal_field_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field_limit_;
}
inline void FlowTagSearch::_internal_set_field_limit(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_limit_ = value;
}

// -------------------------------------------------------------------

// AddressInfo

// repeated string addresses = 1 [json_name = "addresses"];
inline int AddressInfo::_internal_addresses_size() const {
  return _internal_addresses().size();
}
inline int AddressInfo::addresses_size() const {
  return _internal_addresses_size();
}
inline void AddressInfo::clear_addresses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addresses_.Clear();
}
inline std::string* AddressInfo::add_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_addresses()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.flow_tag.v202404alpha1.AddressInfo.addresses)
  return _s;
}
inline const std::string& AddressInfo::addresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.AddressInfo.addresses)
  return _internal_addresses().Get(index);
}
inline std::string* AddressInfo::mutable_addresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.AddressInfo.addresses)
  return _internal_mutable_addresses()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void AddressInfo::set_addresses(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_addresses()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.AddressInfo.addresses)
}
template <typename Arg_, typename... Args_>
inline void AddressInfo::add_addresses(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_addresses(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.flow_tag.v202404alpha1.AddressInfo.addresses)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
AddressInfo::addresses() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.flow_tag.v202404alpha1.AddressInfo.addresses)
  return _internal_addresses();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
AddressInfo::mutable_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.flow_tag.v202404alpha1.AddressInfo.addresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_addresses();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
AddressInfo::_internal_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.addresses_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
AddressInfo::_internal_mutable_addresses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.addresses_;
}

// int32 total_count = 2 [json_name = "totalCount"];
inline void AddressInfo::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = 0;
}
inline ::int32_t AddressInfo::total_count() const {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.AddressInfo.total_count)
  return _internal_total_count();
}
inline void AddressInfo::set_total_count(::int32_t value) {
  _internal_set_total_count(value);
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.AddressInfo.total_count)
}
inline ::int32_t AddressInfo::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void AddressInfo::_internal_set_total_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// -------------------------------------------------------------------

// FlowTag

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowTag::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& FlowTag::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FlowTag::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTag.id)
}
inline std::string* FlowTag::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTag.id)
  return _s;
}
inline const std::string& FlowTag::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void FlowTag::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* FlowTag::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* FlowTag::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.flow_tag.v202404alpha1.FlowTag.id)
  return _impl_.id_.Release();
}
inline void FlowTag::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.flow_tag.v202404alpha1.FlowTag.id)
}

// string name = 3 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowTag::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& FlowTag::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FlowTag::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTag.name)
}
inline std::string* FlowTag::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTag.name)
  return _s;
}
inline const std::string& FlowTag::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void FlowTag::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* FlowTag::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* FlowTag::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.flow_tag.v202404alpha1.FlowTag.name)
  return _impl_.name_.Release();
}
inline void FlowTag::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.flow_tag.v202404alpha1.FlowTag.name)
}

// string edited_by = 4 [json_name = "editedBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowTag::clear_edited_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.edited_by_.ClearToEmpty();
}
inline const std::string& FlowTag::edited_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.edited_by)
  return _internal_edited_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FlowTag::set_edited_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.edited_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTag.edited_by)
}
inline std::string* FlowTag::mutable_edited_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_edited_by();
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTag.edited_by)
  return _s;
}
inline const std::string& FlowTag::_internal_edited_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.edited_by_.Get();
}
inline void FlowTag::_internal_set_edited_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.edited_by_.Set(value, GetArena());
}
inline std::string* FlowTag::_internal_mutable_edited_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.edited_by_.Mutable( GetArena());
}
inline std::string* FlowTag::release_edited_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.flow_tag.v202404alpha1.FlowTag.edited_by)
  return _impl_.edited_by_.Release();
}
inline void FlowTag::set_allocated_edited_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.edited_by_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.edited_by_.IsDefault()) {
    _impl_.edited_by_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.flow_tag.v202404alpha1.FlowTag.edited_by)
}

// string created_by = 25 [json_name = "createdBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowTag::clear_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_.ClearToEmpty();
}
inline const std::string& FlowTag::created_by() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.created_by)
  return _internal_created_by();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FlowTag::set_created_by(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTag.created_by)
}
inline std::string* FlowTag::mutable_created_by() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_created_by();
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTag.created_by)
  return _s;
}
inline const std::string& FlowTag::_internal_created_by() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_by_.Get();
}
inline void FlowTag::_internal_set_created_by(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_.Set(value, GetArena());
}
inline std::string* FlowTag::_internal_mutable_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.created_by_.Mutable( GetArena());
}
inline std::string* FlowTag::release_created_by() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.flow_tag.v202404alpha1.FlowTag.created_by)
  return _impl_.created_by_.Release();
}
inline void FlowTag::set_allocated_created_by(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_by_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.created_by_.IsDefault()) {
    _impl_.created_by_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.flow_tag.v202404alpha1.FlowTag.created_by)
}

// .google.protobuf.Timestamp cdate = 5 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowTag::has_cdate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cdate_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& FlowTag::_internal_cdate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.cdate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& FlowTag::cdate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.cdate)
  return _internal_cdate();
}
inline void FlowTag::unsafe_arena_set_allocated_cdate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cdate_);
  }
  _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.flow_tag.v202404alpha1.FlowTag.cdate)
}
inline ::google::protobuf::Timestamp* FlowTag::release_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.cdate_;
  _impl_.cdate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* FlowTag::unsafe_arena_release_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.flow_tag.v202404alpha1.FlowTag.cdate)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.cdate_;
  _impl_.cdate_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* FlowTag::_internal_mutable_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cdate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.cdate_;
}
inline ::google::protobuf::Timestamp* FlowTag::mutable_cdate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_cdate();
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTag.cdate)
  return _msg;
}
inline void FlowTag::set_allocated_cdate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cdate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.cdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.flow_tag.v202404alpha1.FlowTag.cdate)
}

// .google.protobuf.Timestamp edate = 6 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowTag::has_edate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.edate_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& FlowTag::_internal_edate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.edate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& FlowTag::edate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.edate)
  return _internal_edate();
}
inline void FlowTag::unsafe_arena_set_allocated_edate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.edate_);
  }
  _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.flow_tag.v202404alpha1.FlowTag.edate)
}
inline ::google::protobuf::Timestamp* FlowTag::release_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.edate_;
  _impl_.edate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* FlowTag::unsafe_arena_release_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.flow_tag.v202404alpha1.FlowTag.edate)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.edate_;
  _impl_.edate_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* FlowTag::_internal_mutable_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.edate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.edate_;
}
inline ::google::protobuf::Timestamp* FlowTag::mutable_edate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_edate();
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTag.edate)
  return _msg;
}
inline void FlowTag::set_allocated_edate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.edate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.edate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.flow_tag.v202404alpha1.FlowTag.edate)
}

// .kentik.flow_tag.v202404alpha1.AddressInfo ip = 7 [json_name = "ip", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowTag::has_ip() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ip_ != nullptr);
  return value;
}
inline void FlowTag::clear_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ip_ != nullptr) _impl_.ip_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::kentik::flow_tag::v202404alpha1::AddressInfo& FlowTag::_internal_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::flow_tag::v202404alpha1::AddressInfo* p = _impl_.ip_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::flow_tag::v202404alpha1::AddressInfo&>(::kentik::flow_tag::v202404alpha1::_AddressInfo_default_instance_);
}
inline const ::kentik::flow_tag::v202404alpha1::AddressInfo& FlowTag::ip() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.ip)
  return _internal_ip();
}
inline void FlowTag::unsafe_arena_set_allocated_ip(::kentik::flow_tag::v202404alpha1::AddressInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ip_);
  }
  _impl_.ip_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::AddressInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.flow_tag.v202404alpha1.FlowTag.ip)
}
inline ::kentik::flow_tag::v202404alpha1::AddressInfo* FlowTag::release_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::kentik::flow_tag::v202404alpha1::AddressInfo* released = _impl_.ip_;
  _impl_.ip_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::flow_tag::v202404alpha1::AddressInfo* FlowTag::unsafe_arena_release_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.flow_tag.v202404alpha1.FlowTag.ip)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::kentik::flow_tag::v202404alpha1::AddressInfo* temp = _impl_.ip_;
  _impl_.ip_ = nullptr;
  return temp;
}
inline ::kentik::flow_tag::v202404alpha1::AddressInfo* FlowTag::_internal_mutable_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ip_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::flow_tag::v202404alpha1::AddressInfo>(GetArena());
    _impl_.ip_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::AddressInfo*>(p);
  }
  return _impl_.ip_;
}
inline ::kentik::flow_tag::v202404alpha1::AddressInfo* FlowTag::mutable_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::kentik::flow_tag::v202404alpha1::AddressInfo* _msg = _internal_mutable_ip();
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTag.ip)
  return _msg;
}
inline void FlowTag::set_allocated_ip(::kentik::flow_tag::v202404alpha1::AddressInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.ip_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.ip_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::AddressInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.flow_tag.v202404alpha1.FlowTag.ip)
}

// repeated string port = 8 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int FlowTag::_internal_port_size() const {
  return _internal_port().size();
}
inline int FlowTag::port_size() const {
  return _internal_port_size();
}
inline void FlowTag::clear_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_.Clear();
}
inline std::string* FlowTag::add_port() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_port()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.flow_tag.v202404alpha1.FlowTag.port)
  return _s;
}
inline const std::string& FlowTag::port(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.port)
  return _internal_port().Get(index);
}
inline std::string* FlowTag::mutable_port(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTag.port)
  return _internal_mutable_port()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void FlowTag::set_port(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_port()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTag.port)
}
template <typename Arg_, typename... Args_>
inline void FlowTag::add_port(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_port(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.flow_tag.v202404alpha1.FlowTag.port)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::port() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.flow_tag.v202404alpha1.FlowTag.port)
  return _internal_port();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::mutable_port() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.flow_tag.v202404alpha1.FlowTag.port)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_port();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::_internal_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.port_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::_internal_mutable_port() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.port_;
}

// uint32 tcp_flags = 9 [json_name = "tcpFlags", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void FlowTag::clear_tcp_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tcp_flags_ = 0u;
}
inline ::uint32_t FlowTag::tcp_flags() const {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.tcp_flags)
  return _internal_tcp_flags();
}
inline void FlowTag::set_tcp_flags(::uint32_t value) {
  _internal_set_tcp_flags(value);
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTag.tcp_flags)
}
inline ::uint32_t FlowTag::_internal_tcp_flags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tcp_flags_;
}
inline void FlowTag::_internal_set_tcp_flags(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tcp_flags_ = value;
}

// repeated uint32 protocol = 10 [json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int FlowTag::_internal_protocol_size() const {
  return _internal_protocol().size();
}
inline int FlowTag::protocol_size() const {
  return _internal_protocol_size();
}
inline void FlowTag::clear_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_.Clear();
}
inline ::uint32_t FlowTag::protocol(int index) const {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.protocol)
  return _internal_protocol().Get(index);
}
inline void FlowTag::set_protocol(int index, ::uint32_t value) {
  _internal_mutable_protocol()->Set(index, value);
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTag.protocol)
}
inline void FlowTag::add_protocol(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_protocol()->Add(value);
  // @@protoc_insertion_point(field_add:kentik.flow_tag.v202404alpha1.FlowTag.protocol)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& FlowTag::protocol() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.flow_tag.v202404alpha1.FlowTag.protocol)
  return _internal_protocol();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* FlowTag::mutable_protocol()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.flow_tag.v202404alpha1.FlowTag.protocol)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_protocol();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
FlowTag::_internal_protocol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.protocol_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* FlowTag::_internal_mutable_protocol() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.protocol_;
}

// repeated string device_name = 11 [json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int FlowTag::_internal_device_name_size() const {
  return _internal_device_name().size();
}
inline int FlowTag::device_name_size() const {
  return _internal_device_name_size();
}
inline void FlowTag::clear_device_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.Clear();
}
inline std::string* FlowTag::add_device_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_device_name()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.flow_tag.v202404alpha1.FlowTag.device_name)
  return _s;
}
inline const std::string& FlowTag::device_name(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.device_name)
  return _internal_device_name().Get(index);
}
inline std::string* FlowTag::mutable_device_name(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTag.device_name)
  return _internal_mutable_device_name()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void FlowTag::set_device_name(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_device_name()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTag.device_name)
}
template <typename Arg_, typename... Args_>
inline void FlowTag::add_device_name(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_device_name(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.flow_tag.v202404alpha1.FlowTag.device_name)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::device_name() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.flow_tag.v202404alpha1.FlowTag.device_name)
  return _internal_device_name();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::mutable_device_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.flow_tag.v202404alpha1.FlowTag.device_name)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_device_name();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::_internal_device_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_name_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::_internal_mutable_device_name() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.device_name_;
}

// repeated string device_type = 12 [json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int FlowTag::_internal_device_type_size() const {
  return _internal_device_type().size();
}
inline int FlowTag::device_type_size() const {
  return _internal_device_type_size();
}
inline void FlowTag::clear_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_.Clear();
}
inline std::string* FlowTag::add_device_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_device_type()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.flow_tag.v202404alpha1.FlowTag.device_type)
  return _s;
}
inline const std::string& FlowTag::device_type(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.device_type)
  return _internal_device_type().Get(index);
}
inline std::string* FlowTag::mutable_device_type(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTag.device_type)
  return _internal_mutable_device_type()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void FlowTag::set_device_type(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_device_type()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTag.device_type)
}
template <typename Arg_, typename... Args_>
inline void FlowTag::add_device_type(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_device_type(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.flow_tag.v202404alpha1.FlowTag.device_type)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::device_type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.flow_tag.v202404alpha1.FlowTag.device_type)
  return _internal_device_type();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::mutable_device_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.flow_tag.v202404alpha1.FlowTag.device_type)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_device_type();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::_internal_device_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_type_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::_internal_mutable_device_type() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.device_type_;
}

// repeated string site = 13 [json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int FlowTag::_internal_site_size() const {
  return _internal_site().size();
}
inline int FlowTag::site_size() const {
  return _internal_site_size();
}
inline void FlowTag::clear_site() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.site_.Clear();
}
inline std::string* FlowTag::add_site() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_site()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.flow_tag.v202404alpha1.FlowTag.site)
  return _s;
}
inline const std::string& FlowTag::site(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.site)
  return _internal_site().Get(index);
}
inline std::string* FlowTag::mutable_site(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTag.site)
  return _internal_mutable_site()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void FlowTag::set_site(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_site()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTag.site)
}
template <typename Arg_, typename... Args_>
inline void FlowTag::add_site(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_site(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.flow_tag.v202404alpha1.FlowTag.site)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::site() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.flow_tag.v202404alpha1.FlowTag.site)
  return _internal_site();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::mutable_site() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.flow_tag.v202404alpha1.FlowTag.site)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_site();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::_internal_site() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.site_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::_internal_mutable_site() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.site_;
}

// repeated string interface_name = 14 [json_name = "interfaceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int FlowTag::_internal_interface_name_size() const {
  return _internal_interface_name().size();
}
inline int FlowTag::interface_name_size() const {
  return _internal_interface_name_size();
}
inline void FlowTag::clear_interface_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_name_.Clear();
}
inline std::string* FlowTag::add_interface_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_interface_name()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.flow_tag.v202404alpha1.FlowTag.interface_name)
  return _s;
}
inline const std::string& FlowTag::interface_name(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.interface_name)
  return _internal_interface_name().Get(index);
}
inline std::string* FlowTag::mutable_interface_name(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTag.interface_name)
  return _internal_mutable_interface_name()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void FlowTag::set_interface_name(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_interface_name()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTag.interface_name)
}
template <typename Arg_, typename... Args_>
inline void FlowTag::add_interface_name(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_interface_name(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.flow_tag.v202404alpha1.FlowTag.interface_name)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::interface_name() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.flow_tag.v202404alpha1.FlowTag.interface_name)
  return _internal_interface_name();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::mutable_interface_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.flow_tag.v202404alpha1.FlowTag.interface_name)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_interface_name();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::_internal_interface_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interface_name_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::_internal_mutable_interface_name() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.interface_name_;
}

// repeated string asn = 15 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int FlowTag::_internal_asn_size() const {
  return _internal_asn().size();
}
inline int FlowTag::asn_size() const {
  return _internal_asn_size();
}
inline void FlowTag::clear_asn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.asn_.Clear();
}
inline std::string* FlowTag::add_asn() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_asn()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.flow_tag.v202404alpha1.FlowTag.asn)
  return _s;
}
inline const std::string& FlowTag::asn(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.asn)
  return _internal_asn().Get(index);
}
inline std::string* FlowTag::mutable_asn(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTag.asn)
  return _internal_mutable_asn()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void FlowTag::set_asn(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_asn()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTag.asn)
}
template <typename Arg_, typename... Args_>
inline void FlowTag::add_asn(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_asn(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.flow_tag.v202404alpha1.FlowTag.asn)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::asn() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.flow_tag.v202404alpha1.FlowTag.asn)
  return _internal_asn();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::mutable_asn() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.flow_tag.v202404alpha1.FlowTag.asn)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_asn();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::_internal_asn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.asn_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::_internal_mutable_asn() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.asn_;
}

// repeated string lasthop_as_name = 16 [json_name = "lasthopAsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int FlowTag::_internal_lasthop_as_name_size() const {
  return _internal_lasthop_as_name().size();
}
inline int FlowTag::lasthop_as_name_size() const {
  return _internal_lasthop_as_name_size();
}
inline void FlowTag::clear_lasthop_as_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lasthop_as_name_.Clear();
}
inline std::string* FlowTag::add_lasthop_as_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_lasthop_as_name()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.flow_tag.v202404alpha1.FlowTag.lasthop_as_name)
  return _s;
}
inline const std::string& FlowTag::lasthop_as_name(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.lasthop_as_name)
  return _internal_lasthop_as_name().Get(index);
}
inline std::string* FlowTag::mutable_lasthop_as_name(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTag.lasthop_as_name)
  return _internal_mutable_lasthop_as_name()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void FlowTag::set_lasthop_as_name(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_lasthop_as_name()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTag.lasthop_as_name)
}
template <typename Arg_, typename... Args_>
inline void FlowTag::add_lasthop_as_name(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_lasthop_as_name(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.flow_tag.v202404alpha1.FlowTag.lasthop_as_name)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::lasthop_as_name() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.flow_tag.v202404alpha1.FlowTag.lasthop_as_name)
  return _internal_lasthop_as_name();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::mutable_lasthop_as_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.flow_tag.v202404alpha1.FlowTag.lasthop_as_name)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_lasthop_as_name();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::_internal_lasthop_as_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lasthop_as_name_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::_internal_mutable_lasthop_as_name() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.lasthop_as_name_;
}

// repeated string nexthop_asn = 17 [json_name = "nexthopAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int FlowTag::_internal_nexthop_asn_size() const {
  return _internal_nexthop_asn().size();
}
inline int FlowTag::nexthop_asn_size() const {
  return _internal_nexthop_asn_size();
}
inline void FlowTag::clear_nexthop_asn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nexthop_asn_.Clear();
}
inline std::string* FlowTag::add_nexthop_asn() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_nexthop_asn()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.flow_tag.v202404alpha1.FlowTag.nexthop_asn)
  return _s;
}
inline const std::string& FlowTag::nexthop_asn(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.nexthop_asn)
  return _internal_nexthop_asn().Get(index);
}
inline std::string* FlowTag::mutable_nexthop_asn(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTag.nexthop_asn)
  return _internal_mutable_nexthop_asn()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void FlowTag::set_nexthop_asn(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_nexthop_asn()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTag.nexthop_asn)
}
template <typename Arg_, typename... Args_>
inline void FlowTag::add_nexthop_asn(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_nexthop_asn(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.flow_tag.v202404alpha1.FlowTag.nexthop_asn)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::nexthop_asn() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.flow_tag.v202404alpha1.FlowTag.nexthop_asn)
  return _internal_nexthop_asn();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::mutable_nexthop_asn() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.flow_tag.v202404alpha1.FlowTag.nexthop_asn)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_nexthop_asn();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::_internal_nexthop_asn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nexthop_asn_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::_internal_mutable_nexthop_asn() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.nexthop_asn_;
}

// repeated string nexthop_as_name = 18 [json_name = "nexthopAsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int FlowTag::_internal_nexthop_as_name_size() const {
  return _internal_nexthop_as_name().size();
}
inline int FlowTag::nexthop_as_name_size() const {
  return _internal_nexthop_as_name_size();
}
inline void FlowTag::clear_nexthop_as_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nexthop_as_name_.Clear();
}
inline std::string* FlowTag::add_nexthop_as_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_nexthop_as_name()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.flow_tag.v202404alpha1.FlowTag.nexthop_as_name)
  return _s;
}
inline const std::string& FlowTag::nexthop_as_name(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.nexthop_as_name)
  return _internal_nexthop_as_name().Get(index);
}
inline std::string* FlowTag::mutable_nexthop_as_name(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTag.nexthop_as_name)
  return _internal_mutable_nexthop_as_name()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void FlowTag::set_nexthop_as_name(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_nexthop_as_name()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTag.nexthop_as_name)
}
template <typename Arg_, typename... Args_>
inline void FlowTag::add_nexthop_as_name(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_nexthop_as_name(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.flow_tag.v202404alpha1.FlowTag.nexthop_as_name)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::nexthop_as_name() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.flow_tag.v202404alpha1.FlowTag.nexthop_as_name)
  return _internal_nexthop_as_name();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::mutable_nexthop_as_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.flow_tag.v202404alpha1.FlowTag.nexthop_as_name)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_nexthop_as_name();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::_internal_nexthop_as_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nexthop_as_name_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::_internal_mutable_nexthop_as_name() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.nexthop_as_name_;
}

// repeated string nexthop = 19 [json_name = "nexthop", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int FlowTag::_internal_nexthop_size() const {
  return _internal_nexthop().size();
}
inline int FlowTag::nexthop_size() const {
  return _internal_nexthop_size();
}
inline void FlowTag::clear_nexthop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nexthop_.Clear();
}
inline std::string* FlowTag::add_nexthop() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_nexthop()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.flow_tag.v202404alpha1.FlowTag.nexthop)
  return _s;
}
inline const std::string& FlowTag::nexthop(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.nexthop)
  return _internal_nexthop().Get(index);
}
inline std::string* FlowTag::mutable_nexthop(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTag.nexthop)
  return _internal_mutable_nexthop()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void FlowTag::set_nexthop(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_nexthop()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTag.nexthop)
}
template <typename Arg_, typename... Args_>
inline void FlowTag::add_nexthop(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_nexthop(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.flow_tag.v202404alpha1.FlowTag.nexthop)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::nexthop() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.flow_tag.v202404alpha1.FlowTag.nexthop)
  return _internal_nexthop();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::mutable_nexthop() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.flow_tag.v202404alpha1.FlowTag.nexthop)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_nexthop();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::_internal_nexthop() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nexthop_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::_internal_mutable_nexthop() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.nexthop_;
}

// repeated string bgp_aspath = 20 [json_name = "bgpAspath", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int FlowTag::_internal_bgp_aspath_size() const {
  return _internal_bgp_aspath().size();
}
inline int FlowTag::bgp_aspath_size() const {
  return _internal_bgp_aspath_size();
}
inline void FlowTag::clear_bgp_aspath() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_aspath_.Clear();
}
inline std::string* FlowTag::add_bgp_aspath() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_bgp_aspath()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.flow_tag.v202404alpha1.FlowTag.bgp_aspath)
  return _s;
}
inline const std::string& FlowTag::bgp_aspath(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.bgp_aspath)
  return _internal_bgp_aspath().Get(index);
}
inline std::string* FlowTag::mutable_bgp_aspath(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTag.bgp_aspath)
  return _internal_mutable_bgp_aspath()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void FlowTag::set_bgp_aspath(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_bgp_aspath()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTag.bgp_aspath)
}
template <typename Arg_, typename... Args_>
inline void FlowTag::add_bgp_aspath(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_bgp_aspath(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.flow_tag.v202404alpha1.FlowTag.bgp_aspath)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::bgp_aspath() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.flow_tag.v202404alpha1.FlowTag.bgp_aspath)
  return _internal_bgp_aspath();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::mutable_bgp_aspath() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.flow_tag.v202404alpha1.FlowTag.bgp_aspath)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_bgp_aspath();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::_internal_bgp_aspath() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bgp_aspath_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::_internal_mutable_bgp_aspath() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.bgp_aspath_;
}

// repeated string bgp_community = 21 [json_name = "bgpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int FlowTag::_internal_bgp_community_size() const {
  return _internal_bgp_community().size();
}
inline int FlowTag::bgp_community_size() const {
  return _internal_bgp_community_size();
}
inline void FlowTag::clear_bgp_community() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_community_.Clear();
}
inline std::string* FlowTag::add_bgp_community() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_bgp_community()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.flow_tag.v202404alpha1.FlowTag.bgp_community)
  return _s;
}
inline const std::string& FlowTag::bgp_community(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.bgp_community)
  return _internal_bgp_community().Get(index);
}
inline std::string* FlowTag::mutable_bgp_community(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTag.bgp_community)
  return _internal_mutable_bgp_community()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void FlowTag::set_bgp_community(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_bgp_community()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTag.bgp_community)
}
template <typename Arg_, typename... Args_>
inline void FlowTag::add_bgp_community(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_bgp_community(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.flow_tag.v202404alpha1.FlowTag.bgp_community)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::bgp_community() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.flow_tag.v202404alpha1.FlowTag.bgp_community)
  return _internal_bgp_community();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::mutable_bgp_community() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.flow_tag.v202404alpha1.FlowTag.bgp_community)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_bgp_community();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::_internal_bgp_community() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bgp_community_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::_internal_mutable_bgp_community() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.bgp_community_;
}

// .kentik.flow_tag.v202404alpha1.AddressInfo mac = 22 [json_name = "mac", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool FlowTag::has_mac() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mac_ != nullptr);
  return value;
}
inline void FlowTag::clear_mac() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mac_ != nullptr) _impl_.mac_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::kentik::flow_tag::v202404alpha1::AddressInfo& FlowTag::_internal_mac() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::flow_tag::v202404alpha1::AddressInfo* p = _impl_.mac_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::flow_tag::v202404alpha1::AddressInfo&>(::kentik::flow_tag::v202404alpha1::_AddressInfo_default_instance_);
}
inline const ::kentik::flow_tag::v202404alpha1::AddressInfo& FlowTag::mac() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.mac)
  return _internal_mac();
}
inline void FlowTag::unsafe_arena_set_allocated_mac(::kentik::flow_tag::v202404alpha1::AddressInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mac_);
  }
  _impl_.mac_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::AddressInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.flow_tag.v202404alpha1.FlowTag.mac)
}
inline ::kentik::flow_tag::v202404alpha1::AddressInfo* FlowTag::release_mac() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::kentik::flow_tag::v202404alpha1::AddressInfo* released = _impl_.mac_;
  _impl_.mac_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::flow_tag::v202404alpha1::AddressInfo* FlowTag::unsafe_arena_release_mac() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.flow_tag.v202404alpha1.FlowTag.mac)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::kentik::flow_tag::v202404alpha1::AddressInfo* temp = _impl_.mac_;
  _impl_.mac_ = nullptr;
  return temp;
}
inline ::kentik::flow_tag::v202404alpha1::AddressInfo* FlowTag::_internal_mutable_mac() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mac_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::flow_tag::v202404alpha1::AddressInfo>(GetArena());
    _impl_.mac_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::AddressInfo*>(p);
  }
  return _impl_.mac_;
}
inline ::kentik::flow_tag::v202404alpha1::AddressInfo* FlowTag::mutable_mac() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::kentik::flow_tag::v202404alpha1::AddressInfo* _msg = _internal_mutable_mac();
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTag.mac)
  return _msg;
}
inline void FlowTag::set_allocated_mac(::kentik::flow_tag::v202404alpha1::AddressInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.mac_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.mac_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::AddressInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.flow_tag.v202404alpha1.FlowTag.mac)
}

// repeated string country = 23 [json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int FlowTag::_internal_country_size() const {
  return _internal_country().size();
}
inline int FlowTag::country_size() const {
  return _internal_country_size();
}
inline void FlowTag::clear_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.Clear();
}
inline std::string* FlowTag::add_country() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_country()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.flow_tag.v202404alpha1.FlowTag.country)
  return _s;
}
inline const std::string& FlowTag::country(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.country)
  return _internal_country().Get(index);
}
inline std::string* FlowTag::mutable_country(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTag.country)
  return _internal_mutable_country()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void FlowTag::set_country(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_country()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTag.country)
}
template <typename Arg_, typename... Args_>
inline void FlowTag::add_country(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_country(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.flow_tag.v202404alpha1.FlowTag.country)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::country() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.flow_tag.v202404alpha1.FlowTag.country)
  return _internal_country();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::mutable_country() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.flow_tag.v202404alpha1.FlowTag.country)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_country();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::_internal_country() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.country_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::_internal_mutable_country() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.country_;
}

// repeated string vlans = 24 [json_name = "vlans", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int FlowTag::_internal_vlans_size() const {
  return _internal_vlans().size();
}
inline int FlowTag::vlans_size() const {
  return _internal_vlans_size();
}
inline void FlowTag::clear_vlans() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vlans_.Clear();
}
inline std::string* FlowTag::add_vlans() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_vlans()->Add();
  // @@protoc_insertion_point(field_add_mutable:kentik.flow_tag.v202404alpha1.FlowTag.vlans)
  return _s;
}
inline const std::string& FlowTag::vlans(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.FlowTag.vlans)
  return _internal_vlans().Get(index);
}
inline std::string* FlowTag::mutable_vlans(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.FlowTag.vlans)
  return _internal_mutable_vlans()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void FlowTag::set_vlans(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_vlans()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.FlowTag.vlans)
}
template <typename Arg_, typename... Args_>
inline void FlowTag::add_vlans(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_vlans(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:kentik.flow_tag.v202404alpha1.FlowTag.vlans)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::vlans() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.flow_tag.v202404alpha1.FlowTag.vlans)
  return _internal_vlans();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::mutable_vlans() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.flow_tag.v202404alpha1.FlowTag.vlans)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_vlans();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FlowTag::_internal_vlans() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vlans_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FlowTag::_internal_mutable_vlans() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.vlans_;
}

// -------------------------------------------------------------------

// GetFlowTagRequest

// string id = 1 [json_name = "id"];
inline void GetFlowTagRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& GetFlowTagRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.GetFlowTagRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetFlowTagRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.GetFlowTagRequest.id)
}
inline std::string* GetFlowTagRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.GetFlowTagRequest.id)
  return _s;
}
inline const std::string& GetFlowTagRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void GetFlowTagRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* GetFlowTagRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* GetFlowTagRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.flow_tag.v202404alpha1.GetFlowTagRequest.id)
  return _impl_.id_.Release();
}
inline void GetFlowTagRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.flow_tag.v202404alpha1.GetFlowTagRequest.id)
}

// -------------------------------------------------------------------

// GetFlowTagResponse

// .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
inline bool GetFlowTagResponse::has_flow_tag() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.flow_tag_ != nullptr);
  return value;
}
inline void GetFlowTagResponse::clear_flow_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.flow_tag_ != nullptr) _impl_.flow_tag_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::flow_tag::v202404alpha1::FlowTag& GetFlowTagResponse::_internal_flow_tag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::flow_tag::v202404alpha1::FlowTag* p = _impl_.flow_tag_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::flow_tag::v202404alpha1::FlowTag&>(::kentik::flow_tag::v202404alpha1::_FlowTag_default_instance_);
}
inline const ::kentik::flow_tag::v202404alpha1::FlowTag& GetFlowTagResponse::flow_tag() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.GetFlowTagResponse.flow_tag)
  return _internal_flow_tag();
}
inline void GetFlowTagResponse::unsafe_arena_set_allocated_flow_tag(::kentik::flow_tag::v202404alpha1::FlowTag* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.flow_tag_);
  }
  _impl_.flow_tag_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::FlowTag*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.flow_tag.v202404alpha1.GetFlowTagResponse.flow_tag)
}
inline ::kentik::flow_tag::v202404alpha1::FlowTag* GetFlowTagResponse::release_flow_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::flow_tag::v202404alpha1::FlowTag* released = _impl_.flow_tag_;
  _impl_.flow_tag_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::flow_tag::v202404alpha1::FlowTag* GetFlowTagResponse::unsafe_arena_release_flow_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.flow_tag.v202404alpha1.GetFlowTagResponse.flow_tag)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::flow_tag::v202404alpha1::FlowTag* temp = _impl_.flow_tag_;
  _impl_.flow_tag_ = nullptr;
  return temp;
}
inline ::kentik::flow_tag::v202404alpha1::FlowTag* GetFlowTagResponse::_internal_mutable_flow_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.flow_tag_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::flow_tag::v202404alpha1::FlowTag>(GetArena());
    _impl_.flow_tag_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::FlowTag*>(p);
  }
  return _impl_.flow_tag_;
}
inline ::kentik::flow_tag::v202404alpha1::FlowTag* GetFlowTagResponse::mutable_flow_tag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::flow_tag::v202404alpha1::FlowTag* _msg = _internal_mutable_flow_tag();
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.GetFlowTagResponse.flow_tag)
  return _msg;
}
inline void GetFlowTagResponse::set_allocated_flow_tag(::kentik::flow_tag::v202404alpha1::FlowTag* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.flow_tag_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.flow_tag_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::FlowTag*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.flow_tag.v202404alpha1.GetFlowTagResponse.flow_tag)
}

// -------------------------------------------------------------------

// SearchFlowTagRequest

// .kentik.flow_tag.v202404alpha1.FlowTagSearch search = 1 [json_name = "search"];
inline bool SearchFlowTagRequest::has_search() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.search_ != nullptr);
  return value;
}
inline void SearchFlowTagRequest::clear_search() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.search_ != nullptr) _impl_.search_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::flow_tag::v202404alpha1::FlowTagSearch& SearchFlowTagRequest::_internal_search() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::flow_tag::v202404alpha1::FlowTagSearch* p = _impl_.search_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::flow_tag::v202404alpha1::FlowTagSearch&>(::kentik::flow_tag::v202404alpha1::_FlowTagSearch_default_instance_);
}
inline const ::kentik::flow_tag::v202404alpha1::FlowTagSearch& SearchFlowTagRequest::search() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.SearchFlowTagRequest.search)
  return _internal_search();
}
inline void SearchFlowTagRequest::unsafe_arena_set_allocated_search(::kentik::flow_tag::v202404alpha1::FlowTagSearch* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.search_);
  }
  _impl_.search_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::FlowTagSearch*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.flow_tag.v202404alpha1.SearchFlowTagRequest.search)
}
inline ::kentik::flow_tag::v202404alpha1::FlowTagSearch* SearchFlowTagRequest::release_search() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::flow_tag::v202404alpha1::FlowTagSearch* released = _impl_.search_;
  _impl_.search_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::flow_tag::v202404alpha1::FlowTagSearch* SearchFlowTagRequest::unsafe_arena_release_search() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.flow_tag.v202404alpha1.SearchFlowTagRequest.search)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::flow_tag::v202404alpha1::FlowTagSearch* temp = _impl_.search_;
  _impl_.search_ = nullptr;
  return temp;
}
inline ::kentik::flow_tag::v202404alpha1::FlowTagSearch* SearchFlowTagRequest::_internal_mutable_search() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.search_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::flow_tag::v202404alpha1::FlowTagSearch>(GetArena());
    _impl_.search_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::FlowTagSearch*>(p);
  }
  return _impl_.search_;
}
inline ::kentik::flow_tag::v202404alpha1::FlowTagSearch* SearchFlowTagRequest::mutable_search() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::flow_tag::v202404alpha1::FlowTagSearch* _msg = _internal_mutable_search();
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.SearchFlowTagRequest.search)
  return _msg;
}
inline void SearchFlowTagRequest::set_allocated_search(::kentik::flow_tag::v202404alpha1::FlowTagSearch* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.search_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.search_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::FlowTagSearch*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.flow_tag.v202404alpha1.SearchFlowTagRequest.search)
}

// -------------------------------------------------------------------

// SearchFlowTagResponse

// repeated .kentik.flow_tag.v202404alpha1.FlowTag flow_tags = 1 [json_name = "flowTags"];
inline int SearchFlowTagResponse::_internal_flow_tags_size() const {
  return _internal_flow_tags().size();
}
inline int SearchFlowTagResponse::flow_tags_size() const {
  return _internal_flow_tags_size();
}
inline void SearchFlowTagResponse::clear_flow_tags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flow_tags_.Clear();
}
inline ::kentik::flow_tag::v202404alpha1::FlowTag* SearchFlowTagResponse::mutable_flow_tags(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.SearchFlowTagResponse.flow_tags)
  return _internal_mutable_flow_tags()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::flow_tag::v202404alpha1::FlowTag>* SearchFlowTagResponse::mutable_flow_tags()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.flow_tag.v202404alpha1.SearchFlowTagResponse.flow_tags)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_flow_tags();
}
inline const ::kentik::flow_tag::v202404alpha1::FlowTag& SearchFlowTagResponse::flow_tags(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.SearchFlowTagResponse.flow_tags)
  return _internal_flow_tags().Get(index);
}
inline ::kentik::flow_tag::v202404alpha1::FlowTag* SearchFlowTagResponse::add_flow_tags() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::flow_tag::v202404alpha1::FlowTag* _add = _internal_mutable_flow_tags()->Add();
  // @@protoc_insertion_point(field_add:kentik.flow_tag.v202404alpha1.SearchFlowTagResponse.flow_tags)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::flow_tag::v202404alpha1::FlowTag>& SearchFlowTagResponse::flow_tags() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.flow_tag.v202404alpha1.SearchFlowTagResponse.flow_tags)
  return _internal_flow_tags();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::flow_tag::v202404alpha1::FlowTag>&
SearchFlowTagResponse::_internal_flow_tags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flow_tags_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::flow_tag::v202404alpha1::FlowTag>*
SearchFlowTagResponse::_internal_mutable_flow_tags() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.flow_tags_;
}

// uint32 total_count = 2 [json_name = "totalCount"];
inline void SearchFlowTagResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = 0u;
}
inline ::uint32_t SearchFlowTagResponse::total_count() const {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.SearchFlowTagResponse.total_count)
  return _internal_total_count();
}
inline void SearchFlowTagResponse::set_total_count(::uint32_t value) {
  _internal_set_total_count(value);
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.SearchFlowTagResponse.total_count)
}
inline ::uint32_t SearchFlowTagResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void SearchFlowTagResponse::_internal_set_total_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// uint32 invalid_count = 3 [json_name = "invalidCount"];
inline void SearchFlowTagResponse::clear_invalid_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_count_ = 0u;
}
inline ::uint32_t SearchFlowTagResponse::invalid_count() const {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.SearchFlowTagResponse.invalid_count)
  return _internal_invalid_count();
}
inline void SearchFlowTagResponse::set_invalid_count(::uint32_t value) {
  _internal_set_invalid_count(value);
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.SearchFlowTagResponse.invalid_count)
}
inline ::uint32_t SearchFlowTagResponse::_internal_invalid_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.invalid_count_;
}
inline void SearchFlowTagResponse::_internal_set_invalid_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_count_ = value;
}

// -------------------------------------------------------------------

// CreateFlowTagRequest

// .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
inline bool CreateFlowTagRequest::has_flow_tag() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.flow_tag_ != nullptr);
  return value;
}
inline void CreateFlowTagRequest::clear_flow_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.flow_tag_ != nullptr) _impl_.flow_tag_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::flow_tag::v202404alpha1::FlowTag& CreateFlowTagRequest::_internal_flow_tag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::flow_tag::v202404alpha1::FlowTag* p = _impl_.flow_tag_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::flow_tag::v202404alpha1::FlowTag&>(::kentik::flow_tag::v202404alpha1::_FlowTag_default_instance_);
}
inline const ::kentik::flow_tag::v202404alpha1::FlowTag& CreateFlowTagRequest::flow_tag() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.CreateFlowTagRequest.flow_tag)
  return _internal_flow_tag();
}
inline void CreateFlowTagRequest::unsafe_arena_set_allocated_flow_tag(::kentik::flow_tag::v202404alpha1::FlowTag* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.flow_tag_);
  }
  _impl_.flow_tag_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::FlowTag*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.flow_tag.v202404alpha1.CreateFlowTagRequest.flow_tag)
}
inline ::kentik::flow_tag::v202404alpha1::FlowTag* CreateFlowTagRequest::release_flow_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::flow_tag::v202404alpha1::FlowTag* released = _impl_.flow_tag_;
  _impl_.flow_tag_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::flow_tag::v202404alpha1::FlowTag* CreateFlowTagRequest::unsafe_arena_release_flow_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.flow_tag.v202404alpha1.CreateFlowTagRequest.flow_tag)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::flow_tag::v202404alpha1::FlowTag* temp = _impl_.flow_tag_;
  _impl_.flow_tag_ = nullptr;
  return temp;
}
inline ::kentik::flow_tag::v202404alpha1::FlowTag* CreateFlowTagRequest::_internal_mutable_flow_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.flow_tag_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::flow_tag::v202404alpha1::FlowTag>(GetArena());
    _impl_.flow_tag_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::FlowTag*>(p);
  }
  return _impl_.flow_tag_;
}
inline ::kentik::flow_tag::v202404alpha1::FlowTag* CreateFlowTagRequest::mutable_flow_tag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::flow_tag::v202404alpha1::FlowTag* _msg = _internal_mutable_flow_tag();
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.CreateFlowTagRequest.flow_tag)
  return _msg;
}
inline void CreateFlowTagRequest::set_allocated_flow_tag(::kentik::flow_tag::v202404alpha1::FlowTag* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.flow_tag_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.flow_tag_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::FlowTag*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.flow_tag.v202404alpha1.CreateFlowTagRequest.flow_tag)
}

// -------------------------------------------------------------------

// CreateFlowTagResponse

// .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
inline bool CreateFlowTagResponse::has_flow_tag() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.flow_tag_ != nullptr);
  return value;
}
inline void CreateFlowTagResponse::clear_flow_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.flow_tag_ != nullptr) _impl_.flow_tag_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::flow_tag::v202404alpha1::FlowTag& CreateFlowTagResponse::_internal_flow_tag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::flow_tag::v202404alpha1::FlowTag* p = _impl_.flow_tag_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::flow_tag::v202404alpha1::FlowTag&>(::kentik::flow_tag::v202404alpha1::_FlowTag_default_instance_);
}
inline const ::kentik::flow_tag::v202404alpha1::FlowTag& CreateFlowTagResponse::flow_tag() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.CreateFlowTagResponse.flow_tag)
  return _internal_flow_tag();
}
inline void CreateFlowTagResponse::unsafe_arena_set_allocated_flow_tag(::kentik::flow_tag::v202404alpha1::FlowTag* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.flow_tag_);
  }
  _impl_.flow_tag_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::FlowTag*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.flow_tag.v202404alpha1.CreateFlowTagResponse.flow_tag)
}
inline ::kentik::flow_tag::v202404alpha1::FlowTag* CreateFlowTagResponse::release_flow_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::flow_tag::v202404alpha1::FlowTag* released = _impl_.flow_tag_;
  _impl_.flow_tag_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::flow_tag::v202404alpha1::FlowTag* CreateFlowTagResponse::unsafe_arena_release_flow_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.flow_tag.v202404alpha1.CreateFlowTagResponse.flow_tag)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::flow_tag::v202404alpha1::FlowTag* temp = _impl_.flow_tag_;
  _impl_.flow_tag_ = nullptr;
  return temp;
}
inline ::kentik::flow_tag::v202404alpha1::FlowTag* CreateFlowTagResponse::_internal_mutable_flow_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.flow_tag_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::flow_tag::v202404alpha1::FlowTag>(GetArena());
    _impl_.flow_tag_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::FlowTag*>(p);
  }
  return _impl_.flow_tag_;
}
inline ::kentik::flow_tag::v202404alpha1::FlowTag* CreateFlowTagResponse::mutable_flow_tag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::flow_tag::v202404alpha1::FlowTag* _msg = _internal_mutable_flow_tag();
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.CreateFlowTagResponse.flow_tag)
  return _msg;
}
inline void CreateFlowTagResponse::set_allocated_flow_tag(::kentik::flow_tag::v202404alpha1::FlowTag* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.flow_tag_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.flow_tag_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::FlowTag*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.flow_tag.v202404alpha1.CreateFlowTagResponse.flow_tag)
}

// -------------------------------------------------------------------

// UpdateFlowTagRequest

// .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
inline bool UpdateFlowTagRequest::has_flow_tag() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.flow_tag_ != nullptr);
  return value;
}
inline void UpdateFlowTagRequest::clear_flow_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.flow_tag_ != nullptr) _impl_.flow_tag_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::flow_tag::v202404alpha1::FlowTag& UpdateFlowTagRequest::_internal_flow_tag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::flow_tag::v202404alpha1::FlowTag* p = _impl_.flow_tag_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::flow_tag::v202404alpha1::FlowTag&>(::kentik::flow_tag::v202404alpha1::_FlowTag_default_instance_);
}
inline const ::kentik::flow_tag::v202404alpha1::FlowTag& UpdateFlowTagRequest::flow_tag() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.UpdateFlowTagRequest.flow_tag)
  return _internal_flow_tag();
}
inline void UpdateFlowTagRequest::unsafe_arena_set_allocated_flow_tag(::kentik::flow_tag::v202404alpha1::FlowTag* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.flow_tag_);
  }
  _impl_.flow_tag_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::FlowTag*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.flow_tag.v202404alpha1.UpdateFlowTagRequest.flow_tag)
}
inline ::kentik::flow_tag::v202404alpha1::FlowTag* UpdateFlowTagRequest::release_flow_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::flow_tag::v202404alpha1::FlowTag* released = _impl_.flow_tag_;
  _impl_.flow_tag_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::flow_tag::v202404alpha1::FlowTag* UpdateFlowTagRequest::unsafe_arena_release_flow_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.flow_tag.v202404alpha1.UpdateFlowTagRequest.flow_tag)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::flow_tag::v202404alpha1::FlowTag* temp = _impl_.flow_tag_;
  _impl_.flow_tag_ = nullptr;
  return temp;
}
inline ::kentik::flow_tag::v202404alpha1::FlowTag* UpdateFlowTagRequest::_internal_mutable_flow_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.flow_tag_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::flow_tag::v202404alpha1::FlowTag>(GetArena());
    _impl_.flow_tag_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::FlowTag*>(p);
  }
  return _impl_.flow_tag_;
}
inline ::kentik::flow_tag::v202404alpha1::FlowTag* UpdateFlowTagRequest::mutable_flow_tag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::flow_tag::v202404alpha1::FlowTag* _msg = _internal_mutable_flow_tag();
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.UpdateFlowTagRequest.flow_tag)
  return _msg;
}
inline void UpdateFlowTagRequest::set_allocated_flow_tag(::kentik::flow_tag::v202404alpha1::FlowTag* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.flow_tag_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.flow_tag_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::FlowTag*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.flow_tag.v202404alpha1.UpdateFlowTagRequest.flow_tag)
}

// -------------------------------------------------------------------

// UpdateFlowTagResponse

// .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
inline bool UpdateFlowTagResponse::has_flow_tag() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.flow_tag_ != nullptr);
  return value;
}
inline void UpdateFlowTagResponse::clear_flow_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.flow_tag_ != nullptr) _impl_.flow_tag_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::flow_tag::v202404alpha1::FlowTag& UpdateFlowTagResponse::_internal_flow_tag() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::flow_tag::v202404alpha1::FlowTag* p = _impl_.flow_tag_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::flow_tag::v202404alpha1::FlowTag&>(::kentik::flow_tag::v202404alpha1::_FlowTag_default_instance_);
}
inline const ::kentik::flow_tag::v202404alpha1::FlowTag& UpdateFlowTagResponse::flow_tag() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.UpdateFlowTagResponse.flow_tag)
  return _internal_flow_tag();
}
inline void UpdateFlowTagResponse::unsafe_arena_set_allocated_flow_tag(::kentik::flow_tag::v202404alpha1::FlowTag* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.flow_tag_);
  }
  _impl_.flow_tag_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::FlowTag*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.flow_tag.v202404alpha1.UpdateFlowTagResponse.flow_tag)
}
inline ::kentik::flow_tag::v202404alpha1::FlowTag* UpdateFlowTagResponse::release_flow_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::flow_tag::v202404alpha1::FlowTag* released = _impl_.flow_tag_;
  _impl_.flow_tag_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::flow_tag::v202404alpha1::FlowTag* UpdateFlowTagResponse::unsafe_arena_release_flow_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.flow_tag.v202404alpha1.UpdateFlowTagResponse.flow_tag)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::flow_tag::v202404alpha1::FlowTag* temp = _impl_.flow_tag_;
  _impl_.flow_tag_ = nullptr;
  return temp;
}
inline ::kentik::flow_tag::v202404alpha1::FlowTag* UpdateFlowTagResponse::_internal_mutable_flow_tag() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.flow_tag_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::flow_tag::v202404alpha1::FlowTag>(GetArena());
    _impl_.flow_tag_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::FlowTag*>(p);
  }
  return _impl_.flow_tag_;
}
inline ::kentik::flow_tag::v202404alpha1::FlowTag* UpdateFlowTagResponse::mutable_flow_tag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::flow_tag::v202404alpha1::FlowTag* _msg = _internal_mutable_flow_tag();
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.UpdateFlowTagResponse.flow_tag)
  return _msg;
}
inline void UpdateFlowTagResponse::set_allocated_flow_tag(::kentik::flow_tag::v202404alpha1::FlowTag* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.flow_tag_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.flow_tag_ = reinterpret_cast<::kentik::flow_tag::v202404alpha1::FlowTag*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.flow_tag.v202404alpha1.UpdateFlowTagResponse.flow_tag)
}

// -------------------------------------------------------------------

// DeleteFlowTagRequest

// string id = 1 [json_name = "id"];
inline void DeleteFlowTagRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& DeleteFlowTagRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.flow_tag.v202404alpha1.DeleteFlowTagRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteFlowTagRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.flow_tag.v202404alpha1.DeleteFlowTagRequest.id)
}
inline std::string* DeleteFlowTagRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.flow_tag.v202404alpha1.DeleteFlowTagRequest.id)
  return _s;
}
inline const std::string& DeleteFlowTagRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void DeleteFlowTagRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* DeleteFlowTagRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* DeleteFlowTagRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.flow_tag.v202404alpha1.DeleteFlowTagRequest.id)
  return _impl_.id_.Release();
}
inline void DeleteFlowTagRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.flow_tag.v202404alpha1.DeleteFlowTagRequest.id)
}

// -------------------------------------------------------------------

// DeleteFlowTagResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v202404alpha1
}  // namespace flow_tag
}  // namespace kentik


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::kentik::flow_tag::v202404alpha1::ModelType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::flow_tag::v202404alpha1::ModelType>() {
  return ::kentik::flow_tag::v202404alpha1::ModelType_descriptor();
}
template <>
struct is_proto_enum<::kentik::flow_tag::v202404alpha1::LookupField> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::flow_tag::v202404alpha1::LookupField>() {
  return ::kentik::flow_tag::v202404alpha1::LookupField_descriptor();
}
template <>
struct is_proto_enum<::kentik::flow_tag::v202404alpha1::OrderDirection> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::flow_tag::v202404alpha1::OrderDirection>() {
  return ::kentik::flow_tag::v202404alpha1::OrderDirection_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto_2epb_2eh
