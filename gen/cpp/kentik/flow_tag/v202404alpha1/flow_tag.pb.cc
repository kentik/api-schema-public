// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/flow_tag/v202404alpha1/flow_tag.proto
// Protobuf C++ Version: 5.29.3

#include "kentik/flow_tag/v202404alpha1/flow_tag.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace kentik {
namespace flow_tag {
namespace v202404alpha1 {

inline constexpr OrderField::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : field_{static_cast< ::kentik::flow_tag::v202404alpha1::LookupField >(0)},
        direction_{static_cast< ::kentik::flow_tag::v202404alpha1::OrderDirection >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OrderField::OrderField(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderFieldDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderFieldDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderFieldDefaultTypeInternal() {}
  union {
    OrderField _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderFieldDefaultTypeInternal _OrderField_default_instance_;

inline constexpr Model::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{static_cast< ::kentik::flow_tag::v202404alpha1::ModelType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Model::Model(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelDefaultTypeInternal() {}
  union {
    Model _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelDefaultTypeInternal _Model_default_instance_;

inline constexpr GetFlowTagRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetFlowTagRequest::GetFlowTagRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetFlowTagRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFlowTagRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFlowTagRequestDefaultTypeInternal() {}
  union {
    GetFlowTagRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFlowTagRequestDefaultTypeInternal _GetFlowTagRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR DeleteFlowTagResponse::DeleteFlowTagResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct DeleteFlowTagResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteFlowTagResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteFlowTagResponseDefaultTypeInternal() {}
  union {
    DeleteFlowTagResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteFlowTagResponseDefaultTypeInternal _DeleteFlowTagResponse_default_instance_;

inline constexpr DeleteFlowTagRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteFlowTagRequest::DeleteFlowTagRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeleteFlowTagRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteFlowTagRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteFlowTagRequestDefaultTypeInternal() {}
  union {
    DeleteFlowTagRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteFlowTagRequestDefaultTypeInternal _DeleteFlowTagRequest_default_instance_;

inline constexpr AddressInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : addresses_{},
        total_count_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AddressInfo::AddressInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AddressInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddressInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddressInfoDefaultTypeInternal() {}
  union {
    AddressInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddressInfoDefaultTypeInternal _AddressInfo_default_instance_;

inline constexpr FlowTagSearch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : lookup_fields_{},
        _lookup_fields_cached_byte_size_{0},
        lookup_values_{},
        order_by_{},
        limit_{0},
        offset_{0},
        field_limit_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FlowTagSearch::FlowTagSearch(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FlowTagSearchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FlowTagSearchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FlowTagSearchDefaultTypeInternal() {}
  union {
    FlowTagSearch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FlowTagSearchDefaultTypeInternal _FlowTagSearch_default_instance_;

inline constexpr FlowTag::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        port_{},
        protocol_{},
        _protocol_cached_byte_size_{0},
        device_name_{},
        device_type_{},
        site_{},
        interface_name_{},
        asn_{},
        lasthop_as_name_{},
        nexthop_asn_{},
        nexthop_as_name_{},
        nexthop_{},
        bgp_aspath_{},
        bgp_community_{},
        country_{},
        vlans_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        edited_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cdate_{nullptr},
        edate_{nullptr},
        ip_{nullptr},
        mac_{nullptr},
        tcp_flags_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR FlowTag::FlowTag(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FlowTagDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FlowTagDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FlowTagDefaultTypeInternal() {}
  union {
    FlowTag _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FlowTagDefaultTypeInternal _FlowTag_default_instance_;

inline constexpr UpdateFlowTagResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        flow_tag_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateFlowTagResponse::UpdateFlowTagResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateFlowTagResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateFlowTagResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateFlowTagResponseDefaultTypeInternal() {}
  union {
    UpdateFlowTagResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateFlowTagResponseDefaultTypeInternal _UpdateFlowTagResponse_default_instance_;

inline constexpr UpdateFlowTagRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        flow_tag_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateFlowTagRequest::UpdateFlowTagRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateFlowTagRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateFlowTagRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateFlowTagRequestDefaultTypeInternal() {}
  union {
    UpdateFlowTagRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateFlowTagRequestDefaultTypeInternal _UpdateFlowTagRequest_default_instance_;

inline constexpr SearchFlowTagResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : flow_tags_{},
        total_count_{0u},
        invalid_count_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SearchFlowTagResponse::SearchFlowTagResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SearchFlowTagResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchFlowTagResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchFlowTagResponseDefaultTypeInternal() {}
  union {
    SearchFlowTagResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchFlowTagResponseDefaultTypeInternal _SearchFlowTagResponse_default_instance_;

inline constexpr SearchFlowTagRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        search_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SearchFlowTagRequest::SearchFlowTagRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SearchFlowTagRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchFlowTagRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchFlowTagRequestDefaultTypeInternal() {}
  union {
    SearchFlowTagRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchFlowTagRequestDefaultTypeInternal _SearchFlowTagRequest_default_instance_;

inline constexpr GetFlowTagResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        flow_tag_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetFlowTagResponse::GetFlowTagResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetFlowTagResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFlowTagResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFlowTagResponseDefaultTypeInternal() {}
  union {
    GetFlowTagResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFlowTagResponseDefaultTypeInternal _GetFlowTagResponse_default_instance_;

inline constexpr CreateFlowTagResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        flow_tag_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateFlowTagResponse::CreateFlowTagResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateFlowTagResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateFlowTagResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateFlowTagResponseDefaultTypeInternal() {}
  union {
    CreateFlowTagResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateFlowTagResponseDefaultTypeInternal _CreateFlowTagResponse_default_instance_;

inline constexpr CreateFlowTagRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        flow_tag_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateFlowTagRequest::CreateFlowTagRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateFlowTagRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateFlowTagRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateFlowTagRequestDefaultTypeInternal() {}
  union {
    CreateFlowTagRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateFlowTagRequestDefaultTypeInternal _CreateFlowTagRequest_default_instance_;
}  // namespace v202404alpha1
}  // namespace flow_tag
}  // namespace kentik
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto = nullptr;
const ::uint32_t
    TableStruct_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::Model, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::Model, _impl_.type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::OrderField, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::OrderField, _impl_.field_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::OrderField, _impl_.direction_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTagSearch, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTagSearch, _impl_.limit_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTagSearch, _impl_.offset_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTagSearch, _impl_.lookup_fields_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTagSearch, _impl_.lookup_values_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTagSearch, _impl_.order_by_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTagSearch, _impl_.field_limit_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::AddressInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::AddressInfo, _impl_.addresses_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::AddressInfo, _impl_.total_count_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.edited_by_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.created_by_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.cdate_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.edate_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.ip_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.tcp_flags_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.protocol_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.device_name_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.device_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.site_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.interface_name_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.asn_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.lasthop_as_name_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.nexthop_asn_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.nexthop_as_name_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.nexthop_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.bgp_aspath_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.bgp_community_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.mac_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.country_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::FlowTag, _impl_.vlans_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        3,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::GetFlowTagRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::GetFlowTagRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::GetFlowTagResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::GetFlowTagResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::GetFlowTagResponse, _impl_.flow_tag_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::SearchFlowTagRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::SearchFlowTagRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::SearchFlowTagRequest, _impl_.search_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::SearchFlowTagResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::SearchFlowTagResponse, _impl_.flow_tags_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::SearchFlowTagResponse, _impl_.total_count_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::SearchFlowTagResponse, _impl_.invalid_count_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::CreateFlowTagRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::CreateFlowTagRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::CreateFlowTagRequest, _impl_.flow_tag_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::CreateFlowTagResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::CreateFlowTagResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::CreateFlowTagResponse, _impl_.flow_tag_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::UpdateFlowTagRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::UpdateFlowTagRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::UpdateFlowTagRequest, _impl_.flow_tag_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::UpdateFlowTagResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::UpdateFlowTagResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::UpdateFlowTagResponse, _impl_.flow_tag_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::DeleteFlowTagRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::DeleteFlowTagRequest, _impl_.id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::flow_tag::v202404alpha1::DeleteFlowTagResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::kentik::flow_tag::v202404alpha1::Model)},
        {9, -1, -1, sizeof(::kentik::flow_tag::v202404alpha1::OrderField)},
        {19, -1, -1, sizeof(::kentik::flow_tag::v202404alpha1::FlowTagSearch)},
        {33, -1, -1, sizeof(::kentik::flow_tag::v202404alpha1::AddressInfo)},
        {43, 75, -1, sizeof(::kentik::flow_tag::v202404alpha1::FlowTag)},
        {99, -1, -1, sizeof(::kentik::flow_tag::v202404alpha1::GetFlowTagRequest)},
        {108, 117, -1, sizeof(::kentik::flow_tag::v202404alpha1::GetFlowTagResponse)},
        {118, 127, -1, sizeof(::kentik::flow_tag::v202404alpha1::SearchFlowTagRequest)},
        {128, -1, -1, sizeof(::kentik::flow_tag::v202404alpha1::SearchFlowTagResponse)},
        {139, 148, -1, sizeof(::kentik::flow_tag::v202404alpha1::CreateFlowTagRequest)},
        {149, 158, -1, sizeof(::kentik::flow_tag::v202404alpha1::CreateFlowTagResponse)},
        {159, 168, -1, sizeof(::kentik::flow_tag::v202404alpha1::UpdateFlowTagRequest)},
        {169, 178, -1, sizeof(::kentik::flow_tag::v202404alpha1::UpdateFlowTagResponse)},
        {179, -1, -1, sizeof(::kentik::flow_tag::v202404alpha1::DeleteFlowTagRequest)},
        {188, -1, -1, sizeof(::kentik::flow_tag::v202404alpha1::DeleteFlowTagResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::kentik::flow_tag::v202404alpha1::_Model_default_instance_._instance,
    &::kentik::flow_tag::v202404alpha1::_OrderField_default_instance_._instance,
    &::kentik::flow_tag::v202404alpha1::_FlowTagSearch_default_instance_._instance,
    &::kentik::flow_tag::v202404alpha1::_AddressInfo_default_instance_._instance,
    &::kentik::flow_tag::v202404alpha1::_FlowTag_default_instance_._instance,
    &::kentik::flow_tag::v202404alpha1::_GetFlowTagRequest_default_instance_._instance,
    &::kentik::flow_tag::v202404alpha1::_GetFlowTagResponse_default_instance_._instance,
    &::kentik::flow_tag::v202404alpha1::_SearchFlowTagRequest_default_instance_._instance,
    &::kentik::flow_tag::v202404alpha1::_SearchFlowTagResponse_default_instance_._instance,
    &::kentik::flow_tag::v202404alpha1::_CreateFlowTagRequest_default_instance_._instance,
    &::kentik::flow_tag::v202404alpha1::_CreateFlowTagResponse_default_instance_._instance,
    &::kentik::flow_tag::v202404alpha1::_UpdateFlowTagRequest_default_instance_._instance,
    &::kentik::flow_tag::v202404alpha1::_UpdateFlowTagResponse_default_instance_._instance,
    &::kentik::flow_tag::v202404alpha1::_DeleteFlowTagRequest_default_instance_._instance,
    &::kentik::flow_tag::v202404alpha1::_DeleteFlowTagResponse_default_instance_._instance,
};
const char descriptor_table_protodef_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n,kentik/flow_tag/v202404alpha1/flow_tag"
    ".proto\022\035kentik.flow_tag.v202404alpha1\032\034g"
    "oogle/api/annotations.proto\032\027google/api/"
    "client.proto\032\037google/api/field_behavior."
    "proto\032\037google/protobuf/timestamp.proto\032."
    "protoc-gen-openapiv2/options/annotations"
    ".proto\032%kentik/core/v202303/annotations."
    "proto\"E\n\005Model\022<\n\004type\030\001 \001(\0162(.kentik.fl"
    "ow_tag.v202404alpha1.ModelTypeR\004type\"\233\001\n"
    "\nOrderField\022@\n\005field\030\001 \001(\0162*.kentik.flow"
    "_tag.v202404alpha1.LookupFieldR\005field\022K\n"
    "\tdirection\030\002 \001(\0162-.kentik.flow_tag.v2024"
    "04alpha1.OrderDirectionR\tdirection\"\232\002\n\rF"
    "lowTagSearch\022\024\n\005limit\030\001 \001(\005R\005limit\022\026\n\006of"
    "fset\030\002 \001(\005R\006offset\022O\n\rlookup_fields\030\003 \003("
    "\0162*.kentik.flow_tag.v202404alpha1.Lookup"
    "FieldR\014lookupFields\022#\n\rlookup_values\030\004 \003"
    "(\tR\014lookupValues\022D\n\010order_by\030\005 \003(\0132).ken"
    "tik.flow_tag.v202404alpha1.OrderFieldR\007o"
    "rderBy\022\037\n\013field_limit\030\006 \001(\005R\nfieldLimit\""
    "L\n\013AddressInfo\022\034\n\taddresses\030\001 \003(\tR\taddre"
    "sses\022\037\n\013total_count\030\002 \001(\005R\ntotalCount\"\301\020"
    "\n\007FlowTag\022I\n\002id\030\001 \001(\tB9\222A321Unique syste"
    "m assigned identifier of the flow tag\340A\003"
    "R\002id\022Y\n\004name\030\003 \001(\tBE\222A\?2=This will appea"
    "r in places where selecting a tag is nec"
    "essary\340A\003R\004name\022B\n\tedited_by\030\004 \001(\tB%\222A\0372"
    "\035User who last edited this tag\340A\003R\010edite"
    "dBy\022@\n\ncreated_by\030\031 \001(\tB!\222A\0332\031User who c"
    "reated this tag\340A\003R\tcreatedBy\022a\n\005cdate\030\005"
    " \001(\0132\032.google.protobuf.TimestampB/\222A)2\'D"
    "ate and time when this tag was created\340A"
    "\003R\005cdate\022f\n\005edate\030\006 \001(\0132\032.google.protobu"
    "f.TimestampB4\222A.2,Date and time when thi"
    "s tag was last updated\340A\003R\005edate\022h\n\002ip\030\007"
    " \001(\0132*.kentik.flow_tag.v202404alpha1.Add"
    "ressInfoB,\222A)2\'IP address associated wit"
    "h the flow tagR\002ip\022A\n\004port\030\010 \003(\tB-\222A*2(P"
    "ort number associated with the flow tagR"
    "\004port\022H\n\ttcp_flags\030\t \001(\rB+\222A(2&TCP flags"
    " associated with the flow tagR\010tcpFlags\022"
    "N\n\010protocol\030\n \003(\rB2\222A/2-Protocol numbers"
    " associated with the flow tagR\010protocol\022"
    "U\n\013device_name\030\013 \003(\tB4\222A12/Name of the d"
    "evice associated with the flow tagR\ndevi"
    "ceName\022U\n\013device_type\030\014 \003(\tB4\222A12/Type o"
    "f the device associated with the flow ta"
    "gR\ndeviceType\022V\n\004site\030\r \003(\tBB\222A\?2=Site w"
    "here the device associated with the flow"
    " tag is locatedR\004site\022^\n\016interface_name\030"
    "\016 \003(\tB7\222A422Name of the interface associ"
    "ated with the flow tagR\rinterfaceName\022R\n"
    "\003asn\030\017 \003(\tB@\222A=2;Autonomous System Numbe"
    "r (ASN) associated with the flow tagR\003as"
    "n\022w\n\017lasthop_as_name\030\020 \003(\tBO\222AL2JName of"
    " the last hop\'s Autonomous System (AS) a"
    "ssociated with the flow tagR\rlasthopAsNa"
    "me\022q\n\013nexthop_asn\030\021 \003(\tBP\222AM2KAutonomous"
    " System Number (ASN) of the next hop ass"
    "ociated with the flow tagR\nnexthopAsn\022w\n"
    "\017nexthop_as_name\030\022 \003(\tBO\222AL2JName of the"
    " next hop\'s Autonomous System (AS) assoc"
    "iated with the flow tagR\rnexthopAsName\022D"
    "\n\007nexthop\030\023 \003(\tB*\222A\'2%Next hop associate"
    "d with the flow tagR\007nexthop\022L\n\nbgp_aspa"
    "th\030\024 \003(\tB-\222A*2(BGP AS path associated wi"
    "th the flow tagR\tbgpAspath\022T\n\rbgp_commun"
    "ity\030\025 \003(\tB/\222A,2*BGP community associated"
    " with the flow tagR\014bgpCommunity\022k\n\003mac\030"
    "\026 \001(\0132*.kentik.flow_tag.v202404alpha1.Ad"
    "dressInfoB-\222A*2(MAC address associated w"
    "ith the flow tagR\003mac\022C\n\007country\030\027 \003(\tB)"
    "\222A&2$Country associated with the flow ta"
    "gR\007country\022=\n\005vlans\030\030 \003(\tB\'\222A$2\"VLANs as"
    "sociated with the flow tagR\005vlans\"#\n\021Get"
    "FlowTagRequest\022\016\n\002id\030\001 \001(\tR\002id\"W\n\022GetFlo"
    "wTagResponse\022A\n\010flow_tag\030\001 \001(\0132&.kentik."
    "flow_tag.v202404alpha1.FlowTagR\007flowTag\""
    "\\\n\024SearchFlowTagRequest\022D\n\006search\030\001 \001(\0132"
    ",.kentik.flow_tag.v202404alpha1.FlowTagS"
    "earchR\006search\"\242\001\n\025SearchFlowTagResponse\022"
    "C\n\tflow_tags\030\001 \003(\0132&.kentik.flow_tag.v20"
    "2404alpha1.FlowTagR\010flowTags\022\037\n\013total_co"
    "unt\030\002 \001(\rR\ntotalCount\022#\n\rinvalid_count\030\003"
    " \001(\rR\014invalidCount\"Y\n\024CreateFlowTagReque"
    "st\022A\n\010flow_tag\030\001 \001(\0132&.kentik.flow_tag.v"
    "202404alpha1.FlowTagR\007flowTag\"Z\n\025CreateF"
    "lowTagResponse\022A\n\010flow_tag\030\001 \001(\0132&.kenti"
    "k.flow_tag.v202404alpha1.FlowTagR\007flowTa"
    "g\"Y\n\024UpdateFlowTagRequest\022A\n\010flow_tag\030\001 "
    "\001(\0132&.kentik.flow_tag.v202404alpha1.Flow"
    "TagR\007flowTag\"Z\n\025UpdateFlowTagResponse\022A\n"
    "\010flow_tag\030\001 \001(\0132&.kentik.flow_tag.v20240"
    "4alpha1.FlowTagR\007flowTag\"&\n\024DeleteFlowTa"
    "gRequest\022\016\n\002id\030\001 \001(\tR\002id\"\027\n\025DeleteFlowTa"
    "gResponse*t\n\tModelType\022\032\n\026MODEL_TYPE_UNS"
    "PECIFIED\020\000\022\031\n\025MODEL_TYPE_POPULATORS\020\001\022\023\n"
    "\017MODEL_TYPE_TAGS\020\002\022\033\n\027MODEL_TYPE_IP_ADDR"
    "ESSES\020\003*C\n\013LookupField\022\034\n\030LOOKUP_FIELD_U"
    "NSPECIFIED\020\000\022\026\n\022LOOKUP_FIELD_VALUE\020\001*d\n\016"
    "OrderDirection\022\037\n\033ORDER_DIRECTION_UNSPEC"
    "IFIED\020\000\022\027\n\023ORDER_DIRECTION_ASC\020\001\022\030\n\024ORDE"
    "R_DIRECTION_DESC\020\0022\313\013\n\016FlowTagService\022\225\002"
    "\n\nGetFlowTag\0220.kentik.flow_tag.v202404al"
    "pha1.GetFlowTagRequest\0321.kentik.flow_tag"
    ".v202404alpha1.GetFlowTagResponse\"\241\001\222A_\022"
    "\033Get flow tag configuration.\0324Returns co"
    "nfiguration of flow tag with specified I"
    "D.*\nGetFlowTag\362\327\002\023admin.flow_tag:read\202\323\344"
    "\223\002\"\022 /flow_tag/v202404alpha1/tag/{id}\022\244\002"
    "\n\rSearchFlowTag\0223.kentik.flow_tag.v20240"
    "4alpha1.SearchFlowTagRequest\0324.kentik.fl"
    "ow_tag.v202404alpha1.SearchFlowTagRespon"
    "se\"\247\001\222Aj\022\036Search flow tag configuration."
    "\0329Returns configuration of flow tag with"
    " search parameters.*\rSearchFlowTag\362\327\002\023ad"
    "min.flow_tag:read\202\323\344\223\002\035\022\033/flow_tag/v2024"
    "04alpha1/tag\022\217\002\n\rCreateFlowTag\0223.kentik."
    "flow_tag.v202404alpha1.CreateFlowTagRequ"
    "est\0324.kentik.flow_tag.v202404alpha1.Crea"
    "teFlowTagResponse\"\222\001\222AQ\022\036Create flow tag"
    " configuration.\032 Create a flow tag confi"
    "guration.*\rCreateFlowTag\362\327\002\024admin.flow_t"
    "ag:write\202\323\344\223\002 \"\033/flow_tag/v202404alpha1/"
    "tag:\001*\022\235\002\n\rUpdateFlowTag\0223.kentik.flow_t"
    "ag.v202404alpha1.UpdateFlowTagRequest\0324."
    "kentik.flow_tag.v202404alpha1.UpdateFlow"
    "TagResponse\"\240\001\222AQ\022\036Update flow tag confi"
    "guration.\032 Update a flow tag configurati"
    "on.*\rUpdateFlowTag\362\327\002\024admin.flow_tag:wri"
    "te\202\323\344\223\002.\032)/flow_tag/v202404alpha1/tag/{f"
    "low_tag.id}:\001*\022\231\002\n\rDeleteFlowTag\0223.kenti"
    "k.flow_tag.v202404alpha1.DeleteFlowTagRe"
    "quest\0324.kentik.flow_tag.v202404alpha1.De"
    "leteFlowTagResponse\"\234\001\222AY\022\036Delete flow t"
    "ag configuration.\032(Delete a flow tag con"
    "figuration with id.*\rDeleteFlowTag\362\327\002\024ad"
    "min.flow_tag:write\202\323\344\223\002\"* /flow_tag/v202"
    "404alpha1/tag/{id}\032,\312A\023grpc.api.kentik.c"
    "om\352\327\002\016admin.flow_tag\220\330\002\003B\311\014ZQgithub.com/"
    "kentik/api-schema-public/gen/go/kentik/f"
    "low_tag/v202404alpha1;flow_tag\222A\362\013\022\213\n\n\014F"
    "low Tag API\022\244\t# Overview\nThe Flow Tag AP"
    "I enables programmatic creation and mana"
    "gement of flow tags. * In addition to ta"
    "g name, at least one other field must be"
    " specified to create a tag.\n * All speci"
    "fied tag fields are ANDed for evaluation"
    ".\n * Except for Tag Name, any field may "
    "contain multiple comma-separated values,"
    " which will be ORed for evaluation.\n * A"
    " tag will be applied to a flow only when"
    " all of the fields specified for that ta"
    "g are matched. Source and Destination fl"
    "ows are each evaluated independently for"
    " matches.\n * Source and Destination flow"
    "s are each evaluated independently for m"
    "atches.\n * A match results in the additi"
    "on of the tag name to a delimited list o"
    "f tags in the src_flow_tags and/or dst_f"
    "low_tags column of each specified device"
    "s KDE main table.\n * Tags in a KDE table"
    " can be searched as part of a query. Tag"
    " searches are substring-based. Query res"
    "ults vary depending on how tags are name"
    "d; [see Queries Using Tags](https://kb.k"
    "entik.com/v0/Eb02.htm#Eb02-Queries_Using"
    "_Tags).\n * Additional information on the"
    " values of individual fields may be foun"
    "d in [Tag Field Definitions](https://kb."
    "kentik.com/v4/Cb04.htm#Cb04-Tag_Field_De"
    "finitions) in the Kentik Knowledge Base."
    "\n\n\"E\n\026Kentik API Engineering\022+https://gi"
    "thub.com/kentik/api-schema-public2\rv2024"
    "04alpha1*\001\0022\020application/json:\020applicati"
    "on/jsonZD\n\036\n\005email\022\025\010\002\032\017X-CH-Auth-Email "
    "\002\n\"\n\005token\022\031\010\002\032\023X-CH-Auth-API-Token \002b\026\n"
    "\t\n\005email\022\000\n\t\n\005token\022\000r]\n%General informa"
    "tion about Kentik APIs\0224https://kb.kenti"
    "k.com/v0/Ab09.htm#Ab09-APIs_Overviewb\006pr"
    "oto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto_deps[6] =
    {
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_google_2fapi_2fclient_2eproto,
        &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_kentik_2fcore_2fv202303_2fannotations_2eproto,
        &::descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto = {
    false,
    false,
    7204,
    descriptor_table_protodef_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto,
    "kentik/flow_tag/v202404alpha1/flow_tag.proto",
    &descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto_once,
    descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto_deps,
    6,
    15,
    schemas,
    file_default_instances,
    TableStruct_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto::offsets,
    file_level_enum_descriptors_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto,
    file_level_service_descriptors_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto,
};
namespace kentik {
namespace flow_tag {
namespace v202404alpha1 {
const ::google::protobuf::EnumDescriptor* ModelType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto);
  return file_level_enum_descriptors_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ModelType_internal_data_[] = {
    262144u, 0u, };
bool ModelType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* LookupField_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto);
  return file_level_enum_descriptors_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t LookupField_internal_data_[] = {
    131072u, 0u, };
bool LookupField_IsValid(int value) {
  return 0 <= value && value <= 1;
}
const ::google::protobuf::EnumDescriptor* OrderDirection_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto);
  return file_level_enum_descriptors_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t OrderDirection_internal_data_[] = {
    196608u, 0u, };
bool OrderDirection_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class Model::_Internal {
 public:
};

Model::Model(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.flow_tag.v202404alpha1.Model)
}
Model::Model(
    ::google::protobuf::Arena* arena, const Model& from)
    : Model(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Model::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Model::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
Model::~Model() {
  // @@protoc_insertion_point(destructor:kentik.flow_tag.v202404alpha1.Model)
  SharedDtor(*this);
}
inline void Model::SharedDtor(MessageLite& self) {
  Model& this_ = static_cast<Model&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Model::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Model(arena);
}
constexpr auto Model::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Model),
                                            alignof(Model));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Model::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Model_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Model::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Model>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Model::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Model>(), &Model::ByteSizeLong,
            &Model::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Model, _impl_._cached_size_),
        false,
    },
    &Model::kDescriptorMethods,
    &descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Model::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Model::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::Model>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.flow_tag.v202404alpha1.ModelType type = 1 [json_name = "type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Model, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Model, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.flow_tag.v202404alpha1.ModelType type = 1 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Model::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.flow_tag.v202404alpha1.Model)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Model::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Model& this_ = static_cast<const Model&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Model::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Model& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.flow_tag.v202404alpha1.Model)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .kentik.flow_tag.v202404alpha1.ModelType type = 1 [json_name = "type"];
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.flow_tag.v202404alpha1.Model)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Model::ByteSizeLong(const MessageLite& base) {
          const Model& this_ = static_cast<const Model&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Model::ByteSizeLong() const {
          const Model& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.flow_tag.v202404alpha1.Model)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.flow_tag.v202404alpha1.ModelType type = 1 [json_name = "type"];
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Model::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Model*>(&to_msg);
  auto& from = static_cast<const Model&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.flow_tag.v202404alpha1.Model)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Model::CopyFrom(const Model& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.flow_tag.v202404alpha1.Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Model::InternalSwap(Model* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata Model::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderField::_Internal {
 public:
};

OrderField::OrderField(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.flow_tag.v202404alpha1.OrderField)
}
OrderField::OrderField(
    ::google::protobuf::Arena* arena, const OrderField& from)
    : OrderField(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE OrderField::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void OrderField::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, field_),
           0,
           offsetof(Impl_, direction_) -
               offsetof(Impl_, field_) +
               sizeof(Impl_::direction_));
}
OrderField::~OrderField() {
  // @@protoc_insertion_point(destructor:kentik.flow_tag.v202404alpha1.OrderField)
  SharedDtor(*this);
}
inline void OrderField::SharedDtor(MessageLite& self) {
  OrderField& this_ = static_cast<OrderField&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* OrderField::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OrderField(arena);
}
constexpr auto OrderField::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(OrderField),
                                            alignof(OrderField));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OrderField::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OrderField_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OrderField::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OrderField>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OrderField::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OrderField>(), &OrderField::ByteSizeLong,
            &OrderField::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OrderField, _impl_._cached_size_),
        false,
    },
    &OrderField::kDescriptorMethods,
    &descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OrderField::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> OrderField::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::OrderField>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.flow_tag.v202404alpha1.OrderDirection direction = 2 [json_name = "direction"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderField, _impl_.direction_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(OrderField, _impl_.direction_)}},
    // .kentik.flow_tag.v202404alpha1.LookupField field = 1 [json_name = "field"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderField, _impl_.field_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(OrderField, _impl_.field_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.flow_tag.v202404alpha1.LookupField field = 1 [json_name = "field"];
    {PROTOBUF_FIELD_OFFSET(OrderField, _impl_.field_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .kentik.flow_tag.v202404alpha1.OrderDirection direction = 2 [json_name = "direction"];
    {PROTOBUF_FIELD_OFFSET(OrderField, _impl_.direction_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void OrderField::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.flow_tag.v202404alpha1.OrderField)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.field_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.direction_) -
      reinterpret_cast<char*>(&_impl_.field_)) + sizeof(_impl_.direction_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OrderField::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OrderField& this_ = static_cast<const OrderField&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OrderField::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OrderField& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.flow_tag.v202404alpha1.OrderField)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .kentik.flow_tag.v202404alpha1.LookupField field = 1 [json_name = "field"];
          if (this_._internal_field() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_field(), target);
          }

          // .kentik.flow_tag.v202404alpha1.OrderDirection direction = 2 [json_name = "direction"];
          if (this_._internal_direction() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_direction(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.flow_tag.v202404alpha1.OrderField)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OrderField::ByteSizeLong(const MessageLite& base) {
          const OrderField& this_ = static_cast<const OrderField&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OrderField::ByteSizeLong() const {
          const OrderField& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.flow_tag.v202404alpha1.OrderField)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .kentik.flow_tag.v202404alpha1.LookupField field = 1 [json_name = "field"];
            if (this_._internal_field() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_field());
            }
            // .kentik.flow_tag.v202404alpha1.OrderDirection direction = 2 [json_name = "direction"];
            if (this_._internal_direction() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_direction());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OrderField::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderField*>(&to_msg);
  auto& from = static_cast<const OrderField&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.flow_tag.v202404alpha1.OrderField)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_field() != 0) {
    _this->_impl_.field_ = from._impl_.field_;
  }
  if (from._internal_direction() != 0) {
    _this->_impl_.direction_ = from._impl_.direction_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderField::CopyFrom(const OrderField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.flow_tag.v202404alpha1.OrderField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderField::InternalSwap(OrderField* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderField, _impl_.direction_)
      + sizeof(OrderField::_impl_.direction_)
      - PROTOBUF_FIELD_OFFSET(OrderField, _impl_.field_)>(
          reinterpret_cast<char*>(&_impl_.field_),
          reinterpret_cast<char*>(&other->_impl_.field_));
}

::google::protobuf::Metadata OrderField::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FlowTagSearch::_Internal {
 public:
};

FlowTagSearch::FlowTagSearch(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.flow_tag.v202404alpha1.FlowTagSearch)
}
inline PROTOBUF_NDEBUG_INLINE FlowTagSearch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::flow_tag::v202404alpha1::FlowTagSearch& from_msg)
      : lookup_fields_{visibility, arena, from.lookup_fields_},
        _lookup_fields_cached_byte_size_{0},
        lookup_values_{visibility, arena, from.lookup_values_},
        order_by_{visibility, arena, from.order_by_},
        _cached_size_{0} {}

FlowTagSearch::FlowTagSearch(
    ::google::protobuf::Arena* arena,
    const FlowTagSearch& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FlowTagSearch* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, limit_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, limit_),
           offsetof(Impl_, field_limit_) -
               offsetof(Impl_, limit_) +
               sizeof(Impl_::field_limit_));

  // @@protoc_insertion_point(copy_constructor:kentik.flow_tag.v202404alpha1.FlowTagSearch)
}
inline PROTOBUF_NDEBUG_INLINE FlowTagSearch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : lookup_fields_{visibility, arena},
        _lookup_fields_cached_byte_size_{0},
        lookup_values_{visibility, arena},
        order_by_{visibility, arena},
        _cached_size_{0} {}

inline void FlowTagSearch::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, limit_),
           0,
           offsetof(Impl_, field_limit_) -
               offsetof(Impl_, limit_) +
               sizeof(Impl_::field_limit_));
}
FlowTagSearch::~FlowTagSearch() {
  // @@protoc_insertion_point(destructor:kentik.flow_tag.v202404alpha1.FlowTagSearch)
  SharedDtor(*this);
}
inline void FlowTagSearch::SharedDtor(MessageLite& self) {
  FlowTagSearch& this_ = static_cast<FlowTagSearch&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* FlowTagSearch::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FlowTagSearch(arena);
}
constexpr auto FlowTagSearch::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(FlowTagSearch, _impl_.lookup_fields_) +
          decltype(FlowTagSearch::_impl_.lookup_fields_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FlowTagSearch, _impl_.lookup_values_) +
          decltype(FlowTagSearch::_impl_.lookup_values_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FlowTagSearch, _impl_.order_by_) +
          decltype(FlowTagSearch::_impl_.order_by_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(FlowTagSearch), alignof(FlowTagSearch), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&FlowTagSearch::PlacementNew_,
                                 sizeof(FlowTagSearch),
                                 alignof(FlowTagSearch));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FlowTagSearch::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FlowTagSearch_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FlowTagSearch::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FlowTagSearch>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FlowTagSearch::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FlowTagSearch>(), &FlowTagSearch::ByteSizeLong,
            &FlowTagSearch::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FlowTagSearch, _impl_._cached_size_),
        false,
    },
    &FlowTagSearch::kDescriptorMethods,
    &descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FlowTagSearch::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 65, 2> FlowTagSearch::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::FlowTagSearch>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 limit = 1 [json_name = "limit"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FlowTagSearch, _impl_.limit_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTagSearch, _impl_.limit_)}},
    // int32 offset = 2 [json_name = "offset"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FlowTagSearch, _impl_.offset_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTagSearch, _impl_.offset_)}},
    // repeated .kentik.flow_tag.v202404alpha1.LookupField lookup_fields = 3 [json_name = "lookupFields"];
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTagSearch, _impl_.lookup_fields_)}},
    // repeated string lookup_values = 4 [json_name = "lookupValues"];
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTagSearch, _impl_.lookup_values_)}},
    // repeated .kentik.flow_tag.v202404alpha1.OrderField order_by = 5 [json_name = "orderBy"];
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTagSearch, _impl_.order_by_)}},
    // int32 field_limit = 6 [json_name = "fieldLimit"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FlowTagSearch, _impl_.field_limit_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTagSearch, _impl_.field_limit_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 limit = 1 [json_name = "limit"];
    {PROTOBUF_FIELD_OFFSET(FlowTagSearch, _impl_.limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 offset = 2 [json_name = "offset"];
    {PROTOBUF_FIELD_OFFSET(FlowTagSearch, _impl_.offset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .kentik.flow_tag.v202404alpha1.LookupField lookup_fields = 3 [json_name = "lookupFields"];
    {PROTOBUF_FIELD_OFFSET(FlowTagSearch, _impl_.lookup_fields_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated string lookup_values = 4 [json_name = "lookupValues"];
    {PROTOBUF_FIELD_OFFSET(FlowTagSearch, _impl_.lookup_values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .kentik.flow_tag.v202404alpha1.OrderField order_by = 5 [json_name = "orderBy"];
    {PROTOBUF_FIELD_OFFSET(FlowTagSearch, _impl_.order_by_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 field_limit = 6 [json_name = "fieldLimit"];
    {PROTOBUF_FIELD_OFFSET(FlowTagSearch, _impl_.field_limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::OrderField>()},
  }}, {{
    "\53\0\0\0\15\0\0\0"
    "kentik.flow_tag.v202404alpha1.FlowTagSearch"
    "lookup_values"
  }},
};

PROTOBUF_NOINLINE void FlowTagSearch::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.flow_tag.v202404alpha1.FlowTagSearch)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.lookup_fields_.Clear();
  _impl_.lookup_values_.Clear();
  _impl_.order_by_.Clear();
  ::memset(&_impl_.limit_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.field_limit_) -
      reinterpret_cast<char*>(&_impl_.limit_)) + sizeof(_impl_.field_limit_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FlowTagSearch::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FlowTagSearch& this_ = static_cast<const FlowTagSearch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FlowTagSearch::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FlowTagSearch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.flow_tag.v202404alpha1.FlowTagSearch)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 limit = 1 [json_name = "limit"];
          if (this_._internal_limit() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_limit(), target);
          }

          // int32 offset = 2 [json_name = "offset"];
          if (this_._internal_offset() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_offset(), target);
          }

          // repeated .kentik.flow_tag.v202404alpha1.LookupField lookup_fields = 3 [json_name = "lookupFields"];
          {
            std::size_t byte_size =
                                              this_._impl_._lookup_fields_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteEnumPacked(
                  3, this_._internal_lookup_fields(), byte_size, target);
            }
          }

          // repeated string lookup_values = 4 [json_name = "lookupValues"];
          for (int i = 0, n = this_._internal_lookup_values_size(); i < n; ++i) {
            const auto& s = this_._internal_lookup_values().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.flow_tag.v202404alpha1.FlowTagSearch.lookup_values");
            target = stream->WriteString(4, s, target);
          }

          // repeated .kentik.flow_tag.v202404alpha1.OrderField order_by = 5 [json_name = "orderBy"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_order_by_size());
               i < n; i++) {
            const auto& repfield = this_._internal_order_by().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // int32 field_limit = 6 [json_name = "fieldLimit"];
          if (this_._internal_field_limit() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_field_limit(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.flow_tag.v202404alpha1.FlowTagSearch)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FlowTagSearch::ByteSizeLong(const MessageLite& base) {
          const FlowTagSearch& this_ = static_cast<const FlowTagSearch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FlowTagSearch::ByteSizeLong() const {
          const FlowTagSearch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.flow_tag.v202404alpha1.FlowTagSearch)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.flow_tag.v202404alpha1.LookupField lookup_fields = 3 [json_name = "lookupFields"];
            {
              total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
                  this_._internal_lookup_fields(), 1, this_._impl_._lookup_fields_cached_byte_size_);
            }
            // repeated string lookup_values = 4 [json_name = "lookupValues"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_lookup_values().size());
              for (int i = 0, n = this_._internal_lookup_values().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_lookup_values().Get(i));
              }
            }
            // repeated .kentik.flow_tag.v202404alpha1.OrderField order_by = 5 [json_name = "orderBy"];
            {
              total_size += 1UL * this_._internal_order_by_size();
              for (const auto& msg : this_._internal_order_by()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // int32 limit = 1 [json_name = "limit"];
            if (this_._internal_limit() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_limit());
            }
            // int32 offset = 2 [json_name = "offset"];
            if (this_._internal_offset() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_offset());
            }
            // int32 field_limit = 6 [json_name = "fieldLimit"];
            if (this_._internal_field_limit() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_field_limit());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FlowTagSearch::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FlowTagSearch*>(&to_msg);
  auto& from = static_cast<const FlowTagSearch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.flow_tag.v202404alpha1.FlowTagSearch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_lookup_fields()->MergeFrom(from._internal_lookup_fields());
  _this->_internal_mutable_lookup_values()->MergeFrom(from._internal_lookup_values());
  _this->_internal_mutable_order_by()->MergeFrom(
      from._internal_order_by());
  if (from._internal_limit() != 0) {
    _this->_impl_.limit_ = from._impl_.limit_;
  }
  if (from._internal_offset() != 0) {
    _this->_impl_.offset_ = from._impl_.offset_;
  }
  if (from._internal_field_limit() != 0) {
    _this->_impl_.field_limit_ = from._impl_.field_limit_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FlowTagSearch::CopyFrom(const FlowTagSearch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.flow_tag.v202404alpha1.FlowTagSearch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FlowTagSearch::InternalSwap(FlowTagSearch* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.lookup_fields_.InternalSwap(&other->_impl_.lookup_fields_);
  _impl_.lookup_values_.InternalSwap(&other->_impl_.lookup_values_);
  _impl_.order_by_.InternalSwap(&other->_impl_.order_by_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FlowTagSearch, _impl_.field_limit_)
      + sizeof(FlowTagSearch::_impl_.field_limit_)
      - PROTOBUF_FIELD_OFFSET(FlowTagSearch, _impl_.limit_)>(
          reinterpret_cast<char*>(&_impl_.limit_),
          reinterpret_cast<char*>(&other->_impl_.limit_));
}

::google::protobuf::Metadata FlowTagSearch::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AddressInfo::_Internal {
 public:
};

AddressInfo::AddressInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.flow_tag.v202404alpha1.AddressInfo)
}
inline PROTOBUF_NDEBUG_INLINE AddressInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::flow_tag::v202404alpha1::AddressInfo& from_msg)
      : addresses_{visibility, arena, from.addresses_},
        _cached_size_{0} {}

AddressInfo::AddressInfo(
    ::google::protobuf::Arena* arena,
    const AddressInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AddressInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.total_count_ = from._impl_.total_count_;

  // @@protoc_insertion_point(copy_constructor:kentik.flow_tag.v202404alpha1.AddressInfo)
}
inline PROTOBUF_NDEBUG_INLINE AddressInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : addresses_{visibility, arena},
        _cached_size_{0} {}

inline void AddressInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.total_count_ = {};
}
AddressInfo::~AddressInfo() {
  // @@protoc_insertion_point(destructor:kentik.flow_tag.v202404alpha1.AddressInfo)
  SharedDtor(*this);
}
inline void AddressInfo::SharedDtor(MessageLite& self) {
  AddressInfo& this_ = static_cast<AddressInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AddressInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AddressInfo(arena);
}
constexpr auto AddressInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AddressInfo, _impl_.addresses_) +
          decltype(AddressInfo::_impl_.addresses_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(AddressInfo), alignof(AddressInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AddressInfo::PlacementNew_,
                                 sizeof(AddressInfo),
                                 alignof(AddressInfo));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AddressInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AddressInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AddressInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AddressInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AddressInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AddressInfo>(), &AddressInfo::ByteSizeLong,
            &AddressInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AddressInfo, _impl_._cached_size_),
        false,
    },
    &AddressInfo::kDescriptorMethods,
    &descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AddressInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 59, 2> AddressInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::AddressInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 total_count = 2 [json_name = "totalCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AddressInfo, _impl_.total_count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AddressInfo, _impl_.total_count_)}},
    // repeated string addresses = 1 [json_name = "addresses"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AddressInfo, _impl_.addresses_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string addresses = 1 [json_name = "addresses"];
    {PROTOBUF_FIELD_OFFSET(AddressInfo, _impl_.addresses_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // int32 total_count = 2 [json_name = "totalCount"];
    {PROTOBUF_FIELD_OFFSET(AddressInfo, _impl_.total_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\51\11\0\0\0\0\0\0"
    "kentik.flow_tag.v202404alpha1.AddressInfo"
    "addresses"
  }},
};

PROTOBUF_NOINLINE void AddressInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.flow_tag.v202404alpha1.AddressInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.addresses_.Clear();
  _impl_.total_count_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AddressInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AddressInfo& this_ = static_cast<const AddressInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AddressInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AddressInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.flow_tag.v202404alpha1.AddressInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string addresses = 1 [json_name = "addresses"];
          for (int i = 0, n = this_._internal_addresses_size(); i < n; ++i) {
            const auto& s = this_._internal_addresses().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.flow_tag.v202404alpha1.AddressInfo.addresses");
            target = stream->WriteString(1, s, target);
          }

          // int32 total_count = 2 [json_name = "totalCount"];
          if (this_._internal_total_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_total_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.flow_tag.v202404alpha1.AddressInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AddressInfo::ByteSizeLong(const MessageLite& base) {
          const AddressInfo& this_ = static_cast<const AddressInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AddressInfo::ByteSizeLong() const {
          const AddressInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.flow_tag.v202404alpha1.AddressInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string addresses = 1 [json_name = "addresses"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_addresses().size());
              for (int i = 0, n = this_._internal_addresses().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_addresses().Get(i));
              }
            }
          }
           {
            // int32 total_count = 2 [json_name = "totalCount"];
            if (this_._internal_total_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_total_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AddressInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AddressInfo*>(&to_msg);
  auto& from = static_cast<const AddressInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.flow_tag.v202404alpha1.AddressInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_addresses()->MergeFrom(from._internal_addresses());
  if (from._internal_total_count() != 0) {
    _this->_impl_.total_count_ = from._impl_.total_count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddressInfo::CopyFrom(const AddressInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.flow_tag.v202404alpha1.AddressInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AddressInfo::InternalSwap(AddressInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.addresses_.InternalSwap(&other->_impl_.addresses_);
        swap(_impl_.total_count_, other->_impl_.total_count_);
}

::google::protobuf::Metadata AddressInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FlowTag::_Internal {
 public:
  using HasBits =
      decltype(std::declval<FlowTag>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FlowTag, _impl_._has_bits_);
};

void FlowTag::clear_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cdate_ != nullptr) _impl_.cdate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void FlowTag::clear_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.edate_ != nullptr) _impl_.edate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
FlowTag::FlowTag(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.flow_tag.v202404alpha1.FlowTag)
}
inline PROTOBUF_NDEBUG_INLINE FlowTag::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::flow_tag::v202404alpha1::FlowTag& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        port_{visibility, arena, from.port_},
        protocol_{visibility, arena, from.protocol_},
        _protocol_cached_byte_size_{0},
        device_name_{visibility, arena, from.device_name_},
        device_type_{visibility, arena, from.device_type_},
        site_{visibility, arena, from.site_},
        interface_name_{visibility, arena, from.interface_name_},
        asn_{visibility, arena, from.asn_},
        lasthop_as_name_{visibility, arena, from.lasthop_as_name_},
        nexthop_asn_{visibility, arena, from.nexthop_asn_},
        nexthop_as_name_{visibility, arena, from.nexthop_as_name_},
        nexthop_{visibility, arena, from.nexthop_},
        bgp_aspath_{visibility, arena, from.bgp_aspath_},
        bgp_community_{visibility, arena, from.bgp_community_},
        country_{visibility, arena, from.country_},
        vlans_{visibility, arena, from.vlans_},
        id_(arena, from.id_),
        name_(arena, from.name_),
        edited_by_(arena, from.edited_by_),
        created_by_(arena, from.created_by_) {}

FlowTag::FlowTag(
    ::google::protobuf::Arena* arena,
    const FlowTag& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FlowTag* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.cdate_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.cdate_)
                        : nullptr;
  _impl_.edate_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.edate_)
                        : nullptr;
  _impl_.ip_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::kentik::flow_tag::v202404alpha1::AddressInfo>(
                              arena, *from._impl_.ip_)
                        : nullptr;
  _impl_.mac_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::kentik::flow_tag::v202404alpha1::AddressInfo>(
                              arena, *from._impl_.mac_)
                        : nullptr;
  _impl_.tcp_flags_ = from._impl_.tcp_flags_;

  // @@protoc_insertion_point(copy_constructor:kentik.flow_tag.v202404alpha1.FlowTag)
}
inline PROTOBUF_NDEBUG_INLINE FlowTag::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        port_{visibility, arena},
        protocol_{visibility, arena},
        _protocol_cached_byte_size_{0},
        device_name_{visibility, arena},
        device_type_{visibility, arena},
        site_{visibility, arena},
        interface_name_{visibility, arena},
        asn_{visibility, arena},
        lasthop_as_name_{visibility, arena},
        nexthop_asn_{visibility, arena},
        nexthop_as_name_{visibility, arena},
        nexthop_{visibility, arena},
        bgp_aspath_{visibility, arena},
        bgp_community_{visibility, arena},
        country_{visibility, arena},
        vlans_{visibility, arena},
        id_(arena),
        name_(arena),
        edited_by_(arena),
        created_by_(arena) {}

inline void FlowTag::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cdate_),
           0,
           offsetof(Impl_, tcp_flags_) -
               offsetof(Impl_, cdate_) +
               sizeof(Impl_::tcp_flags_));
}
FlowTag::~FlowTag() {
  // @@protoc_insertion_point(destructor:kentik.flow_tag.v202404alpha1.FlowTag)
  SharedDtor(*this);
}
inline void FlowTag::SharedDtor(MessageLite& self) {
  FlowTag& this_ = static_cast<FlowTag&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.edited_by_.Destroy();
  this_._impl_.created_by_.Destroy();
  delete this_._impl_.cdate_;
  delete this_._impl_.edate_;
  delete this_._impl_.ip_;
  delete this_._impl_.mac_;
  this_._impl_.~Impl_();
}

inline void* FlowTag::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FlowTag(arena);
}
constexpr auto FlowTag::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.port_) +
          decltype(FlowTag::_impl_.port_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.protocol_) +
          decltype(FlowTag::_impl_.protocol_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.device_name_) +
          decltype(FlowTag::_impl_.device_name_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.device_type_) +
          decltype(FlowTag::_impl_.device_type_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.site_) +
          decltype(FlowTag::_impl_.site_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.interface_name_) +
          decltype(FlowTag::_impl_.interface_name_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.asn_) +
          decltype(FlowTag::_impl_.asn_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.lasthop_as_name_) +
          decltype(FlowTag::_impl_.lasthop_as_name_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.nexthop_asn_) +
          decltype(FlowTag::_impl_.nexthop_asn_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.nexthop_as_name_) +
          decltype(FlowTag::_impl_.nexthop_as_name_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.nexthop_) +
          decltype(FlowTag::_impl_.nexthop_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.bgp_aspath_) +
          decltype(FlowTag::_impl_.bgp_aspath_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.bgp_community_) +
          decltype(FlowTag::_impl_.bgp_community_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.country_) +
          decltype(FlowTag::_impl_.country_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.vlans_) +
          decltype(FlowTag::_impl_.vlans_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(FlowTag), alignof(FlowTag), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&FlowTag::PlacementNew_,
                                 sizeof(FlowTag),
                                 alignof(FlowTag));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FlowTag::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FlowTag_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FlowTag::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FlowTag>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FlowTag::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FlowTag>(), &FlowTag::ByteSizeLong,
            &FlowTag::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FlowTag, _impl_._cached_size_),
        false,
    },
    &FlowTag::kDescriptorMethods,
    &descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FlowTag::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 24, 4, 225, 2> FlowTag::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FlowTag, _impl_._has_bits_),
    0, // no _extensions_
    25, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4261412866,  // skipmap
    offsetof(decltype(_table_), field_entries),
    24,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::FlowTag>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 3 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.name_)}},
    // string edited_by = 4 [json_name = "editedBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.edited_by_)}},
    // .google.protobuf.Timestamp cdate = 5 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.cdate_)}},
    // .google.protobuf.Timestamp edate = 6 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 1, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.edate_)}},
    // .kentik.flow_tag.v202404alpha1.AddressInfo ip = 7 [json_name = "ip", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 2, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.ip_)}},
    // repeated string port = 8 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.port_)}},
    // uint32 tcp_flags = 9 [json_name = "tcpFlags", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FlowTag, _impl_.tcp_flags_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.tcp_flags_)}},
    // repeated uint32 protocol = 10 [json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastV32P1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.protocol_)}},
    // repeated string device_name = 11 [json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.device_name_)}},
    // repeated string device_type = 12 [json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.device_type_)}},
    // repeated string site = 13 [json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.site_)}},
    // repeated string interface_name = 14 [json_name = "interfaceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.interface_name_)}},
    // repeated string asn = 15 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.asn_)}},
    // repeated string lasthop_as_name = 16 [json_name = "lasthopAsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.lasthop_as_name_)}},
    // repeated string nexthop_asn = 17 [json_name = "nexthopAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.nexthop_asn_)}},
    // repeated string nexthop_as_name = 18 [json_name = "nexthopAsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR2,
     {402, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.nexthop_as_name_)}},
    // repeated string nexthop = 19 [json_name = "nexthop", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR2,
     {410, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.nexthop_)}},
    // repeated string bgp_aspath = 20 [json_name = "bgpAspath", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR2,
     {418, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.bgp_aspath_)}},
    // repeated string bgp_community = 21 [json_name = "bgpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR2,
     {426, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.bgp_community_)}},
    // .kentik.flow_tag.v202404alpha1.AddressInfo mac = 22 [json_name = "mac", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS2,
     {434, 3, 3, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.mac_)}},
    // repeated string country = 23 [json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR2,
     {442, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.country_)}},
    // repeated string vlans = 24 [json_name = "vlans", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR2,
     {450, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.vlans_)}},
    // string created_by = 25 [json_name = "createdBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {458, 63, 0, PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.created_by_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 3 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string edited_by = 4 [json_name = "editedBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.edited_by_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp cdate = 5 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.cdate_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp edate = 6 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.edate_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.flow_tag.v202404alpha1.AddressInfo ip = 7 [json_name = "ip", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.ip_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string port = 8 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.port_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // uint32 tcp_flags = 9 [json_name = "tcpFlags", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.tcp_flags_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated uint32 protocol = 10 [json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.protocol_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated string device_name = 11 [json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.device_name_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string device_type = 12 [json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.device_type_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string site = 13 [json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.site_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string interface_name = 14 [json_name = "interfaceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.interface_name_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string asn = 15 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.asn_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string lasthop_as_name = 16 [json_name = "lasthopAsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.lasthop_as_name_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string nexthop_asn = 17 [json_name = "nexthopAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.nexthop_asn_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string nexthop_as_name = 18 [json_name = "nexthopAsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.nexthop_as_name_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string nexthop = 19 [json_name = "nexthop", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.nexthop_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string bgp_aspath = 20 [json_name = "bgpAspath", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.bgp_aspath_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string bgp_community = 21 [json_name = "bgpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.bgp_community_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .kentik.flow_tag.v202404alpha1.AddressInfo mac = 22 [json_name = "mac", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.mac_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string country = 23 [json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.country_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string vlans = 24 [json_name = "vlans", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.vlans_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string created_by = 25 [json_name = "createdBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.created_by_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::AddressInfo>()},
    {::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::AddressInfo>()},
  }}, {{
    "\45\2\4\11\0\0\0\4\0\0\13\13\4\16\3\17\13\17\7\12\15\0\7\5\12\0\0\0\0\0\0\0"
    "kentik.flow_tag.v202404alpha1.FlowTag"
    "id"
    "name"
    "edited_by"
    "port"
    "device_name"
    "device_type"
    "site"
    "interface_name"
    "asn"
    "lasthop_as_name"
    "nexthop_asn"
    "nexthop_as_name"
    "nexthop"
    "bgp_aspath"
    "bgp_community"
    "country"
    "vlans"
    "created_by"
  }},
};

PROTOBUF_NOINLINE void FlowTag::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.flow_tag.v202404alpha1.FlowTag)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.port_.Clear();
  _impl_.protocol_.Clear();
  _impl_.device_name_.Clear();
  _impl_.device_type_.Clear();
  _impl_.site_.Clear();
  _impl_.interface_name_.Clear();
  _impl_.asn_.Clear();
  _impl_.lasthop_as_name_.Clear();
  _impl_.nexthop_asn_.Clear();
  _impl_.nexthop_as_name_.Clear();
  _impl_.nexthop_.Clear();
  _impl_.bgp_aspath_.Clear();
  _impl_.bgp_community_.Clear();
  _impl_.country_.Clear();
  _impl_.vlans_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.edited_by_.ClearToEmpty();
  _impl_.created_by_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.cdate_ != nullptr);
      _impl_.cdate_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.edate_ != nullptr);
      _impl_.edate_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.ip_ != nullptr);
      _impl_.ip_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.mac_ != nullptr);
      _impl_.mac_->Clear();
    }
  }
  _impl_.tcp_flags_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FlowTag::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FlowTag& this_ = static_cast<const FlowTag&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FlowTag::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FlowTag& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.flow_tag.v202404alpha1.FlowTag)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.flow_tag.v202404alpha1.FlowTag.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string name = 3 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.flow_tag.v202404alpha1.FlowTag.name");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string edited_by = 4 [json_name = "editedBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_edited_by().empty()) {
            const std::string& _s = this_._internal_edited_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.flow_tag.v202404alpha1.FlowTag.edited_by");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp cdate = 5 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.cdate_, this_._impl_.cdate_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp edate = 6 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.edate_, this_._impl_.edate_->GetCachedSize(), target,
                stream);
          }

          // .kentik.flow_tag.v202404alpha1.AddressInfo ip = 7 [json_name = "ip", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.ip_, this_._impl_.ip_->GetCachedSize(), target,
                stream);
          }

          // repeated string port = 8 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_port_size(); i < n; ++i) {
            const auto& s = this_._internal_port().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.flow_tag.v202404alpha1.FlowTag.port");
            target = stream->WriteString(8, s, target);
          }

          // uint32 tcp_flags = 9 [json_name = "tcpFlags", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_tcp_flags() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                9, this_._internal_tcp_flags(), target);
          }

          // repeated uint32 protocol = 10 [json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          {
            int byte_size = this_._impl_._protocol_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  10, this_._internal_protocol(), byte_size, target);
            }
          }

          // repeated string device_name = 11 [json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_device_name_size(); i < n; ++i) {
            const auto& s = this_._internal_device_name().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.flow_tag.v202404alpha1.FlowTag.device_name");
            target = stream->WriteString(11, s, target);
          }

          // repeated string device_type = 12 [json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_device_type_size(); i < n; ++i) {
            const auto& s = this_._internal_device_type().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.flow_tag.v202404alpha1.FlowTag.device_type");
            target = stream->WriteString(12, s, target);
          }

          // repeated string site = 13 [json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_site_size(); i < n; ++i) {
            const auto& s = this_._internal_site().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.flow_tag.v202404alpha1.FlowTag.site");
            target = stream->WriteString(13, s, target);
          }

          // repeated string interface_name = 14 [json_name = "interfaceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_interface_name_size(); i < n; ++i) {
            const auto& s = this_._internal_interface_name().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.flow_tag.v202404alpha1.FlowTag.interface_name");
            target = stream->WriteString(14, s, target);
          }

          // repeated string asn = 15 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_asn_size(); i < n; ++i) {
            const auto& s = this_._internal_asn().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.flow_tag.v202404alpha1.FlowTag.asn");
            target = stream->WriteString(15, s, target);
          }

          // repeated string lasthop_as_name = 16 [json_name = "lasthopAsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_lasthop_as_name_size(); i < n; ++i) {
            const auto& s = this_._internal_lasthop_as_name().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.flow_tag.v202404alpha1.FlowTag.lasthop_as_name");
            target = stream->WriteString(16, s, target);
          }

          // repeated string nexthop_asn = 17 [json_name = "nexthopAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_nexthop_asn_size(); i < n; ++i) {
            const auto& s = this_._internal_nexthop_asn().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.flow_tag.v202404alpha1.FlowTag.nexthop_asn");
            target = stream->WriteString(17, s, target);
          }

          // repeated string nexthop_as_name = 18 [json_name = "nexthopAsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_nexthop_as_name_size(); i < n; ++i) {
            const auto& s = this_._internal_nexthop_as_name().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.flow_tag.v202404alpha1.FlowTag.nexthop_as_name");
            target = stream->WriteString(18, s, target);
          }

          // repeated string nexthop = 19 [json_name = "nexthop", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_nexthop_size(); i < n; ++i) {
            const auto& s = this_._internal_nexthop().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.flow_tag.v202404alpha1.FlowTag.nexthop");
            target = stream->WriteString(19, s, target);
          }

          // repeated string bgp_aspath = 20 [json_name = "bgpAspath", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_bgp_aspath_size(); i < n; ++i) {
            const auto& s = this_._internal_bgp_aspath().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.flow_tag.v202404alpha1.FlowTag.bgp_aspath");
            target = stream->WriteString(20, s, target);
          }

          // repeated string bgp_community = 21 [json_name = "bgpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_bgp_community_size(); i < n; ++i) {
            const auto& s = this_._internal_bgp_community().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.flow_tag.v202404alpha1.FlowTag.bgp_community");
            target = stream->WriteString(21, s, target);
          }

          // .kentik.flow_tag.v202404alpha1.AddressInfo mac = 22 [json_name = "mac", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                22, *this_._impl_.mac_, this_._impl_.mac_->GetCachedSize(), target,
                stream);
          }

          // repeated string country = 23 [json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_country_size(); i < n; ++i) {
            const auto& s = this_._internal_country().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.flow_tag.v202404alpha1.FlowTag.country");
            target = stream->WriteString(23, s, target);
          }

          // repeated string vlans = 24 [json_name = "vlans", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_vlans_size(); i < n; ++i) {
            const auto& s = this_._internal_vlans().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.flow_tag.v202404alpha1.FlowTag.vlans");
            target = stream->WriteString(24, s, target);
          }

          // string created_by = 25 [json_name = "createdBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_created_by().empty()) {
            const std::string& _s = this_._internal_created_by();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.flow_tag.v202404alpha1.FlowTag.created_by");
            target = stream->WriteStringMaybeAliased(25, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.flow_tag.v202404alpha1.FlowTag)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FlowTag::ByteSizeLong(const MessageLite& base) {
          const FlowTag& this_ = static_cast<const FlowTag&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FlowTag::ByteSizeLong() const {
          const FlowTag& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.flow_tag.v202404alpha1.FlowTag)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string port = 8 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_port().size());
              for (int i = 0, n = this_._internal_port().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_port().Get(i));
              }
            }
            // repeated uint32 protocol = 10 [json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_protocol(), 1,
                      this_._impl_._protocol_cached_byte_size_);
            }
            // repeated string device_name = 11 [json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_device_name().size());
              for (int i = 0, n = this_._internal_device_name().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_device_name().Get(i));
              }
            }
            // repeated string device_type = 12 [json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_device_type().size());
              for (int i = 0, n = this_._internal_device_type().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_device_type().Get(i));
              }
            }
            // repeated string site = 13 [json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_site().size());
              for (int i = 0, n = this_._internal_site().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_site().Get(i));
              }
            }
            // repeated string interface_name = 14 [json_name = "interfaceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_interface_name().size());
              for (int i = 0, n = this_._internal_interface_name().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_interface_name().Get(i));
              }
            }
            // repeated string asn = 15 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_asn().size());
              for (int i = 0, n = this_._internal_asn().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_asn().Get(i));
              }
            }
            // repeated string lasthop_as_name = 16 [json_name = "lasthopAsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_lasthop_as_name().size());
              for (int i = 0, n = this_._internal_lasthop_as_name().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_lasthop_as_name().Get(i));
              }
            }
            // repeated string nexthop_asn = 17 [json_name = "nexthopAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_nexthop_asn().size());
              for (int i = 0, n = this_._internal_nexthop_asn().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_nexthop_asn().Get(i));
              }
            }
            // repeated string nexthop_as_name = 18 [json_name = "nexthopAsName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_nexthop_as_name().size());
              for (int i = 0, n = this_._internal_nexthop_as_name().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_nexthop_as_name().Get(i));
              }
            }
            // repeated string nexthop = 19 [json_name = "nexthop", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_nexthop().size());
              for (int i = 0, n = this_._internal_nexthop().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_nexthop().Get(i));
              }
            }
            // repeated string bgp_aspath = 20 [json_name = "bgpAspath", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_bgp_aspath().size());
              for (int i = 0, n = this_._internal_bgp_aspath().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_bgp_aspath().Get(i));
              }
            }
            // repeated string bgp_community = 21 [json_name = "bgpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_bgp_community().size());
              for (int i = 0, n = this_._internal_bgp_community().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_bgp_community().Get(i));
              }
            }
            // repeated string country = 23 [json_name = "country", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_country().size());
              for (int i = 0, n = this_._internal_country().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_country().Get(i));
              }
            }
            // repeated string vlans = 24 [json_name = "vlans", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_vlans().size());
              for (int i = 0, n = this_._internal_vlans().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_vlans().Get(i));
              }
            }
          }
           {
            // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string name = 3 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string edited_by = 4 [json_name = "editedBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_edited_by().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_edited_by());
            }
            // string created_by = 25 [json_name = "createdBy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_created_by().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_created_by());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // .google.protobuf.Timestamp cdate = 5 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cdate_);
            }
            // .google.protobuf.Timestamp edate = 6 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.edate_);
            }
            // .kentik.flow_tag.v202404alpha1.AddressInfo ip = 7 [json_name = "ip", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ip_);
            }
            // .kentik.flow_tag.v202404alpha1.AddressInfo mac = 22 [json_name = "mac", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000008u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.mac_);
            }
          }
           {
            // uint32 tcp_flags = 9 [json_name = "tcpFlags", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_tcp_flags() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_tcp_flags());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FlowTag::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FlowTag*>(&to_msg);
  auto& from = static_cast<const FlowTag&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.flow_tag.v202404alpha1.FlowTag)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_port()->MergeFrom(from._internal_port());
  _this->_internal_mutable_protocol()->MergeFrom(from._internal_protocol());
  _this->_internal_mutable_device_name()->MergeFrom(from._internal_device_name());
  _this->_internal_mutable_device_type()->MergeFrom(from._internal_device_type());
  _this->_internal_mutable_site()->MergeFrom(from._internal_site());
  _this->_internal_mutable_interface_name()->MergeFrom(from._internal_interface_name());
  _this->_internal_mutable_asn()->MergeFrom(from._internal_asn());
  _this->_internal_mutable_lasthop_as_name()->MergeFrom(from._internal_lasthop_as_name());
  _this->_internal_mutable_nexthop_asn()->MergeFrom(from._internal_nexthop_asn());
  _this->_internal_mutable_nexthop_as_name()->MergeFrom(from._internal_nexthop_as_name());
  _this->_internal_mutable_nexthop()->MergeFrom(from._internal_nexthop());
  _this->_internal_mutable_bgp_aspath()->MergeFrom(from._internal_bgp_aspath());
  _this->_internal_mutable_bgp_community()->MergeFrom(from._internal_bgp_community());
  _this->_internal_mutable_country()->MergeFrom(from._internal_country());
  _this->_internal_mutable_vlans()->MergeFrom(from._internal_vlans());
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_edited_by().empty()) {
    _this->_internal_set_edited_by(from._internal_edited_by());
  }
  if (!from._internal_created_by().empty()) {
    _this->_internal_set_created_by(from._internal_created_by());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.cdate_ != nullptr);
      if (_this->_impl_.cdate_ == nullptr) {
        _this->_impl_.cdate_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.cdate_);
      } else {
        _this->_impl_.cdate_->MergeFrom(*from._impl_.cdate_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.edate_ != nullptr);
      if (_this->_impl_.edate_ == nullptr) {
        _this->_impl_.edate_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.edate_);
      } else {
        _this->_impl_.edate_->MergeFrom(*from._impl_.edate_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.ip_ != nullptr);
      if (_this->_impl_.ip_ == nullptr) {
        _this->_impl_.ip_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::flow_tag::v202404alpha1::AddressInfo>(arena, *from._impl_.ip_);
      } else {
        _this->_impl_.ip_->MergeFrom(*from._impl_.ip_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.mac_ != nullptr);
      if (_this->_impl_.mac_ == nullptr) {
        _this->_impl_.mac_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::flow_tag::v202404alpha1::AddressInfo>(arena, *from._impl_.mac_);
      } else {
        _this->_impl_.mac_->MergeFrom(*from._impl_.mac_);
      }
    }
  }
  if (from._internal_tcp_flags() != 0) {
    _this->_impl_.tcp_flags_ = from._impl_.tcp_flags_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FlowTag::CopyFrom(const FlowTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.flow_tag.v202404alpha1.FlowTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FlowTag::InternalSwap(FlowTag* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.port_.InternalSwap(&other->_impl_.port_);
  _impl_.protocol_.InternalSwap(&other->_impl_.protocol_);
  _impl_.device_name_.InternalSwap(&other->_impl_.device_name_);
  _impl_.device_type_.InternalSwap(&other->_impl_.device_type_);
  _impl_.site_.InternalSwap(&other->_impl_.site_);
  _impl_.interface_name_.InternalSwap(&other->_impl_.interface_name_);
  _impl_.asn_.InternalSwap(&other->_impl_.asn_);
  _impl_.lasthop_as_name_.InternalSwap(&other->_impl_.lasthop_as_name_);
  _impl_.nexthop_asn_.InternalSwap(&other->_impl_.nexthop_asn_);
  _impl_.nexthop_as_name_.InternalSwap(&other->_impl_.nexthop_as_name_);
  _impl_.nexthop_.InternalSwap(&other->_impl_.nexthop_);
  _impl_.bgp_aspath_.InternalSwap(&other->_impl_.bgp_aspath_);
  _impl_.bgp_community_.InternalSwap(&other->_impl_.bgp_community_);
  _impl_.country_.InternalSwap(&other->_impl_.country_);
  _impl_.vlans_.InternalSwap(&other->_impl_.vlans_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.edited_by_, &other->_impl_.edited_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.created_by_, &other->_impl_.created_by_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.tcp_flags_)
      + sizeof(FlowTag::_impl_.tcp_flags_)
      - PROTOBUF_FIELD_OFFSET(FlowTag, _impl_.cdate_)>(
          reinterpret_cast<char*>(&_impl_.cdate_),
          reinterpret_cast<char*>(&other->_impl_.cdate_));
}

::google::protobuf::Metadata FlowTag::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetFlowTagRequest::_Internal {
 public:
};

GetFlowTagRequest::GetFlowTagRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.flow_tag.v202404alpha1.GetFlowTagRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetFlowTagRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::flow_tag::v202404alpha1::GetFlowTagRequest& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

GetFlowTagRequest::GetFlowTagRequest(
    ::google::protobuf::Arena* arena,
    const GetFlowTagRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetFlowTagRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.flow_tag.v202404alpha1.GetFlowTagRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetFlowTagRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void GetFlowTagRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetFlowTagRequest::~GetFlowTagRequest() {
  // @@protoc_insertion_point(destructor:kentik.flow_tag.v202404alpha1.GetFlowTagRequest)
  SharedDtor(*this);
}
inline void GetFlowTagRequest::SharedDtor(MessageLite& self) {
  GetFlowTagRequest& this_ = static_cast<GetFlowTagRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetFlowTagRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetFlowTagRequest(arena);
}
constexpr auto GetFlowTagRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetFlowTagRequest),
                                            alignof(GetFlowTagRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetFlowTagRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetFlowTagRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetFlowTagRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetFlowTagRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetFlowTagRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetFlowTagRequest>(), &GetFlowTagRequest::ByteSizeLong,
            &GetFlowTagRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetFlowTagRequest, _impl_._cached_size_),
        false,
    },
    &GetFlowTagRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetFlowTagRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 58, 2> GetFlowTagRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::GetFlowTagRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetFlowTagRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(GetFlowTagRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\2\0\0\0\0\0\0"
    "kentik.flow_tag.v202404alpha1.GetFlowTagRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void GetFlowTagRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.flow_tag.v202404alpha1.GetFlowTagRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetFlowTagRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetFlowTagRequest& this_ = static_cast<const GetFlowTagRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetFlowTagRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetFlowTagRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.flow_tag.v202404alpha1.GetFlowTagRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.flow_tag.v202404alpha1.GetFlowTagRequest.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.flow_tag.v202404alpha1.GetFlowTagRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetFlowTagRequest::ByteSizeLong(const MessageLite& base) {
          const GetFlowTagRequest& this_ = static_cast<const GetFlowTagRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetFlowTagRequest::ByteSizeLong() const {
          const GetFlowTagRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.flow_tag.v202404alpha1.GetFlowTagRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string id = 1 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetFlowTagRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetFlowTagRequest*>(&to_msg);
  auto& from = static_cast<const GetFlowTagRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.flow_tag.v202404alpha1.GetFlowTagRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetFlowTagRequest::CopyFrom(const GetFlowTagRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.flow_tag.v202404alpha1.GetFlowTagRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetFlowTagRequest::InternalSwap(GetFlowTagRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata GetFlowTagRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetFlowTagResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetFlowTagResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetFlowTagResponse, _impl_._has_bits_);
};

GetFlowTagResponse::GetFlowTagResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.flow_tag.v202404alpha1.GetFlowTagResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetFlowTagResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::flow_tag::v202404alpha1::GetFlowTagResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetFlowTagResponse::GetFlowTagResponse(
    ::google::protobuf::Arena* arena,
    const GetFlowTagResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetFlowTagResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.flow_tag_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::flow_tag::v202404alpha1::FlowTag>(
                              arena, *from._impl_.flow_tag_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.flow_tag.v202404alpha1.GetFlowTagResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetFlowTagResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetFlowTagResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.flow_tag_ = {};
}
GetFlowTagResponse::~GetFlowTagResponse() {
  // @@protoc_insertion_point(destructor:kentik.flow_tag.v202404alpha1.GetFlowTagResponse)
  SharedDtor(*this);
}
inline void GetFlowTagResponse::SharedDtor(MessageLite& self) {
  GetFlowTagResponse& this_ = static_cast<GetFlowTagResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.flow_tag_;
  this_._impl_.~Impl_();
}

inline void* GetFlowTagResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetFlowTagResponse(arena);
}
constexpr auto GetFlowTagResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetFlowTagResponse),
                                            alignof(GetFlowTagResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetFlowTagResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetFlowTagResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetFlowTagResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetFlowTagResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetFlowTagResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetFlowTagResponse>(), &GetFlowTagResponse::ByteSizeLong,
            &GetFlowTagResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetFlowTagResponse, _impl_._cached_size_),
        false,
    },
    &GetFlowTagResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetFlowTagResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetFlowTagResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetFlowTagResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::GetFlowTagResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetFlowTagResponse, _impl_.flow_tag_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
    {PROTOBUF_FIELD_OFFSET(GetFlowTagResponse, _impl_.flow_tag_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::FlowTag>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetFlowTagResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.flow_tag.v202404alpha1.GetFlowTagResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.flow_tag_ != nullptr);
    _impl_.flow_tag_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetFlowTagResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetFlowTagResponse& this_ = static_cast<const GetFlowTagResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetFlowTagResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetFlowTagResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.flow_tag.v202404alpha1.GetFlowTagResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.flow_tag_, this_._impl_.flow_tag_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.flow_tag.v202404alpha1.GetFlowTagResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetFlowTagResponse::ByteSizeLong(const MessageLite& base) {
          const GetFlowTagResponse& this_ = static_cast<const GetFlowTagResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetFlowTagResponse::ByteSizeLong() const {
          const GetFlowTagResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.flow_tag.v202404alpha1.GetFlowTagResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.flow_tag_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetFlowTagResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetFlowTagResponse*>(&to_msg);
  auto& from = static_cast<const GetFlowTagResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.flow_tag.v202404alpha1.GetFlowTagResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.flow_tag_ != nullptr);
    if (_this->_impl_.flow_tag_ == nullptr) {
      _this->_impl_.flow_tag_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::flow_tag::v202404alpha1::FlowTag>(arena, *from._impl_.flow_tag_);
    } else {
      _this->_impl_.flow_tag_->MergeFrom(*from._impl_.flow_tag_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetFlowTagResponse::CopyFrom(const GetFlowTagResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.flow_tag.v202404alpha1.GetFlowTagResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetFlowTagResponse::InternalSwap(GetFlowTagResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.flow_tag_, other->_impl_.flow_tag_);
}

::google::protobuf::Metadata GetFlowTagResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SearchFlowTagRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SearchFlowTagRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SearchFlowTagRequest, _impl_._has_bits_);
};

SearchFlowTagRequest::SearchFlowTagRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.flow_tag.v202404alpha1.SearchFlowTagRequest)
}
inline PROTOBUF_NDEBUG_INLINE SearchFlowTagRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::flow_tag::v202404alpha1::SearchFlowTagRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SearchFlowTagRequest::SearchFlowTagRequest(
    ::google::protobuf::Arena* arena,
    const SearchFlowTagRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SearchFlowTagRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.search_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::flow_tag::v202404alpha1::FlowTagSearch>(
                              arena, *from._impl_.search_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.flow_tag.v202404alpha1.SearchFlowTagRequest)
}
inline PROTOBUF_NDEBUG_INLINE SearchFlowTagRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SearchFlowTagRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.search_ = {};
}
SearchFlowTagRequest::~SearchFlowTagRequest() {
  // @@protoc_insertion_point(destructor:kentik.flow_tag.v202404alpha1.SearchFlowTagRequest)
  SharedDtor(*this);
}
inline void SearchFlowTagRequest::SharedDtor(MessageLite& self) {
  SearchFlowTagRequest& this_ = static_cast<SearchFlowTagRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.search_;
  this_._impl_.~Impl_();
}

inline void* SearchFlowTagRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SearchFlowTagRequest(arena);
}
constexpr auto SearchFlowTagRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SearchFlowTagRequest),
                                            alignof(SearchFlowTagRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SearchFlowTagRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SearchFlowTagRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SearchFlowTagRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SearchFlowTagRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SearchFlowTagRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SearchFlowTagRequest>(), &SearchFlowTagRequest::ByteSizeLong,
            &SearchFlowTagRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SearchFlowTagRequest, _impl_._cached_size_),
        false,
    },
    &SearchFlowTagRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SearchFlowTagRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SearchFlowTagRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SearchFlowTagRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::SearchFlowTagRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.flow_tag.v202404alpha1.FlowTagSearch search = 1 [json_name = "search"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SearchFlowTagRequest, _impl_.search_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.flow_tag.v202404alpha1.FlowTagSearch search = 1 [json_name = "search"];
    {PROTOBUF_FIELD_OFFSET(SearchFlowTagRequest, _impl_.search_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::FlowTagSearch>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SearchFlowTagRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.flow_tag.v202404alpha1.SearchFlowTagRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.search_ != nullptr);
    _impl_.search_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SearchFlowTagRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SearchFlowTagRequest& this_ = static_cast<const SearchFlowTagRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SearchFlowTagRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SearchFlowTagRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.flow_tag.v202404alpha1.SearchFlowTagRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.flow_tag.v202404alpha1.FlowTagSearch search = 1 [json_name = "search"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.search_, this_._impl_.search_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.flow_tag.v202404alpha1.SearchFlowTagRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SearchFlowTagRequest::ByteSizeLong(const MessageLite& base) {
          const SearchFlowTagRequest& this_ = static_cast<const SearchFlowTagRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SearchFlowTagRequest::ByteSizeLong() const {
          const SearchFlowTagRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.flow_tag.v202404alpha1.SearchFlowTagRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.flow_tag.v202404alpha1.FlowTagSearch search = 1 [json_name = "search"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.search_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SearchFlowTagRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SearchFlowTagRequest*>(&to_msg);
  auto& from = static_cast<const SearchFlowTagRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.flow_tag.v202404alpha1.SearchFlowTagRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.search_ != nullptr);
    if (_this->_impl_.search_ == nullptr) {
      _this->_impl_.search_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::flow_tag::v202404alpha1::FlowTagSearch>(arena, *from._impl_.search_);
    } else {
      _this->_impl_.search_->MergeFrom(*from._impl_.search_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SearchFlowTagRequest::CopyFrom(const SearchFlowTagRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.flow_tag.v202404alpha1.SearchFlowTagRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SearchFlowTagRequest::InternalSwap(SearchFlowTagRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.search_, other->_impl_.search_);
}

::google::protobuf::Metadata SearchFlowTagRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SearchFlowTagResponse::_Internal {
 public:
};

SearchFlowTagResponse::SearchFlowTagResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.flow_tag.v202404alpha1.SearchFlowTagResponse)
}
inline PROTOBUF_NDEBUG_INLINE SearchFlowTagResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::flow_tag::v202404alpha1::SearchFlowTagResponse& from_msg)
      : flow_tags_{visibility, arena, from.flow_tags_},
        _cached_size_{0} {}

SearchFlowTagResponse::SearchFlowTagResponse(
    ::google::protobuf::Arena* arena,
    const SearchFlowTagResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SearchFlowTagResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_count_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_count_),
           offsetof(Impl_, invalid_count_) -
               offsetof(Impl_, total_count_) +
               sizeof(Impl_::invalid_count_));

  // @@protoc_insertion_point(copy_constructor:kentik.flow_tag.v202404alpha1.SearchFlowTagResponse)
}
inline PROTOBUF_NDEBUG_INLINE SearchFlowTagResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : flow_tags_{visibility, arena},
        _cached_size_{0} {}

inline void SearchFlowTagResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_count_),
           0,
           offsetof(Impl_, invalid_count_) -
               offsetof(Impl_, total_count_) +
               sizeof(Impl_::invalid_count_));
}
SearchFlowTagResponse::~SearchFlowTagResponse() {
  // @@protoc_insertion_point(destructor:kentik.flow_tag.v202404alpha1.SearchFlowTagResponse)
  SharedDtor(*this);
}
inline void SearchFlowTagResponse::SharedDtor(MessageLite& self) {
  SearchFlowTagResponse& this_ = static_cast<SearchFlowTagResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SearchFlowTagResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SearchFlowTagResponse(arena);
}
constexpr auto SearchFlowTagResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SearchFlowTagResponse, _impl_.flow_tags_) +
          decltype(SearchFlowTagResponse::_impl_.flow_tags_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SearchFlowTagResponse), alignof(SearchFlowTagResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SearchFlowTagResponse::PlacementNew_,
                                 sizeof(SearchFlowTagResponse),
                                 alignof(SearchFlowTagResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SearchFlowTagResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SearchFlowTagResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SearchFlowTagResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SearchFlowTagResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SearchFlowTagResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SearchFlowTagResponse>(), &SearchFlowTagResponse::ByteSizeLong,
            &SearchFlowTagResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SearchFlowTagResponse, _impl_._cached_size_),
        false,
    },
    &SearchFlowTagResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SearchFlowTagResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> SearchFlowTagResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::SearchFlowTagResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .kentik.flow_tag.v202404alpha1.FlowTag flow_tags = 1 [json_name = "flowTags"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SearchFlowTagResponse, _impl_.flow_tags_)}},
    // uint32 total_count = 2 [json_name = "totalCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SearchFlowTagResponse, _impl_.total_count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SearchFlowTagResponse, _impl_.total_count_)}},
    // uint32 invalid_count = 3 [json_name = "invalidCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SearchFlowTagResponse, _impl_.invalid_count_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SearchFlowTagResponse, _impl_.invalid_count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .kentik.flow_tag.v202404alpha1.FlowTag flow_tags = 1 [json_name = "flowTags"];
    {PROTOBUF_FIELD_OFFSET(SearchFlowTagResponse, _impl_.flow_tags_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 total_count = 2 [json_name = "totalCount"];
    {PROTOBUF_FIELD_OFFSET(SearchFlowTagResponse, _impl_.total_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 invalid_count = 3 [json_name = "invalidCount"];
    {PROTOBUF_FIELD_OFFSET(SearchFlowTagResponse, _impl_.invalid_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::FlowTag>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SearchFlowTagResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.flow_tag.v202404alpha1.SearchFlowTagResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.flow_tags_.Clear();
  ::memset(&_impl_.total_count_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.invalid_count_) -
      reinterpret_cast<char*>(&_impl_.total_count_)) + sizeof(_impl_.invalid_count_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SearchFlowTagResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SearchFlowTagResponse& this_ = static_cast<const SearchFlowTagResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SearchFlowTagResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SearchFlowTagResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.flow_tag.v202404alpha1.SearchFlowTagResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .kentik.flow_tag.v202404alpha1.FlowTag flow_tags = 1 [json_name = "flowTags"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_flow_tags_size());
               i < n; i++) {
            const auto& repfield = this_._internal_flow_tags().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint32 total_count = 2 [json_name = "totalCount"];
          if (this_._internal_total_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_total_count(), target);
          }

          // uint32 invalid_count = 3 [json_name = "invalidCount"];
          if (this_._internal_invalid_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_invalid_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.flow_tag.v202404alpha1.SearchFlowTagResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SearchFlowTagResponse::ByteSizeLong(const MessageLite& base) {
          const SearchFlowTagResponse& this_ = static_cast<const SearchFlowTagResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SearchFlowTagResponse::ByteSizeLong() const {
          const SearchFlowTagResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.flow_tag.v202404alpha1.SearchFlowTagResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.flow_tag.v202404alpha1.FlowTag flow_tags = 1 [json_name = "flowTags"];
            {
              total_size += 1UL * this_._internal_flow_tags_size();
              for (const auto& msg : this_._internal_flow_tags()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint32 total_count = 2 [json_name = "totalCount"];
            if (this_._internal_total_count() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_total_count());
            }
            // uint32 invalid_count = 3 [json_name = "invalidCount"];
            if (this_._internal_invalid_count() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_invalid_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SearchFlowTagResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SearchFlowTagResponse*>(&to_msg);
  auto& from = static_cast<const SearchFlowTagResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.flow_tag.v202404alpha1.SearchFlowTagResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_flow_tags()->MergeFrom(
      from._internal_flow_tags());
  if (from._internal_total_count() != 0) {
    _this->_impl_.total_count_ = from._impl_.total_count_;
  }
  if (from._internal_invalid_count() != 0) {
    _this->_impl_.invalid_count_ = from._impl_.invalid_count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SearchFlowTagResponse::CopyFrom(const SearchFlowTagResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.flow_tag.v202404alpha1.SearchFlowTagResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SearchFlowTagResponse::InternalSwap(SearchFlowTagResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.flow_tags_.InternalSwap(&other->_impl_.flow_tags_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SearchFlowTagResponse, _impl_.invalid_count_)
      + sizeof(SearchFlowTagResponse::_impl_.invalid_count_)
      - PROTOBUF_FIELD_OFFSET(SearchFlowTagResponse, _impl_.total_count_)>(
          reinterpret_cast<char*>(&_impl_.total_count_),
          reinterpret_cast<char*>(&other->_impl_.total_count_));
}

::google::protobuf::Metadata SearchFlowTagResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateFlowTagRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateFlowTagRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateFlowTagRequest, _impl_._has_bits_);
};

CreateFlowTagRequest::CreateFlowTagRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.flow_tag.v202404alpha1.CreateFlowTagRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateFlowTagRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::flow_tag::v202404alpha1::CreateFlowTagRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateFlowTagRequest::CreateFlowTagRequest(
    ::google::protobuf::Arena* arena,
    const CreateFlowTagRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateFlowTagRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.flow_tag_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::flow_tag::v202404alpha1::FlowTag>(
                              arena, *from._impl_.flow_tag_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.flow_tag.v202404alpha1.CreateFlowTagRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateFlowTagRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateFlowTagRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.flow_tag_ = {};
}
CreateFlowTagRequest::~CreateFlowTagRequest() {
  // @@protoc_insertion_point(destructor:kentik.flow_tag.v202404alpha1.CreateFlowTagRequest)
  SharedDtor(*this);
}
inline void CreateFlowTagRequest::SharedDtor(MessageLite& self) {
  CreateFlowTagRequest& this_ = static_cast<CreateFlowTagRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.flow_tag_;
  this_._impl_.~Impl_();
}

inline void* CreateFlowTagRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateFlowTagRequest(arena);
}
constexpr auto CreateFlowTagRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreateFlowTagRequest),
                                            alignof(CreateFlowTagRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateFlowTagRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateFlowTagRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateFlowTagRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateFlowTagRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateFlowTagRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateFlowTagRequest>(), &CreateFlowTagRequest::ByteSizeLong,
            &CreateFlowTagRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateFlowTagRequest, _impl_._cached_size_),
        false,
    },
    &CreateFlowTagRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateFlowTagRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateFlowTagRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateFlowTagRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::CreateFlowTagRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateFlowTagRequest, _impl_.flow_tag_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
    {PROTOBUF_FIELD_OFFSET(CreateFlowTagRequest, _impl_.flow_tag_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::FlowTag>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CreateFlowTagRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.flow_tag.v202404alpha1.CreateFlowTagRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.flow_tag_ != nullptr);
    _impl_.flow_tag_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateFlowTagRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateFlowTagRequest& this_ = static_cast<const CreateFlowTagRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateFlowTagRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateFlowTagRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.flow_tag.v202404alpha1.CreateFlowTagRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.flow_tag_, this_._impl_.flow_tag_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.flow_tag.v202404alpha1.CreateFlowTagRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateFlowTagRequest::ByteSizeLong(const MessageLite& base) {
          const CreateFlowTagRequest& this_ = static_cast<const CreateFlowTagRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateFlowTagRequest::ByteSizeLong() const {
          const CreateFlowTagRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.flow_tag.v202404alpha1.CreateFlowTagRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.flow_tag_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateFlowTagRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateFlowTagRequest*>(&to_msg);
  auto& from = static_cast<const CreateFlowTagRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.flow_tag.v202404alpha1.CreateFlowTagRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.flow_tag_ != nullptr);
    if (_this->_impl_.flow_tag_ == nullptr) {
      _this->_impl_.flow_tag_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::flow_tag::v202404alpha1::FlowTag>(arena, *from._impl_.flow_tag_);
    } else {
      _this->_impl_.flow_tag_->MergeFrom(*from._impl_.flow_tag_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateFlowTagRequest::CopyFrom(const CreateFlowTagRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.flow_tag.v202404alpha1.CreateFlowTagRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateFlowTagRequest::InternalSwap(CreateFlowTagRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.flow_tag_, other->_impl_.flow_tag_);
}

::google::protobuf::Metadata CreateFlowTagRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateFlowTagResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateFlowTagResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateFlowTagResponse, _impl_._has_bits_);
};

CreateFlowTagResponse::CreateFlowTagResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.flow_tag.v202404alpha1.CreateFlowTagResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateFlowTagResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::flow_tag::v202404alpha1::CreateFlowTagResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateFlowTagResponse::CreateFlowTagResponse(
    ::google::protobuf::Arena* arena,
    const CreateFlowTagResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateFlowTagResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.flow_tag_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::flow_tag::v202404alpha1::FlowTag>(
                              arena, *from._impl_.flow_tag_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.flow_tag.v202404alpha1.CreateFlowTagResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateFlowTagResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateFlowTagResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.flow_tag_ = {};
}
CreateFlowTagResponse::~CreateFlowTagResponse() {
  // @@protoc_insertion_point(destructor:kentik.flow_tag.v202404alpha1.CreateFlowTagResponse)
  SharedDtor(*this);
}
inline void CreateFlowTagResponse::SharedDtor(MessageLite& self) {
  CreateFlowTagResponse& this_ = static_cast<CreateFlowTagResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.flow_tag_;
  this_._impl_.~Impl_();
}

inline void* CreateFlowTagResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateFlowTagResponse(arena);
}
constexpr auto CreateFlowTagResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreateFlowTagResponse),
                                            alignof(CreateFlowTagResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateFlowTagResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateFlowTagResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateFlowTagResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateFlowTagResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateFlowTagResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateFlowTagResponse>(), &CreateFlowTagResponse::ByteSizeLong,
            &CreateFlowTagResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateFlowTagResponse, _impl_._cached_size_),
        false,
    },
    &CreateFlowTagResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateFlowTagResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateFlowTagResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateFlowTagResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::CreateFlowTagResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateFlowTagResponse, _impl_.flow_tag_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
    {PROTOBUF_FIELD_OFFSET(CreateFlowTagResponse, _impl_.flow_tag_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::FlowTag>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CreateFlowTagResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.flow_tag.v202404alpha1.CreateFlowTagResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.flow_tag_ != nullptr);
    _impl_.flow_tag_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateFlowTagResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateFlowTagResponse& this_ = static_cast<const CreateFlowTagResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateFlowTagResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateFlowTagResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.flow_tag.v202404alpha1.CreateFlowTagResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.flow_tag_, this_._impl_.flow_tag_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.flow_tag.v202404alpha1.CreateFlowTagResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateFlowTagResponse::ByteSizeLong(const MessageLite& base) {
          const CreateFlowTagResponse& this_ = static_cast<const CreateFlowTagResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateFlowTagResponse::ByteSizeLong() const {
          const CreateFlowTagResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.flow_tag.v202404alpha1.CreateFlowTagResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.flow_tag_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateFlowTagResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateFlowTagResponse*>(&to_msg);
  auto& from = static_cast<const CreateFlowTagResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.flow_tag.v202404alpha1.CreateFlowTagResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.flow_tag_ != nullptr);
    if (_this->_impl_.flow_tag_ == nullptr) {
      _this->_impl_.flow_tag_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::flow_tag::v202404alpha1::FlowTag>(arena, *from._impl_.flow_tag_);
    } else {
      _this->_impl_.flow_tag_->MergeFrom(*from._impl_.flow_tag_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateFlowTagResponse::CopyFrom(const CreateFlowTagResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.flow_tag.v202404alpha1.CreateFlowTagResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateFlowTagResponse::InternalSwap(CreateFlowTagResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.flow_tag_, other->_impl_.flow_tag_);
}

::google::protobuf::Metadata CreateFlowTagResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateFlowTagRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateFlowTagRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateFlowTagRequest, _impl_._has_bits_);
};

UpdateFlowTagRequest::UpdateFlowTagRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.flow_tag.v202404alpha1.UpdateFlowTagRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateFlowTagRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::flow_tag::v202404alpha1::UpdateFlowTagRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateFlowTagRequest::UpdateFlowTagRequest(
    ::google::protobuf::Arena* arena,
    const UpdateFlowTagRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateFlowTagRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.flow_tag_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::flow_tag::v202404alpha1::FlowTag>(
                              arena, *from._impl_.flow_tag_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.flow_tag.v202404alpha1.UpdateFlowTagRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateFlowTagRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateFlowTagRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.flow_tag_ = {};
}
UpdateFlowTagRequest::~UpdateFlowTagRequest() {
  // @@protoc_insertion_point(destructor:kentik.flow_tag.v202404alpha1.UpdateFlowTagRequest)
  SharedDtor(*this);
}
inline void UpdateFlowTagRequest::SharedDtor(MessageLite& self) {
  UpdateFlowTagRequest& this_ = static_cast<UpdateFlowTagRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.flow_tag_;
  this_._impl_.~Impl_();
}

inline void* UpdateFlowTagRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateFlowTagRequest(arena);
}
constexpr auto UpdateFlowTagRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateFlowTagRequest),
                                            alignof(UpdateFlowTagRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateFlowTagRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateFlowTagRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateFlowTagRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateFlowTagRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateFlowTagRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateFlowTagRequest>(), &UpdateFlowTagRequest::ByteSizeLong,
            &UpdateFlowTagRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateFlowTagRequest, _impl_._cached_size_),
        false,
    },
    &UpdateFlowTagRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateFlowTagRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateFlowTagRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateFlowTagRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::UpdateFlowTagRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateFlowTagRequest, _impl_.flow_tag_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
    {PROTOBUF_FIELD_OFFSET(UpdateFlowTagRequest, _impl_.flow_tag_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::FlowTag>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateFlowTagRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.flow_tag.v202404alpha1.UpdateFlowTagRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.flow_tag_ != nullptr);
    _impl_.flow_tag_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateFlowTagRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateFlowTagRequest& this_ = static_cast<const UpdateFlowTagRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateFlowTagRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateFlowTagRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.flow_tag.v202404alpha1.UpdateFlowTagRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.flow_tag_, this_._impl_.flow_tag_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.flow_tag.v202404alpha1.UpdateFlowTagRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateFlowTagRequest::ByteSizeLong(const MessageLite& base) {
          const UpdateFlowTagRequest& this_ = static_cast<const UpdateFlowTagRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateFlowTagRequest::ByteSizeLong() const {
          const UpdateFlowTagRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.flow_tag.v202404alpha1.UpdateFlowTagRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.flow_tag_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateFlowTagRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateFlowTagRequest*>(&to_msg);
  auto& from = static_cast<const UpdateFlowTagRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.flow_tag.v202404alpha1.UpdateFlowTagRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.flow_tag_ != nullptr);
    if (_this->_impl_.flow_tag_ == nullptr) {
      _this->_impl_.flow_tag_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::flow_tag::v202404alpha1::FlowTag>(arena, *from._impl_.flow_tag_);
    } else {
      _this->_impl_.flow_tag_->MergeFrom(*from._impl_.flow_tag_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateFlowTagRequest::CopyFrom(const UpdateFlowTagRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.flow_tag.v202404alpha1.UpdateFlowTagRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateFlowTagRequest::InternalSwap(UpdateFlowTagRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.flow_tag_, other->_impl_.flow_tag_);
}

::google::protobuf::Metadata UpdateFlowTagRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateFlowTagResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateFlowTagResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateFlowTagResponse, _impl_._has_bits_);
};

UpdateFlowTagResponse::UpdateFlowTagResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.flow_tag.v202404alpha1.UpdateFlowTagResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateFlowTagResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::flow_tag::v202404alpha1::UpdateFlowTagResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateFlowTagResponse::UpdateFlowTagResponse(
    ::google::protobuf::Arena* arena,
    const UpdateFlowTagResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateFlowTagResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.flow_tag_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::flow_tag::v202404alpha1::FlowTag>(
                              arena, *from._impl_.flow_tag_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.flow_tag.v202404alpha1.UpdateFlowTagResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateFlowTagResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateFlowTagResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.flow_tag_ = {};
}
UpdateFlowTagResponse::~UpdateFlowTagResponse() {
  // @@protoc_insertion_point(destructor:kentik.flow_tag.v202404alpha1.UpdateFlowTagResponse)
  SharedDtor(*this);
}
inline void UpdateFlowTagResponse::SharedDtor(MessageLite& self) {
  UpdateFlowTagResponse& this_ = static_cast<UpdateFlowTagResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.flow_tag_;
  this_._impl_.~Impl_();
}

inline void* UpdateFlowTagResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateFlowTagResponse(arena);
}
constexpr auto UpdateFlowTagResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateFlowTagResponse),
                                            alignof(UpdateFlowTagResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateFlowTagResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateFlowTagResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateFlowTagResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateFlowTagResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateFlowTagResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateFlowTagResponse>(), &UpdateFlowTagResponse::ByteSizeLong,
            &UpdateFlowTagResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateFlowTagResponse, _impl_._cached_size_),
        false,
    },
    &UpdateFlowTagResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateFlowTagResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateFlowTagResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateFlowTagResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::UpdateFlowTagResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateFlowTagResponse, _impl_.flow_tag_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
    {PROTOBUF_FIELD_OFFSET(UpdateFlowTagResponse, _impl_.flow_tag_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::FlowTag>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateFlowTagResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.flow_tag.v202404alpha1.UpdateFlowTagResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.flow_tag_ != nullptr);
    _impl_.flow_tag_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateFlowTagResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateFlowTagResponse& this_ = static_cast<const UpdateFlowTagResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateFlowTagResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateFlowTagResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.flow_tag.v202404alpha1.UpdateFlowTagResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.flow_tag_, this_._impl_.flow_tag_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.flow_tag.v202404alpha1.UpdateFlowTagResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateFlowTagResponse::ByteSizeLong(const MessageLite& base) {
          const UpdateFlowTagResponse& this_ = static_cast<const UpdateFlowTagResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateFlowTagResponse::ByteSizeLong() const {
          const UpdateFlowTagResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.flow_tag.v202404alpha1.UpdateFlowTagResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.flow_tag.v202404alpha1.FlowTag flow_tag = 1 [json_name = "flowTag"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.flow_tag_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateFlowTagResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateFlowTagResponse*>(&to_msg);
  auto& from = static_cast<const UpdateFlowTagResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.flow_tag.v202404alpha1.UpdateFlowTagResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.flow_tag_ != nullptr);
    if (_this->_impl_.flow_tag_ == nullptr) {
      _this->_impl_.flow_tag_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::flow_tag::v202404alpha1::FlowTag>(arena, *from._impl_.flow_tag_);
    } else {
      _this->_impl_.flow_tag_->MergeFrom(*from._impl_.flow_tag_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateFlowTagResponse::CopyFrom(const UpdateFlowTagResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.flow_tag.v202404alpha1.UpdateFlowTagResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateFlowTagResponse::InternalSwap(UpdateFlowTagResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.flow_tag_, other->_impl_.flow_tag_);
}

::google::protobuf::Metadata UpdateFlowTagResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteFlowTagRequest::_Internal {
 public:
};

DeleteFlowTagRequest::DeleteFlowTagRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.flow_tag.v202404alpha1.DeleteFlowTagRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteFlowTagRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::flow_tag::v202404alpha1::DeleteFlowTagRequest& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

DeleteFlowTagRequest::DeleteFlowTagRequest(
    ::google::protobuf::Arena* arena,
    const DeleteFlowTagRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteFlowTagRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.flow_tag.v202404alpha1.DeleteFlowTagRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteFlowTagRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void DeleteFlowTagRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeleteFlowTagRequest::~DeleteFlowTagRequest() {
  // @@protoc_insertion_point(destructor:kentik.flow_tag.v202404alpha1.DeleteFlowTagRequest)
  SharedDtor(*this);
}
inline void DeleteFlowTagRequest::SharedDtor(MessageLite& self) {
  DeleteFlowTagRequest& this_ = static_cast<DeleteFlowTagRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DeleteFlowTagRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeleteFlowTagRequest(arena);
}
constexpr auto DeleteFlowTagRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeleteFlowTagRequest),
                                            alignof(DeleteFlowTagRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeleteFlowTagRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeleteFlowTagRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeleteFlowTagRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeleteFlowTagRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeleteFlowTagRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeleteFlowTagRequest>(), &DeleteFlowTagRequest::ByteSizeLong,
            &DeleteFlowTagRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeleteFlowTagRequest, _impl_._cached_size_),
        false,
    },
    &DeleteFlowTagRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeleteFlowTagRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 61, 2> DeleteFlowTagRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::DeleteFlowTagRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteFlowTagRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(DeleteFlowTagRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\62\2\0\0\0\0\0\0"
    "kentik.flow_tag.v202404alpha1.DeleteFlowTagRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void DeleteFlowTagRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.flow_tag.v202404alpha1.DeleteFlowTagRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeleteFlowTagRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeleteFlowTagRequest& this_ = static_cast<const DeleteFlowTagRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeleteFlowTagRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeleteFlowTagRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.flow_tag.v202404alpha1.DeleteFlowTagRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.flow_tag.v202404alpha1.DeleteFlowTagRequest.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.flow_tag.v202404alpha1.DeleteFlowTagRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeleteFlowTagRequest::ByteSizeLong(const MessageLite& base) {
          const DeleteFlowTagRequest& this_ = static_cast<const DeleteFlowTagRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeleteFlowTagRequest::ByteSizeLong() const {
          const DeleteFlowTagRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.flow_tag.v202404alpha1.DeleteFlowTagRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string id = 1 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeleteFlowTagRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteFlowTagRequest*>(&to_msg);
  auto& from = static_cast<const DeleteFlowTagRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.flow_tag.v202404alpha1.DeleteFlowTagRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteFlowTagRequest::CopyFrom(const DeleteFlowTagRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.flow_tag.v202404alpha1.DeleteFlowTagRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeleteFlowTagRequest::InternalSwap(DeleteFlowTagRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata DeleteFlowTagRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteFlowTagResponse::_Internal {
 public:
};

DeleteFlowTagResponse::DeleteFlowTagResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:kentik.flow_tag.v202404alpha1.DeleteFlowTagResponse)
}
DeleteFlowTagResponse::DeleteFlowTagResponse(
    ::google::protobuf::Arena* arena,
    const DeleteFlowTagResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteFlowTagResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:kentik.flow_tag.v202404alpha1.DeleteFlowTagResponse)
}

inline void* DeleteFlowTagResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeleteFlowTagResponse(arena);
}
constexpr auto DeleteFlowTagResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DeleteFlowTagResponse),
                                            alignof(DeleteFlowTagResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeleteFlowTagResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeleteFlowTagResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeleteFlowTagResponse::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<DeleteFlowTagResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeleteFlowTagResponse::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<DeleteFlowTagResponse>(), &DeleteFlowTagResponse::ByteSizeLong,
            &DeleteFlowTagResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeleteFlowTagResponse, _impl_._cached_size_),
        false,
    },
    &DeleteFlowTagResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeleteFlowTagResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> DeleteFlowTagResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::flow_tag::v202404alpha1::DeleteFlowTagResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata DeleteFlowTagResponse::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v202404alpha1
}  // namespace flow_tag
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_kentik_2fflow_5ftag_2fv202404alpha1_2fflow_5ftag_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
