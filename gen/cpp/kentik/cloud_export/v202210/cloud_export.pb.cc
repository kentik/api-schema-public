// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kentik/cloud_export/v202210/cloud_export.proto

#include "kentik/cloud_export/v202210/cloud_export.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AwsProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AzureProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CloudExportStatus_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GceProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IbmProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
namespace kentik {
namespace cloud_export {
namespace v202210 {
class CloudExportDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CloudExport> _instance;
  const ::kentik::cloud_export::v202210::AwsProperties* aws_;
  const ::kentik::cloud_export::v202210::AzureProperties* azure_;
  const ::kentik::cloud_export::v202210::GceProperties* gce_;
  const ::kentik::cloud_export::v202210::IbmProperties* ibm_;
} _CloudExport_default_instance_;
class AwsPropertiesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AwsProperties> _instance;
} _AwsProperties_default_instance_;
class AzurePropertiesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AzureProperties> _instance;
} _AzureProperties_default_instance_;
class GcePropertiesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GceProperties> _instance;
} _GceProperties_default_instance_;
class IbmPropertiesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IbmProperties> _instance;
} _IbmProperties_default_instance_;
class CloudExportStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CloudExportStatus> _instance;
} _CloudExportStatus_default_instance_;
class CreateCloudExportRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateCloudExportRequest> _instance;
} _CreateCloudExportRequest_default_instance_;
class CreateCloudExportResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateCloudExportResponse> _instance;
} _CreateCloudExportResponse_default_instance_;
class ListCloudExportsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListCloudExportsRequest> _instance;
} _ListCloudExportsRequest_default_instance_;
class ListCloudExportsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListCloudExportsResponse> _instance;
} _ListCloudExportsResponse_default_instance_;
class GetCloudExportRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetCloudExportRequest> _instance;
} _GetCloudExportRequest_default_instance_;
class GetCloudExportResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetCloudExportResponse> _instance;
} _GetCloudExportResponse_default_instance_;
class UpdateCloudExportRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateCloudExportRequest> _instance;
} _UpdateCloudExportRequest_default_instance_;
class UpdateCloudExportResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateCloudExportResponse> _instance;
} _UpdateCloudExportResponse_default_instance_;
class DeleteCloudExportRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteCloudExportRequest> _instance;
} _DeleteCloudExportRequest_default_instance_;
class DeleteCloudExportResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteCloudExportResponse> _instance;
} _DeleteCloudExportResponse_default_instance_;
}  // namespace v202210
}  // namespace cloud_export
}  // namespace kentik
static void InitDefaultsscc_info_AwsProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202210::_AwsProperties_default_instance_;
    new (ptr) ::kentik::cloud_export::v202210::AwsProperties();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202210::AwsProperties::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AwsProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AwsProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto}, {}};

static void InitDefaultsscc_info_AzureProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202210::_AzureProperties_default_instance_;
    new (ptr) ::kentik::cloud_export::v202210::AzureProperties();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202210::AzureProperties::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AzureProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AzureProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto}, {}};

static void InitDefaultsscc_info_CloudExport_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202210::_CloudExport_default_instance_;
    new (ptr) ::kentik::cloud_export::v202210::CloudExport();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202210::CloudExport::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 6, 0, InitDefaultsscc_info_CloudExport_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto}, {
      &scc_info_AwsProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,
      &scc_info_AzureProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,
      &scc_info_GceProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,
      &scc_info_IbmProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,
      &scc_info_CloudExportStatus_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_CloudExportStatus_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202210::_CloudExportStatus_default_instance_;
    new (ptr) ::kentik::cloud_export::v202210::CloudExportStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202210::CloudExportStatus::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CloudExportStatus_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CloudExportStatus_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto}, {}};

static void InitDefaultsscc_info_CreateCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202210::_CreateCloudExportRequest_default_instance_;
    new (ptr) ::kentik::cloud_export::v202210::CreateCloudExportRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202210::CreateCloudExportRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto}, {
      &scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,}};

static void InitDefaultsscc_info_CreateCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202210::_CreateCloudExportResponse_default_instance_;
    new (ptr) ::kentik::cloud_export::v202210::CreateCloudExportResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202210::CreateCloudExportResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto}, {
      &scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,}};

static void InitDefaultsscc_info_DeleteCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202210::_DeleteCloudExportRequest_default_instance_;
    new (ptr) ::kentik::cloud_export::v202210::DeleteCloudExportRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202210::DeleteCloudExportRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto}, {}};

static void InitDefaultsscc_info_DeleteCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202210::_DeleteCloudExportResponse_default_instance_;
    new (ptr) ::kentik::cloud_export::v202210::DeleteCloudExportResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202210::DeleteCloudExportResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto}, {}};

static void InitDefaultsscc_info_GceProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202210::_GceProperties_default_instance_;
    new (ptr) ::kentik::cloud_export::v202210::GceProperties();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202210::GceProperties::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GceProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GceProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto}, {}};

static void InitDefaultsscc_info_GetCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202210::_GetCloudExportRequest_default_instance_;
    new (ptr) ::kentik::cloud_export::v202210::GetCloudExportRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202210::GetCloudExportRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto}, {}};

static void InitDefaultsscc_info_GetCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202210::_GetCloudExportResponse_default_instance_;
    new (ptr) ::kentik::cloud_export::v202210::GetCloudExportResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202210::GetCloudExportResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto}, {
      &scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,}};

static void InitDefaultsscc_info_IbmProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202210::_IbmProperties_default_instance_;
    new (ptr) ::kentik::cloud_export::v202210::IbmProperties();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202210::IbmProperties::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IbmProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IbmProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto}, {}};

static void InitDefaultsscc_info_ListCloudExportsRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202210::_ListCloudExportsRequest_default_instance_;
    new (ptr) ::kentik::cloud_export::v202210::ListCloudExportsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202210::ListCloudExportsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListCloudExportsRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListCloudExportsRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto}, {}};

static void InitDefaultsscc_info_ListCloudExportsResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202210::_ListCloudExportsResponse_default_instance_;
    new (ptr) ::kentik::cloud_export::v202210::ListCloudExportsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202210::ListCloudExportsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListCloudExportsResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListCloudExportsResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto}, {
      &scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,}};

static void InitDefaultsscc_info_UpdateCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202210::_UpdateCloudExportRequest_default_instance_;
    new (ptr) ::kentik::cloud_export::v202210::UpdateCloudExportRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202210::UpdateCloudExportRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto}, {
      &scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,}};

static void InitDefaultsscc_info_UpdateCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202210::_UpdateCloudExportResponse_default_instance_;
    new (ptr) ::kentik::cloud_export::v202210::UpdateCloudExportResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202210::UpdateCloudExportResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto}, {
      &scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto[16];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CloudExport, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CloudExport, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CloudExport, id_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CloudExport, type_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CloudExport, enabled_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CloudExport, name_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CloudExport, description_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CloudExport, plan_id_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CloudExport, cloud_provider_),
  offsetof(::kentik::cloud_export::v202210::CloudExportDefaultTypeInternal, aws_),
  offsetof(::kentik::cloud_export::v202210::CloudExportDefaultTypeInternal, azure_),
  offsetof(::kentik::cloud_export::v202210::CloudExportDefaultTypeInternal, gce_),
  offsetof(::kentik::cloud_export::v202210::CloudExportDefaultTypeInternal, ibm_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CloudExport, current_status_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CloudExport, cdate_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CloudExport, edate_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CloudExport, cloud_specific_properties_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::AwsProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::AwsProperties, bucket_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::AwsProperties, iam_role_arn_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::AwsProperties, region_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::AwsProperties, delete_after_read_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::AwsProperties, metadata_only_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::AzureProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::AzureProperties, location_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::AzureProperties, resource_group_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::AzureProperties, storage_account_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::AzureProperties, subscription_id_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::AzureProperties, security_principal_enabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::GceProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::GceProperties, project_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::GceProperties, subscription_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::IbmProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::IbmProperties, bucket_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CloudExportStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CloudExportStatus, status_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CloudExportStatus, error_message_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CloudExportStatus, flow_found_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CloudExportStatus, api_access_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CloudExportStatus, storage_account_access_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CreateCloudExportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CreateCloudExportRequest, export__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CreateCloudExportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::CreateCloudExportResponse, export__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::ListCloudExportsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::ListCloudExportsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::ListCloudExportsResponse, exports_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::ListCloudExportsResponse, invalid_exports_count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::GetCloudExportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::GetCloudExportRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::GetCloudExportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::GetCloudExportResponse, export__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::UpdateCloudExportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::UpdateCloudExportRequest, export__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::UpdateCloudExportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::UpdateCloudExportResponse, export__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::DeleteCloudExportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::DeleteCloudExportRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202210::DeleteCloudExportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::kentik::cloud_export::v202210::CloudExport)},
  { 20, -1, sizeof(::kentik::cloud_export::v202210::AwsProperties)},
  { 30, -1, sizeof(::kentik::cloud_export::v202210::AzureProperties)},
  { 40, -1, sizeof(::kentik::cloud_export::v202210::GceProperties)},
  { 47, -1, sizeof(::kentik::cloud_export::v202210::IbmProperties)},
  { 53, -1, sizeof(::kentik::cloud_export::v202210::CloudExportStatus)},
  { 63, -1, sizeof(::kentik::cloud_export::v202210::CreateCloudExportRequest)},
  { 69, -1, sizeof(::kentik::cloud_export::v202210::CreateCloudExportResponse)},
  { 75, -1, sizeof(::kentik::cloud_export::v202210::ListCloudExportsRequest)},
  { 80, -1, sizeof(::kentik::cloud_export::v202210::ListCloudExportsResponse)},
  { 87, -1, sizeof(::kentik::cloud_export::v202210::GetCloudExportRequest)},
  { 93, -1, sizeof(::kentik::cloud_export::v202210::GetCloudExportResponse)},
  { 99, -1, sizeof(::kentik::cloud_export::v202210::UpdateCloudExportRequest)},
  { 105, -1, sizeof(::kentik::cloud_export::v202210::UpdateCloudExportResponse)},
  { 111, -1, sizeof(::kentik::cloud_export::v202210::DeleteCloudExportRequest)},
  { 117, -1, sizeof(::kentik::cloud_export::v202210::DeleteCloudExportResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202210::_CloudExport_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202210::_AwsProperties_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202210::_AzureProperties_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202210::_GceProperties_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202210::_IbmProperties_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202210::_CloudExportStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202210::_CreateCloudExportRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202210::_CreateCloudExportResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202210::_ListCloudExportsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202210::_ListCloudExportsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202210::_GetCloudExportRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202210::_GetCloudExportResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202210::_UpdateCloudExportRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202210::_UpdateCloudExportResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202210::_DeleteCloudExportRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202210::_DeleteCloudExportResponse_default_instance_),
};

const char descriptor_table_protodef_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n.kentik/cloud_export/v202210/cloud_expo"
  "rt.proto\022\033kentik.cloud_export.v202210\032\034g"
  "oogle/api/annotations.proto\032\027google/api/"
  "client.proto\032.protoc-gen-openapiv2/optio"
  "ns/annotations.proto\032\037google/api/field_b"
  "ehavior.proto\032\037google/protobuf/timestamp"
  ".proto\032+kentik/core/v202012alpha1/annota"
  "tions.proto\"\306\t\n\013CloudExport\022:\n\002id\030\001 \001(\tB"
  "*\222A#2!Unique identifier of the instance\342"
  "A\001\003R\002id\022r\n\004type\030\002 \001(\0162,.kentik.cloud_exp"
  "ort.v202210.CloudExportTypeB0\222A-2+Owners"
  "hip of the cloud export process/agentR\004t"
  "ype\022W\n\007enabled\030\003 \001(\010B=\222A624Attribute con"
  "trolling whether the instance is active\342"
  "A\001\002R\007enabled\022\?\n\004name\030\004 \001(\tB+\222A$2\"User se"
  "lected name of the instance\342A\001\002R\004name\022B\n"
  "\013description\030\005 \001(\tB \222A\0352\033Description of "
  "the instanceR\013description\022Q\n\007plan_id\030\006 \001"
  "(\tB8\222A12/Identifier of the billing plan "
  "for the instance\342A\001\002R\006planId\022y\n\016cloud_pr"
  "ovider\030\007 \001(\0162*.kentik.cloud_export.v2022"
  "10.CloudProviderB&\222A\0372\035Cloud provider id"
  "entification\342A\001\002R\rcloudProvider\022>\n\003aws\030\010"
  " \001(\0132*.kentik.cloud_export.v202210.AwsPr"
  "opertiesH\000R\003aws\022D\n\005azure\030\t \001(\0132,.kentik."
  "cloud_export.v202210.AzurePropertiesH\000R\005"
  "azure\022>\n\003gce\030\n \001(\0132*.kentik.cloud_export"
  ".v202210.GcePropertiesH\000R\003gce\022>\n\003ibm\030\013 \001"
  "(\0132*.kentik.cloud_export.v202210.IbmProp"
  "ertiesH\000R\003ibm\022\204\001\n\016current_status\030\r \001(\0132."
  ".kentik.cloud_export.v202210.CloudExport"
  "StatusB-\222A&2$Runtime status of the expor"
  "t process\342A\001\003R\rcurrentStatus\022S\n\005cdate\030\016 "
  "\001(\0132\032.google.protobuf.TimestampB!\222A\0322\030Cr"
  "eation timestamp (UTC)\342A\001\003R\005cdate\022\\\n\005eda"
  "te\030\017 \001(\0132\032.google.protobuf.TimestampB*\222A"
  "#2!Last modification timestamp (UTC)\342A\001\003"
  "R\005edateB\033\n\031cloud_specific_properties\"\221\004\n"
  "\rAwsProperties\022W\n\006bucket\030\001 \001(\tB\?\222A<2:Nam"
  "e of S3 bucket from which flow logs are "
  "to be exported.R\006bucket\022{\n\014iam_role_arn\030"
  "\002 \001(\tBY\222AR2PARN of the IAM role granted "
  "access to the S3 bucket and describe API"
  " end-points.\342A\001\002R\niamRoleArn\022S\n\006region\030\003"
  " \001(\tB;\222A422Name of AWS region from which"
  " to export flow logs.\342A\001\002R\006region\022r\n\021del"
  "ete_after_read\030\004 \001(\010BF\222AC2ADelete from l"
  "ogs from the S3 bucket after export (def"
  "ault false).R\017deleteAfterRead\022a\n\rmetadat"
  "a_only\030\005 \001(\010B<\222A927Import only metadata "
  "without any flows (default false).R\014meta"
  "dataOnly\"\333\004\n\017AzureProperties\022Z\n\010location"
  "\030\001 \001(\tB>\222A725Azure region/location from "
  "which to export flow logs.\342A\001\002R\010location"
  "\022g\n\016resource_group\030\002 \001(\tB@\222A927Resource "
  "group containing the NSG generating flow"
  " logs.\342A\001\002R\rresourceGroup\022k\n\017storage_acc"
  "ount\030\003 \001(\tBB\222A;29Storage account from wh"
  "ich flow logs are to be extracted.\342A\001\002R\016"
  "storageAccount\022o\n\017subscription_id\030\004 \001(\tB"
  "F\222A\?2=ID of Azure account from which flo"
  "ws logs are to be exported.\342A\001\002R\016subscri"
  "ptionId\022\244\001\n\032security_principal_enabled\030\005"
  " \001(\010Bf\222Ac2aIndication whether security p"
  "rincipal for the Kentik flow export appl"
  "ication has been authorized.R\030securityPr"
  "incipalEnabled\"\303\001\n\rGceProperties\022V\n\007proj"
  "ect\030\001 \001(\tB<\222A523Name of the project from"
  " which to export flow logs.\342A\001\002R\007project"
  "\022Z\n\014subscription\030\002 \001(\tB6\222A/2-GCP Pub/Sub"
  " subscription providing flow logs.\342A\001\002R\014"
  "subscription\"f\n\rIbmProperties\022U\n\006bucket\030"
  "\001 \001(\tB=\222A:28Storage bucket from which fl"
  "ow logs are to be extracted.R\006bucket\"\233\004\n"
  "\021CloudExportStatus\022;\n\006status\030\001 \001(\tB#\222A\0342"
  "\032Status of the export task.\342A\001\003R\006status\022"
  "e\n\rerror_message\030\002 \001(\tB@\222A927Text of the"
  " last error message (empty if status is "
  "OK).\342A\001\003R\014errorMessage\022W\n\nflow_found\030\003 \001"
  "(\010B8\222A12/Indication whether any flow dat"
  "a were exported.\342A\001\003R\tflowFound\022j\n\napi_a"
  "ccess\030\004 \001(\010BK\222AD2BIndication whether the"
  " export process is able to access cloud "
  "API.\342A\001\003R\tapiAccess\022\234\001\n\026storage_account_"
  "access\030\005 \001(\010Bf\222A_2]Indication whether th"
  "e export process is able to access stora"
  "ge account containing flow logs.\342A\001\003R\024st"
  "orageAccountAccess\"~\n\030CreateCloudExportR"
  "equest\022b\n\006export\030\001 \001(\0132(.kentik.cloud_ex"
  "port.v202210.CloudExportB \222A\0352\033Cloud exp"
  "ort configuration.R\006export\"\200\001\n\031CreateClo"
  "udExportResponse\022c\n\006export\030\001 \001(\0132(.kenti"
  "k.cloud_export.v202210.CloudExportB!\222A\0362"
  "\034Created cloud export object.R\006export\"\031\n"
  "\027ListCloudExportsRequest\"\213\002\n\030ListCloudEx"
  "portsResponse\022f\n\007exports\030\001 \003(\0132(.kentik."
  "cloud_export.v202210.CloudExportB\"\222A\0372\035L"
  "ist of cloud export objects.R\007exports\022\206\001"
  "\n\025invalid_exports_count\030\002 \001(\rBR\222AO2MNumb"
  "er of objects with invalid data (which a"
  "re not returned in the response).R\023inval"
  "idExportsCount\"U\n\025GetCloudExportRequest\022"
  "<\n\002id\030\001 \001(\tB,\222A)2\'ID of the cloud export"
  " to be retrieved.R\002id\"u\n\026GetCloudExportR"
  "esponse\022[\n\006export\030\001 \001(\0132(.kentik.cloud_e"
  "xport.v202210.CloudExportB\031\222A\0262\024Cloud ex"
  "port object.R\006export\"~\n\030UpdateCloudExpor"
  "tRequest\022b\n\006export\030\001 \001(\0132(.kentik.cloud_"
  "export.v202210.CloudExportB \222A\0352\033Cloud e"
  "xport configuration.R\006export\"\200\001\n\031UpdateC"
  "loudExportResponse\022c\n\006export\030\001 \001(\0132(.ken"
  "tik.cloud_export.v202210.CloudExportB!\222A"
  "\0362\034Updated cloud export object.R\006export\""
  "V\n\030DeleteCloudExportRequest\022:\n\002id\030\001 \001(\tB"
  "*\222A\'2%ID of the cloud export to be delet"
  "ed.R\002id\"\033\n\031DeleteCloudExportResponse*\202\001\n"
  "\017CloudExportType\022!\n\035CLOUD_EXPORT_TYPE_UN"
  "SPECIFIED\020\000\022$\n CLOUD_EXPORT_TYPE_KENTIK_"
  "MANAGED\020\001\022&\n\"CLOUD_EXPORT_TYPE_CUSTOMER_"
  "MANAGED\020\002*\221\001\n\rCloudProvider\022\036\n\032CLOUD_PRO"
  "VIDER_UNSPECIFIED\020\000\022\026\n\022CLOUD_PROVIDER_AW"
  "S\020\001\022\030\n\024CLOUD_PROVIDER_AZURE\020\002\022\026\n\022CLOUD_P"
  "ROVIDER_GCE\020\003\022\026\n\022CLOUD_PROVIDER_IBM\020\0042\362\014"
  "\n\027CloudExportAdminService\022\265\002\n\021CreateClou"
  "dExport\0225.kentik.cloud_export.v202210.Cr"
  "eateCloudExportRequest\0326.kentik.cloud_ex"
  "port.v202210.CreateCloudExportResponse\"\260"
  "\001\222Ai\022\024Create Cloud Export.\032>Create new c"
  "loud export based on configuration in th"
  "e request.*\021CreateCloudExport\362\327\002\030admin.c"
  "loud_export:write\202\323\344\223\002\"\"\035/cloud_export/v"
  "202210/exports:\001*\022\241\002\n\020ListCloudExports\0224"
  ".kentik.cloud_export.v202210.ListCloudEx"
  "portsRequest\0325.kentik.cloud_export.v2022"
  "10.ListCloudExportsResponse\"\237\001\222A\\\022\023List "
  "cloud exports.\0323Returns a list of all cl"
  "oud exports in the account.*\020ListCloudEx"
  "ports\362\327\002\027admin.cloud_export:read\202\323\344\223\002\037\022\035"
  "/cloud_export/v202210/exports\022\306\002\n\016GetClo"
  "udExport\0222.kentik.cloud_export.v202210.G"
  "etCloudExportRequest\0323.kentik.cloud_expo"
  "rt.v202210.GetCloudExportResponse\"\312\001\222A\201\001"
  "\022*Get cloud export configuration and sta"
  "tus.\032CReturns configuration and status o"
  "f cloud export with specified ID.*\016GetCl"
  "oudExport\362\327\002\027admin.cloud_export:read\202\323\344\223"
  "\002$\022\"/cloud_export/v202210/exports/{id}\022\337"
  "\002\n\021UpdateCloudExport\0225.kentik.cloud_expo"
  "rt.v202210.UpdateCloudExportRequest\0326.ke"
  "ntik.cloud_export.v202210.UpdateCloudExp"
  "ortResponse\"\332\001\222A\206\001\022%Update configuration"
  " of cloud export.\032JReplace complete conf"
  "iguration of a cloud export with data in"
  " the request.*\021UpdateCloudExport\362\327\002\030admi"
  "n.cloud_export:write\202\323\344\223\002.\032)/cloud_expor"
  "t/v202210/exports/{export.id}:\001*\022\241\002\n\021Del"
  "eteCloudExport\0225.kentik.cloud_export.v20"
  "2210.DeleteCloudExportRequest\0326.kentik.c"
  "loud_export.v202210.DeleteCloudExportRes"
  "ponse\"\234\001\222AS\022\026Delete a cloud export.\032&Del"
  "ete cloud export with specified ID.*\021Del"
  "eteCloudExport\362\327\002\030admin.cloud_export:wri"
  "te\202\323\344\223\002$*\"/cloud_export/v202210/exports/"
  "{id}\032,\312A\023grpc.api.kentik.com\352\327\002\022admin.cl"
  "oud_exportB\360\035ZLgithub.com/kentik/api-sch"
  "ema/gen/go/kentik/cloud_export/v202210;c"
  "loud_export\222A\236\035\022\317\033\n\036Cloud Export Configu"
  "ration API\022\334\032# Overview\nIn Kentik, a \"cl"
  "oud export\" is an object whose propertie"
  "s are the values that Kentik needs to ac"
  "cess network flow logs from a given set "
  "of resources in a given cloud provider ("
  "see [Cloud Exports and Devices](https://"
  "kb.kentik.com/v4/Na00.htm#Na00-Cloud_Exp"
  "orts_and_Devices)). The Cloud Export API"
  " enables programmatic management of clou"
  "d exports, serving two primary functions"
  ":\n* Configuration of the Kentik resource"
  "s required to export network flow logs a"
  "nd metadata from [public clouds](https:/"
  "/kb.kentik.com/v4/Na00.htm).\n* Basic sta"
  "tus information on active export process"
  "es.\n\n### Supported Cloud Providers\nThe f"
  "unctionality and configuration parameter"
  "s supported by this API differ by cloud "
  "provider. The API currently supports the"
  " following providers:\n* [Amazon Web Serv"
  "ices](https://kb.kentik.com/v0/Bd06.htm)"
  " (AWS)\n* [Microsoft Azure](https://kb.ke"
  "ntik.com/v0/Bd08.htm)\n* [Google Cloud](h"
  "ttps://kb.kentik.com/v0/Bd07.htm) (GCP)\n"
  "* [IBM Cloud](https://kb.kentik.com/v0/B"
  "d09.htm)\n\n### Additional Public Resource"
  "s\nThe following additional resources are"
  " available for working with this API:\n* "
  "Kentik community [Python](https://github"
  ".com/kentik/community_sdk_python) and [G"
  "o](https://github.com/kentik/community_s"
  "dk_golang) SDKs provide language-specifi"
  "c support for using this and other Kenti"
  "k APIs. These SDKs can be also used as e"
  "xample code for development.\n* A [Terraf"
  "orm provider](https://registry.terraform"
  ".io/providers/kentik/kentik-cloudexport)"
  " is available for configuring `cloud_exp"
  "ort` instances in Kentik. Terraform modu"
  "les are available for [AWS](https://gith"
  "ub.com/kentik/config-snippets-cloud/tree"
  "/master/cloud_AWS/terraform/module), [Az"
  "ure](https://github.com/kentik/config-sn"
  "ippets-cloud/tree/master/cloud_Azure/ter"
  "raform/module) \nand [GCP](https://github"
  ".com/kentik/config-snippets-cloud/tree/m"
  "aster/cloud_GCP/terraform/module).\nThese"
  " modules support onboarding and ongoing "
  "management of all resources (in public c"
  "louds and in Kentik) required to export "
  "flow logs to Kentik.\n\n# Anatomy of a Clo"
  "ud Export\nConfiguration and status of a "
  "`cloud_export` instance is represented b"
  "y the `CloudExport` object, which contai"
  "ns three categories of attributes:\n* Com"
  "mon Configuration Attributes\n* Cloud Pro"
  "vider Configuration Attributes\n* Metadat"
  "a and Status Attributes\n\n### Common Conf"
  "iguration Attributes\nThe configuration a"
  "ttributes in the table below are common "
  "to `CloudExport` objects for all cloud p"
  "roviders.\n| Attribute | Required | Defau"
  "lt |\n|-----------|----------| ------- |\n"
  "| enabled | No | False |\n| name | Yes | "
  "  |\n| description | No | <empty string> "
  "|\n| type | Yes | |\n| cloud_provider | Ye"
  "s | |\n| plan_id | Yes | |\n\n### Cloud Pro"
  "vider Specific Attributes\nThe attributes"
  " listed in the table below are objects w"
  "hose parameters are specific to each clo"
  "ud provider.\n| Cloud Provider | Attribut"
  "e | Object Name |\n|-----------|---------"
  "-| ------- |\n| AWS | aws | AwsProperties"
  " |\n| Azure | azure | AzureProperties |\n|"
  " Google Cloud | gce | GceProperties |\n| "
  "IBM Cloud | ibm | IbmProperties |\n\n### M"
  "etadata and Status Attributes\nThe attrib"
  "utes in the table below provide read-onl"
  "y metadata and status for a `cloud_expor"
  "t` instance.\n| Attribute | Purpose |\n|--"
  "---------|---------|\n| id | System-gener"
  "ated unique identifier of the instance |"
  "\n| cdate | Creation timestamp |\n| edate "
  "| Last-modification timestamp |\n| curren"
  "t_status | Runtime status of the flow an"
  "d metadata collection process |\n\n\"E\n\026Ken"
  "tik API Engineering\022+https://github.com/"
  "kentik/api-schema-public2\007v202210*\001\0022\020ap"
  "plication/json:\020application/jsonZD\n\036\n\005em"
  "ail\022\025\010\002\032\017X-CH-Auth-Email \002\n\"\n\005token\022\031\010\002\032"
  "\023X-CH-Auth-API-Token \002b\026\n\t\n\005email\022\000\n\t\n\005t"
  "oken\022\000rE\n Kentik support for public clou"
  "ds\022!https://kb.kentik.com/v4/Na00.htmb\006p"
  "roto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto_deps[6] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_kentik_2fcore_2fv202012alpha1_2fannotations_2eproto,
  &::descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto_sccs[16] = {
  &scc_info_AwsProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,
  &scc_info_AzureProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,
  &scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,
  &scc_info_CloudExportStatus_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,
  &scc_info_CreateCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,
  &scc_info_CreateCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,
  &scc_info_DeleteCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,
  &scc_info_DeleteCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,
  &scc_info_GceProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,
  &scc_info_GetCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,
  &scc_info_GetCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,
  &scc_info_IbmProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,
  &scc_info_ListCloudExportsRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,
  &scc_info_ListCloudExportsResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,
  &scc_info_UpdateCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,
  &scc_info_UpdateCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto = {
  false, false, descriptor_table_protodef_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto, "kentik/cloud_export/v202210/cloud_export.proto", 10405,
  &descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto_once, descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto_sccs, descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto_deps, 16, 6,
  schemas, file_default_instances, TableStruct_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto::offsets,
  file_level_metadata_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto, 16, file_level_enum_descriptors_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto, file_level_service_descriptors_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto)), true);
namespace kentik {
namespace cloud_export {
namespace v202210 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CloudExportType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto);
  return file_level_enum_descriptors_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto[0];
}
bool CloudExportType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CloudProvider_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto);
  return file_level_enum_descriptors_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto[1];
}
bool CloudProvider_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CloudExport::InitAsDefaultInstance() {
  ::kentik::cloud_export::v202210::_CloudExport_default_instance_.aws_ = const_cast< ::kentik::cloud_export::v202210::AwsProperties*>(
      ::kentik::cloud_export::v202210::AwsProperties::internal_default_instance());
  ::kentik::cloud_export::v202210::_CloudExport_default_instance_.azure_ = const_cast< ::kentik::cloud_export::v202210::AzureProperties*>(
      ::kentik::cloud_export::v202210::AzureProperties::internal_default_instance());
  ::kentik::cloud_export::v202210::_CloudExport_default_instance_.gce_ = const_cast< ::kentik::cloud_export::v202210::GceProperties*>(
      ::kentik::cloud_export::v202210::GceProperties::internal_default_instance());
  ::kentik::cloud_export::v202210::_CloudExport_default_instance_.ibm_ = const_cast< ::kentik::cloud_export::v202210::IbmProperties*>(
      ::kentik::cloud_export::v202210::IbmProperties::internal_default_instance());
  ::kentik::cloud_export::v202210::_CloudExport_default_instance_._instance.get_mutable()->current_status_ = const_cast< ::kentik::cloud_export::v202210::CloudExportStatus*>(
      ::kentik::cloud_export::v202210::CloudExportStatus::internal_default_instance());
  ::kentik::cloud_export::v202210::_CloudExport_default_instance_._instance.get_mutable()->cdate_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::kentik::cloud_export::v202210::_CloudExport_default_instance_._instance.get_mutable()->edate_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class CloudExport::_Internal {
 public:
  static const ::kentik::cloud_export::v202210::AwsProperties& aws(const CloudExport* msg);
  static const ::kentik::cloud_export::v202210::AzureProperties& azure(const CloudExport* msg);
  static const ::kentik::cloud_export::v202210::GceProperties& gce(const CloudExport* msg);
  static const ::kentik::cloud_export::v202210::IbmProperties& ibm(const CloudExport* msg);
  static const ::kentik::cloud_export::v202210::CloudExportStatus& current_status(const CloudExport* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& cdate(const CloudExport* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& edate(const CloudExport* msg);
};

const ::kentik::cloud_export::v202210::AwsProperties&
CloudExport::_Internal::aws(const CloudExport* msg) {
  return *msg->cloud_specific_properties_.aws_;
}
const ::kentik::cloud_export::v202210::AzureProperties&
CloudExport::_Internal::azure(const CloudExport* msg) {
  return *msg->cloud_specific_properties_.azure_;
}
const ::kentik::cloud_export::v202210::GceProperties&
CloudExport::_Internal::gce(const CloudExport* msg) {
  return *msg->cloud_specific_properties_.gce_;
}
const ::kentik::cloud_export::v202210::IbmProperties&
CloudExport::_Internal::ibm(const CloudExport* msg) {
  return *msg->cloud_specific_properties_.ibm_;
}
const ::kentik::cloud_export::v202210::CloudExportStatus&
CloudExport::_Internal::current_status(const CloudExport* msg) {
  return *msg->current_status_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
CloudExport::_Internal::cdate(const CloudExport* msg) {
  return *msg->cdate_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
CloudExport::_Internal::edate(const CloudExport* msg) {
  return *msg->edate_;
}
void CloudExport::set_allocated_aws(::kentik::cloud_export::v202210::AwsProperties* aws) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_cloud_specific_properties();
  if (aws) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(aws);
    if (message_arena != submessage_arena) {
      aws = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, aws, submessage_arena);
    }
    set_has_aws();
    cloud_specific_properties_.aws_ = aws;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.CloudExport.aws)
}
void CloudExport::set_allocated_azure(::kentik::cloud_export::v202210::AzureProperties* azure) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_cloud_specific_properties();
  if (azure) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(azure);
    if (message_arena != submessage_arena) {
      azure = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, azure, submessage_arena);
    }
    set_has_azure();
    cloud_specific_properties_.azure_ = azure;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.CloudExport.azure)
}
void CloudExport::set_allocated_gce(::kentik::cloud_export::v202210::GceProperties* gce) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_cloud_specific_properties();
  if (gce) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(gce);
    if (message_arena != submessage_arena) {
      gce = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gce, submessage_arena);
    }
    set_has_gce();
    cloud_specific_properties_.gce_ = gce;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.CloudExport.gce)
}
void CloudExport::set_allocated_ibm(::kentik::cloud_export::v202210::IbmProperties* ibm) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_cloud_specific_properties();
  if (ibm) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(ibm);
    if (message_arena != submessage_arena) {
      ibm = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ibm, submessage_arena);
    }
    set_has_ibm();
    cloud_specific_properties_.ibm_ = ibm;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.CloudExport.ibm)
}
void CloudExport::clear_cdate() {
  if (GetArena() == nullptr && cdate_ != nullptr) {
    delete cdate_;
  }
  cdate_ = nullptr;
}
void CloudExport::clear_edate() {
  if (GetArena() == nullptr && edate_ != nullptr) {
    delete edate_;
  }
  edate_ = nullptr;
}
CloudExport::CloudExport(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202210.CloudExport)
}
CloudExport::CloudExport(const CloudExport& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  plan_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_plan_id().empty()) {
    plan_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_plan_id(),
      GetArena());
  }
  if (from._internal_has_current_status()) {
    current_status_ = new ::kentik::cloud_export::v202210::CloudExportStatus(*from.current_status_);
  } else {
    current_status_ = nullptr;
  }
  if (from._internal_has_cdate()) {
    cdate_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.cdate_);
  } else {
    cdate_ = nullptr;
  }
  if (from._internal_has_edate()) {
    edate_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.edate_);
  } else {
    edate_ = nullptr;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&cloud_provider_) -
    reinterpret_cast<char*>(&type_)) + sizeof(cloud_provider_));
  clear_has_cloud_specific_properties();
  switch (from.cloud_specific_properties_case()) {
    case kAws: {
      _internal_mutable_aws()->::kentik::cloud_export::v202210::AwsProperties::MergeFrom(from._internal_aws());
      break;
    }
    case kAzure: {
      _internal_mutable_azure()->::kentik::cloud_export::v202210::AzureProperties::MergeFrom(from._internal_azure());
      break;
    }
    case kGce: {
      _internal_mutable_gce()->::kentik::cloud_export::v202210::GceProperties::MergeFrom(from._internal_gce());
      break;
    }
    case kIbm: {
      _internal_mutable_ibm()->::kentik::cloud_export::v202210::IbmProperties::MergeFrom(from._internal_ibm());
      break;
    }
    case CLOUD_SPECIFIC_PROPERTIES_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202210.CloudExport)
}

void CloudExport::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plan_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&current_status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cloud_provider_) -
      reinterpret_cast<char*>(&current_status_)) + sizeof(cloud_provider_));
  clear_has_cloud_specific_properties();
}

CloudExport::~CloudExport() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202210.CloudExport)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CloudExport::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plan_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete current_status_;
  if (this != internal_default_instance()) delete cdate_;
  if (this != internal_default_instance()) delete edate_;
  if (has_cloud_specific_properties()) {
    clear_cloud_specific_properties();
  }
}

void CloudExport::ArenaDtor(void* object) {
  CloudExport* _this = reinterpret_cast< CloudExport* >(object);
  (void)_this;
}
void CloudExport::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CloudExport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CloudExport& CloudExport::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void CloudExport::clear_cloud_specific_properties() {
// @@protoc_insertion_point(one_of_clear_start:kentik.cloud_export.v202210.CloudExport)
  switch (cloud_specific_properties_case()) {
    case kAws: {
      if (GetArena() == nullptr) {
        delete cloud_specific_properties_.aws_;
      }
      break;
    }
    case kAzure: {
      if (GetArena() == nullptr) {
        delete cloud_specific_properties_.azure_;
      }
      break;
    }
    case kGce: {
      if (GetArena() == nullptr) {
        delete cloud_specific_properties_.gce_;
      }
      break;
    }
    case kIbm: {
      if (GetArena() == nullptr) {
        delete cloud_specific_properties_.ibm_;
      }
      break;
    }
    case CLOUD_SPECIFIC_PROPERTIES_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CLOUD_SPECIFIC_PROPERTIES_NOT_SET;
}


void CloudExport::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202210.CloudExport)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  plan_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && current_status_ != nullptr) {
    delete current_status_;
  }
  current_status_ = nullptr;
  if (GetArena() == nullptr && cdate_ != nullptr) {
    delete cdate_;
  }
  cdate_ = nullptr;
  if (GetArena() == nullptr && edate_ != nullptr) {
    delete edate_;
  }
  edate_ = nullptr;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cloud_provider_) -
      reinterpret_cast<char*>(&type_)) + sizeof(cloud_provider_));
  clear_cloud_specific_properties();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CloudExport::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202210.CloudExport.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.cloud_export.v202210.CloudExportType type = 2[json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::kentik::cloud_export::v202210::CloudExportType>(val));
        } else goto handle_unusual;
        continue;
      // bool enabled = 3[json_name = "enabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 4[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202210.CloudExport.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 5[json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202210.CloudExport.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string plan_id = 6[json_name = "planId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_plan_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202210.CloudExport.plan_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.cloud_export.v202210.CloudProvider cloud_provider = 7[json_name = "cloudProvider", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_cloud_provider(static_cast<::kentik::cloud_export::v202210::CloudProvider>(val));
        } else goto handle_unusual;
        continue;
      // .kentik.cloud_export.v202210.AwsProperties aws = 8[json_name = "aws"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_aws(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.cloud_export.v202210.AzureProperties azure = 9[json_name = "azure"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_azure(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.cloud_export.v202210.GceProperties gce = 10[json_name = "gce"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_gce(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.cloud_export.v202210.IbmProperties ibm = 11[json_name = "ibm"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_ibm(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.cloud_export.v202210.CloudExportStatus current_status = 13[json_name = "currentStatus", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_current_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp cdate = 14[json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_cdate(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp edate = 15[json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_edate(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CloudExport::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202210.CloudExport)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202210.CloudExport.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .kentik.cloud_export.v202210.CloudExportType type = 2[json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // bool enabled = 3[json_name = "enabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_enabled(), target);
  }

  // string name = 4[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202210.CloudExport.name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_name(), target);
  }

  // string description = 5[json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202210.CloudExport.description");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_description(), target);
  }

  // string plan_id = 6[json_name = "planId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->plan_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_plan_id().data(), static_cast<int>(this->_internal_plan_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202210.CloudExport.plan_id");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_plan_id(), target);
  }

  // .kentik.cloud_export.v202210.CloudProvider cloud_provider = 7[json_name = "cloudProvider", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->cloud_provider() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_cloud_provider(), target);
  }

  // .kentik.cloud_export.v202210.AwsProperties aws = 8[json_name = "aws"];
  if (_internal_has_aws()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::aws(this), target, stream);
  }

  // .kentik.cloud_export.v202210.AzureProperties azure = 9[json_name = "azure"];
  if (_internal_has_azure()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::azure(this), target, stream);
  }

  // .kentik.cloud_export.v202210.GceProperties gce = 10[json_name = "gce"];
  if (_internal_has_gce()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::gce(this), target, stream);
  }

  // .kentik.cloud_export.v202210.IbmProperties ibm = 11[json_name = "ibm"];
  if (_internal_has_ibm()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::ibm(this), target, stream);
  }

  // .kentik.cloud_export.v202210.CloudExportStatus current_status = 13[json_name = "currentStatus", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_current_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::current_status(this), target, stream);
  }

  // .google.protobuf.Timestamp cdate = 14[json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_cdate()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::cdate(this), target, stream);
  }

  // .google.protobuf.Timestamp edate = 15[json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_edate()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        15, _Internal::edate(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202210.CloudExport)
  return target;
}

size_t CloudExport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202210.CloudExport)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 4[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 5[json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string plan_id = 6[json_name = "planId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->plan_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_plan_id());
  }

  // .kentik.cloud_export.v202210.CloudExportStatus current_status = 13[json_name = "currentStatus", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_current_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *current_status_);
  }

  // .google.protobuf.Timestamp cdate = 14[json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_cdate()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cdate_);
  }

  // .google.protobuf.Timestamp edate = 15[json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_edate()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *edate_);
  }

  // .kentik.cloud_export.v202210.CloudExportType type = 2[json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  // bool enabled = 3[json_name = "enabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  // .kentik.cloud_export.v202210.CloudProvider cloud_provider = 7[json_name = "cloudProvider", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->cloud_provider() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_cloud_provider());
  }

  switch (cloud_specific_properties_case()) {
    // .kentik.cloud_export.v202210.AwsProperties aws = 8[json_name = "aws"];
    case kAws: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *cloud_specific_properties_.aws_);
      break;
    }
    // .kentik.cloud_export.v202210.AzureProperties azure = 9[json_name = "azure"];
    case kAzure: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *cloud_specific_properties_.azure_);
      break;
    }
    // .kentik.cloud_export.v202210.GceProperties gce = 10[json_name = "gce"];
    case kGce: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *cloud_specific_properties_.gce_);
      break;
    }
    // .kentik.cloud_export.v202210.IbmProperties ibm = 11[json_name = "ibm"];
    case kIbm: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *cloud_specific_properties_.ibm_);
      break;
    }
    case CLOUD_SPECIFIC_PROPERTIES_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloudExport::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202210.CloudExport)
  GOOGLE_DCHECK_NE(&from, this);
  const CloudExport* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CloudExport>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202210.CloudExport)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202210.CloudExport)
    MergeFrom(*source);
  }
}

void CloudExport::MergeFrom(const CloudExport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202210.CloudExport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.plan_id().size() > 0) {
    _internal_set_plan_id(from._internal_plan_id());
  }
  if (from.has_current_status()) {
    _internal_mutable_current_status()->::kentik::cloud_export::v202210::CloudExportStatus::MergeFrom(from._internal_current_status());
  }
  if (from.has_cdate()) {
    _internal_mutable_cdate()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_cdate());
  }
  if (from.has_edate()) {
    _internal_mutable_edate()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_edate());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.enabled() != 0) {
    _internal_set_enabled(from._internal_enabled());
  }
  if (from.cloud_provider() != 0) {
    _internal_set_cloud_provider(from._internal_cloud_provider());
  }
  switch (from.cloud_specific_properties_case()) {
    case kAws: {
      _internal_mutable_aws()->::kentik::cloud_export::v202210::AwsProperties::MergeFrom(from._internal_aws());
      break;
    }
    case kAzure: {
      _internal_mutable_azure()->::kentik::cloud_export::v202210::AzureProperties::MergeFrom(from._internal_azure());
      break;
    }
    case kGce: {
      _internal_mutable_gce()->::kentik::cloud_export::v202210::GceProperties::MergeFrom(from._internal_gce());
      break;
    }
    case kIbm: {
      _internal_mutable_ibm()->::kentik::cloud_export::v202210::IbmProperties::MergeFrom(from._internal_ibm());
      break;
    }
    case CLOUD_SPECIFIC_PROPERTIES_NOT_SET: {
      break;
    }
  }
}

void CloudExport::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202210.CloudExport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloudExport::CopyFrom(const CloudExport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202210.CloudExport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloudExport::IsInitialized() const {
  return true;
}

void CloudExport::InternalSwap(CloudExport* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  plan_id_.Swap(&other->plan_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CloudExport, cloud_provider_)
      + sizeof(CloudExport::cloud_provider_)
      - PROTOBUF_FIELD_OFFSET(CloudExport, current_status_)>(
          reinterpret_cast<char*>(&current_status_),
          reinterpret_cast<char*>(&other->current_status_));
  swap(cloud_specific_properties_, other->cloud_specific_properties_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata CloudExport::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AwsProperties::InitAsDefaultInstance() {
}
class AwsProperties::_Internal {
 public:
};

AwsProperties::AwsProperties(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202210.AwsProperties)
}
AwsProperties::AwsProperties(const AwsProperties& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  bucket_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bucket().empty()) {
    bucket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_bucket(),
      GetArena());
  }
  iam_role_arn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_iam_role_arn().empty()) {
    iam_role_arn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_iam_role_arn(),
      GetArena());
  }
  region_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_region().empty()) {
    region_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_region(),
      GetArena());
  }
  ::memcpy(&delete_after_read_, &from.delete_after_read_,
    static_cast<size_t>(reinterpret_cast<char*>(&metadata_only_) -
    reinterpret_cast<char*>(&delete_after_read_)) + sizeof(metadata_only_));
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202210.AwsProperties)
}

void AwsProperties::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AwsProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  bucket_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  iam_role_arn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  region_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&delete_after_read_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&metadata_only_) -
      reinterpret_cast<char*>(&delete_after_read_)) + sizeof(metadata_only_));
}

AwsProperties::~AwsProperties() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202210.AwsProperties)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AwsProperties::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  bucket_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  iam_role_arn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  region_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AwsProperties::ArenaDtor(void* object) {
  AwsProperties* _this = reinterpret_cast< AwsProperties* >(object);
  (void)_this;
}
void AwsProperties::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AwsProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AwsProperties& AwsProperties::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AwsProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void AwsProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202210.AwsProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bucket_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  iam_role_arn_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  region_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&delete_after_read_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&metadata_only_) -
      reinterpret_cast<char*>(&delete_after_read_)) + sizeof(metadata_only_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AwsProperties::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string bucket = 1[json_name = "bucket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_bucket();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202210.AwsProperties.bucket"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string iam_role_arn = 2[json_name = "iamRoleArn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_iam_role_arn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202210.AwsProperties.iam_role_arn"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string region = 3[json_name = "region", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_region();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202210.AwsProperties.region"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool delete_after_read = 4[json_name = "deleteAfterRead", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          delete_after_read_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool metadata_only = 5[json_name = "metadataOnly", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          metadata_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AwsProperties::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202210.AwsProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bucket = 1[json_name = "bucket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->bucket().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bucket().data(), static_cast<int>(this->_internal_bucket().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202210.AwsProperties.bucket");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_bucket(), target);
  }

  // string iam_role_arn = 2[json_name = "iamRoleArn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->iam_role_arn().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_iam_role_arn().data(), static_cast<int>(this->_internal_iam_role_arn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202210.AwsProperties.iam_role_arn");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_iam_role_arn(), target);
  }

  // string region = 3[json_name = "region", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->region().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_region().data(), static_cast<int>(this->_internal_region().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202210.AwsProperties.region");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_region(), target);
  }

  // bool delete_after_read = 4[json_name = "deleteAfterRead", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->delete_after_read() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_delete_after_read(), target);
  }

  // bool metadata_only = 5[json_name = "metadataOnly", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->metadata_only() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_metadata_only(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202210.AwsProperties)
  return target;
}

size_t AwsProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202210.AwsProperties)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string bucket = 1[json_name = "bucket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->bucket().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bucket());
  }

  // string iam_role_arn = 2[json_name = "iamRoleArn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->iam_role_arn().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_iam_role_arn());
  }

  // string region = 3[json_name = "region", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->region().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_region());
  }

  // bool delete_after_read = 4[json_name = "deleteAfterRead", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->delete_after_read() != 0) {
    total_size += 1 + 1;
  }

  // bool metadata_only = 5[json_name = "metadataOnly", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->metadata_only() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AwsProperties::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202210.AwsProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const AwsProperties* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AwsProperties>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202210.AwsProperties)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202210.AwsProperties)
    MergeFrom(*source);
  }
}

void AwsProperties::MergeFrom(const AwsProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202210.AwsProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bucket().size() > 0) {
    _internal_set_bucket(from._internal_bucket());
  }
  if (from.iam_role_arn().size() > 0) {
    _internal_set_iam_role_arn(from._internal_iam_role_arn());
  }
  if (from.region().size() > 0) {
    _internal_set_region(from._internal_region());
  }
  if (from.delete_after_read() != 0) {
    _internal_set_delete_after_read(from._internal_delete_after_read());
  }
  if (from.metadata_only() != 0) {
    _internal_set_metadata_only(from._internal_metadata_only());
  }
}

void AwsProperties::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202210.AwsProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AwsProperties::CopyFrom(const AwsProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202210.AwsProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AwsProperties::IsInitialized() const {
  return true;
}

void AwsProperties::InternalSwap(AwsProperties* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  bucket_.Swap(&other->bucket_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  iam_role_arn_.Swap(&other->iam_role_arn_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  region_.Swap(&other->region_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AwsProperties, metadata_only_)
      + sizeof(AwsProperties::metadata_only_)
      - PROTOBUF_FIELD_OFFSET(AwsProperties, delete_after_read_)>(
          reinterpret_cast<char*>(&delete_after_read_),
          reinterpret_cast<char*>(&other->delete_after_read_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AwsProperties::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AzureProperties::InitAsDefaultInstance() {
}
class AzureProperties::_Internal {
 public:
};

AzureProperties::AzureProperties(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202210.AzureProperties)
}
AzureProperties::AzureProperties(const AzureProperties& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_location().empty()) {
    location_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_location(),
      GetArena());
  }
  resource_group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resource_group().empty()) {
    resource_group_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_resource_group(),
      GetArena());
  }
  storage_account_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_storage_account().empty()) {
    storage_account_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_storage_account(),
      GetArena());
  }
  subscription_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subscription_id().empty()) {
    subscription_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subscription_id(),
      GetArena());
  }
  security_principal_enabled_ = from.security_principal_enabled_;
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202210.AzureProperties)
}

void AzureProperties::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AzureProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resource_group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storage_account_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subscription_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  security_principal_enabled_ = false;
}

AzureProperties::~AzureProperties() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202210.AzureProperties)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AzureProperties::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  location_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resource_group_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storage_account_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subscription_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AzureProperties::ArenaDtor(void* object) {
  AzureProperties* _this = reinterpret_cast< AzureProperties* >(object);
  (void)_this;
}
void AzureProperties::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AzureProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AzureProperties& AzureProperties::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AzureProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void AzureProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202210.AzureProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  resource_group_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  storage_account_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subscription_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  security_principal_enabled_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AzureProperties::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string location = 1[json_name = "location", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_location();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202210.AzureProperties.location"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string resource_group = 2[json_name = "resourceGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_resource_group();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202210.AzureProperties.resource_group"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string storage_account = 3[json_name = "storageAccount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_storage_account();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202210.AzureProperties.storage_account"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subscription_id = 4[json_name = "subscriptionId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_subscription_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202210.AzureProperties.subscription_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool security_principal_enabled = 5[json_name = "securityPrincipalEnabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          security_principal_enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AzureProperties::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202210.AzureProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string location = 1[json_name = "location", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->location().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202210.AzureProperties.location");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location(), target);
  }

  // string resource_group = 2[json_name = "resourceGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->resource_group().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource_group().data(), static_cast<int>(this->_internal_resource_group().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202210.AzureProperties.resource_group");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_resource_group(), target);
  }

  // string storage_account = 3[json_name = "storageAccount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->storage_account().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_storage_account().data(), static_cast<int>(this->_internal_storage_account().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202210.AzureProperties.storage_account");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_storage_account(), target);
  }

  // string subscription_id = 4[json_name = "subscriptionId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->subscription_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subscription_id().data(), static_cast<int>(this->_internal_subscription_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202210.AzureProperties.subscription_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_subscription_id(), target);
  }

  // bool security_principal_enabled = 5[json_name = "securityPrincipalEnabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->security_principal_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_security_principal_enabled(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202210.AzureProperties)
  return target;
}

size_t AzureProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202210.AzureProperties)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location = 1[json_name = "location", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->location().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  // string resource_group = 2[json_name = "resourceGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->resource_group().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource_group());
  }

  // string storage_account = 3[json_name = "storageAccount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->storage_account().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_storage_account());
  }

  // string subscription_id = 4[json_name = "subscriptionId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->subscription_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subscription_id());
  }

  // bool security_principal_enabled = 5[json_name = "securityPrincipalEnabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->security_principal_enabled() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AzureProperties::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202210.AzureProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const AzureProperties* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AzureProperties>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202210.AzureProperties)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202210.AzureProperties)
    MergeFrom(*source);
  }
}

void AzureProperties::MergeFrom(const AzureProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202210.AzureProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.location().size() > 0) {
    _internal_set_location(from._internal_location());
  }
  if (from.resource_group().size() > 0) {
    _internal_set_resource_group(from._internal_resource_group());
  }
  if (from.storage_account().size() > 0) {
    _internal_set_storage_account(from._internal_storage_account());
  }
  if (from.subscription_id().size() > 0) {
    _internal_set_subscription_id(from._internal_subscription_id());
  }
  if (from.security_principal_enabled() != 0) {
    _internal_set_security_principal_enabled(from._internal_security_principal_enabled());
  }
}

void AzureProperties::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202210.AzureProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AzureProperties::CopyFrom(const AzureProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202210.AzureProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AzureProperties::IsInitialized() const {
  return true;
}

void AzureProperties::InternalSwap(AzureProperties* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  location_.Swap(&other->location_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  resource_group_.Swap(&other->resource_group_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  storage_account_.Swap(&other->storage_account_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subscription_id_.Swap(&other->subscription_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(security_principal_enabled_, other->security_principal_enabled_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AzureProperties::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GceProperties::InitAsDefaultInstance() {
}
class GceProperties::_Internal {
 public:
};

GceProperties::GceProperties(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202210.GceProperties)
}
GceProperties::GceProperties(const GceProperties& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  project_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_project().empty()) {
    project_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_project(),
      GetArena());
  }
  subscription_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subscription().empty()) {
    subscription_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subscription(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202210.GceProperties)
}

void GceProperties::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GceProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  project_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subscription_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GceProperties::~GceProperties() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202210.GceProperties)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GceProperties::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  project_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subscription_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GceProperties::ArenaDtor(void* object) {
  GceProperties* _this = reinterpret_cast< GceProperties* >(object);
  (void)_this;
}
void GceProperties::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GceProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GceProperties& GceProperties::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GceProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void GceProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202210.GceProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subscription_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GceProperties::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string project = 1[json_name = "project", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_project();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202210.GceProperties.project"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subscription = 2[json_name = "subscription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subscription();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202210.GceProperties.subscription"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GceProperties::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202210.GceProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project = 1[json_name = "project", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->project().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_project().data(), static_cast<int>(this->_internal_project().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202210.GceProperties.project");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_project(), target);
  }

  // string subscription = 2[json_name = "subscription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->subscription().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subscription().data(), static_cast<int>(this->_internal_subscription().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202210.GceProperties.subscription");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subscription(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202210.GceProperties)
  return target;
}

size_t GceProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202210.GceProperties)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project = 1[json_name = "project", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->project().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_project());
  }

  // string subscription = 2[json_name = "subscription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->subscription().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subscription());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GceProperties::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202210.GceProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const GceProperties* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GceProperties>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202210.GceProperties)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202210.GceProperties)
    MergeFrom(*source);
  }
}

void GceProperties::MergeFrom(const GceProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202210.GceProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project().size() > 0) {
    _internal_set_project(from._internal_project());
  }
  if (from.subscription().size() > 0) {
    _internal_set_subscription(from._internal_subscription());
  }
}

void GceProperties::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202210.GceProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GceProperties::CopyFrom(const GceProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202210.GceProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GceProperties::IsInitialized() const {
  return true;
}

void GceProperties::InternalSwap(GceProperties* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  project_.Swap(&other->project_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subscription_.Swap(&other->subscription_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GceProperties::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IbmProperties::InitAsDefaultInstance() {
}
class IbmProperties::_Internal {
 public:
};

IbmProperties::IbmProperties(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202210.IbmProperties)
}
IbmProperties::IbmProperties(const IbmProperties& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  bucket_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bucket().empty()) {
    bucket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_bucket(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202210.IbmProperties)
}

void IbmProperties::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IbmProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  bucket_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

IbmProperties::~IbmProperties() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202210.IbmProperties)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IbmProperties::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  bucket_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IbmProperties::ArenaDtor(void* object) {
  IbmProperties* _this = reinterpret_cast< IbmProperties* >(object);
  (void)_this;
}
void IbmProperties::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IbmProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IbmProperties& IbmProperties::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IbmProperties_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void IbmProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202210.IbmProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bucket_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IbmProperties::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string bucket = 1[json_name = "bucket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_bucket();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202210.IbmProperties.bucket"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IbmProperties::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202210.IbmProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bucket = 1[json_name = "bucket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->bucket().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bucket().data(), static_cast<int>(this->_internal_bucket().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202210.IbmProperties.bucket");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_bucket(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202210.IbmProperties)
  return target;
}

size_t IbmProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202210.IbmProperties)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string bucket = 1[json_name = "bucket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->bucket().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bucket());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IbmProperties::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202210.IbmProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const IbmProperties* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IbmProperties>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202210.IbmProperties)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202210.IbmProperties)
    MergeFrom(*source);
  }
}

void IbmProperties::MergeFrom(const IbmProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202210.IbmProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bucket().size() > 0) {
    _internal_set_bucket(from._internal_bucket());
  }
}

void IbmProperties::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202210.IbmProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IbmProperties::CopyFrom(const IbmProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202210.IbmProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IbmProperties::IsInitialized() const {
  return true;
}

void IbmProperties::InternalSwap(IbmProperties* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  bucket_.Swap(&other->bucket_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata IbmProperties::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CloudExportStatus::InitAsDefaultInstance() {
}
class CloudExportStatus::_Internal {
 public:
};

CloudExportStatus::CloudExportStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202210.CloudExportStatus)
}
CloudExportStatus::CloudExportStatus(const CloudExportStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_status(),
      GetArena());
  }
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error_message().empty()) {
    error_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_error_message(),
      GetArena());
  }
  ::memcpy(&flow_found_, &from.flow_found_,
    static_cast<size_t>(reinterpret_cast<char*>(&storage_account_access_) -
    reinterpret_cast<char*>(&flow_found_)) + sizeof(storage_account_access_));
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202210.CloudExportStatus)
}

void CloudExportStatus::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CloudExportStatus_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&flow_found_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&storage_account_access_) -
      reinterpret_cast<char*>(&flow_found_)) + sizeof(storage_account_access_));
}

CloudExportStatus::~CloudExportStatus() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202210.CloudExportStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CloudExportStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CloudExportStatus::ArenaDtor(void* object) {
  CloudExportStatus* _this = reinterpret_cast< CloudExportStatus* >(object);
  (void)_this;
}
void CloudExportStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CloudExportStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CloudExportStatus& CloudExportStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CloudExportStatus_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void CloudExportStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202210.CloudExportStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&flow_found_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&storage_account_access_) -
      reinterpret_cast<char*>(&flow_found_)) + sizeof(storage_account_access_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CloudExportStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string status = 1[json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202210.CloudExportStatus.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string error_message = 2[json_name = "errorMessage", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202210.CloudExportStatus.error_message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool flow_found = 3[json_name = "flowFound", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          flow_found_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool api_access = 4[json_name = "apiAccess", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          api_access_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool storage_account_access = 5[json_name = "storageAccountAccess", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          storage_account_access_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CloudExportStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202210.CloudExportStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1[json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->status().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202210.CloudExportStatus.status");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_status(), target);
  }

  // string error_message = 2[json_name = "errorMessage", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->error_message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202210.CloudExportStatus.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  // bool flow_found = 3[json_name = "flowFound", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->flow_found() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_flow_found(), target);
  }

  // bool api_access = 4[json_name = "apiAccess", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->api_access() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_api_access(), target);
  }

  // bool storage_account_access = 5[json_name = "storageAccountAccess", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->storage_account_access() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_storage_account_access(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202210.CloudExportStatus)
  return target;
}

size_t CloudExportStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202210.CloudExportStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 1[json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->status().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // string error_message = 2[json_name = "errorMessage", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // bool flow_found = 3[json_name = "flowFound", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->flow_found() != 0) {
    total_size += 1 + 1;
  }

  // bool api_access = 4[json_name = "apiAccess", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->api_access() != 0) {
    total_size += 1 + 1;
  }

  // bool storage_account_access = 5[json_name = "storageAccountAccess", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->storage_account_access() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloudExportStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202210.CloudExportStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CloudExportStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CloudExportStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202210.CloudExportStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202210.CloudExportStatus)
    MergeFrom(*source);
  }
}

void CloudExportStatus::MergeFrom(const CloudExportStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202210.CloudExportStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status().size() > 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.error_message().size() > 0) {
    _internal_set_error_message(from._internal_error_message());
  }
  if (from.flow_found() != 0) {
    _internal_set_flow_found(from._internal_flow_found());
  }
  if (from.api_access() != 0) {
    _internal_set_api_access(from._internal_api_access());
  }
  if (from.storage_account_access() != 0) {
    _internal_set_storage_account_access(from._internal_storage_account_access());
  }
}

void CloudExportStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202210.CloudExportStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloudExportStatus::CopyFrom(const CloudExportStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202210.CloudExportStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloudExportStatus::IsInitialized() const {
  return true;
}

void CloudExportStatus::InternalSwap(CloudExportStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  status_.Swap(&other->status_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_message_.Swap(&other->error_message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CloudExportStatus, storage_account_access_)
      + sizeof(CloudExportStatus::storage_account_access_)
      - PROTOBUF_FIELD_OFFSET(CloudExportStatus, flow_found_)>(
          reinterpret_cast<char*>(&flow_found_),
          reinterpret_cast<char*>(&other->flow_found_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CloudExportStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateCloudExportRequest::InitAsDefaultInstance() {
  ::kentik::cloud_export::v202210::_CreateCloudExportRequest_default_instance_._instance.get_mutable()->export__ = const_cast< ::kentik::cloud_export::v202210::CloudExport*>(
      ::kentik::cloud_export::v202210::CloudExport::internal_default_instance());
}
class CreateCloudExportRequest::_Internal {
 public:
  static const ::kentik::cloud_export::v202210::CloudExport& export_(const CreateCloudExportRequest* msg);
};

const ::kentik::cloud_export::v202210::CloudExport&
CreateCloudExportRequest::_Internal::export_(const CreateCloudExportRequest* msg) {
  return *msg->export__;
}
CreateCloudExportRequest::CreateCloudExportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202210.CreateCloudExportRequest)
}
CreateCloudExportRequest::CreateCloudExportRequest(const CreateCloudExportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_export_()) {
    export__ = new ::kentik::cloud_export::v202210::CloudExport(*from.export__);
  } else {
    export__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202210.CreateCloudExportRequest)
}

void CreateCloudExportRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  export__ = nullptr;
}

CreateCloudExportRequest::~CreateCloudExportRequest() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202210.CreateCloudExportRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateCloudExportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete export__;
}

void CreateCloudExportRequest::ArenaDtor(void* object) {
  CreateCloudExportRequest* _this = reinterpret_cast< CreateCloudExportRequest* >(object);
  (void)_this;
}
void CreateCloudExportRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateCloudExportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateCloudExportRequest& CreateCloudExportRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void CreateCloudExportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202210.CreateCloudExportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && export__ != nullptr) {
    delete export__;
  }
  export__ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateCloudExportRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_export_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateCloudExportRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202210.CreateCloudExportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_export_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::export_(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202210.CreateCloudExportRequest)
  return target;
}

size_t CreateCloudExportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202210.CreateCloudExportRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_export_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *export__);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateCloudExportRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202210.CreateCloudExportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateCloudExportRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateCloudExportRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202210.CreateCloudExportRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202210.CreateCloudExportRequest)
    MergeFrom(*source);
  }
}

void CreateCloudExportRequest::MergeFrom(const CreateCloudExportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202210.CreateCloudExportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_export_()) {
    _internal_mutable_export_()->::kentik::cloud_export::v202210::CloudExport::MergeFrom(from._internal_export_());
  }
}

void CreateCloudExportRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202210.CreateCloudExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateCloudExportRequest::CopyFrom(const CreateCloudExportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202210.CreateCloudExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCloudExportRequest::IsInitialized() const {
  return true;
}

void CreateCloudExportRequest::InternalSwap(CreateCloudExportRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(export__, other->export__);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateCloudExportRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateCloudExportResponse::InitAsDefaultInstance() {
  ::kentik::cloud_export::v202210::_CreateCloudExportResponse_default_instance_._instance.get_mutable()->export__ = const_cast< ::kentik::cloud_export::v202210::CloudExport*>(
      ::kentik::cloud_export::v202210::CloudExport::internal_default_instance());
}
class CreateCloudExportResponse::_Internal {
 public:
  static const ::kentik::cloud_export::v202210::CloudExport& export_(const CreateCloudExportResponse* msg);
};

const ::kentik::cloud_export::v202210::CloudExport&
CreateCloudExportResponse::_Internal::export_(const CreateCloudExportResponse* msg) {
  return *msg->export__;
}
CreateCloudExportResponse::CreateCloudExportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202210.CreateCloudExportResponse)
}
CreateCloudExportResponse::CreateCloudExportResponse(const CreateCloudExportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_export_()) {
    export__ = new ::kentik::cloud_export::v202210::CloudExport(*from.export__);
  } else {
    export__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202210.CreateCloudExportResponse)
}

void CreateCloudExportResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  export__ = nullptr;
}

CreateCloudExportResponse::~CreateCloudExportResponse() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202210.CreateCloudExportResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateCloudExportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete export__;
}

void CreateCloudExportResponse::ArenaDtor(void* object) {
  CreateCloudExportResponse* _this = reinterpret_cast< CreateCloudExportResponse* >(object);
  (void)_this;
}
void CreateCloudExportResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateCloudExportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateCloudExportResponse& CreateCloudExportResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void CreateCloudExportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202210.CreateCloudExportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && export__ != nullptr) {
    delete export__;
  }
  export__ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateCloudExportResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_export_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateCloudExportResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202210.CreateCloudExportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_export_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::export_(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202210.CreateCloudExportResponse)
  return target;
}

size_t CreateCloudExportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202210.CreateCloudExportResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_export_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *export__);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateCloudExportResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202210.CreateCloudExportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateCloudExportResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateCloudExportResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202210.CreateCloudExportResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202210.CreateCloudExportResponse)
    MergeFrom(*source);
  }
}

void CreateCloudExportResponse::MergeFrom(const CreateCloudExportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202210.CreateCloudExportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_export_()) {
    _internal_mutable_export_()->::kentik::cloud_export::v202210::CloudExport::MergeFrom(from._internal_export_());
  }
}

void CreateCloudExportResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202210.CreateCloudExportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateCloudExportResponse::CopyFrom(const CreateCloudExportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202210.CreateCloudExportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCloudExportResponse::IsInitialized() const {
  return true;
}

void CreateCloudExportResponse::InternalSwap(CreateCloudExportResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(export__, other->export__);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateCloudExportResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListCloudExportsRequest::InitAsDefaultInstance() {
}
class ListCloudExportsRequest::_Internal {
 public:
};

ListCloudExportsRequest::ListCloudExportsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202210.ListCloudExportsRequest)
}
ListCloudExportsRequest::ListCloudExportsRequest(const ListCloudExportsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202210.ListCloudExportsRequest)
}

void ListCloudExportsRequest::SharedCtor() {
}

ListCloudExportsRequest::~ListCloudExportsRequest() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202210.ListCloudExportsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListCloudExportsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListCloudExportsRequest::ArenaDtor(void* object) {
  ListCloudExportsRequest* _this = reinterpret_cast< ListCloudExportsRequest* >(object);
  (void)_this;
}
void ListCloudExportsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListCloudExportsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListCloudExportsRequest& ListCloudExportsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListCloudExportsRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void ListCloudExportsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202210.ListCloudExportsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListCloudExportsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListCloudExportsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202210.ListCloudExportsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202210.ListCloudExportsRequest)
  return target;
}

size_t ListCloudExportsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202210.ListCloudExportsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListCloudExportsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202210.ListCloudExportsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCloudExportsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListCloudExportsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202210.ListCloudExportsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202210.ListCloudExportsRequest)
    MergeFrom(*source);
  }
}

void ListCloudExportsRequest::MergeFrom(const ListCloudExportsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202210.ListCloudExportsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ListCloudExportsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202210.ListCloudExportsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCloudExportsRequest::CopyFrom(const ListCloudExportsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202210.ListCloudExportsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCloudExportsRequest::IsInitialized() const {
  return true;
}

void ListCloudExportsRequest::InternalSwap(ListCloudExportsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListCloudExportsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListCloudExportsResponse::InitAsDefaultInstance() {
}
class ListCloudExportsResponse::_Internal {
 public:
};

ListCloudExportsResponse::ListCloudExportsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  exports_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202210.ListCloudExportsResponse)
}
ListCloudExportsResponse::ListCloudExportsResponse(const ListCloudExportsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      exports_(from.exports_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  invalid_exports_count_ = from.invalid_exports_count_;
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202210.ListCloudExportsResponse)
}

void ListCloudExportsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListCloudExportsResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  invalid_exports_count_ = 0u;
}

ListCloudExportsResponse::~ListCloudExportsResponse() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202210.ListCloudExportsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListCloudExportsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListCloudExportsResponse::ArenaDtor(void* object) {
  ListCloudExportsResponse* _this = reinterpret_cast< ListCloudExportsResponse* >(object);
  (void)_this;
}
void ListCloudExportsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListCloudExportsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListCloudExportsResponse& ListCloudExportsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListCloudExportsResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void ListCloudExportsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202210.ListCloudExportsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exports_.Clear();
  invalid_exports_count_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListCloudExportsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .kentik.cloud_export.v202210.CloudExport exports = 1[json_name = "exports", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_exports(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // uint32 invalid_exports_count = 2[json_name = "invalidExportsCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          invalid_exports_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListCloudExportsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202210.ListCloudExportsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .kentik.cloud_export.v202210.CloudExport exports = 1[json_name = "exports", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_exports_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_exports(i), target, stream);
  }

  // uint32 invalid_exports_count = 2[json_name = "invalidExportsCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->invalid_exports_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_invalid_exports_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202210.ListCloudExportsResponse)
  return target;
}

size_t ListCloudExportsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202210.ListCloudExportsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .kentik.cloud_export.v202210.CloudExport exports = 1[json_name = "exports", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  total_size += 1UL * this->_internal_exports_size();
  for (const auto& msg : this->exports_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint32 invalid_exports_count = 2[json_name = "invalidExportsCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->invalid_exports_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_invalid_exports_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListCloudExportsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202210.ListCloudExportsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCloudExportsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListCloudExportsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202210.ListCloudExportsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202210.ListCloudExportsResponse)
    MergeFrom(*source);
  }
}

void ListCloudExportsResponse::MergeFrom(const ListCloudExportsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202210.ListCloudExportsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  exports_.MergeFrom(from.exports_);
  if (from.invalid_exports_count() != 0) {
    _internal_set_invalid_exports_count(from._internal_invalid_exports_count());
  }
}

void ListCloudExportsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202210.ListCloudExportsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCloudExportsResponse::CopyFrom(const ListCloudExportsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202210.ListCloudExportsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCloudExportsResponse::IsInitialized() const {
  return true;
}

void ListCloudExportsResponse::InternalSwap(ListCloudExportsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  exports_.InternalSwap(&other->exports_);
  swap(invalid_exports_count_, other->invalid_exports_count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListCloudExportsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetCloudExportRequest::InitAsDefaultInstance() {
}
class GetCloudExportRequest::_Internal {
 public:
};

GetCloudExportRequest::GetCloudExportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202210.GetCloudExportRequest)
}
GetCloudExportRequest::GetCloudExportRequest(const GetCloudExportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202210.GetCloudExportRequest)
}

void GetCloudExportRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetCloudExportRequest::~GetCloudExportRequest() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202210.GetCloudExportRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetCloudExportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetCloudExportRequest::ArenaDtor(void* object) {
  GetCloudExportRequest* _this = reinterpret_cast< GetCloudExportRequest* >(object);
  (void)_this;
}
void GetCloudExportRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCloudExportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetCloudExportRequest& GetCloudExportRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void GetCloudExportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202210.GetCloudExportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCloudExportRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202210.GetCloudExportRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCloudExportRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202210.GetCloudExportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202210.GetCloudExportRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202210.GetCloudExportRequest)
  return target;
}

size_t GetCloudExportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202210.GetCloudExportRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCloudExportRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202210.GetCloudExportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCloudExportRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCloudExportRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202210.GetCloudExportRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202210.GetCloudExportRequest)
    MergeFrom(*source);
  }
}

void GetCloudExportRequest::MergeFrom(const GetCloudExportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202210.GetCloudExportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetCloudExportRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202210.GetCloudExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCloudExportRequest::CopyFrom(const GetCloudExportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202210.GetCloudExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCloudExportRequest::IsInitialized() const {
  return true;
}

void GetCloudExportRequest::InternalSwap(GetCloudExportRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCloudExportRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetCloudExportResponse::InitAsDefaultInstance() {
  ::kentik::cloud_export::v202210::_GetCloudExportResponse_default_instance_._instance.get_mutable()->export__ = const_cast< ::kentik::cloud_export::v202210::CloudExport*>(
      ::kentik::cloud_export::v202210::CloudExport::internal_default_instance());
}
class GetCloudExportResponse::_Internal {
 public:
  static const ::kentik::cloud_export::v202210::CloudExport& export_(const GetCloudExportResponse* msg);
};

const ::kentik::cloud_export::v202210::CloudExport&
GetCloudExportResponse::_Internal::export_(const GetCloudExportResponse* msg) {
  return *msg->export__;
}
GetCloudExportResponse::GetCloudExportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202210.GetCloudExportResponse)
}
GetCloudExportResponse::GetCloudExportResponse(const GetCloudExportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_export_()) {
    export__ = new ::kentik::cloud_export::v202210::CloudExport(*from.export__);
  } else {
    export__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202210.GetCloudExportResponse)
}

void GetCloudExportResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  export__ = nullptr;
}

GetCloudExportResponse::~GetCloudExportResponse() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202210.GetCloudExportResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetCloudExportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete export__;
}

void GetCloudExportResponse::ArenaDtor(void* object) {
  GetCloudExportResponse* _this = reinterpret_cast< GetCloudExportResponse* >(object);
  (void)_this;
}
void GetCloudExportResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCloudExportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetCloudExportResponse& GetCloudExportResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void GetCloudExportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202210.GetCloudExportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && export__ != nullptr) {
    delete export__;
  }
  export__ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCloudExportResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_export_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCloudExportResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202210.GetCloudExportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_export_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::export_(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202210.GetCloudExportResponse)
  return target;
}

size_t GetCloudExportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202210.GetCloudExportResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_export_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *export__);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCloudExportResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202210.GetCloudExportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCloudExportResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCloudExportResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202210.GetCloudExportResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202210.GetCloudExportResponse)
    MergeFrom(*source);
  }
}

void GetCloudExportResponse::MergeFrom(const GetCloudExportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202210.GetCloudExportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_export_()) {
    _internal_mutable_export_()->::kentik::cloud_export::v202210::CloudExport::MergeFrom(from._internal_export_());
  }
}

void GetCloudExportResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202210.GetCloudExportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCloudExportResponse::CopyFrom(const GetCloudExportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202210.GetCloudExportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCloudExportResponse::IsInitialized() const {
  return true;
}

void GetCloudExportResponse::InternalSwap(GetCloudExportResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(export__, other->export__);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCloudExportResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateCloudExportRequest::InitAsDefaultInstance() {
  ::kentik::cloud_export::v202210::_UpdateCloudExportRequest_default_instance_._instance.get_mutable()->export__ = const_cast< ::kentik::cloud_export::v202210::CloudExport*>(
      ::kentik::cloud_export::v202210::CloudExport::internal_default_instance());
}
class UpdateCloudExportRequest::_Internal {
 public:
  static const ::kentik::cloud_export::v202210::CloudExport& export_(const UpdateCloudExportRequest* msg);
};

const ::kentik::cloud_export::v202210::CloudExport&
UpdateCloudExportRequest::_Internal::export_(const UpdateCloudExportRequest* msg) {
  return *msg->export__;
}
UpdateCloudExportRequest::UpdateCloudExportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202210.UpdateCloudExportRequest)
}
UpdateCloudExportRequest::UpdateCloudExportRequest(const UpdateCloudExportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_export_()) {
    export__ = new ::kentik::cloud_export::v202210::CloudExport(*from.export__);
  } else {
    export__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202210.UpdateCloudExportRequest)
}

void UpdateCloudExportRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  export__ = nullptr;
}

UpdateCloudExportRequest::~UpdateCloudExportRequest() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202210.UpdateCloudExportRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateCloudExportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete export__;
}

void UpdateCloudExportRequest::ArenaDtor(void* object) {
  UpdateCloudExportRequest* _this = reinterpret_cast< UpdateCloudExportRequest* >(object);
  (void)_this;
}
void UpdateCloudExportRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateCloudExportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateCloudExportRequest& UpdateCloudExportRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void UpdateCloudExportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202210.UpdateCloudExportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && export__ != nullptr) {
    delete export__;
  }
  export__ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateCloudExportRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_export_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateCloudExportRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202210.UpdateCloudExportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_export_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::export_(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202210.UpdateCloudExportRequest)
  return target;
}

size_t UpdateCloudExportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202210.UpdateCloudExportRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_export_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *export__);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateCloudExportRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202210.UpdateCloudExportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateCloudExportRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateCloudExportRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202210.UpdateCloudExportRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202210.UpdateCloudExportRequest)
    MergeFrom(*source);
  }
}

void UpdateCloudExportRequest::MergeFrom(const UpdateCloudExportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202210.UpdateCloudExportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_export_()) {
    _internal_mutable_export_()->::kentik::cloud_export::v202210::CloudExport::MergeFrom(from._internal_export_());
  }
}

void UpdateCloudExportRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202210.UpdateCloudExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCloudExportRequest::CopyFrom(const UpdateCloudExportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202210.UpdateCloudExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCloudExportRequest::IsInitialized() const {
  return true;
}

void UpdateCloudExportRequest::InternalSwap(UpdateCloudExportRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(export__, other->export__);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateCloudExportRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateCloudExportResponse::InitAsDefaultInstance() {
  ::kentik::cloud_export::v202210::_UpdateCloudExportResponse_default_instance_._instance.get_mutable()->export__ = const_cast< ::kentik::cloud_export::v202210::CloudExport*>(
      ::kentik::cloud_export::v202210::CloudExport::internal_default_instance());
}
class UpdateCloudExportResponse::_Internal {
 public:
  static const ::kentik::cloud_export::v202210::CloudExport& export_(const UpdateCloudExportResponse* msg);
};

const ::kentik::cloud_export::v202210::CloudExport&
UpdateCloudExportResponse::_Internal::export_(const UpdateCloudExportResponse* msg) {
  return *msg->export__;
}
UpdateCloudExportResponse::UpdateCloudExportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202210.UpdateCloudExportResponse)
}
UpdateCloudExportResponse::UpdateCloudExportResponse(const UpdateCloudExportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_export_()) {
    export__ = new ::kentik::cloud_export::v202210::CloudExport(*from.export__);
  } else {
    export__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202210.UpdateCloudExportResponse)
}

void UpdateCloudExportResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  export__ = nullptr;
}

UpdateCloudExportResponse::~UpdateCloudExportResponse() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202210.UpdateCloudExportResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateCloudExportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete export__;
}

void UpdateCloudExportResponse::ArenaDtor(void* object) {
  UpdateCloudExportResponse* _this = reinterpret_cast< UpdateCloudExportResponse* >(object);
  (void)_this;
}
void UpdateCloudExportResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateCloudExportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateCloudExportResponse& UpdateCloudExportResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void UpdateCloudExportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202210.UpdateCloudExportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && export__ != nullptr) {
    delete export__;
  }
  export__ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateCloudExportResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_export_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateCloudExportResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202210.UpdateCloudExportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_export_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::export_(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202210.UpdateCloudExportResponse)
  return target;
}

size_t UpdateCloudExportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202210.UpdateCloudExportResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->has_export_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *export__);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateCloudExportResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202210.UpdateCloudExportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateCloudExportResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateCloudExportResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202210.UpdateCloudExportResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202210.UpdateCloudExportResponse)
    MergeFrom(*source);
  }
}

void UpdateCloudExportResponse::MergeFrom(const UpdateCloudExportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202210.UpdateCloudExportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_export_()) {
    _internal_mutable_export_()->::kentik::cloud_export::v202210::CloudExport::MergeFrom(from._internal_export_());
  }
}

void UpdateCloudExportResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202210.UpdateCloudExportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCloudExportResponse::CopyFrom(const UpdateCloudExportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202210.UpdateCloudExportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCloudExportResponse::IsInitialized() const {
  return true;
}

void UpdateCloudExportResponse::InternalSwap(UpdateCloudExportResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(export__, other->export__);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateCloudExportResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteCloudExportRequest::InitAsDefaultInstance() {
}
class DeleteCloudExportRequest::_Internal {
 public:
};

DeleteCloudExportRequest::DeleteCloudExportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202210.DeleteCloudExportRequest)
}
DeleteCloudExportRequest::DeleteCloudExportRequest(const DeleteCloudExportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202210.DeleteCloudExportRequest)
}

void DeleteCloudExportRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteCloudExportRequest::~DeleteCloudExportRequest() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202210.DeleteCloudExportRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteCloudExportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteCloudExportRequest::ArenaDtor(void* object) {
  DeleteCloudExportRequest* _this = reinterpret_cast< DeleteCloudExportRequest* >(object);
  (void)_this;
}
void DeleteCloudExportRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteCloudExportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteCloudExportRequest& DeleteCloudExportRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteCloudExportRequest_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void DeleteCloudExportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202210.DeleteCloudExportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteCloudExportRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202210.DeleteCloudExportRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteCloudExportRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202210.DeleteCloudExportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202210.DeleteCloudExportRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202210.DeleteCloudExportRequest)
  return target;
}

size_t DeleteCloudExportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202210.DeleteCloudExportRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteCloudExportRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202210.DeleteCloudExportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteCloudExportRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteCloudExportRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202210.DeleteCloudExportRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202210.DeleteCloudExportRequest)
    MergeFrom(*source);
  }
}

void DeleteCloudExportRequest::MergeFrom(const DeleteCloudExportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202210.DeleteCloudExportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteCloudExportRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202210.DeleteCloudExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteCloudExportRequest::CopyFrom(const DeleteCloudExportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202210.DeleteCloudExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteCloudExportRequest::IsInitialized() const {
  return true;
}

void DeleteCloudExportRequest::InternalSwap(DeleteCloudExportRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteCloudExportRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteCloudExportResponse::InitAsDefaultInstance() {
}
class DeleteCloudExportResponse::_Internal {
 public:
};

DeleteCloudExportResponse::DeleteCloudExportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202210.DeleteCloudExportResponse)
}
DeleteCloudExportResponse::DeleteCloudExportResponse(const DeleteCloudExportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202210.DeleteCloudExportResponse)
}

void DeleteCloudExportResponse::SharedCtor() {
}

DeleteCloudExportResponse::~DeleteCloudExportResponse() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202210.DeleteCloudExportResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteCloudExportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteCloudExportResponse::ArenaDtor(void* object) {
  DeleteCloudExportResponse* _this = reinterpret_cast< DeleteCloudExportResponse* >(object);
  (void)_this;
}
void DeleteCloudExportResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteCloudExportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteCloudExportResponse& DeleteCloudExportResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteCloudExportResponse_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void DeleteCloudExportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202210.DeleteCloudExportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteCloudExportResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteCloudExportResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202210.DeleteCloudExportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202210.DeleteCloudExportResponse)
  return target;
}

size_t DeleteCloudExportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202210.DeleteCloudExportResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteCloudExportResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202210.DeleteCloudExportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteCloudExportResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteCloudExportResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202210.DeleteCloudExportResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202210.DeleteCloudExportResponse)
    MergeFrom(*source);
  }
}

void DeleteCloudExportResponse::MergeFrom(const DeleteCloudExportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202210.DeleteCloudExportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteCloudExportResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202210.DeleteCloudExportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteCloudExportResponse::CopyFrom(const DeleteCloudExportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202210.DeleteCloudExportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteCloudExportResponse::IsInitialized() const {
  return true;
}

void DeleteCloudExportResponse::InternalSwap(DeleteCloudExportResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteCloudExportResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v202210
}  // namespace cloud_export
}  // namespace kentik
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202210::CloudExport* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202210::CloudExport >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202210::CloudExport >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202210::AwsProperties* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202210::AwsProperties >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202210::AwsProperties >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202210::AzureProperties* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202210::AzureProperties >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202210::AzureProperties >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202210::GceProperties* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202210::GceProperties >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202210::GceProperties >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202210::IbmProperties* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202210::IbmProperties >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202210::IbmProperties >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202210::CloudExportStatus* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202210::CloudExportStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202210::CloudExportStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202210::CreateCloudExportRequest* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202210::CreateCloudExportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202210::CreateCloudExportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202210::CreateCloudExportResponse* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202210::CreateCloudExportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202210::CreateCloudExportResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202210::ListCloudExportsRequest* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202210::ListCloudExportsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202210::ListCloudExportsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202210::ListCloudExportsResponse* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202210::ListCloudExportsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202210::ListCloudExportsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202210::GetCloudExportRequest* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202210::GetCloudExportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202210::GetCloudExportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202210::GetCloudExportResponse* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202210::GetCloudExportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202210::GetCloudExportResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202210::UpdateCloudExportRequest* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202210::UpdateCloudExportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202210::UpdateCloudExportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202210::UpdateCloudExportResponse* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202210::UpdateCloudExportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202210::UpdateCloudExportResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202210::DeleteCloudExportRequest* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202210::DeleteCloudExportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202210::DeleteCloudExportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202210::DeleteCloudExportResponse* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202210::DeleteCloudExportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202210::DeleteCloudExportResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
