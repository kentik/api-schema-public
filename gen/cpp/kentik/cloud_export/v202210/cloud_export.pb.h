// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kentik/cloud_export/v202210/cloud_export.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "google/api/field_behavior.pb.h"
#include <google/protobuf/timestamp.pb.h>
#include "kentik/core/v202012alpha1/annotations.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[16]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
namespace kentik {
namespace cloud_export {
namespace v202210 {
class AwsProperties;
class AwsPropertiesDefaultTypeInternal;
extern AwsPropertiesDefaultTypeInternal _AwsProperties_default_instance_;
class AzureProperties;
class AzurePropertiesDefaultTypeInternal;
extern AzurePropertiesDefaultTypeInternal _AzureProperties_default_instance_;
class CloudExport;
class CloudExportDefaultTypeInternal;
extern CloudExportDefaultTypeInternal _CloudExport_default_instance_;
class CloudExportStatus;
class CloudExportStatusDefaultTypeInternal;
extern CloudExportStatusDefaultTypeInternal _CloudExportStatus_default_instance_;
class CreateCloudExportRequest;
class CreateCloudExportRequestDefaultTypeInternal;
extern CreateCloudExportRequestDefaultTypeInternal _CreateCloudExportRequest_default_instance_;
class CreateCloudExportResponse;
class CreateCloudExportResponseDefaultTypeInternal;
extern CreateCloudExportResponseDefaultTypeInternal _CreateCloudExportResponse_default_instance_;
class DeleteCloudExportRequest;
class DeleteCloudExportRequestDefaultTypeInternal;
extern DeleteCloudExportRequestDefaultTypeInternal _DeleteCloudExportRequest_default_instance_;
class DeleteCloudExportResponse;
class DeleteCloudExportResponseDefaultTypeInternal;
extern DeleteCloudExportResponseDefaultTypeInternal _DeleteCloudExportResponse_default_instance_;
class GceProperties;
class GcePropertiesDefaultTypeInternal;
extern GcePropertiesDefaultTypeInternal _GceProperties_default_instance_;
class GetCloudExportRequest;
class GetCloudExportRequestDefaultTypeInternal;
extern GetCloudExportRequestDefaultTypeInternal _GetCloudExportRequest_default_instance_;
class GetCloudExportResponse;
class GetCloudExportResponseDefaultTypeInternal;
extern GetCloudExportResponseDefaultTypeInternal _GetCloudExportResponse_default_instance_;
class IbmProperties;
class IbmPropertiesDefaultTypeInternal;
extern IbmPropertiesDefaultTypeInternal _IbmProperties_default_instance_;
class ListCloudExportsRequest;
class ListCloudExportsRequestDefaultTypeInternal;
extern ListCloudExportsRequestDefaultTypeInternal _ListCloudExportsRequest_default_instance_;
class ListCloudExportsResponse;
class ListCloudExportsResponseDefaultTypeInternal;
extern ListCloudExportsResponseDefaultTypeInternal _ListCloudExportsResponse_default_instance_;
class UpdateCloudExportRequest;
class UpdateCloudExportRequestDefaultTypeInternal;
extern UpdateCloudExportRequestDefaultTypeInternal _UpdateCloudExportRequest_default_instance_;
class UpdateCloudExportResponse;
class UpdateCloudExportResponseDefaultTypeInternal;
extern UpdateCloudExportResponseDefaultTypeInternal _UpdateCloudExportResponse_default_instance_;
}  // namespace v202210
}  // namespace cloud_export
}  // namespace kentik
PROTOBUF_NAMESPACE_OPEN
template<> ::kentik::cloud_export::v202210::AwsProperties* Arena::CreateMaybeMessage<::kentik::cloud_export::v202210::AwsProperties>(Arena*);
template<> ::kentik::cloud_export::v202210::AzureProperties* Arena::CreateMaybeMessage<::kentik::cloud_export::v202210::AzureProperties>(Arena*);
template<> ::kentik::cloud_export::v202210::CloudExport* Arena::CreateMaybeMessage<::kentik::cloud_export::v202210::CloudExport>(Arena*);
template<> ::kentik::cloud_export::v202210::CloudExportStatus* Arena::CreateMaybeMessage<::kentik::cloud_export::v202210::CloudExportStatus>(Arena*);
template<> ::kentik::cloud_export::v202210::CreateCloudExportRequest* Arena::CreateMaybeMessage<::kentik::cloud_export::v202210::CreateCloudExportRequest>(Arena*);
template<> ::kentik::cloud_export::v202210::CreateCloudExportResponse* Arena::CreateMaybeMessage<::kentik::cloud_export::v202210::CreateCloudExportResponse>(Arena*);
template<> ::kentik::cloud_export::v202210::DeleteCloudExportRequest* Arena::CreateMaybeMessage<::kentik::cloud_export::v202210::DeleteCloudExportRequest>(Arena*);
template<> ::kentik::cloud_export::v202210::DeleteCloudExportResponse* Arena::CreateMaybeMessage<::kentik::cloud_export::v202210::DeleteCloudExportResponse>(Arena*);
template<> ::kentik::cloud_export::v202210::GceProperties* Arena::CreateMaybeMessage<::kentik::cloud_export::v202210::GceProperties>(Arena*);
template<> ::kentik::cloud_export::v202210::GetCloudExportRequest* Arena::CreateMaybeMessage<::kentik::cloud_export::v202210::GetCloudExportRequest>(Arena*);
template<> ::kentik::cloud_export::v202210::GetCloudExportResponse* Arena::CreateMaybeMessage<::kentik::cloud_export::v202210::GetCloudExportResponse>(Arena*);
template<> ::kentik::cloud_export::v202210::IbmProperties* Arena::CreateMaybeMessage<::kentik::cloud_export::v202210::IbmProperties>(Arena*);
template<> ::kentik::cloud_export::v202210::ListCloudExportsRequest* Arena::CreateMaybeMessage<::kentik::cloud_export::v202210::ListCloudExportsRequest>(Arena*);
template<> ::kentik::cloud_export::v202210::ListCloudExportsResponse* Arena::CreateMaybeMessage<::kentik::cloud_export::v202210::ListCloudExportsResponse>(Arena*);
template<> ::kentik::cloud_export::v202210::UpdateCloudExportRequest* Arena::CreateMaybeMessage<::kentik::cloud_export::v202210::UpdateCloudExportRequest>(Arena*);
template<> ::kentik::cloud_export::v202210::UpdateCloudExportResponse* Arena::CreateMaybeMessage<::kentik::cloud_export::v202210::UpdateCloudExportResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace kentik {
namespace cloud_export {
namespace v202210 {

enum CloudExportType : int {
  CLOUD_EXPORT_TYPE_UNSPECIFIED = 0,
  CLOUD_EXPORT_TYPE_KENTIK_MANAGED = 1,
  CLOUD_EXPORT_TYPE_CUSTOMER_MANAGED = 2,
  CloudExportType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  CloudExportType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool CloudExportType_IsValid(int value);
constexpr CloudExportType CloudExportType_MIN = CLOUD_EXPORT_TYPE_UNSPECIFIED;
constexpr CloudExportType CloudExportType_MAX = CLOUD_EXPORT_TYPE_CUSTOMER_MANAGED;
constexpr int CloudExportType_ARRAYSIZE = CloudExportType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CloudExportType_descriptor();
template<typename T>
inline const std::string& CloudExportType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CloudExportType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CloudExportType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CloudExportType_descriptor(), enum_t_value);
}
inline bool CloudExportType_Parse(
    const std::string& name, CloudExportType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CloudExportType>(
    CloudExportType_descriptor(), name, value);
}
enum CloudProvider : int {
  CLOUD_PROVIDER_UNSPECIFIED = 0,
  CLOUD_PROVIDER_AWS = 1,
  CLOUD_PROVIDER_AZURE = 2,
  CLOUD_PROVIDER_GCE = 3,
  CLOUD_PROVIDER_IBM = 4,
  CloudProvider_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  CloudProvider_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool CloudProvider_IsValid(int value);
constexpr CloudProvider CloudProvider_MIN = CLOUD_PROVIDER_UNSPECIFIED;
constexpr CloudProvider CloudProvider_MAX = CLOUD_PROVIDER_IBM;
constexpr int CloudProvider_ARRAYSIZE = CloudProvider_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CloudProvider_descriptor();
template<typename T>
inline const std::string& CloudProvider_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CloudProvider>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CloudProvider_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CloudProvider_descriptor(), enum_t_value);
}
inline bool CloudProvider_Parse(
    const std::string& name, CloudProvider* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CloudProvider>(
    CloudProvider_descriptor(), name, value);
}
// ===================================================================

class CloudExport PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202210.CloudExport) */ {
 public:
  inline CloudExport() : CloudExport(nullptr) {};
  virtual ~CloudExport();

  CloudExport(const CloudExport& from);
  CloudExport(CloudExport&& from) noexcept
    : CloudExport() {
    *this = ::std::move(from);
  }

  inline CloudExport& operator=(const CloudExport& from) {
    CopyFrom(from);
    return *this;
  }
  inline CloudExport& operator=(CloudExport&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CloudExport& default_instance();

  enum CloudSpecificPropertiesCase {
    kAws = 8,
    kAzure = 9,
    kGce = 10,
    kIbm = 11,
    CLOUD_SPECIFIC_PROPERTIES_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CloudExport* internal_default_instance() {
    return reinterpret_cast<const CloudExport*>(
               &_CloudExport_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CloudExport& a, CloudExport& b) {
    a.Swap(&b);
  }
  inline void Swap(CloudExport* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CloudExport* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CloudExport* New() const final {
    return CreateMaybeMessage<CloudExport>(nullptr);
  }

  CloudExport* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CloudExport>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CloudExport& from);
  void MergeFrom(const CloudExport& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CloudExport* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cloud_export.v202210.CloudExport";
  }
  protected:
  explicit CloudExport(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto);
    return ::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kNameFieldNumber = 4,
    kDescriptionFieldNumber = 5,
    kPlanIdFieldNumber = 6,
    kCurrentStatusFieldNumber = 13,
    kCdateFieldNumber = 14,
    kEdateFieldNumber = 15,
    kTypeFieldNumber = 2,
    kEnabledFieldNumber = 3,
    kCloudProviderFieldNumber = 7,
    kAwsFieldNumber = 8,
    kAzureFieldNumber = 9,
    kGceFieldNumber = 10,
    kIbmFieldNumber = 11,
  };
  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_id(
      std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // string name = 4[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string description = 5[json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_description();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_description(
      std::string* description);
  private:
  const std::string& _internal_description() const;
  void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // string plan_id = 6[json_name = "planId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_plan_id();
  const std::string& plan_id() const;
  void set_plan_id(const std::string& value);
  void set_plan_id(std::string&& value);
  void set_plan_id(const char* value);
  void set_plan_id(const char* value, size_t size);
  std::string* mutable_plan_id();
  std::string* release_plan_id();
  void set_allocated_plan_id(std::string* plan_id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_plan_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_plan_id(
      std::string* plan_id);
  private:
  const std::string& _internal_plan_id() const;
  void _internal_set_plan_id(const std::string& value);
  std::string* _internal_mutable_plan_id();
  public:

  // .kentik.cloud_export.v202210.CloudExportStatus current_status = 13[json_name = "currentStatus", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_current_status() const;
  private:
  bool _internal_has_current_status() const;
  public:
  void clear_current_status();
  const ::kentik::cloud_export::v202210::CloudExportStatus& current_status() const;
  ::kentik::cloud_export::v202210::CloudExportStatus* release_current_status();
  ::kentik::cloud_export::v202210::CloudExportStatus* mutable_current_status();
  void set_allocated_current_status(::kentik::cloud_export::v202210::CloudExportStatus* current_status);
  private:
  const ::kentik::cloud_export::v202210::CloudExportStatus& _internal_current_status() const;
  ::kentik::cloud_export::v202210::CloudExportStatus* _internal_mutable_current_status();
  public:
  void unsafe_arena_set_allocated_current_status(
      ::kentik::cloud_export::v202210::CloudExportStatus* current_status);
  ::kentik::cloud_export::v202210::CloudExportStatus* unsafe_arena_release_current_status();

  // .google.protobuf.Timestamp cdate = 14[json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_cdate() const;
  private:
  bool _internal_has_cdate() const;
  public:
  void clear_cdate();
  const PROTOBUF_NAMESPACE_ID::Timestamp& cdate() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_cdate();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_cdate();
  void set_allocated_cdate(PROTOBUF_NAMESPACE_ID::Timestamp* cdate);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_cdate() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_cdate();
  public:
  void unsafe_arena_set_allocated_cdate(
      PROTOBUF_NAMESPACE_ID::Timestamp* cdate);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_cdate();

  // .google.protobuf.Timestamp edate = 15[json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_edate() const;
  private:
  bool _internal_has_edate() const;
  public:
  void clear_edate();
  const PROTOBUF_NAMESPACE_ID::Timestamp& edate() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_edate();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_edate();
  void set_allocated_edate(PROTOBUF_NAMESPACE_ID::Timestamp* edate);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_edate() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_edate();
  public:
  void unsafe_arena_set_allocated_edate(
      PROTOBUF_NAMESPACE_ID::Timestamp* edate);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_edate();

  // .kentik.cloud_export.v202210.CloudExportType type = 2[json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_type();
  ::kentik::cloud_export::v202210::CloudExportType type() const;
  void set_type(::kentik::cloud_export::v202210::CloudExportType value);
  private:
  ::kentik::cloud_export::v202210::CloudExportType _internal_type() const;
  void _internal_set_type(::kentik::cloud_export::v202210::CloudExportType value);
  public:

  // bool enabled = 3[json_name = "enabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_enabled();
  bool enabled() const;
  void set_enabled(bool value);
  private:
  bool _internal_enabled() const;
  void _internal_set_enabled(bool value);
  public:

  // .kentik.cloud_export.v202210.CloudProvider cloud_provider = 7[json_name = "cloudProvider", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_cloud_provider();
  ::kentik::cloud_export::v202210::CloudProvider cloud_provider() const;
  void set_cloud_provider(::kentik::cloud_export::v202210::CloudProvider value);
  private:
  ::kentik::cloud_export::v202210::CloudProvider _internal_cloud_provider() const;
  void _internal_set_cloud_provider(::kentik::cloud_export::v202210::CloudProvider value);
  public:

  // .kentik.cloud_export.v202210.AwsProperties aws = 8[json_name = "aws"];
  bool has_aws() const;
  private:
  bool _internal_has_aws() const;
  public:
  void clear_aws();
  const ::kentik::cloud_export::v202210::AwsProperties& aws() const;
  ::kentik::cloud_export::v202210::AwsProperties* release_aws();
  ::kentik::cloud_export::v202210::AwsProperties* mutable_aws();
  void set_allocated_aws(::kentik::cloud_export::v202210::AwsProperties* aws);
  private:
  const ::kentik::cloud_export::v202210::AwsProperties& _internal_aws() const;
  ::kentik::cloud_export::v202210::AwsProperties* _internal_mutable_aws();
  public:
  void unsafe_arena_set_allocated_aws(
      ::kentik::cloud_export::v202210::AwsProperties* aws);
  ::kentik::cloud_export::v202210::AwsProperties* unsafe_arena_release_aws();

  // .kentik.cloud_export.v202210.AzureProperties azure = 9[json_name = "azure"];
  bool has_azure() const;
  private:
  bool _internal_has_azure() const;
  public:
  void clear_azure();
  const ::kentik::cloud_export::v202210::AzureProperties& azure() const;
  ::kentik::cloud_export::v202210::AzureProperties* release_azure();
  ::kentik::cloud_export::v202210::AzureProperties* mutable_azure();
  void set_allocated_azure(::kentik::cloud_export::v202210::AzureProperties* azure);
  private:
  const ::kentik::cloud_export::v202210::AzureProperties& _internal_azure() const;
  ::kentik::cloud_export::v202210::AzureProperties* _internal_mutable_azure();
  public:
  void unsafe_arena_set_allocated_azure(
      ::kentik::cloud_export::v202210::AzureProperties* azure);
  ::kentik::cloud_export::v202210::AzureProperties* unsafe_arena_release_azure();

  // .kentik.cloud_export.v202210.GceProperties gce = 10[json_name = "gce"];
  bool has_gce() const;
  private:
  bool _internal_has_gce() const;
  public:
  void clear_gce();
  const ::kentik::cloud_export::v202210::GceProperties& gce() const;
  ::kentik::cloud_export::v202210::GceProperties* release_gce();
  ::kentik::cloud_export::v202210::GceProperties* mutable_gce();
  void set_allocated_gce(::kentik::cloud_export::v202210::GceProperties* gce);
  private:
  const ::kentik::cloud_export::v202210::GceProperties& _internal_gce() const;
  ::kentik::cloud_export::v202210::GceProperties* _internal_mutable_gce();
  public:
  void unsafe_arena_set_allocated_gce(
      ::kentik::cloud_export::v202210::GceProperties* gce);
  ::kentik::cloud_export::v202210::GceProperties* unsafe_arena_release_gce();

  // .kentik.cloud_export.v202210.IbmProperties ibm = 11[json_name = "ibm"];
  bool has_ibm() const;
  private:
  bool _internal_has_ibm() const;
  public:
  void clear_ibm();
  const ::kentik::cloud_export::v202210::IbmProperties& ibm() const;
  ::kentik::cloud_export::v202210::IbmProperties* release_ibm();
  ::kentik::cloud_export::v202210::IbmProperties* mutable_ibm();
  void set_allocated_ibm(::kentik::cloud_export::v202210::IbmProperties* ibm);
  private:
  const ::kentik::cloud_export::v202210::IbmProperties& _internal_ibm() const;
  ::kentik::cloud_export::v202210::IbmProperties* _internal_mutable_ibm();
  public:
  void unsafe_arena_set_allocated_ibm(
      ::kentik::cloud_export::v202210::IbmProperties* ibm);
  ::kentik::cloud_export::v202210::IbmProperties* unsafe_arena_release_ibm();

  void clear_cloud_specific_properties();
  CloudSpecificPropertiesCase cloud_specific_properties_case() const;
  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202210.CloudExport)
 private:
  class _Internal;
  void set_has_aws();
  void set_has_azure();
  void set_has_gce();
  void set_has_ibm();

  inline bool has_cloud_specific_properties() const;
  inline void clear_has_cloud_specific_properties();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr plan_id_;
  ::kentik::cloud_export::v202210::CloudExportStatus* current_status_;
  PROTOBUF_NAMESPACE_ID::Timestamp* cdate_;
  PROTOBUF_NAMESPACE_ID::Timestamp* edate_;
  int type_;
  bool enabled_;
  int cloud_provider_;
  union CloudSpecificPropertiesUnion {
    CloudSpecificPropertiesUnion() {}
    ::kentik::cloud_export::v202210::AwsProperties* aws_;
    ::kentik::cloud_export::v202210::AzureProperties* azure_;
    ::kentik::cloud_export::v202210::GceProperties* gce_;
    ::kentik::cloud_export::v202210::IbmProperties* ibm_;
  } cloud_specific_properties_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class AwsProperties PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202210.AwsProperties) */ {
 public:
  inline AwsProperties() : AwsProperties(nullptr) {};
  virtual ~AwsProperties();

  AwsProperties(const AwsProperties& from);
  AwsProperties(AwsProperties&& from) noexcept
    : AwsProperties() {
    *this = ::std::move(from);
  }

  inline AwsProperties& operator=(const AwsProperties& from) {
    CopyFrom(from);
    return *this;
  }
  inline AwsProperties& operator=(AwsProperties&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AwsProperties& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AwsProperties* internal_default_instance() {
    return reinterpret_cast<const AwsProperties*>(
               &_AwsProperties_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AwsProperties& a, AwsProperties& b) {
    a.Swap(&b);
  }
  inline void Swap(AwsProperties* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AwsProperties* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AwsProperties* New() const final {
    return CreateMaybeMessage<AwsProperties>(nullptr);
  }

  AwsProperties* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AwsProperties>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AwsProperties& from);
  void MergeFrom(const AwsProperties& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AwsProperties* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cloud_export.v202210.AwsProperties";
  }
  protected:
  explicit AwsProperties(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto);
    return ::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBucketFieldNumber = 1,
    kIamRoleArnFieldNumber = 2,
    kRegionFieldNumber = 3,
    kDeleteAfterReadFieldNumber = 4,
    kMetadataOnlyFieldNumber = 5,
  };
  // string bucket = 1[json_name = "bucket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_bucket();
  const std::string& bucket() const;
  void set_bucket(const std::string& value);
  void set_bucket(std::string&& value);
  void set_bucket(const char* value);
  void set_bucket(const char* value, size_t size);
  std::string* mutable_bucket();
  std::string* release_bucket();
  void set_allocated_bucket(std::string* bucket);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_bucket();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_bucket(
      std::string* bucket);
  private:
  const std::string& _internal_bucket() const;
  void _internal_set_bucket(const std::string& value);
  std::string* _internal_mutable_bucket();
  public:

  // string iam_role_arn = 2[json_name = "iamRoleArn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_iam_role_arn();
  const std::string& iam_role_arn() const;
  void set_iam_role_arn(const std::string& value);
  void set_iam_role_arn(std::string&& value);
  void set_iam_role_arn(const char* value);
  void set_iam_role_arn(const char* value, size_t size);
  std::string* mutable_iam_role_arn();
  std::string* release_iam_role_arn();
  void set_allocated_iam_role_arn(std::string* iam_role_arn);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_iam_role_arn();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_iam_role_arn(
      std::string* iam_role_arn);
  private:
  const std::string& _internal_iam_role_arn() const;
  void _internal_set_iam_role_arn(const std::string& value);
  std::string* _internal_mutable_iam_role_arn();
  public:

  // string region = 3[json_name = "region", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_region();
  const std::string& region() const;
  void set_region(const std::string& value);
  void set_region(std::string&& value);
  void set_region(const char* value);
  void set_region(const char* value, size_t size);
  std::string* mutable_region();
  std::string* release_region();
  void set_allocated_region(std::string* region);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_region();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_region(
      std::string* region);
  private:
  const std::string& _internal_region() const;
  void _internal_set_region(const std::string& value);
  std::string* _internal_mutable_region();
  public:

  // bool delete_after_read = 4[json_name = "deleteAfterRead", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_delete_after_read();
  bool delete_after_read() const;
  void set_delete_after_read(bool value);
  private:
  bool _internal_delete_after_read() const;
  void _internal_set_delete_after_read(bool value);
  public:

  // bool metadata_only = 5[json_name = "metadataOnly", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_metadata_only();
  bool metadata_only() const;
  void set_metadata_only(bool value);
  private:
  bool _internal_metadata_only() const;
  void _internal_set_metadata_only(bool value);
  public:

  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202210.AwsProperties)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bucket_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr iam_role_arn_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr region_;
  bool delete_after_read_;
  bool metadata_only_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class AzureProperties PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202210.AzureProperties) */ {
 public:
  inline AzureProperties() : AzureProperties(nullptr) {};
  virtual ~AzureProperties();

  AzureProperties(const AzureProperties& from);
  AzureProperties(AzureProperties&& from) noexcept
    : AzureProperties() {
    *this = ::std::move(from);
  }

  inline AzureProperties& operator=(const AzureProperties& from) {
    CopyFrom(from);
    return *this;
  }
  inline AzureProperties& operator=(AzureProperties&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AzureProperties& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AzureProperties* internal_default_instance() {
    return reinterpret_cast<const AzureProperties*>(
               &_AzureProperties_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AzureProperties& a, AzureProperties& b) {
    a.Swap(&b);
  }
  inline void Swap(AzureProperties* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AzureProperties* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AzureProperties* New() const final {
    return CreateMaybeMessage<AzureProperties>(nullptr);
  }

  AzureProperties* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AzureProperties>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AzureProperties& from);
  void MergeFrom(const AzureProperties& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AzureProperties* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cloud_export.v202210.AzureProperties";
  }
  protected:
  explicit AzureProperties(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto);
    return ::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocationFieldNumber = 1,
    kResourceGroupFieldNumber = 2,
    kStorageAccountFieldNumber = 3,
    kSubscriptionIdFieldNumber = 4,
    kSecurityPrincipalEnabledFieldNumber = 5,
  };
  // string location = 1[json_name = "location", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_location();
  const std::string& location() const;
  void set_location(const std::string& value);
  void set_location(std::string&& value);
  void set_location(const char* value);
  void set_location(const char* value, size_t size);
  std::string* mutable_location();
  std::string* release_location();
  void set_allocated_location(std::string* location);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_location();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_location(
      std::string* location);
  private:
  const std::string& _internal_location() const;
  void _internal_set_location(const std::string& value);
  std::string* _internal_mutable_location();
  public:

  // string resource_group = 2[json_name = "resourceGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_resource_group();
  const std::string& resource_group() const;
  void set_resource_group(const std::string& value);
  void set_resource_group(std::string&& value);
  void set_resource_group(const char* value);
  void set_resource_group(const char* value, size_t size);
  std::string* mutable_resource_group();
  std::string* release_resource_group();
  void set_allocated_resource_group(std::string* resource_group);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_resource_group();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_resource_group(
      std::string* resource_group);
  private:
  const std::string& _internal_resource_group() const;
  void _internal_set_resource_group(const std::string& value);
  std::string* _internal_mutable_resource_group();
  public:

  // string storage_account = 3[json_name = "storageAccount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_storage_account();
  const std::string& storage_account() const;
  void set_storage_account(const std::string& value);
  void set_storage_account(std::string&& value);
  void set_storage_account(const char* value);
  void set_storage_account(const char* value, size_t size);
  std::string* mutable_storage_account();
  std::string* release_storage_account();
  void set_allocated_storage_account(std::string* storage_account);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_storage_account();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_storage_account(
      std::string* storage_account);
  private:
  const std::string& _internal_storage_account() const;
  void _internal_set_storage_account(const std::string& value);
  std::string* _internal_mutable_storage_account();
  public:

  // string subscription_id = 4[json_name = "subscriptionId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_subscription_id();
  const std::string& subscription_id() const;
  void set_subscription_id(const std::string& value);
  void set_subscription_id(std::string&& value);
  void set_subscription_id(const char* value);
  void set_subscription_id(const char* value, size_t size);
  std::string* mutable_subscription_id();
  std::string* release_subscription_id();
  void set_allocated_subscription_id(std::string* subscription_id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_subscription_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_subscription_id(
      std::string* subscription_id);
  private:
  const std::string& _internal_subscription_id() const;
  void _internal_set_subscription_id(const std::string& value);
  std::string* _internal_mutable_subscription_id();
  public:

  // bool security_principal_enabled = 5[json_name = "securityPrincipalEnabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_security_principal_enabled();
  bool security_principal_enabled() const;
  void set_security_principal_enabled(bool value);
  private:
  bool _internal_security_principal_enabled() const;
  void _internal_set_security_principal_enabled(bool value);
  public:

  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202210.AzureProperties)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr location_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr resource_group_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr storage_account_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr subscription_id_;
  bool security_principal_enabled_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class GceProperties PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202210.GceProperties) */ {
 public:
  inline GceProperties() : GceProperties(nullptr) {};
  virtual ~GceProperties();

  GceProperties(const GceProperties& from);
  GceProperties(GceProperties&& from) noexcept
    : GceProperties() {
    *this = ::std::move(from);
  }

  inline GceProperties& operator=(const GceProperties& from) {
    CopyFrom(from);
    return *this;
  }
  inline GceProperties& operator=(GceProperties&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GceProperties& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GceProperties* internal_default_instance() {
    return reinterpret_cast<const GceProperties*>(
               &_GceProperties_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GceProperties& a, GceProperties& b) {
    a.Swap(&b);
  }
  inline void Swap(GceProperties* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GceProperties* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GceProperties* New() const final {
    return CreateMaybeMessage<GceProperties>(nullptr);
  }

  GceProperties* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GceProperties>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GceProperties& from);
  void MergeFrom(const GceProperties& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GceProperties* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cloud_export.v202210.GceProperties";
  }
  protected:
  explicit GceProperties(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto);
    return ::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProjectFieldNumber = 1,
    kSubscriptionFieldNumber = 2,
  };
  // string project = 1[json_name = "project", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_project();
  const std::string& project() const;
  void set_project(const std::string& value);
  void set_project(std::string&& value);
  void set_project(const char* value);
  void set_project(const char* value, size_t size);
  std::string* mutable_project();
  std::string* release_project();
  void set_allocated_project(std::string* project);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_project();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_project(
      std::string* project);
  private:
  const std::string& _internal_project() const;
  void _internal_set_project(const std::string& value);
  std::string* _internal_mutable_project();
  public:

  // string subscription = 2[json_name = "subscription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_subscription();
  const std::string& subscription() const;
  void set_subscription(const std::string& value);
  void set_subscription(std::string&& value);
  void set_subscription(const char* value);
  void set_subscription(const char* value, size_t size);
  std::string* mutable_subscription();
  std::string* release_subscription();
  void set_allocated_subscription(std::string* subscription);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_subscription();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_subscription(
      std::string* subscription);
  private:
  const std::string& _internal_subscription() const;
  void _internal_set_subscription(const std::string& value);
  std::string* _internal_mutable_subscription();
  public:

  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202210.GceProperties)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr project_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr subscription_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class IbmProperties PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202210.IbmProperties) */ {
 public:
  inline IbmProperties() : IbmProperties(nullptr) {};
  virtual ~IbmProperties();

  IbmProperties(const IbmProperties& from);
  IbmProperties(IbmProperties&& from) noexcept
    : IbmProperties() {
    *this = ::std::move(from);
  }

  inline IbmProperties& operator=(const IbmProperties& from) {
    CopyFrom(from);
    return *this;
  }
  inline IbmProperties& operator=(IbmProperties&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IbmProperties& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IbmProperties* internal_default_instance() {
    return reinterpret_cast<const IbmProperties*>(
               &_IbmProperties_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(IbmProperties& a, IbmProperties& b) {
    a.Swap(&b);
  }
  inline void Swap(IbmProperties* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IbmProperties* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IbmProperties* New() const final {
    return CreateMaybeMessage<IbmProperties>(nullptr);
  }

  IbmProperties* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IbmProperties>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IbmProperties& from);
  void MergeFrom(const IbmProperties& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IbmProperties* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cloud_export.v202210.IbmProperties";
  }
  protected:
  explicit IbmProperties(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto);
    return ::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBucketFieldNumber = 1,
  };
  // string bucket = 1[json_name = "bucket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_bucket();
  const std::string& bucket() const;
  void set_bucket(const std::string& value);
  void set_bucket(std::string&& value);
  void set_bucket(const char* value);
  void set_bucket(const char* value, size_t size);
  std::string* mutable_bucket();
  std::string* release_bucket();
  void set_allocated_bucket(std::string* bucket);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_bucket();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_bucket(
      std::string* bucket);
  private:
  const std::string& _internal_bucket() const;
  void _internal_set_bucket(const std::string& value);
  std::string* _internal_mutable_bucket();
  public:

  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202210.IbmProperties)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bucket_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class CloudExportStatus PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202210.CloudExportStatus) */ {
 public:
  inline CloudExportStatus() : CloudExportStatus(nullptr) {};
  virtual ~CloudExportStatus();

  CloudExportStatus(const CloudExportStatus& from);
  CloudExportStatus(CloudExportStatus&& from) noexcept
    : CloudExportStatus() {
    *this = ::std::move(from);
  }

  inline CloudExportStatus& operator=(const CloudExportStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline CloudExportStatus& operator=(CloudExportStatus&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CloudExportStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CloudExportStatus* internal_default_instance() {
    return reinterpret_cast<const CloudExportStatus*>(
               &_CloudExportStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CloudExportStatus& a, CloudExportStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(CloudExportStatus* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CloudExportStatus* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CloudExportStatus* New() const final {
    return CreateMaybeMessage<CloudExportStatus>(nullptr);
  }

  CloudExportStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CloudExportStatus>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CloudExportStatus& from);
  void MergeFrom(const CloudExportStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CloudExportStatus* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cloud_export.v202210.CloudExportStatus";
  }
  protected:
  explicit CloudExportStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto);
    return ::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kErrorMessageFieldNumber = 2,
    kFlowFoundFieldNumber = 3,
    kApiAccessFieldNumber = 4,
    kStorageAccountAccessFieldNumber = 5,
  };
  // string status = 1[json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_status();
  const std::string& status() const;
  void set_status(const std::string& value);
  void set_status(std::string&& value);
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  std::string* mutable_status();
  std::string* release_status();
  void set_allocated_status(std::string* status);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_status();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_status(
      std::string* status);
  private:
  const std::string& _internal_status() const;
  void _internal_set_status(const std::string& value);
  std::string* _internal_mutable_status();
  public:

  // string error_message = 2[json_name = "errorMessage", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_error_message();
  const std::string& error_message() const;
  void set_error_message(const std::string& value);
  void set_error_message(std::string&& value);
  void set_error_message(const char* value);
  void set_error_message(const char* value, size_t size);
  std::string* mutable_error_message();
  std::string* release_error_message();
  void set_allocated_error_message(std::string* error_message);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_error_message();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_error_message(
      std::string* error_message);
  private:
  const std::string& _internal_error_message() const;
  void _internal_set_error_message(const std::string& value);
  std::string* _internal_mutable_error_message();
  public:

  // bool flow_found = 3[json_name = "flowFound", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_flow_found();
  bool flow_found() const;
  void set_flow_found(bool value);
  private:
  bool _internal_flow_found() const;
  void _internal_set_flow_found(bool value);
  public:

  // bool api_access = 4[json_name = "apiAccess", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_api_access();
  bool api_access() const;
  void set_api_access(bool value);
  private:
  bool _internal_api_access() const;
  void _internal_set_api_access(bool value);
  public:

  // bool storage_account_access = 5[json_name = "storageAccountAccess", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_storage_account_access();
  bool storage_account_access() const;
  void set_storage_account_access(bool value);
  private:
  bool _internal_storage_account_access() const;
  void _internal_set_storage_account_access(bool value);
  public:

  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202210.CloudExportStatus)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr status_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr error_message_;
  bool flow_found_;
  bool api_access_;
  bool storage_account_access_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class CreateCloudExportRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202210.CreateCloudExportRequest) */ {
 public:
  inline CreateCloudExportRequest() : CreateCloudExportRequest(nullptr) {};
  virtual ~CreateCloudExportRequest();

  CreateCloudExportRequest(const CreateCloudExportRequest& from);
  CreateCloudExportRequest(CreateCloudExportRequest&& from) noexcept
    : CreateCloudExportRequest() {
    *this = ::std::move(from);
  }

  inline CreateCloudExportRequest& operator=(const CreateCloudExportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateCloudExportRequest& operator=(CreateCloudExportRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateCloudExportRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateCloudExportRequest* internal_default_instance() {
    return reinterpret_cast<const CreateCloudExportRequest*>(
               &_CreateCloudExportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CreateCloudExportRequest& a, CreateCloudExportRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateCloudExportRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateCloudExportRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateCloudExportRequest* New() const final {
    return CreateMaybeMessage<CreateCloudExportRequest>(nullptr);
  }

  CreateCloudExportRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateCloudExportRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateCloudExportRequest& from);
  void MergeFrom(const CreateCloudExportRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateCloudExportRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cloud_export.v202210.CreateCloudExportRequest";
  }
  protected:
  explicit CreateCloudExportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto);
    return ::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExportFieldNumber = 1,
  };
  // .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_export_() const;
  private:
  bool _internal_has_export_() const;
  public:
  void clear_export_();
  const ::kentik::cloud_export::v202210::CloudExport& export_() const;
  ::kentik::cloud_export::v202210::CloudExport* release_export_();
  ::kentik::cloud_export::v202210::CloudExport* mutable_export_();
  void set_allocated_export_(::kentik::cloud_export::v202210::CloudExport* export_);
  private:
  const ::kentik::cloud_export::v202210::CloudExport& _internal_export_() const;
  ::kentik::cloud_export::v202210::CloudExport* _internal_mutable_export_();
  public:
  void unsafe_arena_set_allocated_export_(
      ::kentik::cloud_export::v202210::CloudExport* export_);
  ::kentik::cloud_export::v202210::CloudExport* unsafe_arena_release_export_();

  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202210.CreateCloudExportRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::kentik::cloud_export::v202210::CloudExport* export__;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class CreateCloudExportResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202210.CreateCloudExportResponse) */ {
 public:
  inline CreateCloudExportResponse() : CreateCloudExportResponse(nullptr) {};
  virtual ~CreateCloudExportResponse();

  CreateCloudExportResponse(const CreateCloudExportResponse& from);
  CreateCloudExportResponse(CreateCloudExportResponse&& from) noexcept
    : CreateCloudExportResponse() {
    *this = ::std::move(from);
  }

  inline CreateCloudExportResponse& operator=(const CreateCloudExportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateCloudExportResponse& operator=(CreateCloudExportResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateCloudExportResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateCloudExportResponse* internal_default_instance() {
    return reinterpret_cast<const CreateCloudExportResponse*>(
               &_CreateCloudExportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CreateCloudExportResponse& a, CreateCloudExportResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateCloudExportResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateCloudExportResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateCloudExportResponse* New() const final {
    return CreateMaybeMessage<CreateCloudExportResponse>(nullptr);
  }

  CreateCloudExportResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateCloudExportResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateCloudExportResponse& from);
  void MergeFrom(const CreateCloudExportResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateCloudExportResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cloud_export.v202210.CreateCloudExportResponse";
  }
  protected:
  explicit CreateCloudExportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto);
    return ::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExportFieldNumber = 1,
  };
  // .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_export_() const;
  private:
  bool _internal_has_export_() const;
  public:
  void clear_export_();
  const ::kentik::cloud_export::v202210::CloudExport& export_() const;
  ::kentik::cloud_export::v202210::CloudExport* release_export_();
  ::kentik::cloud_export::v202210::CloudExport* mutable_export_();
  void set_allocated_export_(::kentik::cloud_export::v202210::CloudExport* export_);
  private:
  const ::kentik::cloud_export::v202210::CloudExport& _internal_export_() const;
  ::kentik::cloud_export::v202210::CloudExport* _internal_mutable_export_();
  public:
  void unsafe_arena_set_allocated_export_(
      ::kentik::cloud_export::v202210::CloudExport* export_);
  ::kentik::cloud_export::v202210::CloudExport* unsafe_arena_release_export_();

  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202210.CreateCloudExportResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::kentik::cloud_export::v202210::CloudExport* export__;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class ListCloudExportsRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202210.ListCloudExportsRequest) */ {
 public:
  inline ListCloudExportsRequest() : ListCloudExportsRequest(nullptr) {};
  virtual ~ListCloudExportsRequest();

  ListCloudExportsRequest(const ListCloudExportsRequest& from);
  ListCloudExportsRequest(ListCloudExportsRequest&& from) noexcept
    : ListCloudExportsRequest() {
    *this = ::std::move(from);
  }

  inline ListCloudExportsRequest& operator=(const ListCloudExportsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListCloudExportsRequest& operator=(ListCloudExportsRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListCloudExportsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListCloudExportsRequest* internal_default_instance() {
    return reinterpret_cast<const ListCloudExportsRequest*>(
               &_ListCloudExportsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ListCloudExportsRequest& a, ListCloudExportsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ListCloudExportsRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListCloudExportsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListCloudExportsRequest* New() const final {
    return CreateMaybeMessage<ListCloudExportsRequest>(nullptr);
  }

  ListCloudExportsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListCloudExportsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListCloudExportsRequest& from);
  void MergeFrom(const ListCloudExportsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListCloudExportsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cloud_export.v202210.ListCloudExportsRequest";
  }
  protected:
  explicit ListCloudExportsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto);
    return ::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202210.ListCloudExportsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class ListCloudExportsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202210.ListCloudExportsResponse) */ {
 public:
  inline ListCloudExportsResponse() : ListCloudExportsResponse(nullptr) {};
  virtual ~ListCloudExportsResponse();

  ListCloudExportsResponse(const ListCloudExportsResponse& from);
  ListCloudExportsResponse(ListCloudExportsResponse&& from) noexcept
    : ListCloudExportsResponse() {
    *this = ::std::move(from);
  }

  inline ListCloudExportsResponse& operator=(const ListCloudExportsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListCloudExportsResponse& operator=(ListCloudExportsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListCloudExportsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListCloudExportsResponse* internal_default_instance() {
    return reinterpret_cast<const ListCloudExportsResponse*>(
               &_ListCloudExportsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ListCloudExportsResponse& a, ListCloudExportsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListCloudExportsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListCloudExportsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListCloudExportsResponse* New() const final {
    return CreateMaybeMessage<ListCloudExportsResponse>(nullptr);
  }

  ListCloudExportsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListCloudExportsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListCloudExportsResponse& from);
  void MergeFrom(const ListCloudExportsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListCloudExportsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cloud_export.v202210.ListCloudExportsResponse";
  }
  protected:
  explicit ListCloudExportsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto);
    return ::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExportsFieldNumber = 1,
    kInvalidExportsCountFieldNumber = 2,
  };
  // repeated .kentik.cloud_export.v202210.CloudExport exports = 1[json_name = "exports", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int exports_size() const;
  private:
  int _internal_exports_size() const;
  public:
  void clear_exports();
  ::kentik::cloud_export::v202210::CloudExport* mutable_exports(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::cloud_export::v202210::CloudExport >*
      mutable_exports();
  private:
  const ::kentik::cloud_export::v202210::CloudExport& _internal_exports(int index) const;
  ::kentik::cloud_export::v202210::CloudExport* _internal_add_exports();
  public:
  const ::kentik::cloud_export::v202210::CloudExport& exports(int index) const;
  ::kentik::cloud_export::v202210::CloudExport* add_exports();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::cloud_export::v202210::CloudExport >&
      exports() const;

  // uint32 invalid_exports_count = 2[json_name = "invalidExportsCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_invalid_exports_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 invalid_exports_count() const;
  void set_invalid_exports_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_invalid_exports_count() const;
  void _internal_set_invalid_exports_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202210.ListCloudExportsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::cloud_export::v202210::CloudExport > exports_;
  ::PROTOBUF_NAMESPACE_ID::uint32 invalid_exports_count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class GetCloudExportRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202210.GetCloudExportRequest) */ {
 public:
  inline GetCloudExportRequest() : GetCloudExportRequest(nullptr) {};
  virtual ~GetCloudExportRequest();

  GetCloudExportRequest(const GetCloudExportRequest& from);
  GetCloudExportRequest(GetCloudExportRequest&& from) noexcept
    : GetCloudExportRequest() {
    *this = ::std::move(from);
  }

  inline GetCloudExportRequest& operator=(const GetCloudExportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCloudExportRequest& operator=(GetCloudExportRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetCloudExportRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetCloudExportRequest* internal_default_instance() {
    return reinterpret_cast<const GetCloudExportRequest*>(
               &_GetCloudExportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(GetCloudExportRequest& a, GetCloudExportRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetCloudExportRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCloudExportRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetCloudExportRequest* New() const final {
    return CreateMaybeMessage<GetCloudExportRequest>(nullptr);
  }

  GetCloudExportRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetCloudExportRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetCloudExportRequest& from);
  void MergeFrom(const GetCloudExportRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetCloudExportRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cloud_export.v202210.GetCloudExportRequest";
  }
  protected:
  explicit GetCloudExportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto);
    return ::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_id(
      std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202210.GetCloudExportRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class GetCloudExportResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202210.GetCloudExportResponse) */ {
 public:
  inline GetCloudExportResponse() : GetCloudExportResponse(nullptr) {};
  virtual ~GetCloudExportResponse();

  GetCloudExportResponse(const GetCloudExportResponse& from);
  GetCloudExportResponse(GetCloudExportResponse&& from) noexcept
    : GetCloudExportResponse() {
    *this = ::std::move(from);
  }

  inline GetCloudExportResponse& operator=(const GetCloudExportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCloudExportResponse& operator=(GetCloudExportResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetCloudExportResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetCloudExportResponse* internal_default_instance() {
    return reinterpret_cast<const GetCloudExportResponse*>(
               &_GetCloudExportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(GetCloudExportResponse& a, GetCloudExportResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetCloudExportResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCloudExportResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetCloudExportResponse* New() const final {
    return CreateMaybeMessage<GetCloudExportResponse>(nullptr);
  }

  GetCloudExportResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetCloudExportResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetCloudExportResponse& from);
  void MergeFrom(const GetCloudExportResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetCloudExportResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cloud_export.v202210.GetCloudExportResponse";
  }
  protected:
  explicit GetCloudExportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto);
    return ::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExportFieldNumber = 1,
  };
  // .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_export_() const;
  private:
  bool _internal_has_export_() const;
  public:
  void clear_export_();
  const ::kentik::cloud_export::v202210::CloudExport& export_() const;
  ::kentik::cloud_export::v202210::CloudExport* release_export_();
  ::kentik::cloud_export::v202210::CloudExport* mutable_export_();
  void set_allocated_export_(::kentik::cloud_export::v202210::CloudExport* export_);
  private:
  const ::kentik::cloud_export::v202210::CloudExport& _internal_export_() const;
  ::kentik::cloud_export::v202210::CloudExport* _internal_mutable_export_();
  public:
  void unsafe_arena_set_allocated_export_(
      ::kentik::cloud_export::v202210::CloudExport* export_);
  ::kentik::cloud_export::v202210::CloudExport* unsafe_arena_release_export_();

  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202210.GetCloudExportResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::kentik::cloud_export::v202210::CloudExport* export__;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class UpdateCloudExportRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202210.UpdateCloudExportRequest) */ {
 public:
  inline UpdateCloudExportRequest() : UpdateCloudExportRequest(nullptr) {};
  virtual ~UpdateCloudExportRequest();

  UpdateCloudExportRequest(const UpdateCloudExportRequest& from);
  UpdateCloudExportRequest(UpdateCloudExportRequest&& from) noexcept
    : UpdateCloudExportRequest() {
    *this = ::std::move(from);
  }

  inline UpdateCloudExportRequest& operator=(const UpdateCloudExportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateCloudExportRequest& operator=(UpdateCloudExportRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateCloudExportRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateCloudExportRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateCloudExportRequest*>(
               &_UpdateCloudExportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(UpdateCloudExportRequest& a, UpdateCloudExportRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateCloudExportRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateCloudExportRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateCloudExportRequest* New() const final {
    return CreateMaybeMessage<UpdateCloudExportRequest>(nullptr);
  }

  UpdateCloudExportRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateCloudExportRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateCloudExportRequest& from);
  void MergeFrom(const UpdateCloudExportRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateCloudExportRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cloud_export.v202210.UpdateCloudExportRequest";
  }
  protected:
  explicit UpdateCloudExportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto);
    return ::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExportFieldNumber = 1,
  };
  // .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_export_() const;
  private:
  bool _internal_has_export_() const;
  public:
  void clear_export_();
  const ::kentik::cloud_export::v202210::CloudExport& export_() const;
  ::kentik::cloud_export::v202210::CloudExport* release_export_();
  ::kentik::cloud_export::v202210::CloudExport* mutable_export_();
  void set_allocated_export_(::kentik::cloud_export::v202210::CloudExport* export_);
  private:
  const ::kentik::cloud_export::v202210::CloudExport& _internal_export_() const;
  ::kentik::cloud_export::v202210::CloudExport* _internal_mutable_export_();
  public:
  void unsafe_arena_set_allocated_export_(
      ::kentik::cloud_export::v202210::CloudExport* export_);
  ::kentik::cloud_export::v202210::CloudExport* unsafe_arena_release_export_();

  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202210.UpdateCloudExportRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::kentik::cloud_export::v202210::CloudExport* export__;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class UpdateCloudExportResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202210.UpdateCloudExportResponse) */ {
 public:
  inline UpdateCloudExportResponse() : UpdateCloudExportResponse(nullptr) {};
  virtual ~UpdateCloudExportResponse();

  UpdateCloudExportResponse(const UpdateCloudExportResponse& from);
  UpdateCloudExportResponse(UpdateCloudExportResponse&& from) noexcept
    : UpdateCloudExportResponse() {
    *this = ::std::move(from);
  }

  inline UpdateCloudExportResponse& operator=(const UpdateCloudExportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateCloudExportResponse& operator=(UpdateCloudExportResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateCloudExportResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateCloudExportResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateCloudExportResponse*>(
               &_UpdateCloudExportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(UpdateCloudExportResponse& a, UpdateCloudExportResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateCloudExportResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateCloudExportResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateCloudExportResponse* New() const final {
    return CreateMaybeMessage<UpdateCloudExportResponse>(nullptr);
  }

  UpdateCloudExportResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateCloudExportResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateCloudExportResponse& from);
  void MergeFrom(const UpdateCloudExportResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateCloudExportResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cloud_export.v202210.UpdateCloudExportResponse";
  }
  protected:
  explicit UpdateCloudExportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto);
    return ::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExportFieldNumber = 1,
  };
  // .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_export_() const;
  private:
  bool _internal_has_export_() const;
  public:
  void clear_export_();
  const ::kentik::cloud_export::v202210::CloudExport& export_() const;
  ::kentik::cloud_export::v202210::CloudExport* release_export_();
  ::kentik::cloud_export::v202210::CloudExport* mutable_export_();
  void set_allocated_export_(::kentik::cloud_export::v202210::CloudExport* export_);
  private:
  const ::kentik::cloud_export::v202210::CloudExport& _internal_export_() const;
  ::kentik::cloud_export::v202210::CloudExport* _internal_mutable_export_();
  public:
  void unsafe_arena_set_allocated_export_(
      ::kentik::cloud_export::v202210::CloudExport* export_);
  ::kentik::cloud_export::v202210::CloudExport* unsafe_arena_release_export_();

  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202210.UpdateCloudExportResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::kentik::cloud_export::v202210::CloudExport* export__;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class DeleteCloudExportRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202210.DeleteCloudExportRequest) */ {
 public:
  inline DeleteCloudExportRequest() : DeleteCloudExportRequest(nullptr) {};
  virtual ~DeleteCloudExportRequest();

  DeleteCloudExportRequest(const DeleteCloudExportRequest& from);
  DeleteCloudExportRequest(DeleteCloudExportRequest&& from) noexcept
    : DeleteCloudExportRequest() {
    *this = ::std::move(from);
  }

  inline DeleteCloudExportRequest& operator=(const DeleteCloudExportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteCloudExportRequest& operator=(DeleteCloudExportRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteCloudExportRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteCloudExportRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteCloudExportRequest*>(
               &_DeleteCloudExportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(DeleteCloudExportRequest& a, DeleteCloudExportRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteCloudExportRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteCloudExportRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteCloudExportRequest* New() const final {
    return CreateMaybeMessage<DeleteCloudExportRequest>(nullptr);
  }

  DeleteCloudExportRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteCloudExportRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteCloudExportRequest& from);
  void MergeFrom(const DeleteCloudExportRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteCloudExportRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cloud_export.v202210.DeleteCloudExportRequest";
  }
  protected:
  explicit DeleteCloudExportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto);
    return ::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_id(
      std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202210.DeleteCloudExportRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class DeleteCloudExportResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202210.DeleteCloudExportResponse) */ {
 public:
  inline DeleteCloudExportResponse() : DeleteCloudExportResponse(nullptr) {};
  virtual ~DeleteCloudExportResponse();

  DeleteCloudExportResponse(const DeleteCloudExportResponse& from);
  DeleteCloudExportResponse(DeleteCloudExportResponse&& from) noexcept
    : DeleteCloudExportResponse() {
    *this = ::std::move(from);
  }

  inline DeleteCloudExportResponse& operator=(const DeleteCloudExportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteCloudExportResponse& operator=(DeleteCloudExportResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteCloudExportResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteCloudExportResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteCloudExportResponse*>(
               &_DeleteCloudExportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(DeleteCloudExportResponse& a, DeleteCloudExportResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteCloudExportResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteCloudExportResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteCloudExportResponse* New() const final {
    return CreateMaybeMessage<DeleteCloudExportResponse>(nullptr);
  }

  DeleteCloudExportResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteCloudExportResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteCloudExportResponse& from);
  void MergeFrom(const DeleteCloudExportResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteCloudExportResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.cloud_export.v202210.DeleteCloudExportResponse";
  }
  protected:
  explicit DeleteCloudExportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto);
    return ::descriptor_table_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202210.DeleteCloudExportResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CloudExport

// string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CloudExport::clear_id() {
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CloudExport::id() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.CloudExport.id)
  return _internal_id();
}
inline void CloudExport::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.CloudExport.id)
}
inline std::string* CloudExport::mutable_id() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.CloudExport.id)
  return _internal_mutable_id();
}
inline const std::string& CloudExport::_internal_id() const {
  return id_.Get();
}
inline void CloudExport::_internal_set_id(const std::string& value) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CloudExport::set_id(std::string&& value) {
  
  id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cloud_export.v202210.CloudExport.id)
}
inline void CloudExport::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cloud_export.v202210.CloudExport.id)
}
inline void CloudExport::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cloud_export.v202210.CloudExport.id)
}
inline std::string* CloudExport::_internal_mutable_id() {
  
  return id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CloudExport::release_id() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.CloudExport.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CloudExport::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.CloudExport.id)
}
inline std::string* CloudExport::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202210.CloudExport.id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CloudExport::unsafe_arena_set_allocated_id(
    std::string* id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (id != nullptr) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.CloudExport.id)
}

// .kentik.cloud_export.v202210.CloudExportType type = 2[json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CloudExport::clear_type() {
  type_ = 0;
}
inline ::kentik::cloud_export::v202210::CloudExportType CloudExport::_internal_type() const {
  return static_cast< ::kentik::cloud_export::v202210::CloudExportType >(type_);
}
inline ::kentik::cloud_export::v202210::CloudExportType CloudExport::type() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.CloudExport.type)
  return _internal_type();
}
inline void CloudExport::_internal_set_type(::kentik::cloud_export::v202210::CloudExportType value) {
  
  type_ = value;
}
inline void CloudExport::set_type(::kentik::cloud_export::v202210::CloudExportType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.CloudExport.type)
}

// bool enabled = 3[json_name = "enabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CloudExport::clear_enabled() {
  enabled_ = false;
}
inline bool CloudExport::_internal_enabled() const {
  return enabled_;
}
inline bool CloudExport::enabled() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.CloudExport.enabled)
  return _internal_enabled();
}
inline void CloudExport::_internal_set_enabled(bool value) {
  
  enabled_ = value;
}
inline void CloudExport::set_enabled(bool value) {
  _internal_set_enabled(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.CloudExport.enabled)
}

// string name = 4[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CloudExport::clear_name() {
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CloudExport::name() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.CloudExport.name)
  return _internal_name();
}
inline void CloudExport::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.CloudExport.name)
}
inline std::string* CloudExport::mutable_name() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.CloudExport.name)
  return _internal_mutable_name();
}
inline const std::string& CloudExport::_internal_name() const {
  return name_.Get();
}
inline void CloudExport::_internal_set_name(const std::string& value) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CloudExport::set_name(std::string&& value) {
  
  name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cloud_export.v202210.CloudExport.name)
}
inline void CloudExport::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cloud_export.v202210.CloudExport.name)
}
inline void CloudExport::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cloud_export.v202210.CloudExport.name)
}
inline std::string* CloudExport::_internal_mutable_name() {
  
  return name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CloudExport::release_name() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.CloudExport.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CloudExport::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.CloudExport.name)
}
inline std::string* CloudExport::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202210.CloudExport.name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CloudExport::unsafe_arena_set_allocated_name(
    std::string* name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (name != nullptr) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.CloudExport.name)
}

// string description = 5[json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CloudExport::clear_description() {
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CloudExport::description() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.CloudExport.description)
  return _internal_description();
}
inline void CloudExport::set_description(const std::string& value) {
  _internal_set_description(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.CloudExport.description)
}
inline std::string* CloudExport::mutable_description() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.CloudExport.description)
  return _internal_mutable_description();
}
inline const std::string& CloudExport::_internal_description() const {
  return description_.Get();
}
inline void CloudExport::_internal_set_description(const std::string& value) {
  
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CloudExport::set_description(std::string&& value) {
  
  description_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cloud_export.v202210.CloudExport.description)
}
inline void CloudExport::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cloud_export.v202210.CloudExport.description)
}
inline void CloudExport::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cloud_export.v202210.CloudExport.description)
}
inline std::string* CloudExport::_internal_mutable_description() {
  
  return description_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CloudExport::release_description() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.CloudExport.description)
  return description_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CloudExport::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    
  } else {
    
  }
  description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.CloudExport.description)
}
inline std::string* CloudExport::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202210.CloudExport.description)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return description_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CloudExport::unsafe_arena_set_allocated_description(
    std::string* description) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (description != nullptr) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      description, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.CloudExport.description)
}

// string plan_id = 6[json_name = "planId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CloudExport::clear_plan_id() {
  plan_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CloudExport::plan_id() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.CloudExport.plan_id)
  return _internal_plan_id();
}
inline void CloudExport::set_plan_id(const std::string& value) {
  _internal_set_plan_id(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.CloudExport.plan_id)
}
inline std::string* CloudExport::mutable_plan_id() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.CloudExport.plan_id)
  return _internal_mutable_plan_id();
}
inline const std::string& CloudExport::_internal_plan_id() const {
  return plan_id_.Get();
}
inline void CloudExport::_internal_set_plan_id(const std::string& value) {
  
  plan_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CloudExport::set_plan_id(std::string&& value) {
  
  plan_id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cloud_export.v202210.CloudExport.plan_id)
}
inline void CloudExport::set_plan_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  plan_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cloud_export.v202210.CloudExport.plan_id)
}
inline void CloudExport::set_plan_id(const char* value,
    size_t size) {
  
  plan_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cloud_export.v202210.CloudExport.plan_id)
}
inline std::string* CloudExport::_internal_mutable_plan_id() {
  
  return plan_id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CloudExport::release_plan_id() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.CloudExport.plan_id)
  return plan_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CloudExport::set_allocated_plan_id(std::string* plan_id) {
  if (plan_id != nullptr) {
    
  } else {
    
  }
  plan_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), plan_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.CloudExport.plan_id)
}
inline std::string* CloudExport::unsafe_arena_release_plan_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202210.CloudExport.plan_id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return plan_id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CloudExport::unsafe_arena_set_allocated_plan_id(
    std::string* plan_id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (plan_id != nullptr) {
    
  } else {
    
  }
  plan_id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      plan_id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.CloudExport.plan_id)
}

// .kentik.cloud_export.v202210.CloudProvider cloud_provider = 7[json_name = "cloudProvider", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CloudExport::clear_cloud_provider() {
  cloud_provider_ = 0;
}
inline ::kentik::cloud_export::v202210::CloudProvider CloudExport::_internal_cloud_provider() const {
  return static_cast< ::kentik::cloud_export::v202210::CloudProvider >(cloud_provider_);
}
inline ::kentik::cloud_export::v202210::CloudProvider CloudExport::cloud_provider() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.CloudExport.cloud_provider)
  return _internal_cloud_provider();
}
inline void CloudExport::_internal_set_cloud_provider(::kentik::cloud_export::v202210::CloudProvider value) {
  
  cloud_provider_ = value;
}
inline void CloudExport::set_cloud_provider(::kentik::cloud_export::v202210::CloudProvider value) {
  _internal_set_cloud_provider(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.CloudExport.cloud_provider)
}

// .kentik.cloud_export.v202210.AwsProperties aws = 8[json_name = "aws"];
inline bool CloudExport::_internal_has_aws() const {
  return cloud_specific_properties_case() == kAws;
}
inline bool CloudExport::has_aws() const {
  return _internal_has_aws();
}
inline void CloudExport::set_has_aws() {
  _oneof_case_[0] = kAws;
}
inline void CloudExport::clear_aws() {
  if (_internal_has_aws()) {
    if (GetArena() == nullptr) {
      delete cloud_specific_properties_.aws_;
    }
    clear_has_cloud_specific_properties();
  }
}
inline ::kentik::cloud_export::v202210::AwsProperties* CloudExport::release_aws() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.CloudExport.aws)
  if (_internal_has_aws()) {
    clear_has_cloud_specific_properties();
      ::kentik::cloud_export::v202210::AwsProperties* temp = cloud_specific_properties_.aws_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    cloud_specific_properties_.aws_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::cloud_export::v202210::AwsProperties& CloudExport::_internal_aws() const {
  return _internal_has_aws()
      ? *cloud_specific_properties_.aws_
      : *reinterpret_cast< ::kentik::cloud_export::v202210::AwsProperties*>(&::kentik::cloud_export::v202210::_AwsProperties_default_instance_);
}
inline const ::kentik::cloud_export::v202210::AwsProperties& CloudExport::aws() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.CloudExport.aws)
  return _internal_aws();
}
inline ::kentik::cloud_export::v202210::AwsProperties* CloudExport::unsafe_arena_release_aws() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202210.CloudExport.aws)
  if (_internal_has_aws()) {
    clear_has_cloud_specific_properties();
    ::kentik::cloud_export::v202210::AwsProperties* temp = cloud_specific_properties_.aws_;
    cloud_specific_properties_.aws_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CloudExport::unsafe_arena_set_allocated_aws(::kentik::cloud_export::v202210::AwsProperties* aws) {
  clear_cloud_specific_properties();
  if (aws) {
    set_has_aws();
    cloud_specific_properties_.aws_ = aws;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.CloudExport.aws)
}
inline ::kentik::cloud_export::v202210::AwsProperties* CloudExport::_internal_mutable_aws() {
  if (!_internal_has_aws()) {
    clear_cloud_specific_properties();
    set_has_aws();
    cloud_specific_properties_.aws_ = CreateMaybeMessage< ::kentik::cloud_export::v202210::AwsProperties >(GetArena());
  }
  return cloud_specific_properties_.aws_;
}
inline ::kentik::cloud_export::v202210::AwsProperties* CloudExport::mutable_aws() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.CloudExport.aws)
  return _internal_mutable_aws();
}

// .kentik.cloud_export.v202210.AzureProperties azure = 9[json_name = "azure"];
inline bool CloudExport::_internal_has_azure() const {
  return cloud_specific_properties_case() == kAzure;
}
inline bool CloudExport::has_azure() const {
  return _internal_has_azure();
}
inline void CloudExport::set_has_azure() {
  _oneof_case_[0] = kAzure;
}
inline void CloudExport::clear_azure() {
  if (_internal_has_azure()) {
    if (GetArena() == nullptr) {
      delete cloud_specific_properties_.azure_;
    }
    clear_has_cloud_specific_properties();
  }
}
inline ::kentik::cloud_export::v202210::AzureProperties* CloudExport::release_azure() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.CloudExport.azure)
  if (_internal_has_azure()) {
    clear_has_cloud_specific_properties();
      ::kentik::cloud_export::v202210::AzureProperties* temp = cloud_specific_properties_.azure_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    cloud_specific_properties_.azure_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::cloud_export::v202210::AzureProperties& CloudExport::_internal_azure() const {
  return _internal_has_azure()
      ? *cloud_specific_properties_.azure_
      : *reinterpret_cast< ::kentik::cloud_export::v202210::AzureProperties*>(&::kentik::cloud_export::v202210::_AzureProperties_default_instance_);
}
inline const ::kentik::cloud_export::v202210::AzureProperties& CloudExport::azure() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.CloudExport.azure)
  return _internal_azure();
}
inline ::kentik::cloud_export::v202210::AzureProperties* CloudExport::unsafe_arena_release_azure() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202210.CloudExport.azure)
  if (_internal_has_azure()) {
    clear_has_cloud_specific_properties();
    ::kentik::cloud_export::v202210::AzureProperties* temp = cloud_specific_properties_.azure_;
    cloud_specific_properties_.azure_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CloudExport::unsafe_arena_set_allocated_azure(::kentik::cloud_export::v202210::AzureProperties* azure) {
  clear_cloud_specific_properties();
  if (azure) {
    set_has_azure();
    cloud_specific_properties_.azure_ = azure;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.CloudExport.azure)
}
inline ::kentik::cloud_export::v202210::AzureProperties* CloudExport::_internal_mutable_azure() {
  if (!_internal_has_azure()) {
    clear_cloud_specific_properties();
    set_has_azure();
    cloud_specific_properties_.azure_ = CreateMaybeMessage< ::kentik::cloud_export::v202210::AzureProperties >(GetArena());
  }
  return cloud_specific_properties_.azure_;
}
inline ::kentik::cloud_export::v202210::AzureProperties* CloudExport::mutable_azure() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.CloudExport.azure)
  return _internal_mutable_azure();
}

// .kentik.cloud_export.v202210.GceProperties gce = 10[json_name = "gce"];
inline bool CloudExport::_internal_has_gce() const {
  return cloud_specific_properties_case() == kGce;
}
inline bool CloudExport::has_gce() const {
  return _internal_has_gce();
}
inline void CloudExport::set_has_gce() {
  _oneof_case_[0] = kGce;
}
inline void CloudExport::clear_gce() {
  if (_internal_has_gce()) {
    if (GetArena() == nullptr) {
      delete cloud_specific_properties_.gce_;
    }
    clear_has_cloud_specific_properties();
  }
}
inline ::kentik::cloud_export::v202210::GceProperties* CloudExport::release_gce() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.CloudExport.gce)
  if (_internal_has_gce()) {
    clear_has_cloud_specific_properties();
      ::kentik::cloud_export::v202210::GceProperties* temp = cloud_specific_properties_.gce_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    cloud_specific_properties_.gce_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::cloud_export::v202210::GceProperties& CloudExport::_internal_gce() const {
  return _internal_has_gce()
      ? *cloud_specific_properties_.gce_
      : *reinterpret_cast< ::kentik::cloud_export::v202210::GceProperties*>(&::kentik::cloud_export::v202210::_GceProperties_default_instance_);
}
inline const ::kentik::cloud_export::v202210::GceProperties& CloudExport::gce() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.CloudExport.gce)
  return _internal_gce();
}
inline ::kentik::cloud_export::v202210::GceProperties* CloudExport::unsafe_arena_release_gce() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202210.CloudExport.gce)
  if (_internal_has_gce()) {
    clear_has_cloud_specific_properties();
    ::kentik::cloud_export::v202210::GceProperties* temp = cloud_specific_properties_.gce_;
    cloud_specific_properties_.gce_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CloudExport::unsafe_arena_set_allocated_gce(::kentik::cloud_export::v202210::GceProperties* gce) {
  clear_cloud_specific_properties();
  if (gce) {
    set_has_gce();
    cloud_specific_properties_.gce_ = gce;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.CloudExport.gce)
}
inline ::kentik::cloud_export::v202210::GceProperties* CloudExport::_internal_mutable_gce() {
  if (!_internal_has_gce()) {
    clear_cloud_specific_properties();
    set_has_gce();
    cloud_specific_properties_.gce_ = CreateMaybeMessage< ::kentik::cloud_export::v202210::GceProperties >(GetArena());
  }
  return cloud_specific_properties_.gce_;
}
inline ::kentik::cloud_export::v202210::GceProperties* CloudExport::mutable_gce() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.CloudExport.gce)
  return _internal_mutable_gce();
}

// .kentik.cloud_export.v202210.IbmProperties ibm = 11[json_name = "ibm"];
inline bool CloudExport::_internal_has_ibm() const {
  return cloud_specific_properties_case() == kIbm;
}
inline bool CloudExport::has_ibm() const {
  return _internal_has_ibm();
}
inline void CloudExport::set_has_ibm() {
  _oneof_case_[0] = kIbm;
}
inline void CloudExport::clear_ibm() {
  if (_internal_has_ibm()) {
    if (GetArena() == nullptr) {
      delete cloud_specific_properties_.ibm_;
    }
    clear_has_cloud_specific_properties();
  }
}
inline ::kentik::cloud_export::v202210::IbmProperties* CloudExport::release_ibm() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.CloudExport.ibm)
  if (_internal_has_ibm()) {
    clear_has_cloud_specific_properties();
      ::kentik::cloud_export::v202210::IbmProperties* temp = cloud_specific_properties_.ibm_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    cloud_specific_properties_.ibm_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::cloud_export::v202210::IbmProperties& CloudExport::_internal_ibm() const {
  return _internal_has_ibm()
      ? *cloud_specific_properties_.ibm_
      : *reinterpret_cast< ::kentik::cloud_export::v202210::IbmProperties*>(&::kentik::cloud_export::v202210::_IbmProperties_default_instance_);
}
inline const ::kentik::cloud_export::v202210::IbmProperties& CloudExport::ibm() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.CloudExport.ibm)
  return _internal_ibm();
}
inline ::kentik::cloud_export::v202210::IbmProperties* CloudExport::unsafe_arena_release_ibm() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202210.CloudExport.ibm)
  if (_internal_has_ibm()) {
    clear_has_cloud_specific_properties();
    ::kentik::cloud_export::v202210::IbmProperties* temp = cloud_specific_properties_.ibm_;
    cloud_specific_properties_.ibm_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CloudExport::unsafe_arena_set_allocated_ibm(::kentik::cloud_export::v202210::IbmProperties* ibm) {
  clear_cloud_specific_properties();
  if (ibm) {
    set_has_ibm();
    cloud_specific_properties_.ibm_ = ibm;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.CloudExport.ibm)
}
inline ::kentik::cloud_export::v202210::IbmProperties* CloudExport::_internal_mutable_ibm() {
  if (!_internal_has_ibm()) {
    clear_cloud_specific_properties();
    set_has_ibm();
    cloud_specific_properties_.ibm_ = CreateMaybeMessage< ::kentik::cloud_export::v202210::IbmProperties >(GetArena());
  }
  return cloud_specific_properties_.ibm_;
}
inline ::kentik::cloud_export::v202210::IbmProperties* CloudExport::mutable_ibm() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.CloudExport.ibm)
  return _internal_mutable_ibm();
}

// .kentik.cloud_export.v202210.CloudExportStatus current_status = 13[json_name = "currentStatus", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool CloudExport::_internal_has_current_status() const {
  return this != internal_default_instance() && current_status_ != nullptr;
}
inline bool CloudExport::has_current_status() const {
  return _internal_has_current_status();
}
inline void CloudExport::clear_current_status() {
  if (GetArena() == nullptr && current_status_ != nullptr) {
    delete current_status_;
  }
  current_status_ = nullptr;
}
inline const ::kentik::cloud_export::v202210::CloudExportStatus& CloudExport::_internal_current_status() const {
  const ::kentik::cloud_export::v202210::CloudExportStatus* p = current_status_;
  return p != nullptr ? *p : *reinterpret_cast<const ::kentik::cloud_export::v202210::CloudExportStatus*>(
      &::kentik::cloud_export::v202210::_CloudExportStatus_default_instance_);
}
inline const ::kentik::cloud_export::v202210::CloudExportStatus& CloudExport::current_status() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.CloudExport.current_status)
  return _internal_current_status();
}
inline void CloudExport::unsafe_arena_set_allocated_current_status(
    ::kentik::cloud_export::v202210::CloudExportStatus* current_status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(current_status_);
  }
  current_status_ = current_status;
  if (current_status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.CloudExport.current_status)
}
inline ::kentik::cloud_export::v202210::CloudExportStatus* CloudExport::release_current_status() {
  auto temp = unsafe_arena_release_current_status();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::kentik::cloud_export::v202210::CloudExportStatus* CloudExport::unsafe_arena_release_current_status() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.CloudExport.current_status)
  
  ::kentik::cloud_export::v202210::CloudExportStatus* temp = current_status_;
  current_status_ = nullptr;
  return temp;
}
inline ::kentik::cloud_export::v202210::CloudExportStatus* CloudExport::_internal_mutable_current_status() {
  
  if (current_status_ == nullptr) {
    auto* p = CreateMaybeMessage<::kentik::cloud_export::v202210::CloudExportStatus>(GetArena());
    current_status_ = p;
  }
  return current_status_;
}
inline ::kentik::cloud_export::v202210::CloudExportStatus* CloudExport::mutable_current_status() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.CloudExport.current_status)
  return _internal_mutable_current_status();
}
inline void CloudExport::set_allocated_current_status(::kentik::cloud_export::v202210::CloudExportStatus* current_status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete current_status_;
  }
  if (current_status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(current_status);
    if (message_arena != submessage_arena) {
      current_status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, current_status, submessage_arena);
    }
    
  } else {
    
  }
  current_status_ = current_status;
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.CloudExport.current_status)
}

// .google.protobuf.Timestamp cdate = 14[json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool CloudExport::_internal_has_cdate() const {
  return this != internal_default_instance() && cdate_ != nullptr;
}
inline bool CloudExport::has_cdate() const {
  return _internal_has_cdate();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& CloudExport::_internal_cdate() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = cdate_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& CloudExport::cdate() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.CloudExport.cdate)
  return _internal_cdate();
}
inline void CloudExport::unsafe_arena_set_allocated_cdate(
    PROTOBUF_NAMESPACE_ID::Timestamp* cdate) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cdate_);
  }
  cdate_ = cdate;
  if (cdate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.CloudExport.cdate)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CloudExport::release_cdate() {
  auto temp = unsafe_arena_release_cdate();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CloudExport::unsafe_arena_release_cdate() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.CloudExport.cdate)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = cdate_;
  cdate_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CloudExport::_internal_mutable_cdate() {
  
  if (cdate_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    cdate_ = p;
  }
  return cdate_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CloudExport::mutable_cdate() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.CloudExport.cdate)
  return _internal_mutable_cdate();
}
inline void CloudExport::set_allocated_cdate(PROTOBUF_NAMESPACE_ID::Timestamp* cdate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cdate_);
  }
  if (cdate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cdate)->GetArena();
    if (message_arena != submessage_arena) {
      cdate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cdate, submessage_arena);
    }
    
  } else {
    
  }
  cdate_ = cdate;
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.CloudExport.cdate)
}

// .google.protobuf.Timestamp edate = 15[json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool CloudExport::_internal_has_edate() const {
  return this != internal_default_instance() && edate_ != nullptr;
}
inline bool CloudExport::has_edate() const {
  return _internal_has_edate();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& CloudExport::_internal_edate() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = edate_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& CloudExport::edate() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.CloudExport.edate)
  return _internal_edate();
}
inline void CloudExport::unsafe_arena_set_allocated_edate(
    PROTOBUF_NAMESPACE_ID::Timestamp* edate) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(edate_);
  }
  edate_ = edate;
  if (edate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.CloudExport.edate)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CloudExport::release_edate() {
  auto temp = unsafe_arena_release_edate();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CloudExport::unsafe_arena_release_edate() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.CloudExport.edate)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = edate_;
  edate_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CloudExport::_internal_mutable_edate() {
  
  if (edate_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    edate_ = p;
  }
  return edate_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CloudExport::mutable_edate() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.CloudExport.edate)
  return _internal_mutable_edate();
}
inline void CloudExport::set_allocated_edate(PROTOBUF_NAMESPACE_ID::Timestamp* edate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(edate_);
  }
  if (edate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(edate)->GetArena();
    if (message_arena != submessage_arena) {
      edate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, edate, submessage_arena);
    }
    
  } else {
    
  }
  edate_ = edate;
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.CloudExport.edate)
}

inline bool CloudExport::has_cloud_specific_properties() const {
  return cloud_specific_properties_case() != CLOUD_SPECIFIC_PROPERTIES_NOT_SET;
}
inline void CloudExport::clear_has_cloud_specific_properties() {
  _oneof_case_[0] = CLOUD_SPECIFIC_PROPERTIES_NOT_SET;
}
inline CloudExport::CloudSpecificPropertiesCase CloudExport::cloud_specific_properties_case() const {
  return CloudExport::CloudSpecificPropertiesCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// AwsProperties

// string bucket = 1[json_name = "bucket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void AwsProperties::clear_bucket() {
  bucket_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& AwsProperties::bucket() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.AwsProperties.bucket)
  return _internal_bucket();
}
inline void AwsProperties::set_bucket(const std::string& value) {
  _internal_set_bucket(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.AwsProperties.bucket)
}
inline std::string* AwsProperties::mutable_bucket() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.AwsProperties.bucket)
  return _internal_mutable_bucket();
}
inline const std::string& AwsProperties::_internal_bucket() const {
  return bucket_.Get();
}
inline void AwsProperties::_internal_set_bucket(const std::string& value) {
  
  bucket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void AwsProperties::set_bucket(std::string&& value) {
  
  bucket_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cloud_export.v202210.AwsProperties.bucket)
}
inline void AwsProperties::set_bucket(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bucket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cloud_export.v202210.AwsProperties.bucket)
}
inline void AwsProperties::set_bucket(const char* value,
    size_t size) {
  
  bucket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cloud_export.v202210.AwsProperties.bucket)
}
inline std::string* AwsProperties::_internal_mutable_bucket() {
  
  return bucket_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* AwsProperties::release_bucket() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.AwsProperties.bucket)
  return bucket_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AwsProperties::set_allocated_bucket(std::string* bucket) {
  if (bucket != nullptr) {
    
  } else {
    
  }
  bucket_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bucket,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.AwsProperties.bucket)
}
inline std::string* AwsProperties::unsafe_arena_release_bucket() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202210.AwsProperties.bucket)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return bucket_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void AwsProperties::unsafe_arena_set_allocated_bucket(
    std::string* bucket) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (bucket != nullptr) {
    
  } else {
    
  }
  bucket_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      bucket, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.AwsProperties.bucket)
}

// string iam_role_arn = 2[json_name = "iamRoleArn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void AwsProperties::clear_iam_role_arn() {
  iam_role_arn_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& AwsProperties::iam_role_arn() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.AwsProperties.iam_role_arn)
  return _internal_iam_role_arn();
}
inline void AwsProperties::set_iam_role_arn(const std::string& value) {
  _internal_set_iam_role_arn(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.AwsProperties.iam_role_arn)
}
inline std::string* AwsProperties::mutable_iam_role_arn() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.AwsProperties.iam_role_arn)
  return _internal_mutable_iam_role_arn();
}
inline const std::string& AwsProperties::_internal_iam_role_arn() const {
  return iam_role_arn_.Get();
}
inline void AwsProperties::_internal_set_iam_role_arn(const std::string& value) {
  
  iam_role_arn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void AwsProperties::set_iam_role_arn(std::string&& value) {
  
  iam_role_arn_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cloud_export.v202210.AwsProperties.iam_role_arn)
}
inline void AwsProperties::set_iam_role_arn(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  iam_role_arn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cloud_export.v202210.AwsProperties.iam_role_arn)
}
inline void AwsProperties::set_iam_role_arn(const char* value,
    size_t size) {
  
  iam_role_arn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cloud_export.v202210.AwsProperties.iam_role_arn)
}
inline std::string* AwsProperties::_internal_mutable_iam_role_arn() {
  
  return iam_role_arn_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* AwsProperties::release_iam_role_arn() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.AwsProperties.iam_role_arn)
  return iam_role_arn_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AwsProperties::set_allocated_iam_role_arn(std::string* iam_role_arn) {
  if (iam_role_arn != nullptr) {
    
  } else {
    
  }
  iam_role_arn_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), iam_role_arn,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.AwsProperties.iam_role_arn)
}
inline std::string* AwsProperties::unsafe_arena_release_iam_role_arn() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202210.AwsProperties.iam_role_arn)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return iam_role_arn_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void AwsProperties::unsafe_arena_set_allocated_iam_role_arn(
    std::string* iam_role_arn) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (iam_role_arn != nullptr) {
    
  } else {
    
  }
  iam_role_arn_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      iam_role_arn, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.AwsProperties.iam_role_arn)
}

// string region = 3[json_name = "region", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void AwsProperties::clear_region() {
  region_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& AwsProperties::region() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.AwsProperties.region)
  return _internal_region();
}
inline void AwsProperties::set_region(const std::string& value) {
  _internal_set_region(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.AwsProperties.region)
}
inline std::string* AwsProperties::mutable_region() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.AwsProperties.region)
  return _internal_mutable_region();
}
inline const std::string& AwsProperties::_internal_region() const {
  return region_.Get();
}
inline void AwsProperties::_internal_set_region(const std::string& value) {
  
  region_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void AwsProperties::set_region(std::string&& value) {
  
  region_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cloud_export.v202210.AwsProperties.region)
}
inline void AwsProperties::set_region(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  region_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cloud_export.v202210.AwsProperties.region)
}
inline void AwsProperties::set_region(const char* value,
    size_t size) {
  
  region_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cloud_export.v202210.AwsProperties.region)
}
inline std::string* AwsProperties::_internal_mutable_region() {
  
  return region_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* AwsProperties::release_region() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.AwsProperties.region)
  return region_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AwsProperties::set_allocated_region(std::string* region) {
  if (region != nullptr) {
    
  } else {
    
  }
  region_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), region,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.AwsProperties.region)
}
inline std::string* AwsProperties::unsafe_arena_release_region() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202210.AwsProperties.region)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return region_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void AwsProperties::unsafe_arena_set_allocated_region(
    std::string* region) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (region != nullptr) {
    
  } else {
    
  }
  region_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      region, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.AwsProperties.region)
}

// bool delete_after_read = 4[json_name = "deleteAfterRead", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void AwsProperties::clear_delete_after_read() {
  delete_after_read_ = false;
}
inline bool AwsProperties::_internal_delete_after_read() const {
  return delete_after_read_;
}
inline bool AwsProperties::delete_after_read() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.AwsProperties.delete_after_read)
  return _internal_delete_after_read();
}
inline void AwsProperties::_internal_set_delete_after_read(bool value) {
  
  delete_after_read_ = value;
}
inline void AwsProperties::set_delete_after_read(bool value) {
  _internal_set_delete_after_read(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.AwsProperties.delete_after_read)
}

// bool metadata_only = 5[json_name = "metadataOnly", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void AwsProperties::clear_metadata_only() {
  metadata_only_ = false;
}
inline bool AwsProperties::_internal_metadata_only() const {
  return metadata_only_;
}
inline bool AwsProperties::metadata_only() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.AwsProperties.metadata_only)
  return _internal_metadata_only();
}
inline void AwsProperties::_internal_set_metadata_only(bool value) {
  
  metadata_only_ = value;
}
inline void AwsProperties::set_metadata_only(bool value) {
  _internal_set_metadata_only(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.AwsProperties.metadata_only)
}

// -------------------------------------------------------------------

// AzureProperties

// string location = 1[json_name = "location", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void AzureProperties::clear_location() {
  location_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& AzureProperties::location() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.AzureProperties.location)
  return _internal_location();
}
inline void AzureProperties::set_location(const std::string& value) {
  _internal_set_location(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.AzureProperties.location)
}
inline std::string* AzureProperties::mutable_location() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.AzureProperties.location)
  return _internal_mutable_location();
}
inline const std::string& AzureProperties::_internal_location() const {
  return location_.Get();
}
inline void AzureProperties::_internal_set_location(const std::string& value) {
  
  location_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void AzureProperties::set_location(std::string&& value) {
  
  location_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cloud_export.v202210.AzureProperties.location)
}
inline void AzureProperties::set_location(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  location_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cloud_export.v202210.AzureProperties.location)
}
inline void AzureProperties::set_location(const char* value,
    size_t size) {
  
  location_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cloud_export.v202210.AzureProperties.location)
}
inline std::string* AzureProperties::_internal_mutable_location() {
  
  return location_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* AzureProperties::release_location() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.AzureProperties.location)
  return location_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AzureProperties::set_allocated_location(std::string* location) {
  if (location != nullptr) {
    
  } else {
    
  }
  location_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), location,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.AzureProperties.location)
}
inline std::string* AzureProperties::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202210.AzureProperties.location)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return location_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void AzureProperties::unsafe_arena_set_allocated_location(
    std::string* location) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (location != nullptr) {
    
  } else {
    
  }
  location_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      location, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.AzureProperties.location)
}

// string resource_group = 2[json_name = "resourceGroup", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void AzureProperties::clear_resource_group() {
  resource_group_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& AzureProperties::resource_group() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.AzureProperties.resource_group)
  return _internal_resource_group();
}
inline void AzureProperties::set_resource_group(const std::string& value) {
  _internal_set_resource_group(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.AzureProperties.resource_group)
}
inline std::string* AzureProperties::mutable_resource_group() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.AzureProperties.resource_group)
  return _internal_mutable_resource_group();
}
inline const std::string& AzureProperties::_internal_resource_group() const {
  return resource_group_.Get();
}
inline void AzureProperties::_internal_set_resource_group(const std::string& value) {
  
  resource_group_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void AzureProperties::set_resource_group(std::string&& value) {
  
  resource_group_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cloud_export.v202210.AzureProperties.resource_group)
}
inline void AzureProperties::set_resource_group(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  resource_group_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cloud_export.v202210.AzureProperties.resource_group)
}
inline void AzureProperties::set_resource_group(const char* value,
    size_t size) {
  
  resource_group_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cloud_export.v202210.AzureProperties.resource_group)
}
inline std::string* AzureProperties::_internal_mutable_resource_group() {
  
  return resource_group_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* AzureProperties::release_resource_group() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.AzureProperties.resource_group)
  return resource_group_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AzureProperties::set_allocated_resource_group(std::string* resource_group) {
  if (resource_group != nullptr) {
    
  } else {
    
  }
  resource_group_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), resource_group,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.AzureProperties.resource_group)
}
inline std::string* AzureProperties::unsafe_arena_release_resource_group() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202210.AzureProperties.resource_group)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return resource_group_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void AzureProperties::unsafe_arena_set_allocated_resource_group(
    std::string* resource_group) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (resource_group != nullptr) {
    
  } else {
    
  }
  resource_group_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      resource_group, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.AzureProperties.resource_group)
}

// string storage_account = 3[json_name = "storageAccount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void AzureProperties::clear_storage_account() {
  storage_account_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& AzureProperties::storage_account() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.AzureProperties.storage_account)
  return _internal_storage_account();
}
inline void AzureProperties::set_storage_account(const std::string& value) {
  _internal_set_storage_account(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.AzureProperties.storage_account)
}
inline std::string* AzureProperties::mutable_storage_account() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.AzureProperties.storage_account)
  return _internal_mutable_storage_account();
}
inline const std::string& AzureProperties::_internal_storage_account() const {
  return storage_account_.Get();
}
inline void AzureProperties::_internal_set_storage_account(const std::string& value) {
  
  storage_account_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void AzureProperties::set_storage_account(std::string&& value) {
  
  storage_account_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cloud_export.v202210.AzureProperties.storage_account)
}
inline void AzureProperties::set_storage_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  storage_account_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cloud_export.v202210.AzureProperties.storage_account)
}
inline void AzureProperties::set_storage_account(const char* value,
    size_t size) {
  
  storage_account_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cloud_export.v202210.AzureProperties.storage_account)
}
inline std::string* AzureProperties::_internal_mutable_storage_account() {
  
  return storage_account_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* AzureProperties::release_storage_account() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.AzureProperties.storage_account)
  return storage_account_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AzureProperties::set_allocated_storage_account(std::string* storage_account) {
  if (storage_account != nullptr) {
    
  } else {
    
  }
  storage_account_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), storage_account,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.AzureProperties.storage_account)
}
inline std::string* AzureProperties::unsafe_arena_release_storage_account() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202210.AzureProperties.storage_account)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return storage_account_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void AzureProperties::unsafe_arena_set_allocated_storage_account(
    std::string* storage_account) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (storage_account != nullptr) {
    
  } else {
    
  }
  storage_account_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      storage_account, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.AzureProperties.storage_account)
}

// string subscription_id = 4[json_name = "subscriptionId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void AzureProperties::clear_subscription_id() {
  subscription_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& AzureProperties::subscription_id() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.AzureProperties.subscription_id)
  return _internal_subscription_id();
}
inline void AzureProperties::set_subscription_id(const std::string& value) {
  _internal_set_subscription_id(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.AzureProperties.subscription_id)
}
inline std::string* AzureProperties::mutable_subscription_id() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.AzureProperties.subscription_id)
  return _internal_mutable_subscription_id();
}
inline const std::string& AzureProperties::_internal_subscription_id() const {
  return subscription_id_.Get();
}
inline void AzureProperties::_internal_set_subscription_id(const std::string& value) {
  
  subscription_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void AzureProperties::set_subscription_id(std::string&& value) {
  
  subscription_id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cloud_export.v202210.AzureProperties.subscription_id)
}
inline void AzureProperties::set_subscription_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  subscription_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cloud_export.v202210.AzureProperties.subscription_id)
}
inline void AzureProperties::set_subscription_id(const char* value,
    size_t size) {
  
  subscription_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cloud_export.v202210.AzureProperties.subscription_id)
}
inline std::string* AzureProperties::_internal_mutable_subscription_id() {
  
  return subscription_id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* AzureProperties::release_subscription_id() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.AzureProperties.subscription_id)
  return subscription_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AzureProperties::set_allocated_subscription_id(std::string* subscription_id) {
  if (subscription_id != nullptr) {
    
  } else {
    
  }
  subscription_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), subscription_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.AzureProperties.subscription_id)
}
inline std::string* AzureProperties::unsafe_arena_release_subscription_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202210.AzureProperties.subscription_id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return subscription_id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void AzureProperties::unsafe_arena_set_allocated_subscription_id(
    std::string* subscription_id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (subscription_id != nullptr) {
    
  } else {
    
  }
  subscription_id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      subscription_id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.AzureProperties.subscription_id)
}

// bool security_principal_enabled = 5[json_name = "securityPrincipalEnabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void AzureProperties::clear_security_principal_enabled() {
  security_principal_enabled_ = false;
}
inline bool AzureProperties::_internal_security_principal_enabled() const {
  return security_principal_enabled_;
}
inline bool AzureProperties::security_principal_enabled() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.AzureProperties.security_principal_enabled)
  return _internal_security_principal_enabled();
}
inline void AzureProperties::_internal_set_security_principal_enabled(bool value) {
  
  security_principal_enabled_ = value;
}
inline void AzureProperties::set_security_principal_enabled(bool value) {
  _internal_set_security_principal_enabled(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.AzureProperties.security_principal_enabled)
}

// -------------------------------------------------------------------

// GceProperties

// string project = 1[json_name = "project", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void GceProperties::clear_project() {
  project_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& GceProperties::project() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.GceProperties.project)
  return _internal_project();
}
inline void GceProperties::set_project(const std::string& value) {
  _internal_set_project(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.GceProperties.project)
}
inline std::string* GceProperties::mutable_project() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.GceProperties.project)
  return _internal_mutable_project();
}
inline const std::string& GceProperties::_internal_project() const {
  return project_.Get();
}
inline void GceProperties::_internal_set_project(const std::string& value) {
  
  project_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void GceProperties::set_project(std::string&& value) {
  
  project_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cloud_export.v202210.GceProperties.project)
}
inline void GceProperties::set_project(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cloud_export.v202210.GceProperties.project)
}
inline void GceProperties::set_project(const char* value,
    size_t size) {
  
  project_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cloud_export.v202210.GceProperties.project)
}
inline std::string* GceProperties::_internal_mutable_project() {
  
  return project_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* GceProperties::release_project() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.GceProperties.project)
  return project_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GceProperties::set_allocated_project(std::string* project) {
  if (project != nullptr) {
    
  } else {
    
  }
  project_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), project,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.GceProperties.project)
}
inline std::string* GceProperties::unsafe_arena_release_project() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202210.GceProperties.project)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return project_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void GceProperties::unsafe_arena_set_allocated_project(
    std::string* project) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (project != nullptr) {
    
  } else {
    
  }
  project_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      project, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.GceProperties.project)
}

// string subscription = 2[json_name = "subscription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void GceProperties::clear_subscription() {
  subscription_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& GceProperties::subscription() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.GceProperties.subscription)
  return _internal_subscription();
}
inline void GceProperties::set_subscription(const std::string& value) {
  _internal_set_subscription(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.GceProperties.subscription)
}
inline std::string* GceProperties::mutable_subscription() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.GceProperties.subscription)
  return _internal_mutable_subscription();
}
inline const std::string& GceProperties::_internal_subscription() const {
  return subscription_.Get();
}
inline void GceProperties::_internal_set_subscription(const std::string& value) {
  
  subscription_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void GceProperties::set_subscription(std::string&& value) {
  
  subscription_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cloud_export.v202210.GceProperties.subscription)
}
inline void GceProperties::set_subscription(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  subscription_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cloud_export.v202210.GceProperties.subscription)
}
inline void GceProperties::set_subscription(const char* value,
    size_t size) {
  
  subscription_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cloud_export.v202210.GceProperties.subscription)
}
inline std::string* GceProperties::_internal_mutable_subscription() {
  
  return subscription_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* GceProperties::release_subscription() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.GceProperties.subscription)
  return subscription_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GceProperties::set_allocated_subscription(std::string* subscription) {
  if (subscription != nullptr) {
    
  } else {
    
  }
  subscription_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), subscription,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.GceProperties.subscription)
}
inline std::string* GceProperties::unsafe_arena_release_subscription() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202210.GceProperties.subscription)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return subscription_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void GceProperties::unsafe_arena_set_allocated_subscription(
    std::string* subscription) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (subscription != nullptr) {
    
  } else {
    
  }
  subscription_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      subscription, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.GceProperties.subscription)
}

// -------------------------------------------------------------------

// IbmProperties

// string bucket = 1[json_name = "bucket", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void IbmProperties::clear_bucket() {
  bucket_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& IbmProperties::bucket() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.IbmProperties.bucket)
  return _internal_bucket();
}
inline void IbmProperties::set_bucket(const std::string& value) {
  _internal_set_bucket(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.IbmProperties.bucket)
}
inline std::string* IbmProperties::mutable_bucket() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.IbmProperties.bucket)
  return _internal_mutable_bucket();
}
inline const std::string& IbmProperties::_internal_bucket() const {
  return bucket_.Get();
}
inline void IbmProperties::_internal_set_bucket(const std::string& value) {
  
  bucket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void IbmProperties::set_bucket(std::string&& value) {
  
  bucket_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cloud_export.v202210.IbmProperties.bucket)
}
inline void IbmProperties::set_bucket(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bucket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cloud_export.v202210.IbmProperties.bucket)
}
inline void IbmProperties::set_bucket(const char* value,
    size_t size) {
  
  bucket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cloud_export.v202210.IbmProperties.bucket)
}
inline std::string* IbmProperties::_internal_mutable_bucket() {
  
  return bucket_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* IbmProperties::release_bucket() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.IbmProperties.bucket)
  return bucket_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void IbmProperties::set_allocated_bucket(std::string* bucket) {
  if (bucket != nullptr) {
    
  } else {
    
  }
  bucket_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bucket,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.IbmProperties.bucket)
}
inline std::string* IbmProperties::unsafe_arena_release_bucket() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202210.IbmProperties.bucket)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return bucket_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void IbmProperties::unsafe_arena_set_allocated_bucket(
    std::string* bucket) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (bucket != nullptr) {
    
  } else {
    
  }
  bucket_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      bucket, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.IbmProperties.bucket)
}

// -------------------------------------------------------------------

// CloudExportStatus

// string status = 1[json_name = "status", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CloudExportStatus::clear_status() {
  status_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CloudExportStatus::status() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.CloudExportStatus.status)
  return _internal_status();
}
inline void CloudExportStatus::set_status(const std::string& value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.CloudExportStatus.status)
}
inline std::string* CloudExportStatus::mutable_status() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.CloudExportStatus.status)
  return _internal_mutable_status();
}
inline const std::string& CloudExportStatus::_internal_status() const {
  return status_.Get();
}
inline void CloudExportStatus::_internal_set_status(const std::string& value) {
  
  status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CloudExportStatus::set_status(std::string&& value) {
  
  status_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cloud_export.v202210.CloudExportStatus.status)
}
inline void CloudExportStatus::set_status(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cloud_export.v202210.CloudExportStatus.status)
}
inline void CloudExportStatus::set_status(const char* value,
    size_t size) {
  
  status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cloud_export.v202210.CloudExportStatus.status)
}
inline std::string* CloudExportStatus::_internal_mutable_status() {
  
  return status_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CloudExportStatus::release_status() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.CloudExportStatus.status)
  return status_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CloudExportStatus::set_allocated_status(std::string* status) {
  if (status != nullptr) {
    
  } else {
    
  }
  status_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), status,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.CloudExportStatus.status)
}
inline std::string* CloudExportStatus::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202210.CloudExportStatus.status)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return status_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CloudExportStatus::unsafe_arena_set_allocated_status(
    std::string* status) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (status != nullptr) {
    
  } else {
    
  }
  status_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      status, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.CloudExportStatus.status)
}

// string error_message = 2[json_name = "errorMessage", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CloudExportStatus::clear_error_message() {
  error_message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CloudExportStatus::error_message() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.CloudExportStatus.error_message)
  return _internal_error_message();
}
inline void CloudExportStatus::set_error_message(const std::string& value) {
  _internal_set_error_message(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.CloudExportStatus.error_message)
}
inline std::string* CloudExportStatus::mutable_error_message() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.CloudExportStatus.error_message)
  return _internal_mutable_error_message();
}
inline const std::string& CloudExportStatus::_internal_error_message() const {
  return error_message_.Get();
}
inline void CloudExportStatus::_internal_set_error_message(const std::string& value) {
  
  error_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CloudExportStatus::set_error_message(std::string&& value) {
  
  error_message_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cloud_export.v202210.CloudExportStatus.error_message)
}
inline void CloudExportStatus::set_error_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  error_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cloud_export.v202210.CloudExportStatus.error_message)
}
inline void CloudExportStatus::set_error_message(const char* value,
    size_t size) {
  
  error_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cloud_export.v202210.CloudExportStatus.error_message)
}
inline std::string* CloudExportStatus::_internal_mutable_error_message() {
  
  return error_message_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CloudExportStatus::release_error_message() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.CloudExportStatus.error_message)
  return error_message_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CloudExportStatus::set_allocated_error_message(std::string* error_message) {
  if (error_message != nullptr) {
    
  } else {
    
  }
  error_message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), error_message,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.CloudExportStatus.error_message)
}
inline std::string* CloudExportStatus::unsafe_arena_release_error_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202210.CloudExportStatus.error_message)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return error_message_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CloudExportStatus::unsafe_arena_set_allocated_error_message(
    std::string* error_message) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (error_message != nullptr) {
    
  } else {
    
  }
  error_message_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      error_message, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.CloudExportStatus.error_message)
}

// bool flow_found = 3[json_name = "flowFound", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CloudExportStatus::clear_flow_found() {
  flow_found_ = false;
}
inline bool CloudExportStatus::_internal_flow_found() const {
  return flow_found_;
}
inline bool CloudExportStatus::flow_found() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.CloudExportStatus.flow_found)
  return _internal_flow_found();
}
inline void CloudExportStatus::_internal_set_flow_found(bool value) {
  
  flow_found_ = value;
}
inline void CloudExportStatus::set_flow_found(bool value) {
  _internal_set_flow_found(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.CloudExportStatus.flow_found)
}

// bool api_access = 4[json_name = "apiAccess", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CloudExportStatus::clear_api_access() {
  api_access_ = false;
}
inline bool CloudExportStatus::_internal_api_access() const {
  return api_access_;
}
inline bool CloudExportStatus::api_access() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.CloudExportStatus.api_access)
  return _internal_api_access();
}
inline void CloudExportStatus::_internal_set_api_access(bool value) {
  
  api_access_ = value;
}
inline void CloudExportStatus::set_api_access(bool value) {
  _internal_set_api_access(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.CloudExportStatus.api_access)
}

// bool storage_account_access = 5[json_name = "storageAccountAccess", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CloudExportStatus::clear_storage_account_access() {
  storage_account_access_ = false;
}
inline bool CloudExportStatus::_internal_storage_account_access() const {
  return storage_account_access_;
}
inline bool CloudExportStatus::storage_account_access() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.CloudExportStatus.storage_account_access)
  return _internal_storage_account_access();
}
inline void CloudExportStatus::_internal_set_storage_account_access(bool value) {
  
  storage_account_access_ = value;
}
inline void CloudExportStatus::set_storage_account_access(bool value) {
  _internal_set_storage_account_access(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.CloudExportStatus.storage_account_access)
}

// -------------------------------------------------------------------

// CreateCloudExportRequest

// .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool CreateCloudExportRequest::_internal_has_export_() const {
  return this != internal_default_instance() && export__ != nullptr;
}
inline bool CreateCloudExportRequest::has_export_() const {
  return _internal_has_export_();
}
inline void CreateCloudExportRequest::clear_export_() {
  if (GetArena() == nullptr && export__ != nullptr) {
    delete export__;
  }
  export__ = nullptr;
}
inline const ::kentik::cloud_export::v202210::CloudExport& CreateCloudExportRequest::_internal_export_() const {
  const ::kentik::cloud_export::v202210::CloudExport* p = export__;
  return p != nullptr ? *p : *reinterpret_cast<const ::kentik::cloud_export::v202210::CloudExport*>(
      &::kentik::cloud_export::v202210::_CloudExport_default_instance_);
}
inline const ::kentik::cloud_export::v202210::CloudExport& CreateCloudExportRequest::export_() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.CreateCloudExportRequest.export)
  return _internal_export_();
}
inline void CreateCloudExportRequest::unsafe_arena_set_allocated_export_(
    ::kentik::cloud_export::v202210::CloudExport* export_) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(export__);
  }
  export__ = export_;
  if (export_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.CreateCloudExportRequest.export)
}
inline ::kentik::cloud_export::v202210::CloudExport* CreateCloudExportRequest::release_export_() {
  auto temp = unsafe_arena_release_export_();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::kentik::cloud_export::v202210::CloudExport* CreateCloudExportRequest::unsafe_arena_release_export_() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.CreateCloudExportRequest.export)
  
  ::kentik::cloud_export::v202210::CloudExport* temp = export__;
  export__ = nullptr;
  return temp;
}
inline ::kentik::cloud_export::v202210::CloudExport* CreateCloudExportRequest::_internal_mutable_export_() {
  
  if (export__ == nullptr) {
    auto* p = CreateMaybeMessage<::kentik::cloud_export::v202210::CloudExport>(GetArena());
    export__ = p;
  }
  return export__;
}
inline ::kentik::cloud_export::v202210::CloudExport* CreateCloudExportRequest::mutable_export_() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.CreateCloudExportRequest.export)
  return _internal_mutable_export_();
}
inline void CreateCloudExportRequest::set_allocated_export_(::kentik::cloud_export::v202210::CloudExport* export_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete export__;
  }
  if (export_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(export_);
    if (message_arena != submessage_arena) {
      export_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, export_, submessage_arena);
    }
    
  } else {
    
  }
  export__ = export_;
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.CreateCloudExportRequest.export)
}

// -------------------------------------------------------------------

// CreateCloudExportResponse

// .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool CreateCloudExportResponse::_internal_has_export_() const {
  return this != internal_default_instance() && export__ != nullptr;
}
inline bool CreateCloudExportResponse::has_export_() const {
  return _internal_has_export_();
}
inline void CreateCloudExportResponse::clear_export_() {
  if (GetArena() == nullptr && export__ != nullptr) {
    delete export__;
  }
  export__ = nullptr;
}
inline const ::kentik::cloud_export::v202210::CloudExport& CreateCloudExportResponse::_internal_export_() const {
  const ::kentik::cloud_export::v202210::CloudExport* p = export__;
  return p != nullptr ? *p : *reinterpret_cast<const ::kentik::cloud_export::v202210::CloudExport*>(
      &::kentik::cloud_export::v202210::_CloudExport_default_instance_);
}
inline const ::kentik::cloud_export::v202210::CloudExport& CreateCloudExportResponse::export_() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.CreateCloudExportResponse.export)
  return _internal_export_();
}
inline void CreateCloudExportResponse::unsafe_arena_set_allocated_export_(
    ::kentik::cloud_export::v202210::CloudExport* export_) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(export__);
  }
  export__ = export_;
  if (export_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.CreateCloudExportResponse.export)
}
inline ::kentik::cloud_export::v202210::CloudExport* CreateCloudExportResponse::release_export_() {
  auto temp = unsafe_arena_release_export_();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::kentik::cloud_export::v202210::CloudExport* CreateCloudExportResponse::unsafe_arena_release_export_() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.CreateCloudExportResponse.export)
  
  ::kentik::cloud_export::v202210::CloudExport* temp = export__;
  export__ = nullptr;
  return temp;
}
inline ::kentik::cloud_export::v202210::CloudExport* CreateCloudExportResponse::_internal_mutable_export_() {
  
  if (export__ == nullptr) {
    auto* p = CreateMaybeMessage<::kentik::cloud_export::v202210::CloudExport>(GetArena());
    export__ = p;
  }
  return export__;
}
inline ::kentik::cloud_export::v202210::CloudExport* CreateCloudExportResponse::mutable_export_() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.CreateCloudExportResponse.export)
  return _internal_mutable_export_();
}
inline void CreateCloudExportResponse::set_allocated_export_(::kentik::cloud_export::v202210::CloudExport* export_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete export__;
  }
  if (export_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(export_);
    if (message_arena != submessage_arena) {
      export_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, export_, submessage_arena);
    }
    
  } else {
    
  }
  export__ = export_;
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.CreateCloudExportResponse.export)
}

// -------------------------------------------------------------------

// ListCloudExportsRequest

// -------------------------------------------------------------------

// ListCloudExportsResponse

// repeated .kentik.cloud_export.v202210.CloudExport exports = 1[json_name = "exports", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int ListCloudExportsResponse::_internal_exports_size() const {
  return exports_.size();
}
inline int ListCloudExportsResponse::exports_size() const {
  return _internal_exports_size();
}
inline void ListCloudExportsResponse::clear_exports() {
  exports_.Clear();
}
inline ::kentik::cloud_export::v202210::CloudExport* ListCloudExportsResponse::mutable_exports(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.ListCloudExportsResponse.exports)
  return exports_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::cloud_export::v202210::CloudExport >*
ListCloudExportsResponse::mutable_exports() {
  // @@protoc_insertion_point(field_mutable_list:kentik.cloud_export.v202210.ListCloudExportsResponse.exports)
  return &exports_;
}
inline const ::kentik::cloud_export::v202210::CloudExport& ListCloudExportsResponse::_internal_exports(int index) const {
  return exports_.Get(index);
}
inline const ::kentik::cloud_export::v202210::CloudExport& ListCloudExportsResponse::exports(int index) const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.ListCloudExportsResponse.exports)
  return _internal_exports(index);
}
inline ::kentik::cloud_export::v202210::CloudExport* ListCloudExportsResponse::_internal_add_exports() {
  return exports_.Add();
}
inline ::kentik::cloud_export::v202210::CloudExport* ListCloudExportsResponse::add_exports() {
  // @@protoc_insertion_point(field_add:kentik.cloud_export.v202210.ListCloudExportsResponse.exports)
  return _internal_add_exports();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::kentik::cloud_export::v202210::CloudExport >&
ListCloudExportsResponse::exports() const {
  // @@protoc_insertion_point(field_list:kentik.cloud_export.v202210.ListCloudExportsResponse.exports)
  return exports_;
}

// uint32 invalid_exports_count = 2[json_name = "invalidExportsCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void ListCloudExportsResponse::clear_invalid_exports_count() {
  invalid_exports_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ListCloudExportsResponse::_internal_invalid_exports_count() const {
  return invalid_exports_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ListCloudExportsResponse::invalid_exports_count() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.ListCloudExportsResponse.invalid_exports_count)
  return _internal_invalid_exports_count();
}
inline void ListCloudExportsResponse::_internal_set_invalid_exports_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  invalid_exports_count_ = value;
}
inline void ListCloudExportsResponse::set_invalid_exports_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_invalid_exports_count(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.ListCloudExportsResponse.invalid_exports_count)
}

// -------------------------------------------------------------------

// GetCloudExportRequest

// string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void GetCloudExportRequest::clear_id() {
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& GetCloudExportRequest::id() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.GetCloudExportRequest.id)
  return _internal_id();
}
inline void GetCloudExportRequest::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.GetCloudExportRequest.id)
}
inline std::string* GetCloudExportRequest::mutable_id() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.GetCloudExportRequest.id)
  return _internal_mutable_id();
}
inline const std::string& GetCloudExportRequest::_internal_id() const {
  return id_.Get();
}
inline void GetCloudExportRequest::_internal_set_id(const std::string& value) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void GetCloudExportRequest::set_id(std::string&& value) {
  
  id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cloud_export.v202210.GetCloudExportRequest.id)
}
inline void GetCloudExportRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cloud_export.v202210.GetCloudExportRequest.id)
}
inline void GetCloudExportRequest::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cloud_export.v202210.GetCloudExportRequest.id)
}
inline std::string* GetCloudExportRequest::_internal_mutable_id() {
  
  return id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* GetCloudExportRequest::release_id() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.GetCloudExportRequest.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetCloudExportRequest::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.GetCloudExportRequest.id)
}
inline std::string* GetCloudExportRequest::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202210.GetCloudExportRequest.id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void GetCloudExportRequest::unsafe_arena_set_allocated_id(
    std::string* id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (id != nullptr) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.GetCloudExportRequest.id)
}

// -------------------------------------------------------------------

// GetCloudExportResponse

// .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool GetCloudExportResponse::_internal_has_export_() const {
  return this != internal_default_instance() && export__ != nullptr;
}
inline bool GetCloudExportResponse::has_export_() const {
  return _internal_has_export_();
}
inline void GetCloudExportResponse::clear_export_() {
  if (GetArena() == nullptr && export__ != nullptr) {
    delete export__;
  }
  export__ = nullptr;
}
inline const ::kentik::cloud_export::v202210::CloudExport& GetCloudExportResponse::_internal_export_() const {
  const ::kentik::cloud_export::v202210::CloudExport* p = export__;
  return p != nullptr ? *p : *reinterpret_cast<const ::kentik::cloud_export::v202210::CloudExport*>(
      &::kentik::cloud_export::v202210::_CloudExport_default_instance_);
}
inline const ::kentik::cloud_export::v202210::CloudExport& GetCloudExportResponse::export_() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.GetCloudExportResponse.export)
  return _internal_export_();
}
inline void GetCloudExportResponse::unsafe_arena_set_allocated_export_(
    ::kentik::cloud_export::v202210::CloudExport* export_) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(export__);
  }
  export__ = export_;
  if (export_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.GetCloudExportResponse.export)
}
inline ::kentik::cloud_export::v202210::CloudExport* GetCloudExportResponse::release_export_() {
  auto temp = unsafe_arena_release_export_();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::kentik::cloud_export::v202210::CloudExport* GetCloudExportResponse::unsafe_arena_release_export_() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.GetCloudExportResponse.export)
  
  ::kentik::cloud_export::v202210::CloudExport* temp = export__;
  export__ = nullptr;
  return temp;
}
inline ::kentik::cloud_export::v202210::CloudExport* GetCloudExportResponse::_internal_mutable_export_() {
  
  if (export__ == nullptr) {
    auto* p = CreateMaybeMessage<::kentik::cloud_export::v202210::CloudExport>(GetArena());
    export__ = p;
  }
  return export__;
}
inline ::kentik::cloud_export::v202210::CloudExport* GetCloudExportResponse::mutable_export_() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.GetCloudExportResponse.export)
  return _internal_mutable_export_();
}
inline void GetCloudExportResponse::set_allocated_export_(::kentik::cloud_export::v202210::CloudExport* export_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete export__;
  }
  if (export_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(export_);
    if (message_arena != submessage_arena) {
      export_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, export_, submessage_arena);
    }
    
  } else {
    
  }
  export__ = export_;
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.GetCloudExportResponse.export)
}

// -------------------------------------------------------------------

// UpdateCloudExportRequest

// .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool UpdateCloudExportRequest::_internal_has_export_() const {
  return this != internal_default_instance() && export__ != nullptr;
}
inline bool UpdateCloudExportRequest::has_export_() const {
  return _internal_has_export_();
}
inline void UpdateCloudExportRequest::clear_export_() {
  if (GetArena() == nullptr && export__ != nullptr) {
    delete export__;
  }
  export__ = nullptr;
}
inline const ::kentik::cloud_export::v202210::CloudExport& UpdateCloudExportRequest::_internal_export_() const {
  const ::kentik::cloud_export::v202210::CloudExport* p = export__;
  return p != nullptr ? *p : *reinterpret_cast<const ::kentik::cloud_export::v202210::CloudExport*>(
      &::kentik::cloud_export::v202210::_CloudExport_default_instance_);
}
inline const ::kentik::cloud_export::v202210::CloudExport& UpdateCloudExportRequest::export_() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.UpdateCloudExportRequest.export)
  return _internal_export_();
}
inline void UpdateCloudExportRequest::unsafe_arena_set_allocated_export_(
    ::kentik::cloud_export::v202210::CloudExport* export_) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(export__);
  }
  export__ = export_;
  if (export_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.UpdateCloudExportRequest.export)
}
inline ::kentik::cloud_export::v202210::CloudExport* UpdateCloudExportRequest::release_export_() {
  auto temp = unsafe_arena_release_export_();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::kentik::cloud_export::v202210::CloudExport* UpdateCloudExportRequest::unsafe_arena_release_export_() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.UpdateCloudExportRequest.export)
  
  ::kentik::cloud_export::v202210::CloudExport* temp = export__;
  export__ = nullptr;
  return temp;
}
inline ::kentik::cloud_export::v202210::CloudExport* UpdateCloudExportRequest::_internal_mutable_export_() {
  
  if (export__ == nullptr) {
    auto* p = CreateMaybeMessage<::kentik::cloud_export::v202210::CloudExport>(GetArena());
    export__ = p;
  }
  return export__;
}
inline ::kentik::cloud_export::v202210::CloudExport* UpdateCloudExportRequest::mutable_export_() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.UpdateCloudExportRequest.export)
  return _internal_mutable_export_();
}
inline void UpdateCloudExportRequest::set_allocated_export_(::kentik::cloud_export::v202210::CloudExport* export_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete export__;
  }
  if (export_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(export_);
    if (message_arena != submessage_arena) {
      export_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, export_, submessage_arena);
    }
    
  } else {
    
  }
  export__ = export_;
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.UpdateCloudExportRequest.export)
}

// -------------------------------------------------------------------

// UpdateCloudExportResponse

// .kentik.cloud_export.v202210.CloudExport export = 1[json_name = "export", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool UpdateCloudExportResponse::_internal_has_export_() const {
  return this != internal_default_instance() && export__ != nullptr;
}
inline bool UpdateCloudExportResponse::has_export_() const {
  return _internal_has_export_();
}
inline void UpdateCloudExportResponse::clear_export_() {
  if (GetArena() == nullptr && export__ != nullptr) {
    delete export__;
  }
  export__ = nullptr;
}
inline const ::kentik::cloud_export::v202210::CloudExport& UpdateCloudExportResponse::_internal_export_() const {
  const ::kentik::cloud_export::v202210::CloudExport* p = export__;
  return p != nullptr ? *p : *reinterpret_cast<const ::kentik::cloud_export::v202210::CloudExport*>(
      &::kentik::cloud_export::v202210::_CloudExport_default_instance_);
}
inline const ::kentik::cloud_export::v202210::CloudExport& UpdateCloudExportResponse::export_() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.UpdateCloudExportResponse.export)
  return _internal_export_();
}
inline void UpdateCloudExportResponse::unsafe_arena_set_allocated_export_(
    ::kentik::cloud_export::v202210::CloudExport* export_) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(export__);
  }
  export__ = export_;
  if (export_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.UpdateCloudExportResponse.export)
}
inline ::kentik::cloud_export::v202210::CloudExport* UpdateCloudExportResponse::release_export_() {
  auto temp = unsafe_arena_release_export_();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::kentik::cloud_export::v202210::CloudExport* UpdateCloudExportResponse::unsafe_arena_release_export_() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.UpdateCloudExportResponse.export)
  
  ::kentik::cloud_export::v202210::CloudExport* temp = export__;
  export__ = nullptr;
  return temp;
}
inline ::kentik::cloud_export::v202210::CloudExport* UpdateCloudExportResponse::_internal_mutable_export_() {
  
  if (export__ == nullptr) {
    auto* p = CreateMaybeMessage<::kentik::cloud_export::v202210::CloudExport>(GetArena());
    export__ = p;
  }
  return export__;
}
inline ::kentik::cloud_export::v202210::CloudExport* UpdateCloudExportResponse::mutable_export_() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.UpdateCloudExportResponse.export)
  return _internal_mutable_export_();
}
inline void UpdateCloudExportResponse::set_allocated_export_(::kentik::cloud_export::v202210::CloudExport* export_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete export__;
  }
  if (export_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(export_);
    if (message_arena != submessage_arena) {
      export_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, export_, submessage_arena);
    }
    
  } else {
    
  }
  export__ = export_;
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.UpdateCloudExportResponse.export)
}

// -------------------------------------------------------------------

// DeleteCloudExportRequest

// string id = 1[json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void DeleteCloudExportRequest::clear_id() {
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& DeleteCloudExportRequest::id() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202210.DeleteCloudExportRequest.id)
  return _internal_id();
}
inline void DeleteCloudExportRequest::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202210.DeleteCloudExportRequest.id)
}
inline std::string* DeleteCloudExportRequest::mutable_id() {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202210.DeleteCloudExportRequest.id)
  return _internal_mutable_id();
}
inline const std::string& DeleteCloudExportRequest::_internal_id() const {
  return id_.Get();
}
inline void DeleteCloudExportRequest::_internal_set_id(const std::string& value) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void DeleteCloudExportRequest::set_id(std::string&& value) {
  
  id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.cloud_export.v202210.DeleteCloudExportRequest.id)
}
inline void DeleteCloudExportRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.cloud_export.v202210.DeleteCloudExportRequest.id)
}
inline void DeleteCloudExportRequest::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.cloud_export.v202210.DeleteCloudExportRequest.id)
}
inline std::string* DeleteCloudExportRequest::_internal_mutable_id() {
  
  return id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* DeleteCloudExportRequest::release_id() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202210.DeleteCloudExportRequest.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DeleteCloudExportRequest::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202210.DeleteCloudExportRequest.id)
}
inline std::string* DeleteCloudExportRequest::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202210.DeleteCloudExportRequest.id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void DeleteCloudExportRequest::unsafe_arena_set_allocated_id(
    std::string* id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (id != nullptr) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202210.DeleteCloudExportRequest.id)
}

// -------------------------------------------------------------------

// DeleteCloudExportResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v202210
}  // namespace cloud_export
}  // namespace kentik

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::kentik::cloud_export::v202210::CloudExportType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::kentik::cloud_export::v202210::CloudExportType>() {
  return ::kentik::cloud_export::v202210::CloudExportType_descriptor();
}
template <> struct is_proto_enum< ::kentik::cloud_export::v202210::CloudProvider> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::kentik::cloud_export::v202210::CloudProvider>() {
  return ::kentik::cloud_export::v202210::CloudProvider_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_kentik_2fcloud_5fexport_2fv202210_2fcloud_5fexport_2eproto
