// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kentik/cloud_export/v202101beta1/cloud_export.proto

#include "kentik/cloud_export/v202101beta1/cloud_export.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BoolValue_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ffield_5fmask_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AwsProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AzureProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BgpProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GceProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IbmProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Status_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
namespace kentik {
namespace cloud_export {
namespace v202101beta1 {
class CloudExportDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CloudExport> _instance;
  const ::kentik::cloud_export::v202101beta1::AwsProperties* aws_;
  const ::kentik::cloud_export::v202101beta1::AzureProperties* azure_;
  const ::kentik::cloud_export::v202101beta1::GceProperties* gce_;
  const ::kentik::cloud_export::v202101beta1::IbmProperties* ibm_;
} _CloudExport_default_instance_;
class BgpPropertiesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BgpProperties> _instance;
} _BgpProperties_default_instance_;
class AwsPropertiesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AwsProperties> _instance;
} _AwsProperties_default_instance_;
class AzurePropertiesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AzureProperties> _instance;
} _AzureProperties_default_instance_;
class GcePropertiesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GceProperties> _instance;
} _GceProperties_default_instance_;
class IbmPropertiesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IbmProperties> _instance;
} _IbmProperties_default_instance_;
class StatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Status> _instance;
} _Status_default_instance_;
class CreateCloudExportRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateCloudExportRequest> _instance;
} _CreateCloudExportRequest_default_instance_;
class CreateCloudExportResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateCloudExportResponse> _instance;
} _CreateCloudExportResponse_default_instance_;
class ListCloudExportRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListCloudExportRequest> _instance;
} _ListCloudExportRequest_default_instance_;
class ListCloudExportResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListCloudExportResponse> _instance;
} _ListCloudExportResponse_default_instance_;
class GetCloudExportRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetCloudExportRequest> _instance;
} _GetCloudExportRequest_default_instance_;
class GetCloudExportResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetCloudExportResponse> _instance;
} _GetCloudExportResponse_default_instance_;
class PatchCloudExportRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PatchCloudExportRequest> _instance;
} _PatchCloudExportRequest_default_instance_;
class PatchCloudExportResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PatchCloudExportResponse> _instance;
} _PatchCloudExportResponse_default_instance_;
class UpdateCloudExportRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateCloudExportRequest> _instance;
} _UpdateCloudExportRequest_default_instance_;
class UpdateCloudExportResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateCloudExportResponse> _instance;
} _UpdateCloudExportResponse_default_instance_;
class DeleteCloudExportRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteCloudExportRequest> _instance;
} _DeleteCloudExportRequest_default_instance_;
class DeleteCloudExportResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteCloudExportResponse> _instance;
} _DeleteCloudExportResponse_default_instance_;
}  // namespace v202101beta1
}  // namespace cloud_export
}  // namespace kentik
static void InitDefaultsscc_info_AwsProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202101beta1::_AwsProperties_default_instance_;
    new (ptr) ::kentik::cloud_export::v202101beta1::AwsProperties();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202101beta1::AwsProperties::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AwsProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AwsProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto}, {}};

static void InitDefaultsscc_info_AzureProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202101beta1::_AzureProperties_default_instance_;
    new (ptr) ::kentik::cloud_export::v202101beta1::AzureProperties();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202101beta1::AzureProperties::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AzureProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AzureProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto}, {}};

static void InitDefaultsscc_info_BgpProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202101beta1::_BgpProperties_default_instance_;
    new (ptr) ::kentik::cloud_export::v202101beta1::BgpProperties();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202101beta1::BgpProperties::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BgpProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BgpProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto}, {}};

static void InitDefaultsscc_info_CloudExport_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202101beta1::_CloudExport_default_instance_;
    new (ptr) ::kentik::cloud_export::v202101beta1::CloudExport();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202101beta1::CloudExport::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 6, 0, InitDefaultsscc_info_CloudExport_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto}, {
      &scc_info_AwsProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
      &scc_info_AzureProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
      &scc_info_GceProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
      &scc_info_IbmProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
      &scc_info_BgpProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
      &scc_info_Status_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,}};

static void InitDefaultsscc_info_CreateCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202101beta1::_CreateCloudExportRequest_default_instance_;
    new (ptr) ::kentik::cloud_export::v202101beta1::CreateCloudExportRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202101beta1::CreateCloudExportRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto}, {
      &scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,}};

static void InitDefaultsscc_info_CreateCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202101beta1::_CreateCloudExportResponse_default_instance_;
    new (ptr) ::kentik::cloud_export::v202101beta1::CreateCloudExportResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202101beta1::CreateCloudExportResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto}, {
      &scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,}};

static void InitDefaultsscc_info_DeleteCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202101beta1::_DeleteCloudExportRequest_default_instance_;
    new (ptr) ::kentik::cloud_export::v202101beta1::DeleteCloudExportRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202101beta1::DeleteCloudExportRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto}, {}};

static void InitDefaultsscc_info_DeleteCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202101beta1::_DeleteCloudExportResponse_default_instance_;
    new (ptr) ::kentik::cloud_export::v202101beta1::DeleteCloudExportResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202101beta1::DeleteCloudExportResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto}, {}};

static void InitDefaultsscc_info_GceProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202101beta1::_GceProperties_default_instance_;
    new (ptr) ::kentik::cloud_export::v202101beta1::GceProperties();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202101beta1::GceProperties::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GceProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GceProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto}, {}};

static void InitDefaultsscc_info_GetCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202101beta1::_GetCloudExportRequest_default_instance_;
    new (ptr) ::kentik::cloud_export::v202101beta1::GetCloudExportRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202101beta1::GetCloudExportRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto}, {}};

static void InitDefaultsscc_info_GetCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202101beta1::_GetCloudExportResponse_default_instance_;
    new (ptr) ::kentik::cloud_export::v202101beta1::GetCloudExportResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202101beta1::GetCloudExportResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto}, {
      &scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,}};

static void InitDefaultsscc_info_IbmProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202101beta1::_IbmProperties_default_instance_;
    new (ptr) ::kentik::cloud_export::v202101beta1::IbmProperties();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202101beta1::IbmProperties::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IbmProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IbmProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto}, {}};

static void InitDefaultsscc_info_ListCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202101beta1::_ListCloudExportRequest_default_instance_;
    new (ptr) ::kentik::cloud_export::v202101beta1::ListCloudExportRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202101beta1::ListCloudExportRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto}, {}};

static void InitDefaultsscc_info_ListCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202101beta1::_ListCloudExportResponse_default_instance_;
    new (ptr) ::kentik::cloud_export::v202101beta1::ListCloudExportResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202101beta1::ListCloudExportResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto}, {
      &scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,}};

static void InitDefaultsscc_info_PatchCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202101beta1::_PatchCloudExportRequest_default_instance_;
    new (ptr) ::kentik::cloud_export::v202101beta1::PatchCloudExportRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202101beta1::PatchCloudExportRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PatchCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_PatchCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto}, {
      &scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
      &scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto.base,}};

static void InitDefaultsscc_info_PatchCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202101beta1::_PatchCloudExportResponse_default_instance_;
    new (ptr) ::kentik::cloud_export::v202101beta1::PatchCloudExportResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202101beta1::PatchCloudExportResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PatchCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PatchCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto}, {
      &scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,}};

static void InitDefaultsscc_info_Status_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202101beta1::_Status_default_instance_;
    new (ptr) ::kentik::cloud_export::v202101beta1::Status();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202101beta1::Status::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Status_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Status_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto}, {
      &scc_info_BoolValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_UpdateCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202101beta1::_UpdateCloudExportRequest_default_instance_;
    new (ptr) ::kentik::cloud_export::v202101beta1::UpdateCloudExportRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202101beta1::UpdateCloudExportRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto}, {
      &scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,}};

static void InitDefaultsscc_info_UpdateCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kentik::cloud_export::v202101beta1::_UpdateCloudExportResponse_default_instance_;
    new (ptr) ::kentik::cloud_export::v202101beta1::UpdateCloudExportResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kentik::cloud_export::v202101beta1::UpdateCloudExportResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto}, {
      &scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto[19];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::CloudExport, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::CloudExport, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::CloudExport, id_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::CloudExport, type_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::CloudExport, enabled_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::CloudExport, name_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::CloudExport, description_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::CloudExport, api_root_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::CloudExport, flow_dest_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::CloudExport, plan_id_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::CloudExport, cloud_provider_),
  offsetof(::kentik::cloud_export::v202101beta1::CloudExportDefaultTypeInternal, aws_),
  offsetof(::kentik::cloud_export::v202101beta1::CloudExportDefaultTypeInternal, azure_),
  offsetof(::kentik::cloud_export::v202101beta1::CloudExportDefaultTypeInternal, gce_),
  offsetof(::kentik::cloud_export::v202101beta1::CloudExportDefaultTypeInternal, ibm_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::CloudExport, bgp_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::CloudExport, current_status_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::CloudExport, properties_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::BgpProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::BgpProperties, apply_bgp_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::BgpProperties, use_bgp_device_id_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::BgpProperties, device_bgp_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::AwsProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::AwsProperties, bucket_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::AwsProperties, iam_role_arn_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::AwsProperties, region_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::AwsProperties, delete_after_read_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::AwsProperties, multiple_buckets_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::AzureProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::AzureProperties, location_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::AzureProperties, resource_group_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::AzureProperties, storage_account_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::AzureProperties, subscription_id_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::AzureProperties, security_principal_enabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::GceProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::GceProperties, project_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::GceProperties, subscription_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::IbmProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::IbmProperties, bucket_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::Status, status_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::Status, error_message_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::Status, flow_found_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::Status, api_access_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::Status, storage_account_access_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::CreateCloudExportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::CreateCloudExportRequest, export__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::CreateCloudExportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::CreateCloudExportResponse, export__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::ListCloudExportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::ListCloudExportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::ListCloudExportResponse, exports_),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::ListCloudExportResponse, invalid_exports_count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::GetCloudExportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::GetCloudExportRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::GetCloudExportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::GetCloudExportResponse, export__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::PatchCloudExportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::PatchCloudExportRequest, export__),
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::PatchCloudExportRequest, mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::PatchCloudExportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::PatchCloudExportResponse, export__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::UpdateCloudExportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::UpdateCloudExportRequest, export__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::UpdateCloudExportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::UpdateCloudExportResponse, export__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::DeleteCloudExportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::DeleteCloudExportRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::kentik::cloud_export::v202101beta1::DeleteCloudExportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::kentik::cloud_export::v202101beta1::CloudExport)},
  { 21, -1, sizeof(::kentik::cloud_export::v202101beta1::BgpProperties)},
  { 29, -1, sizeof(::kentik::cloud_export::v202101beta1::AwsProperties)},
  { 39, -1, sizeof(::kentik::cloud_export::v202101beta1::AzureProperties)},
  { 49, -1, sizeof(::kentik::cloud_export::v202101beta1::GceProperties)},
  { 56, -1, sizeof(::kentik::cloud_export::v202101beta1::IbmProperties)},
  { 62, -1, sizeof(::kentik::cloud_export::v202101beta1::Status)},
  { 72, -1, sizeof(::kentik::cloud_export::v202101beta1::CreateCloudExportRequest)},
  { 78, -1, sizeof(::kentik::cloud_export::v202101beta1::CreateCloudExportResponse)},
  { 84, -1, sizeof(::kentik::cloud_export::v202101beta1::ListCloudExportRequest)},
  { 89, -1, sizeof(::kentik::cloud_export::v202101beta1::ListCloudExportResponse)},
  { 96, -1, sizeof(::kentik::cloud_export::v202101beta1::GetCloudExportRequest)},
  { 102, -1, sizeof(::kentik::cloud_export::v202101beta1::GetCloudExportResponse)},
  { 108, -1, sizeof(::kentik::cloud_export::v202101beta1::PatchCloudExportRequest)},
  { 115, -1, sizeof(::kentik::cloud_export::v202101beta1::PatchCloudExportResponse)},
  { 121, -1, sizeof(::kentik::cloud_export::v202101beta1::UpdateCloudExportRequest)},
  { 127, -1, sizeof(::kentik::cloud_export::v202101beta1::UpdateCloudExportResponse)},
  { 133, -1, sizeof(::kentik::cloud_export::v202101beta1::DeleteCloudExportRequest)},
  { 139, -1, sizeof(::kentik::cloud_export::v202101beta1::DeleteCloudExportResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202101beta1::_CloudExport_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202101beta1::_BgpProperties_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202101beta1::_AwsProperties_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202101beta1::_AzureProperties_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202101beta1::_GceProperties_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202101beta1::_IbmProperties_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202101beta1::_Status_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202101beta1::_CreateCloudExportRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202101beta1::_CreateCloudExportResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202101beta1::_ListCloudExportRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202101beta1::_ListCloudExportResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202101beta1::_GetCloudExportRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202101beta1::_GetCloudExportResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202101beta1::_PatchCloudExportRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202101beta1::_PatchCloudExportResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202101beta1::_UpdateCloudExportRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202101beta1::_UpdateCloudExportResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202101beta1::_DeleteCloudExportRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::kentik::cloud_export::v202101beta1::_DeleteCloudExportResponse_default_instance_),
};

const char descriptor_table_protodef_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n3kentik/cloud_export/v202101beta1/cloud"
  "_export.proto\022 kentik.cloud_export.v2021"
  "01beta1\032\036google/protobuf/wrappers.proto\032"
  "\034google/api/annotations.proto\032\027google/ap"
  "i/client.proto\032 google/protobuf/field_ma"
  "sk.proto\032.protoc-gen-openapiv2/options/a"
  "nnotations.proto\032+kentik/core/v202012alp"
  "ha1/annotations.proto\"\350\005\n\013CloudExport\022\016\n"
  "\002id\030\001 \001(\tR\002id\022E\n\004type\030\017 \001(\01621.kentik.clo"
  "ud_export.v202101beta1.CloudExportTypeR\004"
  "type\022\030\n\007enabled\030\002 \001(\010R\007enabled\022\022\n\004name\030\003"
  " \001(\tR\004name\022 \n\013description\030\004 \001(\tR\013descrip"
  "tion\022\031\n\010api_root\030\005 \001(\tR\007apiRoot\022\033\n\tflow_"
  "dest\030\006 \001(\tR\010flowDest\022\027\n\007plan_id\030\007 \001(\tR\006p"
  "lanId\022%\n\016cloud_provider\030\010 \001(\tR\rcloudProv"
  "ider\022C\n\003aws\030\t \001(\0132/.kentik.cloud_export."
  "v202101beta1.AwsPropertiesH\000R\003aws\022I\n\005azu"
  "re\030\n \001(\01321.kentik.cloud_export.v202101be"
  "ta1.AzurePropertiesH\000R\005azure\022C\n\003gce\030\013 \001("
  "\0132/.kentik.cloud_export.v202101beta1.Gce"
  "PropertiesH\000R\003gce\022C\n\003ibm\030\014 \001(\0132/.kentik."
  "cloud_export.v202101beta1.IbmPropertiesH"
  "\000R\003ibm\022A\n\003bgp\030\r \001(\0132/.kentik.cloud_expor"
  "t.v202101beta1.BgpPropertiesR\003bgp\022O\n\016cur"
  "rent_status\030\016 \001(\0132(.kentik.cloud_export."
  "v202101beta1.StatusR\rcurrentStatusB\014\n\npr"
  "operties\"\177\n\rBgpProperties\022\033\n\tapply_bgp\030\001"
  " \001(\010R\010applyBgp\022)\n\021use_bgp_device_id\030\002 \001("
  "\tR\016useBgpDeviceId\022&\n\017device_bgp_type\030\003 \001"
  "(\tR\rdeviceBgpType\"\270\001\n\rAwsProperties\022\026\n\006b"
  "ucket\030\001 \001(\tR\006bucket\022 \n\014iam_role_arn\030\002 \001("
  "\tR\niamRoleArn\022\026\n\006region\030\003 \001(\tR\006region\022*\n"
  "\021delete_after_read\030\004 \001(\010R\017deleteAfterRea"
  "d\022)\n\020multiple_buckets\030\005 \001(\010R\017multipleBuc"
  "kets\"\344\001\n\017AzureProperties\022\032\n\010location\030\001 \001"
  "(\tR\010location\022%\n\016resource_group\030\002 \001(\tR\rre"
  "sourceGroup\022\'\n\017storage_account\030\003 \001(\tR\016st"
  "orageAccount\022\'\n\017subscription_id\030\004 \001(\tR\016s"
  "ubscriptionId\022<\n\032security_principal_enab"
  "led\030\005 \001(\010R\030securityPrincipalEnabled\"M\n\rG"
  "ceProperties\022\030\n\007project\030\001 \001(\tR\007project\022\""
  "\n\014subscription\030\002 \001(\tR\014subscription\"\'\n\rIb"
  "mProperties\022\026\n\006bucket\030\001 \001(\tR\006bucket\"\215\002\n\006"
  "Status\022\026\n\006status\030\001 \001(\tR\006status\022#\n\rerror_"
  "message\030\002 \001(\tR\014errorMessage\0229\n\nflow_foun"
  "d\030\003 \001(\0132\032.google.protobuf.BoolValueR\tflo"
  "wFound\0229\n\napi_access\030\004 \001(\0132\032.google.prot"
  "obuf.BoolValueR\tapiAccess\022P\n\026storage_acc"
  "ount_access\030\005 \001(\0132\032.google.protobuf.Bool"
  "ValueR\024storageAccountAccess\"a\n\030CreateClo"
  "udExportRequest\022E\n\006export\030\001 \001(\0132-.kentik"
  ".cloud_export.v202101beta1.CloudExportR\006"
  "export\"b\n\031CreateCloudExportResponse\022E\n\006e"
  "xport\030\001 \001(\0132-.kentik.cloud_export.v20210"
  "1beta1.CloudExportR\006export\"\030\n\026ListCloudE"
  "xportRequest\"\226\001\n\027ListCloudExportResponse"
  "\022G\n\007exports\030\001 \003(\0132-.kentik.cloud_export."
  "v202101beta1.CloudExportR\007exports\0222\n\025inv"
  "alid_exports_count\030\002 \001(\rR\023invalidExports"
  "Count\"\'\n\025GetCloudExportRequest\022\016\n\002id\030\001 \001"
  "(\tR\002id\"_\n\026GetCloudExportResponse\022E\n\006expo"
  "rt\030\001 \001(\0132-.kentik.cloud_export.v202101be"
  "ta1.CloudExportR\006export\"\220\001\n\027PatchCloudEx"
  "portRequest\022E\n\006export\030\001 \001(\0132-.kentik.clo"
  "ud_export.v202101beta1.CloudExportR\006expo"
  "rt\022.\n\004mask\030\002 \001(\0132\032.google.protobuf.Field"
  "MaskR\004mask\"a\n\030PatchCloudExportResponse\022E"
  "\n\006export\030\001 \001(\0132-.kentik.cloud_export.v20"
  "2101beta1.CloudExportR\006export\"a\n\030UpdateC"
  "loudExportRequest\022E\n\006export\030\001 \001(\0132-.kent"
  "ik.cloud_export.v202101beta1.CloudExport"
  "R\006export\"b\n\031UpdateCloudExportResponse\022E\n"
  "\006export\030\001 \001(\0132-.kentik.cloud_export.v202"
  "101beta1.CloudExportR\006export\"*\n\030DeleteCl"
  "oudExportRequest\022\016\n\002id\030\001 \001(\tR\002id\"\033\n\031Dele"
  "teCloudExportResponse*\202\001\n\017CloudExportTyp"
  "e\022!\n\035CLOUD_EXPORT_TYPE_UNSPECIFIED\020\000\022$\n "
  "CLOUD_EXPORT_TYPE_KENTIK_MANAGED\020\001\022&\n\"CL"
  "OUD_EXPORT_TYPE_CUSTOMER_MANAGED\020\0022\255\017\n\027C"
  "loudExportAdminService\022\272\002\n\021CreateCloudEx"
  "port\022:.kentik.cloud_export.v202101beta1."
  "CreateCloudExportRequest\032;.kentik.cloud_"
  "export.v202101beta1.CreateCloudExportRes"
  "ponse\"\253\001\222A_\022\024Create Cloud Export.\0329Creat"
  "e cloud export from request. Returns cre"
  "ated export.*\014ExportCreate\362\327\002\030admin.clou"
  "d_export:write\202\323\344\223\002\'\"\"/cloud_export/v202"
  "101beta1/exports:\001*\022\222\002\n\017ListCloudExport\022"
  "8.kentik.cloud_export.v202101beta1.ListC"
  "loudExportRequest\0329.kentik.cloud_export."
  "v202101beta1.ListCloudExportResponse\"\211\001\222"
  "AA\022\022List Cloud Export.\032\037Returns a list o"
  "f cloud export.*\nExportList\362\327\002\027admin.clo"
  "ud_export:read\202\323\344\223\002$\022\"/cloud_export/v202"
  "101beta1/exports\022\274\002\n\016GetCloudExport\0227.ke"
  "ntik.cloud_export.v202101beta1.GetCloudE"
  "xportRequest\0328.kentik.cloud_export.v2021"
  "01beta1.GetCloudExportResponse\"\266\001\222Ai\022 Ge"
  "t information about an export.\032:Returns "
  "information about export specified with "
  "export ID.*\tExportGet\362\327\002\027admin.cloud_exp"
  "ort:read\202\323\344\223\002)\022\'/cloud_export/v202101bet"
  "a1/exports/{id}\022\331\002\n\020PatchCloudExport\0229.k"
  "entik.cloud_export.v202101beta1.PatchClo"
  "udExportRequest\032:.kentik.cloud_export.v2"
  "02101beta1.PatchCloudExportResponse\"\315\001\222A"
  "u\022\020Patch an export.\032TPartially Updates t"
  "he attributes of export specified with i"
  "d and update_mask fields.*\013ExportPatch\362\327"
  "\002\030admin.cloud_export:write\202\323\344\223\00232./cloud"
  "_export/v202101beta1/exports/{export.id}"
  ":\001*\022\302\002\n\021UpdateCloudExport\022:.kentik.cloud"
  "_export.v202101beta1.UpdateCloudExportRe"
  "quest\032;.kentik.cloud_export.v202101beta1"
  ".UpdateCloudExportResponse\"\263\001\222A[\022\021Update"
  " an export.\0328Replaces the entire export "
  "attributes specified with id.*\014ExportUpd"
  "ate\362\327\002\030admin.cloud_export:write\202\323\344\223\0023\032./"
  "cloud_export/v202101beta1/exports/{expor"
  "t.id}:\001*\022\245\002\n\021DeleteCloudExport\022:.kentik."
  "cloud_export.v202101beta1.DeleteCloudExp"
  "ortRequest\032;.kentik.cloud_export.v202101"
  "beta1.DeleteCloudExportResponse\"\226\001\222AH\022\021D"
  "elete an export.\032%Deletes the export spe"
  "cified with id.*\014ExportDelete\362\327\002\030admin.c"
  "loud_export:write\202\323\344\223\002)*\'/cloud_export/v"
  "202101beta1/exports/{id}\0328\312A\033cloud_expor"
  "t.api.kentik.com\352\327\002\022admin.cloud_export\220\330"
  "\002\003B\351\003ZQgithub.com/kentik/api-schema/gen/"
  "go/kentik/cloud_export/v202101beta1;clou"
  "d_export\222A\222\003\022\253\001\n\026Cloud Export Admin API\022"
  "K--- This API has been deprecated and wi"
  "ll be removed in the near future ---\"7\n\026"
  "Kentik API Engineering\022\035https://github.c"
  "om/kentik/api2\013202101beta1*\001\0022\020applicati"
  "on/json:\020application/jsonZD\n\036\n\005email\022\025\010\002"
  "\032\017X-CH-Auth-Email \002\n\"\n\005token\022\031\010\002\032\023X-CH-A"
  "uth-API-Token \002b\026\n\t\n\005email\022\000\n\t\n\005token\022\000r"
  "]\n%General information about Kentik APIs"
  "\0224https://kb.kentik.com/v0/Ab09.htm#Ab09"
  "-APIs_Overviewb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto_deps[6] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2fprotobuf_2ffield_5fmask_2eproto,
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
  &::descriptor_table_kentik_2fcore_2fv202012alpha1_2fannotations_2eproto,
  &::descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fannotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto_sccs[19] = {
  &scc_info_AwsProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
  &scc_info_AzureProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
  &scc_info_BgpProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
  &scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
  &scc_info_CreateCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
  &scc_info_CreateCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
  &scc_info_DeleteCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
  &scc_info_DeleteCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
  &scc_info_GceProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
  &scc_info_GetCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
  &scc_info_GetCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
  &scc_info_IbmProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
  &scc_info_ListCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
  &scc_info_ListCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
  &scc_info_PatchCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
  &scc_info_PatchCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
  &scc_info_Status_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
  &scc_info_UpdateCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
  &scc_info_UpdateCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto = {
  false, false, descriptor_table_protodef_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto, "kentik/cloud_export/v202101beta1/cloud_export.proto", 5622,
  &descriptor_table_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto_once, descriptor_table_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto_sccs, descriptor_table_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto_deps, 19, 6,
  schemas, file_default_instances, TableStruct_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto::offsets,
  file_level_metadata_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto, 19, file_level_enum_descriptors_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto, file_level_service_descriptors_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto)), true);
namespace kentik {
namespace cloud_export {
namespace v202101beta1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CloudExportType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto);
  return file_level_enum_descriptors_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto[0];
}
bool CloudExportType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CloudExport::InitAsDefaultInstance() {
  ::kentik::cloud_export::v202101beta1::_CloudExport_default_instance_.aws_ = const_cast< ::kentik::cloud_export::v202101beta1::AwsProperties*>(
      ::kentik::cloud_export::v202101beta1::AwsProperties::internal_default_instance());
  ::kentik::cloud_export::v202101beta1::_CloudExport_default_instance_.azure_ = const_cast< ::kentik::cloud_export::v202101beta1::AzureProperties*>(
      ::kentik::cloud_export::v202101beta1::AzureProperties::internal_default_instance());
  ::kentik::cloud_export::v202101beta1::_CloudExport_default_instance_.gce_ = const_cast< ::kentik::cloud_export::v202101beta1::GceProperties*>(
      ::kentik::cloud_export::v202101beta1::GceProperties::internal_default_instance());
  ::kentik::cloud_export::v202101beta1::_CloudExport_default_instance_.ibm_ = const_cast< ::kentik::cloud_export::v202101beta1::IbmProperties*>(
      ::kentik::cloud_export::v202101beta1::IbmProperties::internal_default_instance());
  ::kentik::cloud_export::v202101beta1::_CloudExport_default_instance_._instance.get_mutable()->bgp_ = const_cast< ::kentik::cloud_export::v202101beta1::BgpProperties*>(
      ::kentik::cloud_export::v202101beta1::BgpProperties::internal_default_instance());
  ::kentik::cloud_export::v202101beta1::_CloudExport_default_instance_._instance.get_mutable()->current_status_ = const_cast< ::kentik::cloud_export::v202101beta1::Status*>(
      ::kentik::cloud_export::v202101beta1::Status::internal_default_instance());
}
class CloudExport::_Internal {
 public:
  static const ::kentik::cloud_export::v202101beta1::AwsProperties& aws(const CloudExport* msg);
  static const ::kentik::cloud_export::v202101beta1::AzureProperties& azure(const CloudExport* msg);
  static const ::kentik::cloud_export::v202101beta1::GceProperties& gce(const CloudExport* msg);
  static const ::kentik::cloud_export::v202101beta1::IbmProperties& ibm(const CloudExport* msg);
  static const ::kentik::cloud_export::v202101beta1::BgpProperties& bgp(const CloudExport* msg);
  static const ::kentik::cloud_export::v202101beta1::Status& current_status(const CloudExport* msg);
};

const ::kentik::cloud_export::v202101beta1::AwsProperties&
CloudExport::_Internal::aws(const CloudExport* msg) {
  return *msg->properties_.aws_;
}
const ::kentik::cloud_export::v202101beta1::AzureProperties&
CloudExport::_Internal::azure(const CloudExport* msg) {
  return *msg->properties_.azure_;
}
const ::kentik::cloud_export::v202101beta1::GceProperties&
CloudExport::_Internal::gce(const CloudExport* msg) {
  return *msg->properties_.gce_;
}
const ::kentik::cloud_export::v202101beta1::IbmProperties&
CloudExport::_Internal::ibm(const CloudExport* msg) {
  return *msg->properties_.ibm_;
}
const ::kentik::cloud_export::v202101beta1::BgpProperties&
CloudExport::_Internal::bgp(const CloudExport* msg) {
  return *msg->bgp_;
}
const ::kentik::cloud_export::v202101beta1::Status&
CloudExport::_Internal::current_status(const CloudExport* msg) {
  return *msg->current_status_;
}
void CloudExport::set_allocated_aws(::kentik::cloud_export::v202101beta1::AwsProperties* aws) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_properties();
  if (aws) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(aws);
    if (message_arena != submessage_arena) {
      aws = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, aws, submessage_arena);
    }
    set_has_aws();
    properties_.aws_ = aws;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.CloudExport.aws)
}
void CloudExport::set_allocated_azure(::kentik::cloud_export::v202101beta1::AzureProperties* azure) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_properties();
  if (azure) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(azure);
    if (message_arena != submessage_arena) {
      azure = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, azure, submessage_arena);
    }
    set_has_azure();
    properties_.azure_ = azure;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.CloudExport.azure)
}
void CloudExport::set_allocated_gce(::kentik::cloud_export::v202101beta1::GceProperties* gce) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_properties();
  if (gce) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(gce);
    if (message_arena != submessage_arena) {
      gce = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gce, submessage_arena);
    }
    set_has_gce();
    properties_.gce_ = gce;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.CloudExport.gce)
}
void CloudExport::set_allocated_ibm(::kentik::cloud_export::v202101beta1::IbmProperties* ibm) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_properties();
  if (ibm) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(ibm);
    if (message_arena != submessage_arena) {
      ibm = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ibm, submessage_arena);
    }
    set_has_ibm();
    properties_.ibm_ = ibm;
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.CloudExport.ibm)
}
CloudExport::CloudExport(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202101beta1.CloudExport)
}
CloudExport::CloudExport(const CloudExport& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  api_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_api_root().empty()) {
    api_root_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_api_root(),
      GetArena());
  }
  flow_dest_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_flow_dest().empty()) {
    flow_dest_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_flow_dest(),
      GetArena());
  }
  plan_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_plan_id().empty()) {
    plan_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_plan_id(),
      GetArena());
  }
  cloud_provider_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cloud_provider().empty()) {
    cloud_provider_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_cloud_provider(),
      GetArena());
  }
  if (from._internal_has_bgp()) {
    bgp_ = new ::kentik::cloud_export::v202101beta1::BgpProperties(*from.bgp_);
  } else {
    bgp_ = nullptr;
  }
  if (from._internal_has_current_status()) {
    current_status_ = new ::kentik::cloud_export::v202101beta1::Status(*from.current_status_);
  } else {
    current_status_ = nullptr;
  }
  ::memcpy(&enabled_, &from.enabled_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&enabled_)) + sizeof(type_));
  clear_has_properties();
  switch (from.properties_case()) {
    case kAws: {
      _internal_mutable_aws()->::kentik::cloud_export::v202101beta1::AwsProperties::MergeFrom(from._internal_aws());
      break;
    }
    case kAzure: {
      _internal_mutable_azure()->::kentik::cloud_export::v202101beta1::AzureProperties::MergeFrom(from._internal_azure());
      break;
    }
    case kGce: {
      _internal_mutable_gce()->::kentik::cloud_export::v202101beta1::GceProperties::MergeFrom(from._internal_gce());
      break;
    }
    case kIbm: {
      _internal_mutable_ibm()->::kentik::cloud_export::v202101beta1::IbmProperties::MergeFrom(from._internal_ibm());
      break;
    }
    case PROPERTIES_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202101beta1.CloudExport)
}

void CloudExport::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  api_root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flow_dest_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plan_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cloud_provider_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&bgp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&bgp_)) + sizeof(type_));
  clear_has_properties();
}

CloudExport::~CloudExport() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202101beta1.CloudExport)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CloudExport::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  api_root_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flow_dest_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plan_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cloud_provider_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete bgp_;
  if (this != internal_default_instance()) delete current_status_;
  if (has_properties()) {
    clear_properties();
  }
}

void CloudExport::ArenaDtor(void* object) {
  CloudExport* _this = reinterpret_cast< CloudExport* >(object);
  (void)_this;
}
void CloudExport::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CloudExport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CloudExport& CloudExport::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CloudExport_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void CloudExport::clear_properties() {
// @@protoc_insertion_point(one_of_clear_start:kentik.cloud_export.v202101beta1.CloudExport)
  switch (properties_case()) {
    case kAws: {
      if (GetArena() == nullptr) {
        delete properties_.aws_;
      }
      break;
    }
    case kAzure: {
      if (GetArena() == nullptr) {
        delete properties_.azure_;
      }
      break;
    }
    case kGce: {
      if (GetArena() == nullptr) {
        delete properties_.gce_;
      }
      break;
    }
    case kIbm: {
      if (GetArena() == nullptr) {
        delete properties_.ibm_;
      }
      break;
    }
    case PROPERTIES_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PROPERTIES_NOT_SET;
}


void CloudExport::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202101beta1.CloudExport)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  api_root_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flow_dest_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  plan_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  cloud_provider_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && bgp_ != nullptr) {
    delete bgp_;
  }
  bgp_ = nullptr;
  if (GetArena() == nullptr && current_status_ != nullptr) {
    delete current_status_;
  }
  current_status_ = nullptr;
  ::memset(&enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&enabled_)) + sizeof(type_));
  clear_properties();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CloudExport::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.CloudExport.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool enabled = 2[json_name = "enabled"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3[json_name = "name"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.CloudExport.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 4[json_name = "description"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.CloudExport.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string api_root = 5[json_name = "apiRoot"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_api_root();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.CloudExport.api_root"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string flow_dest = 6[json_name = "flowDest"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_flow_dest();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.CloudExport.flow_dest"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string plan_id = 7[json_name = "planId"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_plan_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.CloudExport.plan_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string cloud_provider = 8[json_name = "cloudProvider"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_cloud_provider();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.CloudExport.cloud_provider"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.cloud_export.v202101beta1.AwsProperties aws = 9[json_name = "aws"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_aws(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.cloud_export.v202101beta1.AzureProperties azure = 10[json_name = "azure"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_azure(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.cloud_export.v202101beta1.GceProperties gce = 11[json_name = "gce"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_gce(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.cloud_export.v202101beta1.IbmProperties ibm = 12[json_name = "ibm"];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_ibm(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.cloud_export.v202101beta1.BgpProperties bgp = 13[json_name = "bgp"];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_bgp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.cloud_export.v202101beta1.Status current_status = 14[json_name = "currentStatus"];
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_current_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .kentik.cloud_export.v202101beta1.CloudExportType type = 15[json_name = "type"];
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::kentik::cloud_export::v202101beta1::CloudExportType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CloudExport::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202101beta1.CloudExport)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.CloudExport.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // bool enabled = 2[json_name = "enabled"];
  if (this->enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_enabled(), target);
  }

  // string name = 3[json_name = "name"];
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.CloudExport.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // string description = 4[json_name = "description"];
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.CloudExport.description");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_description(), target);
  }

  // string api_root = 5[json_name = "apiRoot"];
  if (this->api_root().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_api_root().data(), static_cast<int>(this->_internal_api_root().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.CloudExport.api_root");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_api_root(), target);
  }

  // string flow_dest = 6[json_name = "flowDest"];
  if (this->flow_dest().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_flow_dest().data(), static_cast<int>(this->_internal_flow_dest().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.CloudExport.flow_dest");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_flow_dest(), target);
  }

  // string plan_id = 7[json_name = "planId"];
  if (this->plan_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_plan_id().data(), static_cast<int>(this->_internal_plan_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.CloudExport.plan_id");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_plan_id(), target);
  }

  // string cloud_provider = 8[json_name = "cloudProvider"];
  if (this->cloud_provider().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cloud_provider().data(), static_cast<int>(this->_internal_cloud_provider().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.CloudExport.cloud_provider");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_cloud_provider(), target);
  }

  // .kentik.cloud_export.v202101beta1.AwsProperties aws = 9[json_name = "aws"];
  if (_internal_has_aws()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::aws(this), target, stream);
  }

  // .kentik.cloud_export.v202101beta1.AzureProperties azure = 10[json_name = "azure"];
  if (_internal_has_azure()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::azure(this), target, stream);
  }

  // .kentik.cloud_export.v202101beta1.GceProperties gce = 11[json_name = "gce"];
  if (_internal_has_gce()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::gce(this), target, stream);
  }

  // .kentik.cloud_export.v202101beta1.IbmProperties ibm = 12[json_name = "ibm"];
  if (_internal_has_ibm()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::ibm(this), target, stream);
  }

  // .kentik.cloud_export.v202101beta1.BgpProperties bgp = 13[json_name = "bgp"];
  if (this->has_bgp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::bgp(this), target, stream);
  }

  // .kentik.cloud_export.v202101beta1.Status current_status = 14[json_name = "currentStatus"];
  if (this->has_current_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::current_status(this), target, stream);
  }

  // .kentik.cloud_export.v202101beta1.CloudExportType type = 15[json_name = "type"];
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      15, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202101beta1.CloudExport)
  return target;
}

size_t CloudExport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202101beta1.CloudExport)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string name = 3[json_name = "name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 4[json_name = "description"];
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string api_root = 5[json_name = "apiRoot"];
  if (this->api_root().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_api_root());
  }

  // string flow_dest = 6[json_name = "flowDest"];
  if (this->flow_dest().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_flow_dest());
  }

  // string plan_id = 7[json_name = "planId"];
  if (this->plan_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_plan_id());
  }

  // string cloud_provider = 8[json_name = "cloudProvider"];
  if (this->cloud_provider().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cloud_provider());
  }

  // .kentik.cloud_export.v202101beta1.BgpProperties bgp = 13[json_name = "bgp"];
  if (this->has_bgp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bgp_);
  }

  // .kentik.cloud_export.v202101beta1.Status current_status = 14[json_name = "currentStatus"];
  if (this->has_current_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *current_status_);
  }

  // bool enabled = 2[json_name = "enabled"];
  if (this->enabled() != 0) {
    total_size += 1 + 1;
  }

  // .kentik.cloud_export.v202101beta1.CloudExportType type = 15[json_name = "type"];
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  switch (properties_case()) {
    // .kentik.cloud_export.v202101beta1.AwsProperties aws = 9[json_name = "aws"];
    case kAws: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *properties_.aws_);
      break;
    }
    // .kentik.cloud_export.v202101beta1.AzureProperties azure = 10[json_name = "azure"];
    case kAzure: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *properties_.azure_);
      break;
    }
    // .kentik.cloud_export.v202101beta1.GceProperties gce = 11[json_name = "gce"];
    case kGce: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *properties_.gce_);
      break;
    }
    // .kentik.cloud_export.v202101beta1.IbmProperties ibm = 12[json_name = "ibm"];
    case kIbm: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *properties_.ibm_);
      break;
    }
    case PROPERTIES_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloudExport::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202101beta1.CloudExport)
  GOOGLE_DCHECK_NE(&from, this);
  const CloudExport* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CloudExport>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202101beta1.CloudExport)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202101beta1.CloudExport)
    MergeFrom(*source);
  }
}

void CloudExport::MergeFrom(const CloudExport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202101beta1.CloudExport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.api_root().size() > 0) {
    _internal_set_api_root(from._internal_api_root());
  }
  if (from.flow_dest().size() > 0) {
    _internal_set_flow_dest(from._internal_flow_dest());
  }
  if (from.plan_id().size() > 0) {
    _internal_set_plan_id(from._internal_plan_id());
  }
  if (from.cloud_provider().size() > 0) {
    _internal_set_cloud_provider(from._internal_cloud_provider());
  }
  if (from.has_bgp()) {
    _internal_mutable_bgp()->::kentik::cloud_export::v202101beta1::BgpProperties::MergeFrom(from._internal_bgp());
  }
  if (from.has_current_status()) {
    _internal_mutable_current_status()->::kentik::cloud_export::v202101beta1::Status::MergeFrom(from._internal_current_status());
  }
  if (from.enabled() != 0) {
    _internal_set_enabled(from._internal_enabled());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  switch (from.properties_case()) {
    case kAws: {
      _internal_mutable_aws()->::kentik::cloud_export::v202101beta1::AwsProperties::MergeFrom(from._internal_aws());
      break;
    }
    case kAzure: {
      _internal_mutable_azure()->::kentik::cloud_export::v202101beta1::AzureProperties::MergeFrom(from._internal_azure());
      break;
    }
    case kGce: {
      _internal_mutable_gce()->::kentik::cloud_export::v202101beta1::GceProperties::MergeFrom(from._internal_gce());
      break;
    }
    case kIbm: {
      _internal_mutable_ibm()->::kentik::cloud_export::v202101beta1::IbmProperties::MergeFrom(from._internal_ibm());
      break;
    }
    case PROPERTIES_NOT_SET: {
      break;
    }
  }
}

void CloudExport::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202101beta1.CloudExport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloudExport::CopyFrom(const CloudExport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202101beta1.CloudExport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloudExport::IsInitialized() const {
  return true;
}

void CloudExport::InternalSwap(CloudExport* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  api_root_.Swap(&other->api_root_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flow_dest_.Swap(&other->flow_dest_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  plan_id_.Swap(&other->plan_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  cloud_provider_.Swap(&other->cloud_provider_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CloudExport, type_)
      + sizeof(CloudExport::type_)
      - PROTOBUF_FIELD_OFFSET(CloudExport, bgp_)>(
          reinterpret_cast<char*>(&bgp_),
          reinterpret_cast<char*>(&other->bgp_));
  swap(properties_, other->properties_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata CloudExport::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BgpProperties::InitAsDefaultInstance() {
}
class BgpProperties::_Internal {
 public:
};

BgpProperties::BgpProperties(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202101beta1.BgpProperties)
}
BgpProperties::BgpProperties(const BgpProperties& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  use_bgp_device_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_use_bgp_device_id().empty()) {
    use_bgp_device_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_use_bgp_device_id(),
      GetArena());
  }
  device_bgp_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_device_bgp_type().empty()) {
    device_bgp_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_device_bgp_type(),
      GetArena());
  }
  apply_bgp_ = from.apply_bgp_;
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202101beta1.BgpProperties)
}

void BgpProperties::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BgpProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  use_bgp_device_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  device_bgp_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  apply_bgp_ = false;
}

BgpProperties::~BgpProperties() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202101beta1.BgpProperties)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BgpProperties::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  use_bgp_device_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  device_bgp_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BgpProperties::ArenaDtor(void* object) {
  BgpProperties* _this = reinterpret_cast< BgpProperties* >(object);
  (void)_this;
}
void BgpProperties::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BgpProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BgpProperties& BgpProperties::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BgpProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void BgpProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202101beta1.BgpProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  use_bgp_device_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  device_bgp_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  apply_bgp_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BgpProperties::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool apply_bgp = 1[json_name = "applyBgp"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          apply_bgp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string use_bgp_device_id = 2[json_name = "useBgpDeviceId"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_use_bgp_device_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.BgpProperties.use_bgp_device_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string device_bgp_type = 3[json_name = "deviceBgpType"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_device_bgp_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.BgpProperties.device_bgp_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BgpProperties::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202101beta1.BgpProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool apply_bgp = 1[json_name = "applyBgp"];
  if (this->apply_bgp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_apply_bgp(), target);
  }

  // string use_bgp_device_id = 2[json_name = "useBgpDeviceId"];
  if (this->use_bgp_device_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_use_bgp_device_id().data(), static_cast<int>(this->_internal_use_bgp_device_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.BgpProperties.use_bgp_device_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_use_bgp_device_id(), target);
  }

  // string device_bgp_type = 3[json_name = "deviceBgpType"];
  if (this->device_bgp_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_device_bgp_type().data(), static_cast<int>(this->_internal_device_bgp_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.BgpProperties.device_bgp_type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_device_bgp_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202101beta1.BgpProperties)
  return target;
}

size_t BgpProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202101beta1.BgpProperties)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string use_bgp_device_id = 2[json_name = "useBgpDeviceId"];
  if (this->use_bgp_device_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_use_bgp_device_id());
  }

  // string device_bgp_type = 3[json_name = "deviceBgpType"];
  if (this->device_bgp_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_device_bgp_type());
  }

  // bool apply_bgp = 1[json_name = "applyBgp"];
  if (this->apply_bgp() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BgpProperties::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202101beta1.BgpProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const BgpProperties* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BgpProperties>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202101beta1.BgpProperties)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202101beta1.BgpProperties)
    MergeFrom(*source);
  }
}

void BgpProperties::MergeFrom(const BgpProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202101beta1.BgpProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.use_bgp_device_id().size() > 0) {
    _internal_set_use_bgp_device_id(from._internal_use_bgp_device_id());
  }
  if (from.device_bgp_type().size() > 0) {
    _internal_set_device_bgp_type(from._internal_device_bgp_type());
  }
  if (from.apply_bgp() != 0) {
    _internal_set_apply_bgp(from._internal_apply_bgp());
  }
}

void BgpProperties::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202101beta1.BgpProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BgpProperties::CopyFrom(const BgpProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202101beta1.BgpProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BgpProperties::IsInitialized() const {
  return true;
}

void BgpProperties::InternalSwap(BgpProperties* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  use_bgp_device_id_.Swap(&other->use_bgp_device_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  device_bgp_type_.Swap(&other->device_bgp_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(apply_bgp_, other->apply_bgp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BgpProperties::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AwsProperties::InitAsDefaultInstance() {
}
class AwsProperties::_Internal {
 public:
};

AwsProperties::AwsProperties(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202101beta1.AwsProperties)
}
AwsProperties::AwsProperties(const AwsProperties& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  bucket_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bucket().empty()) {
    bucket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_bucket(),
      GetArena());
  }
  iam_role_arn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_iam_role_arn().empty()) {
    iam_role_arn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_iam_role_arn(),
      GetArena());
  }
  region_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_region().empty()) {
    region_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_region(),
      GetArena());
  }
  ::memcpy(&delete_after_read_, &from.delete_after_read_,
    static_cast<size_t>(reinterpret_cast<char*>(&multiple_buckets_) -
    reinterpret_cast<char*>(&delete_after_read_)) + sizeof(multiple_buckets_));
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202101beta1.AwsProperties)
}

void AwsProperties::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AwsProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  bucket_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  iam_role_arn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  region_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&delete_after_read_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&multiple_buckets_) -
      reinterpret_cast<char*>(&delete_after_read_)) + sizeof(multiple_buckets_));
}

AwsProperties::~AwsProperties() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202101beta1.AwsProperties)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AwsProperties::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  bucket_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  iam_role_arn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  region_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AwsProperties::ArenaDtor(void* object) {
  AwsProperties* _this = reinterpret_cast< AwsProperties* >(object);
  (void)_this;
}
void AwsProperties::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AwsProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AwsProperties& AwsProperties::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AwsProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void AwsProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202101beta1.AwsProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bucket_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  iam_role_arn_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  region_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&delete_after_read_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&multiple_buckets_) -
      reinterpret_cast<char*>(&delete_after_read_)) + sizeof(multiple_buckets_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AwsProperties::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string bucket = 1[json_name = "bucket"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_bucket();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.AwsProperties.bucket"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string iam_role_arn = 2[json_name = "iamRoleArn"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_iam_role_arn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.AwsProperties.iam_role_arn"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string region = 3[json_name = "region"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_region();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.AwsProperties.region"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool delete_after_read = 4[json_name = "deleteAfterRead"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          delete_after_read_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool multiple_buckets = 5[json_name = "multipleBuckets"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          multiple_buckets_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AwsProperties::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202101beta1.AwsProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bucket = 1[json_name = "bucket"];
  if (this->bucket().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bucket().data(), static_cast<int>(this->_internal_bucket().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.AwsProperties.bucket");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_bucket(), target);
  }

  // string iam_role_arn = 2[json_name = "iamRoleArn"];
  if (this->iam_role_arn().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_iam_role_arn().data(), static_cast<int>(this->_internal_iam_role_arn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.AwsProperties.iam_role_arn");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_iam_role_arn(), target);
  }

  // string region = 3[json_name = "region"];
  if (this->region().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_region().data(), static_cast<int>(this->_internal_region().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.AwsProperties.region");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_region(), target);
  }

  // bool delete_after_read = 4[json_name = "deleteAfterRead"];
  if (this->delete_after_read() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_delete_after_read(), target);
  }

  // bool multiple_buckets = 5[json_name = "multipleBuckets"];
  if (this->multiple_buckets() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_multiple_buckets(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202101beta1.AwsProperties)
  return target;
}

size_t AwsProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202101beta1.AwsProperties)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string bucket = 1[json_name = "bucket"];
  if (this->bucket().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bucket());
  }

  // string iam_role_arn = 2[json_name = "iamRoleArn"];
  if (this->iam_role_arn().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_iam_role_arn());
  }

  // string region = 3[json_name = "region"];
  if (this->region().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_region());
  }

  // bool delete_after_read = 4[json_name = "deleteAfterRead"];
  if (this->delete_after_read() != 0) {
    total_size += 1 + 1;
  }

  // bool multiple_buckets = 5[json_name = "multipleBuckets"];
  if (this->multiple_buckets() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AwsProperties::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202101beta1.AwsProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const AwsProperties* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AwsProperties>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202101beta1.AwsProperties)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202101beta1.AwsProperties)
    MergeFrom(*source);
  }
}

void AwsProperties::MergeFrom(const AwsProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202101beta1.AwsProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bucket().size() > 0) {
    _internal_set_bucket(from._internal_bucket());
  }
  if (from.iam_role_arn().size() > 0) {
    _internal_set_iam_role_arn(from._internal_iam_role_arn());
  }
  if (from.region().size() > 0) {
    _internal_set_region(from._internal_region());
  }
  if (from.delete_after_read() != 0) {
    _internal_set_delete_after_read(from._internal_delete_after_read());
  }
  if (from.multiple_buckets() != 0) {
    _internal_set_multiple_buckets(from._internal_multiple_buckets());
  }
}

void AwsProperties::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202101beta1.AwsProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AwsProperties::CopyFrom(const AwsProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202101beta1.AwsProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AwsProperties::IsInitialized() const {
  return true;
}

void AwsProperties::InternalSwap(AwsProperties* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  bucket_.Swap(&other->bucket_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  iam_role_arn_.Swap(&other->iam_role_arn_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  region_.Swap(&other->region_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AwsProperties, multiple_buckets_)
      + sizeof(AwsProperties::multiple_buckets_)
      - PROTOBUF_FIELD_OFFSET(AwsProperties, delete_after_read_)>(
          reinterpret_cast<char*>(&delete_after_read_),
          reinterpret_cast<char*>(&other->delete_after_read_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AwsProperties::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AzureProperties::InitAsDefaultInstance() {
}
class AzureProperties::_Internal {
 public:
};

AzureProperties::AzureProperties(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202101beta1.AzureProperties)
}
AzureProperties::AzureProperties(const AzureProperties& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_location().empty()) {
    location_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_location(),
      GetArena());
  }
  resource_group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resource_group().empty()) {
    resource_group_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_resource_group(),
      GetArena());
  }
  storage_account_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_storage_account().empty()) {
    storage_account_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_storage_account(),
      GetArena());
  }
  subscription_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subscription_id().empty()) {
    subscription_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subscription_id(),
      GetArena());
  }
  security_principal_enabled_ = from.security_principal_enabled_;
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202101beta1.AzureProperties)
}

void AzureProperties::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AzureProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resource_group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storage_account_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subscription_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  security_principal_enabled_ = false;
}

AzureProperties::~AzureProperties() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202101beta1.AzureProperties)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AzureProperties::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  location_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resource_group_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  storage_account_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subscription_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AzureProperties::ArenaDtor(void* object) {
  AzureProperties* _this = reinterpret_cast< AzureProperties* >(object);
  (void)_this;
}
void AzureProperties::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AzureProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AzureProperties& AzureProperties::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AzureProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void AzureProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202101beta1.AzureProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  resource_group_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  storage_account_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subscription_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  security_principal_enabled_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AzureProperties::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string location = 1[json_name = "location"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_location();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.AzureProperties.location"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string resource_group = 2[json_name = "resourceGroup"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_resource_group();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.AzureProperties.resource_group"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string storage_account = 3[json_name = "storageAccount"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_storage_account();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.AzureProperties.storage_account"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subscription_id = 4[json_name = "subscriptionId"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_subscription_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.AzureProperties.subscription_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool security_principal_enabled = 5[json_name = "securityPrincipalEnabled"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          security_principal_enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AzureProperties::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202101beta1.AzureProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string location = 1[json_name = "location"];
  if (this->location().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.AzureProperties.location");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location(), target);
  }

  // string resource_group = 2[json_name = "resourceGroup"];
  if (this->resource_group().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource_group().data(), static_cast<int>(this->_internal_resource_group().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.AzureProperties.resource_group");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_resource_group(), target);
  }

  // string storage_account = 3[json_name = "storageAccount"];
  if (this->storage_account().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_storage_account().data(), static_cast<int>(this->_internal_storage_account().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.AzureProperties.storage_account");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_storage_account(), target);
  }

  // string subscription_id = 4[json_name = "subscriptionId"];
  if (this->subscription_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subscription_id().data(), static_cast<int>(this->_internal_subscription_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.AzureProperties.subscription_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_subscription_id(), target);
  }

  // bool security_principal_enabled = 5[json_name = "securityPrincipalEnabled"];
  if (this->security_principal_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_security_principal_enabled(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202101beta1.AzureProperties)
  return target;
}

size_t AzureProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202101beta1.AzureProperties)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location = 1[json_name = "location"];
  if (this->location().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  // string resource_group = 2[json_name = "resourceGroup"];
  if (this->resource_group().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource_group());
  }

  // string storage_account = 3[json_name = "storageAccount"];
  if (this->storage_account().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_storage_account());
  }

  // string subscription_id = 4[json_name = "subscriptionId"];
  if (this->subscription_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subscription_id());
  }

  // bool security_principal_enabled = 5[json_name = "securityPrincipalEnabled"];
  if (this->security_principal_enabled() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AzureProperties::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202101beta1.AzureProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const AzureProperties* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AzureProperties>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202101beta1.AzureProperties)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202101beta1.AzureProperties)
    MergeFrom(*source);
  }
}

void AzureProperties::MergeFrom(const AzureProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202101beta1.AzureProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.location().size() > 0) {
    _internal_set_location(from._internal_location());
  }
  if (from.resource_group().size() > 0) {
    _internal_set_resource_group(from._internal_resource_group());
  }
  if (from.storage_account().size() > 0) {
    _internal_set_storage_account(from._internal_storage_account());
  }
  if (from.subscription_id().size() > 0) {
    _internal_set_subscription_id(from._internal_subscription_id());
  }
  if (from.security_principal_enabled() != 0) {
    _internal_set_security_principal_enabled(from._internal_security_principal_enabled());
  }
}

void AzureProperties::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202101beta1.AzureProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AzureProperties::CopyFrom(const AzureProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202101beta1.AzureProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AzureProperties::IsInitialized() const {
  return true;
}

void AzureProperties::InternalSwap(AzureProperties* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  location_.Swap(&other->location_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  resource_group_.Swap(&other->resource_group_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  storage_account_.Swap(&other->storage_account_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subscription_id_.Swap(&other->subscription_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(security_principal_enabled_, other->security_principal_enabled_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AzureProperties::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GceProperties::InitAsDefaultInstance() {
}
class GceProperties::_Internal {
 public:
};

GceProperties::GceProperties(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202101beta1.GceProperties)
}
GceProperties::GceProperties(const GceProperties& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  project_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_project().empty()) {
    project_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_project(),
      GetArena());
  }
  subscription_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subscription().empty()) {
    subscription_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subscription(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202101beta1.GceProperties)
}

void GceProperties::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GceProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  project_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subscription_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GceProperties::~GceProperties() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202101beta1.GceProperties)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GceProperties::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  project_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subscription_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GceProperties::ArenaDtor(void* object) {
  GceProperties* _this = reinterpret_cast< GceProperties* >(object);
  (void)_this;
}
void GceProperties::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GceProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GceProperties& GceProperties::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GceProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void GceProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202101beta1.GceProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subscription_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GceProperties::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string project = 1[json_name = "project"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_project();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.GceProperties.project"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subscription = 2[json_name = "subscription"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subscription();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.GceProperties.subscription"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GceProperties::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202101beta1.GceProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string project = 1[json_name = "project"];
  if (this->project().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_project().data(), static_cast<int>(this->_internal_project().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.GceProperties.project");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_project(), target);
  }

  // string subscription = 2[json_name = "subscription"];
  if (this->subscription().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subscription().data(), static_cast<int>(this->_internal_subscription().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.GceProperties.subscription");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subscription(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202101beta1.GceProperties)
  return target;
}

size_t GceProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202101beta1.GceProperties)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string project = 1[json_name = "project"];
  if (this->project().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_project());
  }

  // string subscription = 2[json_name = "subscription"];
  if (this->subscription().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subscription());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GceProperties::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202101beta1.GceProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const GceProperties* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GceProperties>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202101beta1.GceProperties)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202101beta1.GceProperties)
    MergeFrom(*source);
  }
}

void GceProperties::MergeFrom(const GceProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202101beta1.GceProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project().size() > 0) {
    _internal_set_project(from._internal_project());
  }
  if (from.subscription().size() > 0) {
    _internal_set_subscription(from._internal_subscription());
  }
}

void GceProperties::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202101beta1.GceProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GceProperties::CopyFrom(const GceProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202101beta1.GceProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GceProperties::IsInitialized() const {
  return true;
}

void GceProperties::InternalSwap(GceProperties* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  project_.Swap(&other->project_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subscription_.Swap(&other->subscription_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GceProperties::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IbmProperties::InitAsDefaultInstance() {
}
class IbmProperties::_Internal {
 public:
};

IbmProperties::IbmProperties(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202101beta1.IbmProperties)
}
IbmProperties::IbmProperties(const IbmProperties& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  bucket_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bucket().empty()) {
    bucket_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_bucket(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202101beta1.IbmProperties)
}

void IbmProperties::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IbmProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  bucket_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

IbmProperties::~IbmProperties() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202101beta1.IbmProperties)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IbmProperties::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  bucket_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IbmProperties::ArenaDtor(void* object) {
  IbmProperties* _this = reinterpret_cast< IbmProperties* >(object);
  (void)_this;
}
void IbmProperties::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IbmProperties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IbmProperties& IbmProperties::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IbmProperties_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void IbmProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202101beta1.IbmProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bucket_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IbmProperties::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string bucket = 1[json_name = "bucket"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_bucket();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.IbmProperties.bucket"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IbmProperties::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202101beta1.IbmProperties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bucket = 1[json_name = "bucket"];
  if (this->bucket().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bucket().data(), static_cast<int>(this->_internal_bucket().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.IbmProperties.bucket");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_bucket(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202101beta1.IbmProperties)
  return target;
}

size_t IbmProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202101beta1.IbmProperties)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string bucket = 1[json_name = "bucket"];
  if (this->bucket().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bucket());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IbmProperties::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202101beta1.IbmProperties)
  GOOGLE_DCHECK_NE(&from, this);
  const IbmProperties* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IbmProperties>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202101beta1.IbmProperties)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202101beta1.IbmProperties)
    MergeFrom(*source);
  }
}

void IbmProperties::MergeFrom(const IbmProperties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202101beta1.IbmProperties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bucket().size() > 0) {
    _internal_set_bucket(from._internal_bucket());
  }
}

void IbmProperties::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202101beta1.IbmProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IbmProperties::CopyFrom(const IbmProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202101beta1.IbmProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IbmProperties::IsInitialized() const {
  return true;
}

void IbmProperties::InternalSwap(IbmProperties* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  bucket_.Swap(&other->bucket_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata IbmProperties::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Status::InitAsDefaultInstance() {
  ::kentik::cloud_export::v202101beta1::_Status_default_instance_._instance.get_mutable()->flow_found_ = const_cast< PROTOBUF_NAMESPACE_ID::BoolValue*>(
      PROTOBUF_NAMESPACE_ID::BoolValue::internal_default_instance());
  ::kentik::cloud_export::v202101beta1::_Status_default_instance_._instance.get_mutable()->api_access_ = const_cast< PROTOBUF_NAMESPACE_ID::BoolValue*>(
      PROTOBUF_NAMESPACE_ID::BoolValue::internal_default_instance());
  ::kentik::cloud_export::v202101beta1::_Status_default_instance_._instance.get_mutable()->storage_account_access_ = const_cast< PROTOBUF_NAMESPACE_ID::BoolValue*>(
      PROTOBUF_NAMESPACE_ID::BoolValue::internal_default_instance());
}
class Status::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::BoolValue& flow_found(const Status* msg);
  static const PROTOBUF_NAMESPACE_ID::BoolValue& api_access(const Status* msg);
  static const PROTOBUF_NAMESPACE_ID::BoolValue& storage_account_access(const Status* msg);
};

const PROTOBUF_NAMESPACE_ID::BoolValue&
Status::_Internal::flow_found(const Status* msg) {
  return *msg->flow_found_;
}
const PROTOBUF_NAMESPACE_ID::BoolValue&
Status::_Internal::api_access(const Status* msg) {
  return *msg->api_access_;
}
const PROTOBUF_NAMESPACE_ID::BoolValue&
Status::_Internal::storage_account_access(const Status* msg) {
  return *msg->storage_account_access_;
}
void Status::clear_flow_found() {
  if (GetArena() == nullptr && flow_found_ != nullptr) {
    delete flow_found_;
  }
  flow_found_ = nullptr;
}
void Status::clear_api_access() {
  if (GetArena() == nullptr && api_access_ != nullptr) {
    delete api_access_;
  }
  api_access_ = nullptr;
}
void Status::clear_storage_account_access() {
  if (GetArena() == nullptr && storage_account_access_ != nullptr) {
    delete storage_account_access_;
  }
  storage_account_access_ = nullptr;
}
Status::Status(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202101beta1.Status)
}
Status::Status(const Status& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_status(),
      GetArena());
  }
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error_message().empty()) {
    error_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_error_message(),
      GetArena());
  }
  if (from._internal_has_flow_found()) {
    flow_found_ = new PROTOBUF_NAMESPACE_ID::BoolValue(*from.flow_found_);
  } else {
    flow_found_ = nullptr;
  }
  if (from._internal_has_api_access()) {
    api_access_ = new PROTOBUF_NAMESPACE_ID::BoolValue(*from.api_access_);
  } else {
    api_access_ = nullptr;
  }
  if (from._internal_has_storage_account_access()) {
    storage_account_access_ = new PROTOBUF_NAMESPACE_ID::BoolValue(*from.storage_account_access_);
  } else {
    storage_account_access_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202101beta1.Status)
}

void Status::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Status_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&flow_found_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&storage_account_access_) -
      reinterpret_cast<char*>(&flow_found_)) + sizeof(storage_account_access_));
}

Status::~Status() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202101beta1.Status)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Status::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete flow_found_;
  if (this != internal_default_instance()) delete api_access_;
  if (this != internal_default_instance()) delete storage_account_access_;
}

void Status::ArenaDtor(void* object) {
  Status* _this = reinterpret_cast< Status* >(object);
  (void)_this;
}
void Status::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Status::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Status& Status::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Status_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202101beta1.Status)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && flow_found_ != nullptr) {
    delete flow_found_;
  }
  flow_found_ = nullptr;
  if (GetArena() == nullptr && api_access_ != nullptr) {
    delete api_access_;
  }
  api_access_ = nullptr;
  if (GetArena() == nullptr && storage_account_access_ != nullptr) {
    delete storage_account_access_;
  }
  storage_account_access_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Status::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string status = 1[json_name = "status"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.Status.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string error_message = 2[json_name = "errorMessage"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.Status.error_message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.BoolValue flow_found = 3[json_name = "flowFound"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_flow_found(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.BoolValue api_access = 4[json_name = "apiAccess"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_api_access(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.BoolValue storage_account_access = 5[json_name = "storageAccountAccess"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_storage_account_access(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Status::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202101beta1.Status)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1[json_name = "status"];
  if (this->status().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.Status.status");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_status(), target);
  }

  // string error_message = 2[json_name = "errorMessage"];
  if (this->error_message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.Status.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  // .google.protobuf.BoolValue flow_found = 3[json_name = "flowFound"];
  if (this->has_flow_found()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::flow_found(this), target, stream);
  }

  // .google.protobuf.BoolValue api_access = 4[json_name = "apiAccess"];
  if (this->has_api_access()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::api_access(this), target, stream);
  }

  // .google.protobuf.BoolValue storage_account_access = 5[json_name = "storageAccountAccess"];
  if (this->has_storage_account_access()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::storage_account_access(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202101beta1.Status)
  return target;
}

size_t Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202101beta1.Status)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 1[json_name = "status"];
  if (this->status().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // string error_message = 2[json_name = "errorMessage"];
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // .google.protobuf.BoolValue flow_found = 3[json_name = "flowFound"];
  if (this->has_flow_found()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *flow_found_);
  }

  // .google.protobuf.BoolValue api_access = 4[json_name = "apiAccess"];
  if (this->has_api_access()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *api_access_);
  }

  // .google.protobuf.BoolValue storage_account_access = 5[json_name = "storageAccountAccess"];
  if (this->has_storage_account_access()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *storage_account_access_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Status::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202101beta1.Status)
  GOOGLE_DCHECK_NE(&from, this);
  const Status* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Status>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202101beta1.Status)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202101beta1.Status)
    MergeFrom(*source);
  }
}

void Status::MergeFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202101beta1.Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status().size() > 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.error_message().size() > 0) {
    _internal_set_error_message(from._internal_error_message());
  }
  if (from.has_flow_found()) {
    _internal_mutable_flow_found()->PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(from._internal_flow_found());
  }
  if (from.has_api_access()) {
    _internal_mutable_api_access()->PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(from._internal_api_access());
  }
  if (from.has_storage_account_access()) {
    _internal_mutable_storage_account_access()->PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(from._internal_storage_account_access());
  }
}

void Status::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202101beta1.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202101beta1.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Status::IsInitialized() const {
  return true;
}

void Status::InternalSwap(Status* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  status_.Swap(&other->status_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_message_.Swap(&other->error_message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Status, storage_account_access_)
      + sizeof(Status::storage_account_access_)
      - PROTOBUF_FIELD_OFFSET(Status, flow_found_)>(
          reinterpret_cast<char*>(&flow_found_),
          reinterpret_cast<char*>(&other->flow_found_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Status::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateCloudExportRequest::InitAsDefaultInstance() {
  ::kentik::cloud_export::v202101beta1::_CreateCloudExportRequest_default_instance_._instance.get_mutable()->export__ = const_cast< ::kentik::cloud_export::v202101beta1::CloudExport*>(
      ::kentik::cloud_export::v202101beta1::CloudExport::internal_default_instance());
}
class CreateCloudExportRequest::_Internal {
 public:
  static const ::kentik::cloud_export::v202101beta1::CloudExport& export_(const CreateCloudExportRequest* msg);
};

const ::kentik::cloud_export::v202101beta1::CloudExport&
CreateCloudExportRequest::_Internal::export_(const CreateCloudExportRequest* msg) {
  return *msg->export__;
}
CreateCloudExportRequest::CreateCloudExportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202101beta1.CreateCloudExportRequest)
}
CreateCloudExportRequest::CreateCloudExportRequest(const CreateCloudExportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_export_()) {
    export__ = new ::kentik::cloud_export::v202101beta1::CloudExport(*from.export__);
  } else {
    export__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202101beta1.CreateCloudExportRequest)
}

void CreateCloudExportRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  export__ = nullptr;
}

CreateCloudExportRequest::~CreateCloudExportRequest() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202101beta1.CreateCloudExportRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateCloudExportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete export__;
}

void CreateCloudExportRequest::ArenaDtor(void* object) {
  CreateCloudExportRequest* _this = reinterpret_cast< CreateCloudExportRequest* >(object);
  (void)_this;
}
void CreateCloudExportRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateCloudExportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateCloudExportRequest& CreateCloudExportRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void CreateCloudExportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202101beta1.CreateCloudExportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && export__ != nullptr) {
    delete export__;
  }
  export__ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateCloudExportRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.cloud_export.v202101beta1.CloudExport export = 1[json_name = "export"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_export_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateCloudExportRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202101beta1.CreateCloudExportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.cloud_export.v202101beta1.CloudExport export = 1[json_name = "export"];
  if (this->has_export_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::export_(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202101beta1.CreateCloudExportRequest)
  return target;
}

size_t CreateCloudExportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202101beta1.CreateCloudExportRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.cloud_export.v202101beta1.CloudExport export = 1[json_name = "export"];
  if (this->has_export_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *export__);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateCloudExportRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202101beta1.CreateCloudExportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateCloudExportRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateCloudExportRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202101beta1.CreateCloudExportRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202101beta1.CreateCloudExportRequest)
    MergeFrom(*source);
  }
}

void CreateCloudExportRequest::MergeFrom(const CreateCloudExportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202101beta1.CreateCloudExportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_export_()) {
    _internal_mutable_export_()->::kentik::cloud_export::v202101beta1::CloudExport::MergeFrom(from._internal_export_());
  }
}

void CreateCloudExportRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202101beta1.CreateCloudExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateCloudExportRequest::CopyFrom(const CreateCloudExportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202101beta1.CreateCloudExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCloudExportRequest::IsInitialized() const {
  return true;
}

void CreateCloudExportRequest::InternalSwap(CreateCloudExportRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(export__, other->export__);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateCloudExportRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateCloudExportResponse::InitAsDefaultInstance() {
  ::kentik::cloud_export::v202101beta1::_CreateCloudExportResponse_default_instance_._instance.get_mutable()->export__ = const_cast< ::kentik::cloud_export::v202101beta1::CloudExport*>(
      ::kentik::cloud_export::v202101beta1::CloudExport::internal_default_instance());
}
class CreateCloudExportResponse::_Internal {
 public:
  static const ::kentik::cloud_export::v202101beta1::CloudExport& export_(const CreateCloudExportResponse* msg);
};

const ::kentik::cloud_export::v202101beta1::CloudExport&
CreateCloudExportResponse::_Internal::export_(const CreateCloudExportResponse* msg) {
  return *msg->export__;
}
CreateCloudExportResponse::CreateCloudExportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202101beta1.CreateCloudExportResponse)
}
CreateCloudExportResponse::CreateCloudExportResponse(const CreateCloudExportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_export_()) {
    export__ = new ::kentik::cloud_export::v202101beta1::CloudExport(*from.export__);
  } else {
    export__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202101beta1.CreateCloudExportResponse)
}

void CreateCloudExportResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  export__ = nullptr;
}

CreateCloudExportResponse::~CreateCloudExportResponse() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202101beta1.CreateCloudExportResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateCloudExportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete export__;
}

void CreateCloudExportResponse::ArenaDtor(void* object) {
  CreateCloudExportResponse* _this = reinterpret_cast< CreateCloudExportResponse* >(object);
  (void)_this;
}
void CreateCloudExportResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateCloudExportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateCloudExportResponse& CreateCloudExportResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void CreateCloudExportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202101beta1.CreateCloudExportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && export__ != nullptr) {
    delete export__;
  }
  export__ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateCloudExportResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.cloud_export.v202101beta1.CloudExport export = 1[json_name = "export"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_export_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateCloudExportResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202101beta1.CreateCloudExportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.cloud_export.v202101beta1.CloudExport export = 1[json_name = "export"];
  if (this->has_export_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::export_(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202101beta1.CreateCloudExportResponse)
  return target;
}

size_t CreateCloudExportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202101beta1.CreateCloudExportResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.cloud_export.v202101beta1.CloudExport export = 1[json_name = "export"];
  if (this->has_export_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *export__);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateCloudExportResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202101beta1.CreateCloudExportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateCloudExportResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateCloudExportResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202101beta1.CreateCloudExportResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202101beta1.CreateCloudExportResponse)
    MergeFrom(*source);
  }
}

void CreateCloudExportResponse::MergeFrom(const CreateCloudExportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202101beta1.CreateCloudExportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_export_()) {
    _internal_mutable_export_()->::kentik::cloud_export::v202101beta1::CloudExport::MergeFrom(from._internal_export_());
  }
}

void CreateCloudExportResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202101beta1.CreateCloudExportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateCloudExportResponse::CopyFrom(const CreateCloudExportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202101beta1.CreateCloudExportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCloudExportResponse::IsInitialized() const {
  return true;
}

void CreateCloudExportResponse::InternalSwap(CreateCloudExportResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(export__, other->export__);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateCloudExportResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListCloudExportRequest::InitAsDefaultInstance() {
}
class ListCloudExportRequest::_Internal {
 public:
};

ListCloudExportRequest::ListCloudExportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202101beta1.ListCloudExportRequest)
}
ListCloudExportRequest::ListCloudExportRequest(const ListCloudExportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202101beta1.ListCloudExportRequest)
}

void ListCloudExportRequest::SharedCtor() {
}

ListCloudExportRequest::~ListCloudExportRequest() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202101beta1.ListCloudExportRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListCloudExportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListCloudExportRequest::ArenaDtor(void* object) {
  ListCloudExportRequest* _this = reinterpret_cast< ListCloudExportRequest* >(object);
  (void)_this;
}
void ListCloudExportRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListCloudExportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListCloudExportRequest& ListCloudExportRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void ListCloudExportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202101beta1.ListCloudExportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListCloudExportRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListCloudExportRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202101beta1.ListCloudExportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202101beta1.ListCloudExportRequest)
  return target;
}

size_t ListCloudExportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202101beta1.ListCloudExportRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListCloudExportRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202101beta1.ListCloudExportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCloudExportRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListCloudExportRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202101beta1.ListCloudExportRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202101beta1.ListCloudExportRequest)
    MergeFrom(*source);
  }
}

void ListCloudExportRequest::MergeFrom(const ListCloudExportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202101beta1.ListCloudExportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ListCloudExportRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202101beta1.ListCloudExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCloudExportRequest::CopyFrom(const ListCloudExportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202101beta1.ListCloudExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCloudExportRequest::IsInitialized() const {
  return true;
}

void ListCloudExportRequest::InternalSwap(ListCloudExportRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListCloudExportRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListCloudExportResponse::InitAsDefaultInstance() {
}
class ListCloudExportResponse::_Internal {
 public:
};

ListCloudExportResponse::ListCloudExportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  exports_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202101beta1.ListCloudExportResponse)
}
ListCloudExportResponse::ListCloudExportResponse(const ListCloudExportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      exports_(from.exports_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  invalid_exports_count_ = from.invalid_exports_count_;
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202101beta1.ListCloudExportResponse)
}

void ListCloudExportResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  invalid_exports_count_ = 0u;
}

ListCloudExportResponse::~ListCloudExportResponse() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202101beta1.ListCloudExportResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListCloudExportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListCloudExportResponse::ArenaDtor(void* object) {
  ListCloudExportResponse* _this = reinterpret_cast< ListCloudExportResponse* >(object);
  (void)_this;
}
void ListCloudExportResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListCloudExportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListCloudExportResponse& ListCloudExportResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void ListCloudExportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202101beta1.ListCloudExportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exports_.Clear();
  invalid_exports_count_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListCloudExportResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .kentik.cloud_export.v202101beta1.CloudExport exports = 1[json_name = "exports"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_exports(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // uint32 invalid_exports_count = 2[json_name = "invalidExportsCount"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          invalid_exports_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListCloudExportResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202101beta1.ListCloudExportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .kentik.cloud_export.v202101beta1.CloudExport exports = 1[json_name = "exports"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_exports_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_exports(i), target, stream);
  }

  // uint32 invalid_exports_count = 2[json_name = "invalidExportsCount"];
  if (this->invalid_exports_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_invalid_exports_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202101beta1.ListCloudExportResponse)
  return target;
}

size_t ListCloudExportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202101beta1.ListCloudExportResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .kentik.cloud_export.v202101beta1.CloudExport exports = 1[json_name = "exports"];
  total_size += 1UL * this->_internal_exports_size();
  for (const auto& msg : this->exports_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint32 invalid_exports_count = 2[json_name = "invalidExportsCount"];
  if (this->invalid_exports_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_invalid_exports_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListCloudExportResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202101beta1.ListCloudExportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCloudExportResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListCloudExportResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202101beta1.ListCloudExportResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202101beta1.ListCloudExportResponse)
    MergeFrom(*source);
  }
}

void ListCloudExportResponse::MergeFrom(const ListCloudExportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202101beta1.ListCloudExportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  exports_.MergeFrom(from.exports_);
  if (from.invalid_exports_count() != 0) {
    _internal_set_invalid_exports_count(from._internal_invalid_exports_count());
  }
}

void ListCloudExportResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202101beta1.ListCloudExportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCloudExportResponse::CopyFrom(const ListCloudExportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202101beta1.ListCloudExportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCloudExportResponse::IsInitialized() const {
  return true;
}

void ListCloudExportResponse::InternalSwap(ListCloudExportResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  exports_.InternalSwap(&other->exports_);
  swap(invalid_exports_count_, other->invalid_exports_count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListCloudExportResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetCloudExportRequest::InitAsDefaultInstance() {
}
class GetCloudExportRequest::_Internal {
 public:
};

GetCloudExportRequest::GetCloudExportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202101beta1.GetCloudExportRequest)
}
GetCloudExportRequest::GetCloudExportRequest(const GetCloudExportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202101beta1.GetCloudExportRequest)
}

void GetCloudExportRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetCloudExportRequest::~GetCloudExportRequest() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202101beta1.GetCloudExportRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetCloudExportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetCloudExportRequest::ArenaDtor(void* object) {
  GetCloudExportRequest* _this = reinterpret_cast< GetCloudExportRequest* >(object);
  (void)_this;
}
void GetCloudExportRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCloudExportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetCloudExportRequest& GetCloudExportRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void GetCloudExportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202101beta1.GetCloudExportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCloudExportRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.GetCloudExportRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCloudExportRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202101beta1.GetCloudExportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.GetCloudExportRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202101beta1.GetCloudExportRequest)
  return target;
}

size_t GetCloudExportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202101beta1.GetCloudExportRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCloudExportRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202101beta1.GetCloudExportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCloudExportRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCloudExportRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202101beta1.GetCloudExportRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202101beta1.GetCloudExportRequest)
    MergeFrom(*source);
  }
}

void GetCloudExportRequest::MergeFrom(const GetCloudExportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202101beta1.GetCloudExportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetCloudExportRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202101beta1.GetCloudExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCloudExportRequest::CopyFrom(const GetCloudExportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202101beta1.GetCloudExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCloudExportRequest::IsInitialized() const {
  return true;
}

void GetCloudExportRequest::InternalSwap(GetCloudExportRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCloudExportRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetCloudExportResponse::InitAsDefaultInstance() {
  ::kentik::cloud_export::v202101beta1::_GetCloudExportResponse_default_instance_._instance.get_mutable()->export__ = const_cast< ::kentik::cloud_export::v202101beta1::CloudExport*>(
      ::kentik::cloud_export::v202101beta1::CloudExport::internal_default_instance());
}
class GetCloudExportResponse::_Internal {
 public:
  static const ::kentik::cloud_export::v202101beta1::CloudExport& export_(const GetCloudExportResponse* msg);
};

const ::kentik::cloud_export::v202101beta1::CloudExport&
GetCloudExportResponse::_Internal::export_(const GetCloudExportResponse* msg) {
  return *msg->export__;
}
GetCloudExportResponse::GetCloudExportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202101beta1.GetCloudExportResponse)
}
GetCloudExportResponse::GetCloudExportResponse(const GetCloudExportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_export_()) {
    export__ = new ::kentik::cloud_export::v202101beta1::CloudExport(*from.export__);
  } else {
    export__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202101beta1.GetCloudExportResponse)
}

void GetCloudExportResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  export__ = nullptr;
}

GetCloudExportResponse::~GetCloudExportResponse() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202101beta1.GetCloudExportResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetCloudExportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete export__;
}

void GetCloudExportResponse::ArenaDtor(void* object) {
  GetCloudExportResponse* _this = reinterpret_cast< GetCloudExportResponse* >(object);
  (void)_this;
}
void GetCloudExportResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCloudExportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetCloudExportResponse& GetCloudExportResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void GetCloudExportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202101beta1.GetCloudExportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && export__ != nullptr) {
    delete export__;
  }
  export__ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCloudExportResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.cloud_export.v202101beta1.CloudExport export = 1[json_name = "export"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_export_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCloudExportResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202101beta1.GetCloudExportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.cloud_export.v202101beta1.CloudExport export = 1[json_name = "export"];
  if (this->has_export_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::export_(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202101beta1.GetCloudExportResponse)
  return target;
}

size_t GetCloudExportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202101beta1.GetCloudExportResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.cloud_export.v202101beta1.CloudExport export = 1[json_name = "export"];
  if (this->has_export_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *export__);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCloudExportResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202101beta1.GetCloudExportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCloudExportResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCloudExportResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202101beta1.GetCloudExportResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202101beta1.GetCloudExportResponse)
    MergeFrom(*source);
  }
}

void GetCloudExportResponse::MergeFrom(const GetCloudExportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202101beta1.GetCloudExportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_export_()) {
    _internal_mutable_export_()->::kentik::cloud_export::v202101beta1::CloudExport::MergeFrom(from._internal_export_());
  }
}

void GetCloudExportResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202101beta1.GetCloudExportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCloudExportResponse::CopyFrom(const GetCloudExportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202101beta1.GetCloudExportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCloudExportResponse::IsInitialized() const {
  return true;
}

void GetCloudExportResponse::InternalSwap(GetCloudExportResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(export__, other->export__);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCloudExportResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PatchCloudExportRequest::InitAsDefaultInstance() {
  ::kentik::cloud_export::v202101beta1::_PatchCloudExportRequest_default_instance_._instance.get_mutable()->export__ = const_cast< ::kentik::cloud_export::v202101beta1::CloudExport*>(
      ::kentik::cloud_export::v202101beta1::CloudExport::internal_default_instance());
  ::kentik::cloud_export::v202101beta1::_PatchCloudExportRequest_default_instance_._instance.get_mutable()->mask_ = const_cast< PROTOBUF_NAMESPACE_ID::FieldMask*>(
      PROTOBUF_NAMESPACE_ID::FieldMask::internal_default_instance());
}
class PatchCloudExportRequest::_Internal {
 public:
  static const ::kentik::cloud_export::v202101beta1::CloudExport& export_(const PatchCloudExportRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::FieldMask& mask(const PatchCloudExportRequest* msg);
};

const ::kentik::cloud_export::v202101beta1::CloudExport&
PatchCloudExportRequest::_Internal::export_(const PatchCloudExportRequest* msg) {
  return *msg->export__;
}
const PROTOBUF_NAMESPACE_ID::FieldMask&
PatchCloudExportRequest::_Internal::mask(const PatchCloudExportRequest* msg) {
  return *msg->mask_;
}
void PatchCloudExportRequest::clear_mask() {
  if (GetArena() == nullptr && mask_ != nullptr) {
    delete mask_;
  }
  mask_ = nullptr;
}
PatchCloudExportRequest::PatchCloudExportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202101beta1.PatchCloudExportRequest)
}
PatchCloudExportRequest::PatchCloudExportRequest(const PatchCloudExportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_export_()) {
    export__ = new ::kentik::cloud_export::v202101beta1::CloudExport(*from.export__);
  } else {
    export__ = nullptr;
  }
  if (from._internal_has_mask()) {
    mask_ = new PROTOBUF_NAMESPACE_ID::FieldMask(*from.mask_);
  } else {
    mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202101beta1.PatchCloudExportRequest)
}

void PatchCloudExportRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PatchCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  ::memset(&export__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mask_) -
      reinterpret_cast<char*>(&export__)) + sizeof(mask_));
}

PatchCloudExportRequest::~PatchCloudExportRequest() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202101beta1.PatchCloudExportRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PatchCloudExportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete export__;
  if (this != internal_default_instance()) delete mask_;
}

void PatchCloudExportRequest::ArenaDtor(void* object) {
  PatchCloudExportRequest* _this = reinterpret_cast< PatchCloudExportRequest* >(object);
  (void)_this;
}
void PatchCloudExportRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PatchCloudExportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PatchCloudExportRequest& PatchCloudExportRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PatchCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void PatchCloudExportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202101beta1.PatchCloudExportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && export__ != nullptr) {
    delete export__;
  }
  export__ = nullptr;
  if (GetArena() == nullptr && mask_ != nullptr) {
    delete mask_;
  }
  mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PatchCloudExportRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.cloud_export.v202101beta1.CloudExport export = 1[json_name = "export"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_export_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask mask = 2[json_name = "mask"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_mask(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PatchCloudExportRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202101beta1.PatchCloudExportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.cloud_export.v202101beta1.CloudExport export = 1[json_name = "export"];
  if (this->has_export_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::export_(this), target, stream);
  }

  // .google.protobuf.FieldMask mask = 2[json_name = "mask"];
  if (this->has_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202101beta1.PatchCloudExportRequest)
  return target;
}

size_t PatchCloudExportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202101beta1.PatchCloudExportRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.cloud_export.v202101beta1.CloudExport export = 1[json_name = "export"];
  if (this->has_export_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *export__);
  }

  // .google.protobuf.FieldMask mask = 2[json_name = "mask"];
  if (this->has_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mask_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PatchCloudExportRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202101beta1.PatchCloudExportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PatchCloudExportRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PatchCloudExportRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202101beta1.PatchCloudExportRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202101beta1.PatchCloudExportRequest)
    MergeFrom(*source);
  }
}

void PatchCloudExportRequest::MergeFrom(const PatchCloudExportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202101beta1.PatchCloudExportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_export_()) {
    _internal_mutable_export_()->::kentik::cloud_export::v202101beta1::CloudExport::MergeFrom(from._internal_export_());
  }
  if (from.has_mask()) {
    _internal_mutable_mask()->PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_mask());
  }
}

void PatchCloudExportRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202101beta1.PatchCloudExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PatchCloudExportRequest::CopyFrom(const PatchCloudExportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202101beta1.PatchCloudExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PatchCloudExportRequest::IsInitialized() const {
  return true;
}

void PatchCloudExportRequest::InternalSwap(PatchCloudExportRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PatchCloudExportRequest, mask_)
      + sizeof(PatchCloudExportRequest::mask_)
      - PROTOBUF_FIELD_OFFSET(PatchCloudExportRequest, export__)>(
          reinterpret_cast<char*>(&export__),
          reinterpret_cast<char*>(&other->export__));
}

::PROTOBUF_NAMESPACE_ID::Metadata PatchCloudExportRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PatchCloudExportResponse::InitAsDefaultInstance() {
  ::kentik::cloud_export::v202101beta1::_PatchCloudExportResponse_default_instance_._instance.get_mutable()->export__ = const_cast< ::kentik::cloud_export::v202101beta1::CloudExport*>(
      ::kentik::cloud_export::v202101beta1::CloudExport::internal_default_instance());
}
class PatchCloudExportResponse::_Internal {
 public:
  static const ::kentik::cloud_export::v202101beta1::CloudExport& export_(const PatchCloudExportResponse* msg);
};

const ::kentik::cloud_export::v202101beta1::CloudExport&
PatchCloudExportResponse::_Internal::export_(const PatchCloudExportResponse* msg) {
  return *msg->export__;
}
PatchCloudExportResponse::PatchCloudExportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202101beta1.PatchCloudExportResponse)
}
PatchCloudExportResponse::PatchCloudExportResponse(const PatchCloudExportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_export_()) {
    export__ = new ::kentik::cloud_export::v202101beta1::CloudExport(*from.export__);
  } else {
    export__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202101beta1.PatchCloudExportResponse)
}

void PatchCloudExportResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PatchCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  export__ = nullptr;
}

PatchCloudExportResponse::~PatchCloudExportResponse() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202101beta1.PatchCloudExportResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PatchCloudExportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete export__;
}

void PatchCloudExportResponse::ArenaDtor(void* object) {
  PatchCloudExportResponse* _this = reinterpret_cast< PatchCloudExportResponse* >(object);
  (void)_this;
}
void PatchCloudExportResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PatchCloudExportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PatchCloudExportResponse& PatchCloudExportResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PatchCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void PatchCloudExportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202101beta1.PatchCloudExportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && export__ != nullptr) {
    delete export__;
  }
  export__ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PatchCloudExportResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.cloud_export.v202101beta1.CloudExport export = 1[json_name = "export"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_export_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PatchCloudExportResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202101beta1.PatchCloudExportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.cloud_export.v202101beta1.CloudExport export = 1[json_name = "export"];
  if (this->has_export_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::export_(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202101beta1.PatchCloudExportResponse)
  return target;
}

size_t PatchCloudExportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202101beta1.PatchCloudExportResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.cloud_export.v202101beta1.CloudExport export = 1[json_name = "export"];
  if (this->has_export_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *export__);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PatchCloudExportResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202101beta1.PatchCloudExportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PatchCloudExportResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PatchCloudExportResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202101beta1.PatchCloudExportResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202101beta1.PatchCloudExportResponse)
    MergeFrom(*source);
  }
}

void PatchCloudExportResponse::MergeFrom(const PatchCloudExportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202101beta1.PatchCloudExportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_export_()) {
    _internal_mutable_export_()->::kentik::cloud_export::v202101beta1::CloudExport::MergeFrom(from._internal_export_());
  }
}

void PatchCloudExportResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202101beta1.PatchCloudExportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PatchCloudExportResponse::CopyFrom(const PatchCloudExportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202101beta1.PatchCloudExportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PatchCloudExportResponse::IsInitialized() const {
  return true;
}

void PatchCloudExportResponse::InternalSwap(PatchCloudExportResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(export__, other->export__);
}

::PROTOBUF_NAMESPACE_ID::Metadata PatchCloudExportResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateCloudExportRequest::InitAsDefaultInstance() {
  ::kentik::cloud_export::v202101beta1::_UpdateCloudExportRequest_default_instance_._instance.get_mutable()->export__ = const_cast< ::kentik::cloud_export::v202101beta1::CloudExport*>(
      ::kentik::cloud_export::v202101beta1::CloudExport::internal_default_instance());
}
class UpdateCloudExportRequest::_Internal {
 public:
  static const ::kentik::cloud_export::v202101beta1::CloudExport& export_(const UpdateCloudExportRequest* msg);
};

const ::kentik::cloud_export::v202101beta1::CloudExport&
UpdateCloudExportRequest::_Internal::export_(const UpdateCloudExportRequest* msg) {
  return *msg->export__;
}
UpdateCloudExportRequest::UpdateCloudExportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202101beta1.UpdateCloudExportRequest)
}
UpdateCloudExportRequest::UpdateCloudExportRequest(const UpdateCloudExportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_export_()) {
    export__ = new ::kentik::cloud_export::v202101beta1::CloudExport(*from.export__);
  } else {
    export__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202101beta1.UpdateCloudExportRequest)
}

void UpdateCloudExportRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  export__ = nullptr;
}

UpdateCloudExportRequest::~UpdateCloudExportRequest() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202101beta1.UpdateCloudExportRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateCloudExportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete export__;
}

void UpdateCloudExportRequest::ArenaDtor(void* object) {
  UpdateCloudExportRequest* _this = reinterpret_cast< UpdateCloudExportRequest* >(object);
  (void)_this;
}
void UpdateCloudExportRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateCloudExportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateCloudExportRequest& UpdateCloudExportRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void UpdateCloudExportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202101beta1.UpdateCloudExportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && export__ != nullptr) {
    delete export__;
  }
  export__ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateCloudExportRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.cloud_export.v202101beta1.CloudExport export = 1[json_name = "export"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_export_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateCloudExportRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202101beta1.UpdateCloudExportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.cloud_export.v202101beta1.CloudExport export = 1[json_name = "export"];
  if (this->has_export_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::export_(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202101beta1.UpdateCloudExportRequest)
  return target;
}

size_t UpdateCloudExportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202101beta1.UpdateCloudExportRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.cloud_export.v202101beta1.CloudExport export = 1[json_name = "export"];
  if (this->has_export_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *export__);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateCloudExportRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202101beta1.UpdateCloudExportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateCloudExportRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateCloudExportRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202101beta1.UpdateCloudExportRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202101beta1.UpdateCloudExportRequest)
    MergeFrom(*source);
  }
}

void UpdateCloudExportRequest::MergeFrom(const UpdateCloudExportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202101beta1.UpdateCloudExportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_export_()) {
    _internal_mutable_export_()->::kentik::cloud_export::v202101beta1::CloudExport::MergeFrom(from._internal_export_());
  }
}

void UpdateCloudExportRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202101beta1.UpdateCloudExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCloudExportRequest::CopyFrom(const UpdateCloudExportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202101beta1.UpdateCloudExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCloudExportRequest::IsInitialized() const {
  return true;
}

void UpdateCloudExportRequest::InternalSwap(UpdateCloudExportRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(export__, other->export__);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateCloudExportRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateCloudExportResponse::InitAsDefaultInstance() {
  ::kentik::cloud_export::v202101beta1::_UpdateCloudExportResponse_default_instance_._instance.get_mutable()->export__ = const_cast< ::kentik::cloud_export::v202101beta1::CloudExport*>(
      ::kentik::cloud_export::v202101beta1::CloudExport::internal_default_instance());
}
class UpdateCloudExportResponse::_Internal {
 public:
  static const ::kentik::cloud_export::v202101beta1::CloudExport& export_(const UpdateCloudExportResponse* msg);
};

const ::kentik::cloud_export::v202101beta1::CloudExport&
UpdateCloudExportResponse::_Internal::export_(const UpdateCloudExportResponse* msg) {
  return *msg->export__;
}
UpdateCloudExportResponse::UpdateCloudExportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202101beta1.UpdateCloudExportResponse)
}
UpdateCloudExportResponse::UpdateCloudExportResponse(const UpdateCloudExportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_export_()) {
    export__ = new ::kentik::cloud_export::v202101beta1::CloudExport(*from.export__);
  } else {
    export__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202101beta1.UpdateCloudExportResponse)
}

void UpdateCloudExportResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  export__ = nullptr;
}

UpdateCloudExportResponse::~UpdateCloudExportResponse() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202101beta1.UpdateCloudExportResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateCloudExportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete export__;
}

void UpdateCloudExportResponse::ArenaDtor(void* object) {
  UpdateCloudExportResponse* _this = reinterpret_cast< UpdateCloudExportResponse* >(object);
  (void)_this;
}
void UpdateCloudExportResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateCloudExportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateCloudExportResponse& UpdateCloudExportResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void UpdateCloudExportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202101beta1.UpdateCloudExportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && export__ != nullptr) {
    delete export__;
  }
  export__ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateCloudExportResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .kentik.cloud_export.v202101beta1.CloudExport export = 1[json_name = "export"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_export_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateCloudExportResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202101beta1.UpdateCloudExportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kentik.cloud_export.v202101beta1.CloudExport export = 1[json_name = "export"];
  if (this->has_export_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::export_(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202101beta1.UpdateCloudExportResponse)
  return target;
}

size_t UpdateCloudExportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202101beta1.UpdateCloudExportResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .kentik.cloud_export.v202101beta1.CloudExport export = 1[json_name = "export"];
  if (this->has_export_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *export__);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateCloudExportResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202101beta1.UpdateCloudExportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateCloudExportResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateCloudExportResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202101beta1.UpdateCloudExportResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202101beta1.UpdateCloudExportResponse)
    MergeFrom(*source);
  }
}

void UpdateCloudExportResponse::MergeFrom(const UpdateCloudExportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202101beta1.UpdateCloudExportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_export_()) {
    _internal_mutable_export_()->::kentik::cloud_export::v202101beta1::CloudExport::MergeFrom(from._internal_export_());
  }
}

void UpdateCloudExportResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202101beta1.UpdateCloudExportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCloudExportResponse::CopyFrom(const UpdateCloudExportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202101beta1.UpdateCloudExportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCloudExportResponse::IsInitialized() const {
  return true;
}

void UpdateCloudExportResponse::InternalSwap(UpdateCloudExportResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(export__, other->export__);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateCloudExportResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteCloudExportRequest::InitAsDefaultInstance() {
}
class DeleteCloudExportRequest::_Internal {
 public:
};

DeleteCloudExportRequest::DeleteCloudExportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202101beta1.DeleteCloudExportRequest)
}
DeleteCloudExportRequest::DeleteCloudExportRequest(const DeleteCloudExportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202101beta1.DeleteCloudExportRequest)
}

void DeleteCloudExportRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteCloudExportRequest::~DeleteCloudExportRequest() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202101beta1.DeleteCloudExportRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteCloudExportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteCloudExportRequest::ArenaDtor(void* object) {
  DeleteCloudExportRequest* _this = reinterpret_cast< DeleteCloudExportRequest* >(object);
  (void)_this;
}
void DeleteCloudExportRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteCloudExportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteCloudExportRequest& DeleteCloudExportRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteCloudExportRequest_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void DeleteCloudExportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202101beta1.DeleteCloudExportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteCloudExportRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1[json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "kentik.cloud_export.v202101beta1.DeleteCloudExportRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteCloudExportRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202101beta1.DeleteCloudExportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "kentik.cloud_export.v202101beta1.DeleteCloudExportRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202101beta1.DeleteCloudExportRequest)
  return target;
}

size_t DeleteCloudExportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202101beta1.DeleteCloudExportRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1[json_name = "id"];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteCloudExportRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202101beta1.DeleteCloudExportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteCloudExportRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteCloudExportRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202101beta1.DeleteCloudExportRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202101beta1.DeleteCloudExportRequest)
    MergeFrom(*source);
  }
}

void DeleteCloudExportRequest::MergeFrom(const DeleteCloudExportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202101beta1.DeleteCloudExportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteCloudExportRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202101beta1.DeleteCloudExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteCloudExportRequest::CopyFrom(const DeleteCloudExportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202101beta1.DeleteCloudExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteCloudExportRequest::IsInitialized() const {
  return true;
}

void DeleteCloudExportRequest::InternalSwap(DeleteCloudExportRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteCloudExportRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteCloudExportResponse::InitAsDefaultInstance() {
}
class DeleteCloudExportResponse::_Internal {
 public:
};

DeleteCloudExportResponse::DeleteCloudExportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.cloud_export.v202101beta1.DeleteCloudExportResponse)
}
DeleteCloudExportResponse::DeleteCloudExportResponse(const DeleteCloudExportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kentik.cloud_export.v202101beta1.DeleteCloudExportResponse)
}

void DeleteCloudExportResponse::SharedCtor() {
}

DeleteCloudExportResponse::~DeleteCloudExportResponse() {
  // @@protoc_insertion_point(destructor:kentik.cloud_export.v202101beta1.DeleteCloudExportResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteCloudExportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteCloudExportResponse::ArenaDtor(void* object) {
  DeleteCloudExportResponse* _this = reinterpret_cast< DeleteCloudExportResponse* >(object);
  (void)_this;
}
void DeleteCloudExportResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteCloudExportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteCloudExportResponse& DeleteCloudExportResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteCloudExportResponse_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto.base);
  return *internal_default_instance();
}


void DeleteCloudExportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.cloud_export.v202101beta1.DeleteCloudExportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteCloudExportResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteCloudExportResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:kentik.cloud_export.v202101beta1.DeleteCloudExportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kentik.cloud_export.v202101beta1.DeleteCloudExportResponse)
  return target;
}

size_t DeleteCloudExportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kentik.cloud_export.v202101beta1.DeleteCloudExportResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteCloudExportResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kentik.cloud_export.v202101beta1.DeleteCloudExportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteCloudExportResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteCloudExportResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kentik.cloud_export.v202101beta1.DeleteCloudExportResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kentik.cloud_export.v202101beta1.DeleteCloudExportResponse)
    MergeFrom(*source);
  }
}

void DeleteCloudExportResponse::MergeFrom(const DeleteCloudExportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kentik.cloud_export.v202101beta1.DeleteCloudExportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteCloudExportResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kentik.cloud_export.v202101beta1.DeleteCloudExportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteCloudExportResponse::CopyFrom(const DeleteCloudExportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.cloud_export.v202101beta1.DeleteCloudExportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteCloudExportResponse::IsInitialized() const {
  return true;
}

void DeleteCloudExportResponse::InternalSwap(DeleteCloudExportResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteCloudExportResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v202101beta1
}  // namespace cloud_export
}  // namespace kentik
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202101beta1::CloudExport* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202101beta1::CloudExport >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202101beta1::CloudExport >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202101beta1::BgpProperties* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202101beta1::BgpProperties >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202101beta1::BgpProperties >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202101beta1::AwsProperties* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202101beta1::AwsProperties >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202101beta1::AwsProperties >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202101beta1::AzureProperties* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202101beta1::AzureProperties >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202101beta1::AzureProperties >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202101beta1::GceProperties* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202101beta1::GceProperties >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202101beta1::GceProperties >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202101beta1::IbmProperties* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202101beta1::IbmProperties >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202101beta1::IbmProperties >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202101beta1::Status* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202101beta1::Status >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202101beta1::Status >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202101beta1::CreateCloudExportRequest* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202101beta1::CreateCloudExportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202101beta1::CreateCloudExportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202101beta1::CreateCloudExportResponse* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202101beta1::CreateCloudExportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202101beta1::CreateCloudExportResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202101beta1::ListCloudExportRequest* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202101beta1::ListCloudExportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202101beta1::ListCloudExportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202101beta1::ListCloudExportResponse* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202101beta1::ListCloudExportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202101beta1::ListCloudExportResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202101beta1::GetCloudExportRequest* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202101beta1::GetCloudExportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202101beta1::GetCloudExportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202101beta1::GetCloudExportResponse* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202101beta1::GetCloudExportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202101beta1::GetCloudExportResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202101beta1::PatchCloudExportRequest* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202101beta1::PatchCloudExportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202101beta1::PatchCloudExportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202101beta1::PatchCloudExportResponse* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202101beta1::PatchCloudExportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202101beta1::PatchCloudExportResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202101beta1::UpdateCloudExportRequest* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202101beta1::UpdateCloudExportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202101beta1::UpdateCloudExportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202101beta1::UpdateCloudExportResponse* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202101beta1::UpdateCloudExportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202101beta1::UpdateCloudExportResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202101beta1::DeleteCloudExportRequest* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202101beta1::DeleteCloudExportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202101beta1::DeleteCloudExportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::kentik::cloud_export::v202101beta1::DeleteCloudExportResponse* Arena::CreateMaybeMessage< ::kentik::cloud_export::v202101beta1::DeleteCloudExportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::kentik::cloud_export::v202101beta1::DeleteCloudExportResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
