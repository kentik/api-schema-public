// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/cloud_export/v202101beta1/cloud_export.proto
// Protobuf C++ Version: 5.29.3

#ifndef kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto_2epb_2eh
#define kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/wrappers.pb.h"
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/protobuf/field_mask.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "kentik/core/v202303/annotations.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
namespace kentik {
namespace cloud_export {
namespace v202101beta1 {
class AwsProperties;
struct AwsPropertiesDefaultTypeInternal;
extern AwsPropertiesDefaultTypeInternal _AwsProperties_default_instance_;
class AzureProperties;
struct AzurePropertiesDefaultTypeInternal;
extern AzurePropertiesDefaultTypeInternal _AzureProperties_default_instance_;
class BgpProperties;
struct BgpPropertiesDefaultTypeInternal;
extern BgpPropertiesDefaultTypeInternal _BgpProperties_default_instance_;
class CloudExport;
struct CloudExportDefaultTypeInternal;
extern CloudExportDefaultTypeInternal _CloudExport_default_instance_;
class CreateCloudExportRequest;
struct CreateCloudExportRequestDefaultTypeInternal;
extern CreateCloudExportRequestDefaultTypeInternal _CreateCloudExportRequest_default_instance_;
class CreateCloudExportResponse;
struct CreateCloudExportResponseDefaultTypeInternal;
extern CreateCloudExportResponseDefaultTypeInternal _CreateCloudExportResponse_default_instance_;
class DeleteCloudExportRequest;
struct DeleteCloudExportRequestDefaultTypeInternal;
extern DeleteCloudExportRequestDefaultTypeInternal _DeleteCloudExportRequest_default_instance_;
class DeleteCloudExportResponse;
struct DeleteCloudExportResponseDefaultTypeInternal;
extern DeleteCloudExportResponseDefaultTypeInternal _DeleteCloudExportResponse_default_instance_;
class GceProperties;
struct GcePropertiesDefaultTypeInternal;
extern GcePropertiesDefaultTypeInternal _GceProperties_default_instance_;
class GetCloudExportRequest;
struct GetCloudExportRequestDefaultTypeInternal;
extern GetCloudExportRequestDefaultTypeInternal _GetCloudExportRequest_default_instance_;
class GetCloudExportResponse;
struct GetCloudExportResponseDefaultTypeInternal;
extern GetCloudExportResponseDefaultTypeInternal _GetCloudExportResponse_default_instance_;
class IbmProperties;
struct IbmPropertiesDefaultTypeInternal;
extern IbmPropertiesDefaultTypeInternal _IbmProperties_default_instance_;
class ListCloudExportRequest;
struct ListCloudExportRequestDefaultTypeInternal;
extern ListCloudExportRequestDefaultTypeInternal _ListCloudExportRequest_default_instance_;
class ListCloudExportResponse;
struct ListCloudExportResponseDefaultTypeInternal;
extern ListCloudExportResponseDefaultTypeInternal _ListCloudExportResponse_default_instance_;
class PatchCloudExportRequest;
struct PatchCloudExportRequestDefaultTypeInternal;
extern PatchCloudExportRequestDefaultTypeInternal _PatchCloudExportRequest_default_instance_;
class PatchCloudExportResponse;
struct PatchCloudExportResponseDefaultTypeInternal;
extern PatchCloudExportResponseDefaultTypeInternal _PatchCloudExportResponse_default_instance_;
class Status;
struct StatusDefaultTypeInternal;
extern StatusDefaultTypeInternal _Status_default_instance_;
class UpdateCloudExportRequest;
struct UpdateCloudExportRequestDefaultTypeInternal;
extern UpdateCloudExportRequestDefaultTypeInternal _UpdateCloudExportRequest_default_instance_;
class UpdateCloudExportResponse;
struct UpdateCloudExportResponseDefaultTypeInternal;
extern UpdateCloudExportResponseDefaultTypeInternal _UpdateCloudExportResponse_default_instance_;
}  // namespace v202101beta1
}  // namespace cloud_export
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kentik {
namespace cloud_export {
namespace v202101beta1 {
enum CloudExportType : int {
  CLOUD_EXPORT_TYPE_UNSPECIFIED = 0,
  CLOUD_EXPORT_TYPE_KENTIK_MANAGED = 1,
  CLOUD_EXPORT_TYPE_CUSTOMER_MANAGED = 2,
  CloudExportType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CloudExportType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool CloudExportType_IsValid(int value);
extern const uint32_t CloudExportType_internal_data_[];
constexpr CloudExportType CloudExportType_MIN = static_cast<CloudExportType>(0);
constexpr CloudExportType CloudExportType_MAX = static_cast<CloudExportType>(2);
constexpr int CloudExportType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
CloudExportType_descriptor();
template <typename T>
const std::string& CloudExportType_Name(T value) {
  static_assert(std::is_same<T, CloudExportType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to CloudExportType_Name().");
  return CloudExportType_Name(static_cast<CloudExportType>(value));
}
template <>
inline const std::string& CloudExportType_Name(CloudExportType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CloudExportType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool CloudExportType_Parse(absl::string_view name, CloudExportType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CloudExportType>(
      CloudExportType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ListCloudExportRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202101beta1.ListCloudExportRequest) */ {
 public:
  inline ListCloudExportRequest() : ListCloudExportRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListCloudExportRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListCloudExportRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListCloudExportRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListCloudExportRequest(const ListCloudExportRequest& from) : ListCloudExportRequest(nullptr, from) {}
  inline ListCloudExportRequest(ListCloudExportRequest&& from) noexcept
      : ListCloudExportRequest(nullptr, std::move(from)) {}
  inline ListCloudExportRequest& operator=(const ListCloudExportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListCloudExportRequest& operator=(ListCloudExportRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListCloudExportRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListCloudExportRequest* internal_default_instance() {
    return reinterpret_cast<const ListCloudExportRequest*>(
        &_ListCloudExportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(ListCloudExportRequest& a, ListCloudExportRequest& b) { a.Swap(&b); }
  inline void Swap(ListCloudExportRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListCloudExportRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListCloudExportRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ListCloudExportRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ListCloudExportRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ListCloudExportRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.cloud_export.v202101beta1.ListCloudExportRequest"; }

 protected:
  explicit ListCloudExportRequest(::google::protobuf::Arena* arena);
  ListCloudExportRequest(::google::protobuf::Arena* arena, const ListCloudExportRequest& from);
  ListCloudExportRequest(::google::protobuf::Arena* arena, ListCloudExportRequest&& from) noexcept
      : ListCloudExportRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202101beta1.ListCloudExportRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListCloudExportRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class IbmProperties final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202101beta1.IbmProperties) */ {
 public:
  inline IbmProperties() : IbmProperties(nullptr) {}
  ~IbmProperties() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(IbmProperties* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(IbmProperties));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IbmProperties(
      ::google::protobuf::internal::ConstantInitialized);

  inline IbmProperties(const IbmProperties& from) : IbmProperties(nullptr, from) {}
  inline IbmProperties(IbmProperties&& from) noexcept
      : IbmProperties(nullptr, std::move(from)) {}
  inline IbmProperties& operator=(const IbmProperties& from) {
    CopyFrom(from);
    return *this;
  }
  inline IbmProperties& operator=(IbmProperties&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IbmProperties& default_instance() {
    return *internal_default_instance();
  }
  static inline const IbmProperties* internal_default_instance() {
    return reinterpret_cast<const IbmProperties*>(
        &_IbmProperties_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(IbmProperties& a, IbmProperties& b) { a.Swap(&b); }
  inline void Swap(IbmProperties* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IbmProperties* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IbmProperties* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<IbmProperties>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IbmProperties& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const IbmProperties& from) { IbmProperties::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(IbmProperties* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.cloud_export.v202101beta1.IbmProperties"; }

 protected:
  explicit IbmProperties(::google::protobuf::Arena* arena);
  IbmProperties(::google::protobuf::Arena* arena, const IbmProperties& from);
  IbmProperties(::google::protobuf::Arena* arena, IbmProperties&& from) noexcept
      : IbmProperties(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBucketFieldNumber = 1,
  };
  // string bucket = 1 [json_name = "bucket"];
  void clear_bucket() ;
  const std::string& bucket() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bucket(Arg_&& arg, Args_... args);
  std::string* mutable_bucket();
  PROTOBUF_NODISCARD std::string* release_bucket();
  void set_allocated_bucket(std::string* value);

  private:
  const std::string& _internal_bucket() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bucket(
      const std::string& value);
  std::string* _internal_mutable_bucket();

  public:
  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202101beta1.IbmProperties)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const IbmProperties& from_msg);
    ::google::protobuf::internal::ArenaStringPtr bucket_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class GetCloudExportRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202101beta1.GetCloudExportRequest) */ {
 public:
  inline GetCloudExportRequest() : GetCloudExportRequest(nullptr) {}
  ~GetCloudExportRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetCloudExportRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetCloudExportRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetCloudExportRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetCloudExportRequest(const GetCloudExportRequest& from) : GetCloudExportRequest(nullptr, from) {}
  inline GetCloudExportRequest(GetCloudExportRequest&& from) noexcept
      : GetCloudExportRequest(nullptr, std::move(from)) {}
  inline GetCloudExportRequest& operator=(const GetCloudExportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCloudExportRequest& operator=(GetCloudExportRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCloudExportRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCloudExportRequest* internal_default_instance() {
    return reinterpret_cast<const GetCloudExportRequest*>(
        &_GetCloudExportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(GetCloudExportRequest& a, GetCloudExportRequest& b) { a.Swap(&b); }
  inline void Swap(GetCloudExportRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCloudExportRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCloudExportRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetCloudExportRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCloudExportRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetCloudExportRequest& from) { GetCloudExportRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetCloudExportRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.cloud_export.v202101beta1.GetCloudExportRequest"; }

 protected:
  explicit GetCloudExportRequest(::google::protobuf::Arena* arena);
  GetCloudExportRequest(::google::protobuf::Arena* arena, const GetCloudExportRequest& from);
  GetCloudExportRequest(::google::protobuf::Arena* arena, GetCloudExportRequest&& from) noexcept
      : GetCloudExportRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202101beta1.GetCloudExportRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      65, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetCloudExportRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class GceProperties final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202101beta1.GceProperties) */ {
 public:
  inline GceProperties() : GceProperties(nullptr) {}
  ~GceProperties() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GceProperties* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GceProperties));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GceProperties(
      ::google::protobuf::internal::ConstantInitialized);

  inline GceProperties(const GceProperties& from) : GceProperties(nullptr, from) {}
  inline GceProperties(GceProperties&& from) noexcept
      : GceProperties(nullptr, std::move(from)) {}
  inline GceProperties& operator=(const GceProperties& from) {
    CopyFrom(from);
    return *this;
  }
  inline GceProperties& operator=(GceProperties&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GceProperties& default_instance() {
    return *internal_default_instance();
  }
  static inline const GceProperties* internal_default_instance() {
    return reinterpret_cast<const GceProperties*>(
        &_GceProperties_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(GceProperties& a, GceProperties& b) { a.Swap(&b); }
  inline void Swap(GceProperties* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GceProperties* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GceProperties* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GceProperties>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GceProperties& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GceProperties& from) { GceProperties::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GceProperties* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.cloud_export.v202101beta1.GceProperties"; }

 protected:
  explicit GceProperties(::google::protobuf::Arena* arena);
  GceProperties(::google::protobuf::Arena* arena, const GceProperties& from);
  GceProperties(::google::protobuf::Arena* arena, GceProperties&& from) noexcept
      : GceProperties(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProjectFieldNumber = 1,
    kSubscriptionFieldNumber = 2,
  };
  // string project = 1 [json_name = "project"];
  void clear_project() ;
  const std::string& project() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_project(Arg_&& arg, Args_... args);
  std::string* mutable_project();
  PROTOBUF_NODISCARD std::string* release_project();
  void set_allocated_project(std::string* value);

  private:
  const std::string& _internal_project() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_project(
      const std::string& value);
  std::string* _internal_mutable_project();

  public:
  // string subscription = 2 [json_name = "subscription"];
  void clear_subscription() ;
  const std::string& subscription() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subscription(Arg_&& arg, Args_... args);
  std::string* mutable_subscription();
  PROTOBUF_NODISCARD std::string* release_subscription();
  void set_allocated_subscription(std::string* value);

  private:
  const std::string& _internal_subscription() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subscription(
      const std::string& value);
  std::string* _internal_mutable_subscription();

  public:
  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202101beta1.GceProperties)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      74, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GceProperties& from_msg);
    ::google::protobuf::internal::ArenaStringPtr project_;
    ::google::protobuf::internal::ArenaStringPtr subscription_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class DeleteCloudExportResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202101beta1.DeleteCloudExportResponse) */ {
 public:
  inline DeleteCloudExportResponse() : DeleteCloudExportResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteCloudExportResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteCloudExportResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteCloudExportResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteCloudExportResponse(const DeleteCloudExportResponse& from) : DeleteCloudExportResponse(nullptr, from) {}
  inline DeleteCloudExportResponse(DeleteCloudExportResponse&& from) noexcept
      : DeleteCloudExportResponse(nullptr, std::move(from)) {}
  inline DeleteCloudExportResponse& operator=(const DeleteCloudExportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteCloudExportResponse& operator=(DeleteCloudExportResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteCloudExportResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteCloudExportResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteCloudExportResponse*>(
        &_DeleteCloudExportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(DeleteCloudExportResponse& a, DeleteCloudExportResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteCloudExportResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteCloudExportResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteCloudExportResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeleteCloudExportResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeleteCloudExportResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeleteCloudExportResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.cloud_export.v202101beta1.DeleteCloudExportResponse"; }

 protected:
  explicit DeleteCloudExportResponse(::google::protobuf::Arena* arena);
  DeleteCloudExportResponse(::google::protobuf::Arena* arena, const DeleteCloudExportResponse& from);
  DeleteCloudExportResponse(::google::protobuf::Arena* arena, DeleteCloudExportResponse&& from) noexcept
      : DeleteCloudExportResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202101beta1.DeleteCloudExportResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteCloudExportResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class DeleteCloudExportRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202101beta1.DeleteCloudExportRequest) */ {
 public:
  inline DeleteCloudExportRequest() : DeleteCloudExportRequest(nullptr) {}
  ~DeleteCloudExportRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteCloudExportRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteCloudExportRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteCloudExportRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteCloudExportRequest(const DeleteCloudExportRequest& from) : DeleteCloudExportRequest(nullptr, from) {}
  inline DeleteCloudExportRequest(DeleteCloudExportRequest&& from) noexcept
      : DeleteCloudExportRequest(nullptr, std::move(from)) {}
  inline DeleteCloudExportRequest& operator=(const DeleteCloudExportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteCloudExportRequest& operator=(DeleteCloudExportRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteCloudExportRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteCloudExportRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteCloudExportRequest*>(
        &_DeleteCloudExportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(DeleteCloudExportRequest& a, DeleteCloudExportRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteCloudExportRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteCloudExportRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteCloudExportRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteCloudExportRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteCloudExportRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteCloudExportRequest& from) { DeleteCloudExportRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteCloudExportRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.cloud_export.v202101beta1.DeleteCloudExportRequest"; }

 protected:
  explicit DeleteCloudExportRequest(::google::protobuf::Arena* arena);
  DeleteCloudExportRequest(::google::protobuf::Arena* arena, const DeleteCloudExportRequest& from);
  DeleteCloudExportRequest(::google::protobuf::Arena* arena, DeleteCloudExportRequest&& from) noexcept
      : DeleteCloudExportRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202101beta1.DeleteCloudExportRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      68, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteCloudExportRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class BgpProperties final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202101beta1.BgpProperties) */ {
 public:
  inline BgpProperties() : BgpProperties(nullptr) {}
  ~BgpProperties() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BgpProperties* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BgpProperties));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BgpProperties(
      ::google::protobuf::internal::ConstantInitialized);

  inline BgpProperties(const BgpProperties& from) : BgpProperties(nullptr, from) {}
  inline BgpProperties(BgpProperties&& from) noexcept
      : BgpProperties(nullptr, std::move(from)) {}
  inline BgpProperties& operator=(const BgpProperties& from) {
    CopyFrom(from);
    return *this;
  }
  inline BgpProperties& operator=(BgpProperties&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BgpProperties& default_instance() {
    return *internal_default_instance();
  }
  static inline const BgpProperties* internal_default_instance() {
    return reinterpret_cast<const BgpProperties*>(
        &_BgpProperties_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(BgpProperties& a, BgpProperties& b) { a.Swap(&b); }
  inline void Swap(BgpProperties* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BgpProperties* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BgpProperties* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BgpProperties>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BgpProperties& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BgpProperties& from) { BgpProperties::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BgpProperties* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.cloud_export.v202101beta1.BgpProperties"; }

 protected:
  explicit BgpProperties(::google::protobuf::Arena* arena);
  BgpProperties(::google::protobuf::Arena* arena, const BgpProperties& from);
  BgpProperties(::google::protobuf::Arena* arena, BgpProperties&& from) noexcept
      : BgpProperties(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUseBgpDeviceIdFieldNumber = 2,
    kDeviceBgpTypeFieldNumber = 3,
    kApplyBgpFieldNumber = 1,
  };
  // string use_bgp_device_id = 2 [json_name = "useBgpDeviceId"];
  void clear_use_bgp_device_id() ;
  const std::string& use_bgp_device_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_use_bgp_device_id(Arg_&& arg, Args_... args);
  std::string* mutable_use_bgp_device_id();
  PROTOBUF_NODISCARD std::string* release_use_bgp_device_id();
  void set_allocated_use_bgp_device_id(std::string* value);

  private:
  const std::string& _internal_use_bgp_device_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_use_bgp_device_id(
      const std::string& value);
  std::string* _internal_mutable_use_bgp_device_id();

  public:
  // string device_bgp_type = 3 [json_name = "deviceBgpType"];
  void clear_device_bgp_type() ;
  const std::string& device_bgp_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_bgp_type(Arg_&& arg, Args_... args);
  std::string* mutable_device_bgp_type();
  PROTOBUF_NODISCARD std::string* release_device_bgp_type();
  void set_allocated_device_bgp_type(std::string* value);

  private:
  const std::string& _internal_device_bgp_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_bgp_type(
      const std::string& value);
  std::string* _internal_mutable_device_bgp_type();

  public:
  // bool apply_bgp = 1 [json_name = "applyBgp"];
  void clear_apply_bgp() ;
  bool apply_bgp() const;
  void set_apply_bgp(bool value);

  private:
  bool _internal_apply_bgp() const;
  void _internal_set_apply_bgp(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202101beta1.BgpProperties)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      87, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BgpProperties& from_msg);
    ::google::protobuf::internal::ArenaStringPtr use_bgp_device_id_;
    ::google::protobuf::internal::ArenaStringPtr device_bgp_type_;
    bool apply_bgp_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class AzureProperties final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202101beta1.AzureProperties) */ {
 public:
  inline AzureProperties() : AzureProperties(nullptr) {}
  ~AzureProperties() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AzureProperties* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AzureProperties));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AzureProperties(
      ::google::protobuf::internal::ConstantInitialized);

  inline AzureProperties(const AzureProperties& from) : AzureProperties(nullptr, from) {}
  inline AzureProperties(AzureProperties&& from) noexcept
      : AzureProperties(nullptr, std::move(from)) {}
  inline AzureProperties& operator=(const AzureProperties& from) {
    CopyFrom(from);
    return *this;
  }
  inline AzureProperties& operator=(AzureProperties&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AzureProperties& default_instance() {
    return *internal_default_instance();
  }
  static inline const AzureProperties* internal_default_instance() {
    return reinterpret_cast<const AzureProperties*>(
        &_AzureProperties_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(AzureProperties& a, AzureProperties& b) { a.Swap(&b); }
  inline void Swap(AzureProperties* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AzureProperties* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AzureProperties* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AzureProperties>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AzureProperties& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AzureProperties& from) { AzureProperties::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AzureProperties* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.cloud_export.v202101beta1.AzureProperties"; }

 protected:
  explicit AzureProperties(::google::protobuf::Arena* arena);
  AzureProperties(::google::protobuf::Arena* arena, const AzureProperties& from);
  AzureProperties(::google::protobuf::Arena* arena, AzureProperties&& from) noexcept
      : AzureProperties(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLocationFieldNumber = 1,
    kResourceGroupFieldNumber = 2,
    kStorageAccountFieldNumber = 3,
    kSubscriptionIdFieldNumber = 4,
    kSecurityPrincipalEnabledFieldNumber = 5,
  };
  // string location = 1 [json_name = "location"];
  void clear_location() ;
  const std::string& location() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_location(Arg_&& arg, Args_... args);
  std::string* mutable_location();
  PROTOBUF_NODISCARD std::string* release_location();
  void set_allocated_location(std::string* value);

  private:
  const std::string& _internal_location() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_location(
      const std::string& value);
  std::string* _internal_mutable_location();

  public:
  // string resource_group = 2 [json_name = "resourceGroup"];
  void clear_resource_group() ;
  const std::string& resource_group() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_resource_group(Arg_&& arg, Args_... args);
  std::string* mutable_resource_group();
  PROTOBUF_NODISCARD std::string* release_resource_group();
  void set_allocated_resource_group(std::string* value);

  private:
  const std::string& _internal_resource_group() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_resource_group(
      const std::string& value);
  std::string* _internal_mutable_resource_group();

  public:
  // string storage_account = 3 [json_name = "storageAccount"];
  void clear_storage_account() ;
  const std::string& storage_account() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_storage_account(Arg_&& arg, Args_... args);
  std::string* mutable_storage_account();
  PROTOBUF_NODISCARD std::string* release_storage_account();
  void set_allocated_storage_account(std::string* value);

  private:
  const std::string& _internal_storage_account() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_storage_account(
      const std::string& value);
  std::string* _internal_mutable_storage_account();

  public:
  // string subscription_id = 4 [json_name = "subscriptionId"];
  void clear_subscription_id() ;
  const std::string& subscription_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subscription_id(Arg_&& arg, Args_... args);
  std::string* mutable_subscription_id();
  PROTOBUF_NODISCARD std::string* release_subscription_id();
  void set_allocated_subscription_id(std::string* value);

  private:
  const std::string& _internal_subscription_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subscription_id(
      const std::string& value);
  std::string* _internal_mutable_subscription_id();

  public:
  // bool security_principal_enabled = 5 [json_name = "securityPrincipalEnabled"];
  void clear_security_principal_enabled() ;
  bool security_principal_enabled() const;
  void set_security_principal_enabled(bool value);

  private:
  bool _internal_security_principal_enabled() const;
  void _internal_set_security_principal_enabled(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202101beta1.AzureProperties)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      109, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AzureProperties& from_msg);
    ::google::protobuf::internal::ArenaStringPtr location_;
    ::google::protobuf::internal::ArenaStringPtr resource_group_;
    ::google::protobuf::internal::ArenaStringPtr storage_account_;
    ::google::protobuf::internal::ArenaStringPtr subscription_id_;
    bool security_principal_enabled_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class AwsProperties final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202101beta1.AwsProperties) */ {
 public:
  inline AwsProperties() : AwsProperties(nullptr) {}
  ~AwsProperties() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AwsProperties* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AwsProperties));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AwsProperties(
      ::google::protobuf::internal::ConstantInitialized);

  inline AwsProperties(const AwsProperties& from) : AwsProperties(nullptr, from) {}
  inline AwsProperties(AwsProperties&& from) noexcept
      : AwsProperties(nullptr, std::move(from)) {}
  inline AwsProperties& operator=(const AwsProperties& from) {
    CopyFrom(from);
    return *this;
  }
  inline AwsProperties& operator=(AwsProperties&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AwsProperties& default_instance() {
    return *internal_default_instance();
  }
  static inline const AwsProperties* internal_default_instance() {
    return reinterpret_cast<const AwsProperties*>(
        &_AwsProperties_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(AwsProperties& a, AwsProperties& b) { a.Swap(&b); }
  inline void Swap(AwsProperties* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AwsProperties* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AwsProperties* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AwsProperties>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AwsProperties& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AwsProperties& from) { AwsProperties::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AwsProperties* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.cloud_export.v202101beta1.AwsProperties"; }

 protected:
  explicit AwsProperties(::google::protobuf::Arena* arena);
  AwsProperties(::google::protobuf::Arena* arena, const AwsProperties& from);
  AwsProperties(::google::protobuf::Arena* arena, AwsProperties&& from) noexcept
      : AwsProperties(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBucketFieldNumber = 1,
    kIamRoleArnFieldNumber = 2,
    kRegionFieldNumber = 3,
    kDeleteAfterReadFieldNumber = 4,
    kMultipleBucketsFieldNumber = 5,
  };
  // string bucket = 1 [json_name = "bucket"];
  void clear_bucket() ;
  const std::string& bucket() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bucket(Arg_&& arg, Args_... args);
  std::string* mutable_bucket();
  PROTOBUF_NODISCARD std::string* release_bucket();
  void set_allocated_bucket(std::string* value);

  private:
  const std::string& _internal_bucket() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bucket(
      const std::string& value);
  std::string* _internal_mutable_bucket();

  public:
  // string iam_role_arn = 2 [json_name = "iamRoleArn"];
  void clear_iam_role_arn() ;
  const std::string& iam_role_arn() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_iam_role_arn(Arg_&& arg, Args_... args);
  std::string* mutable_iam_role_arn();
  PROTOBUF_NODISCARD std::string* release_iam_role_arn();
  void set_allocated_iam_role_arn(std::string* value);

  private:
  const std::string& _internal_iam_role_arn() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_iam_role_arn(
      const std::string& value);
  std::string* _internal_mutable_iam_role_arn();

  public:
  // string region = 3 [json_name = "region"];
  void clear_region() ;
  const std::string& region() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_region(Arg_&& arg, Args_... args);
  std::string* mutable_region();
  PROTOBUF_NODISCARD std::string* release_region();
  void set_allocated_region(std::string* value);

  private:
  const std::string& _internal_region() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_region(
      const std::string& value);
  std::string* _internal_mutable_region();

  public:
  // bool delete_after_read = 4 [json_name = "deleteAfterRead"];
  void clear_delete_after_read() ;
  bool delete_after_read() const;
  void set_delete_after_read(bool value);

  private:
  bool _internal_delete_after_read() const;
  void _internal_set_delete_after_read(bool value);

  public:
  // bool multiple_buckets = 5 [json_name = "multipleBuckets"];
  void clear_multiple_buckets() ;
  bool multiple_buckets() const;
  void set_multiple_buckets(bool value);

  private:
  bool _internal_multiple_buckets() const;
  void _internal_set_multiple_buckets(bool value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202101beta1.AwsProperties)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      79, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AwsProperties& from_msg);
    ::google::protobuf::internal::ArenaStringPtr bucket_;
    ::google::protobuf::internal::ArenaStringPtr iam_role_arn_;
    ::google::protobuf::internal::ArenaStringPtr region_;
    bool delete_after_read_;
    bool multiple_buckets_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class Status final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202101beta1.Status) */ {
 public:
  inline Status() : Status(nullptr) {}
  ~Status() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Status* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Status));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Status(
      ::google::protobuf::internal::ConstantInitialized);

  inline Status(const Status& from) : Status(nullptr, from) {}
  inline Status(Status&& from) noexcept
      : Status(nullptr, std::move(from)) {}
  inline Status& operator=(const Status& from) {
    CopyFrom(from);
    return *this;
  }
  inline Status& operator=(Status&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Status& default_instance() {
    return *internal_default_instance();
  }
  static inline const Status* internal_default_instance() {
    return reinterpret_cast<const Status*>(
        &_Status_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(Status& a, Status& b) { a.Swap(&b); }
  inline void Swap(Status* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Status* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Status* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Status>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Status& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Status& from) { Status::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Status* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.cloud_export.v202101beta1.Status"; }

 protected:
  explicit Status(::google::protobuf::Arena* arena);
  Status(::google::protobuf::Arena* arena, const Status& from);
  Status(::google::protobuf::Arena* arena, Status&& from) noexcept
      : Status(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusFieldNumber = 1,
    kErrorMessageFieldNumber = 2,
    kFlowFoundFieldNumber = 3,
    kApiAccessFieldNumber = 4,
    kStorageAccountAccessFieldNumber = 5,
  };
  // string status = 1 [json_name = "status"];
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // string error_message = 2 [json_name = "errorMessage"];
  void clear_error_message() ;
  const std::string& error_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  std::string* mutable_error_message();
  PROTOBUF_NODISCARD std::string* release_error_message();
  void set_allocated_error_message(std::string* value);

  private:
  const std::string& _internal_error_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(
      const std::string& value);
  std::string* _internal_mutable_error_message();

  public:
  // .google.protobuf.BoolValue flow_found = 3 [json_name = "flowFound"];
  bool has_flow_found() const;
  void clear_flow_found() ;
  const ::google::protobuf::BoolValue& flow_found() const;
  PROTOBUF_NODISCARD ::google::protobuf::BoolValue* release_flow_found();
  ::google::protobuf::BoolValue* mutable_flow_found();
  void set_allocated_flow_found(::google::protobuf::BoolValue* value);
  void unsafe_arena_set_allocated_flow_found(::google::protobuf::BoolValue* value);
  ::google::protobuf::BoolValue* unsafe_arena_release_flow_found();

  private:
  const ::google::protobuf::BoolValue& _internal_flow_found() const;
  ::google::protobuf::BoolValue* _internal_mutable_flow_found();

  public:
  // .google.protobuf.BoolValue api_access = 4 [json_name = "apiAccess"];
  bool has_api_access() const;
  void clear_api_access() ;
  const ::google::protobuf::BoolValue& api_access() const;
  PROTOBUF_NODISCARD ::google::protobuf::BoolValue* release_api_access();
  ::google::protobuf::BoolValue* mutable_api_access();
  void set_allocated_api_access(::google::protobuf::BoolValue* value);
  void unsafe_arena_set_allocated_api_access(::google::protobuf::BoolValue* value);
  ::google::protobuf::BoolValue* unsafe_arena_release_api_access();

  private:
  const ::google::protobuf::BoolValue& _internal_api_access() const;
  ::google::protobuf::BoolValue* _internal_mutable_api_access();

  public:
  // .google.protobuf.BoolValue storage_account_access = 5 [json_name = "storageAccountAccess"];
  bool has_storage_account_access() const;
  void clear_storage_account_access() ;
  const ::google::protobuf::BoolValue& storage_account_access() const;
  PROTOBUF_NODISCARD ::google::protobuf::BoolValue* release_storage_account_access();
  ::google::protobuf::BoolValue* mutable_storage_account_access();
  void set_allocated_storage_account_access(::google::protobuf::BoolValue* value);
  void unsafe_arena_set_allocated_storage_account_access(::google::protobuf::BoolValue* value);
  ::google::protobuf::BoolValue* unsafe_arena_release_storage_account_access();

  private:
  const ::google::protobuf::BoolValue& _internal_storage_account_access() const;
  ::google::protobuf::BoolValue* _internal_mutable_storage_account_access();

  public:
  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202101beta1.Status)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 3,
      67, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Status& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    ::google::protobuf::BoolValue* flow_found_;
    ::google::protobuf::BoolValue* api_access_;
    ::google::protobuf::BoolValue* storage_account_access_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class CloudExport final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202101beta1.CloudExport) */ {
 public:
  inline CloudExport() : CloudExport(nullptr) {}
  ~CloudExport() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CloudExport* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CloudExport));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CloudExport(
      ::google::protobuf::internal::ConstantInitialized);

  inline CloudExport(const CloudExport& from) : CloudExport(nullptr, from) {}
  inline CloudExport(CloudExport&& from) noexcept
      : CloudExport(nullptr, std::move(from)) {}
  inline CloudExport& operator=(const CloudExport& from) {
    CopyFrom(from);
    return *this;
  }
  inline CloudExport& operator=(CloudExport&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CloudExport& default_instance() {
    return *internal_default_instance();
  }
  enum PropertiesCase {
    kAws = 9,
    kAzure = 10,
    kGce = 11,
    kIbm = 12,
    PROPERTIES_NOT_SET = 0,
  };
  static inline const CloudExport* internal_default_instance() {
    return reinterpret_cast<const CloudExport*>(
        &_CloudExport_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CloudExport& a, CloudExport& b) { a.Swap(&b); }
  inline void Swap(CloudExport* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CloudExport* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CloudExport* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CloudExport>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CloudExport& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CloudExport& from) { CloudExport::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CloudExport* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.cloud_export.v202101beta1.CloudExport"; }

 protected:
  explicit CloudExport(::google::protobuf::Arena* arena);
  CloudExport(::google::protobuf::Arena* arena, const CloudExport& from);
  CloudExport(::google::protobuf::Arena* arena, CloudExport&& from) noexcept
      : CloudExport(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kNameFieldNumber = 3,
    kDescriptionFieldNumber = 4,
    kApiRootFieldNumber = 5,
    kFlowDestFieldNumber = 6,
    kPlanIdFieldNumber = 7,
    kCloudProviderFieldNumber = 8,
    kBgpFieldNumber = 13,
    kCurrentStatusFieldNumber = 14,
    kEnabledFieldNumber = 2,
    kTypeFieldNumber = 15,
    kAwsFieldNumber = 9,
    kAzureFieldNumber = 10,
    kGceFieldNumber = 11,
    kIbmFieldNumber = 12,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string name = 3 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string description = 4 [json_name = "description"];
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string api_root = 5 [json_name = "apiRoot"];
  void clear_api_root() ;
  const std::string& api_root() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_api_root(Arg_&& arg, Args_... args);
  std::string* mutable_api_root();
  PROTOBUF_NODISCARD std::string* release_api_root();
  void set_allocated_api_root(std::string* value);

  private:
  const std::string& _internal_api_root() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_api_root(
      const std::string& value);
  std::string* _internal_mutable_api_root();

  public:
  // string flow_dest = 6 [json_name = "flowDest"];
  void clear_flow_dest() ;
  const std::string& flow_dest() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_flow_dest(Arg_&& arg, Args_... args);
  std::string* mutable_flow_dest();
  PROTOBUF_NODISCARD std::string* release_flow_dest();
  void set_allocated_flow_dest(std::string* value);

  private:
  const std::string& _internal_flow_dest() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_flow_dest(
      const std::string& value);
  std::string* _internal_mutable_flow_dest();

  public:
  // string plan_id = 7 [json_name = "planId"];
  void clear_plan_id() ;
  const std::string& plan_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_plan_id(Arg_&& arg, Args_... args);
  std::string* mutable_plan_id();
  PROTOBUF_NODISCARD std::string* release_plan_id();
  void set_allocated_plan_id(std::string* value);

  private:
  const std::string& _internal_plan_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_plan_id(
      const std::string& value);
  std::string* _internal_mutable_plan_id();

  public:
  // string cloud_provider = 8 [json_name = "cloudProvider"];
  void clear_cloud_provider() ;
  const std::string& cloud_provider() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cloud_provider(Arg_&& arg, Args_... args);
  std::string* mutable_cloud_provider();
  PROTOBUF_NODISCARD std::string* release_cloud_provider();
  void set_allocated_cloud_provider(std::string* value);

  private:
  const std::string& _internal_cloud_provider() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cloud_provider(
      const std::string& value);
  std::string* _internal_mutable_cloud_provider();

  public:
  // .kentik.cloud_export.v202101beta1.BgpProperties bgp = 13 [json_name = "bgp"];
  bool has_bgp() const;
  void clear_bgp() ;
  const ::kentik::cloud_export::v202101beta1::BgpProperties& bgp() const;
  PROTOBUF_NODISCARD ::kentik::cloud_export::v202101beta1::BgpProperties* release_bgp();
  ::kentik::cloud_export::v202101beta1::BgpProperties* mutable_bgp();
  void set_allocated_bgp(::kentik::cloud_export::v202101beta1::BgpProperties* value);
  void unsafe_arena_set_allocated_bgp(::kentik::cloud_export::v202101beta1::BgpProperties* value);
  ::kentik::cloud_export::v202101beta1::BgpProperties* unsafe_arena_release_bgp();

  private:
  const ::kentik::cloud_export::v202101beta1::BgpProperties& _internal_bgp() const;
  ::kentik::cloud_export::v202101beta1::BgpProperties* _internal_mutable_bgp();

  public:
  // .kentik.cloud_export.v202101beta1.Status current_status = 14 [json_name = "currentStatus"];
  bool has_current_status() const;
  void clear_current_status() ;
  const ::kentik::cloud_export::v202101beta1::Status& current_status() const;
  PROTOBUF_NODISCARD ::kentik::cloud_export::v202101beta1::Status* release_current_status();
  ::kentik::cloud_export::v202101beta1::Status* mutable_current_status();
  void set_allocated_current_status(::kentik::cloud_export::v202101beta1::Status* value);
  void unsafe_arena_set_allocated_current_status(::kentik::cloud_export::v202101beta1::Status* value);
  ::kentik::cloud_export::v202101beta1::Status* unsafe_arena_release_current_status();

  private:
  const ::kentik::cloud_export::v202101beta1::Status& _internal_current_status() const;
  ::kentik::cloud_export::v202101beta1::Status* _internal_mutable_current_status();

  public:
  // bool enabled = 2 [json_name = "enabled"];
  void clear_enabled() ;
  bool enabled() const;
  void set_enabled(bool value);

  private:
  bool _internal_enabled() const;
  void _internal_set_enabled(bool value);

  public:
  // .kentik.cloud_export.v202101beta1.CloudExportType type = 15 [json_name = "type"];
  void clear_type() ;
  ::kentik::cloud_export::v202101beta1::CloudExportType type() const;
  void set_type(::kentik::cloud_export::v202101beta1::CloudExportType value);

  private:
  ::kentik::cloud_export::v202101beta1::CloudExportType _internal_type() const;
  void _internal_set_type(::kentik::cloud_export::v202101beta1::CloudExportType value);

  public:
  // .kentik.cloud_export.v202101beta1.AwsProperties aws = 9 [json_name = "aws"];
  bool has_aws() const;
  private:
  bool _internal_has_aws() const;

  public:
  void clear_aws() ;
  const ::kentik::cloud_export::v202101beta1::AwsProperties& aws() const;
  PROTOBUF_NODISCARD ::kentik::cloud_export::v202101beta1::AwsProperties* release_aws();
  ::kentik::cloud_export::v202101beta1::AwsProperties* mutable_aws();
  void set_allocated_aws(::kentik::cloud_export::v202101beta1::AwsProperties* value);
  void unsafe_arena_set_allocated_aws(::kentik::cloud_export::v202101beta1::AwsProperties* value);
  ::kentik::cloud_export::v202101beta1::AwsProperties* unsafe_arena_release_aws();

  private:
  const ::kentik::cloud_export::v202101beta1::AwsProperties& _internal_aws() const;
  ::kentik::cloud_export::v202101beta1::AwsProperties* _internal_mutable_aws();

  public:
  // .kentik.cloud_export.v202101beta1.AzureProperties azure = 10 [json_name = "azure"];
  bool has_azure() const;
  private:
  bool _internal_has_azure() const;

  public:
  void clear_azure() ;
  const ::kentik::cloud_export::v202101beta1::AzureProperties& azure() const;
  PROTOBUF_NODISCARD ::kentik::cloud_export::v202101beta1::AzureProperties* release_azure();
  ::kentik::cloud_export::v202101beta1::AzureProperties* mutable_azure();
  void set_allocated_azure(::kentik::cloud_export::v202101beta1::AzureProperties* value);
  void unsafe_arena_set_allocated_azure(::kentik::cloud_export::v202101beta1::AzureProperties* value);
  ::kentik::cloud_export::v202101beta1::AzureProperties* unsafe_arena_release_azure();

  private:
  const ::kentik::cloud_export::v202101beta1::AzureProperties& _internal_azure() const;
  ::kentik::cloud_export::v202101beta1::AzureProperties* _internal_mutable_azure();

  public:
  // .kentik.cloud_export.v202101beta1.GceProperties gce = 11 [json_name = "gce"];
  bool has_gce() const;
  private:
  bool _internal_has_gce() const;

  public:
  void clear_gce() ;
  const ::kentik::cloud_export::v202101beta1::GceProperties& gce() const;
  PROTOBUF_NODISCARD ::kentik::cloud_export::v202101beta1::GceProperties* release_gce();
  ::kentik::cloud_export::v202101beta1::GceProperties* mutable_gce();
  void set_allocated_gce(::kentik::cloud_export::v202101beta1::GceProperties* value);
  void unsafe_arena_set_allocated_gce(::kentik::cloud_export::v202101beta1::GceProperties* value);
  ::kentik::cloud_export::v202101beta1::GceProperties* unsafe_arena_release_gce();

  private:
  const ::kentik::cloud_export::v202101beta1::GceProperties& _internal_gce() const;
  ::kentik::cloud_export::v202101beta1::GceProperties* _internal_mutable_gce();

  public:
  // .kentik.cloud_export.v202101beta1.IbmProperties ibm = 12 [json_name = "ibm"];
  bool has_ibm() const;
  private:
  bool _internal_has_ibm() const;

  public:
  void clear_ibm() ;
  const ::kentik::cloud_export::v202101beta1::IbmProperties& ibm() const;
  PROTOBUF_NODISCARD ::kentik::cloud_export::v202101beta1::IbmProperties* release_ibm();
  ::kentik::cloud_export::v202101beta1::IbmProperties* mutable_ibm();
  void set_allocated_ibm(::kentik::cloud_export::v202101beta1::IbmProperties* value);
  void unsafe_arena_set_allocated_ibm(::kentik::cloud_export::v202101beta1::IbmProperties* value);
  ::kentik::cloud_export::v202101beta1::IbmProperties* unsafe_arena_release_ibm();

  private:
  const ::kentik::cloud_export::v202101beta1::IbmProperties& _internal_ibm() const;
  ::kentik::cloud_export::v202101beta1::IbmProperties* _internal_mutable_ibm();

  public:
  void clear_properties();
  PropertiesCase properties_case() const;
  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202101beta1.CloudExport)
 private:
  class _Internal;
  void set_has_aws();
  void set_has_azure();
  void set_has_gce();
  void set_has_ibm();
  inline bool has_properties() const;
  inline void clear_has_properties();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 15, 6,
      116, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CloudExport& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr api_root_;
    ::google::protobuf::internal::ArenaStringPtr flow_dest_;
    ::google::protobuf::internal::ArenaStringPtr plan_id_;
    ::google::protobuf::internal::ArenaStringPtr cloud_provider_;
    ::kentik::cloud_export::v202101beta1::BgpProperties* bgp_;
    ::kentik::cloud_export::v202101beta1::Status* current_status_;
    bool enabled_;
    int type_;
    union PropertiesUnion {
      constexpr PropertiesUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::kentik::cloud_export::v202101beta1::AwsProperties* aws_;
      ::kentik::cloud_export::v202101beta1::AzureProperties* azure_;
      ::kentik::cloud_export::v202101beta1::GceProperties* gce_;
      ::kentik::cloud_export::v202101beta1::IbmProperties* ibm_;
    } properties_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class UpdateCloudExportResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202101beta1.UpdateCloudExportResponse) */ {
 public:
  inline UpdateCloudExportResponse() : UpdateCloudExportResponse(nullptr) {}
  ~UpdateCloudExportResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateCloudExportResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateCloudExportResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateCloudExportResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateCloudExportResponse(const UpdateCloudExportResponse& from) : UpdateCloudExportResponse(nullptr, from) {}
  inline UpdateCloudExportResponse(UpdateCloudExportResponse&& from) noexcept
      : UpdateCloudExportResponse(nullptr, std::move(from)) {}
  inline UpdateCloudExportResponse& operator=(const UpdateCloudExportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateCloudExportResponse& operator=(UpdateCloudExportResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateCloudExportResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateCloudExportResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateCloudExportResponse*>(
        &_UpdateCloudExportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(UpdateCloudExportResponse& a, UpdateCloudExportResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateCloudExportResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateCloudExportResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateCloudExportResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateCloudExportResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateCloudExportResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateCloudExportResponse& from) { UpdateCloudExportResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateCloudExportResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.cloud_export.v202101beta1.UpdateCloudExportResponse"; }

 protected:
  explicit UpdateCloudExportResponse(::google::protobuf::Arena* arena);
  UpdateCloudExportResponse(::google::protobuf::Arena* arena, const UpdateCloudExportResponse& from);
  UpdateCloudExportResponse(::google::protobuf::Arena* arena, UpdateCloudExportResponse&& from) noexcept
      : UpdateCloudExportResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExportFieldNumber = 1,
  };
  // .kentik.cloud_export.v202101beta1.CloudExport export = 1 [json_name = "export"];
  bool has_export_() const;
  void clear_export_() ;
  const ::kentik::cloud_export::v202101beta1::CloudExport& export_() const;
  PROTOBUF_NODISCARD ::kentik::cloud_export::v202101beta1::CloudExport* release_export_();
  ::kentik::cloud_export::v202101beta1::CloudExport* mutable_export_();
  void set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value);
  void unsafe_arena_set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value);
  ::kentik::cloud_export::v202101beta1::CloudExport* unsafe_arena_release_export_();

  private:
  const ::kentik::cloud_export::v202101beta1::CloudExport& _internal_export_() const;
  ::kentik::cloud_export::v202101beta1::CloudExport* _internal_mutable_export_();

  public:
  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202101beta1.UpdateCloudExportResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateCloudExportResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::cloud_export::v202101beta1::CloudExport* export__;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class UpdateCloudExportRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202101beta1.UpdateCloudExportRequest) */ {
 public:
  inline UpdateCloudExportRequest() : UpdateCloudExportRequest(nullptr) {}
  ~UpdateCloudExportRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateCloudExportRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateCloudExportRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateCloudExportRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateCloudExportRequest(const UpdateCloudExportRequest& from) : UpdateCloudExportRequest(nullptr, from) {}
  inline UpdateCloudExportRequest(UpdateCloudExportRequest&& from) noexcept
      : UpdateCloudExportRequest(nullptr, std::move(from)) {}
  inline UpdateCloudExportRequest& operator=(const UpdateCloudExportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateCloudExportRequest& operator=(UpdateCloudExportRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateCloudExportRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateCloudExportRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateCloudExportRequest*>(
        &_UpdateCloudExportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(UpdateCloudExportRequest& a, UpdateCloudExportRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateCloudExportRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateCloudExportRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateCloudExportRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateCloudExportRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateCloudExportRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateCloudExportRequest& from) { UpdateCloudExportRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateCloudExportRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.cloud_export.v202101beta1.UpdateCloudExportRequest"; }

 protected:
  explicit UpdateCloudExportRequest(::google::protobuf::Arena* arena);
  UpdateCloudExportRequest(::google::protobuf::Arena* arena, const UpdateCloudExportRequest& from);
  UpdateCloudExportRequest(::google::protobuf::Arena* arena, UpdateCloudExportRequest&& from) noexcept
      : UpdateCloudExportRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExportFieldNumber = 1,
  };
  // .kentik.cloud_export.v202101beta1.CloudExport export = 1 [json_name = "export"];
  bool has_export_() const;
  void clear_export_() ;
  const ::kentik::cloud_export::v202101beta1::CloudExport& export_() const;
  PROTOBUF_NODISCARD ::kentik::cloud_export::v202101beta1::CloudExport* release_export_();
  ::kentik::cloud_export::v202101beta1::CloudExport* mutable_export_();
  void set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value);
  void unsafe_arena_set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value);
  ::kentik::cloud_export::v202101beta1::CloudExport* unsafe_arena_release_export_();

  private:
  const ::kentik::cloud_export::v202101beta1::CloudExport& _internal_export_() const;
  ::kentik::cloud_export::v202101beta1::CloudExport* _internal_mutable_export_();

  public:
  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202101beta1.UpdateCloudExportRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateCloudExportRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::cloud_export::v202101beta1::CloudExport* export__;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class PatchCloudExportResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202101beta1.PatchCloudExportResponse) */ {
 public:
  inline PatchCloudExportResponse() : PatchCloudExportResponse(nullptr) {}
  ~PatchCloudExportResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PatchCloudExportResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PatchCloudExportResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PatchCloudExportResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PatchCloudExportResponse(const PatchCloudExportResponse& from) : PatchCloudExportResponse(nullptr, from) {}
  inline PatchCloudExportResponse(PatchCloudExportResponse&& from) noexcept
      : PatchCloudExportResponse(nullptr, std::move(from)) {}
  inline PatchCloudExportResponse& operator=(const PatchCloudExportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PatchCloudExportResponse& operator=(PatchCloudExportResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PatchCloudExportResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PatchCloudExportResponse* internal_default_instance() {
    return reinterpret_cast<const PatchCloudExportResponse*>(
        &_PatchCloudExportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(PatchCloudExportResponse& a, PatchCloudExportResponse& b) { a.Swap(&b); }
  inline void Swap(PatchCloudExportResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PatchCloudExportResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PatchCloudExportResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PatchCloudExportResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PatchCloudExportResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PatchCloudExportResponse& from) { PatchCloudExportResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PatchCloudExportResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.cloud_export.v202101beta1.PatchCloudExportResponse"; }

 protected:
  explicit PatchCloudExportResponse(::google::protobuf::Arena* arena);
  PatchCloudExportResponse(::google::protobuf::Arena* arena, const PatchCloudExportResponse& from);
  PatchCloudExportResponse(::google::protobuf::Arena* arena, PatchCloudExportResponse&& from) noexcept
      : PatchCloudExportResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExportFieldNumber = 1,
  };
  // .kentik.cloud_export.v202101beta1.CloudExport export = 1 [json_name = "export"];
  bool has_export_() const;
  void clear_export_() ;
  const ::kentik::cloud_export::v202101beta1::CloudExport& export_() const;
  PROTOBUF_NODISCARD ::kentik::cloud_export::v202101beta1::CloudExport* release_export_();
  ::kentik::cloud_export::v202101beta1::CloudExport* mutable_export_();
  void set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value);
  void unsafe_arena_set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value);
  ::kentik::cloud_export::v202101beta1::CloudExport* unsafe_arena_release_export_();

  private:
  const ::kentik::cloud_export::v202101beta1::CloudExport& _internal_export_() const;
  ::kentik::cloud_export::v202101beta1::CloudExport* _internal_mutable_export_();

  public:
  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202101beta1.PatchCloudExportResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PatchCloudExportResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::cloud_export::v202101beta1::CloudExport* export__;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class PatchCloudExportRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202101beta1.PatchCloudExportRequest) */ {
 public:
  inline PatchCloudExportRequest() : PatchCloudExportRequest(nullptr) {}
  ~PatchCloudExportRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PatchCloudExportRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PatchCloudExportRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PatchCloudExportRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PatchCloudExportRequest(const PatchCloudExportRequest& from) : PatchCloudExportRequest(nullptr, from) {}
  inline PatchCloudExportRequest(PatchCloudExportRequest&& from) noexcept
      : PatchCloudExportRequest(nullptr, std::move(from)) {}
  inline PatchCloudExportRequest& operator=(const PatchCloudExportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PatchCloudExportRequest& operator=(PatchCloudExportRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PatchCloudExportRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PatchCloudExportRequest* internal_default_instance() {
    return reinterpret_cast<const PatchCloudExportRequest*>(
        &_PatchCloudExportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(PatchCloudExportRequest& a, PatchCloudExportRequest& b) { a.Swap(&b); }
  inline void Swap(PatchCloudExportRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PatchCloudExportRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PatchCloudExportRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PatchCloudExportRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PatchCloudExportRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PatchCloudExportRequest& from) { PatchCloudExportRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PatchCloudExportRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.cloud_export.v202101beta1.PatchCloudExportRequest"; }

 protected:
  explicit PatchCloudExportRequest(::google::protobuf::Arena* arena);
  PatchCloudExportRequest(::google::protobuf::Arena* arena, const PatchCloudExportRequest& from);
  PatchCloudExportRequest(::google::protobuf::Arena* arena, PatchCloudExportRequest&& from) noexcept
      : PatchCloudExportRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExportFieldNumber = 1,
    kMaskFieldNumber = 2,
  };
  // .kentik.cloud_export.v202101beta1.CloudExport export = 1 [json_name = "export"];
  bool has_export_() const;
  void clear_export_() ;
  const ::kentik::cloud_export::v202101beta1::CloudExport& export_() const;
  PROTOBUF_NODISCARD ::kentik::cloud_export::v202101beta1::CloudExport* release_export_();
  ::kentik::cloud_export::v202101beta1::CloudExport* mutable_export_();
  void set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value);
  void unsafe_arena_set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value);
  ::kentik::cloud_export::v202101beta1::CloudExport* unsafe_arena_release_export_();

  private:
  const ::kentik::cloud_export::v202101beta1::CloudExport& _internal_export_() const;
  ::kentik::cloud_export::v202101beta1::CloudExport* _internal_mutable_export_();

  public:
  // .google.protobuf.FieldMask mask = 2 [json_name = "mask"];
  bool has_mask() const;
  void clear_mask() ;
  const ::google::protobuf::FieldMask& mask() const;
  PROTOBUF_NODISCARD ::google::protobuf::FieldMask* release_mask();
  ::google::protobuf::FieldMask* mutable_mask();
  void set_allocated_mask(::google::protobuf::FieldMask* value);
  void unsafe_arena_set_allocated_mask(::google::protobuf::FieldMask* value);
  ::google::protobuf::FieldMask* unsafe_arena_release_mask();

  private:
  const ::google::protobuf::FieldMask& _internal_mask() const;
  ::google::protobuf::FieldMask* _internal_mutable_mask();

  public:
  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202101beta1.PatchCloudExportRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PatchCloudExportRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::cloud_export::v202101beta1::CloudExport* export__;
    ::google::protobuf::FieldMask* mask_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class ListCloudExportResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202101beta1.ListCloudExportResponse) */ {
 public:
  inline ListCloudExportResponse() : ListCloudExportResponse(nullptr) {}
  ~ListCloudExportResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListCloudExportResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListCloudExportResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListCloudExportResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListCloudExportResponse(const ListCloudExportResponse& from) : ListCloudExportResponse(nullptr, from) {}
  inline ListCloudExportResponse(ListCloudExportResponse&& from) noexcept
      : ListCloudExportResponse(nullptr, std::move(from)) {}
  inline ListCloudExportResponse& operator=(const ListCloudExportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListCloudExportResponse& operator=(ListCloudExportResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListCloudExportResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListCloudExportResponse* internal_default_instance() {
    return reinterpret_cast<const ListCloudExportResponse*>(
        &_ListCloudExportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(ListCloudExportResponse& a, ListCloudExportResponse& b) { a.Swap(&b); }
  inline void Swap(ListCloudExportResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListCloudExportResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListCloudExportResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListCloudExportResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListCloudExportResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListCloudExportResponse& from) { ListCloudExportResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListCloudExportResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.cloud_export.v202101beta1.ListCloudExportResponse"; }

 protected:
  explicit ListCloudExportResponse(::google::protobuf::Arena* arena);
  ListCloudExportResponse(::google::protobuf::Arena* arena, const ListCloudExportResponse& from);
  ListCloudExportResponse(::google::protobuf::Arena* arena, ListCloudExportResponse&& from) noexcept
      : ListCloudExportResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExportsFieldNumber = 1,
    kInvalidExportsCountFieldNumber = 2,
  };
  // repeated .kentik.cloud_export.v202101beta1.CloudExport exports = 1 [json_name = "exports"];
  int exports_size() const;
  private:
  int _internal_exports_size() const;

  public:
  void clear_exports() ;
  ::kentik::cloud_export::v202101beta1::CloudExport* mutable_exports(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::cloud_export::v202101beta1::CloudExport>* mutable_exports();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::cloud_export::v202101beta1::CloudExport>& _internal_exports() const;
  ::google::protobuf::RepeatedPtrField<::kentik::cloud_export::v202101beta1::CloudExport>* _internal_mutable_exports();
  public:
  const ::kentik::cloud_export::v202101beta1::CloudExport& exports(int index) const;
  ::kentik::cloud_export::v202101beta1::CloudExport* add_exports();
  const ::google::protobuf::RepeatedPtrField<::kentik::cloud_export::v202101beta1::CloudExport>& exports() const;
  // uint32 invalid_exports_count = 2 [json_name = "invalidExportsCount"];
  void clear_invalid_exports_count() ;
  ::uint32_t invalid_exports_count() const;
  void set_invalid_exports_count(::uint32_t value);

  private:
  ::uint32_t _internal_invalid_exports_count() const;
  void _internal_set_invalid_exports_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202101beta1.ListCloudExportResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListCloudExportResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::cloud_export::v202101beta1::CloudExport > exports_;
    ::uint32_t invalid_exports_count_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class GetCloudExportResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202101beta1.GetCloudExportResponse) */ {
 public:
  inline GetCloudExportResponse() : GetCloudExportResponse(nullptr) {}
  ~GetCloudExportResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetCloudExportResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetCloudExportResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetCloudExportResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetCloudExportResponse(const GetCloudExportResponse& from) : GetCloudExportResponse(nullptr, from) {}
  inline GetCloudExportResponse(GetCloudExportResponse&& from) noexcept
      : GetCloudExportResponse(nullptr, std::move(from)) {}
  inline GetCloudExportResponse& operator=(const GetCloudExportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCloudExportResponse& operator=(GetCloudExportResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCloudExportResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCloudExportResponse* internal_default_instance() {
    return reinterpret_cast<const GetCloudExportResponse*>(
        &_GetCloudExportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(GetCloudExportResponse& a, GetCloudExportResponse& b) { a.Swap(&b); }
  inline void Swap(GetCloudExportResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCloudExportResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCloudExportResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetCloudExportResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCloudExportResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetCloudExportResponse& from) { GetCloudExportResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetCloudExportResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.cloud_export.v202101beta1.GetCloudExportResponse"; }

 protected:
  explicit GetCloudExportResponse(::google::protobuf::Arena* arena);
  GetCloudExportResponse(::google::protobuf::Arena* arena, const GetCloudExportResponse& from);
  GetCloudExportResponse(::google::protobuf::Arena* arena, GetCloudExportResponse&& from) noexcept
      : GetCloudExportResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExportFieldNumber = 1,
  };
  // .kentik.cloud_export.v202101beta1.CloudExport export = 1 [json_name = "export"];
  bool has_export_() const;
  void clear_export_() ;
  const ::kentik::cloud_export::v202101beta1::CloudExport& export_() const;
  PROTOBUF_NODISCARD ::kentik::cloud_export::v202101beta1::CloudExport* release_export_();
  ::kentik::cloud_export::v202101beta1::CloudExport* mutable_export_();
  void set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value);
  void unsafe_arena_set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value);
  ::kentik::cloud_export::v202101beta1::CloudExport* unsafe_arena_release_export_();

  private:
  const ::kentik::cloud_export::v202101beta1::CloudExport& _internal_export_() const;
  ::kentik::cloud_export::v202101beta1::CloudExport* _internal_mutable_export_();

  public:
  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202101beta1.GetCloudExportResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetCloudExportResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::cloud_export::v202101beta1::CloudExport* export__;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class CreateCloudExportResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202101beta1.CreateCloudExportResponse) */ {
 public:
  inline CreateCloudExportResponse() : CreateCloudExportResponse(nullptr) {}
  ~CreateCloudExportResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateCloudExportResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateCloudExportResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateCloudExportResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateCloudExportResponse(const CreateCloudExportResponse& from) : CreateCloudExportResponse(nullptr, from) {}
  inline CreateCloudExportResponse(CreateCloudExportResponse&& from) noexcept
      : CreateCloudExportResponse(nullptr, std::move(from)) {}
  inline CreateCloudExportResponse& operator=(const CreateCloudExportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateCloudExportResponse& operator=(CreateCloudExportResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateCloudExportResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateCloudExportResponse* internal_default_instance() {
    return reinterpret_cast<const CreateCloudExportResponse*>(
        &_CreateCloudExportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(CreateCloudExportResponse& a, CreateCloudExportResponse& b) { a.Swap(&b); }
  inline void Swap(CreateCloudExportResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateCloudExportResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateCloudExportResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateCloudExportResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateCloudExportResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateCloudExportResponse& from) { CreateCloudExportResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateCloudExportResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.cloud_export.v202101beta1.CreateCloudExportResponse"; }

 protected:
  explicit CreateCloudExportResponse(::google::protobuf::Arena* arena);
  CreateCloudExportResponse(::google::protobuf::Arena* arena, const CreateCloudExportResponse& from);
  CreateCloudExportResponse(::google::protobuf::Arena* arena, CreateCloudExportResponse&& from) noexcept
      : CreateCloudExportResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExportFieldNumber = 1,
  };
  // .kentik.cloud_export.v202101beta1.CloudExport export = 1 [json_name = "export"];
  bool has_export_() const;
  void clear_export_() ;
  const ::kentik::cloud_export::v202101beta1::CloudExport& export_() const;
  PROTOBUF_NODISCARD ::kentik::cloud_export::v202101beta1::CloudExport* release_export_();
  ::kentik::cloud_export::v202101beta1::CloudExport* mutable_export_();
  void set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value);
  void unsafe_arena_set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value);
  ::kentik::cloud_export::v202101beta1::CloudExport* unsafe_arena_release_export_();

  private:
  const ::kentik::cloud_export::v202101beta1::CloudExport& _internal_export_() const;
  ::kentik::cloud_export::v202101beta1::CloudExport* _internal_mutable_export_();

  public:
  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202101beta1.CreateCloudExportResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateCloudExportResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::cloud_export::v202101beta1::CloudExport* export__;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
};
// -------------------------------------------------------------------

class CreateCloudExportRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.cloud_export.v202101beta1.CreateCloudExportRequest) */ {
 public:
  inline CreateCloudExportRequest() : CreateCloudExportRequest(nullptr) {}
  ~CreateCloudExportRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateCloudExportRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateCloudExportRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateCloudExportRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateCloudExportRequest(const CreateCloudExportRequest& from) : CreateCloudExportRequest(nullptr, from) {}
  inline CreateCloudExportRequest(CreateCloudExportRequest&& from) noexcept
      : CreateCloudExportRequest(nullptr, std::move(from)) {}
  inline CreateCloudExportRequest& operator=(const CreateCloudExportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateCloudExportRequest& operator=(CreateCloudExportRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateCloudExportRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateCloudExportRequest* internal_default_instance() {
    return reinterpret_cast<const CreateCloudExportRequest*>(
        &_CreateCloudExportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(CreateCloudExportRequest& a, CreateCloudExportRequest& b) { a.Swap(&b); }
  inline void Swap(CreateCloudExportRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateCloudExportRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateCloudExportRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateCloudExportRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateCloudExportRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateCloudExportRequest& from) { CreateCloudExportRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateCloudExportRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.cloud_export.v202101beta1.CreateCloudExportRequest"; }

 protected:
  explicit CreateCloudExportRequest(::google::protobuf::Arena* arena);
  CreateCloudExportRequest(::google::protobuf::Arena* arena, const CreateCloudExportRequest& from);
  CreateCloudExportRequest(::google::protobuf::Arena* arena, CreateCloudExportRequest&& from) noexcept
      : CreateCloudExportRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExportFieldNumber = 1,
  };
  // .kentik.cloud_export.v202101beta1.CloudExport export = 1 [json_name = "export"];
  bool has_export_() const;
  void clear_export_() ;
  const ::kentik::cloud_export::v202101beta1::CloudExport& export_() const;
  PROTOBUF_NODISCARD ::kentik::cloud_export::v202101beta1::CloudExport* release_export_();
  ::kentik::cloud_export::v202101beta1::CloudExport* mutable_export_();
  void set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value);
  void unsafe_arena_set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value);
  ::kentik::cloud_export::v202101beta1::CloudExport* unsafe_arena_release_export_();

  private:
  const ::kentik::cloud_export::v202101beta1::CloudExport& _internal_export_() const;
  ::kentik::cloud_export::v202101beta1::CloudExport* _internal_mutable_export_();

  public:
  // @@protoc_insertion_point(class_scope:kentik.cloud_export.v202101beta1.CreateCloudExportRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CreateCloudExportRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::kentik::cloud_export::v202101beta1::CloudExport* export__;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CloudExport

// string id = 1 [json_name = "id"];
inline void CloudExport::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& CloudExport::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.CloudExport.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CloudExport::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.CloudExport.id)
}
inline std::string* CloudExport::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.CloudExport.id)
  return _s;
}
inline const std::string& CloudExport::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void CloudExport::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* CloudExport::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* CloudExport::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.CloudExport.id)
  return _impl_.id_.Release();
}
inline void CloudExport::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.CloudExport.id)
}

// .kentik.cloud_export.v202101beta1.CloudExportType type = 15 [json_name = "type"];
inline void CloudExport::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::kentik::cloud_export::v202101beta1::CloudExportType CloudExport::type() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.CloudExport.type)
  return _internal_type();
}
inline void CloudExport::set_type(::kentik::cloud_export::v202101beta1::CloudExportType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.CloudExport.type)
}
inline ::kentik::cloud_export::v202101beta1::CloudExportType CloudExport::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::cloud_export::v202101beta1::CloudExportType>(_impl_.type_);
}
inline void CloudExport::_internal_set_type(::kentik::cloud_export::v202101beta1::CloudExportType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// bool enabled = 2 [json_name = "enabled"];
inline void CloudExport::clear_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = false;
}
inline bool CloudExport::enabled() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.CloudExport.enabled)
  return _internal_enabled();
}
inline void CloudExport::set_enabled(bool value) {
  _internal_set_enabled(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.CloudExport.enabled)
}
inline bool CloudExport::_internal_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enabled_;
}
inline void CloudExport::_internal_set_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enabled_ = value;
}

// string name = 3 [json_name = "name"];
inline void CloudExport::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& CloudExport::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.CloudExport.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CloudExport::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.CloudExport.name)
}
inline std::string* CloudExport::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.CloudExport.name)
  return _s;
}
inline const std::string& CloudExport::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void CloudExport::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* CloudExport::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* CloudExport::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.CloudExport.name)
  return _impl_.name_.Release();
}
inline void CloudExport::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.CloudExport.name)
}

// string description = 4 [json_name = "description"];
inline void CloudExport::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& CloudExport::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.CloudExport.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CloudExport::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.CloudExport.description)
}
inline std::string* CloudExport::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.CloudExport.description)
  return _s;
}
inline const std::string& CloudExport::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void CloudExport::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* CloudExport::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* CloudExport::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.CloudExport.description)
  return _impl_.description_.Release();
}
inline void CloudExport::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.CloudExport.description)
}

// string api_root = 5 [json_name = "apiRoot"];
inline void CloudExport::clear_api_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_root_.ClearToEmpty();
}
inline const std::string& CloudExport::api_root() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.CloudExport.api_root)
  return _internal_api_root();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CloudExport::set_api_root(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_root_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.CloudExport.api_root)
}
inline std::string* CloudExport::mutable_api_root() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_api_root();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.CloudExport.api_root)
  return _s;
}
inline const std::string& CloudExport::_internal_api_root() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.api_root_.Get();
}
inline void CloudExport::_internal_set_api_root(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_root_.Set(value, GetArena());
}
inline std::string* CloudExport::_internal_mutable_api_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.api_root_.Mutable( GetArena());
}
inline std::string* CloudExport::release_api_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.CloudExport.api_root)
  return _impl_.api_root_.Release();
}
inline void CloudExport::set_allocated_api_root(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.api_root_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.api_root_.IsDefault()) {
    _impl_.api_root_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.CloudExport.api_root)
}

// string flow_dest = 6 [json_name = "flowDest"];
inline void CloudExport::clear_flow_dest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flow_dest_.ClearToEmpty();
}
inline const std::string& CloudExport::flow_dest() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.CloudExport.flow_dest)
  return _internal_flow_dest();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CloudExport::set_flow_dest(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flow_dest_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.CloudExport.flow_dest)
}
inline std::string* CloudExport::mutable_flow_dest() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_flow_dest();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.CloudExport.flow_dest)
  return _s;
}
inline const std::string& CloudExport::_internal_flow_dest() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flow_dest_.Get();
}
inline void CloudExport::_internal_set_flow_dest(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flow_dest_.Set(value, GetArena());
}
inline std::string* CloudExport::_internal_mutable_flow_dest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.flow_dest_.Mutable( GetArena());
}
inline std::string* CloudExport::release_flow_dest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.CloudExport.flow_dest)
  return _impl_.flow_dest_.Release();
}
inline void CloudExport::set_allocated_flow_dest(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flow_dest_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.flow_dest_.IsDefault()) {
    _impl_.flow_dest_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.CloudExport.flow_dest)
}

// string plan_id = 7 [json_name = "planId"];
inline void CloudExport::clear_plan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.plan_id_.ClearToEmpty();
}
inline const std::string& CloudExport::plan_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.CloudExport.plan_id)
  return _internal_plan_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CloudExport::set_plan_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.plan_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.CloudExport.plan_id)
}
inline std::string* CloudExport::mutable_plan_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_plan_id();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.CloudExport.plan_id)
  return _s;
}
inline const std::string& CloudExport::_internal_plan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.plan_id_.Get();
}
inline void CloudExport::_internal_set_plan_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.plan_id_.Set(value, GetArena());
}
inline std::string* CloudExport::_internal_mutable_plan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.plan_id_.Mutable( GetArena());
}
inline std::string* CloudExport::release_plan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.CloudExport.plan_id)
  return _impl_.plan_id_.Release();
}
inline void CloudExport::set_allocated_plan_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.plan_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.plan_id_.IsDefault()) {
    _impl_.plan_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.CloudExport.plan_id)
}

// string cloud_provider = 8 [json_name = "cloudProvider"];
inline void CloudExport::clear_cloud_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cloud_provider_.ClearToEmpty();
}
inline const std::string& CloudExport::cloud_provider() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.CloudExport.cloud_provider)
  return _internal_cloud_provider();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CloudExport::set_cloud_provider(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cloud_provider_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.CloudExport.cloud_provider)
}
inline std::string* CloudExport::mutable_cloud_provider() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cloud_provider();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.CloudExport.cloud_provider)
  return _s;
}
inline const std::string& CloudExport::_internal_cloud_provider() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cloud_provider_.Get();
}
inline void CloudExport::_internal_set_cloud_provider(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cloud_provider_.Set(value, GetArena());
}
inline std::string* CloudExport::_internal_mutable_cloud_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.cloud_provider_.Mutable( GetArena());
}
inline std::string* CloudExport::release_cloud_provider() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.CloudExport.cloud_provider)
  return _impl_.cloud_provider_.Release();
}
inline void CloudExport::set_allocated_cloud_provider(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cloud_provider_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.cloud_provider_.IsDefault()) {
    _impl_.cloud_provider_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.CloudExport.cloud_provider)
}

// .kentik.cloud_export.v202101beta1.AwsProperties aws = 9 [json_name = "aws"];
inline bool CloudExport::has_aws() const {
  return properties_case() == kAws;
}
inline bool CloudExport::_internal_has_aws() const {
  return properties_case() == kAws;
}
inline void CloudExport::set_has_aws() {
  _impl_._oneof_case_[0] = kAws;
}
inline void CloudExport::clear_aws() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (properties_case() == kAws) {
    if (GetArena() == nullptr) {
      delete _impl_.properties_.aws_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.properties_.aws_);
    }
    clear_has_properties();
  }
}
inline ::kentik::cloud_export::v202101beta1::AwsProperties* CloudExport::release_aws() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.CloudExport.aws)
  if (properties_case() == kAws) {
    clear_has_properties();
    auto* temp = _impl_.properties_.aws_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.properties_.aws_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::cloud_export::v202101beta1::AwsProperties& CloudExport::_internal_aws() const {
  return properties_case() == kAws ? *_impl_.properties_.aws_ : reinterpret_cast<::kentik::cloud_export::v202101beta1::AwsProperties&>(::kentik::cloud_export::v202101beta1::_AwsProperties_default_instance_);
}
inline const ::kentik::cloud_export::v202101beta1::AwsProperties& CloudExport::aws() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.CloudExport.aws)
  return _internal_aws();
}
inline ::kentik::cloud_export::v202101beta1::AwsProperties* CloudExport::unsafe_arena_release_aws() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202101beta1.CloudExport.aws)
  if (properties_case() == kAws) {
    clear_has_properties();
    auto* temp = _impl_.properties_.aws_;
    _impl_.properties_.aws_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CloudExport::unsafe_arena_set_allocated_aws(::kentik::cloud_export::v202101beta1::AwsProperties* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_properties();
  if (value) {
    set_has_aws();
    _impl_.properties_.aws_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202101beta1.CloudExport.aws)
}
inline ::kentik::cloud_export::v202101beta1::AwsProperties* CloudExport::_internal_mutable_aws() {
  if (properties_case() != kAws) {
    clear_properties();
    set_has_aws();
    _impl_.properties_.aws_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::cloud_export::v202101beta1::AwsProperties>(GetArena());
  }
  return _impl_.properties_.aws_;
}
inline ::kentik::cloud_export::v202101beta1::AwsProperties* CloudExport::mutable_aws() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::cloud_export::v202101beta1::AwsProperties* _msg = _internal_mutable_aws();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.CloudExport.aws)
  return _msg;
}

// .kentik.cloud_export.v202101beta1.AzureProperties azure = 10 [json_name = "azure"];
inline bool CloudExport::has_azure() const {
  return properties_case() == kAzure;
}
inline bool CloudExport::_internal_has_azure() const {
  return properties_case() == kAzure;
}
inline void CloudExport::set_has_azure() {
  _impl_._oneof_case_[0] = kAzure;
}
inline void CloudExport::clear_azure() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (properties_case() == kAzure) {
    if (GetArena() == nullptr) {
      delete _impl_.properties_.azure_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.properties_.azure_);
    }
    clear_has_properties();
  }
}
inline ::kentik::cloud_export::v202101beta1::AzureProperties* CloudExport::release_azure() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.CloudExport.azure)
  if (properties_case() == kAzure) {
    clear_has_properties();
    auto* temp = _impl_.properties_.azure_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.properties_.azure_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::cloud_export::v202101beta1::AzureProperties& CloudExport::_internal_azure() const {
  return properties_case() == kAzure ? *_impl_.properties_.azure_ : reinterpret_cast<::kentik::cloud_export::v202101beta1::AzureProperties&>(::kentik::cloud_export::v202101beta1::_AzureProperties_default_instance_);
}
inline const ::kentik::cloud_export::v202101beta1::AzureProperties& CloudExport::azure() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.CloudExport.azure)
  return _internal_azure();
}
inline ::kentik::cloud_export::v202101beta1::AzureProperties* CloudExport::unsafe_arena_release_azure() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202101beta1.CloudExport.azure)
  if (properties_case() == kAzure) {
    clear_has_properties();
    auto* temp = _impl_.properties_.azure_;
    _impl_.properties_.azure_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CloudExport::unsafe_arena_set_allocated_azure(::kentik::cloud_export::v202101beta1::AzureProperties* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_properties();
  if (value) {
    set_has_azure();
    _impl_.properties_.azure_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202101beta1.CloudExport.azure)
}
inline ::kentik::cloud_export::v202101beta1::AzureProperties* CloudExport::_internal_mutable_azure() {
  if (properties_case() != kAzure) {
    clear_properties();
    set_has_azure();
    _impl_.properties_.azure_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::cloud_export::v202101beta1::AzureProperties>(GetArena());
  }
  return _impl_.properties_.azure_;
}
inline ::kentik::cloud_export::v202101beta1::AzureProperties* CloudExport::mutable_azure() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::cloud_export::v202101beta1::AzureProperties* _msg = _internal_mutable_azure();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.CloudExport.azure)
  return _msg;
}

// .kentik.cloud_export.v202101beta1.GceProperties gce = 11 [json_name = "gce"];
inline bool CloudExport::has_gce() const {
  return properties_case() == kGce;
}
inline bool CloudExport::_internal_has_gce() const {
  return properties_case() == kGce;
}
inline void CloudExport::set_has_gce() {
  _impl_._oneof_case_[0] = kGce;
}
inline void CloudExport::clear_gce() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (properties_case() == kGce) {
    if (GetArena() == nullptr) {
      delete _impl_.properties_.gce_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.properties_.gce_);
    }
    clear_has_properties();
  }
}
inline ::kentik::cloud_export::v202101beta1::GceProperties* CloudExport::release_gce() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.CloudExport.gce)
  if (properties_case() == kGce) {
    clear_has_properties();
    auto* temp = _impl_.properties_.gce_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.properties_.gce_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::cloud_export::v202101beta1::GceProperties& CloudExport::_internal_gce() const {
  return properties_case() == kGce ? *_impl_.properties_.gce_ : reinterpret_cast<::kentik::cloud_export::v202101beta1::GceProperties&>(::kentik::cloud_export::v202101beta1::_GceProperties_default_instance_);
}
inline const ::kentik::cloud_export::v202101beta1::GceProperties& CloudExport::gce() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.CloudExport.gce)
  return _internal_gce();
}
inline ::kentik::cloud_export::v202101beta1::GceProperties* CloudExport::unsafe_arena_release_gce() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202101beta1.CloudExport.gce)
  if (properties_case() == kGce) {
    clear_has_properties();
    auto* temp = _impl_.properties_.gce_;
    _impl_.properties_.gce_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CloudExport::unsafe_arena_set_allocated_gce(::kentik::cloud_export::v202101beta1::GceProperties* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_properties();
  if (value) {
    set_has_gce();
    _impl_.properties_.gce_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202101beta1.CloudExport.gce)
}
inline ::kentik::cloud_export::v202101beta1::GceProperties* CloudExport::_internal_mutable_gce() {
  if (properties_case() != kGce) {
    clear_properties();
    set_has_gce();
    _impl_.properties_.gce_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::cloud_export::v202101beta1::GceProperties>(GetArena());
  }
  return _impl_.properties_.gce_;
}
inline ::kentik::cloud_export::v202101beta1::GceProperties* CloudExport::mutable_gce() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::cloud_export::v202101beta1::GceProperties* _msg = _internal_mutable_gce();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.CloudExport.gce)
  return _msg;
}

// .kentik.cloud_export.v202101beta1.IbmProperties ibm = 12 [json_name = "ibm"];
inline bool CloudExport::has_ibm() const {
  return properties_case() == kIbm;
}
inline bool CloudExport::_internal_has_ibm() const {
  return properties_case() == kIbm;
}
inline void CloudExport::set_has_ibm() {
  _impl_._oneof_case_[0] = kIbm;
}
inline void CloudExport::clear_ibm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (properties_case() == kIbm) {
    if (GetArena() == nullptr) {
      delete _impl_.properties_.ibm_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.properties_.ibm_);
    }
    clear_has_properties();
  }
}
inline ::kentik::cloud_export::v202101beta1::IbmProperties* CloudExport::release_ibm() {
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.CloudExport.ibm)
  if (properties_case() == kIbm) {
    clear_has_properties();
    auto* temp = _impl_.properties_.ibm_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.properties_.ibm_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::kentik::cloud_export::v202101beta1::IbmProperties& CloudExport::_internal_ibm() const {
  return properties_case() == kIbm ? *_impl_.properties_.ibm_ : reinterpret_cast<::kentik::cloud_export::v202101beta1::IbmProperties&>(::kentik::cloud_export::v202101beta1::_IbmProperties_default_instance_);
}
inline const ::kentik::cloud_export::v202101beta1::IbmProperties& CloudExport::ibm() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.CloudExport.ibm)
  return _internal_ibm();
}
inline ::kentik::cloud_export::v202101beta1::IbmProperties* CloudExport::unsafe_arena_release_ibm() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.cloud_export.v202101beta1.CloudExport.ibm)
  if (properties_case() == kIbm) {
    clear_has_properties();
    auto* temp = _impl_.properties_.ibm_;
    _impl_.properties_.ibm_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CloudExport::unsafe_arena_set_allocated_ibm(::kentik::cloud_export::v202101beta1::IbmProperties* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_properties();
  if (value) {
    set_has_ibm();
    _impl_.properties_.ibm_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202101beta1.CloudExport.ibm)
}
inline ::kentik::cloud_export::v202101beta1::IbmProperties* CloudExport::_internal_mutable_ibm() {
  if (properties_case() != kIbm) {
    clear_properties();
    set_has_ibm();
    _impl_.properties_.ibm_ =
        ::google::protobuf::Message::DefaultConstruct<::kentik::cloud_export::v202101beta1::IbmProperties>(GetArena());
  }
  return _impl_.properties_.ibm_;
}
inline ::kentik::cloud_export::v202101beta1::IbmProperties* CloudExport::mutable_ibm() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::kentik::cloud_export::v202101beta1::IbmProperties* _msg = _internal_mutable_ibm();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.CloudExport.ibm)
  return _msg;
}

// .kentik.cloud_export.v202101beta1.BgpProperties bgp = 13 [json_name = "bgp"];
inline bool CloudExport::has_bgp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bgp_ != nullptr);
  return value;
}
inline void CloudExport::clear_bgp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bgp_ != nullptr) _impl_.bgp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::cloud_export::v202101beta1::BgpProperties& CloudExport::_internal_bgp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::cloud_export::v202101beta1::BgpProperties* p = _impl_.bgp_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::cloud_export::v202101beta1::BgpProperties&>(::kentik::cloud_export::v202101beta1::_BgpProperties_default_instance_);
}
inline const ::kentik::cloud_export::v202101beta1::BgpProperties& CloudExport::bgp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.CloudExport.bgp)
  return _internal_bgp();
}
inline void CloudExport::unsafe_arena_set_allocated_bgp(::kentik::cloud_export::v202101beta1::BgpProperties* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bgp_);
  }
  _impl_.bgp_ = reinterpret_cast<::kentik::cloud_export::v202101beta1::BgpProperties*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202101beta1.CloudExport.bgp)
}
inline ::kentik::cloud_export::v202101beta1::BgpProperties* CloudExport::release_bgp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::cloud_export::v202101beta1::BgpProperties* released = _impl_.bgp_;
  _impl_.bgp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::cloud_export::v202101beta1::BgpProperties* CloudExport::unsafe_arena_release_bgp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.CloudExport.bgp)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::cloud_export::v202101beta1::BgpProperties* temp = _impl_.bgp_;
  _impl_.bgp_ = nullptr;
  return temp;
}
inline ::kentik::cloud_export::v202101beta1::BgpProperties* CloudExport::_internal_mutable_bgp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bgp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::cloud_export::v202101beta1::BgpProperties>(GetArena());
    _impl_.bgp_ = reinterpret_cast<::kentik::cloud_export::v202101beta1::BgpProperties*>(p);
  }
  return _impl_.bgp_;
}
inline ::kentik::cloud_export::v202101beta1::BgpProperties* CloudExport::mutable_bgp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::cloud_export::v202101beta1::BgpProperties* _msg = _internal_mutable_bgp();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.CloudExport.bgp)
  return _msg;
}
inline void CloudExport::set_allocated_bgp(::kentik::cloud_export::v202101beta1::BgpProperties* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.bgp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.bgp_ = reinterpret_cast<::kentik::cloud_export::v202101beta1::BgpProperties*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.CloudExport.bgp)
}

// .kentik.cloud_export.v202101beta1.Status current_status = 14 [json_name = "currentStatus"];
inline bool CloudExport::has_current_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.current_status_ != nullptr);
  return value;
}
inline void CloudExport::clear_current_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.current_status_ != nullptr) _impl_.current_status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::kentik::cloud_export::v202101beta1::Status& CloudExport::_internal_current_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::cloud_export::v202101beta1::Status* p = _impl_.current_status_;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::cloud_export::v202101beta1::Status&>(::kentik::cloud_export::v202101beta1::_Status_default_instance_);
}
inline const ::kentik::cloud_export::v202101beta1::Status& CloudExport::current_status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.CloudExport.current_status)
  return _internal_current_status();
}
inline void CloudExport::unsafe_arena_set_allocated_current_status(::kentik::cloud_export::v202101beta1::Status* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.current_status_);
  }
  _impl_.current_status_ = reinterpret_cast<::kentik::cloud_export::v202101beta1::Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202101beta1.CloudExport.current_status)
}
inline ::kentik::cloud_export::v202101beta1::Status* CloudExport::release_current_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::cloud_export::v202101beta1::Status* released = _impl_.current_status_;
  _impl_.current_status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::cloud_export::v202101beta1::Status* CloudExport::unsafe_arena_release_current_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.CloudExport.current_status)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::kentik::cloud_export::v202101beta1::Status* temp = _impl_.current_status_;
  _impl_.current_status_ = nullptr;
  return temp;
}
inline ::kentik::cloud_export::v202101beta1::Status* CloudExport::_internal_mutable_current_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.current_status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::cloud_export::v202101beta1::Status>(GetArena());
    _impl_.current_status_ = reinterpret_cast<::kentik::cloud_export::v202101beta1::Status*>(p);
  }
  return _impl_.current_status_;
}
inline ::kentik::cloud_export::v202101beta1::Status* CloudExport::mutable_current_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::kentik::cloud_export::v202101beta1::Status* _msg = _internal_mutable_current_status();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.CloudExport.current_status)
  return _msg;
}
inline void CloudExport::set_allocated_current_status(::kentik::cloud_export::v202101beta1::Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.current_status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.current_status_ = reinterpret_cast<::kentik::cloud_export::v202101beta1::Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.CloudExport.current_status)
}

inline bool CloudExport::has_properties() const {
  return properties_case() != PROPERTIES_NOT_SET;
}
inline void CloudExport::clear_has_properties() {
  _impl_._oneof_case_[0] = PROPERTIES_NOT_SET;
}
inline CloudExport::PropertiesCase CloudExport::properties_case() const {
  return CloudExport::PropertiesCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// BgpProperties

// bool apply_bgp = 1 [json_name = "applyBgp"];
inline void BgpProperties::clear_apply_bgp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.apply_bgp_ = false;
}
inline bool BgpProperties::apply_bgp() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.BgpProperties.apply_bgp)
  return _internal_apply_bgp();
}
inline void BgpProperties::set_apply_bgp(bool value) {
  _internal_set_apply_bgp(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.BgpProperties.apply_bgp)
}
inline bool BgpProperties::_internal_apply_bgp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.apply_bgp_;
}
inline void BgpProperties::_internal_set_apply_bgp(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.apply_bgp_ = value;
}

// string use_bgp_device_id = 2 [json_name = "useBgpDeviceId"];
inline void BgpProperties::clear_use_bgp_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_bgp_device_id_.ClearToEmpty();
}
inline const std::string& BgpProperties::use_bgp_device_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.BgpProperties.use_bgp_device_id)
  return _internal_use_bgp_device_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BgpProperties::set_use_bgp_device_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_bgp_device_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.BgpProperties.use_bgp_device_id)
}
inline std::string* BgpProperties::mutable_use_bgp_device_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_use_bgp_device_id();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.BgpProperties.use_bgp_device_id)
  return _s;
}
inline const std::string& BgpProperties::_internal_use_bgp_device_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_bgp_device_id_.Get();
}
inline void BgpProperties::_internal_set_use_bgp_device_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_bgp_device_id_.Set(value, GetArena());
}
inline std::string* BgpProperties::_internal_mutable_use_bgp_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.use_bgp_device_id_.Mutable( GetArena());
}
inline std::string* BgpProperties::release_use_bgp_device_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.BgpProperties.use_bgp_device_id)
  return _impl_.use_bgp_device_id_.Release();
}
inline void BgpProperties::set_allocated_use_bgp_device_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_bgp_device_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.use_bgp_device_id_.IsDefault()) {
    _impl_.use_bgp_device_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.BgpProperties.use_bgp_device_id)
}

// string device_bgp_type = 3 [json_name = "deviceBgpType"];
inline void BgpProperties::clear_device_bgp_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_type_.ClearToEmpty();
}
inline const std::string& BgpProperties::device_bgp_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.BgpProperties.device_bgp_type)
  return _internal_device_bgp_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BgpProperties::set_device_bgp_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.BgpProperties.device_bgp_type)
}
inline std::string* BgpProperties::mutable_device_bgp_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_bgp_type();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.BgpProperties.device_bgp_type)
  return _s;
}
inline const std::string& BgpProperties::_internal_device_bgp_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_bgp_type_.Get();
}
inline void BgpProperties::_internal_set_device_bgp_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_type_.Set(value, GetArena());
}
inline std::string* BgpProperties::_internal_mutable_device_bgp_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_bgp_type_.Mutable( GetArena());
}
inline std::string* BgpProperties::release_device_bgp_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.BgpProperties.device_bgp_type)
  return _impl_.device_bgp_type_.Release();
}
inline void BgpProperties::set_allocated_device_bgp_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_bgp_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_bgp_type_.IsDefault()) {
    _impl_.device_bgp_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.BgpProperties.device_bgp_type)
}

// -------------------------------------------------------------------

// AwsProperties

// string bucket = 1 [json_name = "bucket"];
inline void AwsProperties::clear_bucket() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bucket_.ClearToEmpty();
}
inline const std::string& AwsProperties::bucket() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.AwsProperties.bucket)
  return _internal_bucket();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AwsProperties::set_bucket(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bucket_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.AwsProperties.bucket)
}
inline std::string* AwsProperties::mutable_bucket() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bucket();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.AwsProperties.bucket)
  return _s;
}
inline const std::string& AwsProperties::_internal_bucket() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bucket_.Get();
}
inline void AwsProperties::_internal_set_bucket(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bucket_.Set(value, GetArena());
}
inline std::string* AwsProperties::_internal_mutable_bucket() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bucket_.Mutable( GetArena());
}
inline std::string* AwsProperties::release_bucket() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.AwsProperties.bucket)
  return _impl_.bucket_.Release();
}
inline void AwsProperties::set_allocated_bucket(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bucket_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.bucket_.IsDefault()) {
    _impl_.bucket_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.AwsProperties.bucket)
}

// string iam_role_arn = 2 [json_name = "iamRoleArn"];
inline void AwsProperties::clear_iam_role_arn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iam_role_arn_.ClearToEmpty();
}
inline const std::string& AwsProperties::iam_role_arn() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.AwsProperties.iam_role_arn)
  return _internal_iam_role_arn();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AwsProperties::set_iam_role_arn(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iam_role_arn_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.AwsProperties.iam_role_arn)
}
inline std::string* AwsProperties::mutable_iam_role_arn() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_iam_role_arn();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.AwsProperties.iam_role_arn)
  return _s;
}
inline const std::string& AwsProperties::_internal_iam_role_arn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.iam_role_arn_.Get();
}
inline void AwsProperties::_internal_set_iam_role_arn(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iam_role_arn_.Set(value, GetArena());
}
inline std::string* AwsProperties::_internal_mutable_iam_role_arn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.iam_role_arn_.Mutable( GetArena());
}
inline std::string* AwsProperties::release_iam_role_arn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.AwsProperties.iam_role_arn)
  return _impl_.iam_role_arn_.Release();
}
inline void AwsProperties::set_allocated_iam_role_arn(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iam_role_arn_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.iam_role_arn_.IsDefault()) {
    _impl_.iam_role_arn_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.AwsProperties.iam_role_arn)
}

// string region = 3 [json_name = "region"];
inline void AwsProperties::clear_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_.ClearToEmpty();
}
inline const std::string& AwsProperties::region() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.AwsProperties.region)
  return _internal_region();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AwsProperties::set_region(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.AwsProperties.region)
}
inline std::string* AwsProperties::mutable_region() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_region();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.AwsProperties.region)
  return _s;
}
inline const std::string& AwsProperties::_internal_region() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.region_.Get();
}
inline void AwsProperties::_internal_set_region(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_.Set(value, GetArena());
}
inline std::string* AwsProperties::_internal_mutable_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.region_.Mutable( GetArena());
}
inline std::string* AwsProperties::release_region() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.AwsProperties.region)
  return _impl_.region_.Release();
}
inline void AwsProperties::set_allocated_region(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.region_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.region_.IsDefault()) {
    _impl_.region_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.AwsProperties.region)
}

// bool delete_after_read = 4 [json_name = "deleteAfterRead"];
inline void AwsProperties::clear_delete_after_read() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delete_after_read_ = false;
}
inline bool AwsProperties::delete_after_read() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.AwsProperties.delete_after_read)
  return _internal_delete_after_read();
}
inline void AwsProperties::set_delete_after_read(bool value) {
  _internal_set_delete_after_read(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.AwsProperties.delete_after_read)
}
inline bool AwsProperties::_internal_delete_after_read() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delete_after_read_;
}
inline void AwsProperties::_internal_set_delete_after_read(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delete_after_read_ = value;
}

// bool multiple_buckets = 5 [json_name = "multipleBuckets"];
inline void AwsProperties::clear_multiple_buckets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.multiple_buckets_ = false;
}
inline bool AwsProperties::multiple_buckets() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.AwsProperties.multiple_buckets)
  return _internal_multiple_buckets();
}
inline void AwsProperties::set_multiple_buckets(bool value) {
  _internal_set_multiple_buckets(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.AwsProperties.multiple_buckets)
}
inline bool AwsProperties::_internal_multiple_buckets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.multiple_buckets_;
}
inline void AwsProperties::_internal_set_multiple_buckets(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.multiple_buckets_ = value;
}

// -------------------------------------------------------------------

// AzureProperties

// string location = 1 [json_name = "location"];
inline void AzureProperties::clear_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.location_.ClearToEmpty();
}
inline const std::string& AzureProperties::location() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.AzureProperties.location)
  return _internal_location();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AzureProperties::set_location(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.location_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.AzureProperties.location)
}
inline std::string* AzureProperties::mutable_location() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_location();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.AzureProperties.location)
  return _s;
}
inline const std::string& AzureProperties::_internal_location() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.location_.Get();
}
inline void AzureProperties::_internal_set_location(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.location_.Set(value, GetArena());
}
inline std::string* AzureProperties::_internal_mutable_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.location_.Mutable( GetArena());
}
inline std::string* AzureProperties::release_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.AzureProperties.location)
  return _impl_.location_.Release();
}
inline void AzureProperties::set_allocated_location(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.location_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.location_.IsDefault()) {
    _impl_.location_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.AzureProperties.location)
}

// string resource_group = 2 [json_name = "resourceGroup"];
inline void AzureProperties::clear_resource_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_group_.ClearToEmpty();
}
inline const std::string& AzureProperties::resource_group() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.AzureProperties.resource_group)
  return _internal_resource_group();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AzureProperties::set_resource_group(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_group_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.AzureProperties.resource_group)
}
inline std::string* AzureProperties::mutable_resource_group() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_resource_group();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.AzureProperties.resource_group)
  return _s;
}
inline const std::string& AzureProperties::_internal_resource_group() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resource_group_.Get();
}
inline void AzureProperties::_internal_set_resource_group(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_group_.Set(value, GetArena());
}
inline std::string* AzureProperties::_internal_mutable_resource_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.resource_group_.Mutable( GetArena());
}
inline std::string* AzureProperties::release_resource_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.AzureProperties.resource_group)
  return _impl_.resource_group_.Release();
}
inline void AzureProperties::set_allocated_resource_group(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_group_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.resource_group_.IsDefault()) {
    _impl_.resource_group_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.AzureProperties.resource_group)
}

// string storage_account = 3 [json_name = "storageAccount"];
inline void AzureProperties::clear_storage_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.storage_account_.ClearToEmpty();
}
inline const std::string& AzureProperties::storage_account() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.AzureProperties.storage_account)
  return _internal_storage_account();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AzureProperties::set_storage_account(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.storage_account_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.AzureProperties.storage_account)
}
inline std::string* AzureProperties::mutable_storage_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_storage_account();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.AzureProperties.storage_account)
  return _s;
}
inline const std::string& AzureProperties::_internal_storage_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.storage_account_.Get();
}
inline void AzureProperties::_internal_set_storage_account(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.storage_account_.Set(value, GetArena());
}
inline std::string* AzureProperties::_internal_mutable_storage_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.storage_account_.Mutable( GetArena());
}
inline std::string* AzureProperties::release_storage_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.AzureProperties.storage_account)
  return _impl_.storage_account_.Release();
}
inline void AzureProperties::set_allocated_storage_account(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.storage_account_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.storage_account_.IsDefault()) {
    _impl_.storage_account_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.AzureProperties.storage_account)
}

// string subscription_id = 4 [json_name = "subscriptionId"];
inline void AzureProperties::clear_subscription_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscription_id_.ClearToEmpty();
}
inline const std::string& AzureProperties::subscription_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.AzureProperties.subscription_id)
  return _internal_subscription_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AzureProperties::set_subscription_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscription_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.AzureProperties.subscription_id)
}
inline std::string* AzureProperties::mutable_subscription_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subscription_id();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.AzureProperties.subscription_id)
  return _s;
}
inline const std::string& AzureProperties::_internal_subscription_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscription_id_.Get();
}
inline void AzureProperties::_internal_set_subscription_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscription_id_.Set(value, GetArena());
}
inline std::string* AzureProperties::_internal_mutable_subscription_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.subscription_id_.Mutable( GetArena());
}
inline std::string* AzureProperties::release_subscription_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.AzureProperties.subscription_id)
  return _impl_.subscription_id_.Release();
}
inline void AzureProperties::set_allocated_subscription_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscription_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.subscription_id_.IsDefault()) {
    _impl_.subscription_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.AzureProperties.subscription_id)
}

// bool security_principal_enabled = 5 [json_name = "securityPrincipalEnabled"];
inline void AzureProperties::clear_security_principal_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.security_principal_enabled_ = false;
}
inline bool AzureProperties::security_principal_enabled() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.AzureProperties.security_principal_enabled)
  return _internal_security_principal_enabled();
}
inline void AzureProperties::set_security_principal_enabled(bool value) {
  _internal_set_security_principal_enabled(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.AzureProperties.security_principal_enabled)
}
inline bool AzureProperties::_internal_security_principal_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.security_principal_enabled_;
}
inline void AzureProperties::_internal_set_security_principal_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.security_principal_enabled_ = value;
}

// -------------------------------------------------------------------

// GceProperties

// string project = 1 [json_name = "project"];
inline void GceProperties::clear_project() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.project_.ClearToEmpty();
}
inline const std::string& GceProperties::project() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.GceProperties.project)
  return _internal_project();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GceProperties::set_project(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.project_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.GceProperties.project)
}
inline std::string* GceProperties::mutable_project() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_project();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.GceProperties.project)
  return _s;
}
inline const std::string& GceProperties::_internal_project() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.project_.Get();
}
inline void GceProperties::_internal_set_project(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.project_.Set(value, GetArena());
}
inline std::string* GceProperties::_internal_mutable_project() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.project_.Mutable( GetArena());
}
inline std::string* GceProperties::release_project() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.GceProperties.project)
  return _impl_.project_.Release();
}
inline void GceProperties::set_allocated_project(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.project_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.project_.IsDefault()) {
    _impl_.project_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.GceProperties.project)
}

// string subscription = 2 [json_name = "subscription"];
inline void GceProperties::clear_subscription() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscription_.ClearToEmpty();
}
inline const std::string& GceProperties::subscription() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.GceProperties.subscription)
  return _internal_subscription();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GceProperties::set_subscription(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscription_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.GceProperties.subscription)
}
inline std::string* GceProperties::mutable_subscription() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subscription();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.GceProperties.subscription)
  return _s;
}
inline const std::string& GceProperties::_internal_subscription() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscription_.Get();
}
inline void GceProperties::_internal_set_subscription(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscription_.Set(value, GetArena());
}
inline std::string* GceProperties::_internal_mutable_subscription() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.subscription_.Mutable( GetArena());
}
inline std::string* GceProperties::release_subscription() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.GceProperties.subscription)
  return _impl_.subscription_.Release();
}
inline void GceProperties::set_allocated_subscription(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscription_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.subscription_.IsDefault()) {
    _impl_.subscription_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.GceProperties.subscription)
}

// -------------------------------------------------------------------

// IbmProperties

// string bucket = 1 [json_name = "bucket"];
inline void IbmProperties::clear_bucket() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bucket_.ClearToEmpty();
}
inline const std::string& IbmProperties::bucket() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.IbmProperties.bucket)
  return _internal_bucket();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IbmProperties::set_bucket(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bucket_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.IbmProperties.bucket)
}
inline std::string* IbmProperties::mutable_bucket() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bucket();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.IbmProperties.bucket)
  return _s;
}
inline const std::string& IbmProperties::_internal_bucket() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bucket_.Get();
}
inline void IbmProperties::_internal_set_bucket(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bucket_.Set(value, GetArena());
}
inline std::string* IbmProperties::_internal_mutable_bucket() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bucket_.Mutable( GetArena());
}
inline std::string* IbmProperties::release_bucket() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.IbmProperties.bucket)
  return _impl_.bucket_.Release();
}
inline void IbmProperties::set_allocated_bucket(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bucket_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.bucket_.IsDefault()) {
    _impl_.bucket_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.IbmProperties.bucket)
}

// -------------------------------------------------------------------

// Status

// string status = 1 [json_name = "status"];
inline void Status::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
}
inline const std::string& Status::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.Status.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Status::set_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.Status.status)
}
inline std::string* Status::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.Status.status)
  return _s;
}
inline const std::string& Status::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void Status::_internal_set_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(value, GetArena());
}
inline std::string* Status::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* Status::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.Status.status)
  return _impl_.status_.Release();
}
inline void Status::set_allocated_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.status_.IsDefault()) {
    _impl_.status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.Status.status)
}

// string error_message = 2 [json_name = "errorMessage"];
inline void Status::clear_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.ClearToEmpty();
}
inline const std::string& Status::error_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.Status.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Status::set_error_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.Status.error_message)
}
inline std::string* Status::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.Status.error_message)
  return _s;
}
inline const std::string& Status::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_message_.Get();
}
inline void Status::_internal_set_error_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.Set(value, GetArena());
}
inline std::string* Status::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_message_.Mutable( GetArena());
}
inline std::string* Status::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.Status.error_message)
  return _impl_.error_message_.Release();
}
inline void Status::set_allocated_error_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_message_.IsDefault()) {
    _impl_.error_message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.Status.error_message)
}

// .google.protobuf.BoolValue flow_found = 3 [json_name = "flowFound"];
inline bool Status::has_flow_found() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.flow_found_ != nullptr);
  return value;
}
inline const ::google::protobuf::BoolValue& Status::_internal_flow_found() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::BoolValue* p = _impl_.flow_found_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::BoolValue&>(::google::protobuf::_BoolValue_default_instance_);
}
inline const ::google::protobuf::BoolValue& Status::flow_found() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.Status.flow_found)
  return _internal_flow_found();
}
inline void Status::unsafe_arena_set_allocated_flow_found(::google::protobuf::BoolValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.flow_found_);
  }
  _impl_.flow_found_ = reinterpret_cast<::google::protobuf::BoolValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202101beta1.Status.flow_found)
}
inline ::google::protobuf::BoolValue* Status::release_flow_found() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::BoolValue* released = _impl_.flow_found_;
  _impl_.flow_found_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::BoolValue* Status::unsafe_arena_release_flow_found() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.Status.flow_found)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::BoolValue* temp = _impl_.flow_found_;
  _impl_.flow_found_ = nullptr;
  return temp;
}
inline ::google::protobuf::BoolValue* Status::_internal_mutable_flow_found() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.flow_found_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::BoolValue>(GetArena());
    _impl_.flow_found_ = reinterpret_cast<::google::protobuf::BoolValue*>(p);
  }
  return _impl_.flow_found_;
}
inline ::google::protobuf::BoolValue* Status::mutable_flow_found() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::BoolValue* _msg = _internal_mutable_flow_found();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.Status.flow_found)
  return _msg;
}
inline void Status::set_allocated_flow_found(::google::protobuf::BoolValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.flow_found_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.flow_found_ = reinterpret_cast<::google::protobuf::BoolValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.Status.flow_found)
}

// .google.protobuf.BoolValue api_access = 4 [json_name = "apiAccess"];
inline bool Status::has_api_access() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.api_access_ != nullptr);
  return value;
}
inline const ::google::protobuf::BoolValue& Status::_internal_api_access() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::BoolValue* p = _impl_.api_access_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::BoolValue&>(::google::protobuf::_BoolValue_default_instance_);
}
inline const ::google::protobuf::BoolValue& Status::api_access() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.Status.api_access)
  return _internal_api_access();
}
inline void Status::unsafe_arena_set_allocated_api_access(::google::protobuf::BoolValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.api_access_);
  }
  _impl_.api_access_ = reinterpret_cast<::google::protobuf::BoolValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202101beta1.Status.api_access)
}
inline ::google::protobuf::BoolValue* Status::release_api_access() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::BoolValue* released = _impl_.api_access_;
  _impl_.api_access_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::BoolValue* Status::unsafe_arena_release_api_access() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.Status.api_access)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::BoolValue* temp = _impl_.api_access_;
  _impl_.api_access_ = nullptr;
  return temp;
}
inline ::google::protobuf::BoolValue* Status::_internal_mutable_api_access() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.api_access_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::BoolValue>(GetArena());
    _impl_.api_access_ = reinterpret_cast<::google::protobuf::BoolValue*>(p);
  }
  return _impl_.api_access_;
}
inline ::google::protobuf::BoolValue* Status::mutable_api_access() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::BoolValue* _msg = _internal_mutable_api_access();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.Status.api_access)
  return _msg;
}
inline void Status::set_allocated_api_access(::google::protobuf::BoolValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.api_access_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.api_access_ = reinterpret_cast<::google::protobuf::BoolValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.Status.api_access)
}

// .google.protobuf.BoolValue storage_account_access = 5 [json_name = "storageAccountAccess"];
inline bool Status::has_storage_account_access() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.storage_account_access_ != nullptr);
  return value;
}
inline const ::google::protobuf::BoolValue& Status::_internal_storage_account_access() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::BoolValue* p = _impl_.storage_account_access_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::BoolValue&>(::google::protobuf::_BoolValue_default_instance_);
}
inline const ::google::protobuf::BoolValue& Status::storage_account_access() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.Status.storage_account_access)
  return _internal_storage_account_access();
}
inline void Status::unsafe_arena_set_allocated_storage_account_access(::google::protobuf::BoolValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.storage_account_access_);
  }
  _impl_.storage_account_access_ = reinterpret_cast<::google::protobuf::BoolValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202101beta1.Status.storage_account_access)
}
inline ::google::protobuf::BoolValue* Status::release_storage_account_access() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::BoolValue* released = _impl_.storage_account_access_;
  _impl_.storage_account_access_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::BoolValue* Status::unsafe_arena_release_storage_account_access() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.Status.storage_account_access)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::BoolValue* temp = _impl_.storage_account_access_;
  _impl_.storage_account_access_ = nullptr;
  return temp;
}
inline ::google::protobuf::BoolValue* Status::_internal_mutable_storage_account_access() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.storage_account_access_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::BoolValue>(GetArena());
    _impl_.storage_account_access_ = reinterpret_cast<::google::protobuf::BoolValue*>(p);
  }
  return _impl_.storage_account_access_;
}
inline ::google::protobuf::BoolValue* Status::mutable_storage_account_access() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::BoolValue* _msg = _internal_mutable_storage_account_access();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.Status.storage_account_access)
  return _msg;
}
inline void Status::set_allocated_storage_account_access(::google::protobuf::BoolValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.storage_account_access_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.storage_account_access_ = reinterpret_cast<::google::protobuf::BoolValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.Status.storage_account_access)
}

// -------------------------------------------------------------------

// CreateCloudExportRequest

// .kentik.cloud_export.v202101beta1.CloudExport export = 1 [json_name = "export"];
inline bool CreateCloudExportRequest::has_export_() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.export__ != nullptr);
  return value;
}
inline void CreateCloudExportRequest::clear_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.export__ != nullptr) _impl_.export__->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::cloud_export::v202101beta1::CloudExport& CreateCloudExportRequest::_internal_export_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::cloud_export::v202101beta1::CloudExport* p = _impl_.export__;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::cloud_export::v202101beta1::CloudExport&>(::kentik::cloud_export::v202101beta1::_CloudExport_default_instance_);
}
inline const ::kentik::cloud_export::v202101beta1::CloudExport& CreateCloudExportRequest::export_() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.CreateCloudExportRequest.export)
  return _internal_export_();
}
inline void CreateCloudExportRequest::unsafe_arena_set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.export__);
  }
  _impl_.export__ = reinterpret_cast<::kentik::cloud_export::v202101beta1::CloudExport*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202101beta1.CreateCloudExportRequest.export)
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* CreateCloudExportRequest::release_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::cloud_export::v202101beta1::CloudExport* released = _impl_.export__;
  _impl_.export__ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* CreateCloudExportRequest::unsafe_arena_release_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.CreateCloudExportRequest.export)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::cloud_export::v202101beta1::CloudExport* temp = _impl_.export__;
  _impl_.export__ = nullptr;
  return temp;
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* CreateCloudExportRequest::_internal_mutable_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.export__ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::cloud_export::v202101beta1::CloudExport>(GetArena());
    _impl_.export__ = reinterpret_cast<::kentik::cloud_export::v202101beta1::CloudExport*>(p);
  }
  return _impl_.export__;
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* CreateCloudExportRequest::mutable_export_() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::cloud_export::v202101beta1::CloudExport* _msg = _internal_mutable_export_();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.CreateCloudExportRequest.export)
  return _msg;
}
inline void CreateCloudExportRequest::set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.export__);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.export__ = reinterpret_cast<::kentik::cloud_export::v202101beta1::CloudExport*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.CreateCloudExportRequest.export)
}

// -------------------------------------------------------------------

// CreateCloudExportResponse

// .kentik.cloud_export.v202101beta1.CloudExport export = 1 [json_name = "export"];
inline bool CreateCloudExportResponse::has_export_() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.export__ != nullptr);
  return value;
}
inline void CreateCloudExportResponse::clear_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.export__ != nullptr) _impl_.export__->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::cloud_export::v202101beta1::CloudExport& CreateCloudExportResponse::_internal_export_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::cloud_export::v202101beta1::CloudExport* p = _impl_.export__;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::cloud_export::v202101beta1::CloudExport&>(::kentik::cloud_export::v202101beta1::_CloudExport_default_instance_);
}
inline const ::kentik::cloud_export::v202101beta1::CloudExport& CreateCloudExportResponse::export_() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.CreateCloudExportResponse.export)
  return _internal_export_();
}
inline void CreateCloudExportResponse::unsafe_arena_set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.export__);
  }
  _impl_.export__ = reinterpret_cast<::kentik::cloud_export::v202101beta1::CloudExport*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202101beta1.CreateCloudExportResponse.export)
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* CreateCloudExportResponse::release_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::cloud_export::v202101beta1::CloudExport* released = _impl_.export__;
  _impl_.export__ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* CreateCloudExportResponse::unsafe_arena_release_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.CreateCloudExportResponse.export)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::cloud_export::v202101beta1::CloudExport* temp = _impl_.export__;
  _impl_.export__ = nullptr;
  return temp;
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* CreateCloudExportResponse::_internal_mutable_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.export__ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::cloud_export::v202101beta1::CloudExport>(GetArena());
    _impl_.export__ = reinterpret_cast<::kentik::cloud_export::v202101beta1::CloudExport*>(p);
  }
  return _impl_.export__;
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* CreateCloudExportResponse::mutable_export_() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::cloud_export::v202101beta1::CloudExport* _msg = _internal_mutable_export_();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.CreateCloudExportResponse.export)
  return _msg;
}
inline void CreateCloudExportResponse::set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.export__);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.export__ = reinterpret_cast<::kentik::cloud_export::v202101beta1::CloudExport*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.CreateCloudExportResponse.export)
}

// -------------------------------------------------------------------

// ListCloudExportRequest

// -------------------------------------------------------------------

// ListCloudExportResponse

// repeated .kentik.cloud_export.v202101beta1.CloudExport exports = 1 [json_name = "exports"];
inline int ListCloudExportResponse::_internal_exports_size() const {
  return _internal_exports().size();
}
inline int ListCloudExportResponse::exports_size() const {
  return _internal_exports_size();
}
inline void ListCloudExportResponse::clear_exports() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exports_.Clear();
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* ListCloudExportResponse::mutable_exports(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.ListCloudExportResponse.exports)
  return _internal_mutable_exports()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::cloud_export::v202101beta1::CloudExport>* ListCloudExportResponse::mutable_exports()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.cloud_export.v202101beta1.ListCloudExportResponse.exports)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_exports();
}
inline const ::kentik::cloud_export::v202101beta1::CloudExport& ListCloudExportResponse::exports(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.ListCloudExportResponse.exports)
  return _internal_exports().Get(index);
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* ListCloudExportResponse::add_exports() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::cloud_export::v202101beta1::CloudExport* _add = _internal_mutable_exports()->Add();
  // @@protoc_insertion_point(field_add:kentik.cloud_export.v202101beta1.ListCloudExportResponse.exports)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::cloud_export::v202101beta1::CloudExport>& ListCloudExportResponse::exports() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.cloud_export.v202101beta1.ListCloudExportResponse.exports)
  return _internal_exports();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::cloud_export::v202101beta1::CloudExport>&
ListCloudExportResponse::_internal_exports() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exports_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::cloud_export::v202101beta1::CloudExport>*
ListCloudExportResponse::_internal_mutable_exports() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.exports_;
}

// uint32 invalid_exports_count = 2 [json_name = "invalidExportsCount"];
inline void ListCloudExportResponse::clear_invalid_exports_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_exports_count_ = 0u;
}
inline ::uint32_t ListCloudExportResponse::invalid_exports_count() const {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.ListCloudExportResponse.invalid_exports_count)
  return _internal_invalid_exports_count();
}
inline void ListCloudExportResponse::set_invalid_exports_count(::uint32_t value) {
  _internal_set_invalid_exports_count(value);
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.ListCloudExportResponse.invalid_exports_count)
}
inline ::uint32_t ListCloudExportResponse::_internal_invalid_exports_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.invalid_exports_count_;
}
inline void ListCloudExportResponse::_internal_set_invalid_exports_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invalid_exports_count_ = value;
}

// -------------------------------------------------------------------

// GetCloudExportRequest

// string id = 1 [json_name = "id"];
inline void GetCloudExportRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& GetCloudExportRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.GetCloudExportRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetCloudExportRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.GetCloudExportRequest.id)
}
inline std::string* GetCloudExportRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.GetCloudExportRequest.id)
  return _s;
}
inline const std::string& GetCloudExportRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void GetCloudExportRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* GetCloudExportRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* GetCloudExportRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.GetCloudExportRequest.id)
  return _impl_.id_.Release();
}
inline void GetCloudExportRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.GetCloudExportRequest.id)
}

// -------------------------------------------------------------------

// GetCloudExportResponse

// .kentik.cloud_export.v202101beta1.CloudExport export = 1 [json_name = "export"];
inline bool GetCloudExportResponse::has_export_() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.export__ != nullptr);
  return value;
}
inline void GetCloudExportResponse::clear_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.export__ != nullptr) _impl_.export__->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::cloud_export::v202101beta1::CloudExport& GetCloudExportResponse::_internal_export_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::cloud_export::v202101beta1::CloudExport* p = _impl_.export__;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::cloud_export::v202101beta1::CloudExport&>(::kentik::cloud_export::v202101beta1::_CloudExport_default_instance_);
}
inline const ::kentik::cloud_export::v202101beta1::CloudExport& GetCloudExportResponse::export_() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.GetCloudExportResponse.export)
  return _internal_export_();
}
inline void GetCloudExportResponse::unsafe_arena_set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.export__);
  }
  _impl_.export__ = reinterpret_cast<::kentik::cloud_export::v202101beta1::CloudExport*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202101beta1.GetCloudExportResponse.export)
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* GetCloudExportResponse::release_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::cloud_export::v202101beta1::CloudExport* released = _impl_.export__;
  _impl_.export__ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* GetCloudExportResponse::unsafe_arena_release_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.GetCloudExportResponse.export)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::cloud_export::v202101beta1::CloudExport* temp = _impl_.export__;
  _impl_.export__ = nullptr;
  return temp;
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* GetCloudExportResponse::_internal_mutable_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.export__ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::cloud_export::v202101beta1::CloudExport>(GetArena());
    _impl_.export__ = reinterpret_cast<::kentik::cloud_export::v202101beta1::CloudExport*>(p);
  }
  return _impl_.export__;
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* GetCloudExportResponse::mutable_export_() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::cloud_export::v202101beta1::CloudExport* _msg = _internal_mutable_export_();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.GetCloudExportResponse.export)
  return _msg;
}
inline void GetCloudExportResponse::set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.export__);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.export__ = reinterpret_cast<::kentik::cloud_export::v202101beta1::CloudExport*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.GetCloudExportResponse.export)
}

// -------------------------------------------------------------------

// PatchCloudExportRequest

// .kentik.cloud_export.v202101beta1.CloudExport export = 1 [json_name = "export"];
inline bool PatchCloudExportRequest::has_export_() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.export__ != nullptr);
  return value;
}
inline void PatchCloudExportRequest::clear_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.export__ != nullptr) _impl_.export__->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::cloud_export::v202101beta1::CloudExport& PatchCloudExportRequest::_internal_export_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::cloud_export::v202101beta1::CloudExport* p = _impl_.export__;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::cloud_export::v202101beta1::CloudExport&>(::kentik::cloud_export::v202101beta1::_CloudExport_default_instance_);
}
inline const ::kentik::cloud_export::v202101beta1::CloudExport& PatchCloudExportRequest::export_() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.PatchCloudExportRequest.export)
  return _internal_export_();
}
inline void PatchCloudExportRequest::unsafe_arena_set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.export__);
  }
  _impl_.export__ = reinterpret_cast<::kentik::cloud_export::v202101beta1::CloudExport*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202101beta1.PatchCloudExportRequest.export)
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* PatchCloudExportRequest::release_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::cloud_export::v202101beta1::CloudExport* released = _impl_.export__;
  _impl_.export__ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* PatchCloudExportRequest::unsafe_arena_release_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.PatchCloudExportRequest.export)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::cloud_export::v202101beta1::CloudExport* temp = _impl_.export__;
  _impl_.export__ = nullptr;
  return temp;
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* PatchCloudExportRequest::_internal_mutable_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.export__ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::cloud_export::v202101beta1::CloudExport>(GetArena());
    _impl_.export__ = reinterpret_cast<::kentik::cloud_export::v202101beta1::CloudExport*>(p);
  }
  return _impl_.export__;
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* PatchCloudExportRequest::mutable_export_() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::cloud_export::v202101beta1::CloudExport* _msg = _internal_mutable_export_();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.PatchCloudExportRequest.export)
  return _msg;
}
inline void PatchCloudExportRequest::set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.export__);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.export__ = reinterpret_cast<::kentik::cloud_export::v202101beta1::CloudExport*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.PatchCloudExportRequest.export)
}

// .google.protobuf.FieldMask mask = 2 [json_name = "mask"];
inline bool PatchCloudExportRequest::has_mask() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mask_ != nullptr);
  return value;
}
inline const ::google::protobuf::FieldMask& PatchCloudExportRequest::_internal_mask() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::FieldMask* p = _impl_.mask_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::FieldMask&>(::google::protobuf::_FieldMask_default_instance_);
}
inline const ::google::protobuf::FieldMask& PatchCloudExportRequest::mask() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.PatchCloudExportRequest.mask)
  return _internal_mask();
}
inline void PatchCloudExportRequest::unsafe_arena_set_allocated_mask(::google::protobuf::FieldMask* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mask_);
  }
  _impl_.mask_ = reinterpret_cast<::google::protobuf::FieldMask*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202101beta1.PatchCloudExportRequest.mask)
}
inline ::google::protobuf::FieldMask* PatchCloudExportRequest::release_mask() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::FieldMask* released = _impl_.mask_;
  _impl_.mask_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::FieldMask* PatchCloudExportRequest::unsafe_arena_release_mask() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.PatchCloudExportRequest.mask)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::FieldMask* temp = _impl_.mask_;
  _impl_.mask_ = nullptr;
  return temp;
}
inline ::google::protobuf::FieldMask* PatchCloudExportRequest::_internal_mutable_mask() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mask_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::FieldMask>(GetArena());
    _impl_.mask_ = reinterpret_cast<::google::protobuf::FieldMask*>(p);
  }
  return _impl_.mask_;
}
inline ::google::protobuf::FieldMask* PatchCloudExportRequest::mutable_mask() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::FieldMask* _msg = _internal_mutable_mask();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.PatchCloudExportRequest.mask)
  return _msg;
}
inline void PatchCloudExportRequest::set_allocated_mask(::google::protobuf::FieldMask* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mask_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.mask_ = reinterpret_cast<::google::protobuf::FieldMask*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.PatchCloudExportRequest.mask)
}

// -------------------------------------------------------------------

// PatchCloudExportResponse

// .kentik.cloud_export.v202101beta1.CloudExport export = 1 [json_name = "export"];
inline bool PatchCloudExportResponse::has_export_() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.export__ != nullptr);
  return value;
}
inline void PatchCloudExportResponse::clear_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.export__ != nullptr) _impl_.export__->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::cloud_export::v202101beta1::CloudExport& PatchCloudExportResponse::_internal_export_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::cloud_export::v202101beta1::CloudExport* p = _impl_.export__;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::cloud_export::v202101beta1::CloudExport&>(::kentik::cloud_export::v202101beta1::_CloudExport_default_instance_);
}
inline const ::kentik::cloud_export::v202101beta1::CloudExport& PatchCloudExportResponse::export_() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.PatchCloudExportResponse.export)
  return _internal_export_();
}
inline void PatchCloudExportResponse::unsafe_arena_set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.export__);
  }
  _impl_.export__ = reinterpret_cast<::kentik::cloud_export::v202101beta1::CloudExport*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202101beta1.PatchCloudExportResponse.export)
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* PatchCloudExportResponse::release_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::cloud_export::v202101beta1::CloudExport* released = _impl_.export__;
  _impl_.export__ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* PatchCloudExportResponse::unsafe_arena_release_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.PatchCloudExportResponse.export)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::cloud_export::v202101beta1::CloudExport* temp = _impl_.export__;
  _impl_.export__ = nullptr;
  return temp;
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* PatchCloudExportResponse::_internal_mutable_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.export__ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::cloud_export::v202101beta1::CloudExport>(GetArena());
    _impl_.export__ = reinterpret_cast<::kentik::cloud_export::v202101beta1::CloudExport*>(p);
  }
  return _impl_.export__;
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* PatchCloudExportResponse::mutable_export_() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::cloud_export::v202101beta1::CloudExport* _msg = _internal_mutable_export_();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.PatchCloudExportResponse.export)
  return _msg;
}
inline void PatchCloudExportResponse::set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.export__);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.export__ = reinterpret_cast<::kentik::cloud_export::v202101beta1::CloudExport*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.PatchCloudExportResponse.export)
}

// -------------------------------------------------------------------

// UpdateCloudExportRequest

// .kentik.cloud_export.v202101beta1.CloudExport export = 1 [json_name = "export"];
inline bool UpdateCloudExportRequest::has_export_() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.export__ != nullptr);
  return value;
}
inline void UpdateCloudExportRequest::clear_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.export__ != nullptr) _impl_.export__->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::cloud_export::v202101beta1::CloudExport& UpdateCloudExportRequest::_internal_export_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::cloud_export::v202101beta1::CloudExport* p = _impl_.export__;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::cloud_export::v202101beta1::CloudExport&>(::kentik::cloud_export::v202101beta1::_CloudExport_default_instance_);
}
inline const ::kentik::cloud_export::v202101beta1::CloudExport& UpdateCloudExportRequest::export_() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.UpdateCloudExportRequest.export)
  return _internal_export_();
}
inline void UpdateCloudExportRequest::unsafe_arena_set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.export__);
  }
  _impl_.export__ = reinterpret_cast<::kentik::cloud_export::v202101beta1::CloudExport*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202101beta1.UpdateCloudExportRequest.export)
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* UpdateCloudExportRequest::release_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::cloud_export::v202101beta1::CloudExport* released = _impl_.export__;
  _impl_.export__ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* UpdateCloudExportRequest::unsafe_arena_release_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.UpdateCloudExportRequest.export)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::cloud_export::v202101beta1::CloudExport* temp = _impl_.export__;
  _impl_.export__ = nullptr;
  return temp;
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* UpdateCloudExportRequest::_internal_mutable_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.export__ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::cloud_export::v202101beta1::CloudExport>(GetArena());
    _impl_.export__ = reinterpret_cast<::kentik::cloud_export::v202101beta1::CloudExport*>(p);
  }
  return _impl_.export__;
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* UpdateCloudExportRequest::mutable_export_() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::cloud_export::v202101beta1::CloudExport* _msg = _internal_mutable_export_();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.UpdateCloudExportRequest.export)
  return _msg;
}
inline void UpdateCloudExportRequest::set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.export__);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.export__ = reinterpret_cast<::kentik::cloud_export::v202101beta1::CloudExport*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.UpdateCloudExportRequest.export)
}

// -------------------------------------------------------------------

// UpdateCloudExportResponse

// .kentik.cloud_export.v202101beta1.CloudExport export = 1 [json_name = "export"];
inline bool UpdateCloudExportResponse::has_export_() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.export__ != nullptr);
  return value;
}
inline void UpdateCloudExportResponse::clear_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.export__ != nullptr) _impl_.export__->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::kentik::cloud_export::v202101beta1::CloudExport& UpdateCloudExportResponse::_internal_export_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::kentik::cloud_export::v202101beta1::CloudExport* p = _impl_.export__;
  return p != nullptr ? *p : reinterpret_cast<const ::kentik::cloud_export::v202101beta1::CloudExport&>(::kentik::cloud_export::v202101beta1::_CloudExport_default_instance_);
}
inline const ::kentik::cloud_export::v202101beta1::CloudExport& UpdateCloudExportResponse::export_() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.UpdateCloudExportResponse.export)
  return _internal_export_();
}
inline void UpdateCloudExportResponse::unsafe_arena_set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.export__);
  }
  _impl_.export__ = reinterpret_cast<::kentik::cloud_export::v202101beta1::CloudExport*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.cloud_export.v202101beta1.UpdateCloudExportResponse.export)
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* UpdateCloudExportResponse::release_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::cloud_export::v202101beta1::CloudExport* released = _impl_.export__;
  _impl_.export__ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* UpdateCloudExportResponse::unsafe_arena_release_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.UpdateCloudExportResponse.export)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::kentik::cloud_export::v202101beta1::CloudExport* temp = _impl_.export__;
  _impl_.export__ = nullptr;
  return temp;
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* UpdateCloudExportResponse::_internal_mutable_export_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.export__ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::kentik::cloud_export::v202101beta1::CloudExport>(GetArena());
    _impl_.export__ = reinterpret_cast<::kentik::cloud_export::v202101beta1::CloudExport*>(p);
  }
  return _impl_.export__;
}
inline ::kentik::cloud_export::v202101beta1::CloudExport* UpdateCloudExportResponse::mutable_export_() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::kentik::cloud_export::v202101beta1::CloudExport* _msg = _internal_mutable_export_();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.UpdateCloudExportResponse.export)
  return _msg;
}
inline void UpdateCloudExportResponse::set_allocated_export_(::kentik::cloud_export::v202101beta1::CloudExport* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.export__);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.export__ = reinterpret_cast<::kentik::cloud_export::v202101beta1::CloudExport*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.UpdateCloudExportResponse.export)
}

// -------------------------------------------------------------------

// DeleteCloudExportRequest

// string id = 1 [json_name = "id"];
inline void DeleteCloudExportRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& DeleteCloudExportRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.cloud_export.v202101beta1.DeleteCloudExportRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteCloudExportRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.cloud_export.v202101beta1.DeleteCloudExportRequest.id)
}
inline std::string* DeleteCloudExportRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.cloud_export.v202101beta1.DeleteCloudExportRequest.id)
  return _s;
}
inline const std::string& DeleteCloudExportRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void DeleteCloudExportRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* DeleteCloudExportRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* DeleteCloudExportRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.cloud_export.v202101beta1.DeleteCloudExportRequest.id)
  return _impl_.id_.Release();
}
inline void DeleteCloudExportRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.cloud_export.v202101beta1.DeleteCloudExportRequest.id)
}

// -------------------------------------------------------------------

// DeleteCloudExportResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v202101beta1
}  // namespace cloud_export
}  // namespace kentik


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::kentik::cloud_export::v202101beta1::CloudExportType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::cloud_export::v202101beta1::CloudExportType>() {
  return ::kentik::cloud_export::v202101beta1::CloudExportType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kentik_2fcloud_5fexport_2fv202101beta1_2fcloud_5fexport_2eproto_2epb_2eh
