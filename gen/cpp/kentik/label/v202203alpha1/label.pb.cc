// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/label/v202203alpha1/label.proto
// Protobuf C++ Version: 5.29.3

#include "kentik/label/v202203alpha1/label.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace kentik {
namespace label {
namespace v202203alpha1 {
              template <typename>
PROTOBUF_CONSTEXPR ListLabelsRequest::ListLabelsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ListLabelsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListLabelsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListLabelsRequestDefaultTypeInternal() {}
  union {
    ListLabelsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListLabelsRequestDefaultTypeInternal _ListLabelsRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR DeleteLabelResponse::DeleteLabelResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct DeleteLabelResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteLabelResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteLabelResponseDefaultTypeInternal() {}
  union {
    DeleteLabelResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteLabelResponseDefaultTypeInternal _DeleteLabelResponse_default_instance_;

inline constexpr DeleteLabelRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteLabelRequest::DeleteLabelRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeleteLabelRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteLabelRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteLabelRequestDefaultTypeInternal() {}
  union {
    DeleteLabelRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteLabelRequestDefaultTypeInternal _DeleteLabelRequest_default_instance_;

inline constexpr Label::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        color_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cdate_{nullptr},
        edate_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Label::Label(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LabelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LabelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LabelDefaultTypeInternal() {}
  union {
    Label _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LabelDefaultTypeInternal _Label_default_instance_;

inline constexpr UpdateLabelResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        label_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateLabelResponse::UpdateLabelResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateLabelResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateLabelResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateLabelResponseDefaultTypeInternal() {}
  union {
    UpdateLabelResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateLabelResponseDefaultTypeInternal _UpdateLabelResponse_default_instance_;

inline constexpr UpdateLabelRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        label_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateLabelRequest::UpdateLabelRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateLabelRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateLabelRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateLabelRequestDefaultTypeInternal() {}
  union {
    UpdateLabelRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateLabelRequestDefaultTypeInternal _UpdateLabelRequest_default_instance_;

inline constexpr ListLabelsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : labels_{},
        invalid_count_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListLabelsResponse::ListLabelsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListLabelsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListLabelsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListLabelsResponseDefaultTypeInternal() {}
  union {
    ListLabelsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListLabelsResponseDefaultTypeInternal _ListLabelsResponse_default_instance_;

inline constexpr CreateLabelResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        label_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateLabelResponse::CreateLabelResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateLabelResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateLabelResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateLabelResponseDefaultTypeInternal() {}
  union {
    CreateLabelResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateLabelResponseDefaultTypeInternal _CreateLabelResponse_default_instance_;

inline constexpr CreateLabelRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        label_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateLabelRequest::CreateLabelRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateLabelRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateLabelRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateLabelRequestDefaultTypeInternal() {}
  union {
    CreateLabelRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateLabelRequestDefaultTypeInternal _CreateLabelRequest_default_instance_;
}  // namespace v202203alpha1
}  // namespace label
}  // namespace kentik
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_kentik_2flabel_2fv202203alpha1_2flabel_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_kentik_2flabel_2fv202203alpha1_2flabel_2eproto = nullptr;
const ::uint32_t
    TableStruct_kentik_2flabel_2fv202203alpha1_2flabel_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::Label, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::Label, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::Label, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::Label, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::Label, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::Label, _impl_.color_),
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::Label, _impl_.cdate_),
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::Label, _impl_.edate_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::ListLabelsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::ListLabelsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::ListLabelsResponse, _impl_.labels_),
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::ListLabelsResponse, _impl_.invalid_count_),
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::CreateLabelRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::CreateLabelRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::CreateLabelRequest, _impl_.label_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::CreateLabelResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::CreateLabelResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::CreateLabelResponse, _impl_.label_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::UpdateLabelRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::UpdateLabelRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::UpdateLabelRequest, _impl_.label_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::UpdateLabelResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::UpdateLabelResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::UpdateLabelResponse, _impl_.label_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::DeleteLabelRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::DeleteLabelRequest, _impl_.id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::label::v202203alpha1::DeleteLabelResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 14, -1, sizeof(::kentik::label::v202203alpha1::Label)},
        {20, -1, -1, sizeof(::kentik::label::v202203alpha1::ListLabelsRequest)},
        {28, -1, -1, sizeof(::kentik::label::v202203alpha1::ListLabelsResponse)},
        {38, 47, -1, sizeof(::kentik::label::v202203alpha1::CreateLabelRequest)},
        {48, 57, -1, sizeof(::kentik::label::v202203alpha1::CreateLabelResponse)},
        {58, 67, -1, sizeof(::kentik::label::v202203alpha1::UpdateLabelRequest)},
        {68, 77, -1, sizeof(::kentik::label::v202203alpha1::UpdateLabelResponse)},
        {78, -1, -1, sizeof(::kentik::label::v202203alpha1::DeleteLabelRequest)},
        {87, -1, -1, sizeof(::kentik::label::v202203alpha1::DeleteLabelResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::kentik::label::v202203alpha1::_Label_default_instance_._instance,
    &::kentik::label::v202203alpha1::_ListLabelsRequest_default_instance_._instance,
    &::kentik::label::v202203alpha1::_ListLabelsResponse_default_instance_._instance,
    &::kentik::label::v202203alpha1::_CreateLabelRequest_default_instance_._instance,
    &::kentik::label::v202203alpha1::_CreateLabelResponse_default_instance_._instance,
    &::kentik::label::v202203alpha1::_UpdateLabelRequest_default_instance_._instance,
    &::kentik::label::v202203alpha1::_UpdateLabelResponse_default_instance_._instance,
    &::kentik::label::v202203alpha1::_DeleteLabelRequest_default_instance_._instance,
    &::kentik::label::v202203alpha1::_DeleteLabelResponse_default_instance_._instance,
};
const char descriptor_table_protodef_kentik_2flabel_2fv202203alpha1_2flabel_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n&kentik/label/v202203alpha1/label.proto"
    "\022\032kentik.label.v202203alpha1\032\034google/api"
    "/annotations.proto\032\027google/api/client.pr"
    "oto\032.protoc-gen-openapiv2/options/annota"
    "tions.proto\032%kentik/core/v202303/annotat"
    "ions.proto\032\037google/protobuf/timestamp.pr"
    "oto\"\307\001\n\005Label\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004name\030\002 "
    "\001(\tR\004name\022 \n\013description\030\003 \001(\tR\013descript"
    "ion\022\024\n\005color\030\005 \001(\tR\005color\0220\n\005cdate\030\006 \001(\013"
    "2\032.google.protobuf.TimestampR\005cdate\0220\n\005e"
    "date\030\007 \001(\0132\032.google.protobuf.TimestampR\005"
    "edate\"\023\n\021ListLabelsRequest\"t\n\022ListLabels"
    "Response\0229\n\006labels\030\001 \003(\0132!.kentik.label."
    "v202203alpha1.LabelR\006labels\022#\n\rinvalid_c"
    "ount\030\002 \001(\005R\014invalidCount\"M\n\022CreateLabelR"
    "equest\0227\n\005label\030\001 \001(\0132!.kentik.label.v20"
    "2203alpha1.LabelR\005label\"N\n\023CreateLabelRe"
    "sponse\0227\n\005label\030\001 \001(\0132!.kentik.label.v20"
    "2203alpha1.LabelR\005label\"M\n\022UpdateLabelRe"
    "quest\0227\n\005label\030\001 \001(\0132!.kentik.label.v202"
    "203alpha1.LabelR\005label\"N\n\023UpdateLabelRes"
    "ponse\0227\n\005label\030\001 \001(\0132!.kentik.label.v202"
    "203alpha1.LabelR\005label\"$\n\022DeleteLabelReq"
    "uest\022\016\n\002id\030\001 \001(\tR\002id\"\025\n\023DeleteLabelRespo"
    "nse2\277\010\n\014LabelService\022\370\001\n\nListLabels\022-.ke"
    "ntik.label.v202203alpha1.ListLabelsReque"
    "st\032..kentik.label.v202203alpha1.ListLabe"
    "lsResponse\"\212\001\222AP\022\023Fetch Search Labels\032.R"
    "eturn list of labels matches search crit"
    "eria.*\tListLabel\362\327\002\020admin.label:read\202\323\344\223"
    "\002\035\022\033/label/v202203alpha1/labels\022\374\001\n\013Crea"
    "teLabel\022..kentik.label.v202203alpha1.Cre"
    "ateLabelRequest\032/.kentik.label.v202203al"
    "pha1.CreateLabelResponse\"\213\001\222AM\022\017Create a"
    " label.\032-Create a label from request. re"
    "turns created.*\013LabelCreate\362\327\002\021admin.lab"
    "el:write\202\323\344\223\002 \"\033/label/v202203alpha1/lab"
    "els:\001*\022\221\002\n\013UpdateLabel\022..kentik.label.v2"
    "02203alpha1.UpdateLabelRequest\032/.kentik."
    "label.v202203alpha1.UpdateLabelResponse\""
    "\240\001\222AW\022\017Update a label.\0327Replaces the ent"
    "ire label attributes specified with id.*"
    "\013LabelUpdate\362\327\002\021admin.label:write\202\323\344\223\002+\""
    "&/label/v202203alpha1/labels/{label.id}:"
    "\001*\022\365\001\n\013DeleteLabel\022..kentik.label.v20220"
    "3alpha1.DeleteLabelRequest\032/.kentik.labe"
    "l.v202203alpha1.DeleteLabelResponse\"\204\001\222A"
    "D\022\017Delete a label.\032$Deletes the label sp"
    "ecified with id.*\013LabelDelete\362\327\002\021admin.l"
    "abel:write\202\323\344\223\002\"* /label/v202203alpha1/l"
    "abels/{id}\032)\312A\023grpc.api.kentik.com\352\327\002\013ad"
    "min.label\220\330\002\003B\270\003ZKgithub.com/kentik/api-"
    "schema-public/gen/go/kentik/label/v20220"
    "3alpha1;label\222A\347\002\022\200\001\n\tLabel API\022K--- Thi"
    "s API has been deprecated and will be re"
    "moved in the near future ---\"\030\n\026Kentik A"
    "PI Engineering2\014202203alpha1*\001\0022\020applica"
    "tion/json:\020application/jsonZD\n\036\n\005email\022\025"
    "\010\002\032\017X-CH-Auth-Email \002\n\"\n\005token\022\031\010\002\032\023X-CH"
    "-Auth-API-Token \002b\026\n\t\n\005email\022\000\n\t\n\005token\022"
    "\000r]\n%General information about Kentik AP"
    "Is\0224https://kb.kentik.com/v0/Ab09.htm#Ab"
    "09-APIs_Overviewb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_kentik_2flabel_2fv202203alpha1_2flabel_2eproto_deps[5] =
    {
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_google_2fapi_2fclient_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_kentik_2fcore_2fv202303_2fannotations_2eproto,
        &::descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_kentik_2flabel_2fv202203alpha1_2flabel_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_kentik_2flabel_2fv202203alpha1_2flabel_2eproto = {
    false,
    false,
    2504,
    descriptor_table_protodef_kentik_2flabel_2fv202203alpha1_2flabel_2eproto,
    "kentik/label/v202203alpha1/label.proto",
    &descriptor_table_kentik_2flabel_2fv202203alpha1_2flabel_2eproto_once,
    descriptor_table_kentik_2flabel_2fv202203alpha1_2flabel_2eproto_deps,
    5,
    9,
    schemas,
    file_default_instances,
    TableStruct_kentik_2flabel_2fv202203alpha1_2flabel_2eproto::offsets,
    file_level_enum_descriptors_kentik_2flabel_2fv202203alpha1_2flabel_2eproto,
    file_level_service_descriptors_kentik_2flabel_2fv202203alpha1_2flabel_2eproto,
};
namespace kentik {
namespace label {
namespace v202203alpha1 {
// ===================================================================

class Label::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Label>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Label, _impl_._has_bits_);
};

void Label::clear_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cdate_ != nullptr) _impl_.cdate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Label::clear_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.edate_ != nullptr) _impl_.edate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Label::Label(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.label.v202203alpha1.Label)
}
inline PROTOBUF_NDEBUG_INLINE Label::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::label::v202203alpha1::Label& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        name_(arena, from.name_),
        description_(arena, from.description_),
        color_(arena, from.color_) {}

Label::Label(
    ::google::protobuf::Arena* arena,
    const Label& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Label* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.cdate_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.cdate_)
                        : nullptr;
  _impl_.edate_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.edate_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.label.v202203alpha1.Label)
}
inline PROTOBUF_NDEBUG_INLINE Label::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        name_(arena),
        description_(arena),
        color_(arena) {}

inline void Label::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cdate_),
           0,
           offsetof(Impl_, edate_) -
               offsetof(Impl_, cdate_) +
               sizeof(Impl_::edate_));
}
Label::~Label() {
  // @@protoc_insertion_point(destructor:kentik.label.v202203alpha1.Label)
  SharedDtor(*this);
}
inline void Label::SharedDtor(MessageLite& self) {
  Label& this_ = static_cast<Label&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.color_.Destroy();
  delete this_._impl_.cdate_;
  delete this_._impl_.edate_;
  this_._impl_.~Impl_();
}

inline void* Label::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Label(arena);
}
constexpr auto Label::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Label),
                                            alignof(Label));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Label::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Label_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Label::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Label>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Label::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Label>(), &Label::ByteSizeLong,
            &Label::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Label, _impl_._cached_size_),
        false,
    },
    &Label::kDescriptorMethods,
    &descriptor_table_kentik_2flabel_2fv202203alpha1_2flabel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Label::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 63, 2> Label::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Label, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967176,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::label::v202203alpha1::Label>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Label, _impl_.id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Label, _impl_.name_)}},
    // string description = 3 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Label, _impl_.description_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string color = 5 [json_name = "color"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Label, _impl_.color_)}},
    // .google.protobuf.Timestamp cdate = 6 [json_name = "cdate"];
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(Label, _impl_.cdate_)}},
    // .google.protobuf.Timestamp edate = 7 [json_name = "edate"];
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 1, PROTOBUF_FIELD_OFFSET(Label, _impl_.edate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Label, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(Label, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(Label, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string color = 5 [json_name = "color"];
    {PROTOBUF_FIELD_OFFSET(Label, _impl_.color_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp cdate = 6 [json_name = "cdate"];
    {PROTOBUF_FIELD_OFFSET(Label, _impl_.cdate_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp edate = 7 [json_name = "edate"];
    {PROTOBUF_FIELD_OFFSET(Label, _impl_.edate_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\40\2\4\13\5\0\0\0"
    "kentik.label.v202203alpha1.Label"
    "id"
    "name"
    "description"
    "color"
  }},
};

PROTOBUF_NOINLINE void Label::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.label.v202203alpha1.Label)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.color_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.cdate_ != nullptr);
      _impl_.cdate_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.edate_ != nullptr);
      _impl_.edate_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Label::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Label& this_ = static_cast<const Label&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Label::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Label& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.label.v202203alpha1.Label)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.label.v202203alpha1.Label.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string name = 2 [json_name = "name"];
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.label.v202203alpha1.Label.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string description = 3 [json_name = "description"];
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.label.v202203alpha1.Label.description");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string color = 5 [json_name = "color"];
          if (!this_._internal_color().empty()) {
            const std::string& _s = this_._internal_color();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.label.v202203alpha1.Label.color");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp cdate = 6 [json_name = "cdate"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.cdate_, this_._impl_.cdate_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp edate = 7 [json_name = "edate"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.edate_, this_._impl_.edate_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.label.v202203alpha1.Label)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Label::ByteSizeLong(const MessageLite& base) {
          const Label& this_ = static_cast<const Label&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Label::ByteSizeLong() const {
          const Label& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.label.v202203alpha1.Label)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 1 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string name = 2 [json_name = "name"];
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string description = 3 [json_name = "description"];
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // string color = 5 [json_name = "color"];
            if (!this_._internal_color().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_color());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp cdate = 6 [json_name = "cdate"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cdate_);
            }
            // .google.protobuf.Timestamp edate = 7 [json_name = "edate"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.edate_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Label::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Label*>(&to_msg);
  auto& from = static_cast<const Label&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.label.v202203alpha1.Label)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_color().empty()) {
    _this->_internal_set_color(from._internal_color());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.cdate_ != nullptr);
      if (_this->_impl_.cdate_ == nullptr) {
        _this->_impl_.cdate_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.cdate_);
      } else {
        _this->_impl_.cdate_->MergeFrom(*from._impl_.cdate_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.edate_ != nullptr);
      if (_this->_impl_.edate_ == nullptr) {
        _this->_impl_.edate_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.edate_);
      } else {
        _this->_impl_.edate_->MergeFrom(*from._impl_.edate_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Label::CopyFrom(const Label& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.label.v202203alpha1.Label)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Label::InternalSwap(Label* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.color_, &other->_impl_.color_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Label, _impl_.edate_)
      + sizeof(Label::_impl_.edate_)
      - PROTOBUF_FIELD_OFFSET(Label, _impl_.cdate_)>(
          reinterpret_cast<char*>(&_impl_.cdate_),
          reinterpret_cast<char*>(&other->_impl_.cdate_));
}

::google::protobuf::Metadata Label::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListLabelsRequest::_Internal {
 public:
};

ListLabelsRequest::ListLabelsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:kentik.label.v202203alpha1.ListLabelsRequest)
}
ListLabelsRequest::ListLabelsRequest(
    ::google::protobuf::Arena* arena,
    const ListLabelsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListLabelsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:kentik.label.v202203alpha1.ListLabelsRequest)
}

inline void* ListLabelsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListLabelsRequest(arena);
}
constexpr auto ListLabelsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ListLabelsRequest),
                                            alignof(ListLabelsRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListLabelsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListLabelsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListLabelsRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<ListLabelsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListLabelsRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<ListLabelsRequest>(), &ListLabelsRequest::ByteSizeLong,
            &ListLabelsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListLabelsRequest, _impl_._cached_size_),
        false,
    },
    &ListLabelsRequest::kDescriptorMethods,
    &descriptor_table_kentik_2flabel_2fv202203alpha1_2flabel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListLabelsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> ListLabelsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::label::v202203alpha1::ListLabelsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata ListLabelsRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListLabelsResponse::_Internal {
 public:
};

ListLabelsResponse::ListLabelsResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.label.v202203alpha1.ListLabelsResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListLabelsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::label::v202203alpha1::ListLabelsResponse& from_msg)
      : labels_{visibility, arena, from.labels_},
        _cached_size_{0} {}

ListLabelsResponse::ListLabelsResponse(
    ::google::protobuf::Arena* arena,
    const ListLabelsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListLabelsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.invalid_count_ = from._impl_.invalid_count_;

  // @@protoc_insertion_point(copy_constructor:kentik.label.v202203alpha1.ListLabelsResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListLabelsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : labels_{visibility, arena},
        _cached_size_{0} {}

inline void ListLabelsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.invalid_count_ = {};
}
ListLabelsResponse::~ListLabelsResponse() {
  // @@protoc_insertion_point(destructor:kentik.label.v202203alpha1.ListLabelsResponse)
  SharedDtor(*this);
}
inline void ListLabelsResponse::SharedDtor(MessageLite& self) {
  ListLabelsResponse& this_ = static_cast<ListLabelsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ListLabelsResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListLabelsResponse(arena);
}
constexpr auto ListLabelsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListLabelsResponse, _impl_.labels_) +
          decltype(ListLabelsResponse::_impl_.labels_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ListLabelsResponse), alignof(ListLabelsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListLabelsResponse::PlacementNew_,
                                 sizeof(ListLabelsResponse),
                                 alignof(ListLabelsResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListLabelsResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListLabelsResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListLabelsResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ListLabelsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListLabelsResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ListLabelsResponse>(), &ListLabelsResponse::ByteSizeLong,
            &ListLabelsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListLabelsResponse, _impl_._cached_size_),
        false,
    },
    &ListLabelsResponse::kDescriptorMethods,
    &descriptor_table_kentik_2flabel_2fv202203alpha1_2flabel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListLabelsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ListLabelsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::label::v202203alpha1::ListLabelsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 invalid_count = 2 [json_name = "invalidCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListLabelsResponse, _impl_.invalid_count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ListLabelsResponse, _impl_.invalid_count_)}},
    // repeated .kentik.label.v202203alpha1.Label labels = 1 [json_name = "labels"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListLabelsResponse, _impl_.labels_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .kentik.label.v202203alpha1.Label labels = 1 [json_name = "labels"];
    {PROTOBUF_FIELD_OFFSET(ListLabelsResponse, _impl_.labels_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 invalid_count = 2 [json_name = "invalidCount"];
    {PROTOBUF_FIELD_OFFSET(ListLabelsResponse, _impl_.invalid_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::label::v202203alpha1::Label>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ListLabelsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.label.v202203alpha1.ListLabelsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.labels_.Clear();
  _impl_.invalid_count_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ListLabelsResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ListLabelsResponse& this_ = static_cast<const ListLabelsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ListLabelsResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ListLabelsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.label.v202203alpha1.ListLabelsResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .kentik.label.v202203alpha1.Label labels = 1 [json_name = "labels"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_labels_size());
               i < n; i++) {
            const auto& repfield = this_._internal_labels().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // int32 invalid_count = 2 [json_name = "invalidCount"];
          if (this_._internal_invalid_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_invalid_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.label.v202203alpha1.ListLabelsResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ListLabelsResponse::ByteSizeLong(const MessageLite& base) {
          const ListLabelsResponse& this_ = static_cast<const ListLabelsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ListLabelsResponse::ByteSizeLong() const {
          const ListLabelsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.label.v202203alpha1.ListLabelsResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.label.v202203alpha1.Label labels = 1 [json_name = "labels"];
            {
              total_size += 1UL * this_._internal_labels_size();
              for (const auto& msg : this_._internal_labels()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // int32 invalid_count = 2 [json_name = "invalidCount"];
            if (this_._internal_invalid_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_invalid_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ListLabelsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListLabelsResponse*>(&to_msg);
  auto& from = static_cast<const ListLabelsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.label.v202203alpha1.ListLabelsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_labels()->MergeFrom(
      from._internal_labels());
  if (from._internal_invalid_count() != 0) {
    _this->_impl_.invalid_count_ = from._impl_.invalid_count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListLabelsResponse::CopyFrom(const ListLabelsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.label.v202203alpha1.ListLabelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListLabelsResponse::InternalSwap(ListLabelsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.labels_.InternalSwap(&other->_impl_.labels_);
        swap(_impl_.invalid_count_, other->_impl_.invalid_count_);
}

::google::protobuf::Metadata ListLabelsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateLabelRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateLabelRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateLabelRequest, _impl_._has_bits_);
};

CreateLabelRequest::CreateLabelRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.label.v202203alpha1.CreateLabelRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateLabelRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::label::v202203alpha1::CreateLabelRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateLabelRequest::CreateLabelRequest(
    ::google::protobuf::Arena* arena,
    const CreateLabelRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateLabelRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.label_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::label::v202203alpha1::Label>(
                              arena, *from._impl_.label_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.label.v202203alpha1.CreateLabelRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateLabelRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateLabelRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.label_ = {};
}
CreateLabelRequest::~CreateLabelRequest() {
  // @@protoc_insertion_point(destructor:kentik.label.v202203alpha1.CreateLabelRequest)
  SharedDtor(*this);
}
inline void CreateLabelRequest::SharedDtor(MessageLite& self) {
  CreateLabelRequest& this_ = static_cast<CreateLabelRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.label_;
  this_._impl_.~Impl_();
}

inline void* CreateLabelRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateLabelRequest(arena);
}
constexpr auto CreateLabelRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreateLabelRequest),
                                            alignof(CreateLabelRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateLabelRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateLabelRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateLabelRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateLabelRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateLabelRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateLabelRequest>(), &CreateLabelRequest::ByteSizeLong,
            &CreateLabelRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateLabelRequest, _impl_._cached_size_),
        false,
    },
    &CreateLabelRequest::kDescriptorMethods,
    &descriptor_table_kentik_2flabel_2fv202203alpha1_2flabel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateLabelRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateLabelRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateLabelRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::label::v202203alpha1::CreateLabelRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.label.v202203alpha1.Label label = 1 [json_name = "label"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateLabelRequest, _impl_.label_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.label.v202203alpha1.Label label = 1 [json_name = "label"];
    {PROTOBUF_FIELD_OFFSET(CreateLabelRequest, _impl_.label_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::label::v202203alpha1::Label>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CreateLabelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.label.v202203alpha1.CreateLabelRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.label_ != nullptr);
    _impl_.label_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateLabelRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateLabelRequest& this_ = static_cast<const CreateLabelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateLabelRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateLabelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.label.v202203alpha1.CreateLabelRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.label.v202203alpha1.Label label = 1 [json_name = "label"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.label_, this_._impl_.label_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.label.v202203alpha1.CreateLabelRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateLabelRequest::ByteSizeLong(const MessageLite& base) {
          const CreateLabelRequest& this_ = static_cast<const CreateLabelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateLabelRequest::ByteSizeLong() const {
          const CreateLabelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.label.v202203alpha1.CreateLabelRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.label.v202203alpha1.Label label = 1 [json_name = "label"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.label_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateLabelRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateLabelRequest*>(&to_msg);
  auto& from = static_cast<const CreateLabelRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.label.v202203alpha1.CreateLabelRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.label_ != nullptr);
    if (_this->_impl_.label_ == nullptr) {
      _this->_impl_.label_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::label::v202203alpha1::Label>(arena, *from._impl_.label_);
    } else {
      _this->_impl_.label_->MergeFrom(*from._impl_.label_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateLabelRequest::CopyFrom(const CreateLabelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.label.v202203alpha1.CreateLabelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateLabelRequest::InternalSwap(CreateLabelRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.label_, other->_impl_.label_);
}

::google::protobuf::Metadata CreateLabelRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateLabelResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateLabelResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateLabelResponse, _impl_._has_bits_);
};

CreateLabelResponse::CreateLabelResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.label.v202203alpha1.CreateLabelResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateLabelResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::label::v202203alpha1::CreateLabelResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateLabelResponse::CreateLabelResponse(
    ::google::protobuf::Arena* arena,
    const CreateLabelResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateLabelResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.label_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::label::v202203alpha1::Label>(
                              arena, *from._impl_.label_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.label.v202203alpha1.CreateLabelResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateLabelResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateLabelResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.label_ = {};
}
CreateLabelResponse::~CreateLabelResponse() {
  // @@protoc_insertion_point(destructor:kentik.label.v202203alpha1.CreateLabelResponse)
  SharedDtor(*this);
}
inline void CreateLabelResponse::SharedDtor(MessageLite& self) {
  CreateLabelResponse& this_ = static_cast<CreateLabelResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.label_;
  this_._impl_.~Impl_();
}

inline void* CreateLabelResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateLabelResponse(arena);
}
constexpr auto CreateLabelResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreateLabelResponse),
                                            alignof(CreateLabelResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateLabelResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateLabelResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateLabelResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateLabelResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateLabelResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateLabelResponse>(), &CreateLabelResponse::ByteSizeLong,
            &CreateLabelResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateLabelResponse, _impl_._cached_size_),
        false,
    },
    &CreateLabelResponse::kDescriptorMethods,
    &descriptor_table_kentik_2flabel_2fv202203alpha1_2flabel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateLabelResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateLabelResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateLabelResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::label::v202203alpha1::CreateLabelResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.label.v202203alpha1.Label label = 1 [json_name = "label"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateLabelResponse, _impl_.label_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.label.v202203alpha1.Label label = 1 [json_name = "label"];
    {PROTOBUF_FIELD_OFFSET(CreateLabelResponse, _impl_.label_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::label::v202203alpha1::Label>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CreateLabelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.label.v202203alpha1.CreateLabelResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.label_ != nullptr);
    _impl_.label_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateLabelResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateLabelResponse& this_ = static_cast<const CreateLabelResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateLabelResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateLabelResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.label.v202203alpha1.CreateLabelResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.label.v202203alpha1.Label label = 1 [json_name = "label"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.label_, this_._impl_.label_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.label.v202203alpha1.CreateLabelResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateLabelResponse::ByteSizeLong(const MessageLite& base) {
          const CreateLabelResponse& this_ = static_cast<const CreateLabelResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateLabelResponse::ByteSizeLong() const {
          const CreateLabelResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.label.v202203alpha1.CreateLabelResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.label.v202203alpha1.Label label = 1 [json_name = "label"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.label_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateLabelResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateLabelResponse*>(&to_msg);
  auto& from = static_cast<const CreateLabelResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.label.v202203alpha1.CreateLabelResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.label_ != nullptr);
    if (_this->_impl_.label_ == nullptr) {
      _this->_impl_.label_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::label::v202203alpha1::Label>(arena, *from._impl_.label_);
    } else {
      _this->_impl_.label_->MergeFrom(*from._impl_.label_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateLabelResponse::CopyFrom(const CreateLabelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.label.v202203alpha1.CreateLabelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateLabelResponse::InternalSwap(CreateLabelResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.label_, other->_impl_.label_);
}

::google::protobuf::Metadata CreateLabelResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateLabelRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateLabelRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateLabelRequest, _impl_._has_bits_);
};

UpdateLabelRequest::UpdateLabelRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.label.v202203alpha1.UpdateLabelRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateLabelRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::label::v202203alpha1::UpdateLabelRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateLabelRequest::UpdateLabelRequest(
    ::google::protobuf::Arena* arena,
    const UpdateLabelRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateLabelRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.label_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::label::v202203alpha1::Label>(
                              arena, *from._impl_.label_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.label.v202203alpha1.UpdateLabelRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateLabelRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateLabelRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.label_ = {};
}
UpdateLabelRequest::~UpdateLabelRequest() {
  // @@protoc_insertion_point(destructor:kentik.label.v202203alpha1.UpdateLabelRequest)
  SharedDtor(*this);
}
inline void UpdateLabelRequest::SharedDtor(MessageLite& self) {
  UpdateLabelRequest& this_ = static_cast<UpdateLabelRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.label_;
  this_._impl_.~Impl_();
}

inline void* UpdateLabelRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateLabelRequest(arena);
}
constexpr auto UpdateLabelRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateLabelRequest),
                                            alignof(UpdateLabelRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateLabelRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateLabelRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateLabelRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateLabelRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateLabelRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateLabelRequest>(), &UpdateLabelRequest::ByteSizeLong,
            &UpdateLabelRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateLabelRequest, _impl_._cached_size_),
        false,
    },
    &UpdateLabelRequest::kDescriptorMethods,
    &descriptor_table_kentik_2flabel_2fv202203alpha1_2flabel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateLabelRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateLabelRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateLabelRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::label::v202203alpha1::UpdateLabelRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.label.v202203alpha1.Label label = 1 [json_name = "label"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateLabelRequest, _impl_.label_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.label.v202203alpha1.Label label = 1 [json_name = "label"];
    {PROTOBUF_FIELD_OFFSET(UpdateLabelRequest, _impl_.label_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::label::v202203alpha1::Label>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateLabelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.label.v202203alpha1.UpdateLabelRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.label_ != nullptr);
    _impl_.label_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateLabelRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateLabelRequest& this_ = static_cast<const UpdateLabelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateLabelRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateLabelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.label.v202203alpha1.UpdateLabelRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.label.v202203alpha1.Label label = 1 [json_name = "label"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.label_, this_._impl_.label_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.label.v202203alpha1.UpdateLabelRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateLabelRequest::ByteSizeLong(const MessageLite& base) {
          const UpdateLabelRequest& this_ = static_cast<const UpdateLabelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateLabelRequest::ByteSizeLong() const {
          const UpdateLabelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.label.v202203alpha1.UpdateLabelRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.label.v202203alpha1.Label label = 1 [json_name = "label"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.label_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateLabelRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateLabelRequest*>(&to_msg);
  auto& from = static_cast<const UpdateLabelRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.label.v202203alpha1.UpdateLabelRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.label_ != nullptr);
    if (_this->_impl_.label_ == nullptr) {
      _this->_impl_.label_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::label::v202203alpha1::Label>(arena, *from._impl_.label_);
    } else {
      _this->_impl_.label_->MergeFrom(*from._impl_.label_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateLabelRequest::CopyFrom(const UpdateLabelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.label.v202203alpha1.UpdateLabelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateLabelRequest::InternalSwap(UpdateLabelRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.label_, other->_impl_.label_);
}

::google::protobuf::Metadata UpdateLabelRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateLabelResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateLabelResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateLabelResponse, _impl_._has_bits_);
};

UpdateLabelResponse::UpdateLabelResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.label.v202203alpha1.UpdateLabelResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateLabelResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::label::v202203alpha1::UpdateLabelResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateLabelResponse::UpdateLabelResponse(
    ::google::protobuf::Arena* arena,
    const UpdateLabelResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateLabelResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.label_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::label::v202203alpha1::Label>(
                              arena, *from._impl_.label_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.label.v202203alpha1.UpdateLabelResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateLabelResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateLabelResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.label_ = {};
}
UpdateLabelResponse::~UpdateLabelResponse() {
  // @@protoc_insertion_point(destructor:kentik.label.v202203alpha1.UpdateLabelResponse)
  SharedDtor(*this);
}
inline void UpdateLabelResponse::SharedDtor(MessageLite& self) {
  UpdateLabelResponse& this_ = static_cast<UpdateLabelResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.label_;
  this_._impl_.~Impl_();
}

inline void* UpdateLabelResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateLabelResponse(arena);
}
constexpr auto UpdateLabelResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateLabelResponse),
                                            alignof(UpdateLabelResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateLabelResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateLabelResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateLabelResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateLabelResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateLabelResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateLabelResponse>(), &UpdateLabelResponse::ByteSizeLong,
            &UpdateLabelResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateLabelResponse, _impl_._cached_size_),
        false,
    },
    &UpdateLabelResponse::kDescriptorMethods,
    &descriptor_table_kentik_2flabel_2fv202203alpha1_2flabel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateLabelResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateLabelResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateLabelResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::label::v202203alpha1::UpdateLabelResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.label.v202203alpha1.Label label = 1 [json_name = "label"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateLabelResponse, _impl_.label_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.label.v202203alpha1.Label label = 1 [json_name = "label"];
    {PROTOBUF_FIELD_OFFSET(UpdateLabelResponse, _impl_.label_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::label::v202203alpha1::Label>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateLabelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.label.v202203alpha1.UpdateLabelResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.label_ != nullptr);
    _impl_.label_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateLabelResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateLabelResponse& this_ = static_cast<const UpdateLabelResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateLabelResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateLabelResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.label.v202203alpha1.UpdateLabelResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.label.v202203alpha1.Label label = 1 [json_name = "label"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.label_, this_._impl_.label_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.label.v202203alpha1.UpdateLabelResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateLabelResponse::ByteSizeLong(const MessageLite& base) {
          const UpdateLabelResponse& this_ = static_cast<const UpdateLabelResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateLabelResponse::ByteSizeLong() const {
          const UpdateLabelResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.label.v202203alpha1.UpdateLabelResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.label.v202203alpha1.Label label = 1 [json_name = "label"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.label_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateLabelResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateLabelResponse*>(&to_msg);
  auto& from = static_cast<const UpdateLabelResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.label.v202203alpha1.UpdateLabelResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.label_ != nullptr);
    if (_this->_impl_.label_ == nullptr) {
      _this->_impl_.label_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::label::v202203alpha1::Label>(arena, *from._impl_.label_);
    } else {
      _this->_impl_.label_->MergeFrom(*from._impl_.label_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateLabelResponse::CopyFrom(const UpdateLabelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.label.v202203alpha1.UpdateLabelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateLabelResponse::InternalSwap(UpdateLabelResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.label_, other->_impl_.label_);
}

::google::protobuf::Metadata UpdateLabelResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteLabelRequest::_Internal {
 public:
};

DeleteLabelRequest::DeleteLabelRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.label.v202203alpha1.DeleteLabelRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteLabelRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::label::v202203alpha1::DeleteLabelRequest& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

DeleteLabelRequest::DeleteLabelRequest(
    ::google::protobuf::Arena* arena,
    const DeleteLabelRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteLabelRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.label.v202203alpha1.DeleteLabelRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteLabelRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void DeleteLabelRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeleteLabelRequest::~DeleteLabelRequest() {
  // @@protoc_insertion_point(destructor:kentik.label.v202203alpha1.DeleteLabelRequest)
  SharedDtor(*this);
}
inline void DeleteLabelRequest::SharedDtor(MessageLite& self) {
  DeleteLabelRequest& this_ = static_cast<DeleteLabelRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DeleteLabelRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeleteLabelRequest(arena);
}
constexpr auto DeleteLabelRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeleteLabelRequest),
                                            alignof(DeleteLabelRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeleteLabelRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeleteLabelRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeleteLabelRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeleteLabelRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeleteLabelRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeleteLabelRequest>(), &DeleteLabelRequest::ByteSizeLong,
            &DeleteLabelRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeleteLabelRequest, _impl_._cached_size_),
        false,
    },
    &DeleteLabelRequest::kDescriptorMethods,
    &descriptor_table_kentik_2flabel_2fv202203alpha1_2flabel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeleteLabelRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 56, 2> DeleteLabelRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::label::v202203alpha1::DeleteLabelRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteLabelRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(DeleteLabelRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\55\2\0\0\0\0\0\0"
    "kentik.label.v202203alpha1.DeleteLabelRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void DeleteLabelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.label.v202203alpha1.DeleteLabelRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeleteLabelRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeleteLabelRequest& this_ = static_cast<const DeleteLabelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeleteLabelRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeleteLabelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.label.v202203alpha1.DeleteLabelRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.label.v202203alpha1.DeleteLabelRequest.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.label.v202203alpha1.DeleteLabelRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeleteLabelRequest::ByteSizeLong(const MessageLite& base) {
          const DeleteLabelRequest& this_ = static_cast<const DeleteLabelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeleteLabelRequest::ByteSizeLong() const {
          const DeleteLabelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.label.v202203alpha1.DeleteLabelRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string id = 1 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeleteLabelRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteLabelRequest*>(&to_msg);
  auto& from = static_cast<const DeleteLabelRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.label.v202203alpha1.DeleteLabelRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteLabelRequest::CopyFrom(const DeleteLabelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.label.v202203alpha1.DeleteLabelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeleteLabelRequest::InternalSwap(DeleteLabelRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata DeleteLabelRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteLabelResponse::_Internal {
 public:
};

DeleteLabelResponse::DeleteLabelResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:kentik.label.v202203alpha1.DeleteLabelResponse)
}
DeleteLabelResponse::DeleteLabelResponse(
    ::google::protobuf::Arena* arena,
    const DeleteLabelResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteLabelResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:kentik.label.v202203alpha1.DeleteLabelResponse)
}

inline void* DeleteLabelResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeleteLabelResponse(arena);
}
constexpr auto DeleteLabelResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DeleteLabelResponse),
                                            alignof(DeleteLabelResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeleteLabelResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeleteLabelResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeleteLabelResponse::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<DeleteLabelResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeleteLabelResponse::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<DeleteLabelResponse>(), &DeleteLabelResponse::ByteSizeLong,
            &DeleteLabelResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeleteLabelResponse, _impl_._cached_size_),
        false,
    },
    &DeleteLabelResponse::kDescriptorMethods,
    &descriptor_table_kentik_2flabel_2fv202203alpha1_2flabel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeleteLabelResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> DeleteLabelResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::label::v202203alpha1::DeleteLabelResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata DeleteLabelResponse::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v202203alpha1
}  // namespace label
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_kentik_2flabel_2fv202203alpha1_2flabel_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
