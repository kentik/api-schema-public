// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kentik/connectivity_checker/v202410beta1/connectivity_checker.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_kentik_2fconnectivity_5fchecker_2fv202410beta1_2fconnectivity_5fchecker_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_kentik_2fconnectivity_5fchecker_2fv202410beta1_2fconnectivity_5fchecker_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include <google/protobuf/timestamp.pb.h>
#include "kentik/core/v202303/annotations.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_kentik_2fconnectivity_5fchecker_2fv202410beta1_2fconnectivity_5fchecker_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2fconnectivity_5fchecker_2fv202410beta1_2fconnectivity_5fchecker_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_kentik_2fconnectivity_5fchecker_2fv202410beta1_2fconnectivity_5fchecker_2eproto;
namespace kentik {
namespace connectivity_checker {
namespace v202410beta1 {
class CreateConnectivityReportRequest;
class CreateConnectivityReportRequestDefaultTypeInternal;
extern CreateConnectivityReportRequestDefaultTypeInternal _CreateConnectivityReportRequest_default_instance_;
class CreateConnectivityReportResponse;
class CreateConnectivityReportResponseDefaultTypeInternal;
extern CreateConnectivityReportResponseDefaultTypeInternal _CreateConnectivityReportResponse_default_instance_;
}  // namespace v202410beta1
}  // namespace connectivity_checker
}  // namespace kentik
PROTOBUF_NAMESPACE_OPEN
template<> ::kentik::connectivity_checker::v202410beta1::CreateConnectivityReportRequest* Arena::CreateMaybeMessage<::kentik::connectivity_checker::v202410beta1::CreateConnectivityReportRequest>(Arena*);
template<> ::kentik::connectivity_checker::v202410beta1::CreateConnectivityReportResponse* Arena::CreateMaybeMessage<::kentik::connectivity_checker::v202410beta1::CreateConnectivityReportResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace kentik {
namespace connectivity_checker {
namespace v202410beta1 {

enum CloudProvider : int {
  CLOUD_PROVIDER_UNSPECIFIED = 0,
  CLOUD_PROVIDER_AWS = 1,
  CLOUD_PROVIDER_AZURE = 2,
  CloudProvider_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  CloudProvider_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool CloudProvider_IsValid(int value);
constexpr CloudProvider CloudProvider_MIN = CLOUD_PROVIDER_UNSPECIFIED;
constexpr CloudProvider CloudProvider_MAX = CLOUD_PROVIDER_AZURE;
constexpr int CloudProvider_ARRAYSIZE = CloudProvider_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CloudProvider_descriptor();
template<typename T>
inline const std::string& CloudProvider_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CloudProvider>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CloudProvider_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CloudProvider_descriptor(), enum_t_value);
}
inline bool CloudProvider_Parse(
    const std::string& name, CloudProvider* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CloudProvider>(
    CloudProvider_descriptor(), name, value);
}
enum EntityType : int {
  ENTITY_TYPE_UNSPECIFIED = 0,
  ENTITY_TYPE_SUBNET = 1,
  ENTITY_TYPE_INSTANCE = 2,
  ENTITY_TYPE_NETWORK_INTERFACE = 3,
  EntityType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  EntityType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool EntityType_IsValid(int value);
constexpr EntityType EntityType_MIN = ENTITY_TYPE_UNSPECIFIED;
constexpr EntityType EntityType_MAX = ENTITY_TYPE_NETWORK_INTERFACE;
constexpr int EntityType_ARRAYSIZE = EntityType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EntityType_descriptor();
template<typename T>
inline const std::string& EntityType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EntityType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EntityType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EntityType_descriptor(), enum_t_value);
}
inline bool EntityType_Parse(
    const std::string& name, EntityType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EntityType>(
    EntityType_descriptor(), name, value);
}
// ===================================================================

class CreateConnectivityReportRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest) */ {
 public:
  inline CreateConnectivityReportRequest() : CreateConnectivityReportRequest(nullptr) {};
  virtual ~CreateConnectivityReportRequest();

  CreateConnectivityReportRequest(const CreateConnectivityReportRequest& from);
  CreateConnectivityReportRequest(CreateConnectivityReportRequest&& from) noexcept
    : CreateConnectivityReportRequest() {
    *this = ::std::move(from);
  }

  inline CreateConnectivityReportRequest& operator=(const CreateConnectivityReportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateConnectivityReportRequest& operator=(CreateConnectivityReportRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateConnectivityReportRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateConnectivityReportRequest* internal_default_instance() {
    return reinterpret_cast<const CreateConnectivityReportRequest*>(
               &_CreateConnectivityReportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CreateConnectivityReportRequest& a, CreateConnectivityReportRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateConnectivityReportRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateConnectivityReportRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateConnectivityReportRequest* New() const final {
    return CreateMaybeMessage<CreateConnectivityReportRequest>(nullptr);
  }

  CreateConnectivityReportRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateConnectivityReportRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateConnectivityReportRequest& from);
  void MergeFrom(const CreateConnectivityReportRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateConnectivityReportRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest";
  }
  protected:
  explicit CreateConnectivityReportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fconnectivity_5fchecker_2fv202410beta1_2fconnectivity_5fchecker_2eproto);
    return ::descriptor_table_kentik_2fconnectivity_5fchecker_2fv202410beta1_2fconnectivity_5fchecker_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSrcFieldNumber = 2,
    kDstFieldNumber = 3,
    kDstPortFieldNumber = 4,
    kProtocolFieldNumber = 5,
    kNameFieldNumber = 10,
    kStartTimeFieldNumber = 8,
    kEndTimeFieldNumber = 9,
    kCloudProviderFieldNumber = 1,
    kSrcTypeFieldNumber = 6,
    kDstTypeFieldNumber = 7,
  };
  // string src = 2[json_name = "src", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_src();
  const std::string& src() const;
  void set_src(const std::string& value);
  void set_src(std::string&& value);
  void set_src(const char* value);
  void set_src(const char* value, size_t size);
  std::string* mutable_src();
  std::string* release_src();
  void set_allocated_src(std::string* src);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_src();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_src(
      std::string* src);
  private:
  const std::string& _internal_src() const;
  void _internal_set_src(const std::string& value);
  std::string* _internal_mutable_src();
  public:

  // string dst = 3[json_name = "dst", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_dst();
  const std::string& dst() const;
  void set_dst(const std::string& value);
  void set_dst(std::string&& value);
  void set_dst(const char* value);
  void set_dst(const char* value, size_t size);
  std::string* mutable_dst();
  std::string* release_dst();
  void set_allocated_dst(std::string* dst);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_dst();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_dst(
      std::string* dst);
  private:
  const std::string& _internal_dst() const;
  void _internal_set_dst(const std::string& value);
  std::string* _internal_mutable_dst();
  public:

  // string dst_port = 4[json_name = "dstPort", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_dst_port();
  const std::string& dst_port() const;
  void set_dst_port(const std::string& value);
  void set_dst_port(std::string&& value);
  void set_dst_port(const char* value);
  void set_dst_port(const char* value, size_t size);
  std::string* mutable_dst_port();
  std::string* release_dst_port();
  void set_allocated_dst_port(std::string* dst_port);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_dst_port();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_dst_port(
      std::string* dst_port);
  private:
  const std::string& _internal_dst_port() const;
  void _internal_set_dst_port(const std::string& value);
  std::string* _internal_mutable_dst_port();
  public:

  // string protocol = 5[json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_protocol();
  const std::string& protocol() const;
  void set_protocol(const std::string& value);
  void set_protocol(std::string&& value);
  void set_protocol(const char* value);
  void set_protocol(const char* value, size_t size);
  std::string* mutable_protocol();
  std::string* release_protocol();
  void set_allocated_protocol(std::string* protocol);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_protocol();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_protocol(
      std::string* protocol);
  private:
  const std::string& _internal_protocol() const;
  void _internal_set_protocol(const std::string& value);
  std::string* _internal_mutable_protocol();
  public:

  // string name = 10[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .google.protobuf.Timestamp start_time = 8[json_name = "startTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_start_time() const;
  private:
  bool _internal_has_start_time() const;
  public:
  void clear_start_time();
  const PROTOBUF_NAMESPACE_ID::Timestamp& start_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_start_time();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_start_time();
  void set_allocated_start_time(PROTOBUF_NAMESPACE_ID::Timestamp* start_time);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_start_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_start_time();
  public:
  void unsafe_arena_set_allocated_start_time(
      PROTOBUF_NAMESPACE_ID::Timestamp* start_time);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_start_time();

  // .google.protobuf.Timestamp end_time = 9[json_name = "endTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_end_time() const;
  private:
  bool _internal_has_end_time() const;
  public:
  void clear_end_time();
  const PROTOBUF_NAMESPACE_ID::Timestamp& end_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_end_time();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_end_time();
  void set_allocated_end_time(PROTOBUF_NAMESPACE_ID::Timestamp* end_time);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_end_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_end_time();
  public:
  void unsafe_arena_set_allocated_end_time(
      PROTOBUF_NAMESPACE_ID::Timestamp* end_time);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_end_time();

  // .kentik.connectivity_checker.v202410beta1.CloudProvider cloud_provider = 1[json_name = "cloudProvider", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_cloud_provider();
  ::kentik::connectivity_checker::v202410beta1::CloudProvider cloud_provider() const;
  void set_cloud_provider(::kentik::connectivity_checker::v202410beta1::CloudProvider value);
  private:
  ::kentik::connectivity_checker::v202410beta1::CloudProvider _internal_cloud_provider() const;
  void _internal_set_cloud_provider(::kentik::connectivity_checker::v202410beta1::CloudProvider value);
  public:

  // .kentik.connectivity_checker.v202410beta1.EntityType src_type = 6[json_name = "srcType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_src_type();
  ::kentik::connectivity_checker::v202410beta1::EntityType src_type() const;
  void set_src_type(::kentik::connectivity_checker::v202410beta1::EntityType value);
  private:
  ::kentik::connectivity_checker::v202410beta1::EntityType _internal_src_type() const;
  void _internal_set_src_type(::kentik::connectivity_checker::v202410beta1::EntityType value);
  public:

  // .kentik.connectivity_checker.v202410beta1.EntityType dst_type = 7[json_name = "dstType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_dst_type();
  ::kentik::connectivity_checker::v202410beta1::EntityType dst_type() const;
  void set_dst_type(::kentik::connectivity_checker::v202410beta1::EntityType value);
  private:
  ::kentik::connectivity_checker::v202410beta1::EntityType _internal_dst_type() const;
  void _internal_set_dst_type(::kentik::connectivity_checker::v202410beta1::EntityType value);
  public:

  // @@protoc_insertion_point(class_scope:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr src_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dst_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dst_port_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr protocol_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  PROTOBUF_NAMESPACE_ID::Timestamp* start_time_;
  PROTOBUF_NAMESPACE_ID::Timestamp* end_time_;
  int cloud_provider_;
  int src_type_;
  int dst_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fconnectivity_5fchecker_2fv202410beta1_2fconnectivity_5fchecker_2eproto;
};
// -------------------------------------------------------------------

class CreateConnectivityReportResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse) */ {
 public:
  inline CreateConnectivityReportResponse() : CreateConnectivityReportResponse(nullptr) {};
  virtual ~CreateConnectivityReportResponse();

  CreateConnectivityReportResponse(const CreateConnectivityReportResponse& from);
  CreateConnectivityReportResponse(CreateConnectivityReportResponse&& from) noexcept
    : CreateConnectivityReportResponse() {
    *this = ::std::move(from);
  }

  inline CreateConnectivityReportResponse& operator=(const CreateConnectivityReportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateConnectivityReportResponse& operator=(CreateConnectivityReportResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateConnectivityReportResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateConnectivityReportResponse* internal_default_instance() {
    return reinterpret_cast<const CreateConnectivityReportResponse*>(
               &_CreateConnectivityReportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CreateConnectivityReportResponse& a, CreateConnectivityReportResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateConnectivityReportResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateConnectivityReportResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateConnectivityReportResponse* New() const final {
    return CreateMaybeMessage<CreateConnectivityReportResponse>(nullptr);
  }

  CreateConnectivityReportResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateConnectivityReportResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateConnectivityReportResponse& from);
  void MergeFrom(const CreateConnectivityReportResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateConnectivityReportResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse";
  }
  protected:
  explicit CreateConnectivityReportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_kentik_2fconnectivity_5fchecker_2fv202410beta1_2fconnectivity_5fchecker_2eproto);
    return ::descriptor_table_kentik_2fconnectivity_5fchecker_2fv202410beta1_2fconnectivity_5fchecker_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathsFieldNumber = 5,
    kReturnPathsFieldNumber = 6,
    kQueryStatusFieldNumber = 3,
    kReportUrlFieldNumber = 4,
    kLastMetadataFetchFieldNumber = 7,
    kReachableFieldNumber = 1,
    kReturnReachableFieldNumber = 2,
  };
  // repeated string paths = 5[json_name = "paths", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int paths_size() const;
  private:
  int _internal_paths_size() const;
  public:
  void clear_paths();
  const std::string& paths(int index) const;
  std::string* mutable_paths(int index);
  void set_paths(int index, const std::string& value);
  void set_paths(int index, std::string&& value);
  void set_paths(int index, const char* value);
  void set_paths(int index, const char* value, size_t size);
  std::string* add_paths();
  void add_paths(const std::string& value);
  void add_paths(std::string&& value);
  void add_paths(const char* value);
  void add_paths(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& paths() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_paths();
  private:
  const std::string& _internal_paths(int index) const;
  std::string* _internal_add_paths();
  public:

  // repeated string return_paths = 6[json_name = "returnPaths", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int return_paths_size() const;
  private:
  int _internal_return_paths_size() const;
  public:
  void clear_return_paths();
  const std::string& return_paths(int index) const;
  std::string* mutable_return_paths(int index);
  void set_return_paths(int index, const std::string& value);
  void set_return_paths(int index, std::string&& value);
  void set_return_paths(int index, const char* value);
  void set_return_paths(int index, const char* value, size_t size);
  std::string* add_return_paths();
  void add_return_paths(const std::string& value);
  void add_return_paths(std::string&& value);
  void add_return_paths(const char* value);
  void add_return_paths(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& return_paths() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_return_paths();
  private:
  const std::string& _internal_return_paths(int index) const;
  std::string* _internal_add_return_paths();
  public:

  // string query_status = 3[json_name = "queryStatus", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_query_status();
  const std::string& query_status() const;
  void set_query_status(const std::string& value);
  void set_query_status(std::string&& value);
  void set_query_status(const char* value);
  void set_query_status(const char* value, size_t size);
  std::string* mutable_query_status();
  std::string* release_query_status();
  void set_allocated_query_status(std::string* query_status);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_query_status();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_query_status(
      std::string* query_status);
  private:
  const std::string& _internal_query_status() const;
  void _internal_set_query_status(const std::string& value);
  std::string* _internal_mutable_query_status();
  public:

  // string report_url = 4[json_name = "reportUrl", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_report_url();
  const std::string& report_url() const;
  void set_report_url(const std::string& value);
  void set_report_url(std::string&& value);
  void set_report_url(const char* value);
  void set_report_url(const char* value, size_t size);
  std::string* mutable_report_url();
  std::string* release_report_url();
  void set_allocated_report_url(std::string* report_url);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_report_url();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_report_url(
      std::string* report_url);
  private:
  const std::string& _internal_report_url() const;
  void _internal_set_report_url(const std::string& value);
  std::string* _internal_mutable_report_url();
  public:

  // string last_metadata_fetch = 7[json_name = "lastMetadataFetch", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_last_metadata_fetch();
  const std::string& last_metadata_fetch() const;
  void set_last_metadata_fetch(const std::string& value);
  void set_last_metadata_fetch(std::string&& value);
  void set_last_metadata_fetch(const char* value);
  void set_last_metadata_fetch(const char* value, size_t size);
  std::string* mutable_last_metadata_fetch();
  std::string* release_last_metadata_fetch();
  void set_allocated_last_metadata_fetch(std::string* last_metadata_fetch);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_last_metadata_fetch();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_last_metadata_fetch(
      std::string* last_metadata_fetch);
  private:
  const std::string& _internal_last_metadata_fetch() const;
  void _internal_set_last_metadata_fetch(const std::string& value);
  std::string* _internal_mutable_last_metadata_fetch();
  public:

  // bool reachable = 1[json_name = "reachable", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_reachable();
  bool reachable() const;
  void set_reachable(bool value);
  private:
  bool _internal_reachable() const;
  void _internal_set_reachable(bool value);
  public:

  // bool return_reachable = 2[json_name = "returnReachable", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_return_reachable();
  bool return_reachable() const;
  void set_return_reachable(bool value);
  private:
  bool _internal_return_reachable() const;
  void _internal_set_return_reachable(bool value);
  public:

  // @@protoc_insertion_point(class_scope:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> paths_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> return_paths_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr query_status_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr report_url_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_metadata_fetch_;
  bool reachable_;
  bool return_reachable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_kentik_2fconnectivity_5fchecker_2fv202410beta1_2fconnectivity_5fchecker_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CreateConnectivityReportRequest

// .kentik.connectivity_checker.v202410beta1.CloudProvider cloud_provider = 1[json_name = "cloudProvider", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CreateConnectivityReportRequest::clear_cloud_provider() {
  cloud_provider_ = 0;
}
inline ::kentik::connectivity_checker::v202410beta1::CloudProvider CreateConnectivityReportRequest::_internal_cloud_provider() const {
  return static_cast< ::kentik::connectivity_checker::v202410beta1::CloudProvider >(cloud_provider_);
}
inline ::kentik::connectivity_checker::v202410beta1::CloudProvider CreateConnectivityReportRequest::cloud_provider() const {
  // @@protoc_insertion_point(field_get:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.cloud_provider)
  return _internal_cloud_provider();
}
inline void CreateConnectivityReportRequest::_internal_set_cloud_provider(::kentik::connectivity_checker::v202410beta1::CloudProvider value) {
  
  cloud_provider_ = value;
}
inline void CreateConnectivityReportRequest::set_cloud_provider(::kentik::connectivity_checker::v202410beta1::CloudProvider value) {
  _internal_set_cloud_provider(value);
  // @@protoc_insertion_point(field_set:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.cloud_provider)
}

// string src = 2[json_name = "src", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CreateConnectivityReportRequest::clear_src() {
  src_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CreateConnectivityReportRequest::src() const {
  // @@protoc_insertion_point(field_get:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.src)
  return _internal_src();
}
inline void CreateConnectivityReportRequest::set_src(const std::string& value) {
  _internal_set_src(value);
  // @@protoc_insertion_point(field_set:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.src)
}
inline std::string* CreateConnectivityReportRequest::mutable_src() {
  // @@protoc_insertion_point(field_mutable:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.src)
  return _internal_mutable_src();
}
inline const std::string& CreateConnectivityReportRequest::_internal_src() const {
  return src_.Get();
}
inline void CreateConnectivityReportRequest::_internal_set_src(const std::string& value) {
  
  src_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CreateConnectivityReportRequest::set_src(std::string&& value) {
  
  src_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.src)
}
inline void CreateConnectivityReportRequest::set_src(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  src_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.src)
}
inline void CreateConnectivityReportRequest::set_src(const char* value,
    size_t size) {
  
  src_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.src)
}
inline std::string* CreateConnectivityReportRequest::_internal_mutable_src() {
  
  return src_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CreateConnectivityReportRequest::release_src() {
  // @@protoc_insertion_point(field_release:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.src)
  return src_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreateConnectivityReportRequest::set_allocated_src(std::string* src) {
  if (src != nullptr) {
    
  } else {
    
  }
  src_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), src,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.src)
}
inline std::string* CreateConnectivityReportRequest::unsafe_arena_release_src() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.src)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return src_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CreateConnectivityReportRequest::unsafe_arena_set_allocated_src(
    std::string* src) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (src != nullptr) {
    
  } else {
    
  }
  src_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      src, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.src)
}

// string dst = 3[json_name = "dst", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CreateConnectivityReportRequest::clear_dst() {
  dst_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CreateConnectivityReportRequest::dst() const {
  // @@protoc_insertion_point(field_get:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.dst)
  return _internal_dst();
}
inline void CreateConnectivityReportRequest::set_dst(const std::string& value) {
  _internal_set_dst(value);
  // @@protoc_insertion_point(field_set:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.dst)
}
inline std::string* CreateConnectivityReportRequest::mutable_dst() {
  // @@protoc_insertion_point(field_mutable:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.dst)
  return _internal_mutable_dst();
}
inline const std::string& CreateConnectivityReportRequest::_internal_dst() const {
  return dst_.Get();
}
inline void CreateConnectivityReportRequest::_internal_set_dst(const std::string& value) {
  
  dst_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CreateConnectivityReportRequest::set_dst(std::string&& value) {
  
  dst_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.dst)
}
inline void CreateConnectivityReportRequest::set_dst(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  dst_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.dst)
}
inline void CreateConnectivityReportRequest::set_dst(const char* value,
    size_t size) {
  
  dst_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.dst)
}
inline std::string* CreateConnectivityReportRequest::_internal_mutable_dst() {
  
  return dst_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CreateConnectivityReportRequest::release_dst() {
  // @@protoc_insertion_point(field_release:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.dst)
  return dst_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreateConnectivityReportRequest::set_allocated_dst(std::string* dst) {
  if (dst != nullptr) {
    
  } else {
    
  }
  dst_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), dst,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.dst)
}
inline std::string* CreateConnectivityReportRequest::unsafe_arena_release_dst() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.dst)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return dst_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CreateConnectivityReportRequest::unsafe_arena_set_allocated_dst(
    std::string* dst) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (dst != nullptr) {
    
  } else {
    
  }
  dst_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      dst, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.dst)
}

// string dst_port = 4[json_name = "dstPort", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CreateConnectivityReportRequest::clear_dst_port() {
  dst_port_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CreateConnectivityReportRequest::dst_port() const {
  // @@protoc_insertion_point(field_get:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.dst_port)
  return _internal_dst_port();
}
inline void CreateConnectivityReportRequest::set_dst_port(const std::string& value) {
  _internal_set_dst_port(value);
  // @@protoc_insertion_point(field_set:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.dst_port)
}
inline std::string* CreateConnectivityReportRequest::mutable_dst_port() {
  // @@protoc_insertion_point(field_mutable:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.dst_port)
  return _internal_mutable_dst_port();
}
inline const std::string& CreateConnectivityReportRequest::_internal_dst_port() const {
  return dst_port_.Get();
}
inline void CreateConnectivityReportRequest::_internal_set_dst_port(const std::string& value) {
  
  dst_port_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CreateConnectivityReportRequest::set_dst_port(std::string&& value) {
  
  dst_port_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.dst_port)
}
inline void CreateConnectivityReportRequest::set_dst_port(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  dst_port_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.dst_port)
}
inline void CreateConnectivityReportRequest::set_dst_port(const char* value,
    size_t size) {
  
  dst_port_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.dst_port)
}
inline std::string* CreateConnectivityReportRequest::_internal_mutable_dst_port() {
  
  return dst_port_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CreateConnectivityReportRequest::release_dst_port() {
  // @@protoc_insertion_point(field_release:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.dst_port)
  return dst_port_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreateConnectivityReportRequest::set_allocated_dst_port(std::string* dst_port) {
  if (dst_port != nullptr) {
    
  } else {
    
  }
  dst_port_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), dst_port,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.dst_port)
}
inline std::string* CreateConnectivityReportRequest::unsafe_arena_release_dst_port() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.dst_port)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return dst_port_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CreateConnectivityReportRequest::unsafe_arena_set_allocated_dst_port(
    std::string* dst_port) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (dst_port != nullptr) {
    
  } else {
    
  }
  dst_port_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      dst_port, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.dst_port)
}

// string protocol = 5[json_name = "protocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CreateConnectivityReportRequest::clear_protocol() {
  protocol_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CreateConnectivityReportRequest::protocol() const {
  // @@protoc_insertion_point(field_get:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.protocol)
  return _internal_protocol();
}
inline void CreateConnectivityReportRequest::set_protocol(const std::string& value) {
  _internal_set_protocol(value);
  // @@protoc_insertion_point(field_set:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.protocol)
}
inline std::string* CreateConnectivityReportRequest::mutable_protocol() {
  // @@protoc_insertion_point(field_mutable:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.protocol)
  return _internal_mutable_protocol();
}
inline const std::string& CreateConnectivityReportRequest::_internal_protocol() const {
  return protocol_.Get();
}
inline void CreateConnectivityReportRequest::_internal_set_protocol(const std::string& value) {
  
  protocol_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CreateConnectivityReportRequest::set_protocol(std::string&& value) {
  
  protocol_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.protocol)
}
inline void CreateConnectivityReportRequest::set_protocol(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  protocol_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.protocol)
}
inline void CreateConnectivityReportRequest::set_protocol(const char* value,
    size_t size) {
  
  protocol_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.protocol)
}
inline std::string* CreateConnectivityReportRequest::_internal_mutable_protocol() {
  
  return protocol_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CreateConnectivityReportRequest::release_protocol() {
  // @@protoc_insertion_point(field_release:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.protocol)
  return protocol_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreateConnectivityReportRequest::set_allocated_protocol(std::string* protocol) {
  if (protocol != nullptr) {
    
  } else {
    
  }
  protocol_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), protocol,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.protocol)
}
inline std::string* CreateConnectivityReportRequest::unsafe_arena_release_protocol() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.protocol)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return protocol_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CreateConnectivityReportRequest::unsafe_arena_set_allocated_protocol(
    std::string* protocol) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (protocol != nullptr) {
    
  } else {
    
  }
  protocol_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      protocol, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.protocol)
}

// .kentik.connectivity_checker.v202410beta1.EntityType src_type = 6[json_name = "srcType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CreateConnectivityReportRequest::clear_src_type() {
  src_type_ = 0;
}
inline ::kentik::connectivity_checker::v202410beta1::EntityType CreateConnectivityReportRequest::_internal_src_type() const {
  return static_cast< ::kentik::connectivity_checker::v202410beta1::EntityType >(src_type_);
}
inline ::kentik::connectivity_checker::v202410beta1::EntityType CreateConnectivityReportRequest::src_type() const {
  // @@protoc_insertion_point(field_get:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.src_type)
  return _internal_src_type();
}
inline void CreateConnectivityReportRequest::_internal_set_src_type(::kentik::connectivity_checker::v202410beta1::EntityType value) {
  
  src_type_ = value;
}
inline void CreateConnectivityReportRequest::set_src_type(::kentik::connectivity_checker::v202410beta1::EntityType value) {
  _internal_set_src_type(value);
  // @@protoc_insertion_point(field_set:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.src_type)
}

// .kentik.connectivity_checker.v202410beta1.EntityType dst_type = 7[json_name = "dstType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CreateConnectivityReportRequest::clear_dst_type() {
  dst_type_ = 0;
}
inline ::kentik::connectivity_checker::v202410beta1::EntityType CreateConnectivityReportRequest::_internal_dst_type() const {
  return static_cast< ::kentik::connectivity_checker::v202410beta1::EntityType >(dst_type_);
}
inline ::kentik::connectivity_checker::v202410beta1::EntityType CreateConnectivityReportRequest::dst_type() const {
  // @@protoc_insertion_point(field_get:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.dst_type)
  return _internal_dst_type();
}
inline void CreateConnectivityReportRequest::_internal_set_dst_type(::kentik::connectivity_checker::v202410beta1::EntityType value) {
  
  dst_type_ = value;
}
inline void CreateConnectivityReportRequest::set_dst_type(::kentik::connectivity_checker::v202410beta1::EntityType value) {
  _internal_set_dst_type(value);
  // @@protoc_insertion_point(field_set:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.dst_type)
}

// .google.protobuf.Timestamp start_time = 8[json_name = "startTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool CreateConnectivityReportRequest::_internal_has_start_time() const {
  return this != internal_default_instance() && start_time_ != nullptr;
}
inline bool CreateConnectivityReportRequest::has_start_time() const {
  return _internal_has_start_time();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& CreateConnectivityReportRequest::_internal_start_time() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = start_time_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& CreateConnectivityReportRequest::start_time() const {
  // @@protoc_insertion_point(field_get:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.start_time)
  return _internal_start_time();
}
inline void CreateConnectivityReportRequest::unsafe_arena_set_allocated_start_time(
    PROTOBUF_NAMESPACE_ID::Timestamp* start_time) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(start_time_);
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.start_time)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CreateConnectivityReportRequest::release_start_time() {
  auto temp = unsafe_arena_release_start_time();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CreateConnectivityReportRequest::unsafe_arena_release_start_time() {
  // @@protoc_insertion_point(field_release:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.start_time)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = start_time_;
  start_time_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CreateConnectivityReportRequest::_internal_mutable_start_time() {
  
  if (start_time_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    start_time_ = p;
  }
  return start_time_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CreateConnectivityReportRequest::mutable_start_time() {
  // @@protoc_insertion_point(field_mutable:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.start_time)
  return _internal_mutable_start_time();
}
inline void CreateConnectivityReportRequest::set_allocated_start_time(PROTOBUF_NAMESPACE_ID::Timestamp* start_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(start_time_);
  }
  if (start_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(start_time)->GetArena();
    if (message_arena != submessage_arena) {
      start_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, start_time, submessage_arena);
    }
    
  } else {
    
  }
  start_time_ = start_time;
  // @@protoc_insertion_point(field_set_allocated:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.start_time)
}

// .google.protobuf.Timestamp end_time = 9[json_name = "endTime", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool CreateConnectivityReportRequest::_internal_has_end_time() const {
  return this != internal_default_instance() && end_time_ != nullptr;
}
inline bool CreateConnectivityReportRequest::has_end_time() const {
  return _internal_has_end_time();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& CreateConnectivityReportRequest::_internal_end_time() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = end_time_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& CreateConnectivityReportRequest::end_time() const {
  // @@protoc_insertion_point(field_get:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.end_time)
  return _internal_end_time();
}
inline void CreateConnectivityReportRequest::unsafe_arena_set_allocated_end_time(
    PROTOBUF_NAMESPACE_ID::Timestamp* end_time) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(end_time_);
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.end_time)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CreateConnectivityReportRequest::release_end_time() {
  auto temp = unsafe_arena_release_end_time();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CreateConnectivityReportRequest::unsafe_arena_release_end_time() {
  // @@protoc_insertion_point(field_release:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.end_time)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = end_time_;
  end_time_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CreateConnectivityReportRequest::_internal_mutable_end_time() {
  
  if (end_time_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    end_time_ = p;
  }
  return end_time_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* CreateConnectivityReportRequest::mutable_end_time() {
  // @@protoc_insertion_point(field_mutable:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.end_time)
  return _internal_mutable_end_time();
}
inline void CreateConnectivityReportRequest::set_allocated_end_time(PROTOBUF_NAMESPACE_ID::Timestamp* end_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(end_time_);
  }
  if (end_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(end_time)->GetArena();
    if (message_arena != submessage_arena) {
      end_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, end_time, submessage_arena);
    }
    
  } else {
    
  }
  end_time_ = end_time;
  // @@protoc_insertion_point(field_set_allocated:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.end_time)
}

// string name = 10[json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CreateConnectivityReportRequest::clear_name() {
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CreateConnectivityReportRequest::name() const {
  // @@protoc_insertion_point(field_get:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.name)
  return _internal_name();
}
inline void CreateConnectivityReportRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.name)
}
inline std::string* CreateConnectivityReportRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.name)
  return _internal_mutable_name();
}
inline const std::string& CreateConnectivityReportRequest::_internal_name() const {
  return name_.Get();
}
inline void CreateConnectivityReportRequest::_internal_set_name(const std::string& value) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CreateConnectivityReportRequest::set_name(std::string&& value) {
  
  name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.name)
}
inline void CreateConnectivityReportRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.name)
}
inline void CreateConnectivityReportRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.name)
}
inline std::string* CreateConnectivityReportRequest::_internal_mutable_name() {
  
  return name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CreateConnectivityReportRequest::release_name() {
  // @@protoc_insertion_point(field_release:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreateConnectivityReportRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.name)
}
inline std::string* CreateConnectivityReportRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CreateConnectivityReportRequest::unsafe_arena_set_allocated_name(
    std::string* name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (name != nullptr) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportRequest.name)
}

// -------------------------------------------------------------------

// CreateConnectivityReportResponse

// bool reachable = 1[json_name = "reachable", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CreateConnectivityReportResponse::clear_reachable() {
  reachable_ = false;
}
inline bool CreateConnectivityReportResponse::_internal_reachable() const {
  return reachable_;
}
inline bool CreateConnectivityReportResponse::reachable() const {
  // @@protoc_insertion_point(field_get:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.reachable)
  return _internal_reachable();
}
inline void CreateConnectivityReportResponse::_internal_set_reachable(bool value) {
  
  reachable_ = value;
}
inline void CreateConnectivityReportResponse::set_reachable(bool value) {
  _internal_set_reachable(value);
  // @@protoc_insertion_point(field_set:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.reachable)
}

// bool return_reachable = 2[json_name = "returnReachable", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CreateConnectivityReportResponse::clear_return_reachable() {
  return_reachable_ = false;
}
inline bool CreateConnectivityReportResponse::_internal_return_reachable() const {
  return return_reachable_;
}
inline bool CreateConnectivityReportResponse::return_reachable() const {
  // @@protoc_insertion_point(field_get:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.return_reachable)
  return _internal_return_reachable();
}
inline void CreateConnectivityReportResponse::_internal_set_return_reachable(bool value) {
  
  return_reachable_ = value;
}
inline void CreateConnectivityReportResponse::set_return_reachable(bool value) {
  _internal_set_return_reachable(value);
  // @@protoc_insertion_point(field_set:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.return_reachable)
}

// string query_status = 3[json_name = "queryStatus", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CreateConnectivityReportResponse::clear_query_status() {
  query_status_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CreateConnectivityReportResponse::query_status() const {
  // @@protoc_insertion_point(field_get:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.query_status)
  return _internal_query_status();
}
inline void CreateConnectivityReportResponse::set_query_status(const std::string& value) {
  _internal_set_query_status(value);
  // @@protoc_insertion_point(field_set:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.query_status)
}
inline std::string* CreateConnectivityReportResponse::mutable_query_status() {
  // @@protoc_insertion_point(field_mutable:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.query_status)
  return _internal_mutable_query_status();
}
inline const std::string& CreateConnectivityReportResponse::_internal_query_status() const {
  return query_status_.Get();
}
inline void CreateConnectivityReportResponse::_internal_set_query_status(const std::string& value) {
  
  query_status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CreateConnectivityReportResponse::set_query_status(std::string&& value) {
  
  query_status_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.query_status)
}
inline void CreateConnectivityReportResponse::set_query_status(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  query_status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.query_status)
}
inline void CreateConnectivityReportResponse::set_query_status(const char* value,
    size_t size) {
  
  query_status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.query_status)
}
inline std::string* CreateConnectivityReportResponse::_internal_mutable_query_status() {
  
  return query_status_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CreateConnectivityReportResponse::release_query_status() {
  // @@protoc_insertion_point(field_release:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.query_status)
  return query_status_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreateConnectivityReportResponse::set_allocated_query_status(std::string* query_status) {
  if (query_status != nullptr) {
    
  } else {
    
  }
  query_status_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), query_status,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.query_status)
}
inline std::string* CreateConnectivityReportResponse::unsafe_arena_release_query_status() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.query_status)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return query_status_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CreateConnectivityReportResponse::unsafe_arena_set_allocated_query_status(
    std::string* query_status) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (query_status != nullptr) {
    
  } else {
    
  }
  query_status_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      query_status, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.query_status)
}

// string report_url = 4[json_name = "reportUrl", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CreateConnectivityReportResponse::clear_report_url() {
  report_url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CreateConnectivityReportResponse::report_url() const {
  // @@protoc_insertion_point(field_get:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.report_url)
  return _internal_report_url();
}
inline void CreateConnectivityReportResponse::set_report_url(const std::string& value) {
  _internal_set_report_url(value);
  // @@protoc_insertion_point(field_set:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.report_url)
}
inline std::string* CreateConnectivityReportResponse::mutable_report_url() {
  // @@protoc_insertion_point(field_mutable:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.report_url)
  return _internal_mutable_report_url();
}
inline const std::string& CreateConnectivityReportResponse::_internal_report_url() const {
  return report_url_.Get();
}
inline void CreateConnectivityReportResponse::_internal_set_report_url(const std::string& value) {
  
  report_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CreateConnectivityReportResponse::set_report_url(std::string&& value) {
  
  report_url_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.report_url)
}
inline void CreateConnectivityReportResponse::set_report_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  report_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.report_url)
}
inline void CreateConnectivityReportResponse::set_report_url(const char* value,
    size_t size) {
  
  report_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.report_url)
}
inline std::string* CreateConnectivityReportResponse::_internal_mutable_report_url() {
  
  return report_url_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CreateConnectivityReportResponse::release_report_url() {
  // @@protoc_insertion_point(field_release:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.report_url)
  return report_url_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreateConnectivityReportResponse::set_allocated_report_url(std::string* report_url) {
  if (report_url != nullptr) {
    
  } else {
    
  }
  report_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), report_url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.report_url)
}
inline std::string* CreateConnectivityReportResponse::unsafe_arena_release_report_url() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.report_url)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return report_url_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CreateConnectivityReportResponse::unsafe_arena_set_allocated_report_url(
    std::string* report_url) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (report_url != nullptr) {
    
  } else {
    
  }
  report_url_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      report_url, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.report_url)
}

// repeated string paths = 5[json_name = "paths", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int CreateConnectivityReportResponse::_internal_paths_size() const {
  return paths_.size();
}
inline int CreateConnectivityReportResponse::paths_size() const {
  return _internal_paths_size();
}
inline void CreateConnectivityReportResponse::clear_paths() {
  paths_.Clear();
}
inline std::string* CreateConnectivityReportResponse::add_paths() {
  // @@protoc_insertion_point(field_add_mutable:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.paths)
  return _internal_add_paths();
}
inline const std::string& CreateConnectivityReportResponse::_internal_paths(int index) const {
  return paths_.Get(index);
}
inline const std::string& CreateConnectivityReportResponse::paths(int index) const {
  // @@protoc_insertion_point(field_get:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.paths)
  return _internal_paths(index);
}
inline std::string* CreateConnectivityReportResponse::mutable_paths(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.paths)
  return paths_.Mutable(index);
}
inline void CreateConnectivityReportResponse::set_paths(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.paths)
  paths_.Mutable(index)->assign(value);
}
inline void CreateConnectivityReportResponse::set_paths(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.paths)
  paths_.Mutable(index)->assign(std::move(value));
}
inline void CreateConnectivityReportResponse::set_paths(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  paths_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.paths)
}
inline void CreateConnectivityReportResponse::set_paths(int index, const char* value, size_t size) {
  paths_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.paths)
}
inline std::string* CreateConnectivityReportResponse::_internal_add_paths() {
  return paths_.Add();
}
inline void CreateConnectivityReportResponse::add_paths(const std::string& value) {
  paths_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.paths)
}
inline void CreateConnectivityReportResponse::add_paths(std::string&& value) {
  paths_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.paths)
}
inline void CreateConnectivityReportResponse::add_paths(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  paths_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.paths)
}
inline void CreateConnectivityReportResponse::add_paths(const char* value, size_t size) {
  paths_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.paths)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CreateConnectivityReportResponse::paths() const {
  // @@protoc_insertion_point(field_list:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.paths)
  return paths_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CreateConnectivityReportResponse::mutable_paths() {
  // @@protoc_insertion_point(field_mutable_list:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.paths)
  return &paths_;
}

// repeated string return_paths = 6[json_name = "returnPaths", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int CreateConnectivityReportResponse::_internal_return_paths_size() const {
  return return_paths_.size();
}
inline int CreateConnectivityReportResponse::return_paths_size() const {
  return _internal_return_paths_size();
}
inline void CreateConnectivityReportResponse::clear_return_paths() {
  return_paths_.Clear();
}
inline std::string* CreateConnectivityReportResponse::add_return_paths() {
  // @@protoc_insertion_point(field_add_mutable:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.return_paths)
  return _internal_add_return_paths();
}
inline const std::string& CreateConnectivityReportResponse::_internal_return_paths(int index) const {
  return return_paths_.Get(index);
}
inline const std::string& CreateConnectivityReportResponse::return_paths(int index) const {
  // @@protoc_insertion_point(field_get:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.return_paths)
  return _internal_return_paths(index);
}
inline std::string* CreateConnectivityReportResponse::mutable_return_paths(int index) {
  // @@protoc_insertion_point(field_mutable:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.return_paths)
  return return_paths_.Mutable(index);
}
inline void CreateConnectivityReportResponse::set_return_paths(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.return_paths)
  return_paths_.Mutable(index)->assign(value);
}
inline void CreateConnectivityReportResponse::set_return_paths(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.return_paths)
  return_paths_.Mutable(index)->assign(std::move(value));
}
inline void CreateConnectivityReportResponse::set_return_paths(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  return_paths_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.return_paths)
}
inline void CreateConnectivityReportResponse::set_return_paths(int index, const char* value, size_t size) {
  return_paths_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.return_paths)
}
inline std::string* CreateConnectivityReportResponse::_internal_add_return_paths() {
  return return_paths_.Add();
}
inline void CreateConnectivityReportResponse::add_return_paths(const std::string& value) {
  return_paths_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.return_paths)
}
inline void CreateConnectivityReportResponse::add_return_paths(std::string&& value) {
  return_paths_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.return_paths)
}
inline void CreateConnectivityReportResponse::add_return_paths(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  return_paths_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.return_paths)
}
inline void CreateConnectivityReportResponse::add_return_paths(const char* value, size_t size) {
  return_paths_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.return_paths)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CreateConnectivityReportResponse::return_paths() const {
  // @@protoc_insertion_point(field_list:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.return_paths)
  return return_paths_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CreateConnectivityReportResponse::mutable_return_paths() {
  // @@protoc_insertion_point(field_mutable_list:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.return_paths)
  return &return_paths_;
}

// string last_metadata_fetch = 7[json_name = "lastMetadataFetch", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void CreateConnectivityReportResponse::clear_last_metadata_fetch() {
  last_metadata_fetch_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CreateConnectivityReportResponse::last_metadata_fetch() const {
  // @@protoc_insertion_point(field_get:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.last_metadata_fetch)
  return _internal_last_metadata_fetch();
}
inline void CreateConnectivityReportResponse::set_last_metadata_fetch(const std::string& value) {
  _internal_set_last_metadata_fetch(value);
  // @@protoc_insertion_point(field_set:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.last_metadata_fetch)
}
inline std::string* CreateConnectivityReportResponse::mutable_last_metadata_fetch() {
  // @@protoc_insertion_point(field_mutable:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.last_metadata_fetch)
  return _internal_mutable_last_metadata_fetch();
}
inline const std::string& CreateConnectivityReportResponse::_internal_last_metadata_fetch() const {
  return last_metadata_fetch_.Get();
}
inline void CreateConnectivityReportResponse::_internal_set_last_metadata_fetch(const std::string& value) {
  
  last_metadata_fetch_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CreateConnectivityReportResponse::set_last_metadata_fetch(std::string&& value) {
  
  last_metadata_fetch_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.last_metadata_fetch)
}
inline void CreateConnectivityReportResponse::set_last_metadata_fetch(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  last_metadata_fetch_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.last_metadata_fetch)
}
inline void CreateConnectivityReportResponse::set_last_metadata_fetch(const char* value,
    size_t size) {
  
  last_metadata_fetch_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.last_metadata_fetch)
}
inline std::string* CreateConnectivityReportResponse::_internal_mutable_last_metadata_fetch() {
  
  return last_metadata_fetch_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CreateConnectivityReportResponse::release_last_metadata_fetch() {
  // @@protoc_insertion_point(field_release:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.last_metadata_fetch)
  return last_metadata_fetch_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreateConnectivityReportResponse::set_allocated_last_metadata_fetch(std::string* last_metadata_fetch) {
  if (last_metadata_fetch != nullptr) {
    
  } else {
    
  }
  last_metadata_fetch_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_metadata_fetch,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.last_metadata_fetch)
}
inline std::string* CreateConnectivityReportResponse::unsafe_arena_release_last_metadata_fetch() {
  // @@protoc_insertion_point(field_unsafe_arena_release:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.last_metadata_fetch)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return last_metadata_fetch_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CreateConnectivityReportResponse::unsafe_arena_set_allocated_last_metadata_fetch(
    std::string* last_metadata_fetch) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (last_metadata_fetch != nullptr) {
    
  } else {
    
  }
  last_metadata_fetch_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      last_metadata_fetch, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.connectivity_checker.v202410beta1.CreateConnectivityReportResponse.last_metadata_fetch)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v202410beta1
}  // namespace connectivity_checker
}  // namespace kentik

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::kentik::connectivity_checker::v202410beta1::CloudProvider> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::kentik::connectivity_checker::v202410beta1::CloudProvider>() {
  return ::kentik::connectivity_checker::v202410beta1::CloudProvider_descriptor();
}
template <> struct is_proto_enum< ::kentik::connectivity_checker::v202410beta1::EntityType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::kentik::connectivity_checker::v202410beta1::EntityType>() {
  return ::kentik::connectivity_checker::v202410beta1::EntityType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_kentik_2fconnectivity_5fchecker_2fv202410beta1_2fconnectivity_5fchecker_2eproto
