// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kentik/core/v202012alpha1/annotations.proto

#include "kentik/core/v202012alpha1/annotations.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace kentik {
namespace core {
namespace v202012alpha1 {
}  // namespace v202012alpha1
}  // namespace core
}  // namespace kentik
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_kentik_2fcore_2fv202012alpha1_2fannotations_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_kentik_2fcore_2fv202012alpha1_2fannotations_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_kentik_2fcore_2fv202012alpha1_2fannotations_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_kentik_2fcore_2fv202012alpha1_2fannotations_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_kentik_2fcore_2fv202012alpha1_2fannotations_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n+kentik/core/v202012alpha1/annotations."
  "proto\022\031kentik.core.v202012alpha1\032 google"
  "/protobuf/descriptor.proto:E\n\rservice_sc"
  "ope\022\037.google.protobuf.ServiceOptions\030\375* "
  "\001(\tR\014serviceScope:I\n\017private_service\022\037.g"
  "oogle.protobuf.ServiceOptions\030\377* \001(\010R\016pr"
  "ivateService:B\n\014method_scope\022\036.google.pr"
  "otobuf.MethodOptions\030\376* \001(\tR\013methodScope"
  ":F\n\016private_method\022\036.google.protobuf.Met"
  "hodOptions\030\200+ \001(\010R\rprivateMethod:H\n\017meth"
  "od_category\022\036.google.protobuf.MethodOpti"
  "ons\030\201+ \001(\tR\016methodCategoryBJZHgithub.com"
  "/kentik/api-schema/gen/go/kentik/core/v2"
  "02012alpha1;kentik_apib\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_kentik_2fcore_2fv202012alpha1_2fannotations_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_kentik_2fcore_2fv202012alpha1_2fannotations_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_kentik_2fcore_2fv202012alpha1_2fannotations_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_kentik_2fcore_2fv202012alpha1_2fannotations_2eproto = {
  false, false, descriptor_table_protodef_kentik_2fcore_2fv202012alpha1_2fannotations_2eproto, "kentik/core/v202012alpha1/annotations.proto", 550,
  &descriptor_table_kentik_2fcore_2fv202012alpha1_2fannotations_2eproto_once, descriptor_table_kentik_2fcore_2fv202012alpha1_2fannotations_2eproto_sccs, descriptor_table_kentik_2fcore_2fv202012alpha1_2fannotations_2eproto_deps, 0, 1,
  schemas, file_default_instances, TableStruct_kentik_2fcore_2fv202012alpha1_2fannotations_2eproto::offsets,
  file_level_metadata_kentik_2fcore_2fv202012alpha1_2fannotations_2eproto, 0, file_level_enum_descriptors_kentik_2fcore_2fv202012alpha1_2fannotations_2eproto, file_level_service_descriptors_kentik_2fcore_2fv202012alpha1_2fannotations_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_kentik_2fcore_2fv202012alpha1_2fannotations_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_kentik_2fcore_2fv202012alpha1_2fannotations_2eproto)), true);
namespace kentik {
namespace core {
namespace v202012alpha1 {
const std::string service_scope_default("");
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::ServiceOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  service_scope(kServiceScopeFieldNumber, service_scope_default);
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::ServiceOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  private_service(kPrivateServiceFieldNumber, false);
const std::string method_scope_default("");
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  method_scope(kMethodScopeFieldNumber, method_scope_default);
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  private_method(kPrivateMethodFieldNumber, false);
const std::string method_category_default("");
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  method_category(kMethodCategoryFieldNumber, method_category_default);

// @@protoc_insertion_point(namespace_scope)
}  // namespace v202012alpha1
}  // namespace core
}  // namespace kentik
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
