// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/plan/v202501alpha1/plan_message.proto
// Protobuf C++ Version: 5.29.3

#ifndef kentik_2fplan_2fv202501alpha1_2fplan_5fmessage_2eproto_2epb_2eh
#define kentik_2fplan_2fv202501alpha1_2fplan_5fmessage_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kentik_2fplan_2fv202501alpha1_2fplan_5fmessage_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2fplan_2fv202501alpha1_2fplan_5fmessage_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kentik_2fplan_2fv202501alpha1_2fplan_5fmessage_2eproto;
namespace kentik {
namespace plan {
namespace v202501alpha1 {
class Plan;
struct PlanDefaultTypeInternal;
extern PlanDefaultTypeInternal _Plan_default_instance_;
class PlanDevice;
struct PlanDeviceDefaultTypeInternal;
extern PlanDeviceDefaultTypeInternal _PlanDevice_default_instance_;
class Plan_MetadataEntry_DoNotUse;
struct Plan_MetadataEntry_DoNotUseDefaultTypeInternal;
extern Plan_MetadataEntry_DoNotUseDefaultTypeInternal _Plan_MetadataEntry_DoNotUse_default_instance_;
}  // namespace v202501alpha1
}  // namespace plan
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kentik {
namespace plan {
namespace v202501alpha1 {
enum DeviceSubtype : int {
  DEVICE_SUBTYPE_UNSPECIFIED = 0,
  DEVICE_SUBTYPE_A10_CGN = 1,
  DEVICE_SUBTYPE_ADVANCED_SFLOW = 2,
  DEVICE_SUBTYPE_AWS_SUBNET = 3,
  DEVICE_SUBTYPE_AZURE_SUBNET = 4,
  DEVICE_SUBTYPE_CISCO_ASA = 5,
  DEVICE_SUBTYPE_CISCO_ASA_SYSLOG = 6,
  DEVICE_SUBTYPE_CISCO_NBAR = 7,
  DEVICE_SUBTYPE_CISCO_NVZFLOW = 8,
  DEVICE_SUBTYPE_CISCO_SDWAN_XE = 9,
  DEVICE_SUBTYPE_CISCO_ZONE_BASED_FIREWALL = 10,
  DEVICE_SUBTYPE_DARKNET = 11,
  DEVICE_SUBTYPE_FORTINET_FORTIGATE = 12,
  DEVICE_SUBTYPE_GCP_CLOUD_RUN = 13,
  DEVICE_SUBTYPE_GCP_SUBNET = 14,
  DEVICE_SUBTYPE_GIGAMON = 15,
  DEVICE_SUBTYPE_IBM_SUBNET = 16,
  DEVICE_SUBTYPE_IOS_XR = 17,
  DEVICE_SUBTYPE_ISTIO = 18,
  DEVICE_SUBTYPE_JUNIPER_DDOS = 19,
  DEVICE_SUBTYPE_KAGENT = 20,
  DEVICE_SUBTYPE_KAPPA = 21,
  DEVICE_SUBTYPE_KMETRICS = 22,
  DEVICE_SUBTYPE_KPROBE = 23,
  DEVICE_SUBTYPE_KROBE_TAP = 24,
  DEVICE_SUBTYPE_KPROXY = 25,
  DEVICE_SUBTYPE_MERAKI = 26,
  DEVICE_SUBTYPE_MPLS = 27,
  DEVICE_SUBTYPE_NOKIALAYER2 = 28,
  DEVICE_SUBTYPE_NPROBE = 29,
  DEVICE_SUBTYPE_OCI_FLOW_LOG = 30,
  DEVICE_SUBTYPE_OCI_SUBNET = 31,
  DEVICE_SUBTYPE_OPEN_NMS = 32,
  DEVICE_SUBTYPE_PALOALTO = 33,
  DEVICE_SUBTYPE_PALOALTO_PRISMASDWAN = 34,
  DEVICE_SUBTYPE_PFE_SYSLOG = 35,
  DEVICE_SUBTYPE_ROUTER = 36,
  DEVICE_SUBTYPE_SFLOW_TUNNEL = 37,
  DEVICE_SUBTYPE_SILVERPEAK = 38,
  DEVICE_SUBTYPE_SYSLOG = 39,
  DEVICE_SUBTYPE_VERSA = 40,
  DEVICE_SUBTYPE_VIPTELA = 41,
  DEVICE_SUBTYPE_VMWARE_VELOCLOUD = 42,
  DEVICE_SUBTYPE_VMWARE_VSPHERE = 43,
  DEVICE_SUBTYPE_VXLAN = 44,
  DEVICE_SUBTYPE_KSYNTH = 45,
  DEVICE_SUBTYPE_SDM_LEADER = 46,
  DEVICE_SUBTYPE_HOST_NPROBE_DNS_WWW = 47,
  DeviceSubtype_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  DeviceSubtype_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool DeviceSubtype_IsValid(int value);
extern const uint32_t DeviceSubtype_internal_data_[];
constexpr DeviceSubtype DeviceSubtype_MIN = static_cast<DeviceSubtype>(0);
constexpr DeviceSubtype DeviceSubtype_MAX = static_cast<DeviceSubtype>(47);
constexpr int DeviceSubtype_ARRAYSIZE = 47 + 1;
const ::google::protobuf::EnumDescriptor*
DeviceSubtype_descriptor();
template <typename T>
const std::string& DeviceSubtype_Name(T value) {
  static_assert(std::is_same<T, DeviceSubtype>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to DeviceSubtype_Name().");
  return DeviceSubtype_Name(static_cast<DeviceSubtype>(value));
}
template <>
inline const std::string& DeviceSubtype_Name(DeviceSubtype value) {
  return ::google::protobuf::internal::NameOfDenseEnum<DeviceSubtype_descriptor,
                                                 0, 47>(
      static_cast<int>(value));
}
inline bool DeviceSubtype_Parse(absl::string_view name, DeviceSubtype* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeviceSubtype>(
      DeviceSubtype_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class PlanDevice final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.plan.v202501alpha1.PlanDevice) */ {
 public:
  inline PlanDevice() : PlanDevice(nullptr) {}
  ~PlanDevice() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlanDevice* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlanDevice));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlanDevice(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlanDevice(const PlanDevice& from) : PlanDevice(nullptr, from) {}
  inline PlanDevice(PlanDevice&& from) noexcept
      : PlanDevice(nullptr, std::move(from)) {}
  inline PlanDevice& operator=(const PlanDevice& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlanDevice& operator=(PlanDevice&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlanDevice& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlanDevice* internal_default_instance() {
    return reinterpret_cast<const PlanDevice*>(
        &_PlanDevice_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PlanDevice& a, PlanDevice& b) { a.Swap(&b); }
  inline void Swap(PlanDevice* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlanDevice* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlanDevice* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlanDevice>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlanDevice& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlanDevice& from) { PlanDevice::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlanDevice* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.plan.v202501alpha1.PlanDevice"; }

 protected:
  explicit PlanDevice(::google::protobuf::Arena* arena);
  PlanDevice(::google::protobuf::Arena* arena, const PlanDevice& from);
  PlanDevice(::google::protobuf::Arena* arena, PlanDevice&& from) noexcept
      : PlanDevice(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kDeviceNameFieldNumber = 2,
    kDeviceSubtypeFieldNumber = 3,
    kDeviceTypeFieldNumber = 4,
  };
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string device_name = 2 [json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_name() ;
  const std::string& device_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_device_name(Arg_&& arg, Args_... args);
  std::string* mutable_device_name();
  PROTOBUF_NODISCARD std::string* release_device_name();
  void set_allocated_device_name(std::string* value);

  private:
  const std::string& _internal_device_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_device_name(
      const std::string& value);
  std::string* _internal_mutable_device_name();

  public:
  // .kentik.plan.v202501alpha1.DeviceSubtype device_subtype = 3 [json_name = "deviceSubtype", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_subtype() ;
  ::kentik::plan::v202501alpha1::DeviceSubtype device_subtype() const;
  void set_device_subtype(::kentik::plan::v202501alpha1::DeviceSubtype value);

  private:
  ::kentik::plan::v202501alpha1::DeviceSubtype _internal_device_subtype() const;
  void _internal_set_device_subtype(::kentik::plan::v202501alpha1::DeviceSubtype value);

  public:
  // .kentik.plan.v202501alpha1.DeviceSubtype device_type = 4 [json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_device_type() ;
  ::kentik::plan::v202501alpha1::DeviceSubtype device_type() const;
  void set_device_type(::kentik::plan::v202501alpha1::DeviceSubtype value);

  private:
  ::kentik::plan::v202501alpha1::DeviceSubtype _internal_device_type() const;
  void _internal_set_device_type(::kentik::plan::v202501alpha1::DeviceSubtype value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.plan.v202501alpha1.PlanDevice)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      58, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlanDevice& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr device_name_;
    int device_subtype_;
    int device_type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fplan_2fv202501alpha1_2fplan_5fmessage_2eproto;
};
// -------------------------------------------------------------------

class Plan_MetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Plan_MetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Plan_MetadataEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Plan_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Plan_MetadataEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Plan_MetadataEntry_DoNotUse*>(
        &_Plan_MetadataEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_kentik_2fplan_2fv202501alpha1_2fplan_5fmessage_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      61, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class Plan final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.plan.v202501alpha1.Plan) */ {
 public:
  inline Plan() : Plan(nullptr) {}
  ~Plan() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Plan* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Plan));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Plan(
      ::google::protobuf::internal::ConstantInitialized);

  inline Plan(const Plan& from) : Plan(nullptr, from) {}
  inline Plan(Plan&& from) noexcept
      : Plan(nullptr, std::move(from)) {}
  inline Plan& operator=(const Plan& from) {
    CopyFrom(from);
    return *this;
  }
  inline Plan& operator=(Plan&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Plan& default_instance() {
    return *internal_default_instance();
  }
  static inline const Plan* internal_default_instance() {
    return reinterpret_cast<const Plan*>(
        &_Plan_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Plan& a, Plan& b) { a.Swap(&b); }
  inline void Swap(Plan* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Plan* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Plan* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Plan>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Plan& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Plan& from) { Plan::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Plan* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.plan.v202501alpha1.Plan"; }

 protected:
  explicit Plan(::google::protobuf::Arena* arena);
  Plan(::google::protobuf::Arena* arena, const Plan& from);
  Plan(::google::protobuf::Arena* arena, Plan&& from) noexcept
      : Plan(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeviceTypesFieldNumber = 14,
    kDevicesFieldNumber = 15,
    kMetadataFieldNumber = 16,
    kIdFieldNumber = 1,
    kCompanyIdFieldNumber = 2,
    kNameFieldNumber = 3,
    kDescriptionFieldNumber = 4,
    kCreatedDateFieldNumber = 11,
    kUpdatedDateFieldNumber = 12,
    kMaxDevicesFieldNumber = 6,
    kActiveFieldNumber = 5,
    kBgpEnabledFieldNumber = 8,
    kMaxFpsFieldNumber = 7,
    kFastRetentionFieldNumber = 9,
    kFullRetentionFieldNumber = 10,
    kMaxBigdataFpsFieldNumber = 13,
  };
  // repeated .kentik.plan.v202501alpha1.DeviceSubtype device_types = 14 [json_name = "deviceTypes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int device_types_size() const;
  private:
  int _internal_device_types_size() const;

  public:
  void clear_device_types() ;
  public:
  ::kentik::plan::v202501alpha1::DeviceSubtype device_types(int index) const;
  void set_device_types(int index, ::kentik::plan::v202501alpha1::DeviceSubtype value);
  void add_device_types(::kentik::plan::v202501alpha1::DeviceSubtype value);
  const ::google::protobuf::RepeatedField<int>& device_types() const;
  ::google::protobuf::RepeatedField<int>* mutable_device_types();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_device_types() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_device_types();

  public:
  // repeated .kentik.plan.v202501alpha1.PlanDevice devices = 15 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int devices_size() const;
  private:
  int _internal_devices_size() const;

  public:
  void clear_devices() ;
  ::kentik::plan::v202501alpha1::PlanDevice* mutable_devices(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::plan::v202501alpha1::PlanDevice>* mutable_devices();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::plan::v202501alpha1::PlanDevice>& _internal_devices() const;
  ::google::protobuf::RepeatedPtrField<::kentik::plan::v202501alpha1::PlanDevice>* _internal_mutable_devices();
  public:
  const ::kentik::plan::v202501alpha1::PlanDevice& devices(int index) const;
  ::kentik::plan::v202501alpha1::PlanDevice* add_devices();
  const ::google::protobuf::RepeatedPtrField<::kentik::plan::v202501alpha1::PlanDevice>& devices() const;
  // map<string, string> metadata = 16 [json_name = "metadata", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& metadata() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_metadata();

  public:
  // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string company_id = 2 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_company_id() ;
  const std::string& company_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_company_id(Arg_&& arg, Args_... args);
  std::string* mutable_company_id();
  PROTOBUF_NODISCARD std::string* release_company_id();
  void set_allocated_company_id(std::string* value);

  private:
  const std::string& _internal_company_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_company_id(
      const std::string& value);
  std::string* _internal_mutable_company_id();

  public:
  // string name = 3 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string description = 4 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // .google.protobuf.Timestamp created_date = 11 [json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_created_date() const;
  void clear_created_date() ;
  const ::google::protobuf::Timestamp& created_date() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_created_date();
  ::google::protobuf::Timestamp* mutable_created_date();
  void set_allocated_created_date(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_created_date(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_created_date();

  private:
  const ::google::protobuf::Timestamp& _internal_created_date() const;
  ::google::protobuf::Timestamp* _internal_mutable_created_date();

  public:
  // .google.protobuf.Timestamp updated_date = 12 [json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  bool has_updated_date() const;
  void clear_updated_date() ;
  const ::google::protobuf::Timestamp& updated_date() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_date();
  ::google::protobuf::Timestamp* mutable_updated_date();
  void set_allocated_updated_date(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_date(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_date();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_date() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_date();

  public:
  // int32 max_devices = 6 [json_name = "maxDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_max_devices() ;
  ::int32_t max_devices() const;
  void set_max_devices(::int32_t value);

  private:
  ::int32_t _internal_max_devices() const;
  void _internal_set_max_devices(::int32_t value);

  public:
  // bool active = 5 [json_name = "active", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_active() ;
  bool active() const;
  void set_active(bool value);

  private:
  bool _internal_active() const;
  void _internal_set_active(bool value);

  public:
  // bool bgp_enabled = 8 [json_name = "bgpEnabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_bgp_enabled() ;
  bool bgp_enabled() const;
  void set_bgp_enabled(bool value);

  private:
  bool _internal_bgp_enabled() const;
  void _internal_set_bgp_enabled(bool value);

  public:
  // int32 max_fps = 7 [json_name = "maxFps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_max_fps() ;
  ::int32_t max_fps() const;
  void set_max_fps(::int32_t value);

  private:
  ::int32_t _internal_max_fps() const;
  void _internal_set_max_fps(::int32_t value);

  public:
  // int32 fast_retention = 9 [json_name = "fastRetention", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_fast_retention() ;
  ::int32_t fast_retention() const;
  void set_fast_retention(::int32_t value);

  private:
  ::int32_t _internal_fast_retention() const;
  void _internal_set_fast_retention(::int32_t value);

  public:
  // int32 full_retention = 10 [json_name = "fullRetention", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_full_retention() ;
  ::int32_t full_retention() const;
  void set_full_retention(::int32_t value);

  private:
  ::int32_t _internal_full_retention() const;
  void _internal_set_full_retention(::int32_t value);

  public:
  // int32 max_bigdata_fps = 13 [json_name = "maxBigdataFps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_max_bigdata_fps() ;
  ::int32_t max_bigdata_fps() const;
  void set_max_bigdata_fps(::int32_t value);

  private:
  ::int32_t _internal_max_bigdata_fps() const;
  void _internal_set_max_bigdata_fps(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.plan.v202501alpha1.Plan)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 16, 4,
      90, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Plan& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<int> device_types_;
    ::google::protobuf::internal::CachedSize _device_types_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField< ::kentik::plan::v202501alpha1::PlanDevice > devices_;
    ::google::protobuf::internal::MapField<Plan_MetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        metadata_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr company_id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::Timestamp* created_date_;
    ::google::protobuf::Timestamp* updated_date_;
    ::int32_t max_devices_;
    bool active_;
    bool bgp_enabled_;
    ::int32_t max_fps_;
    ::int32_t fast_retention_;
    ::int32_t full_retention_;
    ::int32_t max_bigdata_fps_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fplan_2fv202501alpha1_2fplan_5fmessage_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PlanDevice

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PlanDevice::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& PlanDevice::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.plan.v202501alpha1.PlanDevice.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlanDevice::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.plan.v202501alpha1.PlanDevice.id)
}
inline std::string* PlanDevice::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.plan.v202501alpha1.PlanDevice.id)
  return _s;
}
inline const std::string& PlanDevice::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void PlanDevice::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* PlanDevice::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* PlanDevice::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.plan.v202501alpha1.PlanDevice.id)
  return _impl_.id_.Release();
}
inline void PlanDevice::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.plan.v202501alpha1.PlanDevice.id)
}

// string device_name = 2 [json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PlanDevice::clear_device_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.ClearToEmpty();
}
inline const std::string& PlanDevice::device_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.plan.v202501alpha1.PlanDevice.device_name)
  return _internal_device_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlanDevice::set_device_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.plan.v202501alpha1.PlanDevice.device_name)
}
inline std::string* PlanDevice::mutable_device_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_device_name();
  // @@protoc_insertion_point(field_mutable:kentik.plan.v202501alpha1.PlanDevice.device_name)
  return _s;
}
inline const std::string& PlanDevice::_internal_device_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_name_.Get();
}
inline void PlanDevice::_internal_set_device_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.Set(value, GetArena());
}
inline std::string* PlanDevice::_internal_mutable_device_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.device_name_.Mutable( GetArena());
}
inline std::string* PlanDevice::release_device_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.plan.v202501alpha1.PlanDevice.device_name)
  return _impl_.device_name_.Release();
}
inline void PlanDevice::set_allocated_device_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.device_name_.IsDefault()) {
    _impl_.device_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.plan.v202501alpha1.PlanDevice.device_name)
}

// .kentik.plan.v202501alpha1.DeviceSubtype device_subtype = 3 [json_name = "deviceSubtype", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PlanDevice::clear_device_subtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_subtype_ = 0;
}
inline ::kentik::plan::v202501alpha1::DeviceSubtype PlanDevice::device_subtype() const {
  // @@protoc_insertion_point(field_get:kentik.plan.v202501alpha1.PlanDevice.device_subtype)
  return _internal_device_subtype();
}
inline void PlanDevice::set_device_subtype(::kentik::plan::v202501alpha1::DeviceSubtype value) {
  _internal_set_device_subtype(value);
  // @@protoc_insertion_point(field_set:kentik.plan.v202501alpha1.PlanDevice.device_subtype)
}
inline ::kentik::plan::v202501alpha1::DeviceSubtype PlanDevice::_internal_device_subtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::plan::v202501alpha1::DeviceSubtype>(_impl_.device_subtype_);
}
inline void PlanDevice::_internal_set_device_subtype(::kentik::plan::v202501alpha1::DeviceSubtype value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_subtype_ = value;
}

// .kentik.plan.v202501alpha1.DeviceSubtype device_type = 4 [json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void PlanDevice::clear_device_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_ = 0;
}
inline ::kentik::plan::v202501alpha1::DeviceSubtype PlanDevice::device_type() const {
  // @@protoc_insertion_point(field_get:kentik.plan.v202501alpha1.PlanDevice.device_type)
  return _internal_device_type();
}
inline void PlanDevice::set_device_type(::kentik::plan::v202501alpha1::DeviceSubtype value) {
  _internal_set_device_type(value);
  // @@protoc_insertion_point(field_set:kentik.plan.v202501alpha1.PlanDevice.device_type)
}
inline ::kentik::plan::v202501alpha1::DeviceSubtype PlanDevice::_internal_device_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::kentik::plan::v202501alpha1::DeviceSubtype>(_impl_.device_type_);
}
inline void PlanDevice::_internal_set_device_type(::kentik::plan::v202501alpha1::DeviceSubtype value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_type_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Plan

// string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Plan::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Plan::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.plan.v202501alpha1.Plan.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Plan::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.plan.v202501alpha1.Plan.id)
}
inline std::string* Plan::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:kentik.plan.v202501alpha1.Plan.id)
  return _s;
}
inline const std::string& Plan::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Plan::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Plan::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Plan::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.plan.v202501alpha1.Plan.id)
  return _impl_.id_.Release();
}
inline void Plan::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.plan.v202501alpha1.Plan.id)
}

// string company_id = 2 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Plan::clear_company_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.ClearToEmpty();
}
inline const std::string& Plan::company_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.plan.v202501alpha1.Plan.company_id)
  return _internal_company_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Plan::set_company_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.plan.v202501alpha1.Plan.company_id)
}
inline std::string* Plan::mutable_company_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_company_id();
  // @@protoc_insertion_point(field_mutable:kentik.plan.v202501alpha1.Plan.company_id)
  return _s;
}
inline const std::string& Plan::_internal_company_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.company_id_.Get();
}
inline void Plan::_internal_set_company_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.Set(value, GetArena());
}
inline std::string* Plan::_internal_mutable_company_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.company_id_.Mutable( GetArena());
}
inline std::string* Plan::release_company_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.plan.v202501alpha1.Plan.company_id)
  return _impl_.company_id_.Release();
}
inline void Plan::set_allocated_company_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.company_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.company_id_.IsDefault()) {
    _impl_.company_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.plan.v202501alpha1.Plan.company_id)
}

// string name = 3 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Plan::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Plan::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.plan.v202501alpha1.Plan.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Plan::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.plan.v202501alpha1.Plan.name)
}
inline std::string* Plan::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:kentik.plan.v202501alpha1.Plan.name)
  return _s;
}
inline const std::string& Plan::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Plan::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Plan::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Plan::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.plan.v202501alpha1.Plan.name)
  return _impl_.name_.Release();
}
inline void Plan::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.plan.v202501alpha1.Plan.name)
}

// string description = 4 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Plan::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& Plan::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.plan.v202501alpha1.Plan.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Plan::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.plan.v202501alpha1.Plan.description)
}
inline std::string* Plan::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:kentik.plan.v202501alpha1.Plan.description)
  return _s;
}
inline const std::string& Plan::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void Plan::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* Plan::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* Plan::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.plan.v202501alpha1.Plan.description)
  return _impl_.description_.Release();
}
inline void Plan::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.plan.v202501alpha1.Plan.description)
}

// bool active = 5 [json_name = "active", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Plan::clear_active() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_ = false;
}
inline bool Plan::active() const {
  // @@protoc_insertion_point(field_get:kentik.plan.v202501alpha1.Plan.active)
  return _internal_active();
}
inline void Plan::set_active(bool value) {
  _internal_set_active(value);
  // @@protoc_insertion_point(field_set:kentik.plan.v202501alpha1.Plan.active)
}
inline bool Plan::_internal_active() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.active_;
}
inline void Plan::_internal_set_active(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_ = value;
}

// int32 max_devices = 6 [json_name = "maxDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Plan::clear_max_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_devices_ = 0;
}
inline ::int32_t Plan::max_devices() const {
  // @@protoc_insertion_point(field_get:kentik.plan.v202501alpha1.Plan.max_devices)
  return _internal_max_devices();
}
inline void Plan::set_max_devices(::int32_t value) {
  _internal_set_max_devices(value);
  // @@protoc_insertion_point(field_set:kentik.plan.v202501alpha1.Plan.max_devices)
}
inline ::int32_t Plan::_internal_max_devices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_devices_;
}
inline void Plan::_internal_set_max_devices(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_devices_ = value;
}

// int32 max_fps = 7 [json_name = "maxFps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Plan::clear_max_fps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_fps_ = 0;
}
inline ::int32_t Plan::max_fps() const {
  // @@protoc_insertion_point(field_get:kentik.plan.v202501alpha1.Plan.max_fps)
  return _internal_max_fps();
}
inline void Plan::set_max_fps(::int32_t value) {
  _internal_set_max_fps(value);
  // @@protoc_insertion_point(field_set:kentik.plan.v202501alpha1.Plan.max_fps)
}
inline ::int32_t Plan::_internal_max_fps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_fps_;
}
inline void Plan::_internal_set_max_fps(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_fps_ = value;
}

// bool bgp_enabled = 8 [json_name = "bgpEnabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Plan::clear_bgp_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_enabled_ = false;
}
inline bool Plan::bgp_enabled() const {
  // @@protoc_insertion_point(field_get:kentik.plan.v202501alpha1.Plan.bgp_enabled)
  return _internal_bgp_enabled();
}
inline void Plan::set_bgp_enabled(bool value) {
  _internal_set_bgp_enabled(value);
  // @@protoc_insertion_point(field_set:kentik.plan.v202501alpha1.Plan.bgp_enabled)
}
inline bool Plan::_internal_bgp_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bgp_enabled_;
}
inline void Plan::_internal_set_bgp_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bgp_enabled_ = value;
}

// int32 fast_retention = 9 [json_name = "fastRetention", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Plan::clear_fast_retention() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fast_retention_ = 0;
}
inline ::int32_t Plan::fast_retention() const {
  // @@protoc_insertion_point(field_get:kentik.plan.v202501alpha1.Plan.fast_retention)
  return _internal_fast_retention();
}
inline void Plan::set_fast_retention(::int32_t value) {
  _internal_set_fast_retention(value);
  // @@protoc_insertion_point(field_set:kentik.plan.v202501alpha1.Plan.fast_retention)
}
inline ::int32_t Plan::_internal_fast_retention() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fast_retention_;
}
inline void Plan::_internal_set_fast_retention(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fast_retention_ = value;
}

// int32 full_retention = 10 [json_name = "fullRetention", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Plan::clear_full_retention() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.full_retention_ = 0;
}
inline ::int32_t Plan::full_retention() const {
  // @@protoc_insertion_point(field_get:kentik.plan.v202501alpha1.Plan.full_retention)
  return _internal_full_retention();
}
inline void Plan::set_full_retention(::int32_t value) {
  _internal_set_full_retention(value);
  // @@protoc_insertion_point(field_set:kentik.plan.v202501alpha1.Plan.full_retention)
}
inline ::int32_t Plan::_internal_full_retention() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.full_retention_;
}
inline void Plan::_internal_set_full_retention(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.full_retention_ = value;
}

// .google.protobuf.Timestamp created_date = 11 [json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Plan::has_created_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Plan::_internal_created_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.created_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Plan::created_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.plan.v202501alpha1.Plan.created_date)
  return _internal_created_date();
}
inline void Plan::unsafe_arena_set_allocated_created_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_date_);
  }
  _impl_.created_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.plan.v202501alpha1.Plan.created_date)
}
inline ::google::protobuf::Timestamp* Plan::release_created_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.created_date_;
  _impl_.created_date_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Plan::unsafe_arena_release_created_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.plan.v202501alpha1.Plan.created_date)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.created_date_;
  _impl_.created_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Plan::_internal_mutable_created_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_date_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.created_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.created_date_;
}
inline ::google::protobuf::Timestamp* Plan::mutable_created_date() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_created_date();
  // @@protoc_insertion_point(field_mutable:kentik.plan.v202501alpha1.Plan.created_date)
  return _msg;
}
inline void Plan::set_allocated_created_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.created_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.plan.v202501alpha1.Plan.created_date)
}

// .google.protobuf.Timestamp updated_date = 12 [json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline bool Plan::has_updated_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Plan::_internal_updated_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.updated_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Plan::updated_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.plan.v202501alpha1.Plan.updated_date)
  return _internal_updated_date();
}
inline void Plan::unsafe_arena_set_allocated_updated_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_date_);
  }
  _impl_.updated_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:kentik.plan.v202501alpha1.Plan.updated_date)
}
inline ::google::protobuf::Timestamp* Plan::release_updated_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.updated_date_;
  _impl_.updated_date_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Plan::unsafe_arena_release_updated_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.plan.v202501alpha1.Plan.updated_date)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_date_;
  _impl_.updated_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Plan::_internal_mutable_updated_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updated_date_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.updated_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_date_;
}
inline ::google::protobuf::Timestamp* Plan::mutable_updated_date() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_date();
  // @@protoc_insertion_point(field_mutable:kentik.plan.v202501alpha1.Plan.updated_date)
  return _msg;
}
inline void Plan::set_allocated_updated_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.updated_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:kentik.plan.v202501alpha1.Plan.updated_date)
}

// int32 max_bigdata_fps = 13 [json_name = "maxBigdataFps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void Plan::clear_max_bigdata_fps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_bigdata_fps_ = 0;
}
inline ::int32_t Plan::max_bigdata_fps() const {
  // @@protoc_insertion_point(field_get:kentik.plan.v202501alpha1.Plan.max_bigdata_fps)
  return _internal_max_bigdata_fps();
}
inline void Plan::set_max_bigdata_fps(::int32_t value) {
  _internal_set_max_bigdata_fps(value);
  // @@protoc_insertion_point(field_set:kentik.plan.v202501alpha1.Plan.max_bigdata_fps)
}
inline ::int32_t Plan::_internal_max_bigdata_fps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_bigdata_fps_;
}
inline void Plan::_internal_set_max_bigdata_fps(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_bigdata_fps_ = value;
}

// repeated .kentik.plan.v202501alpha1.DeviceSubtype device_types = 14 [json_name = "deviceTypes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Plan::_internal_device_types_size() const {
  return _internal_device_types().size();
}
inline int Plan::device_types_size() const {
  return _internal_device_types_size();
}
inline void Plan::clear_device_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.device_types_.Clear();
}
inline ::kentik::plan::v202501alpha1::DeviceSubtype Plan::device_types(int index) const {
  // @@protoc_insertion_point(field_get:kentik.plan.v202501alpha1.Plan.device_types)
  return static_cast<::kentik::plan::v202501alpha1::DeviceSubtype>(_internal_device_types().Get(index));
}
inline void Plan::set_device_types(int index, ::kentik::plan::v202501alpha1::DeviceSubtype value) {
  _internal_mutable_device_types()->Set(index, value);
  // @@protoc_insertion_point(field_set:kentik.plan.v202501alpha1.Plan.device_types)
}
inline void Plan::add_device_types(::kentik::plan::v202501alpha1::DeviceSubtype value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_device_types()->Add(value);
  // @@protoc_insertion_point(field_add:kentik.plan.v202501alpha1.Plan.device_types)
}
inline const ::google::protobuf::RepeatedField<int>& Plan::device_types() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.plan.v202501alpha1.Plan.device_types)
  return _internal_device_types();
}
inline ::google::protobuf::RepeatedField<int>* Plan::mutable_device_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.plan.v202501alpha1.Plan.device_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_device_types();
}
inline const ::google::protobuf::RepeatedField<int>& Plan::_internal_device_types()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.device_types_;
}
inline ::google::protobuf::RepeatedField<int>* Plan::_internal_mutable_device_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.device_types_;
}

// repeated .kentik.plan.v202501alpha1.PlanDevice devices = 15 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Plan::_internal_devices_size() const {
  return _internal_devices().size();
}
inline int Plan::devices_size() const {
  return _internal_devices_size();
}
inline void Plan::clear_devices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.devices_.Clear();
}
inline ::kentik::plan::v202501alpha1::PlanDevice* Plan::mutable_devices(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.plan.v202501alpha1.Plan.devices)
  return _internal_mutable_devices()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::plan::v202501alpha1::PlanDevice>* Plan::mutable_devices()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.plan.v202501alpha1.Plan.devices)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_devices();
}
inline const ::kentik::plan::v202501alpha1::PlanDevice& Plan::devices(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.plan.v202501alpha1.Plan.devices)
  return _internal_devices().Get(index);
}
inline ::kentik::plan::v202501alpha1::PlanDevice* Plan::add_devices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::plan::v202501alpha1::PlanDevice* _add = _internal_mutable_devices()->Add();
  // @@protoc_insertion_point(field_add:kentik.plan.v202501alpha1.Plan.devices)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::plan::v202501alpha1::PlanDevice>& Plan::devices() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.plan.v202501alpha1.Plan.devices)
  return _internal_devices();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::plan::v202501alpha1::PlanDevice>&
Plan::_internal_devices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.devices_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::plan::v202501alpha1::PlanDevice>*
Plan::_internal_mutable_devices() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.devices_;
}

// map<string, string> metadata = 16 [json_name = "metadata", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline int Plan::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int Plan::metadata_size() const {
  return _internal_metadata_size();
}
inline void Plan::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Plan::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Plan::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:kentik.plan.v202501alpha1.Plan.metadata)
  return _internal_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* Plan::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Plan::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:kentik.plan.v202501alpha1.Plan.metadata)
  return _internal_mutable_metadata();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v202501alpha1
}  // namespace plan
}  // namespace kentik


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::kentik::plan::v202501alpha1::DeviceSubtype> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::plan::v202501alpha1::DeviceSubtype>() {
  return ::kentik::plan::v202501alpha1::DeviceSubtype_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kentik_2fplan_2fv202501alpha1_2fplan_5fmessage_2eproto_2epb_2eh
