// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/plan/v202501alpha1/plan.proto
// Protobuf C++ Version: 5.29.3

#ifndef kentik_2fplan_2fv202501alpha1_2fplan_2eproto_2epb_2eh
#define kentik_2fplan_2fv202501alpha1_2fplan_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "kentik/core/v202303/annotations.pb.h"
#include "kentik/plan/v202501alpha1/plan_message.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kentik_2fplan_2fv202501alpha1_2fplan_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2fplan_2fv202501alpha1_2fplan_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kentik_2fplan_2fv202501alpha1_2fplan_2eproto;
namespace kentik {
namespace plan {
namespace v202501alpha1 {
class ListPlansRequest;
struct ListPlansRequestDefaultTypeInternal;
extern ListPlansRequestDefaultTypeInternal _ListPlansRequest_default_instance_;
class ListPlansResponse;
struct ListPlansResponseDefaultTypeInternal;
extern ListPlansResponseDefaultTypeInternal _ListPlansResponse_default_instance_;
}  // namespace v202501alpha1
}  // namespace plan
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kentik {
namespace plan {
namespace v202501alpha1 {

// ===================================================================


// -------------------------------------------------------------------

class ListPlansRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:kentik.plan.v202501alpha1.ListPlansRequest) */ {
 public:
  inline ListPlansRequest() : ListPlansRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListPlansRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListPlansRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListPlansRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListPlansRequest(const ListPlansRequest& from) : ListPlansRequest(nullptr, from) {}
  inline ListPlansRequest(ListPlansRequest&& from) noexcept
      : ListPlansRequest(nullptr, std::move(from)) {}
  inline ListPlansRequest& operator=(const ListPlansRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListPlansRequest& operator=(ListPlansRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListPlansRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListPlansRequest* internal_default_instance() {
    return reinterpret_cast<const ListPlansRequest*>(
        &_ListPlansRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ListPlansRequest& a, ListPlansRequest& b) { a.Swap(&b); }
  inline void Swap(ListPlansRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListPlansRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListPlansRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ListPlansRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ListPlansRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ListPlansRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.plan.v202501alpha1.ListPlansRequest"; }

 protected:
  explicit ListPlansRequest(::google::protobuf::Arena* arena);
  ListPlansRequest(::google::protobuf::Arena* arena, const ListPlansRequest& from);
  ListPlansRequest(::google::protobuf::Arena* arena, ListPlansRequest&& from) noexcept
      : ListPlansRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:kentik.plan.v202501alpha1.ListPlansRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListPlansRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_kentik_2fplan_2fv202501alpha1_2fplan_2eproto;
};
// -------------------------------------------------------------------

class ListPlansResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.plan.v202501alpha1.ListPlansResponse) */ {
 public:
  inline ListPlansResponse() : ListPlansResponse(nullptr) {}
  ~ListPlansResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListPlansResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListPlansResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListPlansResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListPlansResponse(const ListPlansResponse& from) : ListPlansResponse(nullptr, from) {}
  inline ListPlansResponse(ListPlansResponse&& from) noexcept
      : ListPlansResponse(nullptr, std::move(from)) {}
  inline ListPlansResponse& operator=(const ListPlansResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListPlansResponse& operator=(ListPlansResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListPlansResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListPlansResponse* internal_default_instance() {
    return reinterpret_cast<const ListPlansResponse*>(
        &_ListPlansResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ListPlansResponse& a, ListPlansResponse& b) { a.Swap(&b); }
  inline void Swap(ListPlansResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListPlansResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListPlansResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListPlansResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListPlansResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListPlansResponse& from) { ListPlansResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListPlansResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.plan.v202501alpha1.ListPlansResponse"; }

 protected:
  explicit ListPlansResponse(::google::protobuf::Arena* arena);
  ListPlansResponse(::google::protobuf::Arena* arena, const ListPlansResponse& from);
  ListPlansResponse(::google::protobuf::Arena* arena, ListPlansResponse&& from) noexcept
      : ListPlansResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlansFieldNumber = 1,
  };
  // repeated .kentik.plan.v202501alpha1.Plan plans = 1 [json_name = "plans"];
  int plans_size() const;
  private:
  int _internal_plans_size() const;

  public:
  void clear_plans() ;
  ::kentik::plan::v202501alpha1::Plan* mutable_plans(int index);
  ::google::protobuf::RepeatedPtrField<::kentik::plan::v202501alpha1::Plan>* mutable_plans();

  private:
  const ::google::protobuf::RepeatedPtrField<::kentik::plan::v202501alpha1::Plan>& _internal_plans() const;
  ::google::protobuf::RepeatedPtrField<::kentik::plan::v202501alpha1::Plan>* _internal_mutable_plans();
  public:
  const ::kentik::plan::v202501alpha1::Plan& plans(int index) const;
  ::kentik::plan::v202501alpha1::Plan* add_plans();
  const ::google::protobuf::RepeatedPtrField<::kentik::plan::v202501alpha1::Plan>& plans() const;
  // @@protoc_insertion_point(class_scope:kentik.plan.v202501alpha1.ListPlansResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListPlansResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::kentik::plan::v202501alpha1::Plan > plans_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fplan_2fv202501alpha1_2fplan_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ListPlansRequest

// -------------------------------------------------------------------

// ListPlansResponse

// repeated .kentik.plan.v202501alpha1.Plan plans = 1 [json_name = "plans"];
inline int ListPlansResponse::_internal_plans_size() const {
  return _internal_plans().size();
}
inline int ListPlansResponse::plans_size() const {
  return _internal_plans_size();
}
inline ::kentik::plan::v202501alpha1::Plan* ListPlansResponse::mutable_plans(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:kentik.plan.v202501alpha1.ListPlansResponse.plans)
  return _internal_mutable_plans()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::kentik::plan::v202501alpha1::Plan>* ListPlansResponse::mutable_plans()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:kentik.plan.v202501alpha1.ListPlansResponse.plans)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_plans();
}
inline const ::kentik::plan::v202501alpha1::Plan& ListPlansResponse::plans(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.plan.v202501alpha1.ListPlansResponse.plans)
  return _internal_plans().Get(index);
}
inline ::kentik::plan::v202501alpha1::Plan* ListPlansResponse::add_plans() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::kentik::plan::v202501alpha1::Plan* _add = _internal_mutable_plans()->Add();
  // @@protoc_insertion_point(field_add:kentik.plan.v202501alpha1.ListPlansResponse.plans)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::plan::v202501alpha1::Plan>& ListPlansResponse::plans() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:kentik.plan.v202501alpha1.ListPlansResponse.plans)
  return _internal_plans();
}
inline const ::google::protobuf::RepeatedPtrField<::kentik::plan::v202501alpha1::Plan>&
ListPlansResponse::_internal_plans() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.plans_;
}
inline ::google::protobuf::RepeatedPtrField<::kentik::plan::v202501alpha1::Plan>*
ListPlansResponse::_internal_mutable_plans() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.plans_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v202501alpha1
}  // namespace plan
}  // namespace kentik


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kentik_2fplan_2fv202501alpha1_2fplan_2eproto_2epb_2eh
