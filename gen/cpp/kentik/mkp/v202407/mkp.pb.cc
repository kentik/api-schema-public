// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/mkp/v202407/mkp.proto
// Protobuf C++ Version: 5.29.3

#include "kentik/mkp/v202407/mkp.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace kentik {
namespace mkp {
namespace v202407 {

inline constexpr TenantLink::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pivot_template_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pivot_user_group_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TenantLink::TenantLink(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TenantLinkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TenantLinkDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TenantLinkDefaultTypeInternal() {}
  union {
    TenantLink _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TenantLinkDefaultTypeInternal _TenantLink_default_instance_;

inline constexpr NotificationChannel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NotificationChannel::NotificationChannel(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NotificationChannelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotificationChannelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotificationChannelDefaultTypeInternal() {}
  union {
    NotificationChannel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotificationChannelDefaultTypeInternal _NotificationChannel_default_instance_;

inline constexpr Mitigation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        company_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pairing_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        threshold_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mitigation_apply_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mitigation_clear_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_method_overridable_{false},
        is_platform_overridable_{false},
        mitigation_apply_timer_{0u},
        mitigation_clear_timer_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Mitigation::Mitigation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MitigationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MitigationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MitigationDefaultTypeInternal() {}
  union {
    Mitigation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MitigationDefaultTypeInternal _Mitigation_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ListTenantRequest::ListTenantRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ListTenantRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListTenantRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListTenantRequestDefaultTypeInternal() {}
  union {
    ListTenantRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListTenantRequestDefaultTypeInternal _ListTenantRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ListPackageRequest::ListPackageRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ListPackageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListPackageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListPackageRequestDefaultTypeInternal() {}
  union {
    ListPackageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListPackageRequestDefaultTypeInternal _ListPackageRequest_default_instance_;

inline constexpr GetTenantRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetTenantRequest::GetTenantRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTenantRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTenantRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTenantRequestDefaultTypeInternal() {}
  union {
    GetTenantRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTenantRequestDefaultTypeInternal _GetTenantRequest_default_instance_;

inline constexpr GetPackageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetPackageRequest::GetPackageRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetPackageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPackageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPackageRequestDefaultTypeInternal() {}
  union {
    GetPackageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPackageRequestDefaultTypeInternal _GetPackageRequest_default_instance_;

inline constexpr FilterField::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : filter_field_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        operator__(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        filter_value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FilterField::FilterField(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FilterFieldDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FilterFieldDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FilterFieldDefaultTypeInternal() {}
  union {
    FilterField _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FilterFieldDefaultTypeInternal _FilterField_default_instance_;

inline constexpr Devices::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_types_{},
        device_labels_{},
        _device_labels_cached_byte_size_{0},
        device_sites_{},
        _device_sites_cached_byte_size_{0},
        device_name_{},
        all_devices_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Devices::Devices(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DevicesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DevicesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DevicesDefaultTypeInternal() {}
  union {
    Devices _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DevicesDefaultTypeInternal _Devices_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR DeleteTenantResponse::DeleteTenantResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct DeleteTenantResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteTenantResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteTenantResponseDefaultTypeInternal() {}
  union {
    DeleteTenantResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteTenantResponseDefaultTypeInternal _DeleteTenantResponse_default_instance_;

inline constexpr DeleteTenantRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteTenantRequest::DeleteTenantRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeleteTenantRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteTenantRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteTenantRequestDefaultTypeInternal() {}
  union {
    DeleteTenantRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteTenantRequestDefaultTypeInternal _DeleteTenantRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR DeletePackageResponse::DeletePackageResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct DeletePackageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeletePackageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeletePackageResponseDefaultTypeInternal() {}
  union {
    DeletePackageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeletePackageResponseDefaultTypeInternal _DeletePackageResponse_default_instance_;

inline constexpr DeletePackageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeletePackageRequest::DeletePackageRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeletePackageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeletePackageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeletePackageRequestDefaultTypeInternal() {}
  union {
    DeletePackageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeletePackageRequestDefaultTypeInternal _DeletePackageRequest_default_instance_;

inline constexpr CustomDimension::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : dimension_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        populator_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CustomDimension::CustomDimension(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CustomDimensionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomDimensionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomDimensionDefaultTypeInternal() {}
  union {
    CustomDimension _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomDimensionDefaultTypeInternal _CustomDimension_default_instance_;

inline constexpr Condition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metric_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        operator__(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_select_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Condition::Condition(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConditionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConditionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConditionDefaultTypeInternal() {}
  union {
    Condition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConditionDefaultTypeInternal _Condition_default_instance_;

inline constexpr Asset_Report::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Asset_Report::Asset_Report(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Asset_ReportDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Asset_ReportDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Asset_ReportDefaultTypeInternal() {}
  union {
    Asset_Report _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Asset_ReportDefaultTypeInternal _Asset_Report_default_instance_;

inline constexpr Activate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : operator__(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        times_{0u},
        time_window_seconds_{0u},
        grace_period_seconds_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Activate::Activate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ActivateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActivateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActivateDefaultTypeInternal() {}
  union {
    Activate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActivateDefaultTypeInternal _Activate_default_instance_;

inline constexpr Threshold::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        conditions_{},
        mitigations_{},
        notification_channels_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        severity_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        activate_{nullptr},
        threshold_ack_required_{false},
        enable_tenant_notifications_{false},
        receive_landlord_notifications_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Threshold::Threshold(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ThresholdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ThresholdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ThresholdDefaultTypeInternal() {}
  union {
    Threshold _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ThresholdDefaultTypeInternal _Threshold_default_instance_;

inline constexpr Filter::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : saved_filters_{},
        filters_{},
        filter_groups_{},
        metric_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        connector_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        auto_added_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        named_{false},
        not__{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Filter::Filter(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FilterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FilterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FilterDefaultTypeInternal() {}
  union {
    Filter _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FilterDefaultTypeInternal _Filter_default_instance_;

inline constexpr Asset::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        reports_{},
        default_report_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Asset::Asset(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AssetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssetDefaultTypeInternal() {}
  union {
    Asset _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssetDefaultTypeInternal _Asset_default_instance_;

inline constexpr Alert::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : thresholds_{},
        secondary_metrics_{},
        policy_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        primary_metric_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subpolicy_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        saved_{false},
        is_template_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Alert::Alert(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AlertDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AlertDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AlertDefaultTypeInternal() {}
  union {
    Alert _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AlertDefaultTypeInternal _Alert_default_instance_;

inline constexpr Package::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        alerts_{},
        tenants_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        company_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        icon_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        color_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        assets_{nullptr},
        is_default_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Package::Package(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PackageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PackageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PackageDefaultTypeInternal() {}
  union {
    Package _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PackageDefaultTypeInternal _Package_default_instance_;

inline constexpr UpdatePackageResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        package_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdatePackageResponse::UpdatePackageResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdatePackageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdatePackageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdatePackageResponseDefaultTypeInternal() {}
  union {
    UpdatePackageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdatePackageResponseDefaultTypeInternal _UpdatePackageResponse_default_instance_;

inline constexpr UpdatePackageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        package_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdatePackageRequest::UpdatePackageRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdatePackageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdatePackageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdatePackageRequestDefaultTypeInternal() {}
  union {
    UpdatePackageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdatePackageRequestDefaultTypeInternal _UpdatePackageRequest_default_instance_;

inline constexpr Tenant::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        alerts_{},
        custom_dimensions_{},
        packages_{},
        users_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        company_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        asn_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cidr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        interface_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        snmp_alias_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        template_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        devices_{nullptr},
        filters_{nullptr},
        assets_{nullptr},
        enabled_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Tenant::Tenant(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TenantDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TenantDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TenantDefaultTypeInternal() {}
  union {
    Tenant _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TenantDefaultTypeInternal _Tenant_default_instance_;

inline constexpr ListPackageResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : packages_{},
        invalid_count_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListPackageResponse::ListPackageResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListPackageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListPackageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListPackageResponseDefaultTypeInternal() {}
  union {
    ListPackageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListPackageResponseDefaultTypeInternal _ListPackageResponse_default_instance_;

inline constexpr GetPackageResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        package_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetPackageResponse::GetPackageResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetPackageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPackageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPackageResponseDefaultTypeInternal() {}
  union {
    GetPackageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPackageResponseDefaultTypeInternal _GetPackageResponse_default_instance_;

inline constexpr CreatePackageResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        package_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreatePackageResponse::CreatePackageResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreatePackageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreatePackageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreatePackageResponseDefaultTypeInternal() {}
  union {
    CreatePackageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreatePackageResponseDefaultTypeInternal _CreatePackageResponse_default_instance_;

inline constexpr CreatePackageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        package_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreatePackageRequest::CreatePackageRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreatePackageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreatePackageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreatePackageRequestDefaultTypeInternal() {}
  union {
    CreatePackageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreatePackageRequestDefaultTypeInternal _CreatePackageRequest_default_instance_;

inline constexpr UpdateTenantResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tenant_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateTenantResponse::UpdateTenantResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateTenantResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateTenantResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateTenantResponseDefaultTypeInternal() {}
  union {
    UpdateTenantResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateTenantResponseDefaultTypeInternal _UpdateTenantResponse_default_instance_;

inline constexpr UpdateTenantRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tenant_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateTenantRequest::UpdateTenantRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateTenantRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateTenantRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateTenantRequestDefaultTypeInternal() {}
  union {
    UpdateTenantRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateTenantRequestDefaultTypeInternal _UpdateTenantRequest_default_instance_;

inline constexpr ListTenantResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tenants_{},
        invalid_count_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListTenantResponse::ListTenantResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListTenantResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListTenantResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListTenantResponseDefaultTypeInternal() {}
  union {
    ListTenantResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListTenantResponseDefaultTypeInternal _ListTenantResponse_default_instance_;

inline constexpr GetTenantResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tenant_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetTenantResponse::GetTenantResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTenantResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTenantResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTenantResponseDefaultTypeInternal() {}
  union {
    GetTenantResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTenantResponseDefaultTypeInternal _GetTenantResponse_default_instance_;

inline constexpr CreateTenantResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tenant_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateTenantResponse::CreateTenantResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateTenantResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateTenantResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateTenantResponseDefaultTypeInternal() {}
  union {
    CreateTenantResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateTenantResponseDefaultTypeInternal _CreateTenantResponse_default_instance_;

inline constexpr CreateTenantRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tenant_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateTenantRequest::CreateTenantRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateTenantRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateTenantRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateTenantRequestDefaultTypeInternal() {}
  union {
    CreateTenantRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateTenantRequestDefaultTypeInternal _CreateTenantRequest_default_instance_;
}  // namespace v202407
}  // namespace mkp
}  // namespace kentik
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_kentik_2fmkp_2fv202407_2fmkp_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_kentik_2fmkp_2fv202407_2fmkp_2eproto = nullptr;
const ::uint32_t
    TableStruct_kentik_2fmkp_2fv202407_2fmkp_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Alert, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Alert, _impl_.saved_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Alert, _impl_.policy_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Alert, _impl_.thresholds_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Alert, _impl_.primary_metric_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Alert, _impl_.secondary_metrics_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Alert, _impl_.is_template_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Alert, _impl_.subpolicy_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Asset_Report, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Asset_Report, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Asset_Report, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Asset, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Asset, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Asset, _impl_.reports_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Asset, _impl_.default_report_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Threshold, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Threshold, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Threshold, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Threshold, _impl_.activate_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Threshold, _impl_.severity_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Threshold, _impl_.conditions_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Threshold, _impl_.mitigations_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Threshold, _impl_.notification_channels_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Threshold, _impl_.threshold_ack_required_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Threshold, _impl_.enable_tenant_notifications_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Threshold, _impl_.receive_landlord_notifications_),
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Activate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Activate, _impl_.times_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Activate, _impl_.operator__),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Activate, _impl_.time_window_seconds_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Activate, _impl_.grace_period_seconds_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Condition, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Condition, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Condition, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Condition, _impl_.metric_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Condition, _impl_.operator__),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Condition, _impl_.value_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Condition, _impl_.value_select_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Mitigation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Mitigation, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Mitigation, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Mitigation, _impl_.company_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Mitigation, _impl_.pairing_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Mitigation, _impl_.threshold_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Mitigation, _impl_.is_method_overridable_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Mitigation, _impl_.mitigation_apply_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Mitigation, _impl_.mitigation_clear_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Mitigation, _impl_.mitigation_apply_timer_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Mitigation, _impl_.mitigation_clear_timer_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Mitigation, _impl_.is_platform_overridable_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::NotificationChannel, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::NotificationChannel, _impl_.id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::TenantLink, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::TenantLink, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::TenantLink, _impl_.pivot_template_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::TenantLink, _impl_.pivot_user_group_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Package, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Package, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Package, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Package, _impl_.company_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Package, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Package, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Package, _impl_.icon_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Package, _impl_.color_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Package, _impl_.alerts_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Package, _impl_.assets_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Package, _impl_.is_default_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Package, _impl_.tenants_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::CustomDimension, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::CustomDimension, _impl_.dimension_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::CustomDimension, _impl_.populator_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Devices, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Devices, _impl_.all_devices_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Devices, _impl_.device_types_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Devices, _impl_.device_labels_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Devices, _impl_.device_sites_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Devices, _impl_.device_name_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::FilterField, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::FilterField, _impl_.filter_field_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::FilterField, _impl_.operator__),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::FilterField, _impl_.filter_value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Filter, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Filter, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Filter, _impl_.named_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Filter, _impl_.connector_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Filter, _impl_.not__),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Filter, _impl_.auto_added_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Filter, _impl_.saved_filters_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Filter, _impl_.filters_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Filter, _impl_.filter_groups_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Filter, _impl_.metric_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Tenant, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Tenant, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Tenant, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Tenant, _impl_.company_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Tenant, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Tenant, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Tenant, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Tenant, _impl_.enabled_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Tenant, _impl_.alerts_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Tenant, _impl_.assets_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Tenant, _impl_.asn_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Tenant, _impl_.cidr_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Tenant, _impl_.custom_dimensions_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Tenant, _impl_.devices_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Tenant, _impl_.filters_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Tenant, _impl_.interface_name_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Tenant, _impl_.snmp_alias_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Tenant, _impl_.packages_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Tenant, _impl_.users_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::Tenant, _impl_.template_id_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        2,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::ListPackageRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::ListPackageResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::ListPackageResponse, _impl_.packages_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::ListPackageResponse, _impl_.invalid_count_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::GetPackageRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::GetPackageRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::GetPackageResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::GetPackageResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::GetPackageResponse, _impl_.package_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::CreatePackageRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::CreatePackageRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::CreatePackageRequest, _impl_.package_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::CreatePackageResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::CreatePackageResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::CreatePackageResponse, _impl_.package_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::UpdatePackageRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::UpdatePackageRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::UpdatePackageRequest, _impl_.package_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::UpdatePackageResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::UpdatePackageResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::UpdatePackageResponse, _impl_.package_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::DeletePackageRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::DeletePackageRequest, _impl_.id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::DeletePackageResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::ListTenantRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::ListTenantResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::ListTenantResponse, _impl_.tenants_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::ListTenantResponse, _impl_.invalid_count_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::GetTenantRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::GetTenantRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::GetTenantResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::GetTenantResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::GetTenantResponse, _impl_.tenant_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::CreateTenantRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::CreateTenantRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::CreateTenantRequest, _impl_.tenant_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::CreateTenantResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::CreateTenantResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::CreateTenantResponse, _impl_.tenant_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::UpdateTenantRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::UpdateTenantRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::UpdateTenantRequest, _impl_.tenant_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::UpdateTenantResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::UpdateTenantResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::UpdateTenantResponse, _impl_.tenant_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::DeleteTenantRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::DeleteTenantRequest, _impl_.id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::mkp::v202407::DeleteTenantResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::kentik::mkp::v202407::Alert)},
        {15, -1, -1, sizeof(::kentik::mkp::v202407::Asset_Report)},
        {25, 35, -1, sizeof(::kentik::mkp::v202407::Asset)},
        {37, 54, -1, sizeof(::kentik::mkp::v202407::Threshold)},
        {63, -1, -1, sizeof(::kentik::mkp::v202407::Activate)},
        {75, -1, -1, sizeof(::kentik::mkp::v202407::Condition)},
        {89, -1, -1, sizeof(::kentik::mkp::v202407::Mitigation)},
        {108, -1, -1, sizeof(::kentik::mkp::v202407::NotificationChannel)},
        {117, -1, -1, sizeof(::kentik::mkp::v202407::TenantLink)},
        {128, 146, -1, sizeof(::kentik::mkp::v202407::Package)},
        {156, -1, -1, sizeof(::kentik::mkp::v202407::CustomDimension)},
        {166, -1, -1, sizeof(::kentik::mkp::v202407::Devices)},
        {179, -1, -1, sizeof(::kentik::mkp::v202407::FilterField)},
        {190, -1, -1, sizeof(::kentik::mkp::v202407::Filter)},
        {207, 233, -1, sizeof(::kentik::mkp::v202407::Tenant)},
        {251, -1, -1, sizeof(::kentik::mkp::v202407::ListPackageRequest)},
        {259, -1, -1, sizeof(::kentik::mkp::v202407::ListPackageResponse)},
        {269, -1, -1, sizeof(::kentik::mkp::v202407::GetPackageRequest)},
        {278, 287, -1, sizeof(::kentik::mkp::v202407::GetPackageResponse)},
        {288, 297, -1, sizeof(::kentik::mkp::v202407::CreatePackageRequest)},
        {298, 307, -1, sizeof(::kentik::mkp::v202407::CreatePackageResponse)},
        {308, 317, -1, sizeof(::kentik::mkp::v202407::UpdatePackageRequest)},
        {318, 327, -1, sizeof(::kentik::mkp::v202407::UpdatePackageResponse)},
        {328, -1, -1, sizeof(::kentik::mkp::v202407::DeletePackageRequest)},
        {337, -1, -1, sizeof(::kentik::mkp::v202407::DeletePackageResponse)},
        {345, -1, -1, sizeof(::kentik::mkp::v202407::ListTenantRequest)},
        {353, -1, -1, sizeof(::kentik::mkp::v202407::ListTenantResponse)},
        {363, -1, -1, sizeof(::kentik::mkp::v202407::GetTenantRequest)},
        {372, 381, -1, sizeof(::kentik::mkp::v202407::GetTenantResponse)},
        {382, 391, -1, sizeof(::kentik::mkp::v202407::CreateTenantRequest)},
        {392, 401, -1, sizeof(::kentik::mkp::v202407::CreateTenantResponse)},
        {402, 411, -1, sizeof(::kentik::mkp::v202407::UpdateTenantRequest)},
        {412, 421, -1, sizeof(::kentik::mkp::v202407::UpdateTenantResponse)},
        {422, -1, -1, sizeof(::kentik::mkp::v202407::DeleteTenantRequest)},
        {431, -1, -1, sizeof(::kentik::mkp::v202407::DeleteTenantResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::kentik::mkp::v202407::_Alert_default_instance_._instance,
    &::kentik::mkp::v202407::_Asset_Report_default_instance_._instance,
    &::kentik::mkp::v202407::_Asset_default_instance_._instance,
    &::kentik::mkp::v202407::_Threshold_default_instance_._instance,
    &::kentik::mkp::v202407::_Activate_default_instance_._instance,
    &::kentik::mkp::v202407::_Condition_default_instance_._instance,
    &::kentik::mkp::v202407::_Mitigation_default_instance_._instance,
    &::kentik::mkp::v202407::_NotificationChannel_default_instance_._instance,
    &::kentik::mkp::v202407::_TenantLink_default_instance_._instance,
    &::kentik::mkp::v202407::_Package_default_instance_._instance,
    &::kentik::mkp::v202407::_CustomDimension_default_instance_._instance,
    &::kentik::mkp::v202407::_Devices_default_instance_._instance,
    &::kentik::mkp::v202407::_FilterField_default_instance_._instance,
    &::kentik::mkp::v202407::_Filter_default_instance_._instance,
    &::kentik::mkp::v202407::_Tenant_default_instance_._instance,
    &::kentik::mkp::v202407::_ListPackageRequest_default_instance_._instance,
    &::kentik::mkp::v202407::_ListPackageResponse_default_instance_._instance,
    &::kentik::mkp::v202407::_GetPackageRequest_default_instance_._instance,
    &::kentik::mkp::v202407::_GetPackageResponse_default_instance_._instance,
    &::kentik::mkp::v202407::_CreatePackageRequest_default_instance_._instance,
    &::kentik::mkp::v202407::_CreatePackageResponse_default_instance_._instance,
    &::kentik::mkp::v202407::_UpdatePackageRequest_default_instance_._instance,
    &::kentik::mkp::v202407::_UpdatePackageResponse_default_instance_._instance,
    &::kentik::mkp::v202407::_DeletePackageRequest_default_instance_._instance,
    &::kentik::mkp::v202407::_DeletePackageResponse_default_instance_._instance,
    &::kentik::mkp::v202407::_ListTenantRequest_default_instance_._instance,
    &::kentik::mkp::v202407::_ListTenantResponse_default_instance_._instance,
    &::kentik::mkp::v202407::_GetTenantRequest_default_instance_._instance,
    &::kentik::mkp::v202407::_GetTenantResponse_default_instance_._instance,
    &::kentik::mkp::v202407::_CreateTenantRequest_default_instance_._instance,
    &::kentik::mkp::v202407::_CreateTenantResponse_default_instance_._instance,
    &::kentik::mkp::v202407::_UpdateTenantRequest_default_instance_._instance,
    &::kentik::mkp::v202407::_UpdateTenantResponse_default_instance_._instance,
    &::kentik::mkp::v202407::_DeleteTenantRequest_default_instance_._instance,
    &::kentik::mkp::v202407::_DeleteTenantResponse_default_instance_._instance,
};
const char descriptor_table_protodef_kentik_2fmkp_2fv202407_2fmkp_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\034kentik/mkp/v202407/mkp.proto\022\022kentik.m"
    "kp.v202407\032\034google/api/annotations.proto"
    "\032\027google/api/client.proto\032\037google/api/fi"
    "eld_behavior.proto\032.protoc-gen-openapiv2"
    "/options/annotations.proto\032%kentik/core/"
    "v202303/annotations.proto\032\036kentik/user/v"
    "202211/user.proto\"\221\002\n\005Alert\022\024\n\005saved\030\001 \001"
    "(\010R\005saved\022\033\n\tpolicy_id\030\002 \001(\tR\010policyId\022="
    "\n\nthresholds\030\003 \003(\0132\035.kentik.mkp.v202407."
    "ThresholdR\nthresholds\022%\n\016primary_metric\030"
    "\004 \001(\tR\rprimaryMetric\022+\n\021secondary_metric"
    "s\030\005 \003(\tR\020secondaryMetrics\022\037\n\013is_template"
    "\030\006 \001(\010R\nisTemplate\022!\n\014subpolicy_id\030\007 \001(\t"
    "R\013subpolicyId\"\272\001\n\005Asset\022:\n\007reports\030\001 \003(\013"
    "2 .kentik.mkp.v202407.Asset.ReportR\007repo"
    "rts\022G\n\016default_report\030\002 \001(\0132 .kentik.mkp"
    ".v202407.Asset.ReportR\rdefaultReport\032,\n\006"
    "Report\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004type\030\002 \001(\tR\004ty"
    "pe\"\214\004\n\tThreshold\022\016\n\002id\030\001 \001(\tR\002id\0228\n\010acti"
    "vate\030\002 \001(\0132\034.kentik.mkp.v202407.Activate"
    "R\010activate\022\032\n\010severity\030\003 \001(\tR\010severity\022="
    "\n\nconditions\030\004 \003(\0132\035.kentik.mkp.v202407."
    "ConditionR\nconditions\022@\n\013mitigations\030\005 \003"
    "(\0132\036.kentik.mkp.v202407.MitigationR\013miti"
    "gations\022\\\n\025notification_channels\030\006 \003(\0132\'"
    ".kentik.mkp.v202407.NotificationChannelR"
    "\024notificationChannels\0224\n\026threshold_ack_r"
    "equired\030\007 \001(\010R\024thresholdAckRequired\022>\n\033e"
    "nable_tenant_notifications\030\010 \001(\010R\031enable"
    "TenantNotifications\022D\n\036receive_landlord_"
    "notifications\030\t \001(\010R\034receiveLandlordNoti"
    "fications\"\236\001\n\010Activate\022\024\n\005times\030\001 \001(\rR\005t"
    "imes\022\032\n\010operator\030\002 \001(\tR\010operator\022.\n\023time"
    "_window_seconds\030\003 \001(\rR\021timeWindowSeconds"
    "\0220\n\024grace_period_seconds\030\004 \001(\rR\022gracePer"
    "iodSeconds\"\253\001\n\tCondition\022\022\n\004type\030\001 \001(\tR\004"
    "type\022\024\n\005value\030\002 \001(\tR\005value\022\026\n\006metric\030\003 \001"
    "(\tR\006metric\022\032\n\010operator\030\004 \001(\tR\010operator\022\035"
    "\n\nvalue_type\030\005 \001(\tR\tvalueType\022!\n\014value_s"
    "elect\030\006 \001(\tR\013valueSelect\"\325\003\n\nMitigation\022"
    "\016\n\002id\030\r \001(\tR\002id\022\026\n\006status\030\001 \001(\tR\006status\022"
    "\035\n\ncompany_id\030\002 \001(\tR\tcompanyId\022\035\n\npairin"
    "g_id\030\003 \001(\tR\tpairingId\022!\n\014threshold_id\030\004 "
    "\001(\tR\013thresholdId\0222\n\025is_method_overridabl"
    "e\030\005 \001(\010R\023isMethodOverridable\0222\n\025mitigati"
    "on_apply_type\030\006 \001(\tR\023mitigationApplyType"
    "\0222\n\025mitigation_clear_type\030\007 \001(\tR\023mitigat"
    "ionClearType\0224\n\026mitigation_apply_timer\030\010"
    " \001(\rR\024mitigationApplyTimer\0224\n\026mitigation"
    "_clear_timer\030\t \001(\rR\024mitigationClearTimer"
    "\0226\n\027is_platform_overridable\030\n \001(\010R\025isPla"
    "tformOverridable\"%\n\023NotificationChannel\022"
    "\016\n\002id\030\001 \001(\tR\002id\"w\n\nTenantLink\022\016\n\002id\030\001 \001("
    "\tR\002id\022*\n\021pivot_template_id\030\002 \001(\tR\017pivotT"
    "emplateId\022-\n\023pivot_user_group_id\030\003 \001(\tR\020"
    "pivotUserGroupId\"\332\005\n\007Package\022H\n\002id\030\001 \001(\t"
    "B8\222A220Unique system assigned identifier"
    " of the package\340A\003R\002id\022K\n\ncompany_id\030\002 \001"
    "(\tB,\222A&2$Company id of the associated pa"
    "ckage\340A\003R\tcompanyId\0224\n\004name\030\003 \001(\tB \222A\0322\030"
    "Name of package template\340A\003R\004name\022I\n\013des"
    "cription\030\004 \001(\tB\'\222A!2\037Description of pack"
    "age template\340A\003R\013description\022+\n\004icon\030\005 \001"
    "(\tB\027\222A\0212\017Icon to display\340A\003R\004icon\022+\n\005col"
    "or\030\006 \001(\tB\025\222A\0172\rColor of Icon\340A\003R\005color\022X"
    "\n\006alerts\030\007 \003(\0132\031.kentik.mkp.v202407.Aler"
    "tB%\222A\0372\035Alert thresholds and policies\340A\003"
    "R\006alerts\022l\n\006assets\030\010 \001(\0132\031.kentik.mkp.v2"
    "02407.AssetB9\222A321Views and Dashboards a"
    "ssociated with the package.\340A\003R\006assets\022:"
    "\n\nis_default\030\t \001(\010B\033\222A\0252\023Is default temp"
    "late\340A\003R\tisDefault\022Y\n\007tenants\030\n \003(\0132\036.ke"
    "ntik.mkp.v202407.TenantLinkB\037\222A\0312\027Tenant"
    " link information\340A\003R\007tenants\"M\n\017CustomD"
    "imension\022\034\n\tdimension\030\001 \001(\tR\tdimension\022\034"
    "\n\tpopulator\030\002 \001(\tR\tpopulator\"\266\001\n\007Devices"
    "\022\037\n\013all_devices\030\001 \001(\010R\nallDevices\022!\n\014dev"
    "ice_types\030\002 \003(\tR\013deviceTypes\022#\n\rdevice_l"
    "abels\030\003 \003(\rR\014deviceLabels\022!\n\014device_site"
    "s\030\004 \003(\rR\013deviceSites\022\037\n\013device_name\030\005 \003("
    "\tR\ndeviceName\"o\n\013FilterField\022!\n\014filter_f"
    "ield\030\001 \001(\tR\013filterField\022\032\n\010operator\030\002 \001("
    "\tR\010operator\022!\n\014filter_value\030\003 \001(\tR\013filte"
    "rValue\"\272\002\n\006Filter\022\022\n\004name\030\001 \001(\tR\004name\022\024\n"
    "\005named\030\002 \001(\010R\005named\022\034\n\tconnector\030\003 \001(\tR\t"
    "connector\022\020\n\003not\030\004 \001(\010R\003not\022\035\n\nauto_adde"
    "d\030\005 \001(\tR\tautoAdded\022#\n\rsaved_filters\030\006 \003("
    "\tR\014savedFilters\0229\n\007filters\030\007 \003(\0132\037.kenti"
    "k.mkp.v202407.FilterFieldR\007filters\022\?\n\rfi"
    "lter_groups\030\010 \003(\0132\032.kentik.mkp.v202407.F"
    "ilterR\014filterGroups\022\026\n\006metric\030\t \003(\tR\006met"
    "ric\"\311\n\n\006Tenant\022G\n\002id\030\001 \001(\tB7\222A12/Unique "
    "system assigned identifier of the tenant"
    "\340A\003R\002id\022K\n\ncompany_id\030\002 \001(\tB,\222A&2$Compan"
    "y id of the associated package\340A\003R\tcompa"
    "nyId\022*\n\004name\030\003 \001(\tB\026\222A\0202\016Name of tenant\340"
    "A\003R\004name\022\?\n\013description\030\004 \001(\tB\035\222A\0272\025Desc"
    "ription of tenant\340A\003R\013description\022%\n\004typ"
    "e\030\005 \001(\tB\021\222A\0132\tSubtenant\340A\003R\004type\022;\n\007enab"
    "led\030\006 \001(\010B!\222A\0332\031Is tenant actively enabl"
    "e\340A\003R\007enabled\022X\n\006alerts\030\007 \003(\0132\031.kentik.m"
    "kp.v202407.AlertB%\222A\0372\035Alert thresholds "
    "and policies\340A\003R\006alerts\022j\n\006assets\030\017 \001(\0132"
    "\031.kentik.mkp.v202407.AssetB7\222A12/Views a"
    "nd Dashboards associated with the tenant"
    "\340A\003R\006assets\022*\n\003asn\030\010 \001(\tB\030\222A\0222\020ASN data "
    "source.\340A\003R\003asn\022-\n\004cidr\030\t \001(\tB\031\222A\0232\021CIDR"
    " data source.\340A\003R\004cidr\022v\n\021custom_dimensi"
    "ons\030\n \003(\0132#.kentik.mkp.v202407.CustomDim"
    "ensionB$\222A\0362\034Custom dimension data sourc"
    "e\340A\003R\020customDimensions\022R\n\007devices\030\013 \001(\0132"
    "\033.kentik.mkp.v202407.DevicesB\033\222A\0252\023Devic"
    "e data source.\340A\003R\007devices\022R\n\007filters\030\014 "
    "\001(\0132\032.kentik.mkp.v202407.FilterB\034\222A\0262\024Da"
    "ta source filters.\340A\003R\007filters\022E\n\016interf"
    "ace_name\030\r \001(\tB\036\222A\0302\026Interface data sour"
    "ce.\340A\003R\rinterfaceName\0228\n\nsnmp_alias\030\016 \001("
    "\tB\031\222A\0232\021SNMP data source.\340A\003R\tsnmpAlias\022"
    "e\n\010packages\030\020 \003(\0132\033.kentik.mkp.v202407.P"
    "ackageB,\222A&2$Packages associated with th"
    "e tenant.\340A\003R\010packages\022Z\n\005users\030\021 \003(\0132\031."
    "kentik.user.v202211.UserB)\222A#2!Users ass"
    "ociated with the tenant.\340A\003R\005users\022S\n\013te"
    "mplate_id\030\022 \001(\tB2\222A,2*Package template I"
    "D to assign with tenant.\340A\003R\ntemplateId\""
    "\024\n\022ListPackageRequest\"s\n\023ListPackageResp"
    "onse\0227\n\010packages\030\001 \003(\0132\033.kentik.mkp.v202"
    "407.PackageR\010packages\022#\n\rinvalid_count\030\002"
    " \001(\rR\014invalidCount\"#\n\021GetPackageRequest\022"
    "\016\n\002id\030\001 \001(\tR\002id\"K\n\022GetPackageResponse\0225\n"
    "\007package\030\001 \001(\0132\033.kentik.mkp.v202407.Pack"
    "ageR\007package\"M\n\024CreatePackageRequest\0225\n\007"
    "package\030\001 \001(\0132\033.kentik.mkp.v202407.Packa"
    "geR\007package\"N\n\025CreatePackageResponse\0225\n\007"
    "package\030\001 \001(\0132\033.kentik.mkp.v202407.Packa"
    "geR\007package\"M\n\024UpdatePackageRequest\0225\n\007p"
    "ackage\030\001 \001(\0132\033.kentik.mkp.v202407.Packag"
    "eR\007package\"N\n\025UpdatePackageResponse\0225\n\007p"
    "ackage\030\001 \001(\0132\033.kentik.mkp.v202407.Packag"
    "eR\007package\"&\n\024DeletePackageRequest\022\016\n\002id"
    "\030\001 \001(\tR\002id\"\027\n\025DeletePackageResponse\"\023\n\021L"
    "istTenantRequest\"o\n\022ListTenantResponse\0224"
    "\n\007tenants\030\001 \003(\0132\032.kentik.mkp.v202407.Ten"
    "antR\007tenants\022#\n\rinvalid_count\030\002 \001(\rR\014inv"
    "alidCount\"\"\n\020GetTenantRequest\022\016\n\002id\030\001 \001("
    "\tR\002id\"G\n\021GetTenantResponse\0222\n\006tenant\030\001 \001"
    "(\0132\032.kentik.mkp.v202407.TenantR\006tenant\"I"
    "\n\023CreateTenantRequest\0222\n\006tenant\030\001 \001(\0132\032."
    "kentik.mkp.v202407.TenantR\006tenant\"J\n\024Cre"
    "ateTenantResponse\0222\n\006tenant\030\001 \001(\0132\032.kent"
    "ik.mkp.v202407.TenantR\006tenant\"I\n\023UpdateT"
    "enantRequest\0222\n\006tenant\030\001 \001(\0132\032.kentik.mk"
    "p.v202407.TenantR\006tenant\"J\n\024UpdateTenant"
    "Response\0222\n\006tenant\030\001 \001(\0132\032.kentik.mkp.v2"
    "02407.TenantR\006tenant\"%\n\023DeleteTenantRequ"
    "est\022\016\n\002id\030\001 \001(\tR\002id\"\026\n\024DeleteTenantRespo"
    "nse2\367\t\n\016PackageService\022\324\001\n\013ListPackage\022&"
    ".kentik.mkp.v202407.ListPackageRequest\032\'"
    ".kentik.mkp.v202407.ListPackageResponse\""
    "t\222AB\022\022List MKP packages.\032\037Returns a list"
    " of MKP packages.*\013PackageList\362\327\002\016admin."
    "mkp:read\202\323\344\223\002\027\022\025/mkp/v202407/packages\022\372\001"
    "\n\nGetPackage\022%.kentik.mkp.v202407.GetPac"
    "kageRequest\032&.kentik.mkp.v202407.GetPack"
    "ageResponse\"\234\001\222Ae\022!Get information aboou"
    "t a package.\0324Returns information about "
    "package specified with ID.*\nPackageGet\362\327"
    "\002\016admin.mkp:read\202\323\344\223\002\034\022\032/mkp/v202407/pac"
    "kages/{id}\022\377\001\n\rCreatePackage\022(.kentik.mk"
    "p.v202407.CreatePackageRequest\032).kentik."
    "mkp.v202407.CreatePackageResponse\"\230\001\222Ab\022"
    "\032Create a package template.\0325Create pack"
    "age from request. returns created packag"
    "e.*\rPackageCreate\362\327\002\017admin.mkp:write\202\323\344\223"
    "\002\032\"\025/mkp/v202407/packages:\001*\022\372\001\n\rUpdateP"
    "ackage\022(.kentik.mkp.v202407.UpdatePackag"
    "eRequest\032).kentik.mkp.v202407.UpdatePack"
    "ageResponse\"\223\001\222AP\022\021Update a package.\032,Up"
    "date package attributes specified with i"
    "d.*\rPackageUpdate\362\327\002\017admin.mkp:write\202\323\344\223"
    "\002\'\032\"/mkp/v202407/packages/{package.id}:\001"
    "*\022\351\001\n\rDeletePackage\022(.kentik.mkp.v202407"
    ".DeletePackageRequest\032).kentik.mkp.v2024"
    "07.DeletePackageResponse\"\202\001\222AJ\022\021Delete a"
    " package.\032&Deletes the package specified"
    " with id.*\rPackageDelete\362\327\002\017admin.mkp:wr"
    "ite\202\323\344\223\002\034*\032/mkp/v202407/packages/{id}\032&\312"
    "A\022mkp.api.kentik.com\352\327\002\tadmin.mkp\220\330\002\0032\310\t"
    "\n\rTenantService\022\315\001\n\nListTenant\022%.kentik."
    "mkp.v202407.ListTenantRequest\032&.kentik.m"
    "kp.v202407.ListTenantResponse\"p\222A\?\022\021List"
    " MKP tenants.\032\036Returns a list of MKP ten"
    "ants.*\nTenantList\362\327\002\016admin.mkp:read\202\323\344\223\002"
    "\026\022\024/mkp/v202407/tenants\022\364\001\n\tGetTenant\022$."
    "kentik.mkp.v202407.GetTenantRequest\032%.ke"
    "ntik.mkp.v202407.GetTenantResponse\"\231\001\222Ac"
    "\022 Get information aboout a tenant.\0324Retu"
    "rns information about package specified "
    "with ID.*\tTenantGet\362\327\002\016admin.mkp:read\202\323\344"
    "\223\002\033\022\031/mkp/v202407/tenants/{id}\022\356\001\n\014Creat"
    "eTenant\022\'.kentik.mkp.v202407.CreateTenan"
    "tRequest\032(.kentik.mkp.v202407.CreateTena"
    "ntResponse\"\212\001\222AU\022\020Create a tenant.\0323Crea"
    "te tenant from request. returns created "
    "tenant.*\014TenantCreate\362\327\002\017admin.mkp:write"
    "\202\323\344\223\002\031\"\024/mkp/v202407/tenants:\001*\022\362\001\n\014Upda"
    "teTenant\022\'.kentik.mkp.v202407.UpdateTena"
    "ntRequest\032(.kentik.mkp.v202407.UpdateTen"
    "antResponse\"\216\001\222AM\022\020Update a tenant.\032+Upd"
    "ate tenant attributes specified with id."
    "*\014TenantUpdate\362\327\002\017admin.mkp:write\202\323\344\223\002%\032"
    " /mkp/v202407/tenants/{tenant.id}:\001*\022\341\001\n"
    "\014DeleteTenant\022\'.kentik.mkp.v202407.Delet"
    "eTenantRequest\032(.kentik.mkp.v202407.Dele"
    "teTenantResponse\"~\222AG\022\020Delete a tenant.\032"
    "%Deletes the tenant specified with id.*\014"
    "TenantDelete\362\327\002\017admin.mkp:write\202\323\344\223\002\033*\031/"
    "mkp/v202407/tenants/{id}\032&\312A\022mkp.api.ken"
    "tik.com\352\327\002\tadmin.mkp\220\330\002\003B\241\023ZAgithub.com/"
    "kentik/api-schema-public/gen/go/kentik/m"
    "kp/v202407;mkp\222A\332\022\022\233\021\n\007MKP API\022\277\020# Overv"
    "iew\nMy Kentik Portal API enables program"
    "matic access to tenants and package temp"
    "lates.\n| Endpoint | Purpose |\n|---------"
    "--|---------|\n| TenantService  | CRUD op"
    "erations for MKP tenants. |\n| PackageSer"
    "vice | CRUD operations for MKP templates"
    ". |\n\nBoth REST endpoint and gRPC RPCs ar"
    "e provided.\n\n\n # Tenant Attributes and S"
    "ettings\n| Attribute | Access | Purpose |"
    "\n|-----------|--------|---------|\n| id |"
    " RO | System-generated unique identifier"
    " of the tenant |\n| company_id | RO | Sys"
    "tem-generated unique identifier of the c"
    "ompany |\n| name | RW | User specified na"
    "me for the tenant |\n| description | RW |"
    " User specified description for the tena"
    "nt |\n| type | RO | subtenant |\n| enabled"
    " | RW | User specified tenant active sta"
    "tus |\n| cdate | RO | Creation timestamp "
    "|\n| edate | RO | Last-modification times"
    "tamp |\n| alerts | RO | Alert policy conf"
    "igurations |\n| assets | RW | dashboard, "
    "views, and templates associate with tena"
    "nt |\n| asn | RW | ASN data source |\n| ci"
    "dr | RW | CIDR data source |\n| custom_di"
    "mensions | RW | Custom dimension data so"
    "urce |\n| devices | RW | Devices data sou"
    "rce |\n| filters | RW | Data source filte"
    "rs |\n| interface_name | RW | Interface s"
    "ource filters |\n| snmp_alias | RW | SNMP"
    " source filters |\n| packages | RO | Pack"
    "age templates use by the tenant |\n| user"
    "s | RO | Users assign to the tenant |\n| "
    "template_id | WO | Update tenant\'s packa"
    "ges setting with package/template id |\n\n"
    "\n # Package Attributes and Settings\n| At"
    "tribute | Access | Purpose |\n|----------"
    "-|--------|---------|\n| id | RO | System"
    "-generated unique identifier of the pack"
    "age |\n| company_id | RO | System-generat"
    "ed unique identifier of the company |\n| "
    "name | RW | User specified name for the "
    "package template |\n| description | RW | "
    "User specified description for the packa"
    "ge template |\n| icon | RO | User specifi"
    "ed icon |\n| color | RW | User specified "
    "color of icon |\n| alerts | RO | Alert po"
    "licy configurations |\n| assets | RW | da"
    "shboard, views, and templates associate "
    "with tenant |\n| is_default | RW | Defaul"
    "t package template to include for new te"
    "nant |\n| tenants | RO | Tenants using th"
    "is package template |\n\n\n\"E\n\026Kentik API E"
    "ngineering\022+https://github.com/kentik/ap"
    "i-schema-public2\007v202407*\001\0022\020application"
    "/json:\020application/jsonZD\n\036\n\005email\022\025\010\002\032\017"
    "X-CH-Auth-Email \002\n\"\n\005token\022\031\010\002\032\023X-CH-Aut"
    "h-API-Token \002b\026\n\t\n\005email\022\000\n\t\n\005token\022\000r5\n"
    "\026More about Kentik APIs\022\033https://docs.ke"
    "ntik.com/apib\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto_deps[6] =
    {
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_google_2fapi_2fclient_2eproto,
        &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
        &::descriptor_table_kentik_2fcore_2fv202303_2fannotations_2eproto,
        &::descriptor_table_kentik_2fuser_2fv202211_2fuser_2eproto,
        &::descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto = {
    false,
    false,
    11220,
    descriptor_table_protodef_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    "kentik/mkp/v202407/mkp.proto",
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto_once,
    descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto_deps,
    6,
    35,
    schemas,
    file_default_instances,
    TableStruct_kentik_2fmkp_2fv202407_2fmkp_2eproto::offsets,
    file_level_enum_descriptors_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    file_level_service_descriptors_kentik_2fmkp_2fv202407_2fmkp_2eproto,
};
namespace kentik {
namespace mkp {
namespace v202407 {
// ===================================================================

class Alert::_Internal {
 public:
};

Alert::Alert(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.Alert)
}
inline PROTOBUF_NDEBUG_INLINE Alert::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::Alert& from_msg)
      : thresholds_{visibility, arena, from.thresholds_},
        secondary_metrics_{visibility, arena, from.secondary_metrics_},
        policy_id_(arena, from.policy_id_),
        primary_metric_(arena, from.primary_metric_),
        subpolicy_id_(arena, from.subpolicy_id_),
        _cached_size_{0} {}

Alert::Alert(
    ::google::protobuf::Arena* arena,
    const Alert& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Alert* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, saved_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, saved_),
           offsetof(Impl_, is_template_) -
               offsetof(Impl_, saved_) +
               sizeof(Impl_::is_template_));

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.Alert)
}
inline PROTOBUF_NDEBUG_INLINE Alert::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : thresholds_{visibility, arena},
        secondary_metrics_{visibility, arena},
        policy_id_(arena),
        primary_metric_(arena),
        subpolicy_id_(arena),
        _cached_size_{0} {}

inline void Alert::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, saved_),
           0,
           offsetof(Impl_, is_template_) -
               offsetof(Impl_, saved_) +
               sizeof(Impl_::is_template_));
}
Alert::~Alert() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.Alert)
  SharedDtor(*this);
}
inline void Alert::SharedDtor(MessageLite& self) {
  Alert& this_ = static_cast<Alert&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.policy_id_.Destroy();
  this_._impl_.primary_metric_.Destroy();
  this_._impl_.subpolicy_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Alert::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Alert(arena);
}
constexpr auto Alert::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Alert, _impl_.thresholds_) +
          decltype(Alert::_impl_.thresholds_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Alert, _impl_.secondary_metrics_) +
          decltype(Alert::_impl_.secondary_metrics_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Alert), alignof(Alert), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Alert::PlacementNew_,
                                 sizeof(Alert),
                                 alignof(Alert));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Alert::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Alert_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Alert::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Alert>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Alert::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Alert>(), &Alert::ByteSizeLong,
            &Alert::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Alert, _impl_._cached_size_),
        false,
    },
    &Alert::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Alert::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 85, 2> Alert::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Alert>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool saved = 1 [json_name = "saved"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Alert, _impl_.saved_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Alert, _impl_.saved_)}},
    // string policy_id = 2 [json_name = "policyId"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Alert, _impl_.policy_id_)}},
    // repeated .kentik.mkp.v202407.Threshold thresholds = 3 [json_name = "thresholds"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Alert, _impl_.thresholds_)}},
    // string primary_metric = 4 [json_name = "primaryMetric"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Alert, _impl_.primary_metric_)}},
    // repeated string secondary_metrics = 5 [json_name = "secondaryMetrics"];
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Alert, _impl_.secondary_metrics_)}},
    // bool is_template = 6 [json_name = "isTemplate"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Alert, _impl_.is_template_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Alert, _impl_.is_template_)}},
    // string subpolicy_id = 7 [json_name = "subpolicyId"];
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Alert, _impl_.subpolicy_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool saved = 1 [json_name = "saved"];
    {PROTOBUF_FIELD_OFFSET(Alert, _impl_.saved_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string policy_id = 2 [json_name = "policyId"];
    {PROTOBUF_FIELD_OFFSET(Alert, _impl_.policy_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .kentik.mkp.v202407.Threshold thresholds = 3 [json_name = "thresholds"];
    {PROTOBUF_FIELD_OFFSET(Alert, _impl_.thresholds_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string primary_metric = 4 [json_name = "primaryMetric"];
    {PROTOBUF_FIELD_OFFSET(Alert, _impl_.primary_metric_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string secondary_metrics = 5 [json_name = "secondaryMetrics"];
    {PROTOBUF_FIELD_OFFSET(Alert, _impl_.secondary_metrics_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bool is_template = 6 [json_name = "isTemplate"];
    {PROTOBUF_FIELD_OFFSET(Alert, _impl_.is_template_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string subpolicy_id = 7 [json_name = "subpolicyId"];
    {PROTOBUF_FIELD_OFFSET(Alert, _impl_.subpolicy_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Threshold>()},
  }}, {{
    "\30\0\11\0\16\21\0\14"
    "kentik.mkp.v202407.Alert"
    "policy_id"
    "primary_metric"
    "secondary_metrics"
    "subpolicy_id"
  }},
};

PROTOBUF_NOINLINE void Alert::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.Alert)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.thresholds_.Clear();
  _impl_.secondary_metrics_.Clear();
  _impl_.policy_id_.ClearToEmpty();
  _impl_.primary_metric_.ClearToEmpty();
  _impl_.subpolicy_id_.ClearToEmpty();
  ::memset(&_impl_.saved_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_template_) -
      reinterpret_cast<char*>(&_impl_.saved_)) + sizeof(_impl_.is_template_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Alert::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Alert& this_ = static_cast<const Alert&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Alert::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Alert& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.Alert)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool saved = 1 [json_name = "saved"];
          if (this_._internal_saved() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_saved(), target);
          }

          // string policy_id = 2 [json_name = "policyId"];
          if (!this_._internal_policy_id().empty()) {
            const std::string& _s = this_._internal_policy_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Alert.policy_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .kentik.mkp.v202407.Threshold thresholds = 3 [json_name = "thresholds"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_thresholds_size());
               i < n; i++) {
            const auto& repfield = this_._internal_thresholds().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string primary_metric = 4 [json_name = "primaryMetric"];
          if (!this_._internal_primary_metric().empty()) {
            const std::string& _s = this_._internal_primary_metric();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Alert.primary_metric");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // repeated string secondary_metrics = 5 [json_name = "secondaryMetrics"];
          for (int i = 0, n = this_._internal_secondary_metrics_size(); i < n; ++i) {
            const auto& s = this_._internal_secondary_metrics().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Alert.secondary_metrics");
            target = stream->WriteString(5, s, target);
          }

          // bool is_template = 6 [json_name = "isTemplate"];
          if (this_._internal_is_template() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_is_template(), target);
          }

          // string subpolicy_id = 7 [json_name = "subpolicyId"];
          if (!this_._internal_subpolicy_id().empty()) {
            const std::string& _s = this_._internal_subpolicy_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Alert.subpolicy_id");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.Alert)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Alert::ByteSizeLong(const MessageLite& base) {
          const Alert& this_ = static_cast<const Alert&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Alert::ByteSizeLong() const {
          const Alert& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.Alert)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.mkp.v202407.Threshold thresholds = 3 [json_name = "thresholds"];
            {
              total_size += 1UL * this_._internal_thresholds_size();
              for (const auto& msg : this_._internal_thresholds()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string secondary_metrics = 5 [json_name = "secondaryMetrics"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_secondary_metrics().size());
              for (int i = 0, n = this_._internal_secondary_metrics().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_secondary_metrics().Get(i));
              }
            }
          }
           {
            // string policy_id = 2 [json_name = "policyId"];
            if (!this_._internal_policy_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_policy_id());
            }
            // string primary_metric = 4 [json_name = "primaryMetric"];
            if (!this_._internal_primary_metric().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_primary_metric());
            }
            // string subpolicy_id = 7 [json_name = "subpolicyId"];
            if (!this_._internal_subpolicy_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_subpolicy_id());
            }
            // bool saved = 1 [json_name = "saved"];
            if (this_._internal_saved() != 0) {
              total_size += 2;
            }
            // bool is_template = 6 [json_name = "isTemplate"];
            if (this_._internal_is_template() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Alert::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Alert*>(&to_msg);
  auto& from = static_cast<const Alert&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.Alert)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_thresholds()->MergeFrom(
      from._internal_thresholds());
  _this->_internal_mutable_secondary_metrics()->MergeFrom(from._internal_secondary_metrics());
  if (!from._internal_policy_id().empty()) {
    _this->_internal_set_policy_id(from._internal_policy_id());
  }
  if (!from._internal_primary_metric().empty()) {
    _this->_internal_set_primary_metric(from._internal_primary_metric());
  }
  if (!from._internal_subpolicy_id().empty()) {
    _this->_internal_set_subpolicy_id(from._internal_subpolicy_id());
  }
  if (from._internal_saved() != 0) {
    _this->_impl_.saved_ = from._impl_.saved_;
  }
  if (from._internal_is_template() != 0) {
    _this->_impl_.is_template_ = from._impl_.is_template_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Alert::CopyFrom(const Alert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.Alert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Alert::InternalSwap(Alert* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.thresholds_.InternalSwap(&other->_impl_.thresholds_);
  _impl_.secondary_metrics_.InternalSwap(&other->_impl_.secondary_metrics_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.policy_id_, &other->_impl_.policy_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.primary_metric_, &other->_impl_.primary_metric_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subpolicy_id_, &other->_impl_.subpolicy_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Alert, _impl_.is_template_)
      + sizeof(Alert::_impl_.is_template_)
      - PROTOBUF_FIELD_OFFSET(Alert, _impl_.saved_)>(
          reinterpret_cast<char*>(&_impl_.saved_),
          reinterpret_cast<char*>(&other->_impl_.saved_));
}

::google::protobuf::Metadata Alert::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Asset_Report::_Internal {
 public:
};

Asset_Report::Asset_Report(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.Asset.Report)
}
inline PROTOBUF_NDEBUG_INLINE Asset_Report::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::Asset_Report& from_msg)
      : id_(arena, from.id_),
        type_(arena, from.type_),
        _cached_size_{0} {}

Asset_Report::Asset_Report(
    ::google::protobuf::Arena* arena,
    const Asset_Report& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Asset_Report* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.Asset.Report)
}
inline PROTOBUF_NDEBUG_INLINE Asset_Report::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        type_(arena),
        _cached_size_{0} {}

inline void Asset_Report::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Asset_Report::~Asset_Report() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.Asset.Report)
  SharedDtor(*this);
}
inline void Asset_Report::SharedDtor(MessageLite& self) {
  Asset_Report& this_ = static_cast<Asset_Report&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Asset_Report::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Asset_Report(arena);
}
constexpr auto Asset_Report::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Asset_Report),
                                            alignof(Asset_Report));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Asset_Report::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Asset_Report_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Asset_Report::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Asset_Report>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Asset_Report::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Asset_Report>(), &Asset_Report::ByteSizeLong,
            &Asset_Report::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Asset_Report, _impl_._cached_size_),
        false,
    },
    &Asset_Report::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Asset_Report::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 46, 2> Asset_Report::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Asset_Report>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string type = 2 [json_name = "type"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Asset_Report, _impl_.type_)}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Asset_Report, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Asset_Report, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 2 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(Asset_Report, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\2\4\0\0\0\0\0"
    "kentik.mkp.v202407.Asset.Report"
    "id"
    "type"
  }},
};

PROTOBUF_NOINLINE void Asset_Report::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.Asset.Report)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Asset_Report::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Asset_Report& this_ = static_cast<const Asset_Report&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Asset_Report::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Asset_Report& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.Asset.Report)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Asset.Report.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string type = 2 [json_name = "type"];
          if (!this_._internal_type().empty()) {
            const std::string& _s = this_._internal_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Asset.Report.type");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.Asset.Report)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Asset_Report::ByteSizeLong(const MessageLite& base) {
          const Asset_Report& this_ = static_cast<const Asset_Report&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Asset_Report::ByteSizeLong() const {
          const Asset_Report& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.Asset.Report)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 1 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string type = 2 [json_name = "type"];
            if (!this_._internal_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Asset_Report::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Asset_Report*>(&to_msg);
  auto& from = static_cast<const Asset_Report&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.Asset.Report)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Asset_Report::CopyFrom(const Asset_Report& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.Asset.Report)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Asset_Report::InternalSwap(Asset_Report* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
}

::google::protobuf::Metadata Asset_Report::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Asset::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Asset>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Asset, _impl_._has_bits_);
};

Asset::Asset(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.Asset)
}
inline PROTOBUF_NDEBUG_INLINE Asset::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::Asset& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        reports_{visibility, arena, from.reports_} {}

Asset::Asset(
    ::google::protobuf::Arena* arena,
    const Asset& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Asset* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.default_report_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Asset_Report>(
                              arena, *from._impl_.default_report_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.Asset)
}
inline PROTOBUF_NDEBUG_INLINE Asset::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        reports_{visibility, arena} {}

inline void Asset::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.default_report_ = {};
}
Asset::~Asset() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.Asset)
  SharedDtor(*this);
}
inline void Asset::SharedDtor(MessageLite& self) {
  Asset& this_ = static_cast<Asset&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.default_report_;
  this_._impl_.~Impl_();
}

inline void* Asset::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Asset(arena);
}
constexpr auto Asset::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Asset, _impl_.reports_) +
          decltype(Asset::_impl_.reports_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Asset), alignof(Asset), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Asset::PlacementNew_,
                                 sizeof(Asset),
                                 alignof(Asset));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Asset::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Asset_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Asset::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Asset>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Asset::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Asset>(), &Asset::ByteSizeLong,
            &Asset::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Asset, _impl_._cached_size_),
        false,
    },
    &Asset::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Asset::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Asset::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Asset, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Asset>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.mkp.v202407.Asset.Report default_report = 2 [json_name = "defaultReport"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(Asset, _impl_.default_report_)}},
    // repeated .kentik.mkp.v202407.Asset.Report reports = 1 [json_name = "reports"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Asset, _impl_.reports_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .kentik.mkp.v202407.Asset.Report reports = 1 [json_name = "reports"];
    {PROTOBUF_FIELD_OFFSET(Asset, _impl_.reports_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.mkp.v202407.Asset.Report default_report = 2 [json_name = "defaultReport"];
    {PROTOBUF_FIELD_OFFSET(Asset, _impl_.default_report_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Asset_Report>()},
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Asset_Report>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Asset::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.Asset)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reports_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.default_report_ != nullptr);
    _impl_.default_report_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Asset::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Asset& this_ = static_cast<const Asset&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Asset::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Asset& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.Asset)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .kentik.mkp.v202407.Asset.Report reports = 1 [json_name = "reports"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_reports_size());
               i < n; i++) {
            const auto& repfield = this_._internal_reports().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.mkp.v202407.Asset.Report default_report = 2 [json_name = "defaultReport"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.default_report_, this_._impl_.default_report_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.Asset)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Asset::ByteSizeLong(const MessageLite& base) {
          const Asset& this_ = static_cast<const Asset&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Asset::ByteSizeLong() const {
          const Asset& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.Asset)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.mkp.v202407.Asset.Report reports = 1 [json_name = "reports"];
            {
              total_size += 1UL * this_._internal_reports_size();
              for (const auto& msg : this_._internal_reports()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .kentik.mkp.v202407.Asset.Report default_report = 2 [json_name = "defaultReport"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.default_report_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Asset::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Asset*>(&to_msg);
  auto& from = static_cast<const Asset&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.Asset)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_reports()->MergeFrom(
      from._internal_reports());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.default_report_ != nullptr);
    if (_this->_impl_.default_report_ == nullptr) {
      _this->_impl_.default_report_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Asset_Report>(arena, *from._impl_.default_report_);
    } else {
      _this->_impl_.default_report_->MergeFrom(*from._impl_.default_report_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Asset::CopyFrom(const Asset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.Asset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Asset::InternalSwap(Asset* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.reports_.InternalSwap(&other->_impl_.reports_);
  swap(_impl_.default_report_, other->_impl_.default_report_);
}

::google::protobuf::Metadata Asset::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Threshold::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Threshold>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Threshold, _impl_._has_bits_);
};

Threshold::Threshold(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.Threshold)
}
inline PROTOBUF_NDEBUG_INLINE Threshold::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::Threshold& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        conditions_{visibility, arena, from.conditions_},
        mitigations_{visibility, arena, from.mitigations_},
        notification_channels_{visibility, arena, from.notification_channels_},
        id_(arena, from.id_),
        severity_(arena, from.severity_) {}

Threshold::Threshold(
    ::google::protobuf::Arena* arena,
    const Threshold& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Threshold* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.activate_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Activate>(
                              arena, *from._impl_.activate_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, threshold_ack_required_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, threshold_ack_required_),
           offsetof(Impl_, receive_landlord_notifications_) -
               offsetof(Impl_, threshold_ack_required_) +
               sizeof(Impl_::receive_landlord_notifications_));

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.Threshold)
}
inline PROTOBUF_NDEBUG_INLINE Threshold::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        conditions_{visibility, arena},
        mitigations_{visibility, arena},
        notification_channels_{visibility, arena},
        id_(arena),
        severity_(arena) {}

inline void Threshold::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, activate_),
           0,
           offsetof(Impl_, receive_landlord_notifications_) -
               offsetof(Impl_, activate_) +
               sizeof(Impl_::receive_landlord_notifications_));
}
Threshold::~Threshold() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.Threshold)
  SharedDtor(*this);
}
inline void Threshold::SharedDtor(MessageLite& self) {
  Threshold& this_ = static_cast<Threshold&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.severity_.Destroy();
  delete this_._impl_.activate_;
  this_._impl_.~Impl_();
}

inline void* Threshold::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Threshold(arena);
}
constexpr auto Threshold::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Threshold, _impl_.conditions_) +
          decltype(Threshold::_impl_.conditions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Threshold, _impl_.mitigations_) +
          decltype(Threshold::_impl_.mitigations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Threshold, _impl_.notification_channels_) +
          decltype(Threshold::_impl_.notification_channels_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Threshold), alignof(Threshold), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Threshold::PlacementNew_,
                                 sizeof(Threshold),
                                 alignof(Threshold));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Threshold::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Threshold_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Threshold::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Threshold>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Threshold::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Threshold>(), &Threshold::ByteSizeLong,
            &Threshold::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Threshold, _impl_._cached_size_),
        false,
    },
    &Threshold::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Threshold::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 4, 55, 2> Threshold::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Threshold, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Threshold>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Threshold, _impl_.id_)}},
    // .kentik.mkp.v202407.Activate activate = 2 [json_name = "activate"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Threshold, _impl_.activate_)}},
    // string severity = 3 [json_name = "severity"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Threshold, _impl_.severity_)}},
    // repeated .kentik.mkp.v202407.Condition conditions = 4 [json_name = "conditions"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(Threshold, _impl_.conditions_)}},
    // repeated .kentik.mkp.v202407.Mitigation mitigations = 5 [json_name = "mitigations"];
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 2, PROTOBUF_FIELD_OFFSET(Threshold, _impl_.mitigations_)}},
    // repeated .kentik.mkp.v202407.NotificationChannel notification_channels = 6 [json_name = "notificationChannels"];
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 3, PROTOBUF_FIELD_OFFSET(Threshold, _impl_.notification_channels_)}},
    // bool threshold_ack_required = 7 [json_name = "thresholdAckRequired"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Threshold, _impl_.threshold_ack_required_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Threshold, _impl_.threshold_ack_required_)}},
    // bool enable_tenant_notifications = 8 [json_name = "enableTenantNotifications"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Threshold, _impl_.enable_tenant_notifications_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Threshold, _impl_.enable_tenant_notifications_)}},
    // bool receive_landlord_notifications = 9 [json_name = "receiveLandlordNotifications"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Threshold, _impl_.receive_landlord_notifications_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(Threshold, _impl_.receive_landlord_notifications_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Threshold, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .kentik.mkp.v202407.Activate activate = 2 [json_name = "activate"];
    {PROTOBUF_FIELD_OFFSET(Threshold, _impl_.activate_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string severity = 3 [json_name = "severity"];
    {PROTOBUF_FIELD_OFFSET(Threshold, _impl_.severity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .kentik.mkp.v202407.Condition conditions = 4 [json_name = "conditions"];
    {PROTOBUF_FIELD_OFFSET(Threshold, _impl_.conditions_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .kentik.mkp.v202407.Mitigation mitigations = 5 [json_name = "mitigations"];
    {PROTOBUF_FIELD_OFFSET(Threshold, _impl_.mitigations_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .kentik.mkp.v202407.NotificationChannel notification_channels = 6 [json_name = "notificationChannels"];
    {PROTOBUF_FIELD_OFFSET(Threshold, _impl_.notification_channels_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool threshold_ack_required = 7 [json_name = "thresholdAckRequired"];
    {PROTOBUF_FIELD_OFFSET(Threshold, _impl_.threshold_ack_required_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool enable_tenant_notifications = 8 [json_name = "enableTenantNotifications"];
    {PROTOBUF_FIELD_OFFSET(Threshold, _impl_.enable_tenant_notifications_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool receive_landlord_notifications = 9 [json_name = "receiveLandlordNotifications"];
    {PROTOBUF_FIELD_OFFSET(Threshold, _impl_.receive_landlord_notifications_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Activate>()},
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Condition>()},
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Mitigation>()},
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::NotificationChannel>()},
  }}, {{
    "\34\2\0\10\0\0\0\0\0\0\0\0\0\0\0\0"
    "kentik.mkp.v202407.Threshold"
    "id"
    "severity"
  }},
};

PROTOBUF_NOINLINE void Threshold::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.Threshold)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.conditions_.Clear();
  _impl_.mitigations_.Clear();
  _impl_.notification_channels_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.severity_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.activate_ != nullptr);
    _impl_.activate_->Clear();
  }
  ::memset(&_impl_.threshold_ack_required_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.receive_landlord_notifications_) -
      reinterpret_cast<char*>(&_impl_.threshold_ack_required_)) + sizeof(_impl_.receive_landlord_notifications_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Threshold::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Threshold& this_ = static_cast<const Threshold&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Threshold::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Threshold& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.Threshold)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Threshold.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.mkp.v202407.Activate activate = 2 [json_name = "activate"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.activate_, this_._impl_.activate_->GetCachedSize(), target,
                stream);
          }

          // string severity = 3 [json_name = "severity"];
          if (!this_._internal_severity().empty()) {
            const std::string& _s = this_._internal_severity();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Threshold.severity");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // repeated .kentik.mkp.v202407.Condition conditions = 4 [json_name = "conditions"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_conditions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_conditions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .kentik.mkp.v202407.Mitigation mitigations = 5 [json_name = "mitigations"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_mitigations_size());
               i < n; i++) {
            const auto& repfield = this_._internal_mitigations().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .kentik.mkp.v202407.NotificationChannel notification_channels = 6 [json_name = "notificationChannels"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_notification_channels_size());
               i < n; i++) {
            const auto& repfield = this_._internal_notification_channels().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // bool threshold_ack_required = 7 [json_name = "thresholdAckRequired"];
          if (this_._internal_threshold_ack_required() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_threshold_ack_required(), target);
          }

          // bool enable_tenant_notifications = 8 [json_name = "enableTenantNotifications"];
          if (this_._internal_enable_tenant_notifications() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_enable_tenant_notifications(), target);
          }

          // bool receive_landlord_notifications = 9 [json_name = "receiveLandlordNotifications"];
          if (this_._internal_receive_landlord_notifications() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                9, this_._internal_receive_landlord_notifications(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.Threshold)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Threshold::ByteSizeLong(const MessageLite& base) {
          const Threshold& this_ = static_cast<const Threshold&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Threshold::ByteSizeLong() const {
          const Threshold& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.Threshold)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.mkp.v202407.Condition conditions = 4 [json_name = "conditions"];
            {
              total_size += 1UL * this_._internal_conditions_size();
              for (const auto& msg : this_._internal_conditions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .kentik.mkp.v202407.Mitigation mitigations = 5 [json_name = "mitigations"];
            {
              total_size += 1UL * this_._internal_mitigations_size();
              for (const auto& msg : this_._internal_mitigations()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .kentik.mkp.v202407.NotificationChannel notification_channels = 6 [json_name = "notificationChannels"];
            {
              total_size += 1UL * this_._internal_notification_channels_size();
              for (const auto& msg : this_._internal_notification_channels()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string id = 1 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string severity = 3 [json_name = "severity"];
            if (!this_._internal_severity().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_severity());
            }
          }
           {
            // .kentik.mkp.v202407.Activate activate = 2 [json_name = "activate"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.activate_);
            }
          }
           {
            // bool threshold_ack_required = 7 [json_name = "thresholdAckRequired"];
            if (this_._internal_threshold_ack_required() != 0) {
              total_size += 2;
            }
            // bool enable_tenant_notifications = 8 [json_name = "enableTenantNotifications"];
            if (this_._internal_enable_tenant_notifications() != 0) {
              total_size += 2;
            }
            // bool receive_landlord_notifications = 9 [json_name = "receiveLandlordNotifications"];
            if (this_._internal_receive_landlord_notifications() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Threshold::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Threshold*>(&to_msg);
  auto& from = static_cast<const Threshold&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.Threshold)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_conditions()->MergeFrom(
      from._internal_conditions());
  _this->_internal_mutable_mitigations()->MergeFrom(
      from._internal_mitigations());
  _this->_internal_mutable_notification_channels()->MergeFrom(
      from._internal_notification_channels());
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_severity().empty()) {
    _this->_internal_set_severity(from._internal_severity());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.activate_ != nullptr);
    if (_this->_impl_.activate_ == nullptr) {
      _this->_impl_.activate_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Activate>(arena, *from._impl_.activate_);
    } else {
      _this->_impl_.activate_->MergeFrom(*from._impl_.activate_);
    }
  }
  if (from._internal_threshold_ack_required() != 0) {
    _this->_impl_.threshold_ack_required_ = from._impl_.threshold_ack_required_;
  }
  if (from._internal_enable_tenant_notifications() != 0) {
    _this->_impl_.enable_tenant_notifications_ = from._impl_.enable_tenant_notifications_;
  }
  if (from._internal_receive_landlord_notifications() != 0) {
    _this->_impl_.receive_landlord_notifications_ = from._impl_.receive_landlord_notifications_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Threshold::CopyFrom(const Threshold& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.Threshold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Threshold::InternalSwap(Threshold* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.conditions_.InternalSwap(&other->_impl_.conditions_);
  _impl_.mitigations_.InternalSwap(&other->_impl_.mitigations_);
  _impl_.notification_channels_.InternalSwap(&other->_impl_.notification_channels_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.severity_, &other->_impl_.severity_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Threshold, _impl_.receive_landlord_notifications_)
      + sizeof(Threshold::_impl_.receive_landlord_notifications_)
      - PROTOBUF_FIELD_OFFSET(Threshold, _impl_.activate_)>(
          reinterpret_cast<char*>(&_impl_.activate_),
          reinterpret_cast<char*>(&other->_impl_.activate_));
}

::google::protobuf::Metadata Threshold::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Activate::_Internal {
 public:
};

Activate::Activate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.Activate)
}
inline PROTOBUF_NDEBUG_INLINE Activate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::Activate& from_msg)
      : operator__(arena, from.operator__),
        _cached_size_{0} {}

Activate::Activate(
    ::google::protobuf::Arena* arena,
    const Activate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Activate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, times_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, times_),
           offsetof(Impl_, grace_period_seconds_) -
               offsetof(Impl_, times_) +
               sizeof(Impl_::grace_period_seconds_));

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.Activate)
}
inline PROTOBUF_NDEBUG_INLINE Activate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : operator__(arena),
        _cached_size_{0} {}

inline void Activate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, times_),
           0,
           offsetof(Impl_, grace_period_seconds_) -
               offsetof(Impl_, times_) +
               sizeof(Impl_::grace_period_seconds_));
}
Activate::~Activate() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.Activate)
  SharedDtor(*this);
}
inline void Activate::SharedDtor(MessageLite& self) {
  Activate& this_ = static_cast<Activate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.operator__.Destroy();
  this_._impl_.~Impl_();
}

inline void* Activate::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Activate(arena);
}
constexpr auto Activate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Activate),
                                            alignof(Activate));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Activate::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Activate_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Activate::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Activate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Activate::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Activate>(), &Activate::ByteSizeLong,
            &Activate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Activate, _impl_._cached_size_),
        false,
    },
    &Activate::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Activate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 44, 2> Activate::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Activate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 grace_period_seconds = 4 [json_name = "gracePeriodSeconds"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Activate, _impl_.grace_period_seconds_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Activate, _impl_.grace_period_seconds_)}},
    // uint32 times = 1 [json_name = "times"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Activate, _impl_.times_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Activate, _impl_.times_)}},
    // string operator = 2 [json_name = "operator"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Activate, _impl_.operator__)}},
    // uint32 time_window_seconds = 3 [json_name = "timeWindowSeconds"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Activate, _impl_.time_window_seconds_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Activate, _impl_.time_window_seconds_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 times = 1 [json_name = "times"];
    {PROTOBUF_FIELD_OFFSET(Activate, _impl_.times_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string operator = 2 [json_name = "operator"];
    {PROTOBUF_FIELD_OFFSET(Activate, _impl_.operator__), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 time_window_seconds = 3 [json_name = "timeWindowSeconds"];
    {PROTOBUF_FIELD_OFFSET(Activate, _impl_.time_window_seconds_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 grace_period_seconds = 4 [json_name = "gracePeriodSeconds"];
    {PROTOBUF_FIELD_OFFSET(Activate, _impl_.grace_period_seconds_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\33\0\10\0\0\0\0\0"
    "kentik.mkp.v202407.Activate"
    "operator"
  }},
};

PROTOBUF_NOINLINE void Activate::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.Activate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.operator__.ClearToEmpty();
  ::memset(&_impl_.times_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.grace_period_seconds_) -
      reinterpret_cast<char*>(&_impl_.times_)) + sizeof(_impl_.grace_period_seconds_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Activate::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Activate& this_ = static_cast<const Activate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Activate::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Activate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.Activate)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 times = 1 [json_name = "times"];
          if (this_._internal_times() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_times(), target);
          }

          // string operator = 2 [json_name = "operator"];
          if (!this_._internal_operator_().empty()) {
            const std::string& _s = this_._internal_operator_();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Activate.operator");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint32 time_window_seconds = 3 [json_name = "timeWindowSeconds"];
          if (this_._internal_time_window_seconds() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_time_window_seconds(), target);
          }

          // uint32 grace_period_seconds = 4 [json_name = "gracePeriodSeconds"];
          if (this_._internal_grace_period_seconds() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_grace_period_seconds(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.Activate)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Activate::ByteSizeLong(const MessageLite& base) {
          const Activate& this_ = static_cast<const Activate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Activate::ByteSizeLong() const {
          const Activate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.Activate)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string operator = 2 [json_name = "operator"];
            if (!this_._internal_operator_().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_operator_());
            }
            // uint32 times = 1 [json_name = "times"];
            if (this_._internal_times() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_times());
            }
            // uint32 time_window_seconds = 3 [json_name = "timeWindowSeconds"];
            if (this_._internal_time_window_seconds() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_time_window_seconds());
            }
            // uint32 grace_period_seconds = 4 [json_name = "gracePeriodSeconds"];
            if (this_._internal_grace_period_seconds() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_grace_period_seconds());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Activate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Activate*>(&to_msg);
  auto& from = static_cast<const Activate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.Activate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_operator_().empty()) {
    _this->_internal_set_operator_(from._internal_operator_());
  }
  if (from._internal_times() != 0) {
    _this->_impl_.times_ = from._impl_.times_;
  }
  if (from._internal_time_window_seconds() != 0) {
    _this->_impl_.time_window_seconds_ = from._impl_.time_window_seconds_;
  }
  if (from._internal_grace_period_seconds() != 0) {
    _this->_impl_.grace_period_seconds_ = from._impl_.grace_period_seconds_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Activate::CopyFrom(const Activate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.Activate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Activate::InternalSwap(Activate* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.operator__, &other->_impl_.operator__, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Activate, _impl_.grace_period_seconds_)
      + sizeof(Activate::_impl_.grace_period_seconds_)
      - PROTOBUF_FIELD_OFFSET(Activate, _impl_.times_)>(
          reinterpret_cast<char*>(&_impl_.times_),
          reinterpret_cast<char*>(&other->_impl_.times_));
}

::google::protobuf::Metadata Activate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Condition::_Internal {
 public:
};

Condition::Condition(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.Condition)
}
inline PROTOBUF_NDEBUG_INLINE Condition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::Condition& from_msg)
      : type_(arena, from.type_),
        value_(arena, from.value_),
        metric_(arena, from.metric_),
        operator__(arena, from.operator__),
        value_type_(arena, from.value_type_),
        value_select_(arena, from.value_select_),
        _cached_size_{0} {}

Condition::Condition(
    ::google::protobuf::Arena* arena,
    const Condition& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Condition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.Condition)
}
inline PROTOBUF_NDEBUG_INLINE Condition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : type_(arena),
        value_(arena),
        metric_(arena),
        operator__(arena),
        value_type_(arena),
        value_select_(arena),
        _cached_size_{0} {}

inline void Condition::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Condition::~Condition() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.Condition)
  SharedDtor(*this);
}
inline void Condition::SharedDtor(MessageLite& self) {
  Condition& this_ = static_cast<Condition&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.type_.Destroy();
  this_._impl_.value_.Destroy();
  this_._impl_.metric_.Destroy();
  this_._impl_.operator__.Destroy();
  this_._impl_.value_type_.Destroy();
  this_._impl_.value_select_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Condition::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Condition(arena);
}
constexpr auto Condition::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Condition),
                                            alignof(Condition));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Condition::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Condition_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Condition::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Condition>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Condition::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Condition>(), &Condition::ByteSizeLong,
            &Condition::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Condition, _impl_._cached_size_),
        false,
    },
    &Condition::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Condition::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 82, 2> Condition::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Condition>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string type = 1 [json_name = "type"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Condition, _impl_.type_)}},
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Condition, _impl_.value_)}},
    // string metric = 3 [json_name = "metric"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Condition, _impl_.metric_)}},
    // string operator = 4 [json_name = "operator"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Condition, _impl_.operator__)}},
    // string value_type = 5 [json_name = "valueType"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Condition, _impl_.value_type_)}},
    // string value_select = 6 [json_name = "valueSelect"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Condition, _impl_.value_select_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string type = 1 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string metric = 3 [json_name = "metric"];
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.metric_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string operator = 4 [json_name = "operator"];
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.operator__), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value_type = 5 [json_name = "valueType"];
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.value_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value_select = 6 [json_name = "valueSelect"];
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.value_select_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\4\5\6\10\12\14\0"
    "kentik.mkp.v202407.Condition"
    "type"
    "value"
    "metric"
    "operator"
    "value_type"
    "value_select"
  }},
};

PROTOBUF_NOINLINE void Condition::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.Condition)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _impl_.metric_.ClearToEmpty();
  _impl_.operator__.ClearToEmpty();
  _impl_.value_type_.ClearToEmpty();
  _impl_.value_select_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Condition::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Condition& this_ = static_cast<const Condition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Condition::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Condition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.Condition)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string type = 1 [json_name = "type"];
          if (!this_._internal_type().empty()) {
            const std::string& _s = this_._internal_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Condition.type");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string value = 2 [json_name = "value"];
          if (!this_._internal_value().empty()) {
            const std::string& _s = this_._internal_value();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Condition.value");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string metric = 3 [json_name = "metric"];
          if (!this_._internal_metric().empty()) {
            const std::string& _s = this_._internal_metric();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Condition.metric");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string operator = 4 [json_name = "operator"];
          if (!this_._internal_operator_().empty()) {
            const std::string& _s = this_._internal_operator_();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Condition.operator");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string value_type = 5 [json_name = "valueType"];
          if (!this_._internal_value_type().empty()) {
            const std::string& _s = this_._internal_value_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Condition.value_type");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string value_select = 6 [json_name = "valueSelect"];
          if (!this_._internal_value_select().empty()) {
            const std::string& _s = this_._internal_value_select();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Condition.value_select");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.Condition)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Condition::ByteSizeLong(const MessageLite& base) {
          const Condition& this_ = static_cast<const Condition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Condition::ByteSizeLong() const {
          const Condition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.Condition)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string type = 1 [json_name = "type"];
            if (!this_._internal_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type());
            }
            // string value = 2 [json_name = "value"];
            if (!this_._internal_value().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_value());
            }
            // string metric = 3 [json_name = "metric"];
            if (!this_._internal_metric().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_metric());
            }
            // string operator = 4 [json_name = "operator"];
            if (!this_._internal_operator_().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_operator_());
            }
            // string value_type = 5 [json_name = "valueType"];
            if (!this_._internal_value_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_value_type());
            }
            // string value_select = 6 [json_name = "valueSelect"];
            if (!this_._internal_value_select().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_value_select());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Condition::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Condition*>(&to_msg);
  auto& from = static_cast<const Condition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.Condition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  if (!from._internal_metric().empty()) {
    _this->_internal_set_metric(from._internal_metric());
  }
  if (!from._internal_operator_().empty()) {
    _this->_internal_set_operator_(from._internal_operator_());
  }
  if (!from._internal_value_type().empty()) {
    _this->_internal_set_value_type(from._internal_value_type());
  }
  if (!from._internal_value_select().empty()) {
    _this->_internal_set_value_select(from._internal_value_select());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Condition::CopyFrom(const Condition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.Condition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Condition::InternalSwap(Condition* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metric_, &other->_impl_.metric_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.operator__, &other->_impl_.operator__, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_type_, &other->_impl_.value_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_select_, &other->_impl_.value_select_, arena);
}

::google::protobuf::Metadata Condition::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Mitigation::_Internal {
 public:
};

Mitigation::Mitigation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.Mitigation)
}
inline PROTOBUF_NDEBUG_INLINE Mitigation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::Mitigation& from_msg)
      : status_(arena, from.status_),
        company_id_(arena, from.company_id_),
        pairing_id_(arena, from.pairing_id_),
        threshold_id_(arena, from.threshold_id_),
        mitigation_apply_type_(arena, from.mitigation_apply_type_),
        mitigation_clear_type_(arena, from.mitigation_clear_type_),
        id_(arena, from.id_),
        _cached_size_{0} {}

Mitigation::Mitigation(
    ::google::protobuf::Arena* arena,
    const Mitigation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Mitigation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_method_overridable_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, is_method_overridable_),
           offsetof(Impl_, mitigation_clear_timer_) -
               offsetof(Impl_, is_method_overridable_) +
               sizeof(Impl_::mitigation_clear_timer_));

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.Mitigation)
}
inline PROTOBUF_NDEBUG_INLINE Mitigation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : status_(arena),
        company_id_(arena),
        pairing_id_(arena),
        threshold_id_(arena),
        mitigation_apply_type_(arena),
        mitigation_clear_type_(arena),
        id_(arena),
        _cached_size_{0} {}

inline void Mitigation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_method_overridable_),
           0,
           offsetof(Impl_, mitigation_clear_timer_) -
               offsetof(Impl_, is_method_overridable_) +
               sizeof(Impl_::mitigation_clear_timer_));
}
Mitigation::~Mitigation() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.Mitigation)
  SharedDtor(*this);
}
inline void Mitigation::SharedDtor(MessageLite& self) {
  Mitigation& this_ = static_cast<Mitigation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.status_.Destroy();
  this_._impl_.company_id_.Destroy();
  this_._impl_.pairing_id_.Destroy();
  this_._impl_.threshold_id_.Destroy();
  this_._impl_.mitigation_apply_type_.Destroy();
  this_._impl_.mitigation_clear_type_.Destroy();
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Mitigation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Mitigation(arena);
}
constexpr auto Mitigation::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Mitigation),
                                            alignof(Mitigation));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Mitigation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Mitigation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Mitigation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Mitigation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Mitigation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Mitigation>(), &Mitigation::ByteSizeLong,
            &Mitigation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Mitigation, _impl_._cached_size_),
        false,
    },
    &Mitigation::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Mitigation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 0, 128, 2> Mitigation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294962176,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Mitigation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string status = 1 [json_name = "status"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.status_)}},
    // string company_id = 2 [json_name = "companyId"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.company_id_)}},
    // string pairing_id = 3 [json_name = "pairingId"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.pairing_id_)}},
    // string threshold_id = 4 [json_name = "thresholdId"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.threshold_id_)}},
    // bool is_method_overridable = 5 [json_name = "isMethodOverridable"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Mitigation, _impl_.is_method_overridable_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.is_method_overridable_)}},
    // string mitigation_apply_type = 6 [json_name = "mitigationApplyType"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.mitigation_apply_type_)}},
    // string mitigation_clear_type = 7 [json_name = "mitigationClearType"];
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.mitigation_clear_type_)}},
    // uint32 mitigation_apply_timer = 8 [json_name = "mitigationApplyTimer"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Mitigation, _impl_.mitigation_apply_timer_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.mitigation_apply_timer_)}},
    // uint32 mitigation_clear_timer = 9 [json_name = "mitigationClearTimer"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Mitigation, _impl_.mitigation_clear_timer_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.mitigation_clear_timer_)}},
    // bool is_platform_overridable = 10 [json_name = "isPlatformOverridable"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Mitigation, _impl_.is_platform_overridable_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.is_platform_overridable_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 13 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string status = 1 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string company_id = 2 [json_name = "companyId"];
    {PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.company_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string pairing_id = 3 [json_name = "pairingId"];
    {PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.pairing_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string threshold_id = 4 [json_name = "thresholdId"];
    {PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.threshold_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_method_overridable = 5 [json_name = "isMethodOverridable"];
    {PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.is_method_overridable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string mitigation_apply_type = 6 [json_name = "mitigationApplyType"];
    {PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.mitigation_apply_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string mitigation_clear_type = 7 [json_name = "mitigationClearType"];
    {PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.mitigation_clear_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 mitigation_apply_timer = 8 [json_name = "mitigationApplyTimer"];
    {PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.mitigation_apply_timer_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 mitigation_clear_timer = 9 [json_name = "mitigationClearTimer"];
    {PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.mitigation_clear_timer_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bool is_platform_overridable = 10 [json_name = "isPlatformOverridable"];
    {PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.is_platform_overridable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string id = 13 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\6\12\12\14\0\25\25\0\0\0\2\0\0\0\0"
    "kentik.mkp.v202407.Mitigation"
    "status"
    "company_id"
    "pairing_id"
    "threshold_id"
    "mitigation_apply_type"
    "mitigation_clear_type"
    "id"
  }},
};

PROTOBUF_NOINLINE void Mitigation::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.Mitigation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_.ClearToEmpty();
  _impl_.company_id_.ClearToEmpty();
  _impl_.pairing_id_.ClearToEmpty();
  _impl_.threshold_id_.ClearToEmpty();
  _impl_.mitigation_apply_type_.ClearToEmpty();
  _impl_.mitigation_clear_type_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  ::memset(&_impl_.is_method_overridable_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.mitigation_clear_timer_) -
      reinterpret_cast<char*>(&_impl_.is_method_overridable_)) + sizeof(_impl_.mitigation_clear_timer_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Mitigation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Mitigation& this_ = static_cast<const Mitigation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Mitigation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Mitigation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.Mitigation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string status = 1 [json_name = "status"];
          if (!this_._internal_status().empty()) {
            const std::string& _s = this_._internal_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Mitigation.status");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string company_id = 2 [json_name = "companyId"];
          if (!this_._internal_company_id().empty()) {
            const std::string& _s = this_._internal_company_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Mitigation.company_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string pairing_id = 3 [json_name = "pairingId"];
          if (!this_._internal_pairing_id().empty()) {
            const std::string& _s = this_._internal_pairing_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Mitigation.pairing_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string threshold_id = 4 [json_name = "thresholdId"];
          if (!this_._internal_threshold_id().empty()) {
            const std::string& _s = this_._internal_threshold_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Mitigation.threshold_id");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // bool is_method_overridable = 5 [json_name = "isMethodOverridable"];
          if (this_._internal_is_method_overridable() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_is_method_overridable(), target);
          }

          // string mitigation_apply_type = 6 [json_name = "mitigationApplyType"];
          if (!this_._internal_mitigation_apply_type().empty()) {
            const std::string& _s = this_._internal_mitigation_apply_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Mitigation.mitigation_apply_type");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string mitigation_clear_type = 7 [json_name = "mitigationClearType"];
          if (!this_._internal_mitigation_clear_type().empty()) {
            const std::string& _s = this_._internal_mitigation_clear_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Mitigation.mitigation_clear_type");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // uint32 mitigation_apply_timer = 8 [json_name = "mitigationApplyTimer"];
          if (this_._internal_mitigation_apply_timer() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                8, this_._internal_mitigation_apply_timer(), target);
          }

          // uint32 mitigation_clear_timer = 9 [json_name = "mitigationClearTimer"];
          if (this_._internal_mitigation_clear_timer() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                9, this_._internal_mitigation_clear_timer(), target);
          }

          // bool is_platform_overridable = 10 [json_name = "isPlatformOverridable"];
          if (this_._internal_is_platform_overridable() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_is_platform_overridable(), target);
          }

          // string id = 13 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Mitigation.id");
            target = stream->WriteStringMaybeAliased(13, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.Mitigation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Mitigation::ByteSizeLong(const MessageLite& base) {
          const Mitigation& this_ = static_cast<const Mitigation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Mitigation::ByteSizeLong() const {
          const Mitigation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.Mitigation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string status = 1 [json_name = "status"];
            if (!this_._internal_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_status());
            }
            // string company_id = 2 [json_name = "companyId"];
            if (!this_._internal_company_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_company_id());
            }
            // string pairing_id = 3 [json_name = "pairingId"];
            if (!this_._internal_pairing_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_pairing_id());
            }
            // string threshold_id = 4 [json_name = "thresholdId"];
            if (!this_._internal_threshold_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_threshold_id());
            }
            // string mitigation_apply_type = 6 [json_name = "mitigationApplyType"];
            if (!this_._internal_mitigation_apply_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_mitigation_apply_type());
            }
            // string mitigation_clear_type = 7 [json_name = "mitigationClearType"];
            if (!this_._internal_mitigation_clear_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_mitigation_clear_type());
            }
            // string id = 13 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // bool is_method_overridable = 5 [json_name = "isMethodOverridable"];
            if (this_._internal_is_method_overridable() != 0) {
              total_size += 2;
            }
            // bool is_platform_overridable = 10 [json_name = "isPlatformOverridable"];
            if (this_._internal_is_platform_overridable() != 0) {
              total_size += 2;
            }
            // uint32 mitigation_apply_timer = 8 [json_name = "mitigationApplyTimer"];
            if (this_._internal_mitigation_apply_timer() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_mitigation_apply_timer());
            }
            // uint32 mitigation_clear_timer = 9 [json_name = "mitigationClearTimer"];
            if (this_._internal_mitigation_clear_timer() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_mitigation_clear_timer());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Mitigation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Mitigation*>(&to_msg);
  auto& from = static_cast<const Mitigation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.Mitigation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (!from._internal_company_id().empty()) {
    _this->_internal_set_company_id(from._internal_company_id());
  }
  if (!from._internal_pairing_id().empty()) {
    _this->_internal_set_pairing_id(from._internal_pairing_id());
  }
  if (!from._internal_threshold_id().empty()) {
    _this->_internal_set_threshold_id(from._internal_threshold_id());
  }
  if (!from._internal_mitigation_apply_type().empty()) {
    _this->_internal_set_mitigation_apply_type(from._internal_mitigation_apply_type());
  }
  if (!from._internal_mitigation_clear_type().empty()) {
    _this->_internal_set_mitigation_clear_type(from._internal_mitigation_clear_type());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_is_method_overridable() != 0) {
    _this->_impl_.is_method_overridable_ = from._impl_.is_method_overridable_;
  }
  if (from._internal_is_platform_overridable() != 0) {
    _this->_impl_.is_platform_overridable_ = from._impl_.is_platform_overridable_;
  }
  if (from._internal_mitigation_apply_timer() != 0) {
    _this->_impl_.mitigation_apply_timer_ = from._impl_.mitigation_apply_timer_;
  }
  if (from._internal_mitigation_clear_timer() != 0) {
    _this->_impl_.mitigation_clear_timer_ = from._impl_.mitigation_clear_timer_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Mitigation::CopyFrom(const Mitigation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.Mitigation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Mitigation::InternalSwap(Mitigation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.company_id_, &other->_impl_.company_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pairing_id_, &other->_impl_.pairing_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.threshold_id_, &other->_impl_.threshold_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mitigation_apply_type_, &other->_impl_.mitigation_apply_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mitigation_clear_type_, &other->_impl_.mitigation_clear_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.mitigation_clear_timer_)
      + sizeof(Mitigation::_impl_.mitigation_clear_timer_)
      - PROTOBUF_FIELD_OFFSET(Mitigation, _impl_.is_method_overridable_)>(
          reinterpret_cast<char*>(&_impl_.is_method_overridable_),
          reinterpret_cast<char*>(&other->_impl_.is_method_overridable_));
}

::google::protobuf::Metadata Mitigation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NotificationChannel::_Internal {
 public:
};

NotificationChannel::NotificationChannel(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.NotificationChannel)
}
inline PROTOBUF_NDEBUG_INLINE NotificationChannel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::NotificationChannel& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

NotificationChannel::NotificationChannel(
    ::google::protobuf::Arena* arena,
    const NotificationChannel& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NotificationChannel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.NotificationChannel)
}
inline PROTOBUF_NDEBUG_INLINE NotificationChannel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void NotificationChannel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NotificationChannel::~NotificationChannel() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.NotificationChannel)
  SharedDtor(*this);
}
inline void NotificationChannel::SharedDtor(MessageLite& self) {
  NotificationChannel& this_ = static_cast<NotificationChannel&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NotificationChannel::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NotificationChannel(arena);
}
constexpr auto NotificationChannel::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NotificationChannel),
                                            alignof(NotificationChannel));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NotificationChannel::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NotificationChannel_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NotificationChannel::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NotificationChannel>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NotificationChannel::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NotificationChannel>(), &NotificationChannel::ByteSizeLong,
            &NotificationChannel::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NotificationChannel, _impl_._cached_size_),
        false,
    },
    &NotificationChannel::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NotificationChannel::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 49, 2> NotificationChannel::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::NotificationChannel>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NotificationChannel, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(NotificationChannel, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\2\0\0\0\0\0\0"
    "kentik.mkp.v202407.NotificationChannel"
    "id"
  }},
};

PROTOBUF_NOINLINE void NotificationChannel::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.NotificationChannel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NotificationChannel::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NotificationChannel& this_ = static_cast<const NotificationChannel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NotificationChannel::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NotificationChannel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.NotificationChannel)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.NotificationChannel.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.NotificationChannel)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NotificationChannel::ByteSizeLong(const MessageLite& base) {
          const NotificationChannel& this_ = static_cast<const NotificationChannel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NotificationChannel::ByteSizeLong() const {
          const NotificationChannel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.NotificationChannel)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string id = 1 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NotificationChannel::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NotificationChannel*>(&to_msg);
  auto& from = static_cast<const NotificationChannel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.NotificationChannel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NotificationChannel::CopyFrom(const NotificationChannel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.NotificationChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NotificationChannel::InternalSwap(NotificationChannel* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata NotificationChannel::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TenantLink::_Internal {
 public:
};

TenantLink::TenantLink(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.TenantLink)
}
inline PROTOBUF_NDEBUG_INLINE TenantLink::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::TenantLink& from_msg)
      : id_(arena, from.id_),
        pivot_template_id_(arena, from.pivot_template_id_),
        pivot_user_group_id_(arena, from.pivot_user_group_id_),
        _cached_size_{0} {}

TenantLink::TenantLink(
    ::google::protobuf::Arena* arena,
    const TenantLink& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TenantLink* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.TenantLink)
}
inline PROTOBUF_NDEBUG_INLINE TenantLink::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        pivot_template_id_(arena),
        pivot_user_group_id_(arena),
        _cached_size_{0} {}

inline void TenantLink::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TenantLink::~TenantLink() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.TenantLink)
  SharedDtor(*this);
}
inline void TenantLink::SharedDtor(MessageLite& self) {
  TenantLink& this_ = static_cast<TenantLink&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.pivot_template_id_.Destroy();
  this_._impl_.pivot_user_group_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TenantLink::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TenantLink(arena);
}
constexpr auto TenantLink::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TenantLink),
                                            alignof(TenantLink));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TenantLink::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TenantLink_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TenantLink::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TenantLink>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TenantLink::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TenantLink>(), &TenantLink::ByteSizeLong,
            &TenantLink::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TenantLink, _impl_._cached_size_),
        false,
    },
    &TenantLink::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TenantLink::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 76, 2> TenantLink::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::TenantLink>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TenantLink, _impl_.id_)}},
    // string pivot_template_id = 2 [json_name = "pivotTemplateId"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TenantLink, _impl_.pivot_template_id_)}},
    // string pivot_user_group_id = 3 [json_name = "pivotUserGroupId"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TenantLink, _impl_.pivot_user_group_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(TenantLink, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string pivot_template_id = 2 [json_name = "pivotTemplateId"];
    {PROTOBUF_FIELD_OFFSET(TenantLink, _impl_.pivot_template_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string pivot_user_group_id = 3 [json_name = "pivotUserGroupId"];
    {PROTOBUF_FIELD_OFFSET(TenantLink, _impl_.pivot_user_group_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\2\21\23\0\0\0\0"
    "kentik.mkp.v202407.TenantLink"
    "id"
    "pivot_template_id"
    "pivot_user_group_id"
  }},
};

PROTOBUF_NOINLINE void TenantLink::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.TenantLink)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.pivot_template_id_.ClearToEmpty();
  _impl_.pivot_user_group_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TenantLink::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TenantLink& this_ = static_cast<const TenantLink&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TenantLink::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TenantLink& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.TenantLink)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.TenantLink.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string pivot_template_id = 2 [json_name = "pivotTemplateId"];
          if (!this_._internal_pivot_template_id().empty()) {
            const std::string& _s = this_._internal_pivot_template_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.TenantLink.pivot_template_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string pivot_user_group_id = 3 [json_name = "pivotUserGroupId"];
          if (!this_._internal_pivot_user_group_id().empty()) {
            const std::string& _s = this_._internal_pivot_user_group_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.TenantLink.pivot_user_group_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.TenantLink)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TenantLink::ByteSizeLong(const MessageLite& base) {
          const TenantLink& this_ = static_cast<const TenantLink&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TenantLink::ByteSizeLong() const {
          const TenantLink& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.TenantLink)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 1 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string pivot_template_id = 2 [json_name = "pivotTemplateId"];
            if (!this_._internal_pivot_template_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_pivot_template_id());
            }
            // string pivot_user_group_id = 3 [json_name = "pivotUserGroupId"];
            if (!this_._internal_pivot_user_group_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_pivot_user_group_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TenantLink::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TenantLink*>(&to_msg);
  auto& from = static_cast<const TenantLink&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.TenantLink)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_pivot_template_id().empty()) {
    _this->_internal_set_pivot_template_id(from._internal_pivot_template_id());
  }
  if (!from._internal_pivot_user_group_id().empty()) {
    _this->_internal_set_pivot_user_group_id(from._internal_pivot_user_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TenantLink::CopyFrom(const TenantLink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.TenantLink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TenantLink::InternalSwap(TenantLink* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pivot_template_id_, &other->_impl_.pivot_template_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pivot_user_group_id_, &other->_impl_.pivot_user_group_id_, arena);
}

::google::protobuf::Metadata TenantLink::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Package::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Package>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Package, _impl_._has_bits_);
};

Package::Package(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.Package)
}
inline PROTOBUF_NDEBUG_INLINE Package::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::Package& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        alerts_{visibility, arena, from.alerts_},
        tenants_{visibility, arena, from.tenants_},
        id_(arena, from.id_),
        company_id_(arena, from.company_id_),
        name_(arena, from.name_),
        description_(arena, from.description_),
        icon_(arena, from.icon_),
        color_(arena, from.color_) {}

Package::Package(
    ::google::protobuf::Arena* arena,
    const Package& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Package* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.assets_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Asset>(
                              arena, *from._impl_.assets_)
                        : nullptr;
  _impl_.is_default_ = from._impl_.is_default_;

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.Package)
}
inline PROTOBUF_NDEBUG_INLINE Package::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        alerts_{visibility, arena},
        tenants_{visibility, arena},
        id_(arena),
        company_id_(arena),
        name_(arena),
        description_(arena),
        icon_(arena),
        color_(arena) {}

inline void Package::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, assets_),
           0,
           offsetof(Impl_, is_default_) -
               offsetof(Impl_, assets_) +
               sizeof(Impl_::is_default_));
}
Package::~Package() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.Package)
  SharedDtor(*this);
}
inline void Package::SharedDtor(MessageLite& self) {
  Package& this_ = static_cast<Package&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.company_id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.icon_.Destroy();
  this_._impl_.color_.Destroy();
  delete this_._impl_.assets_;
  this_._impl_.~Impl_();
}

inline void* Package::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Package(arena);
}
constexpr auto Package::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Package, _impl_.alerts_) +
          decltype(Package::_impl_.alerts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Package, _impl_.tenants_) +
          decltype(Package::_impl_.tenants_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Package), alignof(Package), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Package::PlacementNew_,
                                 sizeof(Package),
                                 alignof(Package));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Package::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Package_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Package::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Package>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Package::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Package>(), &Package::ByteSizeLong,
            &Package::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Package, _impl_._cached_size_),
        false,
    },
    &Package::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Package::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 3, 79, 2> Package::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Package, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Package>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Package, _impl_.id_)}},
    // string company_id = 2 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Package, _impl_.company_id_)}},
    // string name = 3 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Package, _impl_.name_)}},
    // string description = 4 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Package, _impl_.description_)}},
    // string icon = 5 [json_name = "icon", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Package, _impl_.icon_)}},
    // string color = 6 [json_name = "color", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Package, _impl_.color_)}},
    // repeated .kentik.mkp.v202407.Alert alerts = 7 [json_name = "alerts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Package, _impl_.alerts_)}},
    // .kentik.mkp.v202407.Asset assets = 8 [json_name = "assets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {66, 0, 1, PROTOBUF_FIELD_OFFSET(Package, _impl_.assets_)}},
    // bool is_default = 9 [json_name = "isDefault", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Package, _impl_.is_default_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(Package, _impl_.is_default_)}},
    // repeated .kentik.mkp.v202407.TenantLink tenants = 10 [json_name = "tenants", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 2, PROTOBUF_FIELD_OFFSET(Package, _impl_.tenants_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Package, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string company_id = 2 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Package, _impl_.company_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 3 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Package, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 4 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Package, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string icon = 5 [json_name = "icon", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Package, _impl_.icon_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string color = 6 [json_name = "color", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Package, _impl_.color_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .kentik.mkp.v202407.Alert alerts = 7 [json_name = "alerts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Package, _impl_.alerts_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.mkp.v202407.Asset assets = 8 [json_name = "assets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Package, _impl_.assets_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_default = 9 [json_name = "isDefault", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Package, _impl_.is_default_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // repeated .kentik.mkp.v202407.TenantLink tenants = 10 [json_name = "tenants", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Package, _impl_.tenants_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Alert>()},
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Asset>()},
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::TenantLink>()},
  }}, {{
    "\32\2\12\4\13\4\5\0\0\0\0\0\0\0\0\0"
    "kentik.mkp.v202407.Package"
    "id"
    "company_id"
    "name"
    "description"
    "icon"
    "color"
  }},
};

PROTOBUF_NOINLINE void Package::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.Package)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.alerts_.Clear();
  _impl_.tenants_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.company_id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.icon_.ClearToEmpty();
  _impl_.color_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.assets_ != nullptr);
    _impl_.assets_->Clear();
  }
  _impl_.is_default_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Package::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Package& this_ = static_cast<const Package&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Package::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Package& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.Package)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Package.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string company_id = 2 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_company_id().empty()) {
            const std::string& _s = this_._internal_company_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Package.company_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string name = 3 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Package.name");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string description = 4 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Package.description");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string icon = 5 [json_name = "icon", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_icon().empty()) {
            const std::string& _s = this_._internal_icon();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Package.icon");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string color = 6 [json_name = "color", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_color().empty()) {
            const std::string& _s = this_._internal_color();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Package.color");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // repeated .kentik.mkp.v202407.Alert alerts = 7 [json_name = "alerts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_alerts_size());
               i < n; i++) {
            const auto& repfield = this_._internal_alerts().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.mkp.v202407.Asset assets = 8 [json_name = "assets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.assets_, this_._impl_.assets_->GetCachedSize(), target,
                stream);
          }

          // bool is_default = 9 [json_name = "isDefault", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_is_default() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                9, this_._internal_is_default(), target);
          }

          // repeated .kentik.mkp.v202407.TenantLink tenants = 10 [json_name = "tenants", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_tenants_size());
               i < n; i++) {
            const auto& repfield = this_._internal_tenants().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    10, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.Package)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Package::ByteSizeLong(const MessageLite& base) {
          const Package& this_ = static_cast<const Package&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Package::ByteSizeLong() const {
          const Package& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.Package)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.mkp.v202407.Alert alerts = 7 [json_name = "alerts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_alerts_size();
              for (const auto& msg : this_._internal_alerts()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .kentik.mkp.v202407.TenantLink tenants = 10 [json_name = "tenants", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_tenants_size();
              for (const auto& msg : this_._internal_tenants()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string company_id = 2 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_company_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_company_id());
            }
            // string name = 3 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string description = 4 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // string icon = 5 [json_name = "icon", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_icon().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_icon());
            }
            // string color = 6 [json_name = "color", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_color().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_color());
            }
          }
           {
            // .kentik.mkp.v202407.Asset assets = 8 [json_name = "assets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.assets_);
            }
          }
           {
            // bool is_default = 9 [json_name = "isDefault", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_is_default() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Package::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Package*>(&to_msg);
  auto& from = static_cast<const Package&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.Package)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_alerts()->MergeFrom(
      from._internal_alerts());
  _this->_internal_mutable_tenants()->MergeFrom(
      from._internal_tenants());
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_company_id().empty()) {
    _this->_internal_set_company_id(from._internal_company_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_icon().empty()) {
    _this->_internal_set_icon(from._internal_icon());
  }
  if (!from._internal_color().empty()) {
    _this->_internal_set_color(from._internal_color());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.assets_ != nullptr);
    if (_this->_impl_.assets_ == nullptr) {
      _this->_impl_.assets_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Asset>(arena, *from._impl_.assets_);
    } else {
      _this->_impl_.assets_->MergeFrom(*from._impl_.assets_);
    }
  }
  if (from._internal_is_default() != 0) {
    _this->_impl_.is_default_ = from._impl_.is_default_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Package::CopyFrom(const Package& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.Package)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Package::InternalSwap(Package* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.alerts_.InternalSwap(&other->_impl_.alerts_);
  _impl_.tenants_.InternalSwap(&other->_impl_.tenants_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.company_id_, &other->_impl_.company_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.icon_, &other->_impl_.icon_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.color_, &other->_impl_.color_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Package, _impl_.is_default_)
      + sizeof(Package::_impl_.is_default_)
      - PROTOBUF_FIELD_OFFSET(Package, _impl_.assets_)>(
          reinterpret_cast<char*>(&_impl_.assets_),
          reinterpret_cast<char*>(&other->_impl_.assets_));
}

::google::protobuf::Metadata Package::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CustomDimension::_Internal {
 public:
};

CustomDimension::CustomDimension(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.CustomDimension)
}
inline PROTOBUF_NDEBUG_INLINE CustomDimension::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::CustomDimension& from_msg)
      : dimension_(arena, from.dimension_),
        populator_(arena, from.populator_),
        _cached_size_{0} {}

CustomDimension::CustomDimension(
    ::google::protobuf::Arena* arena,
    const CustomDimension& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CustomDimension* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.CustomDimension)
}
inline PROTOBUF_NDEBUG_INLINE CustomDimension::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : dimension_(arena),
        populator_(arena),
        _cached_size_{0} {}

inline void CustomDimension::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CustomDimension::~CustomDimension() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.CustomDimension)
  SharedDtor(*this);
}
inline void CustomDimension::SharedDtor(MessageLite& self) {
  CustomDimension& this_ = static_cast<CustomDimension&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.dimension_.Destroy();
  this_._impl_.populator_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CustomDimension::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CustomDimension(arena);
}
constexpr auto CustomDimension::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CustomDimension),
                                            alignof(CustomDimension));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CustomDimension::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CustomDimension_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CustomDimension::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CustomDimension>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CustomDimension::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CustomDimension>(), &CustomDimension::ByteSizeLong,
            &CustomDimension::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CustomDimension, _impl_._cached_size_),
        false,
    },
    &CustomDimension::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CustomDimension::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 61, 2> CustomDimension::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::CustomDimension>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string populator = 2 [json_name = "populator"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CustomDimension, _impl_.populator_)}},
    // string dimension = 1 [json_name = "dimension"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CustomDimension, _impl_.dimension_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string dimension = 1 [json_name = "dimension"];
    {PROTOBUF_FIELD_OFFSET(CustomDimension, _impl_.dimension_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string populator = 2 [json_name = "populator"];
    {PROTOBUF_FIELD_OFFSET(CustomDimension, _impl_.populator_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\11\11\0\0\0\0\0"
    "kentik.mkp.v202407.CustomDimension"
    "dimension"
    "populator"
  }},
};

PROTOBUF_NOINLINE void CustomDimension::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.CustomDimension)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dimension_.ClearToEmpty();
  _impl_.populator_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CustomDimension::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CustomDimension& this_ = static_cast<const CustomDimension&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CustomDimension::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CustomDimension& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.CustomDimension)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string dimension = 1 [json_name = "dimension"];
          if (!this_._internal_dimension().empty()) {
            const std::string& _s = this_._internal_dimension();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.CustomDimension.dimension");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string populator = 2 [json_name = "populator"];
          if (!this_._internal_populator().empty()) {
            const std::string& _s = this_._internal_populator();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.CustomDimension.populator");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.CustomDimension)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CustomDimension::ByteSizeLong(const MessageLite& base) {
          const CustomDimension& this_ = static_cast<const CustomDimension&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CustomDimension::ByteSizeLong() const {
          const CustomDimension& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.CustomDimension)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string dimension = 1 [json_name = "dimension"];
            if (!this_._internal_dimension().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_dimension());
            }
            // string populator = 2 [json_name = "populator"];
            if (!this_._internal_populator().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_populator());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CustomDimension::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CustomDimension*>(&to_msg);
  auto& from = static_cast<const CustomDimension&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.CustomDimension)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_dimension().empty()) {
    _this->_internal_set_dimension(from._internal_dimension());
  }
  if (!from._internal_populator().empty()) {
    _this->_internal_set_populator(from._internal_populator());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CustomDimension::CopyFrom(const CustomDimension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.CustomDimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CustomDimension::InternalSwap(CustomDimension* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dimension_, &other->_impl_.dimension_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.populator_, &other->_impl_.populator_, arena);
}

::google::protobuf::Metadata CustomDimension::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Devices::_Internal {
 public:
};

Devices::Devices(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.Devices)
}
inline PROTOBUF_NDEBUG_INLINE Devices::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::Devices& from_msg)
      : device_types_{visibility, arena, from.device_types_},
        device_labels_{visibility, arena, from.device_labels_},
        _device_labels_cached_byte_size_{0},
        device_sites_{visibility, arena, from.device_sites_},
        _device_sites_cached_byte_size_{0},
        device_name_{visibility, arena, from.device_name_},
        _cached_size_{0} {}

Devices::Devices(
    ::google::protobuf::Arena* arena,
    const Devices& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Devices* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.all_devices_ = from._impl_.all_devices_;

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.Devices)
}
inline PROTOBUF_NDEBUG_INLINE Devices::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_types_{visibility, arena},
        device_labels_{visibility, arena},
        _device_labels_cached_byte_size_{0},
        device_sites_{visibility, arena},
        _device_sites_cached_byte_size_{0},
        device_name_{visibility, arena},
        _cached_size_{0} {}

inline void Devices::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.all_devices_ = {};
}
Devices::~Devices() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.Devices)
  SharedDtor(*this);
}
inline void Devices::SharedDtor(MessageLite& self) {
  Devices& this_ = static_cast<Devices&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Devices::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Devices(arena);
}
constexpr auto Devices::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Devices, _impl_.device_types_) +
          decltype(Devices::_impl_.device_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Devices, _impl_.device_labels_) +
          decltype(Devices::_impl_.device_labels_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Devices, _impl_.device_sites_) +
          decltype(Devices::_impl_.device_sites_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Devices, _impl_.device_name_) +
          decltype(Devices::_impl_.device_name_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Devices), alignof(Devices), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Devices::PlacementNew_,
                                 sizeof(Devices),
                                 alignof(Devices));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Devices::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Devices_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Devices::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Devices>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Devices::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Devices>(), &Devices::ByteSizeLong,
            &Devices::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Devices, _impl_._cached_size_),
        false,
    },
    &Devices::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Devices::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 58, 2> Devices::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Devices>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool all_devices = 1 [json_name = "allDevices"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Devices, _impl_.all_devices_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Devices, _impl_.all_devices_)}},
    // repeated string device_types = 2 [json_name = "deviceTypes"];
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Devices, _impl_.device_types_)}},
    // repeated uint32 device_labels = 3 [json_name = "deviceLabels"];
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Devices, _impl_.device_labels_)}},
    // repeated uint32 device_sites = 4 [json_name = "deviceSites"];
    {::_pbi::TcParser::FastV32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Devices, _impl_.device_sites_)}},
    // repeated string device_name = 5 [json_name = "deviceName"];
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Devices, _impl_.device_name_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool all_devices = 1 [json_name = "allDevices"];
    {PROTOBUF_FIELD_OFFSET(Devices, _impl_.all_devices_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // repeated string device_types = 2 [json_name = "deviceTypes"];
    {PROTOBUF_FIELD_OFFSET(Devices, _impl_.device_types_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated uint32 device_labels = 3 [json_name = "deviceLabels"];
    {PROTOBUF_FIELD_OFFSET(Devices, _impl_.device_labels_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated uint32 device_sites = 4 [json_name = "deviceSites"];
    {PROTOBUF_FIELD_OFFSET(Devices, _impl_.device_sites_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated string device_name = 5 [json_name = "deviceName"];
    {PROTOBUF_FIELD_OFFSET(Devices, _impl_.device_name_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\32\0\14\0\0\13\0\0"
    "kentik.mkp.v202407.Devices"
    "device_types"
    "device_name"
  }},
};

PROTOBUF_NOINLINE void Devices::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.Devices)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_types_.Clear();
  _impl_.device_labels_.Clear();
  _impl_.device_sites_.Clear();
  _impl_.device_name_.Clear();
  _impl_.all_devices_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Devices::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Devices& this_ = static_cast<const Devices&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Devices::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Devices& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.Devices)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool all_devices = 1 [json_name = "allDevices"];
          if (this_._internal_all_devices() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_all_devices(), target);
          }

          // repeated string device_types = 2 [json_name = "deviceTypes"];
          for (int i = 0, n = this_._internal_device_types_size(); i < n; ++i) {
            const auto& s = this_._internal_device_types().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Devices.device_types");
            target = stream->WriteString(2, s, target);
          }

          // repeated uint32 device_labels = 3 [json_name = "deviceLabels"];
          {
            int byte_size = this_._impl_._device_labels_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  3, this_._internal_device_labels(), byte_size, target);
            }
          }

          // repeated uint32 device_sites = 4 [json_name = "deviceSites"];
          {
            int byte_size = this_._impl_._device_sites_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  4, this_._internal_device_sites(), byte_size, target);
            }
          }

          // repeated string device_name = 5 [json_name = "deviceName"];
          for (int i = 0, n = this_._internal_device_name_size(); i < n; ++i) {
            const auto& s = this_._internal_device_name().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Devices.device_name");
            target = stream->WriteString(5, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.Devices)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Devices::ByteSizeLong(const MessageLite& base) {
          const Devices& this_ = static_cast<const Devices&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Devices::ByteSizeLong() const {
          const Devices& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.Devices)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string device_types = 2 [json_name = "deviceTypes"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_device_types().size());
              for (int i = 0, n = this_._internal_device_types().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_device_types().Get(i));
              }
            }
            // repeated uint32 device_labels = 3 [json_name = "deviceLabels"];
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_device_labels(), 1,
                      this_._impl_._device_labels_cached_byte_size_);
            }
            // repeated uint32 device_sites = 4 [json_name = "deviceSites"];
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_device_sites(), 1,
                      this_._impl_._device_sites_cached_byte_size_);
            }
            // repeated string device_name = 5 [json_name = "deviceName"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_device_name().size());
              for (int i = 0, n = this_._internal_device_name().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_device_name().Get(i));
              }
            }
          }
           {
            // bool all_devices = 1 [json_name = "allDevices"];
            if (this_._internal_all_devices() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Devices::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Devices*>(&to_msg);
  auto& from = static_cast<const Devices&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.Devices)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_device_types()->MergeFrom(from._internal_device_types());
  _this->_internal_mutable_device_labels()->MergeFrom(from._internal_device_labels());
  _this->_internal_mutable_device_sites()->MergeFrom(from._internal_device_sites());
  _this->_internal_mutable_device_name()->MergeFrom(from._internal_device_name());
  if (from._internal_all_devices() != 0) {
    _this->_impl_.all_devices_ = from._impl_.all_devices_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Devices::CopyFrom(const Devices& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.Devices)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Devices::InternalSwap(Devices* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.device_types_.InternalSwap(&other->_impl_.device_types_);
  _impl_.device_labels_.InternalSwap(&other->_impl_.device_labels_);
  _impl_.device_sites_.InternalSwap(&other->_impl_.device_sites_);
  _impl_.device_name_.InternalSwap(&other->_impl_.device_name_);
        swap(_impl_.all_devices_, other->_impl_.all_devices_);
}

::google::protobuf::Metadata Devices::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FilterField::_Internal {
 public:
};

FilterField::FilterField(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.FilterField)
}
inline PROTOBUF_NDEBUG_INLINE FilterField::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::FilterField& from_msg)
      : filter_field_(arena, from.filter_field_),
        operator__(arena, from.operator__),
        filter_value_(arena, from.filter_value_),
        _cached_size_{0} {}

FilterField::FilterField(
    ::google::protobuf::Arena* arena,
    const FilterField& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FilterField* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.FilterField)
}
inline PROTOBUF_NDEBUG_INLINE FilterField::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : filter_field_(arena),
        operator__(arena),
        filter_value_(arena),
        _cached_size_{0} {}

inline void FilterField::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
FilterField::~FilterField() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.FilterField)
  SharedDtor(*this);
}
inline void FilterField::SharedDtor(MessageLite& self) {
  FilterField& this_ = static_cast<FilterField&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.filter_field_.Destroy();
  this_._impl_.operator__.Destroy();
  this_._impl_.filter_value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* FilterField::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FilterField(arena);
}
constexpr auto FilterField::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(FilterField),
                                            alignof(FilterField));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FilterField::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FilterField_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FilterField::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FilterField>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FilterField::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FilterField>(), &FilterField::ByteSizeLong,
            &FilterField::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FilterField, _impl_._cached_size_),
        false,
    },
    &FilterField::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FilterField::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 71, 2> FilterField::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::FilterField>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string filter_field = 1 [json_name = "filterField"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FilterField, _impl_.filter_field_)}},
    // string operator = 2 [json_name = "operator"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FilterField, _impl_.operator__)}},
    // string filter_value = 3 [json_name = "filterValue"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(FilterField, _impl_.filter_value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string filter_field = 1 [json_name = "filterField"];
    {PROTOBUF_FIELD_OFFSET(FilterField, _impl_.filter_field_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string operator = 2 [json_name = "operator"];
    {PROTOBUF_FIELD_OFFSET(FilterField, _impl_.operator__), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string filter_value = 3 [json_name = "filterValue"];
    {PROTOBUF_FIELD_OFFSET(FilterField, _impl_.filter_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\14\10\14\0\0\0\0"
    "kentik.mkp.v202407.FilterField"
    "filter_field"
    "operator"
    "filter_value"
  }},
};

PROTOBUF_NOINLINE void FilterField::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.FilterField)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.filter_field_.ClearToEmpty();
  _impl_.operator__.ClearToEmpty();
  _impl_.filter_value_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FilterField::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FilterField& this_ = static_cast<const FilterField&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FilterField::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FilterField& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.FilterField)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string filter_field = 1 [json_name = "filterField"];
          if (!this_._internal_filter_field().empty()) {
            const std::string& _s = this_._internal_filter_field();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.FilterField.filter_field");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string operator = 2 [json_name = "operator"];
          if (!this_._internal_operator_().empty()) {
            const std::string& _s = this_._internal_operator_();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.FilterField.operator");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string filter_value = 3 [json_name = "filterValue"];
          if (!this_._internal_filter_value().empty()) {
            const std::string& _s = this_._internal_filter_value();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.FilterField.filter_value");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.FilterField)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FilterField::ByteSizeLong(const MessageLite& base) {
          const FilterField& this_ = static_cast<const FilterField&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FilterField::ByteSizeLong() const {
          const FilterField& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.FilterField)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string filter_field = 1 [json_name = "filterField"];
            if (!this_._internal_filter_field().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_filter_field());
            }
            // string operator = 2 [json_name = "operator"];
            if (!this_._internal_operator_().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_operator_());
            }
            // string filter_value = 3 [json_name = "filterValue"];
            if (!this_._internal_filter_value().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_filter_value());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FilterField::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FilterField*>(&to_msg);
  auto& from = static_cast<const FilterField&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.FilterField)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_filter_field().empty()) {
    _this->_internal_set_filter_field(from._internal_filter_field());
  }
  if (!from._internal_operator_().empty()) {
    _this->_internal_set_operator_(from._internal_operator_());
  }
  if (!from._internal_filter_value().empty()) {
    _this->_internal_set_filter_value(from._internal_filter_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FilterField::CopyFrom(const FilterField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.FilterField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FilterField::InternalSwap(FilterField* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filter_field_, &other->_impl_.filter_field_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.operator__, &other->_impl_.operator__, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filter_value_, &other->_impl_.filter_value_, arena);
}

::google::protobuf::Metadata FilterField::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Filter::_Internal {
 public:
};

Filter::Filter(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.Filter)
}
inline PROTOBUF_NDEBUG_INLINE Filter::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::Filter& from_msg)
      : saved_filters_{visibility, arena, from.saved_filters_},
        filters_{visibility, arena, from.filters_},
        filter_groups_{visibility, arena, from.filter_groups_},
        metric_{visibility, arena, from.metric_},
        name_(arena, from.name_),
        connector_(arena, from.connector_),
        auto_added_(arena, from.auto_added_),
        _cached_size_{0} {}

Filter::Filter(
    ::google::protobuf::Arena* arena,
    const Filter& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Filter* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, named_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, named_),
           offsetof(Impl_, not__) -
               offsetof(Impl_, named_) +
               sizeof(Impl_::not__));

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.Filter)
}
inline PROTOBUF_NDEBUG_INLINE Filter::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : saved_filters_{visibility, arena},
        filters_{visibility, arena},
        filter_groups_{visibility, arena},
        metric_{visibility, arena},
        name_(arena),
        connector_(arena),
        auto_added_(arena),
        _cached_size_{0} {}

inline void Filter::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, named_),
           0,
           offsetof(Impl_, not__) -
               offsetof(Impl_, named_) +
               sizeof(Impl_::not__));
}
Filter::~Filter() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.Filter)
  SharedDtor(*this);
}
inline void Filter::SharedDtor(MessageLite& self) {
  Filter& this_ = static_cast<Filter&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.connector_.Destroy();
  this_._impl_.auto_added_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Filter::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Filter(arena);
}
constexpr auto Filter::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Filter, _impl_.saved_filters_) +
          decltype(Filter::_impl_.saved_filters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Filter, _impl_.filters_) +
          decltype(Filter::_impl_.filters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Filter, _impl_.filter_groups_) +
          decltype(Filter::_impl_.filter_groups_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Filter, _impl_.metric_) +
          decltype(Filter::_impl_.metric_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Filter), alignof(Filter), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Filter::PlacementNew_,
                                 sizeof(Filter),
                                 alignof(Filter));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Filter::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Filter_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Filter::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Filter>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Filter::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Filter>(), &Filter::ByteSizeLong,
            &Filter::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Filter, _impl_._cached_size_),
        false,
    },
    &Filter::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Filter::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 2, 84, 2> Filter::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Filter>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Filter, _impl_.name_)}},
    // bool named = 2 [json_name = "named"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Filter, _impl_.named_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Filter, _impl_.named_)}},
    // string connector = 3 [json_name = "connector"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Filter, _impl_.connector_)}},
    // bool not = 4 [json_name = "not"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Filter, _impl_.not__), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Filter, _impl_.not__)}},
    // string auto_added = 5 [json_name = "autoAdded"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Filter, _impl_.auto_added_)}},
    // repeated string saved_filters = 6 [json_name = "savedFilters"];
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Filter, _impl_.saved_filters_)}},
    // repeated .kentik.mkp.v202407.FilterField filters = 7 [json_name = "filters"];
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Filter, _impl_.filters_)}},
    // repeated .kentik.mkp.v202407.Filter filter_groups = 8 [json_name = "filterGroups"];
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 1, PROTOBUF_FIELD_OFFSET(Filter, _impl_.filter_groups_)}},
    // repeated string metric = 9 [json_name = "metric"];
    {::_pbi::TcParser::FastUR1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Filter, _impl_.metric_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(Filter, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool named = 2 [json_name = "named"];
    {PROTOBUF_FIELD_OFFSET(Filter, _impl_.named_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string connector = 3 [json_name = "connector"];
    {PROTOBUF_FIELD_OFFSET(Filter, _impl_.connector_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool not = 4 [json_name = "not"];
    {PROTOBUF_FIELD_OFFSET(Filter, _impl_.not__), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string auto_added = 5 [json_name = "autoAdded"];
    {PROTOBUF_FIELD_OFFSET(Filter, _impl_.auto_added_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string saved_filters = 6 [json_name = "savedFilters"];
    {PROTOBUF_FIELD_OFFSET(Filter, _impl_.saved_filters_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .kentik.mkp.v202407.FilterField filters = 7 [json_name = "filters"];
    {PROTOBUF_FIELD_OFFSET(Filter, _impl_.filters_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .kentik.mkp.v202407.Filter filter_groups = 8 [json_name = "filterGroups"];
    {PROTOBUF_FIELD_OFFSET(Filter, _impl_.filter_groups_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string metric = 9 [json_name = "metric"];
    {PROTOBUF_FIELD_OFFSET(Filter, _impl_.metric_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::FilterField>()},
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Filter>()},
  }}, {{
    "\31\4\0\11\0\12\15\0\0\6\0\0\0\0\0\0"
    "kentik.mkp.v202407.Filter"
    "name"
    "connector"
    "auto_added"
    "saved_filters"
    "metric"
  }},
};

PROTOBUF_NOINLINE void Filter::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.Filter)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.saved_filters_.Clear();
  _impl_.filters_.Clear();
  _impl_.filter_groups_.Clear();
  _impl_.metric_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.connector_.ClearToEmpty();
  _impl_.auto_added_.ClearToEmpty();
  ::memset(&_impl_.named_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.not__) -
      reinterpret_cast<char*>(&_impl_.named_)) + sizeof(_impl_.not__));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Filter::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Filter& this_ = static_cast<const Filter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Filter::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Filter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.Filter)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1 [json_name = "name"];
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Filter.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bool named = 2 [json_name = "named"];
          if (this_._internal_named() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_named(), target);
          }

          // string connector = 3 [json_name = "connector"];
          if (!this_._internal_connector().empty()) {
            const std::string& _s = this_._internal_connector();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Filter.connector");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // bool not = 4 [json_name = "not"];
          if (this_._internal_not_() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_not_(), target);
          }

          // string auto_added = 5 [json_name = "autoAdded"];
          if (!this_._internal_auto_added().empty()) {
            const std::string& _s = this_._internal_auto_added();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Filter.auto_added");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // repeated string saved_filters = 6 [json_name = "savedFilters"];
          for (int i = 0, n = this_._internal_saved_filters_size(); i < n; ++i) {
            const auto& s = this_._internal_saved_filters().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Filter.saved_filters");
            target = stream->WriteString(6, s, target);
          }

          // repeated .kentik.mkp.v202407.FilterField filters = 7 [json_name = "filters"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_filters_size());
               i < n; i++) {
            const auto& repfield = this_._internal_filters().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .kentik.mkp.v202407.Filter filter_groups = 8 [json_name = "filterGroups"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_filter_groups_size());
               i < n; i++) {
            const auto& repfield = this_._internal_filter_groups().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    8, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated string metric = 9 [json_name = "metric"];
          for (int i = 0, n = this_._internal_metric_size(); i < n; ++i) {
            const auto& s = this_._internal_metric().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Filter.metric");
            target = stream->WriteString(9, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.Filter)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Filter::ByteSizeLong(const MessageLite& base) {
          const Filter& this_ = static_cast<const Filter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Filter::ByteSizeLong() const {
          const Filter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.Filter)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string saved_filters = 6 [json_name = "savedFilters"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_saved_filters().size());
              for (int i = 0, n = this_._internal_saved_filters().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_saved_filters().Get(i));
              }
            }
            // repeated .kentik.mkp.v202407.FilterField filters = 7 [json_name = "filters"];
            {
              total_size += 1UL * this_._internal_filters_size();
              for (const auto& msg : this_._internal_filters()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .kentik.mkp.v202407.Filter filter_groups = 8 [json_name = "filterGroups"];
            {
              total_size += 1UL * this_._internal_filter_groups_size();
              for (const auto& msg : this_._internal_filter_groups()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string metric = 9 [json_name = "metric"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metric().size());
              for (int i = 0, n = this_._internal_metric().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_metric().Get(i));
              }
            }
          }
           {
            // string name = 1 [json_name = "name"];
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string connector = 3 [json_name = "connector"];
            if (!this_._internal_connector().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_connector());
            }
            // string auto_added = 5 [json_name = "autoAdded"];
            if (!this_._internal_auto_added().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_auto_added());
            }
            // bool named = 2 [json_name = "named"];
            if (this_._internal_named() != 0) {
              total_size += 2;
            }
            // bool not = 4 [json_name = "not"];
            if (this_._internal_not_() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Filter::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Filter*>(&to_msg);
  auto& from = static_cast<const Filter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.Filter)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_saved_filters()->MergeFrom(from._internal_saved_filters());
  _this->_internal_mutable_filters()->MergeFrom(
      from._internal_filters());
  _this->_internal_mutable_filter_groups()->MergeFrom(
      from._internal_filter_groups());
  _this->_internal_mutable_metric()->MergeFrom(from._internal_metric());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_connector().empty()) {
    _this->_internal_set_connector(from._internal_connector());
  }
  if (!from._internal_auto_added().empty()) {
    _this->_internal_set_auto_added(from._internal_auto_added());
  }
  if (from._internal_named() != 0) {
    _this->_impl_.named_ = from._impl_.named_;
  }
  if (from._internal_not_() != 0) {
    _this->_impl_.not__ = from._impl_.not__;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Filter::CopyFrom(const Filter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.Filter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Filter::InternalSwap(Filter* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.saved_filters_.InternalSwap(&other->_impl_.saved_filters_);
  _impl_.filters_.InternalSwap(&other->_impl_.filters_);
  _impl_.filter_groups_.InternalSwap(&other->_impl_.filter_groups_);
  _impl_.metric_.InternalSwap(&other->_impl_.metric_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.connector_, &other->_impl_.connector_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.auto_added_, &other->_impl_.auto_added_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Filter, _impl_.not__)
      + sizeof(Filter::_impl_.not__)
      - PROTOBUF_FIELD_OFFSET(Filter, _impl_.named_)>(
          reinterpret_cast<char*>(&_impl_.named_),
          reinterpret_cast<char*>(&other->_impl_.named_));
}

::google::protobuf::Metadata Filter::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Tenant::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Tenant>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Tenant, _impl_._has_bits_);
};

void Tenant::clear_users() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.users_.Clear();
}
Tenant::Tenant(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.Tenant)
}
inline PROTOBUF_NDEBUG_INLINE Tenant::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::Tenant& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        alerts_{visibility, arena, from.alerts_},
        custom_dimensions_{visibility, arena, from.custom_dimensions_},
        packages_{visibility, arena, from.packages_},
        users_{visibility, arena, from.users_},
        id_(arena, from.id_),
        company_id_(arena, from.company_id_),
        name_(arena, from.name_),
        description_(arena, from.description_),
        type_(arena, from.type_),
        asn_(arena, from.asn_),
        cidr_(arena, from.cidr_),
        interface_name_(arena, from.interface_name_),
        snmp_alias_(arena, from.snmp_alias_),
        template_id_(arena, from.template_id_) {}

Tenant::Tenant(
    ::google::protobuf::Arena* arena,
    const Tenant& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Tenant* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.devices_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Devices>(
                              arena, *from._impl_.devices_)
                        : nullptr;
  _impl_.filters_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Filter>(
                              arena, *from._impl_.filters_)
                        : nullptr;
  _impl_.assets_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Asset>(
                              arena, *from._impl_.assets_)
                        : nullptr;
  _impl_.enabled_ = from._impl_.enabled_;

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.Tenant)
}
inline PROTOBUF_NDEBUG_INLINE Tenant::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        alerts_{visibility, arena},
        custom_dimensions_{visibility, arena},
        packages_{visibility, arena},
        users_{visibility, arena},
        id_(arena),
        company_id_(arena),
        name_(arena),
        description_(arena),
        type_(arena),
        asn_(arena),
        cidr_(arena),
        interface_name_(arena),
        snmp_alias_(arena),
        template_id_(arena) {}

inline void Tenant::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, devices_),
           0,
           offsetof(Impl_, enabled_) -
               offsetof(Impl_, devices_) +
               sizeof(Impl_::enabled_));
}
Tenant::~Tenant() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.Tenant)
  SharedDtor(*this);
}
inline void Tenant::SharedDtor(MessageLite& self) {
  Tenant& this_ = static_cast<Tenant&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.company_id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.type_.Destroy();
  this_._impl_.asn_.Destroy();
  this_._impl_.cidr_.Destroy();
  this_._impl_.interface_name_.Destroy();
  this_._impl_.snmp_alias_.Destroy();
  this_._impl_.template_id_.Destroy();
  delete this_._impl_.devices_;
  delete this_._impl_.filters_;
  delete this_._impl_.assets_;
  this_._impl_.~Impl_();
}

inline void* Tenant::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Tenant(arena);
}
constexpr auto Tenant::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Tenant, _impl_.alerts_) +
          decltype(Tenant::_impl_.alerts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Tenant, _impl_.custom_dimensions_) +
          decltype(Tenant::_impl_.custom_dimensions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Tenant, _impl_.packages_) +
          decltype(Tenant::_impl_.packages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Tenant, _impl_.users_) +
          decltype(Tenant::_impl_.users_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Tenant), alignof(Tenant), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Tenant::PlacementNew_,
                                 sizeof(Tenant),
                                 alignof(Tenant));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Tenant::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Tenant_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Tenant::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Tenant>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Tenant::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Tenant>(), &Tenant::ByteSizeLong,
            &Tenant::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Tenant, _impl_._cached_size_),
        false,
    },
    &Tenant::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Tenant::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 18, 7, 123, 2> Tenant::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Tenant, _impl_._has_bits_),
    0, // no _extensions_
    18, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294705152,  // skipmap
    offsetof(decltype(_table_), field_entries),
    18,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Tenant>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Tenant, _impl_.id_)}},
    // string company_id = 2 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Tenant, _impl_.company_id_)}},
    // string name = 3 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Tenant, _impl_.name_)}},
    // string description = 4 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Tenant, _impl_.description_)}},
    // string type = 5 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Tenant, _impl_.type_)}},
    // bool enabled = 6 [json_name = "enabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Tenant, _impl_.enabled_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Tenant, _impl_.enabled_)}},
    // repeated .kentik.mkp.v202407.Alert alerts = 7 [json_name = "alerts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Tenant, _impl_.alerts_)}},
    // string asn = 8 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Tenant, _impl_.asn_)}},
    // string cidr = 9 [json_name = "cidr", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Tenant, _impl_.cidr_)}},
    // repeated .kentik.mkp.v202407.CustomDimension custom_dimensions = 10 [json_name = "customDimensions", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 1, PROTOBUF_FIELD_OFFSET(Tenant, _impl_.custom_dimensions_)}},
    // .kentik.mkp.v202407.Devices devices = 11 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {90, 0, 2, PROTOBUF_FIELD_OFFSET(Tenant, _impl_.devices_)}},
    // .kentik.mkp.v202407.Filter filters = 12 [json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {98, 1, 3, PROTOBUF_FIELD_OFFSET(Tenant, _impl_.filters_)}},
    // string interface_name = 13 [json_name = "interfaceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(Tenant, _impl_.interface_name_)}},
    // string snmp_alias = 14 [json_name = "snmpAlias", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(Tenant, _impl_.snmp_alias_)}},
    // .kentik.mkp.v202407.Asset assets = 15 [json_name = "assets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {122, 2, 4, PROTOBUF_FIELD_OFFSET(Tenant, _impl_.assets_)}},
    // repeated .kentik.mkp.v202407.Package packages = 16 [json_name = "packages", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR2,
     {386, 63, 5, PROTOBUF_FIELD_OFFSET(Tenant, _impl_.packages_)}},
    // repeated .kentik.user.v202211.User users = 17 [json_name = "users", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR2,
     {394, 63, 6, PROTOBUF_FIELD_OFFSET(Tenant, _impl_.users_)}},
    // string template_id = 18 [json_name = "templateId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {402, 63, 0, PROTOBUF_FIELD_OFFSET(Tenant, _impl_.template_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Tenant, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string company_id = 2 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Tenant, _impl_.company_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 3 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Tenant, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 4 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Tenant, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 5 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Tenant, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool enabled = 6 [json_name = "enabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Tenant, _impl_.enabled_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // repeated .kentik.mkp.v202407.Alert alerts = 7 [json_name = "alerts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Tenant, _impl_.alerts_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string asn = 8 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Tenant, _impl_.asn_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string cidr = 9 [json_name = "cidr", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Tenant, _impl_.cidr_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .kentik.mkp.v202407.CustomDimension custom_dimensions = 10 [json_name = "customDimensions", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Tenant, _impl_.custom_dimensions_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.mkp.v202407.Devices devices = 11 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Tenant, _impl_.devices_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.mkp.v202407.Filter filters = 12 [json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Tenant, _impl_.filters_), _Internal::kHasBitsOffset + 1, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string interface_name = 13 [json_name = "interfaceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Tenant, _impl_.interface_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string snmp_alias = 14 [json_name = "snmpAlias", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Tenant, _impl_.snmp_alias_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .kentik.mkp.v202407.Asset assets = 15 [json_name = "assets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Tenant, _impl_.assets_), _Internal::kHasBitsOffset + 2, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .kentik.mkp.v202407.Package packages = 16 [json_name = "packages", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Tenant, _impl_.packages_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .kentik.user.v202211.User users = 17 [json_name = "users", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Tenant, _impl_.users_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string template_id = 18 [json_name = "templateId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Tenant, _impl_.template_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Alert>()},
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::CustomDimension>()},
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Devices>()},
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Filter>()},
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Asset>()},
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Package>()},
    {::_pbi::TcParser::GetTable<::kentik::user::v202211::User>()},
  }}, {{
    "\31\2\12\4\13\4\0\0\3\4\0\0\0\16\12\0\0\0\13\0\0\0\0\0"
    "kentik.mkp.v202407.Tenant"
    "id"
    "company_id"
    "name"
    "description"
    "type"
    "asn"
    "cidr"
    "interface_name"
    "snmp_alias"
    "template_id"
  }},
};

PROTOBUF_NOINLINE void Tenant::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.Tenant)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.alerts_.Clear();
  _impl_.custom_dimensions_.Clear();
  _impl_.packages_.Clear();
  _impl_.users_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.company_id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  _impl_.asn_.ClearToEmpty();
  _impl_.cidr_.ClearToEmpty();
  _impl_.interface_name_.ClearToEmpty();
  _impl_.snmp_alias_.ClearToEmpty();
  _impl_.template_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.devices_ != nullptr);
      _impl_.devices_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.filters_ != nullptr);
      _impl_.filters_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.assets_ != nullptr);
      _impl_.assets_->Clear();
    }
  }
  _impl_.enabled_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Tenant::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Tenant& this_ = static_cast<const Tenant&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Tenant::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Tenant& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.Tenant)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Tenant.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string company_id = 2 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_company_id().empty()) {
            const std::string& _s = this_._internal_company_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Tenant.company_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string name = 3 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Tenant.name");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string description = 4 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Tenant.description");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string type = 5 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_type().empty()) {
            const std::string& _s = this_._internal_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Tenant.type");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // bool enabled = 6 [json_name = "enabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_enabled() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_enabled(), target);
          }

          // repeated .kentik.mkp.v202407.Alert alerts = 7 [json_name = "alerts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_alerts_size());
               i < n; i++) {
            const auto& repfield = this_._internal_alerts().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string asn = 8 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_asn().empty()) {
            const std::string& _s = this_._internal_asn();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Tenant.asn");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // string cidr = 9 [json_name = "cidr", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_cidr().empty()) {
            const std::string& _s = this_._internal_cidr();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Tenant.cidr");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // repeated .kentik.mkp.v202407.CustomDimension custom_dimensions = 10 [json_name = "customDimensions", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_custom_dimensions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_custom_dimensions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    10, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.mkp.v202407.Devices devices = 11 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.devices_, this_._impl_.devices_->GetCachedSize(), target,
                stream);
          }

          // .kentik.mkp.v202407.Filter filters = 12 [json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                12, *this_._impl_.filters_, this_._impl_.filters_->GetCachedSize(), target,
                stream);
          }

          // string interface_name = 13 [json_name = "interfaceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_interface_name().empty()) {
            const std::string& _s = this_._internal_interface_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Tenant.interface_name");
            target = stream->WriteStringMaybeAliased(13, _s, target);
          }

          // string snmp_alias = 14 [json_name = "snmpAlias", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_snmp_alias().empty()) {
            const std::string& _s = this_._internal_snmp_alias();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Tenant.snmp_alias");
            target = stream->WriteStringMaybeAliased(14, _s, target);
          }

          // .kentik.mkp.v202407.Asset assets = 15 [json_name = "assets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                15, *this_._impl_.assets_, this_._impl_.assets_->GetCachedSize(), target,
                stream);
          }

          // repeated .kentik.mkp.v202407.Package packages = 16 [json_name = "packages", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_packages_size());
               i < n; i++) {
            const auto& repfield = this_._internal_packages().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    16, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .kentik.user.v202211.User users = 17 [json_name = "users", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_users_size());
               i < n; i++) {
            const auto& repfield = this_._internal_users().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    17, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string template_id = 18 [json_name = "templateId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_template_id().empty()) {
            const std::string& _s = this_._internal_template_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.Tenant.template_id");
            target = stream->WriteStringMaybeAliased(18, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.Tenant)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Tenant::ByteSizeLong(const MessageLite& base) {
          const Tenant& this_ = static_cast<const Tenant&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Tenant::ByteSizeLong() const {
          const Tenant& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.Tenant)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.mkp.v202407.Alert alerts = 7 [json_name = "alerts", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_alerts_size();
              for (const auto& msg : this_._internal_alerts()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .kentik.mkp.v202407.CustomDimension custom_dimensions = 10 [json_name = "customDimensions", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_custom_dimensions_size();
              for (const auto& msg : this_._internal_custom_dimensions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .kentik.mkp.v202407.Package packages = 16 [json_name = "packages", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 2UL * this_._internal_packages_size();
              for (const auto& msg : this_._internal_packages()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .kentik.user.v202211.User users = 17 [json_name = "users", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 2UL * this_._internal_users_size();
              for (const auto& msg : this_._internal_users()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string company_id = 2 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_company_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_company_id());
            }
            // string name = 3 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string description = 4 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // string type = 5 [json_name = "type", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type());
            }
            // string asn = 8 [json_name = "asn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_asn().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_asn());
            }
            // string cidr = 9 [json_name = "cidr", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_cidr().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cidr());
            }
            // string interface_name = 13 [json_name = "interfaceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_interface_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_interface_name());
            }
            // string snmp_alias = 14 [json_name = "snmpAlias", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_snmp_alias().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_snmp_alias());
            }
            // string template_id = 18 [json_name = "templateId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_template_id().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_template_id());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .kentik.mkp.v202407.Devices devices = 11 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.devices_);
            }
            // .kentik.mkp.v202407.Filter filters = 12 [json_name = "filters", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.filters_);
            }
            // .kentik.mkp.v202407.Asset assets = 15 [json_name = "assets", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.assets_);
            }
          }
           {
            // bool enabled = 6 [json_name = "enabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_enabled() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Tenant::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Tenant*>(&to_msg);
  auto& from = static_cast<const Tenant&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.Tenant)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_alerts()->MergeFrom(
      from._internal_alerts());
  _this->_internal_mutable_custom_dimensions()->MergeFrom(
      from._internal_custom_dimensions());
  _this->_internal_mutable_packages()->MergeFrom(
      from._internal_packages());
  _this->_internal_mutable_users()->MergeFrom(
      from._internal_users());
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_company_id().empty()) {
    _this->_internal_set_company_id(from._internal_company_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_asn().empty()) {
    _this->_internal_set_asn(from._internal_asn());
  }
  if (!from._internal_cidr().empty()) {
    _this->_internal_set_cidr(from._internal_cidr());
  }
  if (!from._internal_interface_name().empty()) {
    _this->_internal_set_interface_name(from._internal_interface_name());
  }
  if (!from._internal_snmp_alias().empty()) {
    _this->_internal_set_snmp_alias(from._internal_snmp_alias());
  }
  if (!from._internal_template_id().empty()) {
    _this->_internal_set_template_id(from._internal_template_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.devices_ != nullptr);
      if (_this->_impl_.devices_ == nullptr) {
        _this->_impl_.devices_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Devices>(arena, *from._impl_.devices_);
      } else {
        _this->_impl_.devices_->MergeFrom(*from._impl_.devices_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.filters_ != nullptr);
      if (_this->_impl_.filters_ == nullptr) {
        _this->_impl_.filters_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Filter>(arena, *from._impl_.filters_);
      } else {
        _this->_impl_.filters_->MergeFrom(*from._impl_.filters_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.assets_ != nullptr);
      if (_this->_impl_.assets_ == nullptr) {
        _this->_impl_.assets_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Asset>(arena, *from._impl_.assets_);
      } else {
        _this->_impl_.assets_->MergeFrom(*from._impl_.assets_);
      }
    }
  }
  if (from._internal_enabled() != 0) {
    _this->_impl_.enabled_ = from._impl_.enabled_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Tenant::CopyFrom(const Tenant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.Tenant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Tenant::InternalSwap(Tenant* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.alerts_.InternalSwap(&other->_impl_.alerts_);
  _impl_.custom_dimensions_.InternalSwap(&other->_impl_.custom_dimensions_);
  _impl_.packages_.InternalSwap(&other->_impl_.packages_);
  _impl_.users_.InternalSwap(&other->_impl_.users_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.company_id_, &other->_impl_.company_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.asn_, &other->_impl_.asn_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cidr_, &other->_impl_.cidr_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.interface_name_, &other->_impl_.interface_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.snmp_alias_, &other->_impl_.snmp_alias_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.template_id_, &other->_impl_.template_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Tenant, _impl_.enabled_)
      + sizeof(Tenant::_impl_.enabled_)
      - PROTOBUF_FIELD_OFFSET(Tenant, _impl_.devices_)>(
          reinterpret_cast<char*>(&_impl_.devices_),
          reinterpret_cast<char*>(&other->_impl_.devices_));
}

::google::protobuf::Metadata Tenant::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListPackageRequest::_Internal {
 public:
};

ListPackageRequest::ListPackageRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.ListPackageRequest)
}
ListPackageRequest::ListPackageRequest(
    ::google::protobuf::Arena* arena,
    const ListPackageRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListPackageRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.ListPackageRequest)
}

inline void* ListPackageRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListPackageRequest(arena);
}
constexpr auto ListPackageRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ListPackageRequest),
                                            alignof(ListPackageRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListPackageRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListPackageRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListPackageRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<ListPackageRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListPackageRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<ListPackageRequest>(), &ListPackageRequest::ByteSizeLong,
            &ListPackageRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListPackageRequest, _impl_._cached_size_),
        false,
    },
    &ListPackageRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListPackageRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> ListPackageRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::ListPackageRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata ListPackageRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListPackageResponse::_Internal {
 public:
};

ListPackageResponse::ListPackageResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.ListPackageResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListPackageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::ListPackageResponse& from_msg)
      : packages_{visibility, arena, from.packages_},
        _cached_size_{0} {}

ListPackageResponse::ListPackageResponse(
    ::google::protobuf::Arena* arena,
    const ListPackageResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListPackageResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.invalid_count_ = from._impl_.invalid_count_;

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.ListPackageResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListPackageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : packages_{visibility, arena},
        _cached_size_{0} {}

inline void ListPackageResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.invalid_count_ = {};
}
ListPackageResponse::~ListPackageResponse() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.ListPackageResponse)
  SharedDtor(*this);
}
inline void ListPackageResponse::SharedDtor(MessageLite& self) {
  ListPackageResponse& this_ = static_cast<ListPackageResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ListPackageResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListPackageResponse(arena);
}
constexpr auto ListPackageResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListPackageResponse, _impl_.packages_) +
          decltype(ListPackageResponse::_impl_.packages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ListPackageResponse), alignof(ListPackageResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListPackageResponse::PlacementNew_,
                                 sizeof(ListPackageResponse),
                                 alignof(ListPackageResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListPackageResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListPackageResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListPackageResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ListPackageResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListPackageResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ListPackageResponse>(), &ListPackageResponse::ByteSizeLong,
            &ListPackageResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListPackageResponse, _impl_._cached_size_),
        false,
    },
    &ListPackageResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListPackageResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ListPackageResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::ListPackageResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 invalid_count = 2 [json_name = "invalidCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListPackageResponse, _impl_.invalid_count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ListPackageResponse, _impl_.invalid_count_)}},
    // repeated .kentik.mkp.v202407.Package packages = 1 [json_name = "packages"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListPackageResponse, _impl_.packages_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .kentik.mkp.v202407.Package packages = 1 [json_name = "packages"];
    {PROTOBUF_FIELD_OFFSET(ListPackageResponse, _impl_.packages_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 invalid_count = 2 [json_name = "invalidCount"];
    {PROTOBUF_FIELD_OFFSET(ListPackageResponse, _impl_.invalid_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Package>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ListPackageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.ListPackageResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.packages_.Clear();
  _impl_.invalid_count_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ListPackageResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ListPackageResponse& this_ = static_cast<const ListPackageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ListPackageResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ListPackageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.ListPackageResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .kentik.mkp.v202407.Package packages = 1 [json_name = "packages"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_packages_size());
               i < n; i++) {
            const auto& repfield = this_._internal_packages().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint32 invalid_count = 2 [json_name = "invalidCount"];
          if (this_._internal_invalid_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_invalid_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.ListPackageResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ListPackageResponse::ByteSizeLong(const MessageLite& base) {
          const ListPackageResponse& this_ = static_cast<const ListPackageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ListPackageResponse::ByteSizeLong() const {
          const ListPackageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.ListPackageResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.mkp.v202407.Package packages = 1 [json_name = "packages"];
            {
              total_size += 1UL * this_._internal_packages_size();
              for (const auto& msg : this_._internal_packages()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint32 invalid_count = 2 [json_name = "invalidCount"];
            if (this_._internal_invalid_count() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_invalid_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ListPackageResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListPackageResponse*>(&to_msg);
  auto& from = static_cast<const ListPackageResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.ListPackageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_packages()->MergeFrom(
      from._internal_packages());
  if (from._internal_invalid_count() != 0) {
    _this->_impl_.invalid_count_ = from._impl_.invalid_count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListPackageResponse::CopyFrom(const ListPackageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.ListPackageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListPackageResponse::InternalSwap(ListPackageResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.packages_.InternalSwap(&other->_impl_.packages_);
        swap(_impl_.invalid_count_, other->_impl_.invalid_count_);
}

::google::protobuf::Metadata ListPackageResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetPackageRequest::_Internal {
 public:
};

GetPackageRequest::GetPackageRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.GetPackageRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetPackageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::GetPackageRequest& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

GetPackageRequest::GetPackageRequest(
    ::google::protobuf::Arena* arena,
    const GetPackageRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetPackageRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.GetPackageRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetPackageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void GetPackageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetPackageRequest::~GetPackageRequest() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.GetPackageRequest)
  SharedDtor(*this);
}
inline void GetPackageRequest::SharedDtor(MessageLite& self) {
  GetPackageRequest& this_ = static_cast<GetPackageRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetPackageRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetPackageRequest(arena);
}
constexpr auto GetPackageRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetPackageRequest),
                                            alignof(GetPackageRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetPackageRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetPackageRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetPackageRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetPackageRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetPackageRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetPackageRequest>(), &GetPackageRequest::ByteSizeLong,
            &GetPackageRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetPackageRequest, _impl_._cached_size_),
        false,
    },
    &GetPackageRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetPackageRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 47, 2> GetPackageRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::GetPackageRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetPackageRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(GetPackageRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\2\0\0\0\0\0\0"
    "kentik.mkp.v202407.GetPackageRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void GetPackageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.GetPackageRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetPackageRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetPackageRequest& this_ = static_cast<const GetPackageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetPackageRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetPackageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.GetPackageRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.GetPackageRequest.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.GetPackageRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetPackageRequest::ByteSizeLong(const MessageLite& base) {
          const GetPackageRequest& this_ = static_cast<const GetPackageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetPackageRequest::ByteSizeLong() const {
          const GetPackageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.GetPackageRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string id = 1 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetPackageRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetPackageRequest*>(&to_msg);
  auto& from = static_cast<const GetPackageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.GetPackageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetPackageRequest::CopyFrom(const GetPackageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.GetPackageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetPackageRequest::InternalSwap(GetPackageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata GetPackageRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetPackageResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetPackageResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetPackageResponse, _impl_._has_bits_);
};

GetPackageResponse::GetPackageResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.GetPackageResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetPackageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::GetPackageResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetPackageResponse::GetPackageResponse(
    ::google::protobuf::Arena* arena,
    const GetPackageResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetPackageResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.package_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Package>(
                              arena, *from._impl_.package_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.GetPackageResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetPackageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetPackageResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.package_ = {};
}
GetPackageResponse::~GetPackageResponse() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.GetPackageResponse)
  SharedDtor(*this);
}
inline void GetPackageResponse::SharedDtor(MessageLite& self) {
  GetPackageResponse& this_ = static_cast<GetPackageResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.package_;
  this_._impl_.~Impl_();
}

inline void* GetPackageResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetPackageResponse(arena);
}
constexpr auto GetPackageResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetPackageResponse),
                                            alignof(GetPackageResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetPackageResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetPackageResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetPackageResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetPackageResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetPackageResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetPackageResponse>(), &GetPackageResponse::ByteSizeLong,
            &GetPackageResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetPackageResponse, _impl_._cached_size_),
        false,
    },
    &GetPackageResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetPackageResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetPackageResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetPackageResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::GetPackageResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.mkp.v202407.Package package = 1 [json_name = "package"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetPackageResponse, _impl_.package_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.mkp.v202407.Package package = 1 [json_name = "package"];
    {PROTOBUF_FIELD_OFFSET(GetPackageResponse, _impl_.package_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Package>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetPackageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.GetPackageResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.package_ != nullptr);
    _impl_.package_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetPackageResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetPackageResponse& this_ = static_cast<const GetPackageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetPackageResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetPackageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.GetPackageResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.mkp.v202407.Package package = 1 [json_name = "package"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.package_, this_._impl_.package_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.GetPackageResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetPackageResponse::ByteSizeLong(const MessageLite& base) {
          const GetPackageResponse& this_ = static_cast<const GetPackageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetPackageResponse::ByteSizeLong() const {
          const GetPackageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.GetPackageResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.mkp.v202407.Package package = 1 [json_name = "package"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.package_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetPackageResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetPackageResponse*>(&to_msg);
  auto& from = static_cast<const GetPackageResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.GetPackageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.package_ != nullptr);
    if (_this->_impl_.package_ == nullptr) {
      _this->_impl_.package_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Package>(arena, *from._impl_.package_);
    } else {
      _this->_impl_.package_->MergeFrom(*from._impl_.package_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetPackageResponse::CopyFrom(const GetPackageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.GetPackageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetPackageResponse::InternalSwap(GetPackageResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.package_, other->_impl_.package_);
}

::google::protobuf::Metadata GetPackageResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreatePackageRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreatePackageRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreatePackageRequest, _impl_._has_bits_);
};

CreatePackageRequest::CreatePackageRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.CreatePackageRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreatePackageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::CreatePackageRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreatePackageRequest::CreatePackageRequest(
    ::google::protobuf::Arena* arena,
    const CreatePackageRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreatePackageRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.package_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Package>(
                              arena, *from._impl_.package_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.CreatePackageRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreatePackageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreatePackageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.package_ = {};
}
CreatePackageRequest::~CreatePackageRequest() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.CreatePackageRequest)
  SharedDtor(*this);
}
inline void CreatePackageRequest::SharedDtor(MessageLite& self) {
  CreatePackageRequest& this_ = static_cast<CreatePackageRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.package_;
  this_._impl_.~Impl_();
}

inline void* CreatePackageRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreatePackageRequest(arena);
}
constexpr auto CreatePackageRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreatePackageRequest),
                                            alignof(CreatePackageRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreatePackageRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreatePackageRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreatePackageRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreatePackageRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreatePackageRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreatePackageRequest>(), &CreatePackageRequest::ByteSizeLong,
            &CreatePackageRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreatePackageRequest, _impl_._cached_size_),
        false,
    },
    &CreatePackageRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreatePackageRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreatePackageRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreatePackageRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::CreatePackageRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.mkp.v202407.Package package = 1 [json_name = "package"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreatePackageRequest, _impl_.package_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.mkp.v202407.Package package = 1 [json_name = "package"];
    {PROTOBUF_FIELD_OFFSET(CreatePackageRequest, _impl_.package_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Package>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CreatePackageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.CreatePackageRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.package_ != nullptr);
    _impl_.package_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreatePackageRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreatePackageRequest& this_ = static_cast<const CreatePackageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreatePackageRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreatePackageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.CreatePackageRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.mkp.v202407.Package package = 1 [json_name = "package"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.package_, this_._impl_.package_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.CreatePackageRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreatePackageRequest::ByteSizeLong(const MessageLite& base) {
          const CreatePackageRequest& this_ = static_cast<const CreatePackageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreatePackageRequest::ByteSizeLong() const {
          const CreatePackageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.CreatePackageRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.mkp.v202407.Package package = 1 [json_name = "package"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.package_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreatePackageRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreatePackageRequest*>(&to_msg);
  auto& from = static_cast<const CreatePackageRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.CreatePackageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.package_ != nullptr);
    if (_this->_impl_.package_ == nullptr) {
      _this->_impl_.package_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Package>(arena, *from._impl_.package_);
    } else {
      _this->_impl_.package_->MergeFrom(*from._impl_.package_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreatePackageRequest::CopyFrom(const CreatePackageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.CreatePackageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreatePackageRequest::InternalSwap(CreatePackageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.package_, other->_impl_.package_);
}

::google::protobuf::Metadata CreatePackageRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreatePackageResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreatePackageResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreatePackageResponse, _impl_._has_bits_);
};

CreatePackageResponse::CreatePackageResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.CreatePackageResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreatePackageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::CreatePackageResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreatePackageResponse::CreatePackageResponse(
    ::google::protobuf::Arena* arena,
    const CreatePackageResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreatePackageResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.package_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Package>(
                              arena, *from._impl_.package_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.CreatePackageResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreatePackageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreatePackageResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.package_ = {};
}
CreatePackageResponse::~CreatePackageResponse() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.CreatePackageResponse)
  SharedDtor(*this);
}
inline void CreatePackageResponse::SharedDtor(MessageLite& self) {
  CreatePackageResponse& this_ = static_cast<CreatePackageResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.package_;
  this_._impl_.~Impl_();
}

inline void* CreatePackageResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreatePackageResponse(arena);
}
constexpr auto CreatePackageResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreatePackageResponse),
                                            alignof(CreatePackageResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreatePackageResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreatePackageResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreatePackageResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreatePackageResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreatePackageResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreatePackageResponse>(), &CreatePackageResponse::ByteSizeLong,
            &CreatePackageResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreatePackageResponse, _impl_._cached_size_),
        false,
    },
    &CreatePackageResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreatePackageResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreatePackageResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreatePackageResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::CreatePackageResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.mkp.v202407.Package package = 1 [json_name = "package"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreatePackageResponse, _impl_.package_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.mkp.v202407.Package package = 1 [json_name = "package"];
    {PROTOBUF_FIELD_OFFSET(CreatePackageResponse, _impl_.package_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Package>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CreatePackageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.CreatePackageResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.package_ != nullptr);
    _impl_.package_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreatePackageResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreatePackageResponse& this_ = static_cast<const CreatePackageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreatePackageResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreatePackageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.CreatePackageResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.mkp.v202407.Package package = 1 [json_name = "package"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.package_, this_._impl_.package_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.CreatePackageResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreatePackageResponse::ByteSizeLong(const MessageLite& base) {
          const CreatePackageResponse& this_ = static_cast<const CreatePackageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreatePackageResponse::ByteSizeLong() const {
          const CreatePackageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.CreatePackageResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.mkp.v202407.Package package = 1 [json_name = "package"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.package_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreatePackageResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreatePackageResponse*>(&to_msg);
  auto& from = static_cast<const CreatePackageResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.CreatePackageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.package_ != nullptr);
    if (_this->_impl_.package_ == nullptr) {
      _this->_impl_.package_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Package>(arena, *from._impl_.package_);
    } else {
      _this->_impl_.package_->MergeFrom(*from._impl_.package_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreatePackageResponse::CopyFrom(const CreatePackageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.CreatePackageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreatePackageResponse::InternalSwap(CreatePackageResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.package_, other->_impl_.package_);
}

::google::protobuf::Metadata CreatePackageResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdatePackageRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdatePackageRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdatePackageRequest, _impl_._has_bits_);
};

UpdatePackageRequest::UpdatePackageRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.UpdatePackageRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdatePackageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::UpdatePackageRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdatePackageRequest::UpdatePackageRequest(
    ::google::protobuf::Arena* arena,
    const UpdatePackageRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdatePackageRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.package_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Package>(
                              arena, *from._impl_.package_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.UpdatePackageRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdatePackageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdatePackageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.package_ = {};
}
UpdatePackageRequest::~UpdatePackageRequest() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.UpdatePackageRequest)
  SharedDtor(*this);
}
inline void UpdatePackageRequest::SharedDtor(MessageLite& self) {
  UpdatePackageRequest& this_ = static_cast<UpdatePackageRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.package_;
  this_._impl_.~Impl_();
}

inline void* UpdatePackageRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdatePackageRequest(arena);
}
constexpr auto UpdatePackageRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdatePackageRequest),
                                            alignof(UpdatePackageRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdatePackageRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdatePackageRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdatePackageRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdatePackageRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdatePackageRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdatePackageRequest>(), &UpdatePackageRequest::ByteSizeLong,
            &UpdatePackageRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdatePackageRequest, _impl_._cached_size_),
        false,
    },
    &UpdatePackageRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdatePackageRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdatePackageRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdatePackageRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::UpdatePackageRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.mkp.v202407.Package package = 1 [json_name = "package"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdatePackageRequest, _impl_.package_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.mkp.v202407.Package package = 1 [json_name = "package"];
    {PROTOBUF_FIELD_OFFSET(UpdatePackageRequest, _impl_.package_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Package>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdatePackageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.UpdatePackageRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.package_ != nullptr);
    _impl_.package_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdatePackageRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdatePackageRequest& this_ = static_cast<const UpdatePackageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdatePackageRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdatePackageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.UpdatePackageRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.mkp.v202407.Package package = 1 [json_name = "package"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.package_, this_._impl_.package_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.UpdatePackageRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdatePackageRequest::ByteSizeLong(const MessageLite& base) {
          const UpdatePackageRequest& this_ = static_cast<const UpdatePackageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdatePackageRequest::ByteSizeLong() const {
          const UpdatePackageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.UpdatePackageRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.mkp.v202407.Package package = 1 [json_name = "package"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.package_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdatePackageRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdatePackageRequest*>(&to_msg);
  auto& from = static_cast<const UpdatePackageRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.UpdatePackageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.package_ != nullptr);
    if (_this->_impl_.package_ == nullptr) {
      _this->_impl_.package_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Package>(arena, *from._impl_.package_);
    } else {
      _this->_impl_.package_->MergeFrom(*from._impl_.package_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdatePackageRequest::CopyFrom(const UpdatePackageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.UpdatePackageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdatePackageRequest::InternalSwap(UpdatePackageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.package_, other->_impl_.package_);
}

::google::protobuf::Metadata UpdatePackageRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdatePackageResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdatePackageResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdatePackageResponse, _impl_._has_bits_);
};

UpdatePackageResponse::UpdatePackageResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.UpdatePackageResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdatePackageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::UpdatePackageResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdatePackageResponse::UpdatePackageResponse(
    ::google::protobuf::Arena* arena,
    const UpdatePackageResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdatePackageResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.package_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Package>(
                              arena, *from._impl_.package_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.UpdatePackageResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdatePackageResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdatePackageResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.package_ = {};
}
UpdatePackageResponse::~UpdatePackageResponse() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.UpdatePackageResponse)
  SharedDtor(*this);
}
inline void UpdatePackageResponse::SharedDtor(MessageLite& self) {
  UpdatePackageResponse& this_ = static_cast<UpdatePackageResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.package_;
  this_._impl_.~Impl_();
}

inline void* UpdatePackageResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdatePackageResponse(arena);
}
constexpr auto UpdatePackageResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdatePackageResponse),
                                            alignof(UpdatePackageResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdatePackageResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdatePackageResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdatePackageResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdatePackageResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdatePackageResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdatePackageResponse>(), &UpdatePackageResponse::ByteSizeLong,
            &UpdatePackageResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdatePackageResponse, _impl_._cached_size_),
        false,
    },
    &UpdatePackageResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdatePackageResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdatePackageResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdatePackageResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::UpdatePackageResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.mkp.v202407.Package package = 1 [json_name = "package"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdatePackageResponse, _impl_.package_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.mkp.v202407.Package package = 1 [json_name = "package"];
    {PROTOBUF_FIELD_OFFSET(UpdatePackageResponse, _impl_.package_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Package>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdatePackageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.UpdatePackageResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.package_ != nullptr);
    _impl_.package_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdatePackageResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdatePackageResponse& this_ = static_cast<const UpdatePackageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdatePackageResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdatePackageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.UpdatePackageResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.mkp.v202407.Package package = 1 [json_name = "package"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.package_, this_._impl_.package_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.UpdatePackageResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdatePackageResponse::ByteSizeLong(const MessageLite& base) {
          const UpdatePackageResponse& this_ = static_cast<const UpdatePackageResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdatePackageResponse::ByteSizeLong() const {
          const UpdatePackageResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.UpdatePackageResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.mkp.v202407.Package package = 1 [json_name = "package"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.package_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdatePackageResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdatePackageResponse*>(&to_msg);
  auto& from = static_cast<const UpdatePackageResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.UpdatePackageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.package_ != nullptr);
    if (_this->_impl_.package_ == nullptr) {
      _this->_impl_.package_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Package>(arena, *from._impl_.package_);
    } else {
      _this->_impl_.package_->MergeFrom(*from._impl_.package_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdatePackageResponse::CopyFrom(const UpdatePackageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.UpdatePackageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdatePackageResponse::InternalSwap(UpdatePackageResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.package_, other->_impl_.package_);
}

::google::protobuf::Metadata UpdatePackageResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeletePackageRequest::_Internal {
 public:
};

DeletePackageRequest::DeletePackageRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.DeletePackageRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeletePackageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::DeletePackageRequest& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

DeletePackageRequest::DeletePackageRequest(
    ::google::protobuf::Arena* arena,
    const DeletePackageRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeletePackageRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.DeletePackageRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeletePackageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void DeletePackageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeletePackageRequest::~DeletePackageRequest() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.DeletePackageRequest)
  SharedDtor(*this);
}
inline void DeletePackageRequest::SharedDtor(MessageLite& self) {
  DeletePackageRequest& this_ = static_cast<DeletePackageRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DeletePackageRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeletePackageRequest(arena);
}
constexpr auto DeletePackageRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeletePackageRequest),
                                            alignof(DeletePackageRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeletePackageRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeletePackageRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeletePackageRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeletePackageRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeletePackageRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeletePackageRequest>(), &DeletePackageRequest::ByteSizeLong,
            &DeletePackageRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeletePackageRequest, _impl_._cached_size_),
        false,
    },
    &DeletePackageRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeletePackageRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 50, 2> DeletePackageRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::DeletePackageRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeletePackageRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(DeletePackageRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\2\0\0\0\0\0\0"
    "kentik.mkp.v202407.DeletePackageRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void DeletePackageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.DeletePackageRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeletePackageRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeletePackageRequest& this_ = static_cast<const DeletePackageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeletePackageRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeletePackageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.DeletePackageRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.DeletePackageRequest.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.DeletePackageRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeletePackageRequest::ByteSizeLong(const MessageLite& base) {
          const DeletePackageRequest& this_ = static_cast<const DeletePackageRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeletePackageRequest::ByteSizeLong() const {
          const DeletePackageRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.DeletePackageRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string id = 1 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeletePackageRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeletePackageRequest*>(&to_msg);
  auto& from = static_cast<const DeletePackageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.DeletePackageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeletePackageRequest::CopyFrom(const DeletePackageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.DeletePackageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeletePackageRequest::InternalSwap(DeletePackageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata DeletePackageRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeletePackageResponse::_Internal {
 public:
};

DeletePackageResponse::DeletePackageResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.DeletePackageResponse)
}
DeletePackageResponse::DeletePackageResponse(
    ::google::protobuf::Arena* arena,
    const DeletePackageResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeletePackageResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.DeletePackageResponse)
}

inline void* DeletePackageResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeletePackageResponse(arena);
}
constexpr auto DeletePackageResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DeletePackageResponse),
                                            alignof(DeletePackageResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeletePackageResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeletePackageResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeletePackageResponse::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<DeletePackageResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeletePackageResponse::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<DeletePackageResponse>(), &DeletePackageResponse::ByteSizeLong,
            &DeletePackageResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeletePackageResponse, _impl_._cached_size_),
        false,
    },
    &DeletePackageResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeletePackageResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> DeletePackageResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::DeletePackageResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata DeletePackageResponse::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListTenantRequest::_Internal {
 public:
};

ListTenantRequest::ListTenantRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.ListTenantRequest)
}
ListTenantRequest::ListTenantRequest(
    ::google::protobuf::Arena* arena,
    const ListTenantRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListTenantRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.ListTenantRequest)
}

inline void* ListTenantRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListTenantRequest(arena);
}
constexpr auto ListTenantRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ListTenantRequest),
                                            alignof(ListTenantRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListTenantRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListTenantRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListTenantRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<ListTenantRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListTenantRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<ListTenantRequest>(), &ListTenantRequest::ByteSizeLong,
            &ListTenantRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListTenantRequest, _impl_._cached_size_),
        false,
    },
    &ListTenantRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListTenantRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> ListTenantRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::ListTenantRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata ListTenantRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListTenantResponse::_Internal {
 public:
};

ListTenantResponse::ListTenantResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.ListTenantResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListTenantResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::ListTenantResponse& from_msg)
      : tenants_{visibility, arena, from.tenants_},
        _cached_size_{0} {}

ListTenantResponse::ListTenantResponse(
    ::google::protobuf::Arena* arena,
    const ListTenantResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListTenantResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.invalid_count_ = from._impl_.invalid_count_;

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.ListTenantResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListTenantResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tenants_{visibility, arena},
        _cached_size_{0} {}

inline void ListTenantResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.invalid_count_ = {};
}
ListTenantResponse::~ListTenantResponse() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.ListTenantResponse)
  SharedDtor(*this);
}
inline void ListTenantResponse::SharedDtor(MessageLite& self) {
  ListTenantResponse& this_ = static_cast<ListTenantResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ListTenantResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListTenantResponse(arena);
}
constexpr auto ListTenantResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListTenantResponse, _impl_.tenants_) +
          decltype(ListTenantResponse::_impl_.tenants_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ListTenantResponse), alignof(ListTenantResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListTenantResponse::PlacementNew_,
                                 sizeof(ListTenantResponse),
                                 alignof(ListTenantResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListTenantResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListTenantResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListTenantResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ListTenantResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListTenantResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ListTenantResponse>(), &ListTenantResponse::ByteSizeLong,
            &ListTenantResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListTenantResponse, _impl_._cached_size_),
        false,
    },
    &ListTenantResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListTenantResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ListTenantResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::ListTenantResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 invalid_count = 2 [json_name = "invalidCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListTenantResponse, _impl_.invalid_count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ListTenantResponse, _impl_.invalid_count_)}},
    // repeated .kentik.mkp.v202407.Tenant tenants = 1 [json_name = "tenants"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListTenantResponse, _impl_.tenants_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .kentik.mkp.v202407.Tenant tenants = 1 [json_name = "tenants"];
    {PROTOBUF_FIELD_OFFSET(ListTenantResponse, _impl_.tenants_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 invalid_count = 2 [json_name = "invalidCount"];
    {PROTOBUF_FIELD_OFFSET(ListTenantResponse, _impl_.invalid_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Tenant>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ListTenantResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.ListTenantResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tenants_.Clear();
  _impl_.invalid_count_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ListTenantResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ListTenantResponse& this_ = static_cast<const ListTenantResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ListTenantResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ListTenantResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.ListTenantResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .kentik.mkp.v202407.Tenant tenants = 1 [json_name = "tenants"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_tenants_size());
               i < n; i++) {
            const auto& repfield = this_._internal_tenants().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint32 invalid_count = 2 [json_name = "invalidCount"];
          if (this_._internal_invalid_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_invalid_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.ListTenantResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ListTenantResponse::ByteSizeLong(const MessageLite& base) {
          const ListTenantResponse& this_ = static_cast<const ListTenantResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ListTenantResponse::ByteSizeLong() const {
          const ListTenantResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.ListTenantResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.mkp.v202407.Tenant tenants = 1 [json_name = "tenants"];
            {
              total_size += 1UL * this_._internal_tenants_size();
              for (const auto& msg : this_._internal_tenants()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint32 invalid_count = 2 [json_name = "invalidCount"];
            if (this_._internal_invalid_count() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_invalid_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ListTenantResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListTenantResponse*>(&to_msg);
  auto& from = static_cast<const ListTenantResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.ListTenantResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tenants()->MergeFrom(
      from._internal_tenants());
  if (from._internal_invalid_count() != 0) {
    _this->_impl_.invalid_count_ = from._impl_.invalid_count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListTenantResponse::CopyFrom(const ListTenantResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.ListTenantResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListTenantResponse::InternalSwap(ListTenantResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tenants_.InternalSwap(&other->_impl_.tenants_);
        swap(_impl_.invalid_count_, other->_impl_.invalid_count_);
}

::google::protobuf::Metadata ListTenantResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTenantRequest::_Internal {
 public:
};

GetTenantRequest::GetTenantRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.GetTenantRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetTenantRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::GetTenantRequest& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

GetTenantRequest::GetTenantRequest(
    ::google::protobuf::Arena* arena,
    const GetTenantRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTenantRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.GetTenantRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetTenantRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void GetTenantRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetTenantRequest::~GetTenantRequest() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.GetTenantRequest)
  SharedDtor(*this);
}
inline void GetTenantRequest::SharedDtor(MessageLite& self) {
  GetTenantRequest& this_ = static_cast<GetTenantRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetTenantRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetTenantRequest(arena);
}
constexpr auto GetTenantRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetTenantRequest),
                                            alignof(GetTenantRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetTenantRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetTenantRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetTenantRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetTenantRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetTenantRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetTenantRequest>(), &GetTenantRequest::ByteSizeLong,
            &GetTenantRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetTenantRequest, _impl_._cached_size_),
        false,
    },
    &GetTenantRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetTenantRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 46, 2> GetTenantRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::GetTenantRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetTenantRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(GetTenantRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\2\0\0\0\0\0\0"
    "kentik.mkp.v202407.GetTenantRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void GetTenantRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.GetTenantRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetTenantRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetTenantRequest& this_ = static_cast<const GetTenantRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetTenantRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetTenantRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.GetTenantRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.GetTenantRequest.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.GetTenantRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetTenantRequest::ByteSizeLong(const MessageLite& base) {
          const GetTenantRequest& this_ = static_cast<const GetTenantRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetTenantRequest::ByteSizeLong() const {
          const GetTenantRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.GetTenantRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string id = 1 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetTenantRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTenantRequest*>(&to_msg);
  auto& from = static_cast<const GetTenantRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.GetTenantRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTenantRequest::CopyFrom(const GetTenantRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.GetTenantRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTenantRequest::InternalSwap(GetTenantRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata GetTenantRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTenantResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetTenantResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetTenantResponse, _impl_._has_bits_);
};

GetTenantResponse::GetTenantResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.GetTenantResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetTenantResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::GetTenantResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetTenantResponse::GetTenantResponse(
    ::google::protobuf::Arena* arena,
    const GetTenantResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTenantResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.tenant_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Tenant>(
                              arena, *from._impl_.tenant_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.GetTenantResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetTenantResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetTenantResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.tenant_ = {};
}
GetTenantResponse::~GetTenantResponse() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.GetTenantResponse)
  SharedDtor(*this);
}
inline void GetTenantResponse::SharedDtor(MessageLite& self) {
  GetTenantResponse& this_ = static_cast<GetTenantResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.tenant_;
  this_._impl_.~Impl_();
}

inline void* GetTenantResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetTenantResponse(arena);
}
constexpr auto GetTenantResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetTenantResponse),
                                            alignof(GetTenantResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetTenantResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetTenantResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetTenantResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetTenantResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetTenantResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetTenantResponse>(), &GetTenantResponse::ByteSizeLong,
            &GetTenantResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetTenantResponse, _impl_._cached_size_),
        false,
    },
    &GetTenantResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetTenantResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetTenantResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetTenantResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::GetTenantResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.mkp.v202407.Tenant tenant = 1 [json_name = "tenant"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetTenantResponse, _impl_.tenant_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.mkp.v202407.Tenant tenant = 1 [json_name = "tenant"];
    {PROTOBUF_FIELD_OFFSET(GetTenantResponse, _impl_.tenant_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Tenant>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetTenantResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.GetTenantResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.tenant_ != nullptr);
    _impl_.tenant_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetTenantResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetTenantResponse& this_ = static_cast<const GetTenantResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetTenantResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetTenantResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.GetTenantResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.mkp.v202407.Tenant tenant = 1 [json_name = "tenant"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.tenant_, this_._impl_.tenant_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.GetTenantResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetTenantResponse::ByteSizeLong(const MessageLite& base) {
          const GetTenantResponse& this_ = static_cast<const GetTenantResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetTenantResponse::ByteSizeLong() const {
          const GetTenantResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.GetTenantResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.mkp.v202407.Tenant tenant = 1 [json_name = "tenant"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tenant_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetTenantResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTenantResponse*>(&to_msg);
  auto& from = static_cast<const GetTenantResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.GetTenantResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.tenant_ != nullptr);
    if (_this->_impl_.tenant_ == nullptr) {
      _this->_impl_.tenant_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Tenant>(arena, *from._impl_.tenant_);
    } else {
      _this->_impl_.tenant_->MergeFrom(*from._impl_.tenant_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTenantResponse::CopyFrom(const GetTenantResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.GetTenantResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTenantResponse::InternalSwap(GetTenantResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.tenant_, other->_impl_.tenant_);
}

::google::protobuf::Metadata GetTenantResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateTenantRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateTenantRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateTenantRequest, _impl_._has_bits_);
};

CreateTenantRequest::CreateTenantRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.CreateTenantRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateTenantRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::CreateTenantRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateTenantRequest::CreateTenantRequest(
    ::google::protobuf::Arena* arena,
    const CreateTenantRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateTenantRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.tenant_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Tenant>(
                              arena, *from._impl_.tenant_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.CreateTenantRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateTenantRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateTenantRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.tenant_ = {};
}
CreateTenantRequest::~CreateTenantRequest() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.CreateTenantRequest)
  SharedDtor(*this);
}
inline void CreateTenantRequest::SharedDtor(MessageLite& self) {
  CreateTenantRequest& this_ = static_cast<CreateTenantRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.tenant_;
  this_._impl_.~Impl_();
}

inline void* CreateTenantRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateTenantRequest(arena);
}
constexpr auto CreateTenantRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreateTenantRequest),
                                            alignof(CreateTenantRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateTenantRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateTenantRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateTenantRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateTenantRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateTenantRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateTenantRequest>(), &CreateTenantRequest::ByteSizeLong,
            &CreateTenantRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateTenantRequest, _impl_._cached_size_),
        false,
    },
    &CreateTenantRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateTenantRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateTenantRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateTenantRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::CreateTenantRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.mkp.v202407.Tenant tenant = 1 [json_name = "tenant"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateTenantRequest, _impl_.tenant_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.mkp.v202407.Tenant tenant = 1 [json_name = "tenant"];
    {PROTOBUF_FIELD_OFFSET(CreateTenantRequest, _impl_.tenant_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Tenant>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CreateTenantRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.CreateTenantRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.tenant_ != nullptr);
    _impl_.tenant_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateTenantRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateTenantRequest& this_ = static_cast<const CreateTenantRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateTenantRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateTenantRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.CreateTenantRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.mkp.v202407.Tenant tenant = 1 [json_name = "tenant"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.tenant_, this_._impl_.tenant_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.CreateTenantRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateTenantRequest::ByteSizeLong(const MessageLite& base) {
          const CreateTenantRequest& this_ = static_cast<const CreateTenantRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateTenantRequest::ByteSizeLong() const {
          const CreateTenantRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.CreateTenantRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.mkp.v202407.Tenant tenant = 1 [json_name = "tenant"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tenant_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateTenantRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateTenantRequest*>(&to_msg);
  auto& from = static_cast<const CreateTenantRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.CreateTenantRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.tenant_ != nullptr);
    if (_this->_impl_.tenant_ == nullptr) {
      _this->_impl_.tenant_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Tenant>(arena, *from._impl_.tenant_);
    } else {
      _this->_impl_.tenant_->MergeFrom(*from._impl_.tenant_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateTenantRequest::CopyFrom(const CreateTenantRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.CreateTenantRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateTenantRequest::InternalSwap(CreateTenantRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.tenant_, other->_impl_.tenant_);
}

::google::protobuf::Metadata CreateTenantRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateTenantResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateTenantResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateTenantResponse, _impl_._has_bits_);
};

CreateTenantResponse::CreateTenantResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.CreateTenantResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateTenantResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::CreateTenantResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateTenantResponse::CreateTenantResponse(
    ::google::protobuf::Arena* arena,
    const CreateTenantResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateTenantResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.tenant_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Tenant>(
                              arena, *from._impl_.tenant_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.CreateTenantResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateTenantResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateTenantResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.tenant_ = {};
}
CreateTenantResponse::~CreateTenantResponse() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.CreateTenantResponse)
  SharedDtor(*this);
}
inline void CreateTenantResponse::SharedDtor(MessageLite& self) {
  CreateTenantResponse& this_ = static_cast<CreateTenantResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.tenant_;
  this_._impl_.~Impl_();
}

inline void* CreateTenantResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateTenantResponse(arena);
}
constexpr auto CreateTenantResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreateTenantResponse),
                                            alignof(CreateTenantResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateTenantResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateTenantResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateTenantResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateTenantResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateTenantResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateTenantResponse>(), &CreateTenantResponse::ByteSizeLong,
            &CreateTenantResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateTenantResponse, _impl_._cached_size_),
        false,
    },
    &CreateTenantResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateTenantResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateTenantResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateTenantResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::CreateTenantResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.mkp.v202407.Tenant tenant = 1 [json_name = "tenant"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateTenantResponse, _impl_.tenant_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.mkp.v202407.Tenant tenant = 1 [json_name = "tenant"];
    {PROTOBUF_FIELD_OFFSET(CreateTenantResponse, _impl_.tenant_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Tenant>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CreateTenantResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.CreateTenantResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.tenant_ != nullptr);
    _impl_.tenant_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateTenantResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateTenantResponse& this_ = static_cast<const CreateTenantResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateTenantResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateTenantResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.CreateTenantResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.mkp.v202407.Tenant tenant = 1 [json_name = "tenant"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.tenant_, this_._impl_.tenant_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.CreateTenantResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateTenantResponse::ByteSizeLong(const MessageLite& base) {
          const CreateTenantResponse& this_ = static_cast<const CreateTenantResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateTenantResponse::ByteSizeLong() const {
          const CreateTenantResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.CreateTenantResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.mkp.v202407.Tenant tenant = 1 [json_name = "tenant"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tenant_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateTenantResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateTenantResponse*>(&to_msg);
  auto& from = static_cast<const CreateTenantResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.CreateTenantResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.tenant_ != nullptr);
    if (_this->_impl_.tenant_ == nullptr) {
      _this->_impl_.tenant_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Tenant>(arena, *from._impl_.tenant_);
    } else {
      _this->_impl_.tenant_->MergeFrom(*from._impl_.tenant_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateTenantResponse::CopyFrom(const CreateTenantResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.CreateTenantResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateTenantResponse::InternalSwap(CreateTenantResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.tenant_, other->_impl_.tenant_);
}

::google::protobuf::Metadata CreateTenantResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateTenantRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateTenantRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateTenantRequest, _impl_._has_bits_);
};

UpdateTenantRequest::UpdateTenantRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.UpdateTenantRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateTenantRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::UpdateTenantRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateTenantRequest::UpdateTenantRequest(
    ::google::protobuf::Arena* arena,
    const UpdateTenantRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateTenantRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.tenant_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Tenant>(
                              arena, *from._impl_.tenant_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.UpdateTenantRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateTenantRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateTenantRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.tenant_ = {};
}
UpdateTenantRequest::~UpdateTenantRequest() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.UpdateTenantRequest)
  SharedDtor(*this);
}
inline void UpdateTenantRequest::SharedDtor(MessageLite& self) {
  UpdateTenantRequest& this_ = static_cast<UpdateTenantRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.tenant_;
  this_._impl_.~Impl_();
}

inline void* UpdateTenantRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateTenantRequest(arena);
}
constexpr auto UpdateTenantRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateTenantRequest),
                                            alignof(UpdateTenantRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateTenantRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateTenantRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateTenantRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateTenantRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateTenantRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateTenantRequest>(), &UpdateTenantRequest::ByteSizeLong,
            &UpdateTenantRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateTenantRequest, _impl_._cached_size_),
        false,
    },
    &UpdateTenantRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateTenantRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateTenantRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateTenantRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::UpdateTenantRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.mkp.v202407.Tenant tenant = 1 [json_name = "tenant"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateTenantRequest, _impl_.tenant_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.mkp.v202407.Tenant tenant = 1 [json_name = "tenant"];
    {PROTOBUF_FIELD_OFFSET(UpdateTenantRequest, _impl_.tenant_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Tenant>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateTenantRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.UpdateTenantRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.tenant_ != nullptr);
    _impl_.tenant_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateTenantRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateTenantRequest& this_ = static_cast<const UpdateTenantRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateTenantRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateTenantRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.UpdateTenantRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.mkp.v202407.Tenant tenant = 1 [json_name = "tenant"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.tenant_, this_._impl_.tenant_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.UpdateTenantRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateTenantRequest::ByteSizeLong(const MessageLite& base) {
          const UpdateTenantRequest& this_ = static_cast<const UpdateTenantRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateTenantRequest::ByteSizeLong() const {
          const UpdateTenantRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.UpdateTenantRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.mkp.v202407.Tenant tenant = 1 [json_name = "tenant"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tenant_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateTenantRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateTenantRequest*>(&to_msg);
  auto& from = static_cast<const UpdateTenantRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.UpdateTenantRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.tenant_ != nullptr);
    if (_this->_impl_.tenant_ == nullptr) {
      _this->_impl_.tenant_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Tenant>(arena, *from._impl_.tenant_);
    } else {
      _this->_impl_.tenant_->MergeFrom(*from._impl_.tenant_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateTenantRequest::CopyFrom(const UpdateTenantRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.UpdateTenantRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateTenantRequest::InternalSwap(UpdateTenantRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.tenant_, other->_impl_.tenant_);
}

::google::protobuf::Metadata UpdateTenantRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateTenantResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateTenantResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateTenantResponse, _impl_._has_bits_);
};

UpdateTenantResponse::UpdateTenantResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.UpdateTenantResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateTenantResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::UpdateTenantResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateTenantResponse::UpdateTenantResponse(
    ::google::protobuf::Arena* arena,
    const UpdateTenantResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateTenantResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.tenant_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Tenant>(
                              arena, *from._impl_.tenant_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.UpdateTenantResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateTenantResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateTenantResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.tenant_ = {};
}
UpdateTenantResponse::~UpdateTenantResponse() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.UpdateTenantResponse)
  SharedDtor(*this);
}
inline void UpdateTenantResponse::SharedDtor(MessageLite& self) {
  UpdateTenantResponse& this_ = static_cast<UpdateTenantResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.tenant_;
  this_._impl_.~Impl_();
}

inline void* UpdateTenantResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateTenantResponse(arena);
}
constexpr auto UpdateTenantResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateTenantResponse),
                                            alignof(UpdateTenantResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateTenantResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateTenantResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateTenantResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateTenantResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateTenantResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateTenantResponse>(), &UpdateTenantResponse::ByteSizeLong,
            &UpdateTenantResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateTenantResponse, _impl_._cached_size_),
        false,
    },
    &UpdateTenantResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateTenantResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateTenantResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateTenantResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::UpdateTenantResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.mkp.v202407.Tenant tenant = 1 [json_name = "tenant"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateTenantResponse, _impl_.tenant_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.mkp.v202407.Tenant tenant = 1 [json_name = "tenant"];
    {PROTOBUF_FIELD_OFFSET(UpdateTenantResponse, _impl_.tenant_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::mkp::v202407::Tenant>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateTenantResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.UpdateTenantResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.tenant_ != nullptr);
    _impl_.tenant_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateTenantResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateTenantResponse& this_ = static_cast<const UpdateTenantResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateTenantResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateTenantResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.UpdateTenantResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.mkp.v202407.Tenant tenant = 1 [json_name = "tenant"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.tenant_, this_._impl_.tenant_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.UpdateTenantResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateTenantResponse::ByteSizeLong(const MessageLite& base) {
          const UpdateTenantResponse& this_ = static_cast<const UpdateTenantResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateTenantResponse::ByteSizeLong() const {
          const UpdateTenantResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.UpdateTenantResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.mkp.v202407.Tenant tenant = 1 [json_name = "tenant"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tenant_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateTenantResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateTenantResponse*>(&to_msg);
  auto& from = static_cast<const UpdateTenantResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.UpdateTenantResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.tenant_ != nullptr);
    if (_this->_impl_.tenant_ == nullptr) {
      _this->_impl_.tenant_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::mkp::v202407::Tenant>(arena, *from._impl_.tenant_);
    } else {
      _this->_impl_.tenant_->MergeFrom(*from._impl_.tenant_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateTenantResponse::CopyFrom(const UpdateTenantResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.UpdateTenantResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateTenantResponse::InternalSwap(UpdateTenantResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.tenant_, other->_impl_.tenant_);
}

::google::protobuf::Metadata UpdateTenantResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteTenantRequest::_Internal {
 public:
};

DeleteTenantRequest::DeleteTenantRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.DeleteTenantRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteTenantRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::mkp::v202407::DeleteTenantRequest& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

DeleteTenantRequest::DeleteTenantRequest(
    ::google::protobuf::Arena* arena,
    const DeleteTenantRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteTenantRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.DeleteTenantRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteTenantRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void DeleteTenantRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeleteTenantRequest::~DeleteTenantRequest() {
  // @@protoc_insertion_point(destructor:kentik.mkp.v202407.DeleteTenantRequest)
  SharedDtor(*this);
}
inline void DeleteTenantRequest::SharedDtor(MessageLite& self) {
  DeleteTenantRequest& this_ = static_cast<DeleteTenantRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DeleteTenantRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeleteTenantRequest(arena);
}
constexpr auto DeleteTenantRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeleteTenantRequest),
                                            alignof(DeleteTenantRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeleteTenantRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeleteTenantRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeleteTenantRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeleteTenantRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeleteTenantRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeleteTenantRequest>(), &DeleteTenantRequest::ByteSizeLong,
            &DeleteTenantRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeleteTenantRequest, _impl_._cached_size_),
        false,
    },
    &DeleteTenantRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeleteTenantRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 49, 2> DeleteTenantRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::DeleteTenantRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteTenantRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(DeleteTenantRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\2\0\0\0\0\0\0"
    "kentik.mkp.v202407.DeleteTenantRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void DeleteTenantRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.mkp.v202407.DeleteTenantRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeleteTenantRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeleteTenantRequest& this_ = static_cast<const DeleteTenantRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeleteTenantRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeleteTenantRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.mkp.v202407.DeleteTenantRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.mkp.v202407.DeleteTenantRequest.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.mkp.v202407.DeleteTenantRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeleteTenantRequest::ByteSizeLong(const MessageLite& base) {
          const DeleteTenantRequest& this_ = static_cast<const DeleteTenantRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeleteTenantRequest::ByteSizeLong() const {
          const DeleteTenantRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.mkp.v202407.DeleteTenantRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string id = 1 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeleteTenantRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteTenantRequest*>(&to_msg);
  auto& from = static_cast<const DeleteTenantRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.mkp.v202407.DeleteTenantRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteTenantRequest::CopyFrom(const DeleteTenantRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.mkp.v202407.DeleteTenantRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeleteTenantRequest::InternalSwap(DeleteTenantRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata DeleteTenantRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteTenantResponse::_Internal {
 public:
};

DeleteTenantResponse::DeleteTenantResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:kentik.mkp.v202407.DeleteTenantResponse)
}
DeleteTenantResponse::DeleteTenantResponse(
    ::google::protobuf::Arena* arena,
    const DeleteTenantResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteTenantResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:kentik.mkp.v202407.DeleteTenantResponse)
}

inline void* DeleteTenantResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeleteTenantResponse(arena);
}
constexpr auto DeleteTenantResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DeleteTenantResponse),
                                            alignof(DeleteTenantResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeleteTenantResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeleteTenantResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeleteTenantResponse::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<DeleteTenantResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeleteTenantResponse::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<DeleteTenantResponse>(), &DeleteTenantResponse::ByteSizeLong,
            &DeleteTenantResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeleteTenantResponse, _impl_._cached_size_),
        false,
    },
    &DeleteTenantResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeleteTenantResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> DeleteTenantResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::mkp::v202407::DeleteTenantResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata DeleteTenantResponse::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v202407
}  // namespace mkp
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_kentik_2fmkp_2fv202407_2fmkp_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
