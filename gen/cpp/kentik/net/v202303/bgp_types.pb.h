// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/net/v202303/bgp_types.proto
// Protobuf C++ Version: 5.29.3

#ifndef kentik_2fnet_2fv202303_2fbgp_5ftypes_2eproto_2epb_2eh
#define kentik_2fnet_2fv202303_2fbgp_5ftypes_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/api/field_behavior.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_kentik_2fnet_2fv202303_2fbgp_5ftypes_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_kentik_2fnet_2fv202303_2fbgp_5ftypes_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_kentik_2fnet_2fv202303_2fbgp_5ftypes_2eproto;
namespace kentik {
namespace net {
namespace v202303 {
class VantagePoint;
struct VantagePointDefaultTypeInternal;
extern VantagePointDefaultTypeInternal _VantagePoint_default_instance_;
}  // namespace v202303
}  // namespace net
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace kentik {
namespace net {
namespace v202303 {
enum Afi : int {
  AFI_UNSPECIFIED = 0,
  AFI_IP4 = 1,
  AFI_IP6 = 2,
  Afi_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Afi_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Afi_IsValid(int value);
extern const uint32_t Afi_internal_data_[];
constexpr Afi Afi_MIN = static_cast<Afi>(0);
constexpr Afi Afi_MAX = static_cast<Afi>(2);
constexpr int Afi_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
Afi_descriptor();
template <typename T>
const std::string& Afi_Name(T value) {
  static_assert(std::is_same<T, Afi>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Afi_Name().");
  return Afi_Name(static_cast<Afi>(value));
}
template <>
inline const std::string& Afi_Name(Afi value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Afi_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool Afi_Parse(absl::string_view name, Afi* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Afi>(
      Afi_descriptor(), name, value);
}
enum Safi : int {
  SAFI_UNSPECIFIED = 0,
  SAFI_UNICAST = 1,
  SAFI_MPLS = 4,
  SAFI_L3VPN = 128,
  Safi_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Safi_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Safi_IsValid(int value);
extern const uint32_t Safi_internal_data_[];
constexpr Safi Safi_MIN = static_cast<Safi>(0);
constexpr Safi Safi_MAX = static_cast<Safi>(128);
constexpr int Safi_ARRAYSIZE = 128 + 1;
const ::google::protobuf::EnumDescriptor*
Safi_descriptor();
template <typename T>
const std::string& Safi_Name(T value) {
  static_assert(std::is_same<T, Safi>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Safi_Name().");
  return ::google::protobuf::internal::NameOfEnum(Safi_descriptor(), value);
}
inline bool Safi_Parse(absl::string_view name, Safi* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Safi>(
      Safi_descriptor(), name, value);
}
enum RpkiStatus : int {
  RPKI_STATUS_UNSPECIFIED = 0,
  RPKI_STATUS_NOT_FOUND = 1,
  RPKI_STATUS_EXPLICIT_INVALID = 2,
  RPKI_STATUS_INVALID_PREFIX = 3,
  RPKI_STATUS_INVALID = 4,
  RPKI_STATUS_VALID = 5,
  RPKI_STATUS_ERROR = 8,
  RpkiStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  RpkiStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool RpkiStatus_IsValid(int value);
extern const uint32_t RpkiStatus_internal_data_[];
constexpr RpkiStatus RpkiStatus_MIN = static_cast<RpkiStatus>(0);
constexpr RpkiStatus RpkiStatus_MAX = static_cast<RpkiStatus>(8);
constexpr int RpkiStatus_ARRAYSIZE = 8 + 1;
const ::google::protobuf::EnumDescriptor*
RpkiStatus_descriptor();
template <typename T>
const std::string& RpkiStatus_Name(T value) {
  static_assert(std::is_same<T, RpkiStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to RpkiStatus_Name().");
  return RpkiStatus_Name(static_cast<RpkiStatus>(value));
}
template <>
inline const std::string& RpkiStatus_Name(RpkiStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<RpkiStatus_descriptor,
                                                 0, 8>(
      static_cast<int>(value));
}
inline bool RpkiStatus_Parse(absl::string_view name, RpkiStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RpkiStatus>(
      RpkiStatus_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class VantagePoint final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:kentik.net.v202303.VantagePoint) */ {
 public:
  inline VantagePoint() : VantagePoint(nullptr) {}
  ~VantagePoint() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(VantagePoint* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(VantagePoint));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VantagePoint(
      ::google::protobuf::internal::ConstantInitialized);

  inline VantagePoint(const VantagePoint& from) : VantagePoint(nullptr, from) {}
  inline VantagePoint(VantagePoint&& from) noexcept
      : VantagePoint(nullptr, std::move(from)) {}
  inline VantagePoint& operator=(const VantagePoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline VantagePoint& operator=(VantagePoint&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VantagePoint& default_instance() {
    return *internal_default_instance();
  }
  static inline const VantagePoint* internal_default_instance() {
    return reinterpret_cast<const VantagePoint*>(
        &_VantagePoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(VantagePoint& a, VantagePoint& b) { a.Swap(&b); }
  inline void Swap(VantagePoint* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VantagePoint* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VantagePoint* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<VantagePoint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VantagePoint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VantagePoint& from) { VantagePoint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(VantagePoint* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "kentik.net.v202303.VantagePoint"; }

 protected:
  explicit VantagePoint(::google::protobuf::Arena* arena);
  VantagePoint(::google::protobuf::Arena* arena, const VantagePoint& from);
  VantagePoint(::google::protobuf::Arena* arena, VantagePoint&& from) noexcept
      : VantagePoint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDatasetFieldNumber = 1,
    kCollectorFieldNumber = 2,
    kPeerIpFieldNumber = 4,
    kPeerAsnFieldNumber = 3,
  };
  // string dataset = 1 [json_name = "dataset", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_dataset() ;
  const std::string& dataset() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dataset(Arg_&& arg, Args_... args);
  std::string* mutable_dataset();
  PROTOBUF_NODISCARD std::string* release_dataset();
  void set_allocated_dataset(std::string* value);

  private:
  const std::string& _internal_dataset() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dataset(
      const std::string& value);
  std::string* _internal_mutable_dataset();

  public:
  // string collector = 2 [json_name = "collector", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_collector() ;
  const std::string& collector() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_collector(Arg_&& arg, Args_... args);
  std::string* mutable_collector();
  PROTOBUF_NODISCARD std::string* release_collector();
  void set_allocated_collector(std::string* value);

  private:
  const std::string& _internal_collector() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_collector(
      const std::string& value);
  std::string* _internal_mutable_collector();

  public:
  // string peer_ip = 4 [json_name = "peerIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_peer_ip() ;
  const std::string& peer_ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_peer_ip(Arg_&& arg, Args_... args);
  std::string* mutable_peer_ip();
  PROTOBUF_NODISCARD std::string* release_peer_ip();
  void set_allocated_peer_ip(std::string* value);

  private:
  const std::string& _internal_peer_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_peer_ip(
      const std::string& value);
  std::string* _internal_mutable_peer_ip();

  public:
  // uint32 peer_asn = 3 [json_name = "peerAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
  void clear_peer_asn() ;
  ::uint32_t peer_asn() const;
  void set_peer_asn(::uint32_t value);

  private:
  ::uint32_t _internal_peer_asn() const;
  void _internal_set_peer_asn(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:kentik.net.v202303.VantagePoint)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      63, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const VantagePoint& from_msg);
    ::google::protobuf::internal::ArenaStringPtr dataset_;
    ::google::protobuf::internal::ArenaStringPtr collector_;
    ::google::protobuf::internal::ArenaStringPtr peer_ip_;
    ::uint32_t peer_asn_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_kentik_2fnet_2fv202303_2fbgp_5ftypes_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// VantagePoint

// string dataset = 1 [json_name = "dataset", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void VantagePoint::clear_dataset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dataset_.ClearToEmpty();
}
inline const std::string& VantagePoint::dataset() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.net.v202303.VantagePoint.dataset)
  return _internal_dataset();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VantagePoint::set_dataset(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dataset_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.net.v202303.VantagePoint.dataset)
}
inline std::string* VantagePoint::mutable_dataset() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dataset();
  // @@protoc_insertion_point(field_mutable:kentik.net.v202303.VantagePoint.dataset)
  return _s;
}
inline const std::string& VantagePoint::_internal_dataset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dataset_.Get();
}
inline void VantagePoint::_internal_set_dataset(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dataset_.Set(value, GetArena());
}
inline std::string* VantagePoint::_internal_mutable_dataset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dataset_.Mutable( GetArena());
}
inline std::string* VantagePoint::release_dataset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.net.v202303.VantagePoint.dataset)
  return _impl_.dataset_.Release();
}
inline void VantagePoint::set_allocated_dataset(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dataset_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.dataset_.IsDefault()) {
    _impl_.dataset_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.net.v202303.VantagePoint.dataset)
}

// string collector = 2 [json_name = "collector", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void VantagePoint::clear_collector() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collector_.ClearToEmpty();
}
inline const std::string& VantagePoint::collector() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.net.v202303.VantagePoint.collector)
  return _internal_collector();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VantagePoint::set_collector(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collector_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.net.v202303.VantagePoint.collector)
}
inline std::string* VantagePoint::mutable_collector() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_collector();
  // @@protoc_insertion_point(field_mutable:kentik.net.v202303.VantagePoint.collector)
  return _s;
}
inline const std::string& VantagePoint::_internal_collector() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.collector_.Get();
}
inline void VantagePoint::_internal_set_collector(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collector_.Set(value, GetArena());
}
inline std::string* VantagePoint::_internal_mutable_collector() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.collector_.Mutable( GetArena());
}
inline std::string* VantagePoint::release_collector() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.net.v202303.VantagePoint.collector)
  return _impl_.collector_.Release();
}
inline void VantagePoint::set_allocated_collector(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.collector_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.collector_.IsDefault()) {
    _impl_.collector_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.net.v202303.VantagePoint.collector)
}

// uint32 peer_asn = 3 [json_name = "peerAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void VantagePoint::clear_peer_asn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_asn_ = 0u;
}
inline ::uint32_t VantagePoint::peer_asn() const {
  // @@protoc_insertion_point(field_get:kentik.net.v202303.VantagePoint.peer_asn)
  return _internal_peer_asn();
}
inline void VantagePoint::set_peer_asn(::uint32_t value) {
  _internal_set_peer_asn(value);
  // @@protoc_insertion_point(field_set:kentik.net.v202303.VantagePoint.peer_asn)
}
inline ::uint32_t VantagePoint::_internal_peer_asn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peer_asn_;
}
inline void VantagePoint::_internal_set_peer_asn(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_asn_ = value;
}

// string peer_ip = 4 [json_name = "peerIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
inline void VantagePoint::clear_peer_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_ip_.ClearToEmpty();
}
inline const std::string& VantagePoint::peer_ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:kentik.net.v202303.VantagePoint.peer_ip)
  return _internal_peer_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VantagePoint::set_peer_ip(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:kentik.net.v202303.VantagePoint.peer_ip)
}
inline std::string* VantagePoint::mutable_peer_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_peer_ip();
  // @@protoc_insertion_point(field_mutable:kentik.net.v202303.VantagePoint.peer_ip)
  return _s;
}
inline const std::string& VantagePoint::_internal_peer_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peer_ip_.Get();
}
inline void VantagePoint::_internal_set_peer_ip(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_ip_.Set(value, GetArena());
}
inline std::string* VantagePoint::_internal_mutable_peer_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.peer_ip_.Mutable( GetArena());
}
inline std::string* VantagePoint::release_peer_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:kentik.net.v202303.VantagePoint.peer_ip)
  return _impl_.peer_ip_.Release();
}
inline void VantagePoint::set_allocated_peer_ip(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_ip_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.peer_ip_.IsDefault()) {
    _impl_.peer_ip_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:kentik.net.v202303.VantagePoint.peer_ip)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v202303
}  // namespace net
}  // namespace kentik


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::kentik::net::v202303::Afi> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::net::v202303::Afi>() {
  return ::kentik::net::v202303::Afi_descriptor();
}
template <>
struct is_proto_enum<::kentik::net::v202303::Safi> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::net::v202303::Safi>() {
  return ::kentik::net::v202303::Safi_descriptor();
}
template <>
struct is_proto_enum<::kentik::net::v202303::RpkiStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::kentik::net::v202303::RpkiStatus>() {
  return ::kentik::net::v202303::RpkiStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // kentik_2fnet_2fv202303_2fbgp_5ftypes_2eproto_2epb_2eh
