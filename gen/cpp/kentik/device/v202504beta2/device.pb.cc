// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kentik/device/v202504beta2/device.proto
// Protobuf C++ Version: 5.29.3

#include "kentik/device/v202504beta2/device.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace kentik {
namespace device {
namespace v202504beta2 {

inline constexpr Site::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        site_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        company_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        lat_{0},
        lon_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Site::Site(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SiteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SiteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SiteDefaultTypeInternal() {}
  union {
    Site _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SiteDefaultTypeInternal _Site_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Plan_MetadataEntry_DoNotUse::Plan_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Plan_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Plan_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Plan_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Plan_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Plan_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Plan_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Plan_MetadataEntry_DoNotUseDefaultTypeInternal _Plan_MetadataEntry_DoNotUse_default_instance_;

inline constexpr LabelConcise::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LabelConcise::LabelConcise(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LabelConciseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LabelConciseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LabelConciseDefaultTypeInternal() {}
  union {
    LabelConcise _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LabelConciseDefaultTypeInternal _LabelConcise_default_instance_;

inline constexpr Interface::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : interface_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        initial_snmp_speed_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        snmp_speed_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        snmp_alias_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        snmp_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        connectivity_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        network_boundary_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        provider_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Interface::Interface(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InterfaceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InterfaceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InterfaceDefaultTypeInternal() {}
  union {
    Interface _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InterfaceDefaultTypeInternal _Interface_default_instance_;

inline constexpr GnmiV1Conf::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : dialout_server_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GnmiV1Conf::GnmiV1Conf(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GnmiV1ConfDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GnmiV1ConfDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GnmiV1ConfDefaultTypeInternal() {}
  union {
    GnmiV1Conf _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GnmiV1ConfDefaultTypeInternal _GnmiV1Conf_default_instance_;

inline constexpr DeviceSnmpV3Conf::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        authentication_protocol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        authentication_passphrase_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        privacy_protocol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        privacy_passphrase_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceSnmpV3Conf::DeviceSnmpV3Conf(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeviceSnmpV3ConfDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceSnmpV3ConfDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceSnmpV3ConfDefaultTypeInternal() {}
  union {
    DeviceSnmpV3Conf _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceSnmpV3ConfDefaultTypeInternal _DeviceSnmpV3Conf_default_instance_;

inline constexpr DeviceQuery::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : no_custom_columns_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceQuery::DeviceQuery(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeviceQueryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceQueryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceQueryDefaultTypeInternal() {}
  union {
    DeviceQuery _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceQueryDefaultTypeInternal _DeviceQuery_default_instance_;

inline constexpr DeleteDevicesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : failed_devices_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteDevicesResponse::DeleteDevicesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeleteDevicesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteDevicesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteDevicesResponseDefaultTypeInternal() {}
  union {
    DeleteDevicesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteDevicesResponseDefaultTypeInternal _DeleteDevicesResponse_default_instance_;

inline constexpr DeleteDevicesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ids_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteDevicesRequest::DeleteDevicesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeleteDevicesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteDevicesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteDevicesRequestDefaultTypeInternal() {}
  union {
    DeleteDevicesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteDevicesRequestDefaultTypeInternal _DeleteDevicesRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR DeleteDeviceResponse::DeleteDeviceResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct DeleteDeviceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteDeviceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteDeviceResponseDefaultTypeInternal() {}
  union {
    DeleteDeviceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteDeviceResponseDefaultTypeInternal _DeleteDeviceResponse_default_instance_;

inline constexpr DeleteDeviceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteDeviceRequest::DeleteDeviceRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeleteDeviceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteDeviceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteDeviceRequestDefaultTypeInternal() {}
  union {
    DeleteDeviceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteDeviceRequestDefaultTypeInternal _DeleteDeviceRequest_default_instance_;

inline constexpr CustomColumnData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        field_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        col_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        col_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CustomColumnData::CustomColumnData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CustomColumnDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CustomColumnDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CustomColumnDataDefaultTypeInternal() {}
  union {
    CustomColumnData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CustomColumnDataDefaultTypeInternal _CustomColumnData_default_instance_;

inline constexpr UpdateDeviceLabelsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : labels_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateDeviceLabelsRequest::UpdateDeviceLabelsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateDeviceLabelsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateDeviceLabelsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateDeviceLabelsRequestDefaultTypeInternal() {}
  union {
    UpdateDeviceLabelsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateDeviceLabelsRequestDefaultTypeInternal _UpdateDeviceLabelsRequest_default_instance_;

inline constexpr Plan::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_types_{},
        devices_{},
        metadata_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        company_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cdate_{nullptr},
        edate_{nullptr},
        active_{false},
        bgp_{false},
        fast_retention_{0u},
        full_retention_{0u},
        max_bigdata_fps_{0u},
        max_devices_{0u},
        max_fps_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Plan::Plan(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlanDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlanDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlanDefaultTypeInternal() {}
  union {
    Plan _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlanDefaultTypeInternal _Plan_default_instance_;

inline constexpr ListDevicesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        query_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ListDevicesRequest::ListDevicesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListDevicesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListDevicesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListDevicesRequestDefaultTypeInternal() {}
  union {
    ListDevicesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListDevicesRequestDefaultTypeInternal _ListDevicesRequest_default_instance_;

inline constexpr Label::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        company_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        color_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        order_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pivot_device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pivot_label_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        edate_{nullptr},
        cdate_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Label::Label(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LabelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LabelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LabelDefaultTypeInternal() {}
  union {
    Label _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LabelDefaultTypeInternal _Label_default_instance_;

inline constexpr GetDeviceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        query_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetDeviceRequest::GetDeviceRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetDeviceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDeviceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDeviceRequestDefaultTypeInternal() {}
  union {
    GetDeviceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDeviceRequestDefaultTypeInternal _GetDeviceRequest_default_instance_;

inline constexpr DeviceNmsStConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        credential_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timeout_{nullptr},
        port_{0u},
        secure_{false} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceNmsStConfig::DeviceNmsStConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeviceNmsStConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceNmsStConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceNmsStConfigDefaultTypeInternal() {}
  union {
    DeviceNmsStConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceNmsStConfigDefaultTypeInternal _DeviceNmsStConfig_default_instance_;

inline constexpr DeviceNmsSnmpConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        credential_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timeout_{nullptr},
        port_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceNmsSnmpConfig::DeviceNmsSnmpConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeviceNmsSnmpConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceNmsSnmpConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceNmsSnmpConfigDefaultTypeInternal() {}
  union {
    DeviceNmsSnmpConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceNmsSnmpConfigDefaultTypeInternal _DeviceNmsSnmpConfig_default_instance_;

inline constexpr DeviceNmsConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        agent_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ip_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        snmp_{nullptr},
        st_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceNmsConfig::DeviceNmsConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeviceNmsConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceNmsConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceNmsConfigDefaultTypeInternal() {}
  union {
    DeviceNmsConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceNmsConfigDefaultTypeInternal _DeviceNmsConfig_default_instance_;

inline constexpr DeviceDetailed::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        labels_{},
        all_interfaces_{},
        sending_ips_{},
        custom_column_data_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        company_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_alias_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_flow_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_sample_rate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_snmp_ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_snmp_community_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_bgp_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_bgp_neighbor_ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_bgp_neighbor_ip6_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_bgp_neighbor_asn_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_bgp_password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bgp_lookup_strategy_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        use_bgp_device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        custom_columns_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_chf_client_port_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_chf_client_protocol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_chf_interface_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_agent_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_proxy_bgp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_proxy_bgp6_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cdn_attr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bgp_peer_ip4_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bgp_peer_ip6_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_subtype_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_vendor_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_model_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cloud_export_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_kproxy_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        snmp_enabled_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        snmp_disabled_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        snmp_disabled_reason_other_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bgp_disabled_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bgp_disabled_reason_other_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_manufacturer_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_alert_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        role_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_bgp_credential_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        flow_snmp_credential_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        site_{nullptr},
        plan_{nullptr},
        created_date_{nullptr},
        updated_date_{nullptr},
        device_snmp_v3_conf_{nullptr},
        device_gnmi_v1_conf_{nullptr},
        nms_{nullptr},
        minimize_snmp_{false},
        device_bgp_flowspec_{false},
        device_bgp_label_unicast_{false},
        device_snmp_v3_conf_enabled_{false},
        max_flow_rate_{0u},
        max_big_flow_rate_{0u},
        use_asn_from_flow_{false},
        max_interface_{0u},
        max_interface_check_{0u},
        monitoring_template_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceDetailed::DeviceDetailed(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeviceDetailedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceDetailedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceDetailedDefaultTypeInternal() {}
  union {
    DeviceDetailed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceDetailedDefaultTypeInternal _DeviceDetailed_default_instance_;

inline constexpr DeviceConcise::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sending_ips_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_subtype_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cdn_attr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_snmp_ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_snmp_community_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_bgp_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_bgp_neighbor_ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_bgp_neighbor_ip6_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_bgp_neighbor_asn_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_bgp_password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        use_bgp_device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_bgp_credential_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        flow_snmp_credential_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_snmp_v3_conf_{nullptr},
        nms_{nullptr},
        device_sample_rate_{0},
        plan_id_{0u},
        site_id_{0u},
        minimize_snmp_{false},
        device_bgp_flowspec_{false},
        monitoring_template_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceConcise::DeviceConcise(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeviceConciseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceConciseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceConciseDefaultTypeInternal() {}
  union {
    DeviceConcise _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceConciseDefaultTypeInternal _DeviceConcise_default_instance_;

inline constexpr UpdateDevicesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : devices_{},
        failed_devices_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateDevicesResponse::UpdateDevicesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateDevicesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateDevicesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateDevicesResponseDefaultTypeInternal() {}
  union {
    UpdateDevicesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateDevicesResponseDefaultTypeInternal _UpdateDevicesResponse_default_instance_;

inline constexpr UpdateDevicesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : devices_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateDevicesRequest::UpdateDevicesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateDevicesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateDevicesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateDevicesRequestDefaultTypeInternal() {}
  union {
    UpdateDevicesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateDevicesRequestDefaultTypeInternal _UpdateDevicesRequest_default_instance_;

inline constexpr UpdateDeviceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateDeviceResponse::UpdateDeviceResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateDeviceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateDeviceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateDeviceResponseDefaultTypeInternal() {}
  union {
    UpdateDeviceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateDeviceResponseDefaultTypeInternal _UpdateDeviceResponse_default_instance_;

inline constexpr UpdateDeviceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateDeviceRequest::UpdateDeviceRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateDeviceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateDeviceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateDeviceRequestDefaultTypeInternal() {}
  union {
    UpdateDeviceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateDeviceRequestDefaultTypeInternal _UpdateDeviceRequest_default_instance_;

inline constexpr UpdateDeviceLabelsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateDeviceLabelsResponse::UpdateDeviceLabelsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateDeviceLabelsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateDeviceLabelsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateDeviceLabelsResponseDefaultTypeInternal() {}
  union {
    UpdateDeviceLabelsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateDeviceLabelsResponseDefaultTypeInternal _UpdateDeviceLabelsResponse_default_instance_;

inline constexpr ListDevicesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : devices_{},
        invalid_count_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListDevicesResponse::ListDevicesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListDevicesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListDevicesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListDevicesResponseDefaultTypeInternal() {}
  union {
    ListDevicesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListDevicesResponseDefaultTypeInternal _ListDevicesResponse_default_instance_;

inline constexpr GetDeviceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetDeviceResponse::GetDeviceResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetDeviceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDeviceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDeviceResponseDefaultTypeInternal() {}
  union {
    GetDeviceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDeviceResponseDefaultTypeInternal _GetDeviceResponse_default_instance_;

inline constexpr CreateDevicesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : devices_{},
        failed_devices_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CreateDevicesResponse::CreateDevicesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateDevicesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateDevicesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateDevicesResponseDefaultTypeInternal() {}
  union {
    CreateDevicesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateDevicesResponseDefaultTypeInternal _CreateDevicesResponse_default_instance_;

inline constexpr CreateDevicesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : devices_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CreateDevicesRequest::CreateDevicesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateDevicesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateDevicesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateDevicesRequestDefaultTypeInternal() {}
  union {
    CreateDevicesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateDevicesRequestDefaultTypeInternal _CreateDevicesRequest_default_instance_;

inline constexpr CreateDeviceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateDeviceResponse::CreateDeviceResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateDeviceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateDeviceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateDeviceResponseDefaultTypeInternal() {}
  union {
    CreateDeviceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateDeviceResponseDefaultTypeInternal _CreateDeviceResponse_default_instance_;

inline constexpr CreateDeviceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        device_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateDeviceRequest::CreateDeviceRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateDeviceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateDeviceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateDeviceRequestDefaultTypeInternal() {}
  union {
    CreateDeviceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateDeviceRequestDefaultTypeInternal _CreateDeviceRequest_default_instance_;
}  // namespace v202504beta2
}  // namespace device
}  // namespace kentik
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto = nullptr;
const ::uint32_t
    TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceSnmpV3Conf, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceSnmpV3Conf, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceSnmpV3Conf, _impl_.authentication_protocol_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceSnmpV3Conf, _impl_.authentication_passphrase_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceSnmpV3Conf, _impl_.privacy_protocol_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceSnmpV3Conf, _impl_.privacy_passphrase_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceNmsConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceNmsConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceNmsConfig, _impl_.agent_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceNmsConfig, _impl_.ip_address_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceNmsConfig, _impl_.snmp_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceNmsConfig, _impl_.st_),
        ~0u,
        ~0u,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceNmsSnmpConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceNmsSnmpConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceNmsSnmpConfig, _impl_.credential_name_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceNmsSnmpConfig, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceNmsSnmpConfig, _impl_.timeout_),
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceNmsStConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceNmsStConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceNmsStConfig, _impl_.credential_name_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceNmsStConfig, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceNmsStConfig, _impl_.timeout_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceNmsStConfig, _impl_.secure_),
        ~0u,
        ~0u,
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.device_name_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.device_subtype_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.cdn_attr_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.device_description_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.sending_ips_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.device_sample_rate_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.plan_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.site_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.minimize_snmp_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.device_snmp_ip_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.device_snmp_community_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.device_snmp_v3_conf_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.device_bgp_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.device_bgp_neighbor_ip_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.device_bgp_neighbor_ip6_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.device_bgp_neighbor_asn_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.device_bgp_password_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.use_bgp_device_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.device_bgp_flowspec_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.nms_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.device_bgp_credential_name_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.flow_snmp_credential_name_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceConcise, _impl_.monitoring_template_id_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        2,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Site, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Site, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Site, _impl_.site_name_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Site, _impl_.lat_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Site, _impl_.lon_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Site, _impl_.company_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Plan_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Plan_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Plan_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Plan_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Plan, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Plan, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Plan, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Plan, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Plan, _impl_.active_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Plan, _impl_.bgp_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Plan, _impl_.company_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Plan, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Plan, _impl_.device_types_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Plan, _impl_.devices_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Plan, _impl_.fast_retention_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Plan, _impl_.full_retention_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Plan, _impl_.max_bigdata_fps_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Plan, _impl_.max_devices_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Plan, _impl_.max_fps_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Plan, _impl_.cdate_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Plan, _impl_.edate_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Plan, _impl_.metadata_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Label, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Label, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Label, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Label, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Label, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Label, _impl_.edate_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Label, _impl_.cdate_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Label, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Label, _impl_.company_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Label, _impl_.color_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Label, _impl_.order_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Label, _impl_.pivot_device_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Label, _impl_.pivot_label_id_),
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Interface, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Interface, _impl_.interface_description_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Interface, _impl_.initial_snmp_speed_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Interface, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Interface, _impl_.snmp_speed_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Interface, _impl_.snmp_alias_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Interface, _impl_.snmp_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Interface, _impl_.connectivity_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Interface, _impl_.network_boundary_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::Interface, _impl_.provider_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::CustomColumnData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::CustomColumnData, _impl_.device_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::CustomColumnData, _impl_.field_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::CustomColumnData, _impl_.col_name_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::CustomColumnData, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::CustomColumnData, _impl_.col_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::CustomColumnData, _impl_.device_type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::GnmiV1Conf, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::GnmiV1Conf, _impl_.dialout_server_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.company_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_name_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_alias_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_description_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.site_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.plan_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.labels_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.all_interfaces_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_flow_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_sample_rate_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.sending_ips_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_snmp_ip_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_snmp_community_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.minimize_snmp_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_bgp_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_bgp_neighbor_ip_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_bgp_neighbor_ip6_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_bgp_neighbor_asn_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_bgp_flowspec_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_bgp_password_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_bgp_label_unicast_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.bgp_lookup_strategy_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_status_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.use_bgp_device_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.custom_columns_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.custom_column_data_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_chf_client_port_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_chf_client_protocol_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_chf_interface_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_agent_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.max_flow_rate_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.max_big_flow_rate_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_proxy_bgp_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_proxy_bgp6_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.created_date_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.updated_date_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_snmp_v3_conf_enabled_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_snmp_v3_conf_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.cdn_attr_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.bgp_peer_ip4_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.bgp_peer_ip6_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_subtype_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_vendor_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_model_type_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.cloud_export_id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_kproxy_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.snmp_enabled_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.snmp_disabled_reason_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.snmp_disabled_reason_other_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.bgp_disabled_reason_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.bgp_disabled_reason_other_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_manufacturer_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_alert_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.role_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_gnmi_v1_conf_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.use_asn_from_flow_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.max_interface_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.max_interface_check_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.nms_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.device_bgp_credential_name_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.flow_snmp_credential_name_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceDetailed, _impl_.monitoring_template_id_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        7,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        2,
        3,
        ~0u,
        4,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        5,
        ~0u,
        ~0u,
        ~0u,
        6,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceQuery, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeviceQuery, _impl_.no_custom_columns_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::LabelConcise, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::LabelConcise, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::ListDevicesRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::ListDevicesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::ListDevicesRequest, _impl_.query_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::ListDevicesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::ListDevicesResponse, _impl_.devices_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::ListDevicesResponse, _impl_.invalid_count_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::GetDeviceRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::GetDeviceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::GetDeviceRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::GetDeviceRequest, _impl_.query_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::GetDeviceResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::GetDeviceResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::GetDeviceResponse, _impl_.device_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::CreateDeviceRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::CreateDeviceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::CreateDeviceRequest, _impl_.device_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::CreateDeviceResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::CreateDeviceResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::CreateDeviceResponse, _impl_.device_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::CreateDevicesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::CreateDevicesRequest, _impl_.devices_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::CreateDevicesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::CreateDevicesResponse, _impl_.devices_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::CreateDevicesResponse, _impl_.failed_devices_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::UpdateDeviceRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::UpdateDeviceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::UpdateDeviceRequest, _impl_.device_),
        0,
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::UpdateDeviceResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::UpdateDeviceResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::UpdateDeviceResponse, _impl_.device_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::UpdateDevicesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::UpdateDevicesRequest, _impl_.devices_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::UpdateDevicesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::UpdateDevicesResponse, _impl_.devices_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::UpdateDevicesResponse, _impl_.failed_devices_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::UpdateDeviceLabelsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::UpdateDeviceLabelsRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::UpdateDeviceLabelsRequest, _impl_.labels_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::UpdateDeviceLabelsResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::UpdateDeviceLabelsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::UpdateDeviceLabelsResponse, _impl_.device_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeleteDeviceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeleteDeviceRequest, _impl_.id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeleteDeviceResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeleteDevicesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeleteDevicesRequest, _impl_.ids_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeleteDevicesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::kentik::device::v202504beta2::DeleteDevicesResponse, _impl_.failed_devices_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::kentik::device::v202504beta2::DeviceSnmpV3Conf)},
        {13, 25, -1, sizeof(::kentik::device::v202504beta2::DeviceNmsConfig)},
        {29, 40, -1, sizeof(::kentik::device::v202504beta2::DeviceNmsSnmpConfig)},
        {43, 55, -1, sizeof(::kentik::device::v202504beta2::DeviceNmsStConfig)},
        {59, 91, -1, sizeof(::kentik::device::v202504beta2::DeviceConcise)},
        {115, -1, -1, sizeof(::kentik::device::v202504beta2::Site)},
        {128, 138, -1, sizeof(::kentik::device::v202504beta2::Plan_MetadataEntry_DoNotUse)},
        {140, 164, -1, sizeof(::kentik::device::v202504beta2::Plan)},
        {180, 199, -1, sizeof(::kentik::device::v202504beta2::Label)},
        {210, -1, -1, sizeof(::kentik::device::v202504beta2::Interface)},
        {227, -1, -1, sizeof(::kentik::device::v202504beta2::CustomColumnData)},
        {241, -1, -1, sizeof(::kentik::device::v202504beta2::GnmiV1Conf)},
        {250, 322, -1, sizeof(::kentik::device::v202504beta2::DeviceDetailed)},
        {386, -1, -1, sizeof(::kentik::device::v202504beta2::DeviceQuery)},
        {395, -1, -1, sizeof(::kentik::device::v202504beta2::LabelConcise)},
        {404, 413, -1, sizeof(::kentik::device::v202504beta2::ListDevicesRequest)},
        {414, -1, -1, sizeof(::kentik::device::v202504beta2::ListDevicesResponse)},
        {424, 434, -1, sizeof(::kentik::device::v202504beta2::GetDeviceRequest)},
        {436, 445, -1, sizeof(::kentik::device::v202504beta2::GetDeviceResponse)},
        {446, 455, -1, sizeof(::kentik::device::v202504beta2::CreateDeviceRequest)},
        {456, 465, -1, sizeof(::kentik::device::v202504beta2::CreateDeviceResponse)},
        {466, -1, -1, sizeof(::kentik::device::v202504beta2::CreateDevicesRequest)},
        {475, -1, -1, sizeof(::kentik::device::v202504beta2::CreateDevicesResponse)},
        {485, 494, -1, sizeof(::kentik::device::v202504beta2::UpdateDeviceRequest)},
        {495, 504, -1, sizeof(::kentik::device::v202504beta2::UpdateDeviceResponse)},
        {505, -1, -1, sizeof(::kentik::device::v202504beta2::UpdateDevicesRequest)},
        {514, -1, -1, sizeof(::kentik::device::v202504beta2::UpdateDevicesResponse)},
        {524, -1, -1, sizeof(::kentik::device::v202504beta2::UpdateDeviceLabelsRequest)},
        {534, 543, -1, sizeof(::kentik::device::v202504beta2::UpdateDeviceLabelsResponse)},
        {544, -1, -1, sizeof(::kentik::device::v202504beta2::DeleteDeviceRequest)},
        {553, -1, -1, sizeof(::kentik::device::v202504beta2::DeleteDeviceResponse)},
        {561, -1, -1, sizeof(::kentik::device::v202504beta2::DeleteDevicesRequest)},
        {570, -1, -1, sizeof(::kentik::device::v202504beta2::DeleteDevicesResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::kentik::device::v202504beta2::_DeviceSnmpV3Conf_default_instance_._instance,
    &::kentik::device::v202504beta2::_DeviceNmsConfig_default_instance_._instance,
    &::kentik::device::v202504beta2::_DeviceNmsSnmpConfig_default_instance_._instance,
    &::kentik::device::v202504beta2::_DeviceNmsStConfig_default_instance_._instance,
    &::kentik::device::v202504beta2::_DeviceConcise_default_instance_._instance,
    &::kentik::device::v202504beta2::_Site_default_instance_._instance,
    &::kentik::device::v202504beta2::_Plan_MetadataEntry_DoNotUse_default_instance_._instance,
    &::kentik::device::v202504beta2::_Plan_default_instance_._instance,
    &::kentik::device::v202504beta2::_Label_default_instance_._instance,
    &::kentik::device::v202504beta2::_Interface_default_instance_._instance,
    &::kentik::device::v202504beta2::_CustomColumnData_default_instance_._instance,
    &::kentik::device::v202504beta2::_GnmiV1Conf_default_instance_._instance,
    &::kentik::device::v202504beta2::_DeviceDetailed_default_instance_._instance,
    &::kentik::device::v202504beta2::_DeviceQuery_default_instance_._instance,
    &::kentik::device::v202504beta2::_LabelConcise_default_instance_._instance,
    &::kentik::device::v202504beta2::_ListDevicesRequest_default_instance_._instance,
    &::kentik::device::v202504beta2::_ListDevicesResponse_default_instance_._instance,
    &::kentik::device::v202504beta2::_GetDeviceRequest_default_instance_._instance,
    &::kentik::device::v202504beta2::_GetDeviceResponse_default_instance_._instance,
    &::kentik::device::v202504beta2::_CreateDeviceRequest_default_instance_._instance,
    &::kentik::device::v202504beta2::_CreateDeviceResponse_default_instance_._instance,
    &::kentik::device::v202504beta2::_CreateDevicesRequest_default_instance_._instance,
    &::kentik::device::v202504beta2::_CreateDevicesResponse_default_instance_._instance,
    &::kentik::device::v202504beta2::_UpdateDeviceRequest_default_instance_._instance,
    &::kentik::device::v202504beta2::_UpdateDeviceResponse_default_instance_._instance,
    &::kentik::device::v202504beta2::_UpdateDevicesRequest_default_instance_._instance,
    &::kentik::device::v202504beta2::_UpdateDevicesResponse_default_instance_._instance,
    &::kentik::device::v202504beta2::_UpdateDeviceLabelsRequest_default_instance_._instance,
    &::kentik::device::v202504beta2::_UpdateDeviceLabelsResponse_default_instance_._instance,
    &::kentik::device::v202504beta2::_DeleteDeviceRequest_default_instance_._instance,
    &::kentik::device::v202504beta2::_DeleteDeviceResponse_default_instance_._instance,
    &::kentik::device::v202504beta2::_DeleteDevicesRequest_default_instance_._instance,
    &::kentik::device::v202504beta2::_DeleteDevicesResponse_default_instance_._instance,
};
const char descriptor_table_protodef_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\'kentik/device/v202504beta2/device.prot"
    "o\022\032kentik.device.v202504beta2\032\034google/ap"
    "i/annotations.proto\032\027google/api/client.p"
    "roto\032\037google/api/field_behavior.proto\032\037g"
    "oogle/protobuf/timestamp.proto\032\036google/p"
    "rotobuf/duration.proto\032.protoc-gen-opena"
    "piv2/options/annotations.proto\032%kentik/c"
    "ore/v202303/annotations.proto\"\222\007\n\020Device"
    "SnmpV3Conf\022\250\001\n\010username\030\001 \001(\tB\213\001\222A\207\0012\204\001U"
    "serName (username) - the user name to us"
    "e to authenticate via SNMP v3. ** UserNa"
    "me is required when device_snmp_v3_conf "
    "is not nullR\010username\022\226\001\n\027authentication"
    "_protocol\030\002 \001(\tB]\222AZ2XAuthentication Pro"
    "tocol (authentication_protocol) - the au"
    "th protocol to use via SNMP v3R\026authenti"
    "cationProtocol\022\350\001\n\031authentication_passph"
    "rase\030\003 \001(\tB\252\001\222A\246\0012\243\001Authentication Passp"
    "hrase (authentication_passphrase) - the "
    "passphrase to use for SNMP v3 authentica"
    "tion protocol (required when Authenticat"
    "ionProtocol not NoAuth)R\030authenticationP"
    "assphrase\022\215\001\n\020privacy_protocol\030\004 \001(\tBb\222A"
    "_2]Privacy Protocol (privacy_protocol) -"
    " the privacy protocol to use to authenti"
    "cate via SNMP v3R\017privacyProtocol\022\276\001\n\022pr"
    "ivacy_passphrase\030\005 \001(\tB\216\001\222A\212\0012\207\001Privacy "
    "Passphrase (privacy_passphrase) - the pa"
    "ssphrase to use for SNMP v3 privacy prot"
    "ocol (required when PrivacyProtocol not "
    "NoPriv)R\021privacyPassphrase\"\371\003\n\017DeviceNms"
    "Config\022O\n\010agent_id\030\002 \001(\tB4\222A12/ID of the"
    " agent that is monitoring this device.R\007"
    "agentId\022D\n\nip_address\030\003 \001(\tB%\222A\"2 Local "
    "IP address of this device.R\tipAddress\022\303\001"
    "\n\004snmp\030\004 \001(\0132/.kentik.device.v202504beta"
    "2.DeviceNmsSnmpConfigB~\222A{2yConfiguratio"
    "n if metrics will be collected over SNMP"
    ". Not including this configuration will "
    "make this a ping-only device.R\004snmp\022\210\001\n\002"
    "st\030\005 \001(\0132-.kentik.device.v202504beta2.De"
    "viceNmsStConfigBI\222AF2DConfiguration if m"
    "etrics will be collected over Streaming "
    "Telemetry.R\002st\"\234\002\n\023DeviceNmsSnmpConfig\022e"
    "\n\017credential_name\030\001 \001(\tB<\222A927Name of th"
    "e SNMP credentials from the credential v"
    "ault.R\016credentialName\022\?\n\004port\030\002 \001(\rB+\222A("
    "2&SNMP port, to override default of 161."
    "R\004port\022]\n\007timeout\030\003 \001(\0132\031.google.protobu"
    "f.DurationB(\222A%2#Timeout, to override de"
    "fault of 2s.R\007timeout\"\330\002\n\021DeviceNmsStCon"
    "fig\022c\n\017credential_name\030\001 \001(\tB:\222A725Name "
    "of the ST credentials from the credentia"
    "l vault.R\016credentialName\022>\n\004port\030\002 \001(\rB*"
    "\222A\'2%ST port, to override default of 603"
    "0.R\004port\022]\n\007timeout\030\003 \001(\0132\031.google.proto"
    "buf.DurationB(\222A%2#Timeout, to override "
    "default of 2s.R\007timeout\022\?\n\006secure\030\004 \001(\010B"
    "\'\222A$2\"Use SSL to connect to this device."
    "R\006secure\"\367)\n\rDeviceConcise\0227\n\002id\030\001 \001(\tB\'"
    "\222A$2\"System generated unique identifierR"
    "\002id\022\240\001\n\013device_name\030\002 \001(\tB\177\222A|2zDevice n"
    "ame (device_name) - The name of the devi"
    "ce. Valid characters: alphanumeric and u"
    "nderscores. Length: min=4, max=60.R\ndevi"
    "ceName\022a\n\016device_subtype\030\003 \001(\tB:\222A725Dev"
    "ice subtype (device_subtype) - The devic"
    "e subtype.R\rdeviceSubtype\022\215\002\n\010cdn_attr\030\004"
    " \001(\tB\361\001\222A\355\0012\352\001CDN attributes (cdn_attr) "
    "- If this is a DNS server, you can contr"
    "ibute its queries to Kentik\'s CDN attrib"
    "ution database. Valid values: \"Y\" or \"N\""
    ". ** cdn_attr is required when the devic"
    "e subtype\'s parent type is \"host-nprobe-"
    "dns-www\"R\007cdnAttr\022\226\001\n\022device_description"
    "\030\005 \001(\tBg\222Ad2bDescription (device_descrip"
    "tion) - The device description. Valid ch"
    "aracters: any. Length: max=128.R\021deviceD"
    "escription\022\343\001\n\013sending_ips\030\006 \003(\tB\301\001\222A\275\0012"
    "\272\001Device ip (sending_ips) - Array contai"
    "ning one or more IP address(es), from wh"
    "ich the device is sending flow. ** sendi"
    "ng_ips is required when the device subty"
    "pe\'s parent type is \"router\"R\nsendingIps"
    "\022\352\002\n\022device_sample_rate\030\007 \001(\001B\273\002\222A\267\0022\264\002S"
    "ample rate (device_sample_rate) - The ra"
    "te at which the device is sampling flows"
    ". Valid values: integer bigger than 1. R"
    "ecommended rate varies depending on flow"
    " volume; see https://kb.kentik.com/Ab02."
    "htm#Ab02-Flow_Sampling. ** device_sample"
    "_rate is required when the device subtyp"
    "e\'s parent type is \"router\"R\020deviceSampl"
    "eRate\022\256\001\n\007plan_id\030\010 \001(\rB\224\001\222A\220\0012\215\001Plan (p"
    "lan_id) - The ID of the plan to which th"
    "is device is assigned. Available plan(s)"
    " can be found via the Plans API. Valid v"
    "alue: integer.R\006planId\022\273\001\n\007site_id\030\t \001(\r"
    "B\241\001\222A\235\0012\232\001Site (site_id) - The ID of the"
    " site (if any) to which this device is a"
    "ssigned. Site IDs are system generated w"
    "hen a site is created. Valid value: inte"
    "ger.R\006siteId\022\270\003\n\rminimize_snmp\030\n \001(\010B\215\003\222"
    "A\211\0032\206\003SNMP polling (minimize_snmp) - The"
    " interval at which SNMP will be polled. "
    "If \"false\" (Standard), interface counter"
    " will be polled every 10 minutes and int"
    "erface description every 30 minutes. If "
    "\"true\" (Minimum) (Minimum), interface co"
    "unter won\'t be polled and interface desc"
    "ription will be polled every 6 hours. **"
    " minimize_snmp is required when the devi"
    "ce subtype\'s parent type is \"router\"H\000R\014"
    "minimizeSnmp\210\001\001\022\311\001\n\016device_snmp_ip\030\013 \001(\t"
    "B\242\001\222A\236\0012\233\001Device SNMP IP (device_snmp_ip"
    ") - The SNMP IP to use when polling the "
    "device. device_snmp_ip is ignored unless"
    " the device subtype\'s parent type is \"ro"
    "uter\"R\014deviceSnmpIp\022\354\001\n\025device_snmp_comm"
    "unity\030\014 \001(\tB\267\001\222A\263\0012\260\001SNMP community (dev"
    "ice_snmp_community) - The SNMP community"
    " to use when polling the device. device_"
    "snmp_community is ignored unless the dev"
    "ice subtype\'s parent type is \"router\"R\023d"
    "eviceSnmpCommunity\022\374\001\n\023device_snmp_v3_co"
    "nf\030\r \001(\0132,.kentik.device.v202504beta2.De"
    "viceSnmpV3ConfB\236\001\222A\232\0012\227\001SNMP v3 configur"
    "ation (device_snmp_v3_conf) - SNMP v3 co"
    "nfiguration. device_snmp_v3_conf is igno"
    "red unless the device subtype\'s parent t"
    "ype is \"router\"R\020deviceSnmpV3Conf\022\362\001\n\017de"
    "vice_bgp_type\030\016 \001(\tB\311\001\222A\305\0012\302\001BGP (device"
    "_bgp_type) - Device bgp type. Valid valu"
    "es: \"none\" (use generic IP/ASN mapping),"
    " \"device\" (peer with the device itself),"
    " \"other_device\" (share routing table of "
    "existing peered device)R\rdeviceBgpType\022\205"
    "\002\n\026device_bgp_neighbor_ip\030\017 \001(\tB\317\001\222A\313\0012\310"
    "\001Your IPv4 peering address (device_bgp_n"
    "eighbor_ip) - A valid IPv4 address to us"
    "e for peering with the device. ** An IPv"
    "4 and/or IPv6 peering address is require"
    "d when device_bgp_type is set to \"device"
    "\"R\023deviceBgpNeighborIp\022\210\002\n\027device_bgp_ne"
    "ighbor_ip6\030\020 \001(\tB\320\001\222A\314\0012\311\001Your IPv6 peer"
    "ing address (device_bgp_neighbor_ip6) - "
    "A valid IPv6 address to use for peering "
    "with the device. ** An IPv4 and/or IPv6 "
    "peering address is required when device_"
    "bgp_type is set to \"device\"R\024deviceBgpNe"
    "ighborIp6\022\202\002\n\027device_bgp_neighbor_asn\030\021 "
    "\001(\tB\312\001\222A\306\0012\303\001Your ASN (device_bgp_neighb"
    "or_asn) - The valid AS number (ASN) of t"
    "he autonomous system that this device be"
    "longs to. ** device_bgp_neighbor_asn is "
    "required when device_bgp_type is set to "
    "\"device\"R\024deviceBgpNeighborAsn\022\240\002\n\023devic"
    "e_bgp_password\030\022 \001(\tB\357\001\222A\353\0012\350\001BGP md5 pa"
    "ssword (device_bgp_password) - Optional "
    "BGP MD5 password (shared authentication "
    "password for BGP peering). Valid charact"
    "ers: alphanumeric. Length: 32. device_bg"
    "p_password is optional when device_bgp_t"
    "ype is set to \"device\"R\021deviceBgpPasswor"
    "d\022\244\002\n\021use_bgp_device_id\030\023 \001(\tB\370\001\222A\364\0012\361\001S"
    "elect master BGP device (use_bgp_device_"
    "id) - The ID of the device whose BGP tab"
    "le should be shared with this device. **"
    " use_bgp_device_id is required when devi"
    "ce_bgp_type is set to \"other_device\"). V"
    "alid value: a system-generated device_id"
    "R\016useBgpDeviceId\022\225\001\n\023device_bgp_flowspec"
    "\030\024 \001(\010Be\222Ab2`BGP Flowspec Compatibility "
    "(device_bgp_flowspec) - Toggle BGP Flows"
    "pec Compatibility for device.R\021deviceBgp"
    "Flowspec\022z\n\003nms\030\025 \001(\0132+.kentik.device.v2"
    "02504beta2.DeviceNmsConfigB;\222A826Configu"
    "ration if this device will be monitored "
    "by NMS.R\003nms\022\332\001\n\032device_bgp_credential_n"
    "ame\030\026 \001(\tB\234\001\222A\230\0012\225\001BGP Credential Name ("
    "device_bgp_credential_name) - Optional C"
    "redential Name (Credential for BGP peeri"
    "ng). Valid characters: alphanumeric. Len"
    "gth: 32.R\027deviceBgpCredentialName\022\336\001\n\031fl"
    "ow_snmp_credential_name\030\027 \001(\tB\242\001\222A\236\0012\233\001S"
    "nmp Credential Name (flow_snmp_credentia"
    "l_name) - Optional Credential Name (Cred"
    "ential for Flow Snmp peering). Valid cha"
    "racters: alphanumeric. Length: 32.R\026flow"
    "SnmpCredentialName\022\213\001\n\026monitoring_templa"
    "te_id\030\030 \001(\rBU\222AR2PMonitoring template - "
    "The ID of the monitoring template assign"
    "ed to this device.R\024monitoringTemplateId"
    "B\020\n\016_minimize_snmp\"\316\001\n\004Site\022\034\n\002id\030\001 \001(\tB"
    "\014\222A\t2\007Site IDR\002id\022+\n\tsite_name\030\002 \001(\tB\016\222A"
    "\0132\tSite nameR\010siteName\022$\n\003lat\030\003 \001(\001B\022\222A\017"
    "2\rSite latitudeR\003lat\022%\n\003lon\030\004 \001(\001B\023\222A\0202\016"
    "Site longitudeR\003lon\022.\n\ncompany_id\030\005 \001(\tB"
    "\017\222A\0142\nCompany IDR\tcompanyId\"\236\007\n\004Plan\022\034\n\002"
    "id\030\001 \001(\tB\014\222A\t2\007Plan IDR\002id\022\"\n\004name\030\002 \001(\t"
    "B\016\222A\0132\tPlan nameR\004name\022(\n\006active\030\003 \001(\010B\020"
    "\222A\r2\013Plan StatusR\006active\022\"\n\003bgp\030\004 \001(\010B\020\222"
    "A\r2\013BGP enabledR\003bgp\022.\n\ncompany_id\030\005 \001(\t"
    "B\017\222A\0142\nCompany IDR\tcompanyId\0227\n\013descript"
    "ion\030\006 \001(\tB\025\222A\0222\020Plan DescriptionR\013descri"
    "ption\0224\n\014device_types\030\007 \003(\tB\021\222A\0162\014Device"
    " TypesR\013deviceTypes\022&\n\007devices\030\010 \003(\tB\014\222A"
    "\t2\007DevicesR\007devices\022@\n\016fast_retention\030\t "
    "\001(\rB\031\222A\0262\024Fast Rention in daysR\rfastRete"
    "ntion\022B\n\016full_retention\030\n \001(\rB\033\222A\0302\026Full"
    " Retention in daysR\rfullRetention\0229\n\017max"
    "_bigdata_fps\030\013 \001(\rB\021\222A\0162\014Max data FPSR\rm"
    "axBigdataFps\0220\n\013max_devices\030\014 \001(\rB\017\222A\0142\n"
    "Max DeviceR\nmaxDevices\022%\n\007max_fps\030\r \001(\rB"
    "\014\222A\t2\007Max FPSR\006maxFps\022C\n\005cdate\030\016 \001(\0132\032.g"
    "oogle.protobuf.TimestampB\021\222A\0162\014Created D"
    "ateR\005cdate\022C\n\005edate\030\017 \001(\0132\032.google.proto"
    "buf.TimestampB\021\222A\0162\014Updated DataR\005edate\022"
    "^\n\010metadata\030\020 \003(\0132..kentik.device.v20250"
    "4beta2.Plan.MetadataEntryB\022\222A\0172\rPlan Met"
    "adataR\010metadata\032;\n\rMetadataEntry\022\020\n\003key\030"
    "\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001\"\304\004\n"
    "\005Label\022\035\n\002id\030\001 \001(\tB\r\222A\n2\010Label IDR\002id\022#\n"
    "\004name\030\002 \001(\tB\017\222A\0142\nLabel nameR\004name\0228\n\013de"
    "scription\030\003 \001(\tB\026\222A\0232\021Label descriptionR"
    "\013description\022K\n\005edate\030\004 \001(\0132\032.google.pro"
    "tobuf.TimestampB\031\222A\0262\024Label end date (UT"
    "C)R\005edate\022P\n\005cdate\030\005 \001(\0132\032.google.protob"
    "uf.TimestampB\036\222A\0332\031Label creation date ("
    "UTC)R\005cdate\022%\n\007user_id\030\006 \001(\tB\014\222A\t2\007User "
    "IDR\006userId\022.\n\ncompany_id\030\007 \001(\tB\017\222A\0142\nCom"
    "pany IDR\tcompanyId\022&\n\005color\030\010 \001(\tB\020\222A\r2\013"
    "Label colorR\005color\022&\n\005order\030\t \001(\tB\020\222A\r2\013"
    "Label orderR\005order\022<\n\017pivot_device_id\030\n "
    "\001(\tB\024\222A\0212\017Pivot device IDR\rpivotDeviceId"
    "\0229\n\016pivot_label_id\030\013 \001(\tB\023\222A\0202\016Pivot lab"
    "el IDR\014pivotLabelId\"\211\004\n\tInterface\022O\n\025int"
    "erface_description\030\001 \001(\tB\032\222A\0272\025Interface"
    " descriptionR\024interfaceDescription\022E\n\022in"
    "itial_snmp_speed\030\002 \001(\tB\027\222A\0242\022Initial SNM"
    "P speedR\020initialSnmpSpeed\022+\n\tdevice_id\030\003"
    " \001(\tB\016\222A\0132\tDevice IDR\010deviceId\022.\n\nsnmp_s"
    "peed\030\004 \001(\tB\017\222A\0142\nSNMP speedR\tsnmpSpeed\022."
    "\n\nsnmp_alias\030\005 \001(\tB\017\222A\0142\nSNMP aliasR\tsnm"
    "pAlias\022%\n\007snmp_id\030\006 \001(\tB\014\222A\t2\007SNMP IDR\006s"
    "nmpId\022C\n\021connectivity_type\030\007 \001(\tB\026\222A\0232\021C"
    "onnectivity typeR\020connectivityType\022@\n\020ne"
    "twork_boundary\030\010 \001(\tB\025\222A\0222\020Network bound"
    "aryR\017networkBoundary\022)\n\010provider\030\t \001(\tB\r"
    "\222A\n2\010ProviderR\010provider\"\252\002\n\020CustomColumn"
    "Data\022+\n\tdevice_id\030\001 \001(\tB\016\222A\0132\tDevice IDR"
    "\010deviceId\022(\n\010field_id\030\002 \001(\tB\r\222A\n2\010Field "
    "IDR\007fieldId\022+\n\010col_name\030\003 \001(\tB\020\222A\r2\013Colu"
    "mn nameR\007colName\0222\n\013description\030\004 \001(\tB\020\222"
    "A\r2\013DescriptionR\013description\022+\n\010col_type"
    "\030\005 \001(\tB\020\222A\r2\013Column typeR\007colType\0221\n\013dev"
    "ice_type\030\006 \001(\tB\020\222A\r2\013Device typeR\ndevice"
    "Type\"H\n\nGnmiV1Conf\022:\n\016dialout_server\030\001 \001"
    "(\tB\023\222A\0202\016Dialout serverR\rdialoutServer\"\304"
    "\'\n\016DeviceDetailed\022:\n\002id\030\001 \001(\tB*\222A$2\"Syst"
    "em generated unique identifier\340A\003R\002id\022.\n"
    "\ncompany_id\030\002 \001(\tB\017\222A\0142\nCompany IDR\tcomp"
    "anyId\0221\n\013device_name\030\003 \001(\tB\020\222A\r2\013Device "
    "nameR\ndeviceName\0224\n\014device_alias\030\004 \001(\tB\021"
    "\222A\0162\014Device aliasR\013deviceAlias\0221\n\013device"
    "_type\030\005 \001(\tB\020\222A\r2\013Device typeR\ndeviceTyp"
    "e\022F\n\022device_description\030\006 \001(\tB\027\222A\0242\022Devi"
    "ce descriptionR\021deviceDescription\022\?\n\004sit"
    "e\030\007 \001(\0132 .kentik.device.v202504beta2.Sit"
    "eB\t\222A\0062\004SiteR\004site\022\?\n\004plan\030\010 \001(\0132 .kenti"
    "k.device.v202504beta2.PlanB\t\222A\0062\004PlanR\004p"
    "lan\022N\n\006labels\030\t \003(\0132!.kentik.device.v202"
    "504beta2.LabelB\023\222A\0202\016List of labelsR\006lab"
    "els\022e\n\016all_interfaces\030\n \003(\0132%.kentik.dev"
    "ice.v202504beta2.InterfaceB\027\222A\0242\022List of"
    " interfacesR\rallInterfaces\022\?\n\020device_flo"
    "w_type\030\013 \001(\tB\025\222A\0222\020Device flow typeR\016dev"
    "iceFlowType\022E\n\022device_sample_rate\030\014 \001(\tB"
    "\027\222A\0242\022Device sample rateR\020deviceSampleRa"
    "te\0229\n\013sending_ips\030\r \003(\tB\030\222A\0252\023List of se"
    "nding IPsR\nsendingIps\0229\n\016device_snmp_ip\030"
    "\016 \001(\tB\023\222A\0202\016Device SNMP IPR\014deviceSnmpIp"
    "\022N\n\025device_snmp_community\030\017 \001(\tB\032\222A\0272\025De"
    "vice SNMP communityR\023deviceSnmpCommunity"
    "\022<\n\rminimize_snmp\030\020 \001(\010B\022\222A\0172\rMinimize S"
    "NMPH\000R\014minimizeSnmp\210\001\001\022<\n\017device_bgp_typ"
    "e\030\021 \001(\tB\024\222A\0212\017Device BGP typeR\rdeviceBgp"
    "Type\022P\n\026device_bgp_neighbor_ip\030\022 \001(\tB\033\222A"
    "\0302\026Device BGP neighbor IPR\023deviceBgpNeig"
    "hborIp\022S\n\027device_bgp_neighbor_ip6\030\023 \001(\tB"
    "\034\222A\0312\027Device BGP neighbor IP6R\024deviceBgp"
    "NeighborIp6\022S\n\027device_bgp_neighbor_asn\030\024"
    " \001(\tB\034\222A\0312\027Device BGP neighbor ASNR\024devi"
    "ceBgpNeighborAsn\022H\n\023device_bgp_flowspec\030"
    "\025 \001(\010B\030\222A\0252\023Device BGP flowspecR\021deviceB"
    "gpFlowspec\022H\n\023device_bgp_password\030\026 \001(\tB"
    "\030\222A\0252\023Device BGP passwordR\021deviceBgpPass"
    "word\022V\n\030device_bgp_label_unicast\030\027 \001(\010B\035"
    "\222A\0322\030Device BGP label unicastR\025deviceBgp"
    "LabelUnicast\022H\n\023bgp_lookup_strategy\030\030 \001("
    "\tB\030\222A\0252\023BGP lookup strategyR\021bgpLookupSt"
    "rategy\0227\n\rdevice_status\030\031 \001(\tB\022\222A\0172\rDevi"
    "ce statusR\014deviceStatus\022A\n\021use_bgp_devic"
    "e_id\030\032 \001(\tB\026\222A\0232\021Use BGP device IDR\016useB"
    "gpDeviceId\022:\n\016custom_columns\030\033 \001(\tB\023\222A\0202"
    "\016Custom columnsR\rcustomColumns\022s\n\022custom"
    "_column_data\030\034 \003(\0132,.kentik.device.v2025"
    "04beta2.CustomColumnDataB\027\222A\0242\022Custom co"
    "lumn dataR\020customColumnData\022P\n\026device_ch"
    "f_client_port\030\035 \001(\tB\033\222A\0302\026Device CHF cli"
    "ent portR\023deviceChfClientPort\022\\\n\032device_"
    "chf_client_protocol\030\036 \001(\tB\037\222A\0342\032Device C"
    "HF client protocolR\027deviceChfClientProto"
    "col\022K\n\024device_chf_interface\030\037 \001(\tB\031\222A\0262\024"
    "Device CHF interfaceR\022deviceChfInterface"
    "\022B\n\021device_agent_type\030  \001(\tB\026\222A\0232\021Device"
    " agent typeR\017deviceAgentType\0226\n\rmax_flow"
    "_rate\030! \001(\rB\022\222A\0172\rMax flow rateR\013maxFlow"
    "Rate\022A\n\021max_big_flow_rate\030\" \001(\rB\026\222A\0232\021Ma"
    "x big flow rateR\016maxBigFlowRate\022\?\n\020devic"
    "e_proxy_bgp\030# \001(\tB\025\222A\0222\020Device proxy BGP"
    "R\016deviceProxyBgp\022B\n\021device_proxy_bgp6\030$ "
    "\001(\tB\026\222A\0232\021Device proxy BGP6R\017deviceProxy"
    "Bgp6\022\\\n\014created_date\030% \001(\0132\032.google.prot"
    "obuf.TimestampB\035\222A\0322\030Creation timestamp "
    "(UTC)R\013createdDate\022e\n\014updated_date\030& \001(\013"
    "2\032.google.protobuf.TimestampB&\222A#2!Last "
    "modification timestamp (UTC)R\013updatedDat"
    "e\022g\n\033device_snmp_v3_conf_enabled\030\' \001(\010B)"
    "\222A&2$Device SNMP v3 configuration enable"
    "dR\027deviceSnmpV3ConfEnabled\022~\n\023device_snm"
    "p_v3_conf\030( \001(\0132,.kentik.device.v202504b"
    "eta2.DeviceSnmpV3ConfB!\222A\0362\034Device SNMP "
    "v3 configurationR\020deviceSnmpV3Conf\022.\n\010cd"
    "n_attr\030) \001(\tB\023\222A\0202\016CDN attributesR\007cdnAt"
    "tr\0223\n\014bgp_peer_ip4\030* \001(\tB\021\222A\0162\014BGP peer "
    "IP4R\nbgpPeerIp4\0223\n\014bgp_peer_ip6\030+ \001(\tB\021\222"
    "A\0162\014BGP peer IP6R\nbgpPeerIp6\022:\n\016device_s"
    "ubtype\030, \001(\tB\023\222A\0202\016Device subtypeR\rdevic"
    "eSubtype\022E\n\022device_vendor_type\030- \001(\tB\027\222A"
    "\0242\022Device vendor typeR\020deviceVendorType\022"
    "B\n\021device_model_type\030. \001(\tB\026\222A\0232\021Device "
    "model typeR\017deviceModelType\022<\n\017cloud_exp"
    "ort_id\030/ \001(\tB\024\222A\0212\017Cloud export IDR\rclou"
    "dExportId\0227\n\rdevice_kproxy\0300 \001(\tB\022\222A\0172\rD"
    "evice KProxyR\014deviceKproxy\0224\n\014snmp_enabl"
    "ed\0301 \001(\tB\021\222A\0162\014SNMP enabledR\013snmpEnabled"
    "\022K\n\024snmp_disabled_reason\0302 \001(\tB\031\222A\0262\024SNM"
    "P disabled reasonR\022snmpDisabledReason\022\\\n"
    "\032snmp_disabled_reason_other\0303 \001(\tB\037\222A\0342\032"
    "SNMP disabled reason otherR\027snmpDisabled"
    "ReasonOther\022H\n\023bgp_disabled_reason\0304 \001(\t"
    "B\030\222A\0252\023BGP disabled reasonR\021bgpDisabledR"
    "eason\022Y\n\031bgp_disabled_reason_other\0305 \001(\t"
    "B\036\222A\0332\031BGP disabled reason otherR\026bgpDis"
    "abledReasonOther\022I\n\023device_manufacturer\030"
    "6 \001(\tB\030\222A\0252\023Device manufacturerR\022deviceM"
    "anufacturer\0224\n\014device_alert\0307 \001(\tB\021\222A\0162\014"
    "Device alertR\013deviceAlert\022\035\n\004role\0308 \001(\tB"
    "\t\222A\0062\004RoleR\004role\022x\n\023device_gnmi_v1_conf\030"
    "9 \001(\0132&.kentik.device.v202504beta2.GnmiV"
    "1ConfB!\222A\0362\034Device GNMI v1 configuration"
    "R\020deviceGnmiV1Conf\022A\n\021use_asn_from_flow\030"
    ": \001(\010B\026\222A\0232\021Use ASN from flowR\016useAsnFro"
    "mFlow\0227\n\rmax_interface\030; \001(\rB\022\222A\0172\rMax i"
    "nterfaceR\014maxInterface\022H\n\023max_interface_"
    "check\030< \001(\rB\030\222A\0252\023Max interface checkR\021m"
    "axInterfaceCheck\022u\n\003nms\030= \001(\0132+.kentik.d"
    "evice.v202504beta2.DeviceNmsConfigB6\222A32"
    "1Configuration if this device is monitor"
    "ed by NMS.R\003nms\022\332\001\n\032device_bgp_credentia"
    "l_name\030> \001(\tB\234\001\222A\230\0012\225\001BGP Credential Nam"
    "e (device_bgp_credential_name) - Optiona"
    "l Credential Name (Credential for BGP pe"
    "ering). Valid characters: alphanumeric. "
    "Length: 32.R\027deviceBgpCredentialName\022\336\001\n"
    "\031flow_snmp_credential_name\030\? \001(\tB\242\001\222A\236\0012"
    "\233\001Snmp Credential Name (flow_snmp_creden"
    "tial_name) - Optional Credential Name (C"
    "redential for Flow Snmp peering). Valid "
    "characters: alphanumeric. Length: 32.R\026f"
    "lowSnmpCredentialName\022\213\001\n\026monitoring_tem"
    "plate_id\030@ \001(\rBU\222AR2PMonitoring template"
    " - The ID of the monitoring template ass"
    "igned to this device.R\024monitoringTemplat"
    "eIdB\020\n\016_minimize_snmp\"9\n\013DeviceQuery\022*\n\021"
    "no_custom_columns\030\001 \001(\010R\017noCustomColumns"
    "\"-\n\014LabelConcise\022\035\n\002id\030\001 \001(\rB\r\222A\n2\010Label"
    " IDR\002id\"S\n\022ListDevicesRequest\022=\n\005query\030\001"
    " \001(\0132\'.kentik.device.v202504beta2.Device"
    "QueryR\005query\"\352\001\n\023ListDevicesResponse\022l\n\007"
    "devices\030\001 \003(\0132*.kentik.device.v202504bet"
    "a2.DeviceDetailedB&\222A#2!List of configur"
    "ations of devicesR\007devices\022e\n\rinvalid_co"
    "unt\030\002 \001(\rB@\222A=2;Number of invalid entrie"
    "s encountered while collecting dataR\014inv"
    "alidCount\"\205\001\n\020GetDeviceRequest\0222\n\002id\030\001 \001"
    "(\tB\"\222A\0342\032ID of the requested device\340A\002R\002"
    "id\022=\n\005query\030\002 \001(\0132\'.kentik.device.v20250"
    "4beta2.DeviceQueryR\005query\"\203\001\n\021GetDeviceR"
    "esponse\022n\n\006device\030\001 \001(\0132*.kentik.device."
    "v202504beta2.DeviceDetailedB*\222A\'2%Config"
    "uration of the requested deviceR\006device\""
    "\201\001\n\023CreateDeviceRequest\022j\n\006device\030\001 \001(\0132"
    ").kentik.device.v202504beta2.DeviceConci"
    "seB\'\222A!2\037Configuration of the new device"
    "\340A\002R\006device\"\212\001\n\024CreateDeviceResponse\022r\n\006"
    "device\030\001 \001(\0132*.kentik.device.v202504beta"
    "2.DeviceDetailedB.\222A+2)Configuration of "
    "the newly created deviceR\006device\"\224\001\n\024Cre"
    "ateDevicesRequest\022|\n\007devices\030\001 \003(\0132).ken"
    "tik.device.v202504beta2.DeviceConciseB7\222"
    "A12/List of configurations of devices to"
    " be created\340A\002R\007devices\"\363\001\n\025CreateDevice"
    "sResponse\022z\n\007devices\030\001 \003(\0132*.kentik.devi"
    "ce.v202504beta2.DeviceDetailedB4\222A12/Lis"
    "t of configurations of newly created dev"
    "icesR\007devices\022^\n\016failed_devices\030\002 \003(\tB7\222"
    "A422List of names of devices that failed"
    " to be createdR\rfailedDevices\"\234\001\n\023Update"
    "DeviceRequest\022\204\001\n\006device\030\001 \001(\0132).kentik."
    "device.v202504beta2.DeviceConciseBA\222A;29"
    "New configuration attributes for the dev"
    "ice to be updated\340A\002R\006device\"\204\001\n\024UpdateD"
    "eviceResponse\022l\n\006device\030\001 \001(\0132*.kentik.d"
    "evice.v202504beta2.DeviceDetailedB(\222A%2#"
    "Updated configuration of the deviceR\006dev"
    "ice\"\224\001\n\024UpdateDevicesRequest\022|\n\007devices\030"
    "\001 \003(\0132).kentik.device.v202504beta2.Devic"
    "eConciseB7\222A12/List of configurations of"
    " devices to be updated\340A\002R\007devices\"\353\001\n\025U"
    "pdateDevicesResponse\022t\n\007devices\030\001 \003(\0132*."
    "kentik.device.v202504beta2.DeviceDetaile"
    "dB.\222A+2)List of configurations of update"
    "d devicesR\007devices\022\\\n\016failed_devices\030\002 \003"
    "(\tB5\222A220List of IDs of devices that fai"
    "led to be updatedR\rfailedDevices\"\307\001\n\031Upd"
    "ateDeviceLabelsRequest\0226\n\002id\030\001 \001(\tB&\222A 2"
    "\036ID of the device to be updated\340A\002R\002id\022r"
    "\n\006labels\030\002 \003(\0132(.kentik.device.v202504be"
    "ta2.LabelConciseB0\222A*2(List of labels to"
    " be added to the device\340A\002R\006labels\"\212\001\n\032U"
    "pdateDeviceLabelsResponse\022l\n\006device\030\001 \001("
    "\0132*.kentik.device.v202504beta2.DeviceDet"
    "ailedB(\222A%2#Updated configuration of the"
    " deviceR\006device\"M\n\023DeleteDeviceRequest\0226"
    "\n\002id\030\001 \001(\tB&\222A 2\036ID of the device to be "
    "deleted\340A\002R\002id\"\026\n\024DeleteDeviceResponse\"V"
    "\n\024DeleteDevicesRequest\022>\n\003ids\030\001 \003(\tB,\222A&"
    "2$List of IDs of devices to be deleted\340A"
    "\002R\003ids\"u\n\025DeleteDevicesResponse\022\\\n\016faile"
    "d_devices\030\001 \003(\tB5\222A220List of IDs of dev"
    "ices that failed to be deletedR\rfailedDe"
    "vices2\366\032\n\rDeviceService\022\252\002\n\013ListDevices\022"
    "..kentik.device.v202504beta2.ListDevices"
    "Request\032/.kentik.device.v202504beta2.Lis"
    "tDevicesResponse\"\271\001\222A~\022\021List all devices"
    ".\032\\Returns list of configured devices (s"
    "ee [About Devices](https://kb.kentik.com"
    "/v4/Cb01.htm)).*\013ListDevices\362\327\002\021admin.de"
    "vice:read\202\323\344\223\002\035\022\033/device/v202504beta2/de"
    "vice\022\311\002\n\tGetDevice\022,.kentik.device.v2025"
    "04beta2.GetDeviceRequest\032-.kentik.device"
    ".v202504beta2.GetDeviceResponse\"\336\001\222A\235\001\022#"
    "Retrieve configuration of a device.\032kRet"
    "urns configuration of a device specified"
    " by ID (see [About Devices](https://kb.k"
    "entik.com/v4/Cb01.htm)).*\tGetDevice\362\327\002\021a"
    "dmin.device:read\202\323\344\223\002\"\022 /device/v202504b"
    "eta2/device/{id}\022\346\002\n\014CreateDevice\022/.kent"
    "ik.device.v202504beta2.CreateDeviceReque"
    "st\0320.kentik.device.v202504beta2.CreateDe"
    "viceResponse\"\362\001\222A\262\001\022\027Configure a new dev"
    "ice.\032\210\001Create configuration for a new de"
    "vice. Returns the newly created configur"
    "ation (see [About Devices](https://kb.ke"
    "ntik.com/v4/Cb01.htm)).*\014CreateDevice\362\327\002"
    "\022admin.device:write\202\323\344\223\002 \"\033/device/v2025"
    "04beta2/device:\001*\022\203\003\n\rCreateDevices\0220.ke"
    "ntik.device.v202504beta2.CreateDevicesRe"
    "quest\0321.kentik.device.v202504beta2.Creat"
    "eDevicesResponse\"\214\002\222A\306\001\022%Configure multi"
    "ple devices (max 100).\032\215\001Create configur"
    "ation for multiple devices. Returns the "
    "newly created configurations (see [About"
    " Devices](https://kb.kentik.com/v4/Cb01."
    "htm)).*\rCreateDevices\362\327\002\022admin.device:wr"
    "ite\202\323\344\223\002&\"!/device/v202504beta2/device/b"
    "atch:\001*\022\223\003\n\014UpdateDevice\022/.kentik.device"
    ".v202504beta2.UpdateDeviceRequest\0320.kent"
    "ik.device.v202504beta2.UpdateDeviceRespo"
    "nse\"\237\002\222A\323\001\022\"Updates configuration of a d"
    "evice.\032\236\001Replaces configuration of a dev"
    "ice with attributes in the request. Retu"
    "rns the updated configuration (see [Abou"
    "t Devices](https://kb.kentik.com/v4/Cb01"
    ".htm)).*\014UpdateDevice\362\327\002\022admin.device:wr"
    "ite\202\323\344\223\002,\032\'/device/v202504beta2/device/{"
    "device.id}:\001*\022\254\003\n\rUpdateDevices\0220.kentik"
    ".device.v202504beta2.UpdateDevicesReques"
    "t\0321.kentik.device.v202504beta2.UpdateDev"
    "icesResponse\"\265\002\222A\357\001\0224Updates configurati"
    "on of multiple devices (max 100).\032\247\001Repl"
    "aces configuration of multiple devices w"
    "ith attributes in the request. Returns t"
    "he updated configurations (see [About De"
    "vices](https://kb.kentik.com/v4/Cb01.htm"
    ")).*\rUpdateDevices\362\327\002\022admin.device:write"
    "\202\323\344\223\002&\032!/device/v202504beta2/device/batc"
    "h:\001*\022\302\003\n\022UpdateDeviceLabels\0225.kentik.dev"
    "ice.v202504beta2.UpdateDeviceLabelsReque"
    "st\0326.kentik.device.v202504beta2.UpdateDe"
    "viceLabelsResponse\"\274\002\222A\360\001\022\033Updates label"
    "s of a device.\032\274\001Removes all existing la"
    "bels from the device and applies the dev"
    "ice labels (see [About Device Labels](ht"
    "tps://kb.kentik.com/v4/Cb16.htm)) specif"
    "ied by id. Returns the updated configura"
    "tion.*\022UpdateDeviceLabels\362\327\002\022admin.devic"
    "e:write\202\323\344\223\002,\032\'/device/v202504beta2/devi"
    "ce/{id}/labels:\001*\022\325\002\n\014DeleteDevice\022/.ken"
    "tik.device.v202504beta2.DeleteDeviceRequ"
    "est\0320.kentik.device.v202504beta2.DeleteD"
    "eviceResponse\"\341\001\222A\237\001\022!Delete configurati"
    "on of a device.\032lDeletes configuration o"
    "f a device with specific ID (see [About "
    "Devices](https://kb.kentik.com/v4/Cb01.h"
    "tm)).*\014DeleteDevice\362\327\002\022admin.device:writ"
    "e\202\323\344\223\002\"* /device/v202504beta2/device/{id"
    "}\022\356\002\n\rDeleteDevices\0220.kentik.device.v202"
    "504beta2.DeleteDevicesRequest\0321.kentik.d"
    "evice.v202504beta2.DeleteDevicesResponse"
    "\"\367\001\222A\261\001\022)Delete configuration of multipl"
    "e devices.\032uDeletes configuration of mul"
    "tiple devices with specific IDs (see [Ab"
    "out Devices](https://kb.kentik.com/v4/Cb"
    "01.htm)).*\rDeleteDevices\362\327\002\022admin.device"
    ":write\202\323\344\223\002&\"!/device/v202504beta2/devic"
    "e/batch:\001*\032*\312A\023grpc.api.kentik.com\352\327\002\014ad"
    "min.device\220\330\002\003B\356\003ZLgithub.com/kentik/api"
    "-schema-public/gen/go/kentik/device/v202"
    "504beta2;device\222A\234\003\022\265\001\n\nDevice API\022R# Ov"
    "erview\nThe Device API provides programma"
    "tic access to configuration of devices\"E"
    "\n\026Kentik API Engineering\022+https://github"
    ".com/kentik/api-schema-public2\014v202504be"
    "ta2*\001\0022\020application/json:\020application/js"
    "onZD\n\036\n\005email\022\025\010\002\032\017X-CH-Auth-Email \002\n\"\n\005"
    "token\022\031\010\002\032\023X-CH-Auth-API-Token \002b\026\n\t\n\005em"
    "ail\022\000\n\t\n\005token\022\000r]\n%General information "
    "about Kentik APIs\0224https://kb.kentik.com"
    "/v0/Ab09.htm#Ab09-APIs_Overviewb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto_deps[7] =
    {
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_google_2fapi_2fclient_2eproto,
        &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
        &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_kentik_2fcore_2fv202303_2fannotations_2eproto,
        &::descriptor_table_protoc_2dgen_2dopenapiv2_2foptions_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto = {
    false,
    false,
    22079,
    descriptor_table_protodef_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    "kentik/device/v202504beta2/device.proto",
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto_once,
    descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto_deps,
    7,
    33,
    schemas,
    file_default_instances,
    TableStruct_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto::offsets,
    file_level_enum_descriptors_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    file_level_service_descriptors_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
};
namespace kentik {
namespace device {
namespace v202504beta2 {
// ===================================================================

class DeviceSnmpV3Conf::_Internal {
 public:
};

DeviceSnmpV3Conf::DeviceSnmpV3Conf(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.DeviceSnmpV3Conf)
}
inline PROTOBUF_NDEBUG_INLINE DeviceSnmpV3Conf::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::DeviceSnmpV3Conf& from_msg)
      : username_(arena, from.username_),
        authentication_protocol_(arena, from.authentication_protocol_),
        authentication_passphrase_(arena, from.authentication_passphrase_),
        privacy_protocol_(arena, from.privacy_protocol_),
        privacy_passphrase_(arena, from.privacy_passphrase_),
        _cached_size_{0} {}

DeviceSnmpV3Conf::DeviceSnmpV3Conf(
    ::google::protobuf::Arena* arena,
    const DeviceSnmpV3Conf& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeviceSnmpV3Conf* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.DeviceSnmpV3Conf)
}
inline PROTOBUF_NDEBUG_INLINE DeviceSnmpV3Conf::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_(arena),
        authentication_protocol_(arena),
        authentication_passphrase_(arena),
        privacy_protocol_(arena),
        privacy_passphrase_(arena),
        _cached_size_{0} {}

inline void DeviceSnmpV3Conf::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeviceSnmpV3Conf::~DeviceSnmpV3Conf() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.DeviceSnmpV3Conf)
  SharedDtor(*this);
}
inline void DeviceSnmpV3Conf::SharedDtor(MessageLite& self) {
  DeviceSnmpV3Conf& this_ = static_cast<DeviceSnmpV3Conf&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.username_.Destroy();
  this_._impl_.authentication_protocol_.Destroy();
  this_._impl_.authentication_passphrase_.Destroy();
  this_._impl_.privacy_protocol_.Destroy();
  this_._impl_.privacy_passphrase_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DeviceSnmpV3Conf::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeviceSnmpV3Conf(arena);
}
constexpr auto DeviceSnmpV3Conf::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeviceSnmpV3Conf),
                                            alignof(DeviceSnmpV3Conf));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeviceSnmpV3Conf::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeviceSnmpV3Conf_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeviceSnmpV3Conf::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeviceSnmpV3Conf>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeviceSnmpV3Conf::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeviceSnmpV3Conf>(), &DeviceSnmpV3Conf::ByteSizeLong,
            &DeviceSnmpV3Conf::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeviceSnmpV3Conf, _impl_._cached_size_),
        false,
    },
    &DeviceSnmpV3Conf::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeviceSnmpV3Conf::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 142, 2> DeviceSnmpV3Conf::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceSnmpV3Conf>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string username = 1 [json_name = "username", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSnmpV3Conf, _impl_.username_)}},
    // string authentication_protocol = 2 [json_name = "authenticationProtocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSnmpV3Conf, _impl_.authentication_protocol_)}},
    // string authentication_passphrase = 3 [json_name = "authenticationPassphrase", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSnmpV3Conf, _impl_.authentication_passphrase_)}},
    // string privacy_protocol = 4 [json_name = "privacyProtocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSnmpV3Conf, _impl_.privacy_protocol_)}},
    // string privacy_passphrase = 5 [json_name = "privacyPassphrase", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSnmpV3Conf, _impl_.privacy_passphrase_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1 [json_name = "username", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceSnmpV3Conf, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string authentication_protocol = 2 [json_name = "authenticationProtocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceSnmpV3Conf, _impl_.authentication_protocol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string authentication_passphrase = 3 [json_name = "authenticationPassphrase", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceSnmpV3Conf, _impl_.authentication_passphrase_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string privacy_protocol = 4 [json_name = "privacyProtocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceSnmpV3Conf, _impl_.privacy_protocol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string privacy_passphrase = 5 [json_name = "privacyPassphrase", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceSnmpV3Conf, _impl_.privacy_passphrase_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\10\27\31\20\22\0\0"
    "kentik.device.v202504beta2.DeviceSnmpV3Conf"
    "username"
    "authentication_protocol"
    "authentication_passphrase"
    "privacy_protocol"
    "privacy_passphrase"
  }},
};

PROTOBUF_NOINLINE void DeviceSnmpV3Conf::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.DeviceSnmpV3Conf)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.authentication_protocol_.ClearToEmpty();
  _impl_.authentication_passphrase_.ClearToEmpty();
  _impl_.privacy_protocol_.ClearToEmpty();
  _impl_.privacy_passphrase_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeviceSnmpV3Conf::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeviceSnmpV3Conf& this_ = static_cast<const DeviceSnmpV3Conf&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeviceSnmpV3Conf::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeviceSnmpV3Conf& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.DeviceSnmpV3Conf)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string username = 1 [json_name = "username", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_username().empty()) {
            const std::string& _s = this_._internal_username();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceSnmpV3Conf.username");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string authentication_protocol = 2 [json_name = "authenticationProtocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_authentication_protocol().empty()) {
            const std::string& _s = this_._internal_authentication_protocol();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceSnmpV3Conf.authentication_protocol");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string authentication_passphrase = 3 [json_name = "authenticationPassphrase", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_authentication_passphrase().empty()) {
            const std::string& _s = this_._internal_authentication_passphrase();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceSnmpV3Conf.authentication_passphrase");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string privacy_protocol = 4 [json_name = "privacyProtocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_privacy_protocol().empty()) {
            const std::string& _s = this_._internal_privacy_protocol();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceSnmpV3Conf.privacy_protocol");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string privacy_passphrase = 5 [json_name = "privacyPassphrase", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_privacy_passphrase().empty()) {
            const std::string& _s = this_._internal_privacy_passphrase();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceSnmpV3Conf.privacy_passphrase");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.DeviceSnmpV3Conf)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeviceSnmpV3Conf::ByteSizeLong(const MessageLite& base) {
          const DeviceSnmpV3Conf& this_ = static_cast<const DeviceSnmpV3Conf&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeviceSnmpV3Conf::ByteSizeLong() const {
          const DeviceSnmpV3Conf& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.DeviceSnmpV3Conf)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string username = 1 [json_name = "username", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_username().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_username());
            }
            // string authentication_protocol = 2 [json_name = "authenticationProtocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_authentication_protocol().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_authentication_protocol());
            }
            // string authentication_passphrase = 3 [json_name = "authenticationPassphrase", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_authentication_passphrase().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_authentication_passphrase());
            }
            // string privacy_protocol = 4 [json_name = "privacyProtocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_privacy_protocol().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_privacy_protocol());
            }
            // string privacy_passphrase = 5 [json_name = "privacyPassphrase", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_privacy_passphrase().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_privacy_passphrase());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeviceSnmpV3Conf::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceSnmpV3Conf*>(&to_msg);
  auto& from = static_cast<const DeviceSnmpV3Conf&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.DeviceSnmpV3Conf)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_authentication_protocol().empty()) {
    _this->_internal_set_authentication_protocol(from._internal_authentication_protocol());
  }
  if (!from._internal_authentication_passphrase().empty()) {
    _this->_internal_set_authentication_passphrase(from._internal_authentication_passphrase());
  }
  if (!from._internal_privacy_protocol().empty()) {
    _this->_internal_set_privacy_protocol(from._internal_privacy_protocol());
  }
  if (!from._internal_privacy_passphrase().empty()) {
    _this->_internal_set_privacy_passphrase(from._internal_privacy_passphrase());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceSnmpV3Conf::CopyFrom(const DeviceSnmpV3Conf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.DeviceSnmpV3Conf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceSnmpV3Conf::InternalSwap(DeviceSnmpV3Conf* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.authentication_protocol_, &other->_impl_.authentication_protocol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.authentication_passphrase_, &other->_impl_.authentication_passphrase_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.privacy_protocol_, &other->_impl_.privacy_protocol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.privacy_passphrase_, &other->_impl_.privacy_passphrase_, arena);
}

::google::protobuf::Metadata DeviceSnmpV3Conf::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeviceNmsConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DeviceNmsConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeviceNmsConfig, _impl_._has_bits_);
};

DeviceNmsConfig::DeviceNmsConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.DeviceNmsConfig)
}
inline PROTOBUF_NDEBUG_INLINE DeviceNmsConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::DeviceNmsConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        agent_id_(arena, from.agent_id_),
        ip_address_(arena, from.ip_address_) {}

DeviceNmsConfig::DeviceNmsConfig(
    ::google::protobuf::Arena* arena,
    const DeviceNmsConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeviceNmsConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.snmp_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceNmsSnmpConfig>(
                              arena, *from._impl_.snmp_)
                        : nullptr;
  _impl_.st_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceNmsStConfig>(
                              arena, *from._impl_.st_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.DeviceNmsConfig)
}
inline PROTOBUF_NDEBUG_INLINE DeviceNmsConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        agent_id_(arena),
        ip_address_(arena) {}

inline void DeviceNmsConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, snmp_),
           0,
           offsetof(Impl_, st_) -
               offsetof(Impl_, snmp_) +
               sizeof(Impl_::st_));
}
DeviceNmsConfig::~DeviceNmsConfig() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.DeviceNmsConfig)
  SharedDtor(*this);
}
inline void DeviceNmsConfig::SharedDtor(MessageLite& self) {
  DeviceNmsConfig& this_ = static_cast<DeviceNmsConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.agent_id_.Destroy();
  this_._impl_.ip_address_.Destroy();
  delete this_._impl_.snmp_;
  delete this_._impl_.st_;
  this_._impl_.~Impl_();
}

inline void* DeviceNmsConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeviceNmsConfig(arena);
}
constexpr auto DeviceNmsConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeviceNmsConfig),
                                            alignof(DeviceNmsConfig));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeviceNmsConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeviceNmsConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeviceNmsConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeviceNmsConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeviceNmsConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeviceNmsConfig>(), &DeviceNmsConfig::ByteSizeLong,
            &DeviceNmsConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeviceNmsConfig, _impl_._cached_size_),
        false,
    },
    &DeviceNmsConfig::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeviceNmsConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 69, 2> DeviceNmsConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceNmsConfig, _impl_._has_bits_),
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967265,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceNmsConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.device.v202504beta2.DeviceNmsSnmpConfig snmp = 4 [json_name = "snmp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceNmsConfig, _impl_.snmp_)}},
    // .kentik.device.v202504beta2.DeviceNmsStConfig st = 5 [json_name = "st", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(DeviceNmsConfig, _impl_.st_)}},
    // string agent_id = 2 [json_name = "agentId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceNmsConfig, _impl_.agent_id_)}},
    // string ip_address = 3 [json_name = "ipAddress", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceNmsConfig, _impl_.ip_address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string agent_id = 2 [json_name = "agentId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceNmsConfig, _impl_.agent_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ip_address = 3 [json_name = "ipAddress", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceNmsConfig, _impl_.ip_address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .kentik.device.v202504beta2.DeviceNmsSnmpConfig snmp = 4 [json_name = "snmp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceNmsConfig, _impl_.snmp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.device.v202504beta2.DeviceNmsStConfig st = 5 [json_name = "st", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceNmsConfig, _impl_.st_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceNmsSnmpConfig>()},
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceNmsStConfig>()},
  }}, {{
    "\52\10\12\0\0\0\0\0"
    "kentik.device.v202504beta2.DeviceNmsConfig"
    "agent_id"
    "ip_address"
  }},
};

PROTOBUF_NOINLINE void DeviceNmsConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.DeviceNmsConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_id_.ClearToEmpty();
  _impl_.ip_address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.snmp_ != nullptr);
      _impl_.snmp_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.st_ != nullptr);
      _impl_.st_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeviceNmsConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeviceNmsConfig& this_ = static_cast<const DeviceNmsConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeviceNmsConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeviceNmsConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.DeviceNmsConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string agent_id = 2 [json_name = "agentId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_agent_id().empty()) {
            const std::string& _s = this_._internal_agent_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceNmsConfig.agent_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string ip_address = 3 [json_name = "ipAddress", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_ip_address().empty()) {
            const std::string& _s = this_._internal_ip_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceNmsConfig.ip_address");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.device.v202504beta2.DeviceNmsSnmpConfig snmp = 4 [json_name = "snmp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.snmp_, this_._impl_.snmp_->GetCachedSize(), target,
                stream);
          }

          // .kentik.device.v202504beta2.DeviceNmsStConfig st = 5 [json_name = "st", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.st_, this_._impl_.st_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.DeviceNmsConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeviceNmsConfig::ByteSizeLong(const MessageLite& base) {
          const DeviceNmsConfig& this_ = static_cast<const DeviceNmsConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeviceNmsConfig::ByteSizeLong() const {
          const DeviceNmsConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.DeviceNmsConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string agent_id = 2 [json_name = "agentId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_agent_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_agent_id());
            }
            // string ip_address = 3 [json_name = "ipAddress", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_ip_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_ip_address());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .kentik.device.v202504beta2.DeviceNmsSnmpConfig snmp = 4 [json_name = "snmp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.snmp_);
            }
            // .kentik.device.v202504beta2.DeviceNmsStConfig st = 5 [json_name = "st", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.st_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeviceNmsConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceNmsConfig*>(&to_msg);
  auto& from = static_cast<const DeviceNmsConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.DeviceNmsConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_agent_id().empty()) {
    _this->_internal_set_agent_id(from._internal_agent_id());
  }
  if (!from._internal_ip_address().empty()) {
    _this->_internal_set_ip_address(from._internal_ip_address());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.snmp_ != nullptr);
      if (_this->_impl_.snmp_ == nullptr) {
        _this->_impl_.snmp_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceNmsSnmpConfig>(arena, *from._impl_.snmp_);
      } else {
        _this->_impl_.snmp_->MergeFrom(*from._impl_.snmp_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.st_ != nullptr);
      if (_this->_impl_.st_ == nullptr) {
        _this->_impl_.st_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceNmsStConfig>(arena, *from._impl_.st_);
      } else {
        _this->_impl_.st_->MergeFrom(*from._impl_.st_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceNmsConfig::CopyFrom(const DeviceNmsConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.DeviceNmsConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceNmsConfig::InternalSwap(DeviceNmsConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.agent_id_, &other->_impl_.agent_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_address_, &other->_impl_.ip_address_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeviceNmsConfig, _impl_.st_)
      + sizeof(DeviceNmsConfig::_impl_.st_)
      - PROTOBUF_FIELD_OFFSET(DeviceNmsConfig, _impl_.snmp_)>(
          reinterpret_cast<char*>(&_impl_.snmp_),
          reinterpret_cast<char*>(&other->_impl_.snmp_));
}

::google::protobuf::Metadata DeviceNmsConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeviceNmsSnmpConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DeviceNmsSnmpConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeviceNmsSnmpConfig, _impl_._has_bits_);
};

void DeviceNmsSnmpConfig::clear_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timeout_ != nullptr) _impl_.timeout_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DeviceNmsSnmpConfig::DeviceNmsSnmpConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.DeviceNmsSnmpConfig)
}
inline PROTOBUF_NDEBUG_INLINE DeviceNmsSnmpConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::DeviceNmsSnmpConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        credential_name_(arena, from.credential_name_) {}

DeviceNmsSnmpConfig::DeviceNmsSnmpConfig(
    ::google::protobuf::Arena* arena,
    const DeviceNmsSnmpConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeviceNmsSnmpConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timeout_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(
                              arena, *from._impl_.timeout_)
                        : nullptr;
  _impl_.port_ = from._impl_.port_;

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.DeviceNmsSnmpConfig)
}
inline PROTOBUF_NDEBUG_INLINE DeviceNmsSnmpConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        credential_name_(arena) {}

inline void DeviceNmsSnmpConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timeout_),
           0,
           offsetof(Impl_, port_) -
               offsetof(Impl_, timeout_) +
               sizeof(Impl_::port_));
}
DeviceNmsSnmpConfig::~DeviceNmsSnmpConfig() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.DeviceNmsSnmpConfig)
  SharedDtor(*this);
}
inline void DeviceNmsSnmpConfig::SharedDtor(MessageLite& self) {
  DeviceNmsSnmpConfig& this_ = static_cast<DeviceNmsSnmpConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.credential_name_.Destroy();
  delete this_._impl_.timeout_;
  this_._impl_.~Impl_();
}

inline void* DeviceNmsSnmpConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeviceNmsSnmpConfig(arena);
}
constexpr auto DeviceNmsSnmpConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeviceNmsSnmpConfig),
                                            alignof(DeviceNmsSnmpConfig));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeviceNmsSnmpConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeviceNmsSnmpConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeviceNmsSnmpConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeviceNmsSnmpConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeviceNmsSnmpConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeviceNmsSnmpConfig>(), &DeviceNmsSnmpConfig::ByteSizeLong,
            &DeviceNmsSnmpConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeviceNmsSnmpConfig, _impl_._cached_size_),
        false,
    },
    &DeviceNmsSnmpConfig::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeviceNmsSnmpConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 70, 2> DeviceNmsSnmpConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceNmsSnmpConfig, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceNmsSnmpConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string credential_name = 1 [json_name = "credentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceNmsSnmpConfig, _impl_.credential_name_)}},
    // uint32 port = 2 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceNmsSnmpConfig, _impl_.port_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceNmsSnmpConfig, _impl_.port_)}},
    // .google.protobuf.Duration timeout = 3 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceNmsSnmpConfig, _impl_.timeout_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string credential_name = 1 [json_name = "credentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceNmsSnmpConfig, _impl_.credential_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 port = 2 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceNmsSnmpConfig, _impl_.port_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .google.protobuf.Duration timeout = 3 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceNmsSnmpConfig, _impl_.timeout_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
  }}, {{
    "\56\17\0\0\0\0\0\0"
    "kentik.device.v202504beta2.DeviceNmsSnmpConfig"
    "credential_name"
  }},
};

PROTOBUF_NOINLINE void DeviceNmsSnmpConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.DeviceNmsSnmpConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.credential_name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.timeout_ != nullptr);
    _impl_.timeout_->Clear();
  }
  _impl_.port_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeviceNmsSnmpConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeviceNmsSnmpConfig& this_ = static_cast<const DeviceNmsSnmpConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeviceNmsSnmpConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeviceNmsSnmpConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.DeviceNmsSnmpConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string credential_name = 1 [json_name = "credentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_credential_name().empty()) {
            const std::string& _s = this_._internal_credential_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceNmsSnmpConfig.credential_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 port = 2 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_port() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_port(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Duration timeout = 3 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.timeout_, this_._impl_.timeout_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.DeviceNmsSnmpConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeviceNmsSnmpConfig::ByteSizeLong(const MessageLite& base) {
          const DeviceNmsSnmpConfig& this_ = static_cast<const DeviceNmsSnmpConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeviceNmsSnmpConfig::ByteSizeLong() const {
          const DeviceNmsSnmpConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.DeviceNmsSnmpConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string credential_name = 1 [json_name = "credentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_credential_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_credential_name());
            }
          }
           {
            // .google.protobuf.Duration timeout = 3 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timeout_);
            }
          }
           {
            // uint32 port = 2 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_port() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_port());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeviceNmsSnmpConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceNmsSnmpConfig*>(&to_msg);
  auto& from = static_cast<const DeviceNmsSnmpConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.DeviceNmsSnmpConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_credential_name().empty()) {
    _this->_internal_set_credential_name(from._internal_credential_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.timeout_ != nullptr);
    if (_this->_impl_.timeout_ == nullptr) {
      _this->_impl_.timeout_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(arena, *from._impl_.timeout_);
    } else {
      _this->_impl_.timeout_->MergeFrom(*from._impl_.timeout_);
    }
  }
  if (from._internal_port() != 0) {
    _this->_impl_.port_ = from._impl_.port_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceNmsSnmpConfig::CopyFrom(const DeviceNmsSnmpConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.DeviceNmsSnmpConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceNmsSnmpConfig::InternalSwap(DeviceNmsSnmpConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.credential_name_, &other->_impl_.credential_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeviceNmsSnmpConfig, _impl_.port_)
      + sizeof(DeviceNmsSnmpConfig::_impl_.port_)
      - PROTOBUF_FIELD_OFFSET(DeviceNmsSnmpConfig, _impl_.timeout_)>(
          reinterpret_cast<char*>(&_impl_.timeout_),
          reinterpret_cast<char*>(&other->_impl_.timeout_));
}

::google::protobuf::Metadata DeviceNmsSnmpConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeviceNmsStConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DeviceNmsStConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeviceNmsStConfig, _impl_._has_bits_);
};

void DeviceNmsStConfig::clear_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timeout_ != nullptr) _impl_.timeout_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DeviceNmsStConfig::DeviceNmsStConfig(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.DeviceNmsStConfig)
}
inline PROTOBUF_NDEBUG_INLINE DeviceNmsStConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::DeviceNmsStConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        credential_name_(arena, from.credential_name_) {}

DeviceNmsStConfig::DeviceNmsStConfig(
    ::google::protobuf::Arena* arena,
    const DeviceNmsStConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeviceNmsStConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timeout_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(
                              arena, *from._impl_.timeout_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, port_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, port_),
           offsetof(Impl_, secure_) -
               offsetof(Impl_, port_) +
               sizeof(Impl_::secure_));

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.DeviceNmsStConfig)
}
inline PROTOBUF_NDEBUG_INLINE DeviceNmsStConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        credential_name_(arena) {}

inline void DeviceNmsStConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timeout_),
           0,
           offsetof(Impl_, secure_) -
               offsetof(Impl_, timeout_) +
               sizeof(Impl_::secure_));
}
DeviceNmsStConfig::~DeviceNmsStConfig() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.DeviceNmsStConfig)
  SharedDtor(*this);
}
inline void DeviceNmsStConfig::SharedDtor(MessageLite& self) {
  DeviceNmsStConfig& this_ = static_cast<DeviceNmsStConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.credential_name_.Destroy();
  delete this_._impl_.timeout_;
  this_._impl_.~Impl_();
}

inline void* DeviceNmsStConfig::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeviceNmsStConfig(arena);
}
constexpr auto DeviceNmsStConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeviceNmsStConfig),
                                            alignof(DeviceNmsStConfig));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeviceNmsStConfig::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeviceNmsStConfig_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeviceNmsStConfig::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeviceNmsStConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeviceNmsStConfig::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeviceNmsStConfig>(), &DeviceNmsStConfig::ByteSizeLong,
            &DeviceNmsStConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeviceNmsStConfig, _impl_._cached_size_),
        false,
    },
    &DeviceNmsStConfig::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeviceNmsStConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 68, 2> DeviceNmsStConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceNmsStConfig, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceNmsStConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool secure = 4 [json_name = "secure", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DeviceNmsStConfig, _impl_.secure_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceNmsStConfig, _impl_.secure_)}},
    // string credential_name = 1 [json_name = "credentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceNmsStConfig, _impl_.credential_name_)}},
    // uint32 port = 2 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceNmsStConfig, _impl_.port_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceNmsStConfig, _impl_.port_)}},
    // .google.protobuf.Duration timeout = 3 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceNmsStConfig, _impl_.timeout_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string credential_name = 1 [json_name = "credentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceNmsStConfig, _impl_.credential_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 port = 2 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceNmsStConfig, _impl_.port_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .google.protobuf.Duration timeout = 3 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceNmsStConfig, _impl_.timeout_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool secure = 4 [json_name = "secure", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceNmsStConfig, _impl_.secure_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
  }}, {{
    "\54\17\0\0\0\0\0\0"
    "kentik.device.v202504beta2.DeviceNmsStConfig"
    "credential_name"
  }},
};

PROTOBUF_NOINLINE void DeviceNmsStConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.DeviceNmsStConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.credential_name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.timeout_ != nullptr);
    _impl_.timeout_->Clear();
  }
  ::memset(&_impl_.port_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.secure_) -
      reinterpret_cast<char*>(&_impl_.port_)) + sizeof(_impl_.secure_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeviceNmsStConfig::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeviceNmsStConfig& this_ = static_cast<const DeviceNmsStConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeviceNmsStConfig::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeviceNmsStConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.DeviceNmsStConfig)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string credential_name = 1 [json_name = "credentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_credential_name().empty()) {
            const std::string& _s = this_._internal_credential_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceNmsStConfig.credential_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 port = 2 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_port() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_port(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Duration timeout = 3 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.timeout_, this_._impl_.timeout_->GetCachedSize(), target,
                stream);
          }

          // bool secure = 4 [json_name = "secure", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_secure() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_secure(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.DeviceNmsStConfig)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeviceNmsStConfig::ByteSizeLong(const MessageLite& base) {
          const DeviceNmsStConfig& this_ = static_cast<const DeviceNmsStConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeviceNmsStConfig::ByteSizeLong() const {
          const DeviceNmsStConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.DeviceNmsStConfig)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string credential_name = 1 [json_name = "credentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_credential_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_credential_name());
            }
          }
           {
            // .google.protobuf.Duration timeout = 3 [json_name = "timeout", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timeout_);
            }
          }
           {
            // uint32 port = 2 [json_name = "port", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_port() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_port());
            }
            // bool secure = 4 [json_name = "secure", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_secure() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeviceNmsStConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceNmsStConfig*>(&to_msg);
  auto& from = static_cast<const DeviceNmsStConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.DeviceNmsStConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_credential_name().empty()) {
    _this->_internal_set_credential_name(from._internal_credential_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.timeout_ != nullptr);
    if (_this->_impl_.timeout_ == nullptr) {
      _this->_impl_.timeout_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(arena, *from._impl_.timeout_);
    } else {
      _this->_impl_.timeout_->MergeFrom(*from._impl_.timeout_);
    }
  }
  if (from._internal_port() != 0) {
    _this->_impl_.port_ = from._impl_.port_;
  }
  if (from._internal_secure() != 0) {
    _this->_impl_.secure_ = from._impl_.secure_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceNmsStConfig::CopyFrom(const DeviceNmsStConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.DeviceNmsStConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceNmsStConfig::InternalSwap(DeviceNmsStConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.credential_name_, &other->_impl_.credential_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeviceNmsStConfig, _impl_.secure_)
      + sizeof(DeviceNmsStConfig::_impl_.secure_)
      - PROTOBUF_FIELD_OFFSET(DeviceNmsStConfig, _impl_.timeout_)>(
          reinterpret_cast<char*>(&_impl_.timeout_),
          reinterpret_cast<char*>(&other->_impl_.timeout_));
}

::google::protobuf::Metadata DeviceNmsStConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeviceConcise::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DeviceConcise>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_._has_bits_);
};

DeviceConcise::DeviceConcise(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.DeviceConcise)
}
inline PROTOBUF_NDEBUG_INLINE DeviceConcise::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::DeviceConcise& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sending_ips_{visibility, arena, from.sending_ips_},
        id_(arena, from.id_),
        device_name_(arena, from.device_name_),
        device_subtype_(arena, from.device_subtype_),
        cdn_attr_(arena, from.cdn_attr_),
        device_description_(arena, from.device_description_),
        device_snmp_ip_(arena, from.device_snmp_ip_),
        device_snmp_community_(arena, from.device_snmp_community_),
        device_bgp_type_(arena, from.device_bgp_type_),
        device_bgp_neighbor_ip_(arena, from.device_bgp_neighbor_ip_),
        device_bgp_neighbor_ip6_(arena, from.device_bgp_neighbor_ip6_),
        device_bgp_neighbor_asn_(arena, from.device_bgp_neighbor_asn_),
        device_bgp_password_(arena, from.device_bgp_password_),
        use_bgp_device_id_(arena, from.use_bgp_device_id_),
        device_bgp_credential_name_(arena, from.device_bgp_credential_name_),
        flow_snmp_credential_name_(arena, from.flow_snmp_credential_name_) {}

DeviceConcise::DeviceConcise(
    ::google::protobuf::Arena* arena,
    const DeviceConcise& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeviceConcise* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.device_snmp_v3_conf_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceSnmpV3Conf>(
                              arena, *from._impl_.device_snmp_v3_conf_)
                        : nullptr;
  _impl_.nms_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceNmsConfig>(
                              arena, *from._impl_.nms_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, device_sample_rate_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, device_sample_rate_),
           offsetof(Impl_, monitoring_template_id_) -
               offsetof(Impl_, device_sample_rate_) +
               sizeof(Impl_::monitoring_template_id_));

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.DeviceConcise)
}
inline PROTOBUF_NDEBUG_INLINE DeviceConcise::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        sending_ips_{visibility, arena},
        id_(arena),
        device_name_(arena),
        device_subtype_(arena),
        cdn_attr_(arena),
        device_description_(arena),
        device_snmp_ip_(arena),
        device_snmp_community_(arena),
        device_bgp_type_(arena),
        device_bgp_neighbor_ip_(arena),
        device_bgp_neighbor_ip6_(arena),
        device_bgp_neighbor_asn_(arena),
        device_bgp_password_(arena),
        use_bgp_device_id_(arena),
        device_bgp_credential_name_(arena),
        flow_snmp_credential_name_(arena) {}

inline void DeviceConcise::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, device_snmp_v3_conf_),
           0,
           offsetof(Impl_, monitoring_template_id_) -
               offsetof(Impl_, device_snmp_v3_conf_) +
               sizeof(Impl_::monitoring_template_id_));
}
DeviceConcise::~DeviceConcise() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.DeviceConcise)
  SharedDtor(*this);
}
inline void DeviceConcise::SharedDtor(MessageLite& self) {
  DeviceConcise& this_ = static_cast<DeviceConcise&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.device_name_.Destroy();
  this_._impl_.device_subtype_.Destroy();
  this_._impl_.cdn_attr_.Destroy();
  this_._impl_.device_description_.Destroy();
  this_._impl_.device_snmp_ip_.Destroy();
  this_._impl_.device_snmp_community_.Destroy();
  this_._impl_.device_bgp_type_.Destroy();
  this_._impl_.device_bgp_neighbor_ip_.Destroy();
  this_._impl_.device_bgp_neighbor_ip6_.Destroy();
  this_._impl_.device_bgp_neighbor_asn_.Destroy();
  this_._impl_.device_bgp_password_.Destroy();
  this_._impl_.use_bgp_device_id_.Destroy();
  this_._impl_.device_bgp_credential_name_.Destroy();
  this_._impl_.flow_snmp_credential_name_.Destroy();
  delete this_._impl_.device_snmp_v3_conf_;
  delete this_._impl_.nms_;
  this_._impl_.~Impl_();
}

inline void* DeviceConcise::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeviceConcise(arena);
}
constexpr auto DeviceConcise::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.sending_ips_) +
          decltype(DeviceConcise::_impl_.sending_ips_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(DeviceConcise), alignof(DeviceConcise), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DeviceConcise::PlacementNew_,
                                 sizeof(DeviceConcise),
                                 alignof(DeviceConcise));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeviceConcise::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeviceConcise_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeviceConcise::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeviceConcise>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeviceConcise::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeviceConcise>(), &DeviceConcise::ByteSizeLong,
            &DeviceConcise::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_._cached_size_),
        false,
    },
    &DeviceConcise::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeviceConcise::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 24, 2, 342, 2> DeviceConcise::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_._has_bits_),
    0, // no _extensions_
    24, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4278190080,  // skipmap
    offsetof(decltype(_table_), field_entries),
    24,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceConcise>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.id_)}},
    // string device_name = 2 [json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_name_)}},
    // string device_subtype = 3 [json_name = "deviceSubtype", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_subtype_)}},
    // string cdn_attr = 4 [json_name = "cdnAttr", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.cdn_attr_)}},
    // string device_description = 5 [json_name = "deviceDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_description_)}},
    // repeated string sending_ips = 6 [json_name = "sendingIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.sending_ips_)}},
    // double device_sample_rate = 7 [json_name = "deviceSampleRate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF64S1,
     {57, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_sample_rate_)}},
    // uint32 plan_id = 8 [json_name = "planId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceConcise, _impl_.plan_id_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.plan_id_)}},
    // uint32 site_id = 9 [json_name = "siteId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceConcise, _impl_.site_id_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.site_id_)}},
    // optional bool minimize_snmp = 10 [json_name = "minimizeSnmp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DeviceConcise, _impl_.minimize_snmp_), 2>(),
     {80, 2, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.minimize_snmp_)}},
    // string device_snmp_ip = 11 [json_name = "deviceSnmpIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_snmp_ip_)}},
    // string device_snmp_community = 12 [json_name = "deviceSnmpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_snmp_community_)}},
    // .kentik.device.v202504beta2.DeviceSnmpV3Conf device_snmp_v3_conf = 13 [json_name = "deviceSnmpV3Conf", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {106, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_snmp_v3_conf_)}},
    // string device_bgp_type = 14 [json_name = "deviceBgpType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_bgp_type_)}},
    // string device_bgp_neighbor_ip = 15 [json_name = "deviceBgpNeighborIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_bgp_neighbor_ip_)}},
    // string device_bgp_neighbor_ip6 = 16 [json_name = "deviceBgpNeighborIp6", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_bgp_neighbor_ip6_)}},
    // string device_bgp_neighbor_asn = 17 [json_name = "deviceBgpNeighborAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_bgp_neighbor_asn_)}},
    // string device_bgp_password = 18 [json_name = "deviceBgpPassword", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {402, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_bgp_password_)}},
    // string use_bgp_device_id = 19 [json_name = "useBgpDeviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {410, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.use_bgp_device_id_)}},
    // bool device_bgp_flowspec = 20 [json_name = "deviceBgpFlowspec", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastV8S2,
     {416, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_bgp_flowspec_)}},
    // .kentik.device.v202504beta2.DeviceNmsConfig nms = 21 [json_name = "nms", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS2,
     {426, 1, 1, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.nms_)}},
    // string device_bgp_credential_name = 22 [json_name = "deviceBgpCredentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {434, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_bgp_credential_name_)}},
    // string flow_snmp_credential_name = 23 [json_name = "flowSnmpCredentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {442, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.flow_snmp_credential_name_)}},
    // uint32 monitoring_template_id = 24 [json_name = "monitoringTemplateId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastV32S2,
     {448, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.monitoring_template_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_name = 2 [json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_subtype = 3 [json_name = "deviceSubtype", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_subtype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string cdn_attr = 4 [json_name = "cdnAttr", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.cdn_attr_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_description = 5 [json_name = "deviceDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string sending_ips = 6 [json_name = "sendingIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.sending_ips_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // double device_sample_rate = 7 [json_name = "deviceSampleRate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_sample_rate_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // uint32 plan_id = 8 [json_name = "planId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.plan_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 site_id = 9 [json_name = "siteId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.site_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // optional bool minimize_snmp = 10 [json_name = "minimizeSnmp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.minimize_snmp_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string device_snmp_ip = 11 [json_name = "deviceSnmpIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_snmp_ip_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_snmp_community = 12 [json_name = "deviceSnmpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_snmp_community_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .kentik.device.v202504beta2.DeviceSnmpV3Conf device_snmp_v3_conf = 13 [json_name = "deviceSnmpV3Conf", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_snmp_v3_conf_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string device_bgp_type = 14 [json_name = "deviceBgpType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_bgp_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_bgp_neighbor_ip = 15 [json_name = "deviceBgpNeighborIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_bgp_neighbor_ip_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_bgp_neighbor_ip6 = 16 [json_name = "deviceBgpNeighborIp6", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_bgp_neighbor_ip6_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_bgp_neighbor_asn = 17 [json_name = "deviceBgpNeighborAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_bgp_neighbor_asn_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_bgp_password = 18 [json_name = "deviceBgpPassword", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_bgp_password_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string use_bgp_device_id = 19 [json_name = "useBgpDeviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.use_bgp_device_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool device_bgp_flowspec = 20 [json_name = "deviceBgpFlowspec", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_bgp_flowspec_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .kentik.device.v202504beta2.DeviceNmsConfig nms = 21 [json_name = "nms", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.nms_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string device_bgp_credential_name = 22 [json_name = "deviceBgpCredentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_bgp_credential_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string flow_snmp_credential_name = 23 [json_name = "flowSnmpCredentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.flow_snmp_credential_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 monitoring_template_id = 24 [json_name = "monitoringTemplateId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.monitoring_template_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceSnmpV3Conf>()},
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceNmsConfig>()},
  }}, {{
    "\50\2\13\16\10\22\13\0\0\0\0\16\25\0\17\26\27\27\23\21\0\0\32\31\0\0\0\0\0\0\0\0"
    "kentik.device.v202504beta2.DeviceConcise"
    "id"
    "device_name"
    "device_subtype"
    "cdn_attr"
    "device_description"
    "sending_ips"
    "device_snmp_ip"
    "device_snmp_community"
    "device_bgp_type"
    "device_bgp_neighbor_ip"
    "device_bgp_neighbor_ip6"
    "device_bgp_neighbor_asn"
    "device_bgp_password"
    "use_bgp_device_id"
    "device_bgp_credential_name"
    "flow_snmp_credential_name"
  }},
};

PROTOBUF_NOINLINE void DeviceConcise::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.DeviceConcise)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sending_ips_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.device_name_.ClearToEmpty();
  _impl_.device_subtype_.ClearToEmpty();
  _impl_.cdn_attr_.ClearToEmpty();
  _impl_.device_description_.ClearToEmpty();
  _impl_.device_snmp_ip_.ClearToEmpty();
  _impl_.device_snmp_community_.ClearToEmpty();
  _impl_.device_bgp_type_.ClearToEmpty();
  _impl_.device_bgp_neighbor_ip_.ClearToEmpty();
  _impl_.device_bgp_neighbor_ip6_.ClearToEmpty();
  _impl_.device_bgp_neighbor_asn_.ClearToEmpty();
  _impl_.device_bgp_password_.ClearToEmpty();
  _impl_.use_bgp_device_id_.ClearToEmpty();
  _impl_.device_bgp_credential_name_.ClearToEmpty();
  _impl_.flow_snmp_credential_name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.device_snmp_v3_conf_ != nullptr);
      _impl_.device_snmp_v3_conf_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.nms_ != nullptr);
      _impl_.nms_->Clear();
    }
  }
  ::memset(&_impl_.device_sample_rate_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.site_id_) -
      reinterpret_cast<char*>(&_impl_.device_sample_rate_)) + sizeof(_impl_.site_id_));
  _impl_.minimize_snmp_ = false;
  ::memset(&_impl_.device_bgp_flowspec_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.monitoring_template_id_) -
      reinterpret_cast<char*>(&_impl_.device_bgp_flowspec_)) + sizeof(_impl_.monitoring_template_id_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeviceConcise::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeviceConcise& this_ = static_cast<const DeviceConcise&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeviceConcise::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeviceConcise& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.DeviceConcise)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceConcise.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string device_name = 2 [json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_name().empty()) {
            const std::string& _s = this_._internal_device_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceConcise.device_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string device_subtype = 3 [json_name = "deviceSubtype", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_subtype().empty()) {
            const std::string& _s = this_._internal_device_subtype();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceConcise.device_subtype");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string cdn_attr = 4 [json_name = "cdnAttr", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_cdn_attr().empty()) {
            const std::string& _s = this_._internal_cdn_attr();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceConcise.cdn_attr");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string device_description = 5 [json_name = "deviceDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_description().empty()) {
            const std::string& _s = this_._internal_device_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceConcise.device_description");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // repeated string sending_ips = 6 [json_name = "sendingIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_sending_ips_size(); i < n; ++i) {
            const auto& s = this_._internal_sending_ips().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceConcise.sending_ips");
            target = stream->WriteString(6, s, target);
          }

          // double device_sample_rate = 7 [json_name = "deviceSampleRate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint64_t>(this_._internal_device_sample_rate()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                7, this_._internal_device_sample_rate(), target);
          }

          // uint32 plan_id = 8 [json_name = "planId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_plan_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                8, this_._internal_plan_id(), target);
          }

          // uint32 site_id = 9 [json_name = "siteId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_site_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                9, this_._internal_site_id(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional bool minimize_snmp = 10 [json_name = "minimizeSnmp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_minimize_snmp(), target);
          }

          // string device_snmp_ip = 11 [json_name = "deviceSnmpIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_snmp_ip().empty()) {
            const std::string& _s = this_._internal_device_snmp_ip();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceConcise.device_snmp_ip");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // string device_snmp_community = 12 [json_name = "deviceSnmpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_snmp_community().empty()) {
            const std::string& _s = this_._internal_device_snmp_community();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceConcise.device_snmp_community");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          // .kentik.device.v202504beta2.DeviceSnmpV3Conf device_snmp_v3_conf = 13 [json_name = "deviceSnmpV3Conf", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                13, *this_._impl_.device_snmp_v3_conf_, this_._impl_.device_snmp_v3_conf_->GetCachedSize(), target,
                stream);
          }

          // string device_bgp_type = 14 [json_name = "deviceBgpType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_bgp_type().empty()) {
            const std::string& _s = this_._internal_device_bgp_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceConcise.device_bgp_type");
            target = stream->WriteStringMaybeAliased(14, _s, target);
          }

          // string device_bgp_neighbor_ip = 15 [json_name = "deviceBgpNeighborIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_bgp_neighbor_ip().empty()) {
            const std::string& _s = this_._internal_device_bgp_neighbor_ip();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceConcise.device_bgp_neighbor_ip");
            target = stream->WriteStringMaybeAliased(15, _s, target);
          }

          // string device_bgp_neighbor_ip6 = 16 [json_name = "deviceBgpNeighborIp6", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_bgp_neighbor_ip6().empty()) {
            const std::string& _s = this_._internal_device_bgp_neighbor_ip6();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceConcise.device_bgp_neighbor_ip6");
            target = stream->WriteStringMaybeAliased(16, _s, target);
          }

          // string device_bgp_neighbor_asn = 17 [json_name = "deviceBgpNeighborAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_bgp_neighbor_asn().empty()) {
            const std::string& _s = this_._internal_device_bgp_neighbor_asn();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceConcise.device_bgp_neighbor_asn");
            target = stream->WriteStringMaybeAliased(17, _s, target);
          }

          // string device_bgp_password = 18 [json_name = "deviceBgpPassword", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_bgp_password().empty()) {
            const std::string& _s = this_._internal_device_bgp_password();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceConcise.device_bgp_password");
            target = stream->WriteStringMaybeAliased(18, _s, target);
          }

          // string use_bgp_device_id = 19 [json_name = "useBgpDeviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_use_bgp_device_id().empty()) {
            const std::string& _s = this_._internal_use_bgp_device_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceConcise.use_bgp_device_id");
            target = stream->WriteStringMaybeAliased(19, _s, target);
          }

          // bool device_bgp_flowspec = 20 [json_name = "deviceBgpFlowspec", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_device_bgp_flowspec() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                20, this_._internal_device_bgp_flowspec(), target);
          }

          // .kentik.device.v202504beta2.DeviceNmsConfig nms = 21 [json_name = "nms", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                21, *this_._impl_.nms_, this_._impl_.nms_->GetCachedSize(), target,
                stream);
          }

          // string device_bgp_credential_name = 22 [json_name = "deviceBgpCredentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_bgp_credential_name().empty()) {
            const std::string& _s = this_._internal_device_bgp_credential_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceConcise.device_bgp_credential_name");
            target = stream->WriteStringMaybeAliased(22, _s, target);
          }

          // string flow_snmp_credential_name = 23 [json_name = "flowSnmpCredentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_flow_snmp_credential_name().empty()) {
            const std::string& _s = this_._internal_flow_snmp_credential_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceConcise.flow_snmp_credential_name");
            target = stream->WriteStringMaybeAliased(23, _s, target);
          }

          // uint32 monitoring_template_id = 24 [json_name = "monitoringTemplateId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_monitoring_template_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                24, this_._internal_monitoring_template_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.DeviceConcise)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeviceConcise::ByteSizeLong(const MessageLite& base) {
          const DeviceConcise& this_ = static_cast<const DeviceConcise&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeviceConcise::ByteSizeLong() const {
          const DeviceConcise& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.DeviceConcise)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string sending_ips = 6 [json_name = "sendingIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_sending_ips().size());
              for (int i = 0, n = this_._internal_sending_ips().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_sending_ips().Get(i));
              }
            }
          }
           {
            // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string device_name = 2 [json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_name());
            }
            // string device_subtype = 3 [json_name = "deviceSubtype", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_subtype().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_subtype());
            }
            // string cdn_attr = 4 [json_name = "cdnAttr", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_cdn_attr().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cdn_attr());
            }
            // string device_description = 5 [json_name = "deviceDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_description());
            }
            // string device_snmp_ip = 11 [json_name = "deviceSnmpIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_snmp_ip().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_snmp_ip());
            }
            // string device_snmp_community = 12 [json_name = "deviceSnmpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_snmp_community().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_snmp_community());
            }
            // string device_bgp_type = 14 [json_name = "deviceBgpType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_bgp_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_bgp_type());
            }
            // string device_bgp_neighbor_ip = 15 [json_name = "deviceBgpNeighborIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_bgp_neighbor_ip().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_bgp_neighbor_ip());
            }
            // string device_bgp_neighbor_ip6 = 16 [json_name = "deviceBgpNeighborIp6", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_bgp_neighbor_ip6().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_bgp_neighbor_ip6());
            }
            // string device_bgp_neighbor_asn = 17 [json_name = "deviceBgpNeighborAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_bgp_neighbor_asn().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_bgp_neighbor_asn());
            }
            // string device_bgp_password = 18 [json_name = "deviceBgpPassword", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_bgp_password().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_bgp_password());
            }
            // string use_bgp_device_id = 19 [json_name = "useBgpDeviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_use_bgp_device_id().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_use_bgp_device_id());
            }
            // string device_bgp_credential_name = 22 [json_name = "deviceBgpCredentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_bgp_credential_name().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_bgp_credential_name());
            }
            // string flow_snmp_credential_name = 23 [json_name = "flowSnmpCredentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_flow_snmp_credential_name().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_flow_snmp_credential_name());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .kentik.device.v202504beta2.DeviceSnmpV3Conf device_snmp_v3_conf = 13 [json_name = "deviceSnmpV3Conf", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.device_snmp_v3_conf_);
            }
            // .kentik.device.v202504beta2.DeviceNmsConfig nms = 21 [json_name = "nms", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000002u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.nms_);
            }
          }
           {
            // double device_sample_rate = 7 [json_name = "deviceSampleRate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint64_t>(this_._internal_device_sample_rate()) != 0) {
              total_size += 9;
            }
            // uint32 plan_id = 8 [json_name = "planId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_plan_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_plan_id());
            }
            // uint32 site_id = 9 [json_name = "siteId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_site_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_site_id());
            }
          }
           {
            // optional bool minimize_snmp = 10 [json_name = "minimizeSnmp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000004u) {
              total_size += 2;
            }
          }
           {
            // bool device_bgp_flowspec = 20 [json_name = "deviceBgpFlowspec", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_device_bgp_flowspec() != 0) {
              total_size += 3;
            }
            // uint32 monitoring_template_id = 24 [json_name = "monitoringTemplateId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_monitoring_template_id() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_monitoring_template_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeviceConcise::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceConcise*>(&to_msg);
  auto& from = static_cast<const DeviceConcise&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.DeviceConcise)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sending_ips()->MergeFrom(from._internal_sending_ips());
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_device_name().empty()) {
    _this->_internal_set_device_name(from._internal_device_name());
  }
  if (!from._internal_device_subtype().empty()) {
    _this->_internal_set_device_subtype(from._internal_device_subtype());
  }
  if (!from._internal_cdn_attr().empty()) {
    _this->_internal_set_cdn_attr(from._internal_cdn_attr());
  }
  if (!from._internal_device_description().empty()) {
    _this->_internal_set_device_description(from._internal_device_description());
  }
  if (!from._internal_device_snmp_ip().empty()) {
    _this->_internal_set_device_snmp_ip(from._internal_device_snmp_ip());
  }
  if (!from._internal_device_snmp_community().empty()) {
    _this->_internal_set_device_snmp_community(from._internal_device_snmp_community());
  }
  if (!from._internal_device_bgp_type().empty()) {
    _this->_internal_set_device_bgp_type(from._internal_device_bgp_type());
  }
  if (!from._internal_device_bgp_neighbor_ip().empty()) {
    _this->_internal_set_device_bgp_neighbor_ip(from._internal_device_bgp_neighbor_ip());
  }
  if (!from._internal_device_bgp_neighbor_ip6().empty()) {
    _this->_internal_set_device_bgp_neighbor_ip6(from._internal_device_bgp_neighbor_ip6());
  }
  if (!from._internal_device_bgp_neighbor_asn().empty()) {
    _this->_internal_set_device_bgp_neighbor_asn(from._internal_device_bgp_neighbor_asn());
  }
  if (!from._internal_device_bgp_password().empty()) {
    _this->_internal_set_device_bgp_password(from._internal_device_bgp_password());
  }
  if (!from._internal_use_bgp_device_id().empty()) {
    _this->_internal_set_use_bgp_device_id(from._internal_use_bgp_device_id());
  }
  if (!from._internal_device_bgp_credential_name().empty()) {
    _this->_internal_set_device_bgp_credential_name(from._internal_device_bgp_credential_name());
  }
  if (!from._internal_flow_snmp_credential_name().empty()) {
    _this->_internal_set_flow_snmp_credential_name(from._internal_flow_snmp_credential_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.device_snmp_v3_conf_ != nullptr);
      if (_this->_impl_.device_snmp_v3_conf_ == nullptr) {
        _this->_impl_.device_snmp_v3_conf_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceSnmpV3Conf>(arena, *from._impl_.device_snmp_v3_conf_);
      } else {
        _this->_impl_.device_snmp_v3_conf_->MergeFrom(*from._impl_.device_snmp_v3_conf_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.nms_ != nullptr);
      if (_this->_impl_.nms_ == nullptr) {
        _this->_impl_.nms_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceNmsConfig>(arena, *from._impl_.nms_);
      } else {
        _this->_impl_.nms_->MergeFrom(*from._impl_.nms_);
      }
    }
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_device_sample_rate()) != 0) {
    _this->_impl_.device_sample_rate_ = from._impl_.device_sample_rate_;
  }
  if (from._internal_plan_id() != 0) {
    _this->_impl_.plan_id_ = from._impl_.plan_id_;
  }
  if (from._internal_site_id() != 0) {
    _this->_impl_.site_id_ = from._impl_.site_id_;
  }
  if (cached_has_bits & 0x00000004u) {
    _this->_impl_.minimize_snmp_ = from._impl_.minimize_snmp_;
  }
  if (from._internal_device_bgp_flowspec() != 0) {
    _this->_impl_.device_bgp_flowspec_ = from._impl_.device_bgp_flowspec_;
  }
  if (from._internal_monitoring_template_id() != 0) {
    _this->_impl_.monitoring_template_id_ = from._impl_.monitoring_template_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceConcise::CopyFrom(const DeviceConcise& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.DeviceConcise)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceConcise::InternalSwap(DeviceConcise* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.sending_ips_.InternalSwap(&other->_impl_.sending_ips_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_name_, &other->_impl_.device_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_subtype_, &other->_impl_.device_subtype_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cdn_attr_, &other->_impl_.cdn_attr_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_description_, &other->_impl_.device_description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_snmp_ip_, &other->_impl_.device_snmp_ip_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_snmp_community_, &other->_impl_.device_snmp_community_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_bgp_type_, &other->_impl_.device_bgp_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_bgp_neighbor_ip_, &other->_impl_.device_bgp_neighbor_ip_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_bgp_neighbor_ip6_, &other->_impl_.device_bgp_neighbor_ip6_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_bgp_neighbor_asn_, &other->_impl_.device_bgp_neighbor_asn_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_bgp_password_, &other->_impl_.device_bgp_password_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.use_bgp_device_id_, &other->_impl_.use_bgp_device_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_bgp_credential_name_, &other->_impl_.device_bgp_credential_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.flow_snmp_credential_name_, &other->_impl_.flow_snmp_credential_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.monitoring_template_id_)
      + sizeof(DeviceConcise::_impl_.monitoring_template_id_)
      - PROTOBUF_FIELD_OFFSET(DeviceConcise, _impl_.device_snmp_v3_conf_)>(
          reinterpret_cast<char*>(&_impl_.device_snmp_v3_conf_),
          reinterpret_cast<char*>(&other->_impl_.device_snmp_v3_conf_));
}

::google::protobuf::Metadata DeviceConcise::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Site::_Internal {
 public:
};

Site::Site(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.Site)
}
inline PROTOBUF_NDEBUG_INLINE Site::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::Site& from_msg)
      : id_(arena, from.id_),
        site_name_(arena, from.site_name_),
        company_id_(arena, from.company_id_),
        _cached_size_{0} {}

Site::Site(
    ::google::protobuf::Arena* arena,
    const Site& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Site* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lat_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, lat_),
           offsetof(Impl_, lon_) -
               offsetof(Impl_, lat_) +
               sizeof(Impl_::lon_));

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.Site)
}
inline PROTOBUF_NDEBUG_INLINE Site::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        site_name_(arena),
        company_id_(arena),
        _cached_size_{0} {}

inline void Site::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lat_),
           0,
           offsetof(Impl_, lon_) -
               offsetof(Impl_, lat_) +
               sizeof(Impl_::lon_));
}
Site::~Site() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.Site)
  SharedDtor(*this);
}
inline void Site::SharedDtor(MessageLite& self) {
  Site& this_ = static_cast<Site&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.site_name_.Destroy();
  this_._impl_.company_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Site::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Site(arena);
}
constexpr auto Site::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Site),
                                            alignof(Site));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Site::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Site_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Site::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Site>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Site::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Site>(), &Site::ByteSizeLong,
            &Site::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Site, _impl_._cached_size_),
        false,
    },
    &Site::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Site::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 61, 2> Site::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::Site>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Site, _impl_.id_)}},
    // string site_name = 2 [json_name = "siteName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Site, _impl_.site_name_)}},
    // double lat = 3 [json_name = "lat", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Site, _impl_.lat_)}},
    // double lon = 4 [json_name = "lon", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(Site, _impl_.lon_)}},
    // string company_id = 5 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Site, _impl_.company_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Site, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string site_name = 2 [json_name = "siteName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Site, _impl_.site_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double lat = 3 [json_name = "lat", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Site, _impl_.lat_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double lon = 4 [json_name = "lon", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Site, _impl_.lon_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string company_id = 5 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Site, _impl_.company_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\2\11\0\0\12\0\0"
    "kentik.device.v202504beta2.Site"
    "id"
    "site_name"
    "company_id"
  }},
};

PROTOBUF_NOINLINE void Site::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.Site)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.site_name_.ClearToEmpty();
  _impl_.company_id_.ClearToEmpty();
  ::memset(&_impl_.lat_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.lon_) -
      reinterpret_cast<char*>(&_impl_.lat_)) + sizeof(_impl_.lon_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Site::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Site& this_ = static_cast<const Site&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Site::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Site& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.Site)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Site.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string site_name = 2 [json_name = "siteName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_site_name().empty()) {
            const std::string& _s = this_._internal_site_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Site.site_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // double lat = 3 [json_name = "lat", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint64_t>(this_._internal_lat()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_lat(), target);
          }

          // double lon = 4 [json_name = "lon", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (::absl::bit_cast<::uint64_t>(this_._internal_lon()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_lon(), target);
          }

          // string company_id = 5 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_company_id().empty()) {
            const std::string& _s = this_._internal_company_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Site.company_id");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.Site)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Site::ByteSizeLong(const MessageLite& base) {
          const Site& this_ = static_cast<const Site&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Site::ByteSizeLong() const {
          const Site& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.Site)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string site_name = 2 [json_name = "siteName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_site_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_site_name());
            }
            // string company_id = 5 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_company_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_company_id());
            }
            // double lat = 3 [json_name = "lat", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint64_t>(this_._internal_lat()) != 0) {
              total_size += 9;
            }
            // double lon = 4 [json_name = "lon", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (::absl::bit_cast<::uint64_t>(this_._internal_lon()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Site::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Site*>(&to_msg);
  auto& from = static_cast<const Site&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.Site)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_site_name().empty()) {
    _this->_internal_set_site_name(from._internal_site_name());
  }
  if (!from._internal_company_id().empty()) {
    _this->_internal_set_company_id(from._internal_company_id());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_lat()) != 0) {
    _this->_impl_.lat_ = from._impl_.lat_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_lon()) != 0) {
    _this->_impl_.lon_ = from._impl_.lon_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Site::CopyFrom(const Site& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.Site)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Site::InternalSwap(Site* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.site_name_, &other->_impl_.site_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.company_id_, &other->_impl_.company_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Site, _impl_.lon_)
      + sizeof(Site::_impl_.lon_)
      - PROTOBUF_FIELD_OFFSET(Site, _impl_.lat_)>(
          reinterpret_cast<char*>(&_impl_.lat_),
          reinterpret_cast<char*>(&other->_impl_.lat_));
}

::google::protobuf::Metadata Site::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Plan_MetadataEntry_DoNotUse::Plan_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Plan_MetadataEntry_DoNotUse::Plan_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Plan_MetadataEntry_DoNotUse::Plan_MetadataEntry_DoNotUse() : SuperType() {}
              Plan_MetadataEntry_DoNotUse::Plan_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* Plan_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) Plan_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto Plan_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Plan_MetadataEntry_DoNotUse),
                                                          alignof(Plan_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull Plan_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_Plan_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &Plan_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<Plan_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &Plan_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &Plan_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(Plan_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &Plan_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* Plan_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 62, 2> Plan_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Plan_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::Plan_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Plan_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Plan_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(Plan_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(Plan_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\55\3\5\0\0\0\0\0"
    "kentik.device.v202504beta2.Plan.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class Plan::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Plan>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Plan, _impl_._has_bits_);
};

void Plan::clear_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cdate_ != nullptr) _impl_.cdate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Plan::clear_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.edate_ != nullptr) _impl_.edate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Plan::Plan(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.Plan)
}
inline PROTOBUF_NDEBUG_INLINE Plan::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::Plan& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        device_types_{visibility, arena, from.device_types_},
        devices_{visibility, arena, from.devices_},
        metadata_{visibility, arena, from.metadata_},
        id_(arena, from.id_),
        name_(arena, from.name_),
        company_id_(arena, from.company_id_),
        description_(arena, from.description_) {}

Plan::Plan(
    ::google::protobuf::Arena* arena,
    const Plan& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Plan* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.cdate_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.cdate_)
                        : nullptr;
  _impl_.edate_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.edate_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, active_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, active_),
           offsetof(Impl_, max_fps_) -
               offsetof(Impl_, active_) +
               sizeof(Impl_::max_fps_));

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.Plan)
}
inline PROTOBUF_NDEBUG_INLINE Plan::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        device_types_{visibility, arena},
        devices_{visibility, arena},
        metadata_{visibility, arena},
        id_(arena),
        name_(arena),
        company_id_(arena),
        description_(arena) {}

inline void Plan::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cdate_),
           0,
           offsetof(Impl_, max_fps_) -
               offsetof(Impl_, cdate_) +
               sizeof(Impl_::max_fps_));
}
Plan::~Plan() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.Plan)
  SharedDtor(*this);
}
inline void Plan::SharedDtor(MessageLite& self) {
  Plan& this_ = static_cast<Plan&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.company_id_.Destroy();
  this_._impl_.description_.Destroy();
  delete this_._impl_.cdate_;
  delete this_._impl_.edate_;
  this_._impl_.~Impl_();
}

inline void* Plan::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Plan(arena);
}
constexpr auto Plan::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Plan, _impl_.device_types_) +
          decltype(Plan::_impl_.device_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Plan, _impl_.devices_) +
          decltype(Plan::_impl_.devices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Plan, _impl_.metadata_) +
          decltype(Plan::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Plan, _impl_.metadata_) +
          decltype(Plan::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Plan), alignof(Plan), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Plan::PlacementNew_,
                                 sizeof(Plan),
                                 alignof(Plan));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Plan::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Plan_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Plan::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Plan>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Plan::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Plan>(), &Plan::ByteSizeLong,
            &Plan::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Plan, _impl_._cached_size_),
        false,
    },
    &Plan::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Plan::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 16, 3, 110, 2> Plan::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Plan, _impl_._has_bits_),
    0, // no _extensions_
    16, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294901760,  // skipmap
    offsetof(decltype(_table_), field_entries),
    16,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::Plan>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Plan, _impl_.id_)}},
    // string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Plan, _impl_.name_)}},
    // bool active = 3 [json_name = "active", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Plan, _impl_.active_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Plan, _impl_.active_)}},
    // bool bgp = 4 [json_name = "bgp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Plan, _impl_.bgp_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Plan, _impl_.bgp_)}},
    // string company_id = 5 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Plan, _impl_.company_id_)}},
    // string description = 6 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Plan, _impl_.description_)}},
    // repeated string device_types = 7 [json_name = "deviceTypes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Plan, _impl_.device_types_)}},
    // repeated string devices = 8 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Plan, _impl_.devices_)}},
    // uint32 fast_retention = 9 [json_name = "fastRetention", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Plan, _impl_.fast_retention_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(Plan, _impl_.fast_retention_)}},
    // uint32 full_retention = 10 [json_name = "fullRetention", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Plan, _impl_.full_retention_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(Plan, _impl_.full_retention_)}},
    // uint32 max_bigdata_fps = 11 [json_name = "maxBigdataFps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Plan, _impl_.max_bigdata_fps_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(Plan, _impl_.max_bigdata_fps_)}},
    // uint32 max_devices = 12 [json_name = "maxDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Plan, _impl_.max_devices_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(Plan, _impl_.max_devices_)}},
    // uint32 max_fps = 13 [json_name = "maxFps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Plan, _impl_.max_fps_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(Plan, _impl_.max_fps_)}},
    // .google.protobuf.Timestamp cdate = 14 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {114, 0, 0, PROTOBUF_FIELD_OFFSET(Plan, _impl_.cdate_)}},
    // .google.protobuf.Timestamp edate = 15 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {122, 1, 1, PROTOBUF_FIELD_OFFSET(Plan, _impl_.edate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Plan, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Plan, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool active = 3 [json_name = "active", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Plan, _impl_.active_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool bgp = 4 [json_name = "bgp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Plan, _impl_.bgp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string company_id = 5 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Plan, _impl_.company_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 6 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Plan, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string device_types = 7 [json_name = "deviceTypes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Plan, _impl_.device_types_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string devices = 8 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Plan, _impl_.devices_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // uint32 fast_retention = 9 [json_name = "fastRetention", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Plan, _impl_.fast_retention_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 full_retention = 10 [json_name = "fullRetention", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Plan, _impl_.full_retention_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 max_bigdata_fps = 11 [json_name = "maxBigdataFps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Plan, _impl_.max_bigdata_fps_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 max_devices = 12 [json_name = "maxDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Plan, _impl_.max_devices_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 max_fps = 13 [json_name = "maxFps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Plan, _impl_.max_fps_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .google.protobuf.Timestamp cdate = 14 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Plan, _impl_.cdate_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp edate = 15 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Plan, _impl_.edate_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> metadata = 16 [json_name = "metadata", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Plan, _impl_.metadata_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Plan()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\37\2\4\0\0\12\13\14\7\0\0\0\0\0\0\0\10\0\0\0\0\0\0\0"
    "kentik.device.v202504beta2.Plan"
    "id"
    "name"
    "company_id"
    "description"
    "device_types"
    "devices"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void Plan::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.Plan)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_types_.Clear();
  _impl_.devices_.Clear();
  _impl_.metadata_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.company_id_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.cdate_ != nullptr);
      _impl_.cdate_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.edate_ != nullptr);
      _impl_.edate_->Clear();
    }
  }
  ::memset(&_impl_.active_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.max_fps_) -
      reinterpret_cast<char*>(&_impl_.active_)) + sizeof(_impl_.max_fps_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Plan::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Plan& this_ = static_cast<const Plan&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Plan::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Plan& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.Plan)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Plan.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Plan.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool active = 3 [json_name = "active", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_active() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_active(), target);
          }

          // bool bgp = 4 [json_name = "bgp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_bgp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_bgp(), target);
          }

          // string company_id = 5 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_company_id().empty()) {
            const std::string& _s = this_._internal_company_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Plan.company_id");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string description = 6 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Plan.description");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // repeated string device_types = 7 [json_name = "deviceTypes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_device_types_size(); i < n; ++i) {
            const auto& s = this_._internal_device_types().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Plan.device_types");
            target = stream->WriteString(7, s, target);
          }

          // repeated string devices = 8 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_devices_size(); i < n; ++i) {
            const auto& s = this_._internal_devices().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Plan.devices");
            target = stream->WriteString(8, s, target);
          }

          // uint32 fast_retention = 9 [json_name = "fastRetention", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_fast_retention() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                9, this_._internal_fast_retention(), target);
          }

          // uint32 full_retention = 10 [json_name = "fullRetention", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_full_retention() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                10, this_._internal_full_retention(), target);
          }

          // uint32 max_bigdata_fps = 11 [json_name = "maxBigdataFps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_max_bigdata_fps() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                11, this_._internal_max_bigdata_fps(), target);
          }

          // uint32 max_devices = 12 [json_name = "maxDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_max_devices() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                12, this_._internal_max_devices(), target);
          }

          // uint32 max_fps = 13 [json_name = "maxFps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_max_fps() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                13, this_._internal_max_fps(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp cdate = 14 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                14, *this_._impl_.cdate_, this_._impl_.cdate_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp edate = 15 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                15, *this_._impl_.edate_, this_._impl_.edate_->GetCachedSize(), target,
                stream);
          }

          // map<string, string> metadata = 16 [json_name = "metadata", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    16, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Plan.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Plan.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    16, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Plan.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Plan.metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.Plan)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Plan::ByteSizeLong(const MessageLite& base) {
          const Plan& this_ = static_cast<const Plan&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Plan::ByteSizeLong() const {
          const Plan& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.Plan)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string device_types = 7 [json_name = "deviceTypes", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_device_types().size());
              for (int i = 0, n = this_._internal_device_types().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_device_types().Get(i));
              }
            }
            // repeated string devices = 8 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_devices().size());
              for (int i = 0, n = this_._internal_devices().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_devices().Get(i));
              }
            }
            // map<string, string> metadata = 16 [json_name = "metadata", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string company_id = 5 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_company_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_company_id());
            }
            // string description = 6 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp cdate = 14 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cdate_);
            }
            // .google.protobuf.Timestamp edate = 15 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.edate_);
            }
          }
           {
            // bool active = 3 [json_name = "active", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_active() != 0) {
              total_size += 2;
            }
            // bool bgp = 4 [json_name = "bgp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_bgp() != 0) {
              total_size += 2;
            }
            // uint32 fast_retention = 9 [json_name = "fastRetention", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_fast_retention() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_fast_retention());
            }
            // uint32 full_retention = 10 [json_name = "fullRetention", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_full_retention() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_full_retention());
            }
            // uint32 max_bigdata_fps = 11 [json_name = "maxBigdataFps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_max_bigdata_fps() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_max_bigdata_fps());
            }
            // uint32 max_devices = 12 [json_name = "maxDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_max_devices() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_max_devices());
            }
            // uint32 max_fps = 13 [json_name = "maxFps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_max_fps() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_max_fps());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Plan::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Plan*>(&to_msg);
  auto& from = static_cast<const Plan&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.Plan)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_device_types()->MergeFrom(from._internal_device_types());
  _this->_internal_mutable_devices()->MergeFrom(from._internal_devices());
  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_company_id().empty()) {
    _this->_internal_set_company_id(from._internal_company_id());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.cdate_ != nullptr);
      if (_this->_impl_.cdate_ == nullptr) {
        _this->_impl_.cdate_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.cdate_);
      } else {
        _this->_impl_.cdate_->MergeFrom(*from._impl_.cdate_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.edate_ != nullptr);
      if (_this->_impl_.edate_ == nullptr) {
        _this->_impl_.edate_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.edate_);
      } else {
        _this->_impl_.edate_->MergeFrom(*from._impl_.edate_);
      }
    }
  }
  if (from._internal_active() != 0) {
    _this->_impl_.active_ = from._impl_.active_;
  }
  if (from._internal_bgp() != 0) {
    _this->_impl_.bgp_ = from._impl_.bgp_;
  }
  if (from._internal_fast_retention() != 0) {
    _this->_impl_.fast_retention_ = from._impl_.fast_retention_;
  }
  if (from._internal_full_retention() != 0) {
    _this->_impl_.full_retention_ = from._impl_.full_retention_;
  }
  if (from._internal_max_bigdata_fps() != 0) {
    _this->_impl_.max_bigdata_fps_ = from._impl_.max_bigdata_fps_;
  }
  if (from._internal_max_devices() != 0) {
    _this->_impl_.max_devices_ = from._impl_.max_devices_;
  }
  if (from._internal_max_fps() != 0) {
    _this->_impl_.max_fps_ = from._impl_.max_fps_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Plan::CopyFrom(const Plan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.Plan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Plan::InternalSwap(Plan* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.device_types_.InternalSwap(&other->_impl_.device_types_);
  _impl_.devices_.InternalSwap(&other->_impl_.devices_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.company_id_, &other->_impl_.company_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Plan, _impl_.max_fps_)
      + sizeof(Plan::_impl_.max_fps_)
      - PROTOBUF_FIELD_OFFSET(Plan, _impl_.cdate_)>(
          reinterpret_cast<char*>(&_impl_.cdate_),
          reinterpret_cast<char*>(&other->_impl_.cdate_));
}

::google::protobuf::Metadata Plan::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Label::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Label>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Label, _impl_._has_bits_);
};

void Label::clear_edate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.edate_ != nullptr) _impl_.edate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Label::clear_cdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cdate_ != nullptr) _impl_.cdate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Label::Label(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.Label)
}
inline PROTOBUF_NDEBUG_INLINE Label::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::Label& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        name_(arena, from.name_),
        description_(arena, from.description_),
        user_id_(arena, from.user_id_),
        company_id_(arena, from.company_id_),
        color_(arena, from.color_),
        order_(arena, from.order_),
        pivot_device_id_(arena, from.pivot_device_id_),
        pivot_label_id_(arena, from.pivot_label_id_) {}

Label::Label(
    ::google::protobuf::Arena* arena,
    const Label& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Label* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.edate_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.edate_)
                        : nullptr;
  _impl_.cdate_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.cdate_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.Label)
}
inline PROTOBUF_NDEBUG_INLINE Label::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        name_(arena),
        description_(arena),
        user_id_(arena),
        company_id_(arena),
        color_(arena),
        order_(arena),
        pivot_device_id_(arena),
        pivot_label_id_(arena) {}

inline void Label::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, edate_),
           0,
           offsetof(Impl_, cdate_) -
               offsetof(Impl_, edate_) +
               sizeof(Impl_::cdate_));
}
Label::~Label() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.Label)
  SharedDtor(*this);
}
inline void Label::SharedDtor(MessageLite& self) {
  Label& this_ = static_cast<Label&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.user_id_.Destroy();
  this_._impl_.company_id_.Destroy();
  this_._impl_.color_.Destroy();
  this_._impl_.order_.Destroy();
  this_._impl_.pivot_device_id_.Destroy();
  this_._impl_.pivot_label_id_.Destroy();
  delete this_._impl_.edate_;
  delete this_._impl_.cdate_;
  this_._impl_.~Impl_();
}

inline void* Label::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Label(arena);
}
constexpr auto Label::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Label),
                                            alignof(Label));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Label::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Label_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Label::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Label>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Label::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Label>(), &Label::ByteSizeLong,
            &Label::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Label, _impl_._cached_size_),
        false,
    },
    &Label::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Label::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 2, 122, 2> Label::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Label, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::Label>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Label, _impl_.id_)}},
    // string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Label, _impl_.name_)}},
    // string description = 3 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Label, _impl_.description_)}},
    // .google.protobuf.Timestamp edate = 4 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Label, _impl_.edate_)}},
    // .google.protobuf.Timestamp cdate = 5 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(Label, _impl_.cdate_)}},
    // string user_id = 6 [json_name = "userId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Label, _impl_.user_id_)}},
    // string company_id = 7 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Label, _impl_.company_id_)}},
    // string color = 8 [json_name = "color", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Label, _impl_.color_)}},
    // string order = 9 [json_name = "order", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Label, _impl_.order_)}},
    // string pivot_device_id = 10 [json_name = "pivotDeviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(Label, _impl_.pivot_device_id_)}},
    // string pivot_label_id = 11 [json_name = "pivotLabelId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(Label, _impl_.pivot_label_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Label, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Label, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Label, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp edate = 4 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Label, _impl_.edate_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp cdate = 5 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Label, _impl_.cdate_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string user_id = 6 [json_name = "userId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Label, _impl_.user_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string company_id = 7 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Label, _impl_.company_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string color = 8 [json_name = "color", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Label, _impl_.color_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string order = 9 [json_name = "order", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Label, _impl_.order_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string pivot_device_id = 10 [json_name = "pivotDeviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Label, _impl_.pivot_device_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string pivot_label_id = 11 [json_name = "pivotLabelId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Label, _impl_.pivot_label_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\40\2\4\13\0\0\7\12\5\5\17\16\0\0\0\0"
    "kentik.device.v202504beta2.Label"
    "id"
    "name"
    "description"
    "user_id"
    "company_id"
    "color"
    "order"
    "pivot_device_id"
    "pivot_label_id"
  }},
};

PROTOBUF_NOINLINE void Label::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.Label)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.user_id_.ClearToEmpty();
  _impl_.company_id_.ClearToEmpty();
  _impl_.color_.ClearToEmpty();
  _impl_.order_.ClearToEmpty();
  _impl_.pivot_device_id_.ClearToEmpty();
  _impl_.pivot_label_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.edate_ != nullptr);
      _impl_.edate_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.cdate_ != nullptr);
      _impl_.cdate_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Label::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Label& this_ = static_cast<const Label&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Label::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Label& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.Label)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Label.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Label.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string description = 3 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Label.description");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp edate = 4 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.edate_, this_._impl_.edate_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp cdate = 5 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.cdate_, this_._impl_.cdate_->GetCachedSize(), target,
                stream);
          }

          // string user_id = 6 [json_name = "userId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Label.user_id");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string company_id = 7 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_company_id().empty()) {
            const std::string& _s = this_._internal_company_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Label.company_id");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string color = 8 [json_name = "color", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_color().empty()) {
            const std::string& _s = this_._internal_color();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Label.color");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // string order = 9 [json_name = "order", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_order().empty()) {
            const std::string& _s = this_._internal_order();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Label.order");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // string pivot_device_id = 10 [json_name = "pivotDeviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_pivot_device_id().empty()) {
            const std::string& _s = this_._internal_pivot_device_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Label.pivot_device_id");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          // string pivot_label_id = 11 [json_name = "pivotLabelId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_pivot_label_id().empty()) {
            const std::string& _s = this_._internal_pivot_label_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Label.pivot_label_id");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.Label)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Label::ByteSizeLong(const MessageLite& base) {
          const Label& this_ = static_cast<const Label&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Label::ByteSizeLong() const {
          const Label& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.Label)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string name = 2 [json_name = "name", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string description = 3 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // string user_id = 6 [json_name = "userId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
            // string company_id = 7 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_company_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_company_id());
            }
            // string color = 8 [json_name = "color", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_color().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_color());
            }
            // string order = 9 [json_name = "order", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_order().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_order());
            }
            // string pivot_device_id = 10 [json_name = "pivotDeviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_pivot_device_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_pivot_device_id());
            }
            // string pivot_label_id = 11 [json_name = "pivotLabelId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_pivot_label_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_pivot_label_id());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp edate = 4 [json_name = "edate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.edate_);
            }
            // .google.protobuf.Timestamp cdate = 5 [json_name = "cdate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cdate_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Label::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Label*>(&to_msg);
  auto& from = static_cast<const Label&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.Label)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_company_id().empty()) {
    _this->_internal_set_company_id(from._internal_company_id());
  }
  if (!from._internal_color().empty()) {
    _this->_internal_set_color(from._internal_color());
  }
  if (!from._internal_order().empty()) {
    _this->_internal_set_order(from._internal_order());
  }
  if (!from._internal_pivot_device_id().empty()) {
    _this->_internal_set_pivot_device_id(from._internal_pivot_device_id());
  }
  if (!from._internal_pivot_label_id().empty()) {
    _this->_internal_set_pivot_label_id(from._internal_pivot_label_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.edate_ != nullptr);
      if (_this->_impl_.edate_ == nullptr) {
        _this->_impl_.edate_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.edate_);
      } else {
        _this->_impl_.edate_->MergeFrom(*from._impl_.edate_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.cdate_ != nullptr);
      if (_this->_impl_.cdate_ == nullptr) {
        _this->_impl_.cdate_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.cdate_);
      } else {
        _this->_impl_.cdate_->MergeFrom(*from._impl_.cdate_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Label::CopyFrom(const Label& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.Label)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Label::InternalSwap(Label* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.company_id_, &other->_impl_.company_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.color_, &other->_impl_.color_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_, &other->_impl_.order_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pivot_device_id_, &other->_impl_.pivot_device_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pivot_label_id_, &other->_impl_.pivot_label_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Label, _impl_.cdate_)
      + sizeof(Label::_impl_.cdate_)
      - PROTOBUF_FIELD_OFFSET(Label, _impl_.edate_)>(
          reinterpret_cast<char*>(&_impl_.edate_),
          reinterpret_cast<char*>(&other->_impl_.edate_));
}

::google::protobuf::Metadata Label::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Interface::_Internal {
 public:
};

Interface::Interface(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.Interface)
}
inline PROTOBUF_NDEBUG_INLINE Interface::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::Interface& from_msg)
      : interface_description_(arena, from.interface_description_),
        initial_snmp_speed_(arena, from.initial_snmp_speed_),
        device_id_(arena, from.device_id_),
        snmp_speed_(arena, from.snmp_speed_),
        snmp_alias_(arena, from.snmp_alias_),
        snmp_id_(arena, from.snmp_id_),
        connectivity_type_(arena, from.connectivity_type_),
        network_boundary_(arena, from.network_boundary_),
        provider_(arena, from.provider_),
        _cached_size_{0} {}

Interface::Interface(
    ::google::protobuf::Arena* arena,
    const Interface& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Interface* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.Interface)
}
inline PROTOBUF_NDEBUG_INLINE Interface::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : interface_description_(arena),
        initial_snmp_speed_(arena),
        device_id_(arena),
        snmp_speed_(arena),
        snmp_alias_(arena),
        snmp_id_(arena),
        connectivity_type_(arena),
        network_boundary_(arena),
        provider_(arena),
        _cached_size_{0} {}

inline void Interface::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Interface::~Interface() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.Interface)
  SharedDtor(*this);
}
inline void Interface::SharedDtor(MessageLite& self) {
  Interface& this_ = static_cast<Interface&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.interface_description_.Destroy();
  this_._impl_.initial_snmp_speed_.Destroy();
  this_._impl_.device_id_.Destroy();
  this_._impl_.snmp_speed_.Destroy();
  this_._impl_.snmp_alias_.Destroy();
  this_._impl_.snmp_id_.Destroy();
  this_._impl_.connectivity_type_.Destroy();
  this_._impl_.network_boundary_.Destroy();
  this_._impl_.provider_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Interface::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Interface(arena);
}
constexpr auto Interface::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Interface),
                                            alignof(Interface));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Interface::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Interface_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Interface::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Interface>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Interface::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Interface>(), &Interface::ByteSizeLong,
            &Interface::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Interface, _impl_._cached_size_),
        false,
    },
    &Interface::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Interface::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 169, 2> Interface::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::Interface>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string interface_description = 1 [json_name = "interfaceDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.interface_description_)}},
    // string initial_snmp_speed = 2 [json_name = "initialSnmpSpeed", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.initial_snmp_speed_)}},
    // string device_id = 3 [json_name = "deviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.device_id_)}},
    // string snmp_speed = 4 [json_name = "snmpSpeed", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.snmp_speed_)}},
    // string snmp_alias = 5 [json_name = "snmpAlias", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.snmp_alias_)}},
    // string snmp_id = 6 [json_name = "snmpId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.snmp_id_)}},
    // string connectivity_type = 7 [json_name = "connectivityType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.connectivity_type_)}},
    // string network_boundary = 8 [json_name = "networkBoundary", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.network_boundary_)}},
    // string provider = 9 [json_name = "provider", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Interface, _impl_.provider_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string interface_description = 1 [json_name = "interfaceDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.interface_description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string initial_snmp_speed = 2 [json_name = "initialSnmpSpeed", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.initial_snmp_speed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_id = 3 [json_name = "deviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.device_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string snmp_speed = 4 [json_name = "snmpSpeed", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.snmp_speed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string snmp_alias = 5 [json_name = "snmpAlias", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.snmp_alias_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string snmp_id = 6 [json_name = "snmpId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.snmp_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string connectivity_type = 7 [json_name = "connectivityType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.connectivity_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string network_boundary = 8 [json_name = "networkBoundary", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.network_boundary_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string provider = 9 [json_name = "provider", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(Interface, _impl_.provider_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\25\22\11\12\12\7\21\20\10\0\0\0\0\0\0"
    "kentik.device.v202504beta2.Interface"
    "interface_description"
    "initial_snmp_speed"
    "device_id"
    "snmp_speed"
    "snmp_alias"
    "snmp_id"
    "connectivity_type"
    "network_boundary"
    "provider"
  }},
};

PROTOBUF_NOINLINE void Interface::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.Interface)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.interface_description_.ClearToEmpty();
  _impl_.initial_snmp_speed_.ClearToEmpty();
  _impl_.device_id_.ClearToEmpty();
  _impl_.snmp_speed_.ClearToEmpty();
  _impl_.snmp_alias_.ClearToEmpty();
  _impl_.snmp_id_.ClearToEmpty();
  _impl_.connectivity_type_.ClearToEmpty();
  _impl_.network_boundary_.ClearToEmpty();
  _impl_.provider_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Interface::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Interface& this_ = static_cast<const Interface&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Interface::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Interface& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.Interface)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string interface_description = 1 [json_name = "interfaceDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_interface_description().empty()) {
            const std::string& _s = this_._internal_interface_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Interface.interface_description");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string initial_snmp_speed = 2 [json_name = "initialSnmpSpeed", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_initial_snmp_speed().empty()) {
            const std::string& _s = this_._internal_initial_snmp_speed();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Interface.initial_snmp_speed");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string device_id = 3 [json_name = "deviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_id().empty()) {
            const std::string& _s = this_._internal_device_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Interface.device_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string snmp_speed = 4 [json_name = "snmpSpeed", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_snmp_speed().empty()) {
            const std::string& _s = this_._internal_snmp_speed();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Interface.snmp_speed");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string snmp_alias = 5 [json_name = "snmpAlias", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_snmp_alias().empty()) {
            const std::string& _s = this_._internal_snmp_alias();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Interface.snmp_alias");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string snmp_id = 6 [json_name = "snmpId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_snmp_id().empty()) {
            const std::string& _s = this_._internal_snmp_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Interface.snmp_id");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string connectivity_type = 7 [json_name = "connectivityType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_connectivity_type().empty()) {
            const std::string& _s = this_._internal_connectivity_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Interface.connectivity_type");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string network_boundary = 8 [json_name = "networkBoundary", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_network_boundary().empty()) {
            const std::string& _s = this_._internal_network_boundary();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Interface.network_boundary");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // string provider = 9 [json_name = "provider", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_provider().empty()) {
            const std::string& _s = this_._internal_provider();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.Interface.provider");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.Interface)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Interface::ByteSizeLong(const MessageLite& base) {
          const Interface& this_ = static_cast<const Interface&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Interface::ByteSizeLong() const {
          const Interface& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.Interface)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string interface_description = 1 [json_name = "interfaceDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_interface_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_interface_description());
            }
            // string initial_snmp_speed = 2 [json_name = "initialSnmpSpeed", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_initial_snmp_speed().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_initial_snmp_speed());
            }
            // string device_id = 3 [json_name = "deviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_id());
            }
            // string snmp_speed = 4 [json_name = "snmpSpeed", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_snmp_speed().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_snmp_speed());
            }
            // string snmp_alias = 5 [json_name = "snmpAlias", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_snmp_alias().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_snmp_alias());
            }
            // string snmp_id = 6 [json_name = "snmpId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_snmp_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_snmp_id());
            }
            // string connectivity_type = 7 [json_name = "connectivityType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_connectivity_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_connectivity_type());
            }
            // string network_boundary = 8 [json_name = "networkBoundary", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_network_boundary().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_network_boundary());
            }
            // string provider = 9 [json_name = "provider", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_provider().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_provider());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Interface::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Interface*>(&to_msg);
  auto& from = static_cast<const Interface&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.Interface)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_interface_description().empty()) {
    _this->_internal_set_interface_description(from._internal_interface_description());
  }
  if (!from._internal_initial_snmp_speed().empty()) {
    _this->_internal_set_initial_snmp_speed(from._internal_initial_snmp_speed());
  }
  if (!from._internal_device_id().empty()) {
    _this->_internal_set_device_id(from._internal_device_id());
  }
  if (!from._internal_snmp_speed().empty()) {
    _this->_internal_set_snmp_speed(from._internal_snmp_speed());
  }
  if (!from._internal_snmp_alias().empty()) {
    _this->_internal_set_snmp_alias(from._internal_snmp_alias());
  }
  if (!from._internal_snmp_id().empty()) {
    _this->_internal_set_snmp_id(from._internal_snmp_id());
  }
  if (!from._internal_connectivity_type().empty()) {
    _this->_internal_set_connectivity_type(from._internal_connectivity_type());
  }
  if (!from._internal_network_boundary().empty()) {
    _this->_internal_set_network_boundary(from._internal_network_boundary());
  }
  if (!from._internal_provider().empty()) {
    _this->_internal_set_provider(from._internal_provider());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Interface::CopyFrom(const Interface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.Interface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Interface::InternalSwap(Interface* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.interface_description_, &other->_impl_.interface_description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.initial_snmp_speed_, &other->_impl_.initial_snmp_speed_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.snmp_speed_, &other->_impl_.snmp_speed_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.snmp_alias_, &other->_impl_.snmp_alias_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.snmp_id_, &other->_impl_.snmp_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.connectivity_type_, &other->_impl_.connectivity_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.network_boundary_, &other->_impl_.network_boundary_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.provider_, &other->_impl_.provider_, arena);
}

::google::protobuf::Metadata Interface::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CustomColumnData::_Internal {
 public:
};

CustomColumnData::CustomColumnData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.CustomColumnData)
}
inline PROTOBUF_NDEBUG_INLINE CustomColumnData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::CustomColumnData& from_msg)
      : device_id_(arena, from.device_id_),
        field_id_(arena, from.field_id_),
        col_name_(arena, from.col_name_),
        description_(arena, from.description_),
        col_type_(arena, from.col_type_),
        device_type_(arena, from.device_type_),
        _cached_size_{0} {}

CustomColumnData::CustomColumnData(
    ::google::protobuf::Arena* arena,
    const CustomColumnData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CustomColumnData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.CustomColumnData)
}
inline PROTOBUF_NDEBUG_INLINE CustomColumnData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_id_(arena),
        field_id_(arena),
        col_name_(arena),
        description_(arena),
        col_type_(arena),
        device_type_(arena),
        _cached_size_{0} {}

inline void CustomColumnData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CustomColumnData::~CustomColumnData() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.CustomColumnData)
  SharedDtor(*this);
}
inline void CustomColumnData::SharedDtor(MessageLite& self) {
  CustomColumnData& this_ = static_cast<CustomColumnData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  this_._impl_.field_id_.Destroy();
  this_._impl_.col_name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.col_type_.Destroy();
  this_._impl_.device_type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CustomColumnData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CustomColumnData(arena);
}
constexpr auto CustomColumnData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CustomColumnData),
                                            alignof(CustomColumnData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CustomColumnData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CustomColumnData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CustomColumnData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CustomColumnData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CustomColumnData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CustomColumnData>(), &CustomColumnData::ByteSizeLong,
            &CustomColumnData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CustomColumnData, _impl_._cached_size_),
        false,
    },
    &CustomColumnData::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CustomColumnData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 107, 2> CustomColumnData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::CustomColumnData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string device_id = 1 [json_name = "deviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CustomColumnData, _impl_.device_id_)}},
    // string field_id = 2 [json_name = "fieldId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CustomColumnData, _impl_.field_id_)}},
    // string col_name = 3 [json_name = "colName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CustomColumnData, _impl_.col_name_)}},
    // string description = 4 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CustomColumnData, _impl_.description_)}},
    // string col_type = 5 [json_name = "colType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CustomColumnData, _impl_.col_type_)}},
    // string device_type = 6 [json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(CustomColumnData, _impl_.device_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1 [json_name = "deviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(CustomColumnData, _impl_.device_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string field_id = 2 [json_name = "fieldId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(CustomColumnData, _impl_.field_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string col_name = 3 [json_name = "colName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(CustomColumnData, _impl_.col_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 4 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(CustomColumnData, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string col_type = 5 [json_name = "colType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(CustomColumnData, _impl_.col_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_type = 6 [json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(CustomColumnData, _impl_.device_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\11\10\10\13\10\13\0"
    "kentik.device.v202504beta2.CustomColumnData"
    "device_id"
    "field_id"
    "col_name"
    "description"
    "col_type"
    "device_type"
  }},
};

PROTOBUF_NOINLINE void CustomColumnData::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.CustomColumnData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_id_.ClearToEmpty();
  _impl_.field_id_.ClearToEmpty();
  _impl_.col_name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.col_type_.ClearToEmpty();
  _impl_.device_type_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CustomColumnData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CustomColumnData& this_ = static_cast<const CustomColumnData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CustomColumnData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CustomColumnData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.CustomColumnData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string device_id = 1 [json_name = "deviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_id().empty()) {
            const std::string& _s = this_._internal_device_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.CustomColumnData.device_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string field_id = 2 [json_name = "fieldId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_field_id().empty()) {
            const std::string& _s = this_._internal_field_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.CustomColumnData.field_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string col_name = 3 [json_name = "colName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_col_name().empty()) {
            const std::string& _s = this_._internal_col_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.CustomColumnData.col_name");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string description = 4 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.CustomColumnData.description");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string col_type = 5 [json_name = "colType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_col_type().empty()) {
            const std::string& _s = this_._internal_col_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.CustomColumnData.col_type");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string device_type = 6 [json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_type().empty()) {
            const std::string& _s = this_._internal_device_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.CustomColumnData.device_type");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.CustomColumnData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CustomColumnData::ByteSizeLong(const MessageLite& base) {
          const CustomColumnData& this_ = static_cast<const CustomColumnData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CustomColumnData::ByteSizeLong() const {
          const CustomColumnData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.CustomColumnData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string device_id = 1 [json_name = "deviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_id());
            }
            // string field_id = 2 [json_name = "fieldId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_field_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_field_id());
            }
            // string col_name = 3 [json_name = "colName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_col_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_col_name());
            }
            // string description = 4 [json_name = "description", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // string col_type = 5 [json_name = "colType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_col_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_col_type());
            }
            // string device_type = 6 [json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CustomColumnData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CustomColumnData*>(&to_msg);
  auto& from = static_cast<const CustomColumnData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.CustomColumnData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_device_id().empty()) {
    _this->_internal_set_device_id(from._internal_device_id());
  }
  if (!from._internal_field_id().empty()) {
    _this->_internal_set_field_id(from._internal_field_id());
  }
  if (!from._internal_col_name().empty()) {
    _this->_internal_set_col_name(from._internal_col_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_col_type().empty()) {
    _this->_internal_set_col_type(from._internal_col_type());
  }
  if (!from._internal_device_type().empty()) {
    _this->_internal_set_device_type(from._internal_device_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CustomColumnData::CopyFrom(const CustomColumnData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.CustomColumnData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CustomColumnData::InternalSwap(CustomColumnData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.field_id_, &other->_impl_.field_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.col_name_, &other->_impl_.col_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.col_type_, &other->_impl_.col_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_type_, &other->_impl_.device_type_, arena);
}

::google::protobuf::Metadata CustomColumnData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GnmiV1Conf::_Internal {
 public:
};

GnmiV1Conf::GnmiV1Conf(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.GnmiV1Conf)
}
inline PROTOBUF_NDEBUG_INLINE GnmiV1Conf::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::GnmiV1Conf& from_msg)
      : dialout_server_(arena, from.dialout_server_),
        _cached_size_{0} {}

GnmiV1Conf::GnmiV1Conf(
    ::google::protobuf::Arena* arena,
    const GnmiV1Conf& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GnmiV1Conf* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.GnmiV1Conf)
}
inline PROTOBUF_NDEBUG_INLINE GnmiV1Conf::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : dialout_server_(arena),
        _cached_size_{0} {}

inline void GnmiV1Conf::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GnmiV1Conf::~GnmiV1Conf() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.GnmiV1Conf)
  SharedDtor(*this);
}
inline void GnmiV1Conf::SharedDtor(MessageLite& self) {
  GnmiV1Conf& this_ = static_cast<GnmiV1Conf&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.dialout_server_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GnmiV1Conf::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GnmiV1Conf(arena);
}
constexpr auto GnmiV1Conf::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GnmiV1Conf),
                                            alignof(GnmiV1Conf));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GnmiV1Conf::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GnmiV1Conf_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GnmiV1Conf::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GnmiV1Conf>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GnmiV1Conf::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GnmiV1Conf>(), &GnmiV1Conf::ByteSizeLong,
            &GnmiV1Conf::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GnmiV1Conf, _impl_._cached_size_),
        false,
    },
    &GnmiV1Conf::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GnmiV1Conf::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 60, 2> GnmiV1Conf::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::GnmiV1Conf>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string dialout_server = 1 [json_name = "dialoutServer", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GnmiV1Conf, _impl_.dialout_server_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string dialout_server = 1 [json_name = "dialoutServer", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(GnmiV1Conf, _impl_.dialout_server_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\16\0\0\0\0\0\0"
    "kentik.device.v202504beta2.GnmiV1Conf"
    "dialout_server"
  }},
};

PROTOBUF_NOINLINE void GnmiV1Conf::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.GnmiV1Conf)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dialout_server_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GnmiV1Conf::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GnmiV1Conf& this_ = static_cast<const GnmiV1Conf&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GnmiV1Conf::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GnmiV1Conf& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.GnmiV1Conf)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string dialout_server = 1 [json_name = "dialoutServer", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_dialout_server().empty()) {
            const std::string& _s = this_._internal_dialout_server();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.GnmiV1Conf.dialout_server");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.GnmiV1Conf)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GnmiV1Conf::ByteSizeLong(const MessageLite& base) {
          const GnmiV1Conf& this_ = static_cast<const GnmiV1Conf&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GnmiV1Conf::ByteSizeLong() const {
          const GnmiV1Conf& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.GnmiV1Conf)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string dialout_server = 1 [json_name = "dialoutServer", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_dialout_server().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_dialout_server());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GnmiV1Conf::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GnmiV1Conf*>(&to_msg);
  auto& from = static_cast<const GnmiV1Conf&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.GnmiV1Conf)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_dialout_server().empty()) {
    _this->_internal_set_dialout_server(from._internal_dialout_server());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GnmiV1Conf::CopyFrom(const GnmiV1Conf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.GnmiV1Conf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GnmiV1Conf::InternalSwap(GnmiV1Conf* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dialout_server_, &other->_impl_.dialout_server_, arena);
}

::google::protobuf::Metadata GnmiV1Conf::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeviceDetailed::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DeviceDetailed>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_._has_bits_);
};

void DeviceDetailed::clear_created_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_date_ != nullptr) _impl_.created_date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void DeviceDetailed::clear_updated_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updated_date_ != nullptr) _impl_.updated_date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
DeviceDetailed::DeviceDetailed(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.DeviceDetailed)
}
inline PROTOBUF_NDEBUG_INLINE DeviceDetailed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::DeviceDetailed& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        labels_{visibility, arena, from.labels_},
        all_interfaces_{visibility, arena, from.all_interfaces_},
        sending_ips_{visibility, arena, from.sending_ips_},
        custom_column_data_{visibility, arena, from.custom_column_data_},
        id_(arena, from.id_),
        company_id_(arena, from.company_id_),
        device_name_(arena, from.device_name_),
        device_alias_(arena, from.device_alias_),
        device_type_(arena, from.device_type_),
        device_description_(arena, from.device_description_),
        device_flow_type_(arena, from.device_flow_type_),
        device_sample_rate_(arena, from.device_sample_rate_),
        device_snmp_ip_(arena, from.device_snmp_ip_),
        device_snmp_community_(arena, from.device_snmp_community_),
        device_bgp_type_(arena, from.device_bgp_type_),
        device_bgp_neighbor_ip_(arena, from.device_bgp_neighbor_ip_),
        device_bgp_neighbor_ip6_(arena, from.device_bgp_neighbor_ip6_),
        device_bgp_neighbor_asn_(arena, from.device_bgp_neighbor_asn_),
        device_bgp_password_(arena, from.device_bgp_password_),
        bgp_lookup_strategy_(arena, from.bgp_lookup_strategy_),
        device_status_(arena, from.device_status_),
        use_bgp_device_id_(arena, from.use_bgp_device_id_),
        custom_columns_(arena, from.custom_columns_),
        device_chf_client_port_(arena, from.device_chf_client_port_),
        device_chf_client_protocol_(arena, from.device_chf_client_protocol_),
        device_chf_interface_(arena, from.device_chf_interface_),
        device_agent_type_(arena, from.device_agent_type_),
        device_proxy_bgp_(arena, from.device_proxy_bgp_),
        device_proxy_bgp6_(arena, from.device_proxy_bgp6_),
        cdn_attr_(arena, from.cdn_attr_),
        bgp_peer_ip4_(arena, from.bgp_peer_ip4_),
        bgp_peer_ip6_(arena, from.bgp_peer_ip6_),
        device_subtype_(arena, from.device_subtype_),
        device_vendor_type_(arena, from.device_vendor_type_),
        device_model_type_(arena, from.device_model_type_),
        cloud_export_id_(arena, from.cloud_export_id_),
        device_kproxy_(arena, from.device_kproxy_),
        snmp_enabled_(arena, from.snmp_enabled_),
        snmp_disabled_reason_(arena, from.snmp_disabled_reason_),
        snmp_disabled_reason_other_(arena, from.snmp_disabled_reason_other_),
        bgp_disabled_reason_(arena, from.bgp_disabled_reason_),
        bgp_disabled_reason_other_(arena, from.bgp_disabled_reason_other_),
        device_manufacturer_(arena, from.device_manufacturer_),
        device_alert_(arena, from.device_alert_),
        role_(arena, from.role_),
        device_bgp_credential_name_(arena, from.device_bgp_credential_name_),
        flow_snmp_credential_name_(arena, from.flow_snmp_credential_name_) {}

DeviceDetailed::DeviceDetailed(
    ::google::protobuf::Arena* arena,
    const DeviceDetailed& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeviceDetailed* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.site_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::Site>(
                              arena, *from._impl_.site_)
                        : nullptr;
  _impl_.plan_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::Plan>(
                              arena, *from._impl_.plan_)
                        : nullptr;
  _impl_.created_date_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.created_date_)
                        : nullptr;
  _impl_.updated_date_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.updated_date_)
                        : nullptr;
  _impl_.device_snmp_v3_conf_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceSnmpV3Conf>(
                              arena, *from._impl_.device_snmp_v3_conf_)
                        : nullptr;
  _impl_.device_gnmi_v1_conf_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::GnmiV1Conf>(
                              arena, *from._impl_.device_gnmi_v1_conf_)
                        : nullptr;
  _impl_.nms_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceNmsConfig>(
                              arena, *from._impl_.nms_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, minimize_snmp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, minimize_snmp_),
           offsetof(Impl_, monitoring_template_id_) -
               offsetof(Impl_, minimize_snmp_) +
               sizeof(Impl_::monitoring_template_id_));

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.DeviceDetailed)
}
inline PROTOBUF_NDEBUG_INLINE DeviceDetailed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        labels_{visibility, arena},
        all_interfaces_{visibility, arena},
        sending_ips_{visibility, arena},
        custom_column_data_{visibility, arena},
        id_(arena),
        company_id_(arena),
        device_name_(arena),
        device_alias_(arena),
        device_type_(arena),
        device_description_(arena),
        device_flow_type_(arena),
        device_sample_rate_(arena),
        device_snmp_ip_(arena),
        device_snmp_community_(arena),
        device_bgp_type_(arena),
        device_bgp_neighbor_ip_(arena),
        device_bgp_neighbor_ip6_(arena),
        device_bgp_neighbor_asn_(arena),
        device_bgp_password_(arena),
        bgp_lookup_strategy_(arena),
        device_status_(arena),
        use_bgp_device_id_(arena),
        custom_columns_(arena),
        device_chf_client_port_(arena),
        device_chf_client_protocol_(arena),
        device_chf_interface_(arena),
        device_agent_type_(arena),
        device_proxy_bgp_(arena),
        device_proxy_bgp6_(arena),
        cdn_attr_(arena),
        bgp_peer_ip4_(arena),
        bgp_peer_ip6_(arena),
        device_subtype_(arena),
        device_vendor_type_(arena),
        device_model_type_(arena),
        cloud_export_id_(arena),
        device_kproxy_(arena),
        snmp_enabled_(arena),
        snmp_disabled_reason_(arena),
        snmp_disabled_reason_other_(arena),
        bgp_disabled_reason_(arena),
        bgp_disabled_reason_other_(arena),
        device_manufacturer_(arena),
        device_alert_(arena),
        role_(arena),
        device_bgp_credential_name_(arena),
        flow_snmp_credential_name_(arena) {}

inline void DeviceDetailed::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, site_),
           0,
           offsetof(Impl_, monitoring_template_id_) -
               offsetof(Impl_, site_) +
               sizeof(Impl_::monitoring_template_id_));
}
DeviceDetailed::~DeviceDetailed() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.DeviceDetailed)
  SharedDtor(*this);
}
inline void DeviceDetailed::SharedDtor(MessageLite& self) {
  DeviceDetailed& this_ = static_cast<DeviceDetailed&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.company_id_.Destroy();
  this_._impl_.device_name_.Destroy();
  this_._impl_.device_alias_.Destroy();
  this_._impl_.device_type_.Destroy();
  this_._impl_.device_description_.Destroy();
  this_._impl_.device_flow_type_.Destroy();
  this_._impl_.device_sample_rate_.Destroy();
  this_._impl_.device_snmp_ip_.Destroy();
  this_._impl_.device_snmp_community_.Destroy();
  this_._impl_.device_bgp_type_.Destroy();
  this_._impl_.device_bgp_neighbor_ip_.Destroy();
  this_._impl_.device_bgp_neighbor_ip6_.Destroy();
  this_._impl_.device_bgp_neighbor_asn_.Destroy();
  this_._impl_.device_bgp_password_.Destroy();
  this_._impl_.bgp_lookup_strategy_.Destroy();
  this_._impl_.device_status_.Destroy();
  this_._impl_.use_bgp_device_id_.Destroy();
  this_._impl_.custom_columns_.Destroy();
  this_._impl_.device_chf_client_port_.Destroy();
  this_._impl_.device_chf_client_protocol_.Destroy();
  this_._impl_.device_chf_interface_.Destroy();
  this_._impl_.device_agent_type_.Destroy();
  this_._impl_.device_proxy_bgp_.Destroy();
  this_._impl_.device_proxy_bgp6_.Destroy();
  this_._impl_.cdn_attr_.Destroy();
  this_._impl_.bgp_peer_ip4_.Destroy();
  this_._impl_.bgp_peer_ip6_.Destroy();
  this_._impl_.device_subtype_.Destroy();
  this_._impl_.device_vendor_type_.Destroy();
  this_._impl_.device_model_type_.Destroy();
  this_._impl_.cloud_export_id_.Destroy();
  this_._impl_.device_kproxy_.Destroy();
  this_._impl_.snmp_enabled_.Destroy();
  this_._impl_.snmp_disabled_reason_.Destroy();
  this_._impl_.snmp_disabled_reason_other_.Destroy();
  this_._impl_.bgp_disabled_reason_.Destroy();
  this_._impl_.bgp_disabled_reason_other_.Destroy();
  this_._impl_.device_manufacturer_.Destroy();
  this_._impl_.device_alert_.Destroy();
  this_._impl_.role_.Destroy();
  this_._impl_.device_bgp_credential_name_.Destroy();
  this_._impl_.flow_snmp_credential_name_.Destroy();
  delete this_._impl_.site_;
  delete this_._impl_.plan_;
  delete this_._impl_.created_date_;
  delete this_._impl_.updated_date_;
  delete this_._impl_.device_snmp_v3_conf_;
  delete this_._impl_.device_gnmi_v1_conf_;
  delete this_._impl_.nms_;
  this_._impl_.~Impl_();
}

inline void* DeviceDetailed::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeviceDetailed(arena);
}
constexpr auto DeviceDetailed::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.labels_) +
          decltype(DeviceDetailed::_impl_.labels_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.all_interfaces_) +
          decltype(DeviceDetailed::_impl_.all_interfaces_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.sending_ips_) +
          decltype(DeviceDetailed::_impl_.sending_ips_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.custom_column_data_) +
          decltype(DeviceDetailed::_impl_.custom_column_data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(DeviceDetailed), alignof(DeviceDetailed), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DeviceDetailed::PlacementNew_,
                                 sizeof(DeviceDetailed),
                                 alignof(DeviceDetailed));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeviceDetailed::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeviceDetailed_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeviceDetailed::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeviceDetailed>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeviceDetailed::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeviceDetailed>(), &DeviceDetailed::ByteSizeLong,
            &DeviceDetailed::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_._cached_size_),
        false,
    },
    &DeviceDetailed::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeviceDetailed::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 64, 10, 838, 9> DeviceDetailed::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_._has_bits_),
    0, // no _extensions_
    64, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    0,  // skipmap
    offsetof(decltype(_table_), field_entries),
    64,  // num_field_entries
    10,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceDetailed>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.id_)}},
    // string company_id = 2 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.company_id_)}},
    // string device_name = 3 [json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_name_)}},
    // string device_alias = 4 [json_name = "deviceAlias", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_alias_)}},
    // string device_type = 5 [json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_type_)}},
    // string device_description = 6 [json_name = "deviceDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_description_)}},
    // .kentik.device.v202504beta2.Site site = 7 [json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {58, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.site_)}},
    // .kentik.device.v202504beta2.Plan plan = 8 [json_name = "plan", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {66, 1, 1, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.plan_)}},
    // repeated .kentik.device.v202504beta2.Label labels = 9 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 2, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.labels_)}},
    // repeated .kentik.device.v202504beta2.Interface all_interfaces = 10 [json_name = "allInterfaces", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 3, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.all_interfaces_)}},
    // string device_flow_type = 11 [json_name = "deviceFlowType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_flow_type_)}},
    // string device_sample_rate = 12 [json_name = "deviceSampleRate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_sample_rate_)}},
    // repeated string sending_ips = 13 [json_name = "sendingIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.sending_ips_)}},
    // string device_snmp_ip = 14 [json_name = "deviceSnmpIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_snmp_ip_)}},
    // string device_snmp_community = 15 [json_name = "deviceSnmpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_snmp_community_)}},
    // optional bool minimize_snmp = 16 [json_name = "minimizeSnmp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastV8S2,
     {384, 7, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.minimize_snmp_)}},
    // string device_bgp_type = 17 [json_name = "deviceBgpType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_bgp_type_)}},
    // string device_bgp_neighbor_ip = 18 [json_name = "deviceBgpNeighborIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {402, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_bgp_neighbor_ip_)}},
    // string device_bgp_neighbor_ip6 = 19 [json_name = "deviceBgpNeighborIp6", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {410, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_bgp_neighbor_ip6_)}},
    // string device_bgp_neighbor_asn = 20 [json_name = "deviceBgpNeighborAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {418, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_bgp_neighbor_asn_)}},
    // bool device_bgp_flowspec = 21 [json_name = "deviceBgpFlowspec", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastV8S2,
     {424, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_bgp_flowspec_)}},
    // string device_bgp_password = 22 [json_name = "deviceBgpPassword", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {434, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_bgp_password_)}},
    // bool device_bgp_label_unicast = 23 [json_name = "deviceBgpLabelUnicast", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastV8S2,
     {440, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_bgp_label_unicast_)}},
    // string bgp_lookup_strategy = 24 [json_name = "bgpLookupStrategy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {450, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.bgp_lookup_strategy_)}},
    // string device_status = 25 [json_name = "deviceStatus", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {458, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_status_)}},
    // string use_bgp_device_id = 26 [json_name = "useBgpDeviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {466, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.use_bgp_device_id_)}},
    // string custom_columns = 27 [json_name = "customColumns", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {474, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.custom_columns_)}},
    // repeated .kentik.device.v202504beta2.CustomColumnData custom_column_data = 28 [json_name = "customColumnData", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR2,
     {482, 63, 4, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.custom_column_data_)}},
    // string device_chf_client_port = 29 [json_name = "deviceChfClientPort", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {490, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_chf_client_port_)}},
    // string device_chf_client_protocol = 30 [json_name = "deviceChfClientProtocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {498, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_chf_client_protocol_)}},
    // string device_chf_interface = 31 [json_name = "deviceChfInterface", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS2,
     {506, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_chf_interface_)}},
  }}, {{
    33, 0, 2,
    0, 32, 0, 48,
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string company_id = 2 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.company_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_name = 3 [json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_alias = 4 [json_name = "deviceAlias", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_alias_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_type = 5 [json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_description = 6 [json_name = "deviceDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .kentik.device.v202504beta2.Site site = 7 [json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.site_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .kentik.device.v202504beta2.Plan plan = 8 [json_name = "plan", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.plan_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .kentik.device.v202504beta2.Label labels = 9 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.labels_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .kentik.device.v202504beta2.Interface all_interfaces = 10 [json_name = "allInterfaces", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.all_interfaces_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string device_flow_type = 11 [json_name = "deviceFlowType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_flow_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_sample_rate = 12 [json_name = "deviceSampleRate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_sample_rate_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string sending_ips = 13 [json_name = "sendingIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.sending_ips_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string device_snmp_ip = 14 [json_name = "deviceSnmpIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_snmp_ip_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_snmp_community = 15 [json_name = "deviceSnmpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_snmp_community_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional bool minimize_snmp = 16 [json_name = "minimizeSnmp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.minimize_snmp_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string device_bgp_type = 17 [json_name = "deviceBgpType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_bgp_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_bgp_neighbor_ip = 18 [json_name = "deviceBgpNeighborIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_bgp_neighbor_ip_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_bgp_neighbor_ip6 = 19 [json_name = "deviceBgpNeighborIp6", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_bgp_neighbor_ip6_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_bgp_neighbor_asn = 20 [json_name = "deviceBgpNeighborAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_bgp_neighbor_asn_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool device_bgp_flowspec = 21 [json_name = "deviceBgpFlowspec", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_bgp_flowspec_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string device_bgp_password = 22 [json_name = "deviceBgpPassword", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_bgp_password_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool device_bgp_label_unicast = 23 [json_name = "deviceBgpLabelUnicast", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_bgp_label_unicast_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string bgp_lookup_strategy = 24 [json_name = "bgpLookupStrategy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.bgp_lookup_strategy_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_status = 25 [json_name = "deviceStatus", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string use_bgp_device_id = 26 [json_name = "useBgpDeviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.use_bgp_device_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string custom_columns = 27 [json_name = "customColumns", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.custom_columns_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .kentik.device.v202504beta2.CustomColumnData custom_column_data = 28 [json_name = "customColumnData", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.custom_column_data_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string device_chf_client_port = 29 [json_name = "deviceChfClientPort", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_chf_client_port_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_chf_client_protocol = 30 [json_name = "deviceChfClientProtocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_chf_client_protocol_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_chf_interface = 31 [json_name = "deviceChfInterface", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_chf_interface_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_agent_type = 32 [json_name = "deviceAgentType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_agent_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 max_flow_rate = 33 [json_name = "maxFlowRate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.max_flow_rate_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 max_big_flow_rate = 34 [json_name = "maxBigFlowRate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.max_big_flow_rate_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string device_proxy_bgp = 35 [json_name = "deviceProxyBgp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_proxy_bgp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_proxy_bgp6 = 36 [json_name = "deviceProxyBgp6", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_proxy_bgp6_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp created_date = 37 [json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.created_date_), _Internal::kHasBitsOffset + 2, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp updated_date = 38 [json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.updated_date_), _Internal::kHasBitsOffset + 3, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool device_snmp_v3_conf_enabled = 39 [json_name = "deviceSnmpV3ConfEnabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_snmp_v3_conf_enabled_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .kentik.device.v202504beta2.DeviceSnmpV3Conf device_snmp_v3_conf = 40 [json_name = "deviceSnmpV3Conf", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_snmp_v3_conf_), _Internal::kHasBitsOffset + 4, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string cdn_attr = 41 [json_name = "cdnAttr", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.cdn_attr_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string bgp_peer_ip4 = 42 [json_name = "bgpPeerIp4", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.bgp_peer_ip4_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string bgp_peer_ip6 = 43 [json_name = "bgpPeerIp6", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.bgp_peer_ip6_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_subtype = 44 [json_name = "deviceSubtype", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_subtype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_vendor_type = 45 [json_name = "deviceVendorType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_vendor_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_model_type = 46 [json_name = "deviceModelType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_model_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string cloud_export_id = 47 [json_name = "cloudExportId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.cloud_export_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_kproxy = 48 [json_name = "deviceKproxy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_kproxy_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string snmp_enabled = 49 [json_name = "snmpEnabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.snmp_enabled_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string snmp_disabled_reason = 50 [json_name = "snmpDisabledReason", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.snmp_disabled_reason_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string snmp_disabled_reason_other = 51 [json_name = "snmpDisabledReasonOther", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.snmp_disabled_reason_other_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string bgp_disabled_reason = 52 [json_name = "bgpDisabledReason", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.bgp_disabled_reason_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string bgp_disabled_reason_other = 53 [json_name = "bgpDisabledReasonOther", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.bgp_disabled_reason_other_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_manufacturer = 54 [json_name = "deviceManufacturer", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_manufacturer_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_alert = 55 [json_name = "deviceAlert", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_alert_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string role = 56 [json_name = "role", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.role_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .kentik.device.v202504beta2.GnmiV1Conf device_gnmi_v1_conf = 57 [json_name = "deviceGnmiV1Conf", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_gnmi_v1_conf_), _Internal::kHasBitsOffset + 5, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool use_asn_from_flow = 58 [json_name = "useAsnFromFlow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.use_asn_from_flow_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint32 max_interface = 59 [json_name = "maxInterface", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.max_interface_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 max_interface_check = 60 [json_name = "maxInterfaceCheck", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.max_interface_check_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .kentik.device.v202504beta2.DeviceNmsConfig nms = 61 [json_name = "nms", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.nms_), _Internal::kHasBitsOffset + 6, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string device_bgp_credential_name = 62 [json_name = "deviceBgpCredentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.device_bgp_credential_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string flow_snmp_credential_name = 63 [json_name = "flowSnmpCredentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.flow_snmp_credential_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 monitoring_template_id = 64 [json_name = "monitoringTemplateId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.monitoring_template_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::Site>()},
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::Plan>()},
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::Label>()},
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::Interface>()},
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::CustomColumnData>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceSnmpV3Conf>()},
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::GnmiV1Conf>()},
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceNmsConfig>()},
  }}, {{
    "\51\2\12\13\14\13\22\0\0\0\0\20\22\13\16\25\0\17\26\27\27\0\23\0\23\15\21\16\0\26\32\24\21\0\0\20\21\0\0\0\0\10\14\14\16\22\21\17\15\14\24\32\23\31\23\14\4\0\0\0\0\0\32\31\0\0\0\0\0\0\0\0"
    "kentik.device.v202504beta2.DeviceDetailed"
    "id"
    "company_id"
    "device_name"
    "device_alias"
    "device_type"
    "device_description"
    "device_flow_type"
    "device_sample_rate"
    "sending_ips"
    "device_snmp_ip"
    "device_snmp_community"
    "device_bgp_type"
    "device_bgp_neighbor_ip"
    "device_bgp_neighbor_ip6"
    "device_bgp_neighbor_asn"
    "device_bgp_password"
    "bgp_lookup_strategy"
    "device_status"
    "use_bgp_device_id"
    "custom_columns"
    "device_chf_client_port"
    "device_chf_client_protocol"
    "device_chf_interface"
    "device_agent_type"
    "device_proxy_bgp"
    "device_proxy_bgp6"
    "cdn_attr"
    "bgp_peer_ip4"
    "bgp_peer_ip6"
    "device_subtype"
    "device_vendor_type"
    "device_model_type"
    "cloud_export_id"
    "device_kproxy"
    "snmp_enabled"
    "snmp_disabled_reason"
    "snmp_disabled_reason_other"
    "bgp_disabled_reason"
    "bgp_disabled_reason_other"
    "device_manufacturer"
    "device_alert"
    "role"
    "device_bgp_credential_name"
    "flow_snmp_credential_name"
  }},
};

PROTOBUF_NOINLINE void DeviceDetailed::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.DeviceDetailed)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.labels_.Clear();
  _impl_.all_interfaces_.Clear();
  _impl_.sending_ips_.Clear();
  _impl_.custom_column_data_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.company_id_.ClearToEmpty();
  _impl_.device_name_.ClearToEmpty();
  _impl_.device_alias_.ClearToEmpty();
  _impl_.device_type_.ClearToEmpty();
  _impl_.device_description_.ClearToEmpty();
  _impl_.device_flow_type_.ClearToEmpty();
  _impl_.device_sample_rate_.ClearToEmpty();
  _impl_.device_snmp_ip_.ClearToEmpty();
  _impl_.device_snmp_community_.ClearToEmpty();
  _impl_.device_bgp_type_.ClearToEmpty();
  _impl_.device_bgp_neighbor_ip_.ClearToEmpty();
  _impl_.device_bgp_neighbor_ip6_.ClearToEmpty();
  _impl_.device_bgp_neighbor_asn_.ClearToEmpty();
  _impl_.device_bgp_password_.ClearToEmpty();
  _impl_.bgp_lookup_strategy_.ClearToEmpty();
  _impl_.device_status_.ClearToEmpty();
  _impl_.use_bgp_device_id_.ClearToEmpty();
  _impl_.custom_columns_.ClearToEmpty();
  _impl_.device_chf_client_port_.ClearToEmpty();
  _impl_.device_chf_client_protocol_.ClearToEmpty();
  _impl_.device_chf_interface_.ClearToEmpty();
  _impl_.device_agent_type_.ClearToEmpty();
  _impl_.device_proxy_bgp_.ClearToEmpty();
  _impl_.device_proxy_bgp6_.ClearToEmpty();
  _impl_.cdn_attr_.ClearToEmpty();
  _impl_.bgp_peer_ip4_.ClearToEmpty();
  _impl_.bgp_peer_ip6_.ClearToEmpty();
  _impl_.device_subtype_.ClearToEmpty();
  _impl_.device_vendor_type_.ClearToEmpty();
  _impl_.device_model_type_.ClearToEmpty();
  _impl_.cloud_export_id_.ClearToEmpty();
  _impl_.device_kproxy_.ClearToEmpty();
  _impl_.snmp_enabled_.ClearToEmpty();
  _impl_.snmp_disabled_reason_.ClearToEmpty();
  _impl_.snmp_disabled_reason_other_.ClearToEmpty();
  _impl_.bgp_disabled_reason_.ClearToEmpty();
  _impl_.bgp_disabled_reason_other_.ClearToEmpty();
  _impl_.device_manufacturer_.ClearToEmpty();
  _impl_.device_alert_.ClearToEmpty();
  _impl_.role_.ClearToEmpty();
  _impl_.device_bgp_credential_name_.ClearToEmpty();
  _impl_.flow_snmp_credential_name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.site_ != nullptr);
      _impl_.site_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.plan_ != nullptr);
      _impl_.plan_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.created_date_ != nullptr);
      _impl_.created_date_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.updated_date_ != nullptr);
      _impl_.updated_date_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.device_snmp_v3_conf_ != nullptr);
      _impl_.device_snmp_v3_conf_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.device_gnmi_v1_conf_ != nullptr);
      _impl_.device_gnmi_v1_conf_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.nms_ != nullptr);
      _impl_.nms_->Clear();
    }
  }
  _impl_.minimize_snmp_ = false;
  ::memset(&_impl_.device_bgp_flowspec_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.monitoring_template_id_) -
      reinterpret_cast<char*>(&_impl_.device_bgp_flowspec_)) + sizeof(_impl_.monitoring_template_id_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeviceDetailed::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeviceDetailed& this_ = static_cast<const DeviceDetailed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeviceDetailed::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeviceDetailed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.DeviceDetailed)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string company_id = 2 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_company_id().empty()) {
            const std::string& _s = this_._internal_company_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.company_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string device_name = 3 [json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_name().empty()) {
            const std::string& _s = this_._internal_device_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_name");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string device_alias = 4 [json_name = "deviceAlias", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_alias().empty()) {
            const std::string& _s = this_._internal_device_alias();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_alias");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string device_type = 5 [json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_type().empty()) {
            const std::string& _s = this_._internal_device_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_type");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string device_description = 6 [json_name = "deviceDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_description().empty()) {
            const std::string& _s = this_._internal_device_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_description");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.device.v202504beta2.Site site = 7 [json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.site_, this_._impl_.site_->GetCachedSize(), target,
                stream);
          }

          // .kentik.device.v202504beta2.Plan plan = 8 [json_name = "plan", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.plan_, this_._impl_.plan_->GetCachedSize(), target,
                stream);
          }

          // repeated .kentik.device.v202504beta2.Label labels = 9 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_labels_size());
               i < n; i++) {
            const auto& repfield = this_._internal_labels().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    9, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .kentik.device.v202504beta2.Interface all_interfaces = 10 [json_name = "allInterfaces", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_all_interfaces_size());
               i < n; i++) {
            const auto& repfield = this_._internal_all_interfaces().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    10, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string device_flow_type = 11 [json_name = "deviceFlowType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_flow_type().empty()) {
            const std::string& _s = this_._internal_device_flow_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_flow_type");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // string device_sample_rate = 12 [json_name = "deviceSampleRate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_sample_rate().empty()) {
            const std::string& _s = this_._internal_device_sample_rate();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_sample_rate");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          // repeated string sending_ips = 13 [json_name = "sendingIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_sending_ips_size(); i < n; ++i) {
            const auto& s = this_._internal_sending_ips().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.sending_ips");
            target = stream->WriteString(13, s, target);
          }

          // string device_snmp_ip = 14 [json_name = "deviceSnmpIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_snmp_ip().empty()) {
            const std::string& _s = this_._internal_device_snmp_ip();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_snmp_ip");
            target = stream->WriteStringMaybeAliased(14, _s, target);
          }

          // string device_snmp_community = 15 [json_name = "deviceSnmpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_snmp_community().empty()) {
            const std::string& _s = this_._internal_device_snmp_community();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_snmp_community");
            target = stream->WriteStringMaybeAliased(15, _s, target);
          }

          // optional bool minimize_snmp = 16 [json_name = "minimizeSnmp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000080u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                16, this_._internal_minimize_snmp(), target);
          }

          // string device_bgp_type = 17 [json_name = "deviceBgpType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_bgp_type().empty()) {
            const std::string& _s = this_._internal_device_bgp_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_bgp_type");
            target = stream->WriteStringMaybeAliased(17, _s, target);
          }

          // string device_bgp_neighbor_ip = 18 [json_name = "deviceBgpNeighborIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_bgp_neighbor_ip().empty()) {
            const std::string& _s = this_._internal_device_bgp_neighbor_ip();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_bgp_neighbor_ip");
            target = stream->WriteStringMaybeAliased(18, _s, target);
          }

          // string device_bgp_neighbor_ip6 = 19 [json_name = "deviceBgpNeighborIp6", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_bgp_neighbor_ip6().empty()) {
            const std::string& _s = this_._internal_device_bgp_neighbor_ip6();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_bgp_neighbor_ip6");
            target = stream->WriteStringMaybeAliased(19, _s, target);
          }

          // string device_bgp_neighbor_asn = 20 [json_name = "deviceBgpNeighborAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_bgp_neighbor_asn().empty()) {
            const std::string& _s = this_._internal_device_bgp_neighbor_asn();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_bgp_neighbor_asn");
            target = stream->WriteStringMaybeAliased(20, _s, target);
          }

          // bool device_bgp_flowspec = 21 [json_name = "deviceBgpFlowspec", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_device_bgp_flowspec() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                21, this_._internal_device_bgp_flowspec(), target);
          }

          // string device_bgp_password = 22 [json_name = "deviceBgpPassword", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_bgp_password().empty()) {
            const std::string& _s = this_._internal_device_bgp_password();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_bgp_password");
            target = stream->WriteStringMaybeAliased(22, _s, target);
          }

          // bool device_bgp_label_unicast = 23 [json_name = "deviceBgpLabelUnicast", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_device_bgp_label_unicast() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                23, this_._internal_device_bgp_label_unicast(), target);
          }

          // string bgp_lookup_strategy = 24 [json_name = "bgpLookupStrategy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_bgp_lookup_strategy().empty()) {
            const std::string& _s = this_._internal_bgp_lookup_strategy();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.bgp_lookup_strategy");
            target = stream->WriteStringMaybeAliased(24, _s, target);
          }

          // string device_status = 25 [json_name = "deviceStatus", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_status().empty()) {
            const std::string& _s = this_._internal_device_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_status");
            target = stream->WriteStringMaybeAliased(25, _s, target);
          }

          // string use_bgp_device_id = 26 [json_name = "useBgpDeviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_use_bgp_device_id().empty()) {
            const std::string& _s = this_._internal_use_bgp_device_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.use_bgp_device_id");
            target = stream->WriteStringMaybeAliased(26, _s, target);
          }

          // string custom_columns = 27 [json_name = "customColumns", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_custom_columns().empty()) {
            const std::string& _s = this_._internal_custom_columns();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.custom_columns");
            target = stream->WriteStringMaybeAliased(27, _s, target);
          }

          // repeated .kentik.device.v202504beta2.CustomColumnData custom_column_data = 28 [json_name = "customColumnData", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_custom_column_data_size());
               i < n; i++) {
            const auto& repfield = this_._internal_custom_column_data().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    28, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string device_chf_client_port = 29 [json_name = "deviceChfClientPort", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_chf_client_port().empty()) {
            const std::string& _s = this_._internal_device_chf_client_port();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_chf_client_port");
            target = stream->WriteStringMaybeAliased(29, _s, target);
          }

          // string device_chf_client_protocol = 30 [json_name = "deviceChfClientProtocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_chf_client_protocol().empty()) {
            const std::string& _s = this_._internal_device_chf_client_protocol();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_chf_client_protocol");
            target = stream->WriteStringMaybeAliased(30, _s, target);
          }

          // string device_chf_interface = 31 [json_name = "deviceChfInterface", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_chf_interface().empty()) {
            const std::string& _s = this_._internal_device_chf_interface();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_chf_interface");
            target = stream->WriteStringMaybeAliased(31, _s, target);
          }

          // string device_agent_type = 32 [json_name = "deviceAgentType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_agent_type().empty()) {
            const std::string& _s = this_._internal_device_agent_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_agent_type");
            target = stream->WriteStringMaybeAliased(32, _s, target);
          }

          // uint32 max_flow_rate = 33 [json_name = "maxFlowRate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_max_flow_rate() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                33, this_._internal_max_flow_rate(), target);
          }

          // uint32 max_big_flow_rate = 34 [json_name = "maxBigFlowRate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_max_big_flow_rate() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                34, this_._internal_max_big_flow_rate(), target);
          }

          // string device_proxy_bgp = 35 [json_name = "deviceProxyBgp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_proxy_bgp().empty()) {
            const std::string& _s = this_._internal_device_proxy_bgp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_proxy_bgp");
            target = stream->WriteStringMaybeAliased(35, _s, target);
          }

          // string device_proxy_bgp6 = 36 [json_name = "deviceProxyBgp6", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_proxy_bgp6().empty()) {
            const std::string& _s = this_._internal_device_proxy_bgp6();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_proxy_bgp6");
            target = stream->WriteStringMaybeAliased(36, _s, target);
          }

          // .google.protobuf.Timestamp created_date = 37 [json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                37, *this_._impl_.created_date_, this_._impl_.created_date_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp updated_date = 38 [json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                38, *this_._impl_.updated_date_, this_._impl_.updated_date_->GetCachedSize(), target,
                stream);
          }

          // bool device_snmp_v3_conf_enabled = 39 [json_name = "deviceSnmpV3ConfEnabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_device_snmp_v3_conf_enabled() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                39, this_._internal_device_snmp_v3_conf_enabled(), target);
          }

          // .kentik.device.v202504beta2.DeviceSnmpV3Conf device_snmp_v3_conf = 40 [json_name = "deviceSnmpV3Conf", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                40, *this_._impl_.device_snmp_v3_conf_, this_._impl_.device_snmp_v3_conf_->GetCachedSize(), target,
                stream);
          }

          // string cdn_attr = 41 [json_name = "cdnAttr", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_cdn_attr().empty()) {
            const std::string& _s = this_._internal_cdn_attr();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.cdn_attr");
            target = stream->WriteStringMaybeAliased(41, _s, target);
          }

          // string bgp_peer_ip4 = 42 [json_name = "bgpPeerIp4", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_bgp_peer_ip4().empty()) {
            const std::string& _s = this_._internal_bgp_peer_ip4();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.bgp_peer_ip4");
            target = stream->WriteStringMaybeAliased(42, _s, target);
          }

          // string bgp_peer_ip6 = 43 [json_name = "bgpPeerIp6", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_bgp_peer_ip6().empty()) {
            const std::string& _s = this_._internal_bgp_peer_ip6();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.bgp_peer_ip6");
            target = stream->WriteStringMaybeAliased(43, _s, target);
          }

          // string device_subtype = 44 [json_name = "deviceSubtype", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_subtype().empty()) {
            const std::string& _s = this_._internal_device_subtype();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_subtype");
            target = stream->WriteStringMaybeAliased(44, _s, target);
          }

          // string device_vendor_type = 45 [json_name = "deviceVendorType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_vendor_type().empty()) {
            const std::string& _s = this_._internal_device_vendor_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_vendor_type");
            target = stream->WriteStringMaybeAliased(45, _s, target);
          }

          // string device_model_type = 46 [json_name = "deviceModelType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_model_type().empty()) {
            const std::string& _s = this_._internal_device_model_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_model_type");
            target = stream->WriteStringMaybeAliased(46, _s, target);
          }

          // string cloud_export_id = 47 [json_name = "cloudExportId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_cloud_export_id().empty()) {
            const std::string& _s = this_._internal_cloud_export_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.cloud_export_id");
            target = stream->WriteStringMaybeAliased(47, _s, target);
          }

          // string device_kproxy = 48 [json_name = "deviceKproxy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_kproxy().empty()) {
            const std::string& _s = this_._internal_device_kproxy();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_kproxy");
            target = stream->WriteStringMaybeAliased(48, _s, target);
          }

          // string snmp_enabled = 49 [json_name = "snmpEnabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_snmp_enabled().empty()) {
            const std::string& _s = this_._internal_snmp_enabled();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.snmp_enabled");
            target = stream->WriteStringMaybeAliased(49, _s, target);
          }

          // string snmp_disabled_reason = 50 [json_name = "snmpDisabledReason", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_snmp_disabled_reason().empty()) {
            const std::string& _s = this_._internal_snmp_disabled_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.snmp_disabled_reason");
            target = stream->WriteStringMaybeAliased(50, _s, target);
          }

          // string snmp_disabled_reason_other = 51 [json_name = "snmpDisabledReasonOther", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_snmp_disabled_reason_other().empty()) {
            const std::string& _s = this_._internal_snmp_disabled_reason_other();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.snmp_disabled_reason_other");
            target = stream->WriteStringMaybeAliased(51, _s, target);
          }

          // string bgp_disabled_reason = 52 [json_name = "bgpDisabledReason", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_bgp_disabled_reason().empty()) {
            const std::string& _s = this_._internal_bgp_disabled_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.bgp_disabled_reason");
            target = stream->WriteStringMaybeAliased(52, _s, target);
          }

          // string bgp_disabled_reason_other = 53 [json_name = "bgpDisabledReasonOther", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_bgp_disabled_reason_other().empty()) {
            const std::string& _s = this_._internal_bgp_disabled_reason_other();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.bgp_disabled_reason_other");
            target = stream->WriteStringMaybeAliased(53, _s, target);
          }

          // string device_manufacturer = 54 [json_name = "deviceManufacturer", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_manufacturer().empty()) {
            const std::string& _s = this_._internal_device_manufacturer();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_manufacturer");
            target = stream->WriteStringMaybeAliased(54, _s, target);
          }

          // string device_alert = 55 [json_name = "deviceAlert", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_alert().empty()) {
            const std::string& _s = this_._internal_device_alert();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_alert");
            target = stream->WriteStringMaybeAliased(55, _s, target);
          }

          // string role = 56 [json_name = "role", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_role().empty()) {
            const std::string& _s = this_._internal_role();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.role");
            target = stream->WriteStringMaybeAliased(56, _s, target);
          }

          // .kentik.device.v202504beta2.GnmiV1Conf device_gnmi_v1_conf = 57 [json_name = "deviceGnmiV1Conf", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                57, *this_._impl_.device_gnmi_v1_conf_, this_._impl_.device_gnmi_v1_conf_->GetCachedSize(), target,
                stream);
          }

          // bool use_asn_from_flow = 58 [json_name = "useAsnFromFlow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_use_asn_from_flow() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                58, this_._internal_use_asn_from_flow(), target);
          }

          // uint32 max_interface = 59 [json_name = "maxInterface", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_max_interface() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                59, this_._internal_max_interface(), target);
          }

          // uint32 max_interface_check = 60 [json_name = "maxInterfaceCheck", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_max_interface_check() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                60, this_._internal_max_interface_check(), target);
          }

          // .kentik.device.v202504beta2.DeviceNmsConfig nms = 61 [json_name = "nms", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                61, *this_._impl_.nms_, this_._impl_.nms_->GetCachedSize(), target,
                stream);
          }

          // string device_bgp_credential_name = 62 [json_name = "deviceBgpCredentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_device_bgp_credential_name().empty()) {
            const std::string& _s = this_._internal_device_bgp_credential_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.device_bgp_credential_name");
            target = stream->WriteStringMaybeAliased(62, _s, target);
          }

          // string flow_snmp_credential_name = 63 [json_name = "flowSnmpCredentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_flow_snmp_credential_name().empty()) {
            const std::string& _s = this_._internal_flow_snmp_credential_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeviceDetailed.flow_snmp_credential_name");
            target = stream->WriteStringMaybeAliased(63, _s, target);
          }

          // uint32 monitoring_template_id = 64 [json_name = "monitoringTemplateId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_monitoring_template_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                64, this_._internal_monitoring_template_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.DeviceDetailed)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeviceDetailed::ByteSizeLong(const MessageLite& base) {
          const DeviceDetailed& this_ = static_cast<const DeviceDetailed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeviceDetailed::ByteSizeLong() const {
          const DeviceDetailed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.DeviceDetailed)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.device.v202504beta2.Label labels = 9 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_labels_size();
              for (const auto& msg : this_._internal_labels()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .kentik.device.v202504beta2.Interface all_interfaces = 10 [json_name = "allInterfaces", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_all_interfaces_size();
              for (const auto& msg : this_._internal_all_interfaces()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string sending_ips = 13 [json_name = "sendingIps", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_sending_ips().size());
              for (int i = 0, n = this_._internal_sending_ips().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_sending_ips().Get(i));
              }
            }
            // repeated .kentik.device.v202504beta2.CustomColumnData custom_column_data = 28 [json_name = "customColumnData", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 2UL * this_._internal_custom_column_data_size();
              for (const auto& msg : this_._internal_custom_column_data()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string company_id = 2 [json_name = "companyId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_company_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_company_id());
            }
            // string device_name = 3 [json_name = "deviceName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_name());
            }
            // string device_alias = 4 [json_name = "deviceAlias", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_alias().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_alias());
            }
            // string device_type = 5 [json_name = "deviceType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_type());
            }
            // string device_description = 6 [json_name = "deviceDescription", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_description());
            }
            // string device_flow_type = 11 [json_name = "deviceFlowType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_flow_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_flow_type());
            }
            // string device_sample_rate = 12 [json_name = "deviceSampleRate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_sample_rate().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_sample_rate());
            }
            // string device_snmp_ip = 14 [json_name = "deviceSnmpIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_snmp_ip().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_snmp_ip());
            }
            // string device_snmp_community = 15 [json_name = "deviceSnmpCommunity", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_snmp_community().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_snmp_community());
            }
            // string device_bgp_type = 17 [json_name = "deviceBgpType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_bgp_type().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_bgp_type());
            }
            // string device_bgp_neighbor_ip = 18 [json_name = "deviceBgpNeighborIp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_bgp_neighbor_ip().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_bgp_neighbor_ip());
            }
            // string device_bgp_neighbor_ip6 = 19 [json_name = "deviceBgpNeighborIp6", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_bgp_neighbor_ip6().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_bgp_neighbor_ip6());
            }
            // string device_bgp_neighbor_asn = 20 [json_name = "deviceBgpNeighborAsn", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_bgp_neighbor_asn().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_bgp_neighbor_asn());
            }
            // string device_bgp_password = 22 [json_name = "deviceBgpPassword", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_bgp_password().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_bgp_password());
            }
            // string bgp_lookup_strategy = 24 [json_name = "bgpLookupStrategy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_bgp_lookup_strategy().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_bgp_lookup_strategy());
            }
            // string device_status = 25 [json_name = "deviceStatus", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_status().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_status());
            }
            // string use_bgp_device_id = 26 [json_name = "useBgpDeviceId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_use_bgp_device_id().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_use_bgp_device_id());
            }
            // string custom_columns = 27 [json_name = "customColumns", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_custom_columns().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_custom_columns());
            }
            // string device_chf_client_port = 29 [json_name = "deviceChfClientPort", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_chf_client_port().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_chf_client_port());
            }
            // string device_chf_client_protocol = 30 [json_name = "deviceChfClientProtocol", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_chf_client_protocol().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_chf_client_protocol());
            }
            // string device_chf_interface = 31 [json_name = "deviceChfInterface", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_chf_interface().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_chf_interface());
            }
            // string device_agent_type = 32 [json_name = "deviceAgentType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_agent_type().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_agent_type());
            }
            // string device_proxy_bgp = 35 [json_name = "deviceProxyBgp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_proxy_bgp().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_proxy_bgp());
            }
            // string device_proxy_bgp6 = 36 [json_name = "deviceProxyBgp6", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_proxy_bgp6().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_proxy_bgp6());
            }
            // string cdn_attr = 41 [json_name = "cdnAttr", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_cdn_attr().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cdn_attr());
            }
            // string bgp_peer_ip4 = 42 [json_name = "bgpPeerIp4", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_bgp_peer_ip4().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_bgp_peer_ip4());
            }
            // string bgp_peer_ip6 = 43 [json_name = "bgpPeerIp6", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_bgp_peer_ip6().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_bgp_peer_ip6());
            }
            // string device_subtype = 44 [json_name = "deviceSubtype", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_subtype().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_subtype());
            }
            // string device_vendor_type = 45 [json_name = "deviceVendorType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_vendor_type().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_vendor_type());
            }
            // string device_model_type = 46 [json_name = "deviceModelType", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_model_type().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_model_type());
            }
            // string cloud_export_id = 47 [json_name = "cloudExportId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_cloud_export_id().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cloud_export_id());
            }
            // string device_kproxy = 48 [json_name = "deviceKproxy", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_kproxy().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_kproxy());
            }
            // string snmp_enabled = 49 [json_name = "snmpEnabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_snmp_enabled().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_snmp_enabled());
            }
            // string snmp_disabled_reason = 50 [json_name = "snmpDisabledReason", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_snmp_disabled_reason().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_snmp_disabled_reason());
            }
            // string snmp_disabled_reason_other = 51 [json_name = "snmpDisabledReasonOther", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_snmp_disabled_reason_other().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_snmp_disabled_reason_other());
            }
            // string bgp_disabled_reason = 52 [json_name = "bgpDisabledReason", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_bgp_disabled_reason().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_bgp_disabled_reason());
            }
            // string bgp_disabled_reason_other = 53 [json_name = "bgpDisabledReasonOther", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_bgp_disabled_reason_other().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_bgp_disabled_reason_other());
            }
            // string device_manufacturer = 54 [json_name = "deviceManufacturer", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_manufacturer().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_manufacturer());
            }
            // string device_alert = 55 [json_name = "deviceAlert", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_alert().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_alert());
            }
            // string role = 56 [json_name = "role", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_role().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_role());
            }
            // string device_bgp_credential_name = 62 [json_name = "deviceBgpCredentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_device_bgp_credential_name().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_bgp_credential_name());
            }
            // string flow_snmp_credential_name = 63 [json_name = "flowSnmpCredentialName", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_flow_snmp_credential_name().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_flow_snmp_credential_name());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // .kentik.device.v202504beta2.Site site = 7 [json_name = "site", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.site_);
            }
            // .kentik.device.v202504beta2.Plan plan = 8 [json_name = "plan", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.plan_);
            }
            // .google.protobuf.Timestamp created_date = 37 [json_name = "createdDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000004u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.created_date_);
            }
            // .google.protobuf.Timestamp updated_date = 38 [json_name = "updatedDate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000008u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.updated_date_);
            }
            // .kentik.device.v202504beta2.DeviceSnmpV3Conf device_snmp_v3_conf = 40 [json_name = "deviceSnmpV3Conf", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000010u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.device_snmp_v3_conf_);
            }
            // .kentik.device.v202504beta2.GnmiV1Conf device_gnmi_v1_conf = 57 [json_name = "deviceGnmiV1Conf", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000020u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.device_gnmi_v1_conf_);
            }
            // .kentik.device.v202504beta2.DeviceNmsConfig nms = 61 [json_name = "nms", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000040u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.nms_);
            }
            // optional bool minimize_snmp = 16 [json_name = "minimizeSnmp", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (cached_has_bits & 0x00000080u) {
              total_size += 3;
            }
          }
           {
            // bool device_bgp_flowspec = 21 [json_name = "deviceBgpFlowspec", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_device_bgp_flowspec() != 0) {
              total_size += 3;
            }
            // bool device_bgp_label_unicast = 23 [json_name = "deviceBgpLabelUnicast", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_device_bgp_label_unicast() != 0) {
              total_size += 3;
            }
            // bool device_snmp_v3_conf_enabled = 39 [json_name = "deviceSnmpV3ConfEnabled", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_device_snmp_v3_conf_enabled() != 0) {
              total_size += 3;
            }
            // uint32 max_flow_rate = 33 [json_name = "maxFlowRate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_max_flow_rate() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_max_flow_rate());
            }
            // uint32 max_big_flow_rate = 34 [json_name = "maxBigFlowRate", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_max_big_flow_rate() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_max_big_flow_rate());
            }
            // bool use_asn_from_flow = 58 [json_name = "useAsnFromFlow", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_use_asn_from_flow() != 0) {
              total_size += 3;
            }
            // uint32 max_interface = 59 [json_name = "maxInterface", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_max_interface() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_max_interface());
            }
            // uint32 max_interface_check = 60 [json_name = "maxInterfaceCheck", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_max_interface_check() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_max_interface_check());
            }
            // uint32 monitoring_template_id = 64 [json_name = "monitoringTemplateId", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_monitoring_template_id() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_monitoring_template_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeviceDetailed::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceDetailed*>(&to_msg);
  auto& from = static_cast<const DeviceDetailed&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.DeviceDetailed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_labels()->MergeFrom(
      from._internal_labels());
  _this->_internal_mutable_all_interfaces()->MergeFrom(
      from._internal_all_interfaces());
  _this->_internal_mutable_sending_ips()->MergeFrom(from._internal_sending_ips());
  _this->_internal_mutable_custom_column_data()->MergeFrom(
      from._internal_custom_column_data());
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_company_id().empty()) {
    _this->_internal_set_company_id(from._internal_company_id());
  }
  if (!from._internal_device_name().empty()) {
    _this->_internal_set_device_name(from._internal_device_name());
  }
  if (!from._internal_device_alias().empty()) {
    _this->_internal_set_device_alias(from._internal_device_alias());
  }
  if (!from._internal_device_type().empty()) {
    _this->_internal_set_device_type(from._internal_device_type());
  }
  if (!from._internal_device_description().empty()) {
    _this->_internal_set_device_description(from._internal_device_description());
  }
  if (!from._internal_device_flow_type().empty()) {
    _this->_internal_set_device_flow_type(from._internal_device_flow_type());
  }
  if (!from._internal_device_sample_rate().empty()) {
    _this->_internal_set_device_sample_rate(from._internal_device_sample_rate());
  }
  if (!from._internal_device_snmp_ip().empty()) {
    _this->_internal_set_device_snmp_ip(from._internal_device_snmp_ip());
  }
  if (!from._internal_device_snmp_community().empty()) {
    _this->_internal_set_device_snmp_community(from._internal_device_snmp_community());
  }
  if (!from._internal_device_bgp_type().empty()) {
    _this->_internal_set_device_bgp_type(from._internal_device_bgp_type());
  }
  if (!from._internal_device_bgp_neighbor_ip().empty()) {
    _this->_internal_set_device_bgp_neighbor_ip(from._internal_device_bgp_neighbor_ip());
  }
  if (!from._internal_device_bgp_neighbor_ip6().empty()) {
    _this->_internal_set_device_bgp_neighbor_ip6(from._internal_device_bgp_neighbor_ip6());
  }
  if (!from._internal_device_bgp_neighbor_asn().empty()) {
    _this->_internal_set_device_bgp_neighbor_asn(from._internal_device_bgp_neighbor_asn());
  }
  if (!from._internal_device_bgp_password().empty()) {
    _this->_internal_set_device_bgp_password(from._internal_device_bgp_password());
  }
  if (!from._internal_bgp_lookup_strategy().empty()) {
    _this->_internal_set_bgp_lookup_strategy(from._internal_bgp_lookup_strategy());
  }
  if (!from._internal_device_status().empty()) {
    _this->_internal_set_device_status(from._internal_device_status());
  }
  if (!from._internal_use_bgp_device_id().empty()) {
    _this->_internal_set_use_bgp_device_id(from._internal_use_bgp_device_id());
  }
  if (!from._internal_custom_columns().empty()) {
    _this->_internal_set_custom_columns(from._internal_custom_columns());
  }
  if (!from._internal_device_chf_client_port().empty()) {
    _this->_internal_set_device_chf_client_port(from._internal_device_chf_client_port());
  }
  if (!from._internal_device_chf_client_protocol().empty()) {
    _this->_internal_set_device_chf_client_protocol(from._internal_device_chf_client_protocol());
  }
  if (!from._internal_device_chf_interface().empty()) {
    _this->_internal_set_device_chf_interface(from._internal_device_chf_interface());
  }
  if (!from._internal_device_agent_type().empty()) {
    _this->_internal_set_device_agent_type(from._internal_device_agent_type());
  }
  if (!from._internal_device_proxy_bgp().empty()) {
    _this->_internal_set_device_proxy_bgp(from._internal_device_proxy_bgp());
  }
  if (!from._internal_device_proxy_bgp6().empty()) {
    _this->_internal_set_device_proxy_bgp6(from._internal_device_proxy_bgp6());
  }
  if (!from._internal_cdn_attr().empty()) {
    _this->_internal_set_cdn_attr(from._internal_cdn_attr());
  }
  if (!from._internal_bgp_peer_ip4().empty()) {
    _this->_internal_set_bgp_peer_ip4(from._internal_bgp_peer_ip4());
  }
  if (!from._internal_bgp_peer_ip6().empty()) {
    _this->_internal_set_bgp_peer_ip6(from._internal_bgp_peer_ip6());
  }
  if (!from._internal_device_subtype().empty()) {
    _this->_internal_set_device_subtype(from._internal_device_subtype());
  }
  if (!from._internal_device_vendor_type().empty()) {
    _this->_internal_set_device_vendor_type(from._internal_device_vendor_type());
  }
  if (!from._internal_device_model_type().empty()) {
    _this->_internal_set_device_model_type(from._internal_device_model_type());
  }
  if (!from._internal_cloud_export_id().empty()) {
    _this->_internal_set_cloud_export_id(from._internal_cloud_export_id());
  }
  if (!from._internal_device_kproxy().empty()) {
    _this->_internal_set_device_kproxy(from._internal_device_kproxy());
  }
  if (!from._internal_snmp_enabled().empty()) {
    _this->_internal_set_snmp_enabled(from._internal_snmp_enabled());
  }
  if (!from._internal_snmp_disabled_reason().empty()) {
    _this->_internal_set_snmp_disabled_reason(from._internal_snmp_disabled_reason());
  }
  if (!from._internal_snmp_disabled_reason_other().empty()) {
    _this->_internal_set_snmp_disabled_reason_other(from._internal_snmp_disabled_reason_other());
  }
  if (!from._internal_bgp_disabled_reason().empty()) {
    _this->_internal_set_bgp_disabled_reason(from._internal_bgp_disabled_reason());
  }
  if (!from._internal_bgp_disabled_reason_other().empty()) {
    _this->_internal_set_bgp_disabled_reason_other(from._internal_bgp_disabled_reason_other());
  }
  if (!from._internal_device_manufacturer().empty()) {
    _this->_internal_set_device_manufacturer(from._internal_device_manufacturer());
  }
  if (!from._internal_device_alert().empty()) {
    _this->_internal_set_device_alert(from._internal_device_alert());
  }
  if (!from._internal_role().empty()) {
    _this->_internal_set_role(from._internal_role());
  }
  if (!from._internal_device_bgp_credential_name().empty()) {
    _this->_internal_set_device_bgp_credential_name(from._internal_device_bgp_credential_name());
  }
  if (!from._internal_flow_snmp_credential_name().empty()) {
    _this->_internal_set_flow_snmp_credential_name(from._internal_flow_snmp_credential_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.site_ != nullptr);
      if (_this->_impl_.site_ == nullptr) {
        _this->_impl_.site_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::Site>(arena, *from._impl_.site_);
      } else {
        _this->_impl_.site_->MergeFrom(*from._impl_.site_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.plan_ != nullptr);
      if (_this->_impl_.plan_ == nullptr) {
        _this->_impl_.plan_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::Plan>(arena, *from._impl_.plan_);
      } else {
        _this->_impl_.plan_->MergeFrom(*from._impl_.plan_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.created_date_ != nullptr);
      if (_this->_impl_.created_date_ == nullptr) {
        _this->_impl_.created_date_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.created_date_);
      } else {
        _this->_impl_.created_date_->MergeFrom(*from._impl_.created_date_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.updated_date_ != nullptr);
      if (_this->_impl_.updated_date_ == nullptr) {
        _this->_impl_.updated_date_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.updated_date_);
      } else {
        _this->_impl_.updated_date_->MergeFrom(*from._impl_.updated_date_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.device_snmp_v3_conf_ != nullptr);
      if (_this->_impl_.device_snmp_v3_conf_ == nullptr) {
        _this->_impl_.device_snmp_v3_conf_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceSnmpV3Conf>(arena, *from._impl_.device_snmp_v3_conf_);
      } else {
        _this->_impl_.device_snmp_v3_conf_->MergeFrom(*from._impl_.device_snmp_v3_conf_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.device_gnmi_v1_conf_ != nullptr);
      if (_this->_impl_.device_gnmi_v1_conf_ == nullptr) {
        _this->_impl_.device_gnmi_v1_conf_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::GnmiV1Conf>(arena, *from._impl_.device_gnmi_v1_conf_);
      } else {
        _this->_impl_.device_gnmi_v1_conf_->MergeFrom(*from._impl_.device_gnmi_v1_conf_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.nms_ != nullptr);
      if (_this->_impl_.nms_ == nullptr) {
        _this->_impl_.nms_ =
            ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceNmsConfig>(arena, *from._impl_.nms_);
      } else {
        _this->_impl_.nms_->MergeFrom(*from._impl_.nms_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.minimize_snmp_ = from._impl_.minimize_snmp_;
    }
  }
  if (from._internal_device_bgp_flowspec() != 0) {
    _this->_impl_.device_bgp_flowspec_ = from._impl_.device_bgp_flowspec_;
  }
  if (from._internal_device_bgp_label_unicast() != 0) {
    _this->_impl_.device_bgp_label_unicast_ = from._impl_.device_bgp_label_unicast_;
  }
  if (from._internal_device_snmp_v3_conf_enabled() != 0) {
    _this->_impl_.device_snmp_v3_conf_enabled_ = from._impl_.device_snmp_v3_conf_enabled_;
  }
  if (from._internal_max_flow_rate() != 0) {
    _this->_impl_.max_flow_rate_ = from._impl_.max_flow_rate_;
  }
  if (from._internal_max_big_flow_rate() != 0) {
    _this->_impl_.max_big_flow_rate_ = from._impl_.max_big_flow_rate_;
  }
  if (from._internal_use_asn_from_flow() != 0) {
    _this->_impl_.use_asn_from_flow_ = from._impl_.use_asn_from_flow_;
  }
  if (from._internal_max_interface() != 0) {
    _this->_impl_.max_interface_ = from._impl_.max_interface_;
  }
  if (from._internal_max_interface_check() != 0) {
    _this->_impl_.max_interface_check_ = from._impl_.max_interface_check_;
  }
  if (from._internal_monitoring_template_id() != 0) {
    _this->_impl_.monitoring_template_id_ = from._impl_.monitoring_template_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceDetailed::CopyFrom(const DeviceDetailed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.DeviceDetailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceDetailed::InternalSwap(DeviceDetailed* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.labels_.InternalSwap(&other->_impl_.labels_);
  _impl_.all_interfaces_.InternalSwap(&other->_impl_.all_interfaces_);
  _impl_.sending_ips_.InternalSwap(&other->_impl_.sending_ips_);
  _impl_.custom_column_data_.InternalSwap(&other->_impl_.custom_column_data_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.company_id_, &other->_impl_.company_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_name_, &other->_impl_.device_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_alias_, &other->_impl_.device_alias_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_type_, &other->_impl_.device_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_description_, &other->_impl_.device_description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_flow_type_, &other->_impl_.device_flow_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_sample_rate_, &other->_impl_.device_sample_rate_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_snmp_ip_, &other->_impl_.device_snmp_ip_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_snmp_community_, &other->_impl_.device_snmp_community_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_bgp_type_, &other->_impl_.device_bgp_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_bgp_neighbor_ip_, &other->_impl_.device_bgp_neighbor_ip_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_bgp_neighbor_ip6_, &other->_impl_.device_bgp_neighbor_ip6_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_bgp_neighbor_asn_, &other->_impl_.device_bgp_neighbor_asn_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_bgp_password_, &other->_impl_.device_bgp_password_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bgp_lookup_strategy_, &other->_impl_.bgp_lookup_strategy_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_status_, &other->_impl_.device_status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.use_bgp_device_id_, &other->_impl_.use_bgp_device_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.custom_columns_, &other->_impl_.custom_columns_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_chf_client_port_, &other->_impl_.device_chf_client_port_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_chf_client_protocol_, &other->_impl_.device_chf_client_protocol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_chf_interface_, &other->_impl_.device_chf_interface_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_agent_type_, &other->_impl_.device_agent_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_proxy_bgp_, &other->_impl_.device_proxy_bgp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_proxy_bgp6_, &other->_impl_.device_proxy_bgp6_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cdn_attr_, &other->_impl_.cdn_attr_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bgp_peer_ip4_, &other->_impl_.bgp_peer_ip4_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bgp_peer_ip6_, &other->_impl_.bgp_peer_ip6_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_subtype_, &other->_impl_.device_subtype_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_vendor_type_, &other->_impl_.device_vendor_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_model_type_, &other->_impl_.device_model_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cloud_export_id_, &other->_impl_.cloud_export_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_kproxy_, &other->_impl_.device_kproxy_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.snmp_enabled_, &other->_impl_.snmp_enabled_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.snmp_disabled_reason_, &other->_impl_.snmp_disabled_reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.snmp_disabled_reason_other_, &other->_impl_.snmp_disabled_reason_other_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bgp_disabled_reason_, &other->_impl_.bgp_disabled_reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bgp_disabled_reason_other_, &other->_impl_.bgp_disabled_reason_other_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_manufacturer_, &other->_impl_.device_manufacturer_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_alert_, &other->_impl_.device_alert_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.role_, &other->_impl_.role_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_bgp_credential_name_, &other->_impl_.device_bgp_credential_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.flow_snmp_credential_name_, &other->_impl_.flow_snmp_credential_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.monitoring_template_id_)
      + sizeof(DeviceDetailed::_impl_.monitoring_template_id_)
      - PROTOBUF_FIELD_OFFSET(DeviceDetailed, _impl_.site_)>(
          reinterpret_cast<char*>(&_impl_.site_),
          reinterpret_cast<char*>(&other->_impl_.site_));
}

::google::protobuf::Metadata DeviceDetailed::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeviceQuery::_Internal {
 public:
};

DeviceQuery::DeviceQuery(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.DeviceQuery)
}
DeviceQuery::DeviceQuery(
    ::google::protobuf::Arena* arena, const DeviceQuery& from)
    : DeviceQuery(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE DeviceQuery::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DeviceQuery::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.no_custom_columns_ = {};
}
DeviceQuery::~DeviceQuery() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.DeviceQuery)
  SharedDtor(*this);
}
inline void DeviceQuery::SharedDtor(MessageLite& self) {
  DeviceQuery& this_ = static_cast<DeviceQuery&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* DeviceQuery::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeviceQuery(arena);
}
constexpr auto DeviceQuery::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DeviceQuery),
                                            alignof(DeviceQuery));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeviceQuery::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeviceQuery_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeviceQuery::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeviceQuery>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeviceQuery::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeviceQuery>(), &DeviceQuery::ByteSizeLong,
            &DeviceQuery::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeviceQuery, _impl_._cached_size_),
        false,
    },
    &DeviceQuery::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeviceQuery::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> DeviceQuery::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceQuery>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool no_custom_columns = 1 [json_name = "noCustomColumns"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DeviceQuery, _impl_.no_custom_columns_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceQuery, _impl_.no_custom_columns_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool no_custom_columns = 1 [json_name = "noCustomColumns"];
    {PROTOBUF_FIELD_OFFSET(DeviceQuery, _impl_.no_custom_columns_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void DeviceQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.DeviceQuery)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.no_custom_columns_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeviceQuery::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeviceQuery& this_ = static_cast<const DeviceQuery&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeviceQuery::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeviceQuery& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.DeviceQuery)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool no_custom_columns = 1 [json_name = "noCustomColumns"];
          if (this_._internal_no_custom_columns() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_no_custom_columns(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.DeviceQuery)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeviceQuery::ByteSizeLong(const MessageLite& base) {
          const DeviceQuery& this_ = static_cast<const DeviceQuery&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeviceQuery::ByteSizeLong() const {
          const DeviceQuery& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.DeviceQuery)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bool no_custom_columns = 1 [json_name = "noCustomColumns"];
            if (this_._internal_no_custom_columns() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeviceQuery::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeviceQuery*>(&to_msg);
  auto& from = static_cast<const DeviceQuery&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.DeviceQuery)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_no_custom_columns() != 0) {
    _this->_impl_.no_custom_columns_ = from._impl_.no_custom_columns_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceQuery::CopyFrom(const DeviceQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.DeviceQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeviceQuery::InternalSwap(DeviceQuery* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.no_custom_columns_, other->_impl_.no_custom_columns_);
}

::google::protobuf::Metadata DeviceQuery::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LabelConcise::_Internal {
 public:
};

LabelConcise::LabelConcise(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.LabelConcise)
}
LabelConcise::LabelConcise(
    ::google::protobuf::Arena* arena, const LabelConcise& from)
    : LabelConcise(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE LabelConcise::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LabelConcise::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
LabelConcise::~LabelConcise() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.LabelConcise)
  SharedDtor(*this);
}
inline void LabelConcise::SharedDtor(MessageLite& self) {
  LabelConcise& this_ = static_cast<LabelConcise&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* LabelConcise::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LabelConcise(arena);
}
constexpr auto LabelConcise::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LabelConcise),
                                            alignof(LabelConcise));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LabelConcise::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LabelConcise_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LabelConcise::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LabelConcise>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LabelConcise::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LabelConcise>(), &LabelConcise::ByteSizeLong,
            &LabelConcise::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LabelConcise, _impl_._cached_size_),
        false,
    },
    &LabelConcise::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LabelConcise::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> LabelConcise::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::LabelConcise>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LabelConcise, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LabelConcise, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(LabelConcise, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void LabelConcise::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.LabelConcise)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LabelConcise::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LabelConcise& this_ = static_cast<const LabelConcise&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LabelConcise::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LabelConcise& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.LabelConcise)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.LabelConcise)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LabelConcise::ByteSizeLong(const MessageLite& base) {
          const LabelConcise& this_ = static_cast<const LabelConcise&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LabelConcise::ByteSizeLong() const {
          const LabelConcise& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.LabelConcise)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint32 id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LabelConcise::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LabelConcise*>(&to_msg);
  auto& from = static_cast<const LabelConcise&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.LabelConcise)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LabelConcise::CopyFrom(const LabelConcise& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.LabelConcise)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LabelConcise::InternalSwap(LabelConcise* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata LabelConcise::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListDevicesRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ListDevicesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListDevicesRequest, _impl_._has_bits_);
};

ListDevicesRequest::ListDevicesRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.ListDevicesRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListDevicesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::ListDevicesRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ListDevicesRequest::ListDevicesRequest(
    ::google::protobuf::Arena* arena,
    const ListDevicesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListDevicesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.query_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceQuery>(
                              arena, *from._impl_.query_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.ListDevicesRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListDevicesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ListDevicesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.query_ = {};
}
ListDevicesRequest::~ListDevicesRequest() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.ListDevicesRequest)
  SharedDtor(*this);
}
inline void ListDevicesRequest::SharedDtor(MessageLite& self) {
  ListDevicesRequest& this_ = static_cast<ListDevicesRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.query_;
  this_._impl_.~Impl_();
}

inline void* ListDevicesRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListDevicesRequest(arena);
}
constexpr auto ListDevicesRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ListDevicesRequest),
                                            alignof(ListDevicesRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListDevicesRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListDevicesRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListDevicesRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ListDevicesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListDevicesRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ListDevicesRequest>(), &ListDevicesRequest::ByteSizeLong,
            &ListDevicesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListDevicesRequest, _impl_._cached_size_),
        false,
    },
    &ListDevicesRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListDevicesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ListDevicesRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListDevicesRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::ListDevicesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.device.v202504beta2.DeviceQuery query = 1 [json_name = "query"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ListDevicesRequest, _impl_.query_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.device.v202504beta2.DeviceQuery query = 1 [json_name = "query"];
    {PROTOBUF_FIELD_OFFSET(ListDevicesRequest, _impl_.query_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceQuery>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ListDevicesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.ListDevicesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.query_ != nullptr);
    _impl_.query_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ListDevicesRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ListDevicesRequest& this_ = static_cast<const ListDevicesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ListDevicesRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ListDevicesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.ListDevicesRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.device.v202504beta2.DeviceQuery query = 1 [json_name = "query"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.query_, this_._impl_.query_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.ListDevicesRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ListDevicesRequest::ByteSizeLong(const MessageLite& base) {
          const ListDevicesRequest& this_ = static_cast<const ListDevicesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ListDevicesRequest::ByteSizeLong() const {
          const ListDevicesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.ListDevicesRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.device.v202504beta2.DeviceQuery query = 1 [json_name = "query"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.query_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ListDevicesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListDevicesRequest*>(&to_msg);
  auto& from = static_cast<const ListDevicesRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.ListDevicesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.query_ != nullptr);
    if (_this->_impl_.query_ == nullptr) {
      _this->_impl_.query_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceQuery>(arena, *from._impl_.query_);
    } else {
      _this->_impl_.query_->MergeFrom(*from._impl_.query_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListDevicesRequest::CopyFrom(const ListDevicesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.ListDevicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListDevicesRequest::InternalSwap(ListDevicesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.query_, other->_impl_.query_);
}

::google::protobuf::Metadata ListDevicesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListDevicesResponse::_Internal {
 public:
};

ListDevicesResponse::ListDevicesResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.ListDevicesResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListDevicesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::ListDevicesResponse& from_msg)
      : devices_{visibility, arena, from.devices_},
        _cached_size_{0} {}

ListDevicesResponse::ListDevicesResponse(
    ::google::protobuf::Arena* arena,
    const ListDevicesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListDevicesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.invalid_count_ = from._impl_.invalid_count_;

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.ListDevicesResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListDevicesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : devices_{visibility, arena},
        _cached_size_{0} {}

inline void ListDevicesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.invalid_count_ = {};
}
ListDevicesResponse::~ListDevicesResponse() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.ListDevicesResponse)
  SharedDtor(*this);
}
inline void ListDevicesResponse::SharedDtor(MessageLite& self) {
  ListDevicesResponse& this_ = static_cast<ListDevicesResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ListDevicesResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListDevicesResponse(arena);
}
constexpr auto ListDevicesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListDevicesResponse, _impl_.devices_) +
          decltype(ListDevicesResponse::_impl_.devices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ListDevicesResponse), alignof(ListDevicesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListDevicesResponse::PlacementNew_,
                                 sizeof(ListDevicesResponse),
                                 alignof(ListDevicesResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListDevicesResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListDevicesResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListDevicesResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ListDevicesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListDevicesResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ListDevicesResponse>(), &ListDevicesResponse::ByteSizeLong,
            &ListDevicesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListDevicesResponse, _impl_._cached_size_),
        false,
    },
    &ListDevicesResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListDevicesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ListDevicesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::ListDevicesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListDevicesResponse, _impl_.invalid_count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ListDevicesResponse, _impl_.invalid_count_)}},
    // repeated .kentik.device.v202504beta2.DeviceDetailed devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListDevicesResponse, _impl_.devices_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .kentik.device.v202504beta2.DeviceDetailed devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(ListDevicesResponse, _impl_.devices_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(ListDevicesResponse, _impl_.invalid_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceDetailed>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ListDevicesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.ListDevicesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.devices_.Clear();
  _impl_.invalid_count_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ListDevicesResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ListDevicesResponse& this_ = static_cast<const ListDevicesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ListDevicesResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ListDevicesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.ListDevicesResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .kentik.device.v202504beta2.DeviceDetailed devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_devices_size());
               i < n; i++) {
            const auto& repfield = this_._internal_devices().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (this_._internal_invalid_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_invalid_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.ListDevicesResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ListDevicesResponse::ByteSizeLong(const MessageLite& base) {
          const ListDevicesResponse& this_ = static_cast<const ListDevicesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ListDevicesResponse::ByteSizeLong() const {
          const ListDevicesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.ListDevicesResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.device.v202504beta2.DeviceDetailed devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_devices_size();
              for (const auto& msg : this_._internal_devices()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint32 invalid_count = 2 [json_name = "invalidCount", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (this_._internal_invalid_count() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_invalid_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ListDevicesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListDevicesResponse*>(&to_msg);
  auto& from = static_cast<const ListDevicesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.ListDevicesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_devices()->MergeFrom(
      from._internal_devices());
  if (from._internal_invalid_count() != 0) {
    _this->_impl_.invalid_count_ = from._impl_.invalid_count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListDevicesResponse::CopyFrom(const ListDevicesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.ListDevicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListDevicesResponse::InternalSwap(ListDevicesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.devices_.InternalSwap(&other->_impl_.devices_);
        swap(_impl_.invalid_count_, other->_impl_.invalid_count_);
}

::google::protobuf::Metadata ListDevicesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetDeviceRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetDeviceRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetDeviceRequest, _impl_._has_bits_);
};

GetDeviceRequest::GetDeviceRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.GetDeviceRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetDeviceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::GetDeviceRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

GetDeviceRequest::GetDeviceRequest(
    ::google::protobuf::Arena* arena,
    const GetDeviceRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetDeviceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.query_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceQuery>(
                              arena, *from._impl_.query_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.GetDeviceRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetDeviceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void GetDeviceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.query_ = {};
}
GetDeviceRequest::~GetDeviceRequest() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.GetDeviceRequest)
  SharedDtor(*this);
}
inline void GetDeviceRequest::SharedDtor(MessageLite& self) {
  GetDeviceRequest& this_ = static_cast<GetDeviceRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  delete this_._impl_.query_;
  this_._impl_.~Impl_();
}

inline void* GetDeviceRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetDeviceRequest(arena);
}
constexpr auto GetDeviceRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetDeviceRequest),
                                            alignof(GetDeviceRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetDeviceRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetDeviceRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetDeviceRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetDeviceRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetDeviceRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetDeviceRequest>(), &GetDeviceRequest::ByteSizeLong,
            &GetDeviceRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetDeviceRequest, _impl_._cached_size_),
        false,
    },
    &GetDeviceRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetDeviceRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 54, 2> GetDeviceRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetDeviceRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::GetDeviceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.device.v202504beta2.DeviceQuery query = 2 [json_name = "query"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GetDeviceRequest, _impl_.query_)}},
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetDeviceRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(GetDeviceRequest, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .kentik.device.v202504beta2.DeviceQuery query = 2 [json_name = "query"];
    {PROTOBUF_FIELD_OFFSET(GetDeviceRequest, _impl_.query_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceQuery>()},
  }}, {{
    "\53\2\0\0\0\0\0\0"
    "kentik.device.v202504beta2.GetDeviceRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void GetDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.GetDeviceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.query_ != nullptr);
    _impl_.query_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetDeviceRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetDeviceRequest& this_ = static_cast<const GetDeviceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetDeviceRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetDeviceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.GetDeviceRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.GetDeviceRequest.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.device.v202504beta2.DeviceQuery query = 2 [json_name = "query"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.query_, this_._impl_.query_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.GetDeviceRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetDeviceRequest::ByteSizeLong(const MessageLite& base) {
          const GetDeviceRequest& this_ = static_cast<const GetDeviceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetDeviceRequest::ByteSizeLong() const {
          const GetDeviceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.GetDeviceRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
           {
            // .kentik.device.v202504beta2.DeviceQuery query = 2 [json_name = "query"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.query_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetDeviceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetDeviceRequest*>(&to_msg);
  auto& from = static_cast<const GetDeviceRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.GetDeviceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.query_ != nullptr);
    if (_this->_impl_.query_ == nullptr) {
      _this->_impl_.query_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceQuery>(arena, *from._impl_.query_);
    } else {
      _this->_impl_.query_->MergeFrom(*from._impl_.query_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetDeviceRequest::CopyFrom(const GetDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.GetDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetDeviceRequest::InternalSwap(GetDeviceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  swap(_impl_.query_, other->_impl_.query_);
}

::google::protobuf::Metadata GetDeviceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetDeviceResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetDeviceResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetDeviceResponse, _impl_._has_bits_);
};

GetDeviceResponse::GetDeviceResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.GetDeviceResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetDeviceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::GetDeviceResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetDeviceResponse::GetDeviceResponse(
    ::google::protobuf::Arena* arena,
    const GetDeviceResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetDeviceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.device_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceDetailed>(
                              arena, *from._impl_.device_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.GetDeviceResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetDeviceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetDeviceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.device_ = {};
}
GetDeviceResponse::~GetDeviceResponse() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.GetDeviceResponse)
  SharedDtor(*this);
}
inline void GetDeviceResponse::SharedDtor(MessageLite& self) {
  GetDeviceResponse& this_ = static_cast<GetDeviceResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.device_;
  this_._impl_.~Impl_();
}

inline void* GetDeviceResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetDeviceResponse(arena);
}
constexpr auto GetDeviceResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetDeviceResponse),
                                            alignof(GetDeviceResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetDeviceResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetDeviceResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetDeviceResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetDeviceResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetDeviceResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetDeviceResponse>(), &GetDeviceResponse::ByteSizeLong,
            &GetDeviceResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetDeviceResponse, _impl_._cached_size_),
        false,
    },
    &GetDeviceResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetDeviceResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetDeviceResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetDeviceResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::GetDeviceResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetDeviceResponse, _impl_.device_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(GetDeviceResponse, _impl_.device_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceDetailed>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetDeviceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.GetDeviceResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.device_ != nullptr);
    _impl_.device_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetDeviceResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetDeviceResponse& this_ = static_cast<const GetDeviceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetDeviceResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetDeviceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.GetDeviceResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.device_, this_._impl_.device_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.GetDeviceResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetDeviceResponse::ByteSizeLong(const MessageLite& base) {
          const GetDeviceResponse& this_ = static_cast<const GetDeviceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetDeviceResponse::ByteSizeLong() const {
          const GetDeviceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.GetDeviceResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.device_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetDeviceResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetDeviceResponse*>(&to_msg);
  auto& from = static_cast<const GetDeviceResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.GetDeviceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.device_ != nullptr);
    if (_this->_impl_.device_ == nullptr) {
      _this->_impl_.device_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceDetailed>(arena, *from._impl_.device_);
    } else {
      _this->_impl_.device_->MergeFrom(*from._impl_.device_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetDeviceResponse::CopyFrom(const GetDeviceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.GetDeviceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetDeviceResponse::InternalSwap(GetDeviceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.device_, other->_impl_.device_);
}

::google::protobuf::Metadata GetDeviceResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateDeviceRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateDeviceRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateDeviceRequest, _impl_._has_bits_);
};

CreateDeviceRequest::CreateDeviceRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.CreateDeviceRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateDeviceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::CreateDeviceRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateDeviceRequest::CreateDeviceRequest(
    ::google::protobuf::Arena* arena,
    const CreateDeviceRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateDeviceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.device_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceConcise>(
                              arena, *from._impl_.device_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.CreateDeviceRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateDeviceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateDeviceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.device_ = {};
}
CreateDeviceRequest::~CreateDeviceRequest() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.CreateDeviceRequest)
  SharedDtor(*this);
}
inline void CreateDeviceRequest::SharedDtor(MessageLite& self) {
  CreateDeviceRequest& this_ = static_cast<CreateDeviceRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.device_;
  this_._impl_.~Impl_();
}

inline void* CreateDeviceRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateDeviceRequest(arena);
}
constexpr auto CreateDeviceRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreateDeviceRequest),
                                            alignof(CreateDeviceRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateDeviceRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateDeviceRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateDeviceRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateDeviceRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateDeviceRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateDeviceRequest>(), &CreateDeviceRequest::ByteSizeLong,
            &CreateDeviceRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateDeviceRequest, _impl_._cached_size_),
        false,
    },
    &CreateDeviceRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateDeviceRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateDeviceRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateDeviceRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::CreateDeviceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.device.v202504beta2.DeviceConcise device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateDeviceRequest, _impl_.device_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.device.v202504beta2.DeviceConcise device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(CreateDeviceRequest, _impl_.device_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceConcise>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CreateDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.CreateDeviceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.device_ != nullptr);
    _impl_.device_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateDeviceRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateDeviceRequest& this_ = static_cast<const CreateDeviceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateDeviceRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateDeviceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.CreateDeviceRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.device.v202504beta2.DeviceConcise device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.device_, this_._impl_.device_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.CreateDeviceRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateDeviceRequest::ByteSizeLong(const MessageLite& base) {
          const CreateDeviceRequest& this_ = static_cast<const CreateDeviceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateDeviceRequest::ByteSizeLong() const {
          const CreateDeviceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.CreateDeviceRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.device.v202504beta2.DeviceConcise device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.device_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateDeviceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateDeviceRequest*>(&to_msg);
  auto& from = static_cast<const CreateDeviceRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.CreateDeviceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.device_ != nullptr);
    if (_this->_impl_.device_ == nullptr) {
      _this->_impl_.device_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceConcise>(arena, *from._impl_.device_);
    } else {
      _this->_impl_.device_->MergeFrom(*from._impl_.device_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateDeviceRequest::CopyFrom(const CreateDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.CreateDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateDeviceRequest::InternalSwap(CreateDeviceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.device_, other->_impl_.device_);
}

::google::protobuf::Metadata CreateDeviceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateDeviceResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CreateDeviceResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateDeviceResponse, _impl_._has_bits_);
};

CreateDeviceResponse::CreateDeviceResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.CreateDeviceResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateDeviceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::CreateDeviceResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateDeviceResponse::CreateDeviceResponse(
    ::google::protobuf::Arena* arena,
    const CreateDeviceResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateDeviceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.device_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceDetailed>(
                              arena, *from._impl_.device_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.CreateDeviceResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateDeviceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateDeviceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.device_ = {};
}
CreateDeviceResponse::~CreateDeviceResponse() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.CreateDeviceResponse)
  SharedDtor(*this);
}
inline void CreateDeviceResponse::SharedDtor(MessageLite& self) {
  CreateDeviceResponse& this_ = static_cast<CreateDeviceResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.device_;
  this_._impl_.~Impl_();
}

inline void* CreateDeviceResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateDeviceResponse(arena);
}
constexpr auto CreateDeviceResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreateDeviceResponse),
                                            alignof(CreateDeviceResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateDeviceResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateDeviceResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateDeviceResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateDeviceResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateDeviceResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateDeviceResponse>(), &CreateDeviceResponse::ByteSizeLong,
            &CreateDeviceResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateDeviceResponse, _impl_._cached_size_),
        false,
    },
    &CreateDeviceResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateDeviceResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateDeviceResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateDeviceResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::CreateDeviceResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateDeviceResponse, _impl_.device_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(CreateDeviceResponse, _impl_.device_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceDetailed>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CreateDeviceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.CreateDeviceResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.device_ != nullptr);
    _impl_.device_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateDeviceResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateDeviceResponse& this_ = static_cast<const CreateDeviceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateDeviceResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateDeviceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.CreateDeviceResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.device_, this_._impl_.device_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.CreateDeviceResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateDeviceResponse::ByteSizeLong(const MessageLite& base) {
          const CreateDeviceResponse& this_ = static_cast<const CreateDeviceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateDeviceResponse::ByteSizeLong() const {
          const CreateDeviceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.CreateDeviceResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.device_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateDeviceResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateDeviceResponse*>(&to_msg);
  auto& from = static_cast<const CreateDeviceResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.CreateDeviceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.device_ != nullptr);
    if (_this->_impl_.device_ == nullptr) {
      _this->_impl_.device_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceDetailed>(arena, *from._impl_.device_);
    } else {
      _this->_impl_.device_->MergeFrom(*from._impl_.device_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateDeviceResponse::CopyFrom(const CreateDeviceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.CreateDeviceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateDeviceResponse::InternalSwap(CreateDeviceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.device_, other->_impl_.device_);
}

::google::protobuf::Metadata CreateDeviceResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateDevicesRequest::_Internal {
 public:
};

CreateDevicesRequest::CreateDevicesRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.CreateDevicesRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateDevicesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::CreateDevicesRequest& from_msg)
      : devices_{visibility, arena, from.devices_},
        _cached_size_{0} {}

CreateDevicesRequest::CreateDevicesRequest(
    ::google::protobuf::Arena* arena,
    const CreateDevicesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateDevicesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.CreateDevicesRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateDevicesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : devices_{visibility, arena},
        _cached_size_{0} {}

inline void CreateDevicesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CreateDevicesRequest::~CreateDevicesRequest() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.CreateDevicesRequest)
  SharedDtor(*this);
}
inline void CreateDevicesRequest::SharedDtor(MessageLite& self) {
  CreateDevicesRequest& this_ = static_cast<CreateDevicesRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* CreateDevicesRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateDevicesRequest(arena);
}
constexpr auto CreateDevicesRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CreateDevicesRequest, _impl_.devices_) +
          decltype(CreateDevicesRequest::_impl_.devices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CreateDevicesRequest), alignof(CreateDevicesRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CreateDevicesRequest::PlacementNew_,
                                 sizeof(CreateDevicesRequest),
                                 alignof(CreateDevicesRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateDevicesRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateDevicesRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateDevicesRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateDevicesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateDevicesRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateDevicesRequest>(), &CreateDevicesRequest::ByteSizeLong,
            &CreateDevicesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateDevicesRequest, _impl_._cached_size_),
        false,
    },
    &CreateDevicesRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateDevicesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateDevicesRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::CreateDevicesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .kentik.device.v202504beta2.DeviceConcise devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CreateDevicesRequest, _impl_.devices_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .kentik.device.v202504beta2.DeviceConcise devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(CreateDevicesRequest, _impl_.devices_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceConcise>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CreateDevicesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.CreateDevicesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.devices_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateDevicesRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateDevicesRequest& this_ = static_cast<const CreateDevicesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateDevicesRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateDevicesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.CreateDevicesRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .kentik.device.v202504beta2.DeviceConcise devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_devices_size());
               i < n; i++) {
            const auto& repfield = this_._internal_devices().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.CreateDevicesRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateDevicesRequest::ByteSizeLong(const MessageLite& base) {
          const CreateDevicesRequest& this_ = static_cast<const CreateDevicesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateDevicesRequest::ByteSizeLong() const {
          const CreateDevicesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.CreateDevicesRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.device.v202504beta2.DeviceConcise devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_devices_size();
              for (const auto& msg : this_._internal_devices()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateDevicesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateDevicesRequest*>(&to_msg);
  auto& from = static_cast<const CreateDevicesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.CreateDevicesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_devices()->MergeFrom(
      from._internal_devices());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateDevicesRequest::CopyFrom(const CreateDevicesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.CreateDevicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateDevicesRequest::InternalSwap(CreateDevicesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.devices_.InternalSwap(&other->_impl_.devices_);
}

::google::protobuf::Metadata CreateDevicesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateDevicesResponse::_Internal {
 public:
};

CreateDevicesResponse::CreateDevicesResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.CreateDevicesResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateDevicesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::CreateDevicesResponse& from_msg)
      : devices_{visibility, arena, from.devices_},
        failed_devices_{visibility, arena, from.failed_devices_},
        _cached_size_{0} {}

CreateDevicesResponse::CreateDevicesResponse(
    ::google::protobuf::Arena* arena,
    const CreateDevicesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateDevicesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.CreateDevicesResponse)
}
inline PROTOBUF_NDEBUG_INLINE CreateDevicesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : devices_{visibility, arena},
        failed_devices_{visibility, arena},
        _cached_size_{0} {}

inline void CreateDevicesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CreateDevicesResponse::~CreateDevicesResponse() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.CreateDevicesResponse)
  SharedDtor(*this);
}
inline void CreateDevicesResponse::SharedDtor(MessageLite& self) {
  CreateDevicesResponse& this_ = static_cast<CreateDevicesResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* CreateDevicesResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CreateDevicesResponse(arena);
}
constexpr auto CreateDevicesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CreateDevicesResponse, _impl_.devices_) +
          decltype(CreateDevicesResponse::_impl_.devices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CreateDevicesResponse, _impl_.failed_devices_) +
          decltype(CreateDevicesResponse::_impl_.failed_devices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CreateDevicesResponse), alignof(CreateDevicesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CreateDevicesResponse::PlacementNew_,
                                 sizeof(CreateDevicesResponse),
                                 alignof(CreateDevicesResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CreateDevicesResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CreateDevicesResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CreateDevicesResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CreateDevicesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CreateDevicesResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CreateDevicesResponse>(), &CreateDevicesResponse::ByteSizeLong,
            &CreateDevicesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CreateDevicesResponse, _impl_._cached_size_),
        false,
    },
    &CreateDevicesResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CreateDevicesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 71, 2> CreateDevicesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::CreateDevicesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string failed_devices = 2 [json_name = "failedDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CreateDevicesResponse, _impl_.failed_devices_)}},
    // repeated .kentik.device.v202504beta2.DeviceDetailed devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CreateDevicesResponse, _impl_.devices_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .kentik.device.v202504beta2.DeviceDetailed devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(CreateDevicesResponse, _impl_.devices_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string failed_devices = 2 [json_name = "failedDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(CreateDevicesResponse, _impl_.failed_devices_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceDetailed>()},
  }}, {{
    "\60\0\16\0\0\0\0\0"
    "kentik.device.v202504beta2.CreateDevicesResponse"
    "failed_devices"
  }},
};

PROTOBUF_NOINLINE void CreateDevicesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.CreateDevicesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.devices_.Clear();
  _impl_.failed_devices_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CreateDevicesResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CreateDevicesResponse& this_ = static_cast<const CreateDevicesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CreateDevicesResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CreateDevicesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.CreateDevicesResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .kentik.device.v202504beta2.DeviceDetailed devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_devices_size());
               i < n; i++) {
            const auto& repfield = this_._internal_devices().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated string failed_devices = 2 [json_name = "failedDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_failed_devices_size(); i < n; ++i) {
            const auto& s = this_._internal_failed_devices().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.CreateDevicesResponse.failed_devices");
            target = stream->WriteString(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.CreateDevicesResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CreateDevicesResponse::ByteSizeLong(const MessageLite& base) {
          const CreateDevicesResponse& this_ = static_cast<const CreateDevicesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CreateDevicesResponse::ByteSizeLong() const {
          const CreateDevicesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.CreateDevicesResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.device.v202504beta2.DeviceDetailed devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_devices_size();
              for (const auto& msg : this_._internal_devices()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string failed_devices = 2 [json_name = "failedDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_failed_devices().size());
              for (int i = 0, n = this_._internal_failed_devices().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_failed_devices().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CreateDevicesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateDevicesResponse*>(&to_msg);
  auto& from = static_cast<const CreateDevicesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.CreateDevicesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_devices()->MergeFrom(
      from._internal_devices());
  _this->_internal_mutable_failed_devices()->MergeFrom(from._internal_failed_devices());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateDevicesResponse::CopyFrom(const CreateDevicesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.CreateDevicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateDevicesResponse::InternalSwap(CreateDevicesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.devices_.InternalSwap(&other->_impl_.devices_);
  _impl_.failed_devices_.InternalSwap(&other->_impl_.failed_devices_);
}

::google::protobuf::Metadata CreateDevicesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateDeviceRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateDeviceRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_._has_bits_);
};

UpdateDeviceRequest::UpdateDeviceRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.UpdateDeviceRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateDeviceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::UpdateDeviceRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateDeviceRequest::UpdateDeviceRequest(
    ::google::protobuf::Arena* arena,
    const UpdateDeviceRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateDeviceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.device_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceConcise>(
                              arena, *from._impl_.device_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.UpdateDeviceRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateDeviceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateDeviceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.device_ = {};
}
UpdateDeviceRequest::~UpdateDeviceRequest() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.UpdateDeviceRequest)
  SharedDtor(*this);
}
inline void UpdateDeviceRequest::SharedDtor(MessageLite& self) {
  UpdateDeviceRequest& this_ = static_cast<UpdateDeviceRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.device_;
  this_._impl_.~Impl_();
}

inline void* UpdateDeviceRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateDeviceRequest(arena);
}
constexpr auto UpdateDeviceRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateDeviceRequest),
                                            alignof(UpdateDeviceRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateDeviceRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateDeviceRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateDeviceRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateDeviceRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateDeviceRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateDeviceRequest>(), &UpdateDeviceRequest::ByteSizeLong,
            &UpdateDeviceRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_._cached_size_),
        false,
    },
    &UpdateDeviceRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateDeviceRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateDeviceRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::UpdateDeviceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.device.v202504beta2.DeviceConcise device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_.device_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.device.v202504beta2.DeviceConcise device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(UpdateDeviceRequest, _impl_.device_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceConcise>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.UpdateDeviceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.device_ != nullptr);
    _impl_.device_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateDeviceRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateDeviceRequest& this_ = static_cast<const UpdateDeviceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateDeviceRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateDeviceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.UpdateDeviceRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.device.v202504beta2.DeviceConcise device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.device_, this_._impl_.device_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.UpdateDeviceRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateDeviceRequest::ByteSizeLong(const MessageLite& base) {
          const UpdateDeviceRequest& this_ = static_cast<const UpdateDeviceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateDeviceRequest::ByteSizeLong() const {
          const UpdateDeviceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.UpdateDeviceRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.device.v202504beta2.DeviceConcise device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.device_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateDeviceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateDeviceRequest*>(&to_msg);
  auto& from = static_cast<const UpdateDeviceRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.UpdateDeviceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.device_ != nullptr);
    if (_this->_impl_.device_ == nullptr) {
      _this->_impl_.device_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceConcise>(arena, *from._impl_.device_);
    } else {
      _this->_impl_.device_->MergeFrom(*from._impl_.device_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateDeviceRequest::CopyFrom(const UpdateDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.UpdateDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateDeviceRequest::InternalSwap(UpdateDeviceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.device_, other->_impl_.device_);
}

::google::protobuf::Metadata UpdateDeviceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateDeviceResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateDeviceResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateDeviceResponse, _impl_._has_bits_);
};

UpdateDeviceResponse::UpdateDeviceResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.UpdateDeviceResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateDeviceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::UpdateDeviceResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateDeviceResponse::UpdateDeviceResponse(
    ::google::protobuf::Arena* arena,
    const UpdateDeviceResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateDeviceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.device_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceDetailed>(
                              arena, *from._impl_.device_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.UpdateDeviceResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateDeviceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateDeviceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.device_ = {};
}
UpdateDeviceResponse::~UpdateDeviceResponse() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.UpdateDeviceResponse)
  SharedDtor(*this);
}
inline void UpdateDeviceResponse::SharedDtor(MessageLite& self) {
  UpdateDeviceResponse& this_ = static_cast<UpdateDeviceResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.device_;
  this_._impl_.~Impl_();
}

inline void* UpdateDeviceResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateDeviceResponse(arena);
}
constexpr auto UpdateDeviceResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateDeviceResponse),
                                            alignof(UpdateDeviceResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateDeviceResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateDeviceResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateDeviceResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateDeviceResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateDeviceResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateDeviceResponse>(), &UpdateDeviceResponse::ByteSizeLong,
            &UpdateDeviceResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateDeviceResponse, _impl_._cached_size_),
        false,
    },
    &UpdateDeviceResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateDeviceResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateDeviceResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateDeviceResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::UpdateDeviceResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateDeviceResponse, _impl_.device_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(UpdateDeviceResponse, _impl_.device_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceDetailed>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateDeviceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.UpdateDeviceResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.device_ != nullptr);
    _impl_.device_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateDeviceResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateDeviceResponse& this_ = static_cast<const UpdateDeviceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateDeviceResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateDeviceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.UpdateDeviceResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.device_, this_._impl_.device_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.UpdateDeviceResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateDeviceResponse::ByteSizeLong(const MessageLite& base) {
          const UpdateDeviceResponse& this_ = static_cast<const UpdateDeviceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateDeviceResponse::ByteSizeLong() const {
          const UpdateDeviceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.UpdateDeviceResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.device_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateDeviceResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateDeviceResponse*>(&to_msg);
  auto& from = static_cast<const UpdateDeviceResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.UpdateDeviceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.device_ != nullptr);
    if (_this->_impl_.device_ == nullptr) {
      _this->_impl_.device_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceDetailed>(arena, *from._impl_.device_);
    } else {
      _this->_impl_.device_->MergeFrom(*from._impl_.device_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateDeviceResponse::CopyFrom(const UpdateDeviceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.UpdateDeviceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateDeviceResponse::InternalSwap(UpdateDeviceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.device_, other->_impl_.device_);
}

::google::protobuf::Metadata UpdateDeviceResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateDevicesRequest::_Internal {
 public:
};

UpdateDevicesRequest::UpdateDevicesRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.UpdateDevicesRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateDevicesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::UpdateDevicesRequest& from_msg)
      : devices_{visibility, arena, from.devices_},
        _cached_size_{0} {}

UpdateDevicesRequest::UpdateDevicesRequest(
    ::google::protobuf::Arena* arena,
    const UpdateDevicesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateDevicesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.UpdateDevicesRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateDevicesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : devices_{visibility, arena},
        _cached_size_{0} {}

inline void UpdateDevicesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UpdateDevicesRequest::~UpdateDevicesRequest() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.UpdateDevicesRequest)
  SharedDtor(*this);
}
inline void UpdateDevicesRequest::SharedDtor(MessageLite& self) {
  UpdateDevicesRequest& this_ = static_cast<UpdateDevicesRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* UpdateDevicesRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateDevicesRequest(arena);
}
constexpr auto UpdateDevicesRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UpdateDevicesRequest, _impl_.devices_) +
          decltype(UpdateDevicesRequest::_impl_.devices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(UpdateDevicesRequest), alignof(UpdateDevicesRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UpdateDevicesRequest::PlacementNew_,
                                 sizeof(UpdateDevicesRequest),
                                 alignof(UpdateDevicesRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateDevicesRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateDevicesRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateDevicesRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateDevicesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateDevicesRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateDevicesRequest>(), &UpdateDevicesRequest::ByteSizeLong,
            &UpdateDevicesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateDevicesRequest, _impl_._cached_size_),
        false,
    },
    &UpdateDevicesRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateDevicesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateDevicesRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::UpdateDevicesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .kentik.device.v202504beta2.DeviceConcise devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateDevicesRequest, _impl_.devices_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .kentik.device.v202504beta2.DeviceConcise devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(UpdateDevicesRequest, _impl_.devices_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceConcise>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateDevicesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.UpdateDevicesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.devices_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateDevicesRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateDevicesRequest& this_ = static_cast<const UpdateDevicesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateDevicesRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateDevicesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.UpdateDevicesRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .kentik.device.v202504beta2.DeviceConcise devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_devices_size());
               i < n; i++) {
            const auto& repfield = this_._internal_devices().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.UpdateDevicesRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateDevicesRequest::ByteSizeLong(const MessageLite& base) {
          const UpdateDevicesRequest& this_ = static_cast<const UpdateDevicesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateDevicesRequest::ByteSizeLong() const {
          const UpdateDevicesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.UpdateDevicesRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.device.v202504beta2.DeviceConcise devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_devices_size();
              for (const auto& msg : this_._internal_devices()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateDevicesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateDevicesRequest*>(&to_msg);
  auto& from = static_cast<const UpdateDevicesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.UpdateDevicesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_devices()->MergeFrom(
      from._internal_devices());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateDevicesRequest::CopyFrom(const UpdateDevicesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.UpdateDevicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateDevicesRequest::InternalSwap(UpdateDevicesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.devices_.InternalSwap(&other->_impl_.devices_);
}

::google::protobuf::Metadata UpdateDevicesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateDevicesResponse::_Internal {
 public:
};

UpdateDevicesResponse::UpdateDevicesResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.UpdateDevicesResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateDevicesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::UpdateDevicesResponse& from_msg)
      : devices_{visibility, arena, from.devices_},
        failed_devices_{visibility, arena, from.failed_devices_},
        _cached_size_{0} {}

UpdateDevicesResponse::UpdateDevicesResponse(
    ::google::protobuf::Arena* arena,
    const UpdateDevicesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateDevicesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.UpdateDevicesResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateDevicesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : devices_{visibility, arena},
        failed_devices_{visibility, arena},
        _cached_size_{0} {}

inline void UpdateDevicesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UpdateDevicesResponse::~UpdateDevicesResponse() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.UpdateDevicesResponse)
  SharedDtor(*this);
}
inline void UpdateDevicesResponse::SharedDtor(MessageLite& self) {
  UpdateDevicesResponse& this_ = static_cast<UpdateDevicesResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* UpdateDevicesResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateDevicesResponse(arena);
}
constexpr auto UpdateDevicesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UpdateDevicesResponse, _impl_.devices_) +
          decltype(UpdateDevicesResponse::_impl_.devices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(UpdateDevicesResponse, _impl_.failed_devices_) +
          decltype(UpdateDevicesResponse::_impl_.failed_devices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(UpdateDevicesResponse), alignof(UpdateDevicesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UpdateDevicesResponse::PlacementNew_,
                                 sizeof(UpdateDevicesResponse),
                                 alignof(UpdateDevicesResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateDevicesResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateDevicesResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateDevicesResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateDevicesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateDevicesResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateDevicesResponse>(), &UpdateDevicesResponse::ByteSizeLong,
            &UpdateDevicesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateDevicesResponse, _impl_._cached_size_),
        false,
    },
    &UpdateDevicesResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateDevicesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 71, 2> UpdateDevicesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::UpdateDevicesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string failed_devices = 2 [json_name = "failedDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateDevicesResponse, _impl_.failed_devices_)}},
    // repeated .kentik.device.v202504beta2.DeviceDetailed devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateDevicesResponse, _impl_.devices_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .kentik.device.v202504beta2.DeviceDetailed devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(UpdateDevicesResponse, _impl_.devices_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string failed_devices = 2 [json_name = "failedDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(UpdateDevicesResponse, _impl_.failed_devices_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceDetailed>()},
  }}, {{
    "\60\0\16\0\0\0\0\0"
    "kentik.device.v202504beta2.UpdateDevicesResponse"
    "failed_devices"
  }},
};

PROTOBUF_NOINLINE void UpdateDevicesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.UpdateDevicesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.devices_.Clear();
  _impl_.failed_devices_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateDevicesResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateDevicesResponse& this_ = static_cast<const UpdateDevicesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateDevicesResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateDevicesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.UpdateDevicesResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .kentik.device.v202504beta2.DeviceDetailed devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_devices_size());
               i < n; i++) {
            const auto& repfield = this_._internal_devices().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated string failed_devices = 2 [json_name = "failedDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_failed_devices_size(); i < n; ++i) {
            const auto& s = this_._internal_failed_devices().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.UpdateDevicesResponse.failed_devices");
            target = stream->WriteString(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.UpdateDevicesResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateDevicesResponse::ByteSizeLong(const MessageLite& base) {
          const UpdateDevicesResponse& this_ = static_cast<const UpdateDevicesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateDevicesResponse::ByteSizeLong() const {
          const UpdateDevicesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.UpdateDevicesResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.device.v202504beta2.DeviceDetailed devices = 1 [json_name = "devices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_devices_size();
              for (const auto& msg : this_._internal_devices()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string failed_devices = 2 [json_name = "failedDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_failed_devices().size());
              for (int i = 0, n = this_._internal_failed_devices().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_failed_devices().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateDevicesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateDevicesResponse*>(&to_msg);
  auto& from = static_cast<const UpdateDevicesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.UpdateDevicesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_devices()->MergeFrom(
      from._internal_devices());
  _this->_internal_mutable_failed_devices()->MergeFrom(from._internal_failed_devices());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateDevicesResponse::CopyFrom(const UpdateDevicesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.UpdateDevicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateDevicesResponse::InternalSwap(UpdateDevicesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.devices_.InternalSwap(&other->_impl_.devices_);
  _impl_.failed_devices_.InternalSwap(&other->_impl_.failed_devices_);
}

::google::protobuf::Metadata UpdateDevicesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateDeviceLabelsRequest::_Internal {
 public:
};

UpdateDeviceLabelsRequest::UpdateDeviceLabelsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.UpdateDeviceLabelsRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateDeviceLabelsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::UpdateDeviceLabelsRequest& from_msg)
      : labels_{visibility, arena, from.labels_},
        id_(arena, from.id_),
        _cached_size_{0} {}

UpdateDeviceLabelsRequest::UpdateDeviceLabelsRequest(
    ::google::protobuf::Arena* arena,
    const UpdateDeviceLabelsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateDeviceLabelsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.UpdateDeviceLabelsRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateDeviceLabelsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : labels_{visibility, arena},
        id_(arena),
        _cached_size_{0} {}

inline void UpdateDeviceLabelsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UpdateDeviceLabelsRequest::~UpdateDeviceLabelsRequest() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.UpdateDeviceLabelsRequest)
  SharedDtor(*this);
}
inline void UpdateDeviceLabelsRequest::SharedDtor(MessageLite& self) {
  UpdateDeviceLabelsRequest& this_ = static_cast<UpdateDeviceLabelsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UpdateDeviceLabelsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateDeviceLabelsRequest(arena);
}
constexpr auto UpdateDeviceLabelsRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UpdateDeviceLabelsRequest, _impl_.labels_) +
          decltype(UpdateDeviceLabelsRequest::_impl_.labels_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(UpdateDeviceLabelsRequest), alignof(UpdateDeviceLabelsRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UpdateDeviceLabelsRequest::PlacementNew_,
                                 sizeof(UpdateDeviceLabelsRequest),
                                 alignof(UpdateDeviceLabelsRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateDeviceLabelsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateDeviceLabelsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateDeviceLabelsRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateDeviceLabelsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateDeviceLabelsRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateDeviceLabelsRequest>(), &UpdateDeviceLabelsRequest::ByteSizeLong,
            &UpdateDeviceLabelsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateDeviceLabelsRequest, _impl_._cached_size_),
        false,
    },
    &UpdateDeviceLabelsRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateDeviceLabelsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 63, 2> UpdateDeviceLabelsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::UpdateDeviceLabelsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .kentik.device.v202504beta2.LabelConcise labels = 2 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateDeviceLabelsRequest, _impl_.labels_)}},
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateDeviceLabelsRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(UpdateDeviceLabelsRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .kentik.device.v202504beta2.LabelConcise labels = 2 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(UpdateDeviceLabelsRequest, _impl_.labels_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::LabelConcise>()},
  }}, {{
    "\64\2\0\0\0\0\0\0"
    "kentik.device.v202504beta2.UpdateDeviceLabelsRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void UpdateDeviceLabelsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.UpdateDeviceLabelsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.labels_.Clear();
  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateDeviceLabelsRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateDeviceLabelsRequest& this_ = static_cast<const UpdateDeviceLabelsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateDeviceLabelsRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateDeviceLabelsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.UpdateDeviceLabelsRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.UpdateDeviceLabelsRequest.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .kentik.device.v202504beta2.LabelConcise labels = 2 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_labels_size());
               i < n; i++) {
            const auto& repfield = this_._internal_labels().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.UpdateDeviceLabelsRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateDeviceLabelsRequest::ByteSizeLong(const MessageLite& base) {
          const UpdateDeviceLabelsRequest& this_ = static_cast<const UpdateDeviceLabelsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateDeviceLabelsRequest::ByteSizeLong() const {
          const UpdateDeviceLabelsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.UpdateDeviceLabelsRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .kentik.device.v202504beta2.LabelConcise labels = 2 [json_name = "labels", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size += 1UL * this_._internal_labels_size();
              for (const auto& msg : this_._internal_labels()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateDeviceLabelsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateDeviceLabelsRequest*>(&to_msg);
  auto& from = static_cast<const UpdateDeviceLabelsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.UpdateDeviceLabelsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_labels()->MergeFrom(
      from._internal_labels());
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateDeviceLabelsRequest::CopyFrom(const UpdateDeviceLabelsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.UpdateDeviceLabelsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateDeviceLabelsRequest::InternalSwap(UpdateDeviceLabelsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.labels_.InternalSwap(&other->_impl_.labels_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata UpdateDeviceLabelsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateDeviceLabelsResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateDeviceLabelsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateDeviceLabelsResponse, _impl_._has_bits_);
};

UpdateDeviceLabelsResponse::UpdateDeviceLabelsResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.UpdateDeviceLabelsResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateDeviceLabelsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::UpdateDeviceLabelsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateDeviceLabelsResponse::UpdateDeviceLabelsResponse(
    ::google::protobuf::Arena* arena,
    const UpdateDeviceLabelsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateDeviceLabelsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.device_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceDetailed>(
                              arena, *from._impl_.device_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.UpdateDeviceLabelsResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateDeviceLabelsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateDeviceLabelsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.device_ = {};
}
UpdateDeviceLabelsResponse::~UpdateDeviceLabelsResponse() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.UpdateDeviceLabelsResponse)
  SharedDtor(*this);
}
inline void UpdateDeviceLabelsResponse::SharedDtor(MessageLite& self) {
  UpdateDeviceLabelsResponse& this_ = static_cast<UpdateDeviceLabelsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.device_;
  this_._impl_.~Impl_();
}

inline void* UpdateDeviceLabelsResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateDeviceLabelsResponse(arena);
}
constexpr auto UpdateDeviceLabelsResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateDeviceLabelsResponse),
                                            alignof(UpdateDeviceLabelsResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateDeviceLabelsResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateDeviceLabelsResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateDeviceLabelsResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateDeviceLabelsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateDeviceLabelsResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateDeviceLabelsResponse>(), &UpdateDeviceLabelsResponse::ByteSizeLong,
            &UpdateDeviceLabelsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateDeviceLabelsResponse, _impl_._cached_size_),
        false,
    },
    &UpdateDeviceLabelsResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateDeviceLabelsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateDeviceLabelsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateDeviceLabelsResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::UpdateDeviceLabelsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateDeviceLabelsResponse, _impl_.device_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(UpdateDeviceLabelsResponse, _impl_.device_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeviceDetailed>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateDeviceLabelsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.UpdateDeviceLabelsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.device_ != nullptr);
    _impl_.device_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateDeviceLabelsResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateDeviceLabelsResponse& this_ = static_cast<const UpdateDeviceLabelsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateDeviceLabelsResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateDeviceLabelsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.UpdateDeviceLabelsResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.device_, this_._impl_.device_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.UpdateDeviceLabelsResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateDeviceLabelsResponse::ByteSizeLong(const MessageLite& base) {
          const UpdateDeviceLabelsResponse& this_ = static_cast<const UpdateDeviceLabelsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateDeviceLabelsResponse::ByteSizeLong() const {
          const UpdateDeviceLabelsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.UpdateDeviceLabelsResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .kentik.device.v202504beta2.DeviceDetailed device = 1 [json_name = "device", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.device_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateDeviceLabelsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateDeviceLabelsResponse*>(&to_msg);
  auto& from = static_cast<const UpdateDeviceLabelsResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.UpdateDeviceLabelsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.device_ != nullptr);
    if (_this->_impl_.device_ == nullptr) {
      _this->_impl_.device_ =
          ::google::protobuf::Message::CopyConstruct<::kentik::device::v202504beta2::DeviceDetailed>(arena, *from._impl_.device_);
    } else {
      _this->_impl_.device_->MergeFrom(*from._impl_.device_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateDeviceLabelsResponse::CopyFrom(const UpdateDeviceLabelsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.UpdateDeviceLabelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateDeviceLabelsResponse::InternalSwap(UpdateDeviceLabelsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.device_, other->_impl_.device_);
}

::google::protobuf::Metadata UpdateDeviceLabelsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteDeviceRequest::_Internal {
 public:
};

DeleteDeviceRequest::DeleteDeviceRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.DeleteDeviceRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteDeviceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::DeleteDeviceRequest& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

DeleteDeviceRequest::DeleteDeviceRequest(
    ::google::protobuf::Arena* arena,
    const DeleteDeviceRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteDeviceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.DeleteDeviceRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteDeviceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void DeleteDeviceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeleteDeviceRequest::~DeleteDeviceRequest() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.DeleteDeviceRequest)
  SharedDtor(*this);
}
inline void DeleteDeviceRequest::SharedDtor(MessageLite& self) {
  DeleteDeviceRequest& this_ = static_cast<DeleteDeviceRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DeleteDeviceRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeleteDeviceRequest(arena);
}
constexpr auto DeleteDeviceRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeleteDeviceRequest),
                                            alignof(DeleteDeviceRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeleteDeviceRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeleteDeviceRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeleteDeviceRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeleteDeviceRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeleteDeviceRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeleteDeviceRequest>(), &DeleteDeviceRequest::ByteSizeLong,
            &DeleteDeviceRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeleteDeviceRequest, _impl_._cached_size_),
        false,
    },
    &DeleteDeviceRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeleteDeviceRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 57, 2> DeleteDeviceRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeleteDeviceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteDeviceRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeleteDeviceRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\2\0\0\0\0\0\0"
    "kentik.device.v202504beta2.DeleteDeviceRequest"
    "id"
  }},
};

PROTOBUF_NOINLINE void DeleteDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.DeleteDeviceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeleteDeviceRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeleteDeviceRequest& this_ = static_cast<const DeleteDeviceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeleteDeviceRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeleteDeviceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.DeleteDeviceRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeleteDeviceRequest.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.DeleteDeviceRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeleteDeviceRequest::ByteSizeLong(const MessageLite& base) {
          const DeleteDeviceRequest& this_ = static_cast<const DeleteDeviceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeleteDeviceRequest::ByteSizeLong() const {
          const DeleteDeviceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.DeleteDeviceRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string id = 1 [json_name = "id", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeleteDeviceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteDeviceRequest*>(&to_msg);
  auto& from = static_cast<const DeleteDeviceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.DeleteDeviceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteDeviceRequest::CopyFrom(const DeleteDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.DeleteDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeleteDeviceRequest::InternalSwap(DeleteDeviceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
}

::google::protobuf::Metadata DeleteDeviceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteDeviceResponse::_Internal {
 public:
};

DeleteDeviceResponse::DeleteDeviceResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.DeleteDeviceResponse)
}
DeleteDeviceResponse::DeleteDeviceResponse(
    ::google::protobuf::Arena* arena,
    const DeleteDeviceResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteDeviceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.DeleteDeviceResponse)
}

inline void* DeleteDeviceResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeleteDeviceResponse(arena);
}
constexpr auto DeleteDeviceResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DeleteDeviceResponse),
                                            alignof(DeleteDeviceResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeleteDeviceResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeleteDeviceResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeleteDeviceResponse::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<DeleteDeviceResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeleteDeviceResponse::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<DeleteDeviceResponse>(), &DeleteDeviceResponse::ByteSizeLong,
            &DeleteDeviceResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeleteDeviceResponse, _impl_._cached_size_),
        false,
    },
    &DeleteDeviceResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeleteDeviceResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> DeleteDeviceResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeleteDeviceResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata DeleteDeviceResponse::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteDevicesRequest::_Internal {
 public:
};

DeleteDevicesRequest::DeleteDevicesRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.DeleteDevicesRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteDevicesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::DeleteDevicesRequest& from_msg)
      : ids_{visibility, arena, from.ids_},
        _cached_size_{0} {}

DeleteDevicesRequest::DeleteDevicesRequest(
    ::google::protobuf::Arena* arena,
    const DeleteDevicesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteDevicesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.DeleteDevicesRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteDevicesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : ids_{visibility, arena},
        _cached_size_{0} {}

inline void DeleteDevicesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeleteDevicesRequest::~DeleteDevicesRequest() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.DeleteDevicesRequest)
  SharedDtor(*this);
}
inline void DeleteDevicesRequest::SharedDtor(MessageLite& self) {
  DeleteDevicesRequest& this_ = static_cast<DeleteDevicesRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* DeleteDevicesRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeleteDevicesRequest(arena);
}
constexpr auto DeleteDevicesRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DeleteDevicesRequest, _impl_.ids_) +
          decltype(DeleteDevicesRequest::_impl_.ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(DeleteDevicesRequest), alignof(DeleteDevicesRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DeleteDevicesRequest::PlacementNew_,
                                 sizeof(DeleteDevicesRequest),
                                 alignof(DeleteDevicesRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeleteDevicesRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeleteDevicesRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeleteDevicesRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeleteDevicesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeleteDevicesRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeleteDevicesRequest>(), &DeleteDevicesRequest::ByteSizeLong,
            &DeleteDevicesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeleteDevicesRequest, _impl_._cached_size_),
        false,
    },
    &DeleteDevicesRequest::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeleteDevicesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 59, 2> DeleteDevicesRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeleteDevicesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string ids = 1 [json_name = "ids", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteDevicesRequest, _impl_.ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string ids = 1 [json_name = "ids", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeleteDevicesRequest, _impl_.ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\57\3\0\0\0\0\0\0"
    "kentik.device.v202504beta2.DeleteDevicesRequest"
    "ids"
  }},
};

PROTOBUF_NOINLINE void DeleteDevicesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.DeleteDevicesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ids_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeleteDevicesRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeleteDevicesRequest& this_ = static_cast<const DeleteDevicesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeleteDevicesRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeleteDevicesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.DeleteDevicesRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string ids = 1 [json_name = "ids", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeleteDevicesRequest.ids");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.DeleteDevicesRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeleteDevicesRequest::ByteSizeLong(const MessageLite& base) {
          const DeleteDevicesRequest& this_ = static_cast<const DeleteDevicesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeleteDevicesRequest::ByteSizeLong() const {
          const DeleteDevicesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.DeleteDevicesRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string ids = 1 [json_name = "ids", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_ids().size());
              for (int i = 0, n = this_._internal_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_ids().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeleteDevicesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteDevicesRequest*>(&to_msg);
  auto& from = static_cast<const DeleteDevicesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.DeleteDevicesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ids()->MergeFrom(from._internal_ids());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteDevicesRequest::CopyFrom(const DeleteDevicesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.DeleteDevicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeleteDevicesRequest::InternalSwap(DeleteDevicesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ids_.InternalSwap(&other->_impl_.ids_);
}

::google::protobuf::Metadata DeleteDevicesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteDevicesResponse::_Internal {
 public:
};

DeleteDevicesResponse::DeleteDevicesResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:kentik.device.v202504beta2.DeleteDevicesResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeleteDevicesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::kentik::device::v202504beta2::DeleteDevicesResponse& from_msg)
      : failed_devices_{visibility, arena, from.failed_devices_},
        _cached_size_{0} {}

DeleteDevicesResponse::DeleteDevicesResponse(
    ::google::protobuf::Arena* arena,
    const DeleteDevicesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteDevicesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:kentik.device.v202504beta2.DeleteDevicesResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeleteDevicesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : failed_devices_{visibility, arena},
        _cached_size_{0} {}

inline void DeleteDevicesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeleteDevicesResponse::~DeleteDevicesResponse() {
  // @@protoc_insertion_point(destructor:kentik.device.v202504beta2.DeleteDevicesResponse)
  SharedDtor(*this);
}
inline void DeleteDevicesResponse::SharedDtor(MessageLite& self) {
  DeleteDevicesResponse& this_ = static_cast<DeleteDevicesResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* DeleteDevicesResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DeleteDevicesResponse(arena);
}
constexpr auto DeleteDevicesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DeleteDevicesResponse, _impl_.failed_devices_) +
          decltype(DeleteDevicesResponse::_impl_.failed_devices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(DeleteDevicesResponse), alignof(DeleteDevicesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DeleteDevicesResponse::PlacementNew_,
                                 sizeof(DeleteDevicesResponse),
                                 alignof(DeleteDevicesResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DeleteDevicesResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DeleteDevicesResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DeleteDevicesResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DeleteDevicesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DeleteDevicesResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DeleteDevicesResponse>(), &DeleteDevicesResponse::ByteSizeLong,
            &DeleteDevicesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DeleteDevicesResponse, _impl_._cached_size_),
        false,
    },
    &DeleteDevicesResponse::kDescriptorMethods,
    &descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DeleteDevicesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 71, 2> DeleteDevicesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::kentik::device::v202504beta2::DeleteDevicesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string failed_devices = 1 [json_name = "failedDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteDevicesResponse, _impl_.failed_devices_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string failed_devices = 1 [json_name = "failedDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    {PROTOBUF_FIELD_OFFSET(DeleteDevicesResponse, _impl_.failed_devices_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\60\16\0\0\0\0\0\0"
    "kentik.device.v202504beta2.DeleteDevicesResponse"
    "failed_devices"
  }},
};

PROTOBUF_NOINLINE void DeleteDevicesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kentik.device.v202504beta2.DeleteDevicesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.failed_devices_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DeleteDevicesResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DeleteDevicesResponse& this_ = static_cast<const DeleteDevicesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DeleteDevicesResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DeleteDevicesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:kentik.device.v202504beta2.DeleteDevicesResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string failed_devices = 1 [json_name = "failedDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
          for (int i = 0, n = this_._internal_failed_devices_size(); i < n; ++i) {
            const auto& s = this_._internal_failed_devices().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "kentik.device.v202504beta2.DeleteDevicesResponse.failed_devices");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:kentik.device.v202504beta2.DeleteDevicesResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DeleteDevicesResponse::ByteSizeLong(const MessageLite& base) {
          const DeleteDevicesResponse& this_ = static_cast<const DeleteDevicesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DeleteDevicesResponse::ByteSizeLong() const {
          const DeleteDevicesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:kentik.device.v202504beta2.DeleteDevicesResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string failed_devices = 1 [json_name = "failedDevices", (.grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_failed_devices().size());
              for (int i = 0, n = this_._internal_failed_devices().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_failed_devices().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DeleteDevicesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteDevicesResponse*>(&to_msg);
  auto& from = static_cast<const DeleteDevicesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:kentik.device.v202504beta2.DeleteDevicesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_failed_devices()->MergeFrom(from._internal_failed_devices());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteDevicesResponse::CopyFrom(const DeleteDevicesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kentik.device.v202504beta2.DeleteDevicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeleteDevicesResponse::InternalSwap(DeleteDevicesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.failed_devices_.InternalSwap(&other->_impl_.failed_devices_);
}

::google::protobuf::Metadata DeleteDevicesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v202504beta2
}  // namespace device
}  // namespace kentik
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_kentik_2fdevice_2fv202504beta2_2fdevice_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
